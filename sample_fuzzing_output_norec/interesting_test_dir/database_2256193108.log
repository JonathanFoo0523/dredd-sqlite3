-- Time: 2024/06/09 04:26:00
-- Database: database8
-- Database version: 3.40.0
-- seed value: 2256193108
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
CREATE TABLE t1 (c0 BLOB , c1 TEXT , c2 TEXT CHECK ( (- (json_patch(c4, c3)))) , c3 TEXT , c4 INT ); -- 17ms;
PRAGMA main.journal_mode; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'7d2c')) BETWEEN ((((((NULL)OR(NULL)))AND(NULL)))) AND ((((x'')|(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'27bd') NOT BETWEEN (0.701597444338353) AND (x'')))<('661144940' COLLATE NOCASE)); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-192272472 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-192272472 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((0.7613027705565205)) BETWEEN ((HEX(DISTINCT NULL))) AND ((ABS(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1320876367 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=348503689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-78527386 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1247705875 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1867886303 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(DISTINCT x'')) NOT BETWEEN (CAST(0.4813268934762658 AS NUMERIC)) AND ((('') NOT BETWEEN (NULL) AND ('1101809237')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(x'591a'))AND(CASE WHEN NULL THEN 0.7823620529084255 WHEN x'' THEN 0x60d3234b WHEN '902727320' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(NULL COLLATE NOCASE, ((((0X31187578)OR(x'')))AND('2\n,')), (('823686520') BETWEEN (0Xffffffffe87439c3) AND (0x3524c0e6)), (NULL IN ())); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ('-192272472' COLLATE BINARY IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=973803500 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1435353378 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=369764285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1860049082'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND(((('', NULL, x'', NULL, NULL)) NOT BETWEEN ((NULL, 0.7501879794917621, '112859979', x'2145', 0.6980133874973898)) AND (('0.7613027705565205', NULL, 0.9609561051416039, -1376913356, 0.7501879794917621))))))AND((((x'6852', 0.9284022588285297, 0.027520966667748614)) BETWEEN ((-753780750, 0.47161980193608144, NULL)) AND (('⚇s2}|', 'ucl뺉b,', ''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>=(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') BETWEEN ('5*]t!A>B,') AND (x''))  WHEN x'' COLLATE BINARY THEN (- (x'')) ELSE (+ (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1770426025 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1376913356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Rxj\')&(x''))) NOT BETWEEN (((('0.701597444338353'))<>((x'')))) AND (0.5035727820770576 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-1949348756' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1183407372 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1803924383 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 809453467 sz=-2130256071 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((-717485917) IS TRUE), json_remove(2026028741, '368727660')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_object(x'', NULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1982944248 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1982944248 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.11355081266254874, 0.701597444338353, '253468399')) BETWEEN ((NULL, NULL, 'Cy')) AND ((NULL, '120229740', '1770426025')))))==(((+ (NULL))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8684585629850692)) NOT BETWEEN ((NULL)) AND ((NULL))) IN ('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '757535340 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-388929152 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-567053955 -813957714 sz=-970779874'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-905100929 0 sz=902727320 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1130258935'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffe8d16980)>(x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-970779874 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1247705875) BETWEEN ('0.701597444338353') AND ('-1372465091'))) BETWEEN (CASE 0.8315461432792485  WHEN x'' THEN 'K(' ELSE '' END) AND ((((x'')) NOT BETWEEN (('CY')) AND ((0.8978716058033019))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1583645801 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.47161980193608144)OR('-717485917')))AND('-753780750')))AND('-388929152')))AND((('~QA>T9') NOT BETWEEN (0.26121494907663767) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '973803500'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((493813936, 0x7ae10dc9, NULL)) NOT BETWEEN ((((((((((0xffffffffd53c08a3)AND('0.027520966667748614')))OR(x'93c8')))AND(0.8670644574114198)))OR(x'')), ((x'898a')*('')), NULL)) AND ((LIKELY(DISTINCT '2\n,'), '0.8978716058033019' COLLATE BINARY, CASE WHEN '-190774169' THEN '0' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1101809237 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '550156078 sz=-1372465091'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=460860869 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-175796582 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0.038292053153435424 THEN '䠬J' ELSE 0.9700942176351949 END))==((TRIM(DISTINCT 4.93813936E8, x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE NOCASE IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1195094049 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8910879808181563 COLLATE NOCASE)AND(0.4279344599441537)))OR(((((((((x'')AND(x'b0ee')))OR(x'c46225b5')))AND('661144940')))AND(x'c7de')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=17764165'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-325520430 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('SòQ^'))) NOTNULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=17764165 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('902727320' IN ()), CASE WHEN 0.9700942176351949 THEN '' ELSE '1229984776' END, NULL COLLATE RTRIM))<=(((NOT (0.24336729713566885)), ((('')) NOT BETWEEN (('8粰WE\')) AND ((x'31f1'))), (((x'', x'', -493280440))<((0Xffffffffa024e38b, 0.48950013328673025, x'')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '''뾠n'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1160545293 -1284315982 sz=2125499050'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1073714113 sz=946263039'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE 0.8910879808181563  WHEN '0.48950013328673025' THEN 0.5993636370161766 END)AND(TRIM(DISTINCT x''))))AND((((1455416186))<>(('1101809237'))))))AND(((-4.9328044E8) IS TRUE))))AND((((-838843851, NULL, 1446161268, '㰼_H	~|?', NULL))<>(('-1351202523', 0.40324901659940293, 0.7501879794917621, 0.9700942176351949, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&('')))<=((~ (-7.17485917E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e999c5b3')) BETWEEN ((((NULL) NOTNULL))) AND ((((NULL) BETWEEN (-1.351202523E9) AND (0.8105556287107722))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT (x'' IN ()), ('' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-838843851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '154227195 sz=1857293836'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0Xffffffffb2037028))!=((0.03315730980603038))) THEN ((0.5035727820770576)||(NULL)) ELSE CAST('349873079' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=946263039 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=17764165 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1180930723 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=2104641615'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULLIF(NULL, '2104641615')  WHEN ((NULL) IS FALSE) THEN ((NULL)IS(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1435353378')!=(x''))) BETWEEN (((((NULL)OR('-1949348756')))OR('2125499050'))) AND (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('dH') ISNULL))&(((822736185)&('IjE죪%N?')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-960900723 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1590893621 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -905100929 sz=1878111897 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('ucl뺉b,')+('')))AND(LIKELY(0.6961318560458079))))OR('-838843851' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.5035727820770576 THEN '1450489135' END)OR(0.7613027705565205 COLLATE NOCASE)))OR(((1.133690784E9) BETWEEN (x'') AND ('-1441985206')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ABS(DISTINCT -1523945640) THEN ((((NULL)OR('Oꂕ3JG')))OR(0.7048002449921563)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN 'bgE2L''oYx' ELSE NULL END)AND(CAST(0.9631709957414686 AS INTEGER))))AND(((((NULL)OR(NULL)))AND(x'')))))OR(((0.9122569605894396) IS TRUE))))OR(CAST('-771931911' AS INTEGER))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1795512017 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-2046896872'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&(x'04a8')))+(LENGTH(NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')IS(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '822736185 -1235417291 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1675839213 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1988005503 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1882085385 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=986960913 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '6 0 sz=-987442002 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1795512017 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') ISNULL))OR(CAST(-1611327213 AS REAL))))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) IS FALSE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'd396') NOT BETWEEN (-128054687) AND (x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1513620280 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1908912886'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) NOT BETWEEN ((NULL)) AND ((''))))OR(('0.6980133874973898' IN (NULL, x'32d2')))))OR(TIME(x'102b', 0.543739772064156, 0.11355081266254874))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-844786321'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1882085385 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME('', ((x'8776')=(NULL)), COALESCE(DISTINCT 0.543739772064156, 0.025343518917355867)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2115855729 1973257222'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1810982803 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1907589789 2026028741'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-838843851 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('oLc䍐', 0.6040700462447438, '0Y%꫷'))<=((0.038292053153435424, NULL, '8粰we\')))  WHEN ((((NULL)OR(x'')))AND('-567053955')) THEN (((((((((((('')AND(x'e3aa1fe1')))AND(NULL)))AND(0.20412574684405949)))AND(0Xffffffffe1c5e387)))AND('2026028741')))AND(NULL)) WHEN (('-916678589') ISNULL) THEN CASE WHEN NULL THEN 511101426 ELSE '1736550088' END WHEN (('') IS FALSE) THEN CASE WHEN '-1275252381' THEN '㰼_H	~|?' END ELSE (((0.4926841790567751, '1770426025', 0.8398040016855323))<>(('0.8684585629850692', 'bge2l''oyx', 0.8315461432792485))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (x'cd27')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=823686520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2046061374'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-528145066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('348503689') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 sz=1545148715'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.20412574684405949') NOTNULL)) NOT BETWEEN (CASE WHEN NULL THEN '-1608195189' ELSE '661144940' END) AND (((NULL)>=('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'mX'  WHEN -3.95036221E8 THEN x'62cb' ELSE 0.7109043779444069 END) NOT BETWEEN ('946263039' COLLATE BINARY) AND (CAST(1.101809237E9 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-148749172'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1605606851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1247705875 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((~ (0x7e1d6571)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'5033268a')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(CAST(0Xfffffffffb4b4d1d AS TEXT), ((0.14072695655164646)AND('7920257'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract('-446457508', '', NULL, x''))>(((-78527386)+('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('	>+<')OR(x'')))AND('1230414899')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((0.7592857181908824) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1523945640 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=823686520 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((NULL IN (x'', NULL)), 0.7441597543791794); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1906807280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.5993636370161766) NOT BETWEEN (RTRIM(0x3a0b0fec)) AND (CAST(x'a1b8' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('L逤') BETWEEN ('v6sw*') AND ('0.8398040016855323')) THEN ((NULL)IS(0.9626958447140206)) ELSE ((((x'5bb3')AND(x'3d14')))OR(0.8910879808181563)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE RTRIM AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1916071080 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(NULL)))OR(0.35973710644337153)))||((+ ('eIᢰcy''tk')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=946263039 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=768850636 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((-4.41497556E8)AND('1')))AND(528468340)))AND(0.9082629038836235)))AND(0.7109043779444069)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1444039007 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'')IS(NULL)), ('1795512017' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.9284022588285297')OR(x'')))OR('902727320'))) BETWEEN ((('5N\r\r')IS(NULL))) AND (((((NULL)OR(NULL)))AND('k5gg\nn*O')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=499658807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 0 sz=1850177645'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=112859979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.23580472076071113; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)>>((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN x'' THEN 8.91601126E8 WHEN NULL THEN x'e85f69ba' WHEN x'' THEN 0.8978716058033019 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 2 sz=599090801 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1982944248 sz=1492660871 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=590897806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 0 sz=-1239068585 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<((((((((((NULL)AND('')))AND(NULL)))AND(1039371779)))AND(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '967226144 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=66477169'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0Xffffffff83e95f5c  WHEN '902727320' THEN 0.9122569605894396 WHEN '1383356912' THEN NULL WHEN 0Xffffffffe5af482c THEN x'' ELSE x'8ae2' END THEN CASE NULL  WHEN '.j\<-?' THEN x'd819' ELSE NULL END WHEN -1619622756 THEN CASE x''  WHEN NULL THEN 0.6924782567059061 END WHEN CAST('' AS INTEGER) THEN (x'15a1' IN ()) ELSE NULL COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2091802401 sz=-143593547 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=1354630371 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7136810478386096) NOT BETWEEN (0.7522769572215533) AND ('')) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1401519311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(NULL, ((0X6009e559) NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE x''  WHEN x'5315' THEN 0.4315862758096515 WHEN 0xf1b9eef THEN 0.44587051471985306 WHEN '*[鼕' THEN NULL ELSE '493813936' END)AND(((x'')<=('gs')))))OR(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB('*\rP>02T{}')))IS NOT((('8粰WE\')LIKE(0.8670644574114198)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-78527386 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -78527386 sz=-746586365'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0葩x2')<=(x'')))OR(CASE WHEN '1336403137' THEN -1523945640 WHEN '76' THEN '807015313' WHEN x'' THEN x'dba9' ELSE x'' END)))OR(((0.7616260772982116) IS TRUE))))AND((('1448528873')<<('-339845251')))))OR(CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1433318113' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1099899918 -9223372036854775808 sz=1133690784 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'690d')<<(0.48950013328673025)) THEN (+ ('Q0')) WHEN (((('')OR(NULL)))AND(x'')) THEN ((NULL) ISNULL) WHEN (+ (NULL)) THEN CAST(0.09324134340028212 AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1754152985'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1624449867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '2 sz=2039387287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=620195161 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-1960793603 sz=253468399'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=1340896411'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.5517663464391547) NOT BETWEEN (0.5533729942171746) AND (2.53468399E8)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-697003917 sz=-989112369'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-190774169 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '593003197 472377093 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-960900723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '757535340 1562173307 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1988005503 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1770426025 sz=-717485917 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=891601126'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '901378196 sz=1702588037'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1641512112 -1143924386 sz=-876184666'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((x'')) AND (('p(LStLS'))))<('1580482288' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1308397528 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xfffffffffa3e51a0) NOT BETWEEN ('4[mk&F') AND (825828999)) THEN (((('0.4279344599441537')AND(x'08c3')))OR(0.5702617066517336)) WHEN CAST('' AS TEXT) THEN (('-1300998121') NOT BETWEEN (-1195094049) AND (0.9000358785404657)) WHEN ('' IN (0.14979920340673758, 0xffffffffb8e1196b)) THEN ((0.11081813325899337)>=(0.7443318178550664)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-325520430 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1198281698 0 sz=966087466 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.0655246079218661)&(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2036300580 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('㔦daysy')<=(0X4839765f)))!=(((x'') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 0 sz=1825145831 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'8b13')) BETWEEN ((x'1309')) AND ((0.20843314974195926))))=(((((0.23580472076071113)OR(x'')))AND(0.027520966667748614)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 -158743273 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '1733906565 sz=-2070873158 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.026028741E9, -1038790026, NULL, ',6N)Xl8f', NULL)) NOT BETWEEN ((NULL, 'mX', NULL, '-1495049639', NULL)) AND ((x'', NULL, NULL, NULL, 0.9609561051416039)))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=-437896563 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=493813936'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=825828999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1882085385 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.8978716058033019' AS REAL)) BETWEEN ((('-1376913356')<>(0.8684585629850692))) AND (COALESCE('257739861', 0Xffffffff8bcf4c6c, 9.86960913E8, x''))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 -1339270322 sz=-81682114 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=514158330 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1480762577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'4fb7', '')) NOT BETWEEN (((((x''))<(('1229984776'))), (('661144940')=(NULL)), (- (0.6619767343045263)))) AND ((CAST(NULL AS REAL), CAST(-9.70779874E8 AS TEXT), CAST('-970779874' AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.53468399E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '4 2 sz=-107311181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '386823939 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND((+ (0.9815563914347906)))))AND(QUOTE('-109331184'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2069110010'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('-1e500', 0.015331301152933685)) BETWEEN ((((('⽈O')OR(x'')))AND(0X71cdbeef))) AND ('-1372465091' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')IS(77188493)))GLOB(CASE -1115024460  WHEN NULL THEN 'Jka⼔&L*ꓓ~' ELSE 1.908912886E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-350105763 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'mn' THEN 0.7936460434655148 ELSE x'' END) NOT BETWEEN (((NULL)<>(0.7203528085007344))) AND (((2037785800) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1532529648'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-838843851 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>>('_--쏃ឌRw')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=946263039 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1198498940 730647525 -1608195189 sz=1964034728 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=684136935 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-1195094049 sz=1575776009 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1284315982 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'') BETWEEN (0.8702586940653861) AND (x'')))OR(CASE WHEN x'433a' THEN '~1' WHEN NULL THEN x'' WHEN '0.8315461432792485' THEN '-1716439733' ELSE '805737016' END)))AND(((NULL) BETWEEN (NULL) AND (x'')))))AND(CASE 'EV]o㲳start of dayn'  WHEN 0.20843314974195926 THEN NULL ELSE x'' END)))AND(NULL COLLATE RTRIM)))OR(x'18f1')))AND((((0X1d6f00b0)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2086568340 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '595515759 0 sz=228457361'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '766510594 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1183407372')<=(NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X303f479b; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1762670612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (1393547671))) BETWEEN (((0.36384676686898654) NOT BETWEEN (NULL) AND (x''))) AND ('_{}' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1878111897 sz=-254341427 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.545279647172932) BETWEEN (NULL) AND (x'834c318a')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '120229740 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(-9223372036854775808 AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1641512112 sz=368727660 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7173194607205565, 0.43029511304138646, x'')) NOT BETWEEN (('2vc\rOn', NULL, 'n6gl!')) AND ((0.7066581339095213, 0.8473217757180252, ''))))<(((((NULL)OR(x'')))OR('^ 7镯')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-21091869 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)>>('')))OR(CASE WHEN x'' THEN '253468399' END)))AND(((0.8848011126103269) ISNULL))))AND(x'')))OR('0.8105556287107722')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '1341753625 -1015892891 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-753780750 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-945693169 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (NULL)) THEN (x'5e6c' IN ()) ELSE (0.4557574035875902 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1641512112 sz=-1870640858'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '1320876367 sz=-315280091 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1220872024 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2016561423 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2102745461 -455167418 sz=1314681790 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (('0葩x2' IN ()))); -- 9ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 sz=1649517407'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>>('120229740')))<>(((NULL)||(x'3d97')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1083444645 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1337698703 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1587152130 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=914877850 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-166953943'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(0.4160815544329244) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1292743292 0 sz=1971388658 noskipscan'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=198166762 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1782258085'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '175928163 sz=-122128234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1908912886 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2047873221; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1807173659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1266370674 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-78527386 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '' THEN 0.038416466175244524 ELSE NULL END  WHEN 'f>5G' THEN ((NULL) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1301847218')<=(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffde33717d) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1971388658 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-192272472'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-748958808 -1523945640 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('') AND (NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2035347081 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ (0x1ded5aa8)))OR((((('2125499050')AND(NULL)))AND(0.017810800237229807)))))OR((~ ('349873079')))))OR((0.8684585629850692 IN ('749976243')))))OR(0.35215560142454627)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=-1590893621 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=382174048 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1476118633 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN NULL THEN x'' END)AND((+ (-1160545293)))))OR(((0x1565c539)!=('v1*|	*')))))AND(((-9.60900723E8) BETWEEN ('wò') AND ('871497772')))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=198166762 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xffffffffce004235)LIKE('-1893771222'))  WHEN (((x''))<=((x''))) THEN ABS(DISTINCT 0.7554964508798799) ELSE CASE 8.25828999E8  WHEN NULL THEN '0.26121494907663767' ELSE NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 7.61241749E8 THEN '515036832' WHEN x'' THEN NULL WHEN '-991283712' THEN 0.856964909712239 ELSE '_a,Yel1EM' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9461999308939191) IS FALSE) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1618651999'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-342086536 IN (-1.988005503E9))) BETWEEN (((NULL)>(0.7136810478386096))) AND ((('~{jZ▂.') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR((('9Y\r]su')>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1949348756 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1993085499'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.08024106560735089 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=154060851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2014429084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '1477770433 sz=1314853215 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 1202593136 sz=-1184932681 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1308397528'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULLIF('W', '-927838598') AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS BLOB) COLLATE BINARY COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR((+ (NULL)))))AND('112859979' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1877034125 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1611327213'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (x'8d11')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '902591963 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1377481546 -1621134613 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=822736185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-403792718 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.06434397334483466)) BETWEEN (((((NULL))>=((NULL))))) AND ((((('-1500188727')) NOT BETWEEN ((2064235854)) AND ((0.48945184182869206)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1867886303'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)GLOB(0.7119794948148551)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-803577633 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL))+((- ('1247705875')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1320876367'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-753780750 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL, 0X6ecd11b2)))IS NOT(CASE WHEN '-190774169' THEN NULL ELSE -1376913356 END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=891601126 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-960900723'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffffb04ba889)GLOB(0.8848011126103269)))AND((('gs')IS NOT(-1312154645)))))AND(((('120229740')) BETWEEN (('761241749')) AND ((0.4884202324830478))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1254681025 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ROUND(NULL, 'jK+㻌')  WHEN '-156298291' THEN CASE WHEN 0.7109043779444069 THEN '0.7066581339095213' END WHEN (x'' IN ()) THEN '0.7936460434655148' WHEN (('+P')*(1857293836)) THEN (('-1658004643')OR(0.6980133874973898)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1433141667 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-1171827001'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=-1945558722 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('-1160545293' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.14301602405444835)LIKE(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('畸e') IS TRUE), 0.812691702867211); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(1.101809237E9)) NOT BETWEEN (CASE NULL  WHEN NULL THEN 'sH' END) AND (CAST(0.6062387805676466 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-578841266' IN ('2104641615', 0xffffffffd56dda40)))<((+ (x'0187')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=513869339'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1174815061 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1224480084'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1627723298 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.017810800237229807) ISNULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '-388929152 368727660 sz=-1195094049 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CASE WHEN 0.9582106024338333 THEN x'' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1988005503 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-2140386918'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=2082179122 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1282583899 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')%(0.8018673154321618)) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('0.5702617066517336') IS FALSE))!=(UNICODE('1858870943'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')|(x'')))AND((('-1590893621')<>(x'')))))AND((0.7807956201398003 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.8986754770592225)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(DISTINCT '0.4926841790567751'))OR(NULL)))AND((+ ('1813494600')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-2130256071' THEN x'' ELSE '' END COLLATE BINARY COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 2 sz=2055652936 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN (CASE WHEN 0.5304001295311395 THEN '-248798534' END) AND (json_insert(NULL, '', NULL, -1308397528, 0.6727745951881138, 0.545279647172932, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2 sz=-1222406581 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((0.29956222861715964 IN ()), ((0.04822281666616346) IS FALSE), (('661144940')+(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1183407372 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.405785784366543 THEN 0.856964909712239 WHEN NULL THEN 0.2659784093300124 WHEN 0.09843499197984629 THEN 0.48167620093973007 ELSE 0.029033195372688114 END)GLOB((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-713308382 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1674885529'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-1478214541 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-917132651 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1693834507 sz=1733775864'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(CASE 1.133690784E9  WHEN '-1629601484' THEN x'3917' END, (((0.7152212102871088))<(('f'))), ((((0.8403748112202731)AND('-960900723')))AND(NULL)), ('5y*6[' IN ()), NULL COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1763573218'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1547854742 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0.17429501983591134 THEN NULL ELSE '-1235417291' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 973803500 sz=547092236 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-838843851 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2093261211 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('809453467')LIKE(NULL)))OR(CASE WHEN '1760544140' THEN NULL ELSE NULL END)))OR((x'' IN ()))))OR(CASE x'c14be499'  WHEN 0X24cf4eb0 THEN 0.23580472076071113 ELSE x'' END)))AND('p' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9855988368376112) NOTNULL))GLOB(STRFTIME('.Da]1\r^', 0X466392a3, x'b898'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1820159034'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-113311208 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1308874184 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((2.12549905E9)AND(x'')))AND('_K')))OR('+[D	r C]')))AND('7920257')))OR((NOT (0.015342965005931242)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=198166762 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('F') AND (x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'5588')&(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION() COLLATE NOCASE; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.5207442070924355) NOT BETWEEN ('-2099325126') AND ('n?!r\r')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -1440485043'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ((- (253468399)), ((NULL)GLOB('-2002220945')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-1777438613' AS NUMERIC), (- (NULL)), (((x''))>(('jU嗧ivY+')))))<(((~ (x'04ed')), 0.24151316151440072, (((x''))=(('2115855729')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4314064749130697)) NOT BETWEEN ((((((((((NULL)AND(x'')))AND(NULL)))AND('AEn}DW')))AND(NULL)))) AND (('0.9000358785404657' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('')) COLLATE BINARY; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.04811356571468106)AND(-1.372465091E9)))OR(x'055a')) IN (0Xffffffffca0d417f COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-247136306 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1882422277 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SUBSTR(('' IN (0.543739772064156)), (('1322416995')LIKE(0.5541931688933641))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=787622066 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CAST(1225212764 AS NUMERIC) IN ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '2 sz=-2112856461 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-446375075 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-145012693'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1413165179'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1857293836'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.6999436222207371)) IN (x'3e92' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.871596027995608)) NOT BETWEEN ((x'')) AND (('2LK{l.~,'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=656541176 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1608195189 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-388929152 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE BINARY)AND(((-1)/('*\rp>02t{}')))))OR((+ ('809453467')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1227180828 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT ('632626023')) THEN TYPEOF('NY') WHEN '891601126' THEN (((('-970779874')AND('')))OR('')) WHEN 0.7745088135775826 COLLATE BINARY THEN (~ (0.0064718503141126815)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1648609057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1803775929 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1940081227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=112859979 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1180930723 sz=1925114128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX('-771931911' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(0.8315461432792485)))OR(x'')))OR(x'')))AND(0.10694723859924782))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=-240314883 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1235417291 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '2 0 sz=1612040683 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '0 sz=-1851035623 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 2 sz=825828999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.101809237E9)-(((0.13668637766482794)>=(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((((((('')OR(-3.88929152E8)))OR(-325520430)))OR(NULL)))OR(0x3e4b23d7)))AND('661144940')))OR(NULL)) THEN (- (0x78f90c0e)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-328130561 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1488985706 sz=-1410939052'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1446161268')) BETWEEN (('e螿')) AND ((0Xffffffffddeb8b23))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1416072455 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=-1268086258 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-339862949'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2015167554 sz=-753780750 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1970416132 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-1e500)AND(0Xffffffffe31d7da2)))OR(1949114714)))OR(NULLIF(DISTINCT '-175796582', 0.815238275702102))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-2064554952 2059850596 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-833024376'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-376596940 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1971388658 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=320746590 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS BLOB))OR(NULL COLLATE RTRIM)))AND(LIKELY(DISTINCT '-517275530'))))AND(((NULL)>>(x'')))))OR('' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 0 sz=1244348933'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.23765002826155168)) BETWEEN (('픛Zꉙ')) AND ((x''))))=('mn' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'4a30' COLLATE BINARY) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME('Y,', ((NULL) NOT BETWEEN ('0.027520966667748614') AND (-190774169)), 0X6b0556d1 COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1445913513 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=349539932'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1340678749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE x'0f43'  WHEN x'727ea0e6' THEN '' WHEN NULL THEN '1860049082' WHEN '' THEN '-126613741' ELSE x'' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1806437087 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1047227239)/('-1803924383')))<<(TRIM(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'' IN ())  WHEN ((-175796582)>(x'')) THEN NULL ELSE (~ (NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1264883747'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1376913356 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')||(CASE '1382791485'  WHEN NULL THEN 1602320265 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-128054687') IS FALSE))<>(((x'')>(0.4786107385333933)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', '1957846386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Y,' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=951707978 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4279344599441537)<<('-1982944248')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=712464863'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'22f2')<=('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xbe9b032)AND((('-562311996')OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'cf2934a2') NOT BETWEEN (x'') AND ('-2046896872')))IS NOT(CASE WHEN '-78527386' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-184742629)LIKE('-1337804569')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '349873079 sz=-1739951057'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(x'' AS TEXT), ((-1198345998) ISNULL), (((('1982922355')OR(0.32341443905562484)))OR(x'e4c2'))))<=(((((((((('뢊oA~fh疩^')OR(0.7613027705565205)))AND('1e500')))AND('-28800063')))AND('Kw?')), (('&1p') BETWEEN (3.49873079E8) AND (0.5129424266402577)), 0.26146875870740804))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('\')|(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('112859979' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-717485917 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1624449867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.12127771328959125)) NOT BETWEEN ((((((((((x'')OR(NULL)))OR(x'')))AND(x'')))AND(x'1c79')))) AND ((((x'15ec') NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(0.7563877636615837)))OR(NULL)))OR('')))OR('K9|fQ0uj')))IS NOT(UPPER('G8'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-1269447336 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY(NULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=88569935 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.28938402394815044) NOTNULL))>=((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE 0.1285737600584519  WHEN x'' THEN 0.38223947000548053 END  WHEN CASE ''  WHEN NULL THEN x'' END THEN ((369231785)|(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-3960450 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1641512112 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1244309377 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=1857293836 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-2063566514 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('761241749') NOT NULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1689871844 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=792675024 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1154420553 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT ((((((((x'3ddd')AND(NULL)))OR(x'')))OR(0Xffffffffcf7bfdae)))AND('?0q)X'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN 0.15309119513528002 THEN 0.9284022588285297 ELSE 0.1004047258915789 END THEN ((((NULL)AND('R⚋')))AND(0.22162259922358196)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 sz=-1245372744 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN 8.22736185E8 THEN '-960900723' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1918831872'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-2130256071 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1660144806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-480514836 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1117499236'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (1261884326))) BETWEEN ((NULL IN ())) AND (-1421728211 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1969833064 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN ((('1239921533')) BETWEEN ((0.5063261860518561)) AND ((0.43029511304138646))) THEN ((('FK5')) BETWEEN ((0X49501408)) AND ((0.2748098157817189))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=156078058'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1847856311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=-489664970'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN x'' THEN '' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-844786321 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 sz=-1372465091'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0X51a8e985 THEN x'e74f' END AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) NOT BETWEEN (x'897d4f6a') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'e456' COLLATE BINARY THEN ((0.7936460434655148) ISNULL) WHEN CAST(0.545279647172932 AS BLOB) THEN NULL COLLATE BINARY WHEN LOWER(-753780750) THEN LIKELY(DISTINCT 1.133690784E9) ELSE (NOT (0X69868ea9)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN (CAST(0X3c285ce9 AS INTEGER)) AND ((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '0 sz=1288064722 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1361373972 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' sz=1107144475'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '-1700689962 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX(LENGTH('hDdU!'), '940269621'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', x'5501', -1.608195189E9))!=((NULL, NULL, '-1830409209')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1860289476 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-325520430 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('㫛') BETWEEN (x'') AND (NULL)))OR((NOT (x'')))))OR(UNLIKELY(DISTINCT x'fad4'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1520590680 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'')OR(x'3a95')))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1418347501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN HEX(NULL) THEN HEX(DISTINCT 0.6621388923967163) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', '-973394424 sz=1624449867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-171254908' AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1828045729 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-492428320 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '0 sz=1229984776 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'e+vH|%*'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', '688870540 sz=-78527386 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=1878111897 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '761241749 sz=1320876367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((ROUND(NULL, ''))AND((('')&('348503689')))))AND(((((x'')OR(x'4fdc')))AND('')))))OR(CAST(x'' AS NUMERIC))))AND(json_array(x'', '-960900723'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2046896872 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-987946761 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1059876432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 't1', ' sz=55159669 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't1', '-1160545293 -1224196101 sz=1256729806 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LTRIM(NULL))AND('-1351202523')))OR(COALESCE('654475795', 1641512112))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=1736108407 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=-59678049'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((+ ('⍋\'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'null', ' sz=253468399'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1665325084 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1101809237'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1857293836 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt0', ' sz=1628550400 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE t1 SET c1=0.8848011126103269; -- 1ms;
ANALYZE; -- 1ms;
COMMIT; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (NULL, -844786321, 0.2392481374963148); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 10ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'rt1', ' sz=295609306'); -- 1ms;
CREATE INDEX IF NOT EXISTS i18 ON t1(((((c2) NOT BETWEEN (c3) AND (c2))) NOT NULL),((x'') IS TRUE),((((c2)<(c3)))!=(HEX(c0))),PRINTF(LIKE(c0, c4, 'j')),(((c3)) NOT BETWEEN ((((c2) NOT BETWEEN (c1) AND (c4)))) AND ((((((c0)AND(c2)))AND(c0))))) ASC) WHERE ((ABS(c3)) NOTNULL); -- 0ms;
CREATE INDEX i82 ON t1(x'' ASC,CASE WHEN c2 THEN c1 END COLLATE RTRIM COLLATE BINARY,((CAST(c1 AS NUMERIC)) NOT NULL) COLLATE NOCASE,((CAST(c0 AS REAL))/((c0 IN (c0, c1)))) DESC,((CAST(c4 AS BLOB)) NOT BETWEEN (((c3)<=(c2))) AND (('486516720' IN ()))) COLLATE NOCASE DESC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i93 ON t1((((c4)) BETWEEN ((HEX(DISTINCT c1))) AND (((((('3>~vJ9O')OR(c1)))OR(c1))))) COLLATE RTRIM,(((c2)) BETWEEN (('')) AND ((((c3) ISNULL)))) COLLATE RTRIM,'E^[b?2Sb' COLLATE RTRIM ASC,c0 COLLATE RTRIM,((((c1) IS FALSE))LIKE((- (c0)))) ASC); -- 0ms;
CREATE INDEX IF NOT EXISTS i48 ON t1(MIN(((c2)&(c2)), (c3 IN ()), ((c1) NOTNULL), ((c4)OR(c3))) COLLATE NOCASE,(CAST(c4 AS TEXT) IN ()) COLLATE BINARY,CASE ((c1) NOTNULL)  WHEN c4 THEN (- (c4)) WHEN ((c4)*(c0)) THEN highlight(c2, c1, c2, c2) WHEN c1 THEN CASE c3  WHEN c2 THEN -1.676549854E9 ELSE c1 END ELSE CAST(c3 AS NUMERIC) END COLLATE RTRIM DESC,0.6341529711580621 COLLATE BINARY DESC,(((c4)) BETWEEN ((((c2) NOTNULL))) AND (((c0 IN ())))) COLLATE NOCASE) WHERE CAST(NULL AS REAL) COLLATE NOCASE; -- 1ms;
CREATE UNIQUE INDEX i80 ON t1((LOWER(c1) IN (c2)) COLLATE NOCASE DESC,((('-1583052154') NOTNULL) IN ((((c0))>((c2))))) ASC,CASE ((c0)>(c1))  WHEN NULL THEN ((c3)/(c0)) END COLLATE RTRIM DESC,((c4)LIKE(((c1) NOT BETWEEN (c1) AND (c2)))) ASC,x'') WHERE NULL; -- 0ms;
CREATE UNIQUE INDEX i10 ON t1((((c4)) BETWEEN ((((NULL)|(c1)))) AND ((TRIM(DISTINCT x'83db', c3)))) COLLATE RTRIM DESC,x'' COLLATE BINARY,(((c0, x'52cd', c4)) BETWEEN ((json_insert(c2, c2, c4, c4, c4, '0.7048002449921563', c4, c4, c3), CASE WHEN c2 THEN c3 ELSE c3 END, ((c1)>=(x'')))) AND ((((c0) NOTNULL), COALESCE(DISTINCT c1, NULL), ((c1) IS TRUE)))) ASC,((((((c1)) NOT BETWEEN ((c1)) AND ((c4))), 0.05452389997422091 COLLATE RTRIM, ((0xffffffff8bcf4c6c) NOT NULL)))<((((c1)!=('edY膔Yy~6')), (c0 IN ()), (((c3)) BETWEEN ((c1)) AND ((c0)))))) COLLATE BINARY ASC,((c2 COLLATE RTRIM) NOT BETWEEN (CASE WHEN c3 THEN c1 END) AND (CASE WHEN c3 THEN c1 END)) COLLATE RTRIM ASC) WHERE ((CAST(c2 AS TEXT))-((c4 IN ()))); -- 0ms;
ANALYZE i82; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1) VALUES (NULL, x'bdb5'); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i21 ON t1((- (((((((((((((c2)AND(c0)))OR(c3)))OR(c0)))AND(c3)))OR(c3)))OR(c4)))) ASC,0xfffffffffafe5fab COLLATE RTRIM DESC,PRINTF(((c4) IS FALSE)) COLLATE RTRIM,COALESCE(DISTINCT (~ (c1)), ((c0)>>(c4))),(('1710273176') BETWEEN ((c1 IN ())) AND (c1)) ASC) WHERE (((((c2, c4, c3)) NOT BETWEEN ((c2, c2, c2)) AND ((c2, c2, 0.021684007895819035)))) NOT BETWEEN (c2 COLLATE RTRIM) AND (NULL)); -- 1ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c0) VALUES ('639753839'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
INSERT OR FAIL INTO t1(c3, c2, c4, c1) VALUES ('', 0.9456747913541877, NULL, 0.8392968518740767); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (NULL, NULL, 1711926378, 0.44800545887685694, 'V	'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES ('BIk50', '', x''); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES ('I!', '368727660'); -- 1ms;
UPDATE OR IGNORE t1 SET (c1)=('198166762') WHERE (((t1.c4 IN (0.6727745951881138))) ISNULL); -- 1ms;
PRAGMA wal_autocheckpoint; -- 0ms;
ANALYZE main; -- 11ms;
ALTER TABLE t1 ADD COLUMN c12 INTEGER; -- 0ms;
PRAGMA temp.foreign_keys = false; -- 0ms;
CREATE TEMPORARY VIEW v0(c0, c1, c2) AS SELECT ALL ((((t1.c4) BETWEEN (rt0.c5) AND (rt1.c0)))==((((rt0.c4))!=((t1.c2))))), CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN COUNT(*) WHEN highlight(rt1.c1, t1.c1, t1.c4, rt0.c2) THEN TIME(rt0.c5, rt0.c5, t1.c0) WHEN (~ (rt1.c1)) THEN ((rt0.c0) IS FALSE) END, (((CASE rt1.c1  WHEN t1.c3 THEN t1.c4 END))>=((UNICODE(rt0.c0)))) FROM rt1, rt0, t1 WHERE (((((((((NULL)OR(x'')))OR('0.038292053153435424')))AND((((0xffffffff8dc8ff0e, NULL, '~1')) NOT BETWEEN ((x'e765', 0.8107568511914387, NULL)) AND ((1021027811, x'c84f', 0.683103690136532))))))AND(((((((((0.36753893814479055)AND(NULL)))OR(NULL)))AND(x'3292')))OR(0Xffffffffbad37bf3))))) LIMIT 461627483 OFFSET 1971388658; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (0X3d7c0df5, -1.590893621E9, 1534879921); -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE rt0 SET (c4)=(x''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM v0, rt0 WHERE ((((TOTAL_CHANGES()))!=((CASE WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER), x''  NULLS FIRST, (- ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))!=((CASE WHEN rt0.c4 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER), x''  NULLS FIRST, (- ((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((TOTAL_CHANGES()))!=((CASE WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER), x''  NULLS FIRST, (- ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((TOTAL_CHANGES()))!=((CASE WHEN rt0.c4 THEN rt0.c3 END)))) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER), x''  NULLS FIRST, (- ((+ (rt0.c2)))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE ((((TOTAL_CHANGES()))!=((CASE WHEN rt0.c4 THEN rt0.c3 END)))) ORDER BY CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) AS INTEGER), x''  NULLS FIRST, (- ((+ (rt0.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON (~ (rt1.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((json_object(rt1.c1, t1.c1, 'ZK', t1.c1))LIKE(t1.c0)) WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (- (NULL)) WHEN NULL THEN t1.c3 COLLATE NOCASE WHEN ((t1.c1)+(t1.c4)) THEN t1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN (- (NULL)) WHEN NULL THEN t1.c3 COLLATE NOCASE WHEN ((t1.c1)+(t1.c4)) THEN t1.c1 END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON (~ (rt1.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((json_object(rt1.c1, t1.c1, 'ZK', t1.c1))LIKE(t1.c0)));
SELECT COUNT(*) FROM v0 INNER JOIN t1 ON (~ (rt1.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((json_object(rt1.c1, t1.c1, 'ZK', t1.c1))LIKE(t1.c0)) WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (- (NULL)) WHEN NULL THEN t1.c3 COLLATE NOCASE WHEN ((t1.c1)+(t1.c4)) THEN t1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN (- (NULL)) WHEN NULL THEN t1.c3 COLLATE NOCASE WHEN ((t1.c1)+(t1.c4)) THEN t1.c1 END) IS TRUE)  as count FROM v0 INNER JOIN t1 ON (~ (rt1.c1)) COLLATE RTRIM FULL OUTER JOIN rt1 ON ((json_object(rt1.c1, t1.c1, 'ZK', t1.c1))LIKE(t1.c0)));
SELECT ALL * FROM v0, rt1 WHERE ('1643908942') ORDER BY ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('1643908942') IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0, rt1 WHERE ('1643908942') ORDER BY ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (('1643908942') IS TRUE)  as count FROM v0, rt1 ORDER BY ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM v0, rt1 WHERE ('1643908942') ORDER BY ((rt1.c0) BETWEEN (v0.c1) AND (rt1.c2)) COLLATE RTRIM;
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((t1.c0 IN ())) ORDER BY rt0.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY rt0.c6  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((t1.c0 IN ())) ORDER BY rt0.c6  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t1.c0 IN ())) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY rt0.c6  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 NATURAL JOIN rt0 WHERE ((t1.c0 IN ())) ORDER BY rt0.c6  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON HEX(((t1.c1)/(v0.c0))) FULL OUTER JOIN t1 ON CAST(((rt1.c0)<(t1.c2)) AS BLOB) WHERE (((198939645) BETWEEN (t1.c3) AND (CAST(t1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((198939645) BETWEEN (t1.c3) AND (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON HEX(((t1.c1)/(v0.c0))) FULL OUTER JOIN t1 ON CAST(((rt1.c0)<(t1.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON HEX(((t1.c1)/(v0.c0))) FULL OUTER JOIN t1 ON CAST(((rt1.c0)<(t1.c2)) AS BLOB) WHERE (((198939645) BETWEEN (t1.c3) AND (CAST(t1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((198939645) BETWEEN (t1.c3) AND (CAST(t1.c2 AS BLOB)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON HEX(((t1.c1)/(v0.c0))) FULL OUTER JOIN t1 ON CAST(((rt1.c0)<(t1.c2)) AS BLOB));
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN rt0.c6 ELSE rt0.c0 END)) AND ((((((((((rt0.c0)AND(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN rt0.c6 ELSE rt0.c0 END)) AND ((((((((((rt0.c0)AND(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c6)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN rt0.c6 ELSE rt0.c0 END)) AND ((((((((((rt0.c0)AND(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c6))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN rt0.c6 ELSE rt0.c0 END)) AND ((((((((((rt0.c0)AND(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c6)))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN rt0.c6 ELSE rt0.c0 END)) AND ((((((((((rt0.c0)AND(v0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c6))))));
SELECT * FROM rt0, v0, rt1, t1 WHERE (((((t1.c1)%(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)%(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT * FROM rt0, v0, rt1, t1 WHERE (((((t1.c1)%(rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)%(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT * FROM rt0, v0, rt1, t1 WHERE (((((t1.c1)%(rt0.c1))) NOTNULL));
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((('-1940519217')AND(CAST(t1.c3 AS BLOB))))OR(((t1.c0) BETWEEN (t1.c3) AND ('')))) INNER JOIN rt1 ON (((((rt0.c3))>((rt0.c4))))-(((t1.c4) ISNULL))) FULL OUTER JOIN t1 ON CASE WHEN CAST(t1.c12 AS NUMERIC) THEN ((t1.c1) NOTNULL) END WHERE (CASE WHEN (~ (rt1.c1)) THEN (~ (rt1.c1)) ELSE (((t1.c0))<>((rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c1)) THEN (~ (rt1.c1)) ELSE (((t1.c0))<>((rt1.c0))) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((('-1940519217')AND(CAST(t1.c3 AS BLOB))))OR(((t1.c0) BETWEEN (t1.c3) AND ('')))) INNER JOIN rt1 ON (((((rt0.c3))>((rt0.c4))))-(((t1.c4) ISNULL))) FULL OUTER JOIN t1 ON CASE WHEN CAST(t1.c12 AS NUMERIC) THEN ((t1.c1) NOTNULL) END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (((('-1940519217')AND(CAST(t1.c3 AS BLOB))))OR(((t1.c0) BETWEEN (t1.c3) AND ('')))) INNER JOIN rt1 ON (((((rt0.c3))>((rt0.c4))))-(((t1.c4) ISNULL))) FULL OUTER JOIN t1 ON CASE WHEN CAST(t1.c12 AS NUMERIC) THEN ((t1.c1) NOTNULL) END WHERE (CASE WHEN (~ (rt1.c1)) THEN (~ (rt1.c1)) ELSE (((t1.c0))<>((rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (rt1.c1)) THEN (~ (rt1.c1)) ELSE (((t1.c0))<>((rt1.c0))) END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (((('-1940519217')AND(CAST(t1.c3 AS BLOB))))OR(((t1.c0) BETWEEN (t1.c3) AND ('')))) INNER JOIN rt1 ON (((((rt0.c3))>((rt0.c4))))-(((t1.c4) ISNULL))) FULL OUTER JOIN t1 ON CASE WHEN CAST(t1.c12 AS NUMERIC) THEN ((t1.c1) NOTNULL) END);
SELECT * FROM v0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (rt0.c5);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((CAST('7920257' AS REAL))OR((rt0.c4 IN ()))))AND(((1.2022974E8) NOT BETWEEN (rt0.c6) AND (rt0.c4)))))AND(CAST(v0.c1 AS INTEGER))))AND(ABS(DISTINCT v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST('7920257' AS REAL))OR((rt0.c4 IN ()))))AND(((1.2022974E8) NOT BETWEEN (rt0.c6) AND (rt0.c4)))))AND(CAST(v0.c1 AS INTEGER))))AND(ABS(DISTINCT v0.c1)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((CAST('7920257' AS REAL))OR((rt0.c4 IN ()))))AND(((1.2022974E8) NOT BETWEEN (rt0.c6) AND (rt0.c4)))))AND(CAST(v0.c1 AS INTEGER))))AND(ABS(DISTINCT v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST('7920257' AS REAL))OR((rt0.c4 IN ()))))AND(((1.2022974E8) NOT BETWEEN (rt0.c6) AND (rt0.c4)))))AND(CAST(v0.c1 AS INTEGER))))AND(ABS(DISTINCT v0.c1)))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE (((((((((CAST('7920257' AS REAL))OR((rt0.c4 IN ()))))AND(((1.2022974E8) NOT BETWEEN (rt0.c6) AND (rt0.c4)))))AND(CAST(v0.c1 AS INTEGER))))AND(ABS(DISTINCT v0.c1))));
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c3)))<((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))<((v0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c3)))<((v0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3)))<((v0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c3)))<((v0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ('f7') ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('f7') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('f7') ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('f7') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ('f7') ORDER BY ((rt0.c2)LIKE(rt0.c2)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 INDEXED BY i82 FULL OUTER JOIN t1 ON (CASE WHEN t1.c4 THEN 0.7173194607205565 END IN ()) WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((v0.c2)<(rt0.c3)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt1.c0)) END) ORDER BY ((((v0.c0)%(t1.c12))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((v0.c2)<(rt0.c3)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt1, v0, rt0 INDEXED BY i82 FULL OUTER JOIN t1 ON (CASE WHEN t1.c4 THEN 0.7173194607205565 END IN ()) ORDER BY ((((v0.c0)%(t1.c12))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 INDEXED BY i82 FULL OUTER JOIN t1 ON (CASE WHEN t1.c4 THEN 0.7173194607205565 END IN ()) WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((v0.c2)<(rt0.c3)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt1.c0)) END) ORDER BY ((((v0.c0)%(t1.c12))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt1.c2 IN ()) THEN ((v0.c2)<(rt0.c3)) ELSE ((((rt0.c0)AND(rt0.c3)))OR(rt1.c0)) END) IS TRUE)  as count FROM rt1, v0, rt0 INDEXED BY i82 FULL OUTER JOIN t1 ON (CASE WHEN t1.c4 THEN 0.7173194607205565 END IN ()) ORDER BY ((((v0.c0)%(t1.c12))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (('334370593')<<(rt0.c4)) THEN CASE rt0.c0  WHEN rt0.c6 THEN rt1.c1 END WHEN ((rt1.c0)%(rt1.c2)) THEN (rt1.c2 IN ('0.29956222861715964')) WHEN 'jo°a' THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt1.c1 END ELSE ((rt1.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('334370593')<<(rt0.c4)) THEN CASE rt0.c0  WHEN rt0.c6 THEN rt1.c1 END WHEN ((rt1.c0)%(rt1.c2)) THEN (rt1.c2 IN ('0.29956222861715964')) WHEN 'jo°a' THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt1.c1 END ELSE ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (('334370593')<<(rt0.c4)) THEN CASE rt0.c0  WHEN rt0.c6 THEN rt1.c1 END WHEN ((rt1.c0)%(rt1.c2)) THEN (rt1.c2 IN ('0.29956222861715964')) WHEN 'jo°a' THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt1.c1 END ELSE ((rt1.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('334370593')<<(rt0.c4)) THEN CASE rt0.c0  WHEN rt0.c6 THEN rt1.c1 END WHEN ((rt1.c0)%(rt1.c2)) THEN (rt1.c2 IN ('0.29956222861715964')) WHEN 'jo°a' THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt1.c1 END ELSE ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN (('334370593')<<(rt0.c4)) THEN CASE rt0.c0  WHEN rt0.c6 THEN rt1.c1 END WHEN ((rt1.c0)%(rt1.c2)) THEN (rt1.c2 IN ('0.29956222861715964')) WHEN 'jo°a' THEN CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt1.c1 END ELSE ((rt1.c2) NOTNULL) END);
SELECT * FROM rt1, t1 WHERE (CAST((t1.c0 IN (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST((t1.c0 IN (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((t1.c0 IN (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST((t1.c0 IN (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((((((((((((t1.c4)OR(t1.c1)))OR(t1.c1)))AND(rt0.c3)))OR(t1.c2)))AND(t1.c12)))OR(rt0.c2))) BETWEEN ('nW]') AND (IFNULL(rt0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c4)OR(t1.c1)))OR(t1.c1)))AND(rt0.c3)))OR(t1.c2)))AND(t1.c12)))OR(rt0.c2))) BETWEEN ('nW]') AND (IFNULL(rt0.c2, v0.c1)))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((((((((((((t1.c4)OR(t1.c1)))OR(t1.c1)))AND(rt0.c3)))OR(t1.c2)))AND(t1.c12)))OR(rt0.c2))) BETWEEN ('nW]') AND (IFNULL(rt0.c2, v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((t1.c4)OR(t1.c1)))OR(t1.c1)))AND(rt0.c3)))OR(t1.c2)))AND(t1.c12)))OR(rt0.c2))) BETWEEN ('nW]') AND (IFNULL(rt0.c2, v0.c1)))) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (((((((((((((((t1.c4)OR(t1.c1)))OR(t1.c1)))AND(rt0.c3)))OR(t1.c2)))AND(t1.c12)))OR(rt0.c2))) BETWEEN ('nW]') AND (IFNULL(rt0.c2, v0.c1))));
SELECT COUNT(*) FROM v0, rt1 INNER JOIN t1 ON NULL WHERE (LIKELIHOOD(DISTINCT (NULL IN ()), 0.6437440970007872));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NULL IN ()), 0.6437440970007872)) IS TRUE)  as count FROM v0, rt1 INNER JOIN t1 ON NULL);
SELECT COUNT(*) FROM v0, rt1 INNER JOIN t1 ON NULL WHERE (LIKELIHOOD(DISTINCT (NULL IN ()), 0.6437440970007872));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NULL IN ()), 0.6437440970007872)) IS TRUE)  as count FROM v0, rt1 INNER JOIN t1 ON NULL);
SELECT COUNT(*) FROM v0, rt1 INNER JOIN t1 ON NULL WHERE (LIKELIHOOD(DISTINCT (NULL IN ()), 0.6437440970007872));
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c3 AS REAL)) NOT BETWEEN (((t1.c12)>=(t1.c4))) AND (((t1.c12)<(t1.c2))))) ORDER BY (((((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c1))))<>(((((t1.c3))>((t1.c1)))))) ASC  NULLS LAST, (t1.c12 IN (t1.c3, t1.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS REAL)) NOT BETWEEN (((t1.c12)>=(t1.c4))) AND (((t1.c12)<(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c1))))<>(((((t1.c3))>((t1.c1)))))) ASC  NULLS LAST, (t1.c12 IN (t1.c3, t1.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c3 AS REAL)) NOT BETWEEN (((t1.c12)>=(t1.c4))) AND (((t1.c12)<(t1.c2))))) ORDER BY (((((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c1))))<>(((((t1.c3))>((t1.c1)))))) ASC  NULLS LAST, (t1.c12 IN (t1.c3, t1.c2)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS REAL)) NOT BETWEEN (((t1.c12)>=(t1.c4))) AND (((t1.c12)<(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c1))))<>(((((t1.c3))>((t1.c1)))))) ASC  NULLS LAST, (t1.c12 IN (t1.c3, t1.c2)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c3 AS REAL)) NOT BETWEEN (((t1.c12)>=(t1.c4))) AND (((t1.c12)<(t1.c2))))) ORDER BY (((((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c1))))<>(((((t1.c3))>((t1.c1)))))) ASC  NULLS LAST, (t1.c12 IN (t1.c3, t1.c2)) COLLATE NOCASE DESC;
SELECT * FROM rt1, v0 WHERE ('-128054687');
SELECT SUM(count) FROM (SELECT (('-128054687') IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE ('-128054687');
SELECT SUM(count) FROM (SELECT (('-128054687') IS TRUE)  as count FROM rt1, v0);
SELECT * FROM rt1, v0 WHERE ('-128054687');
SELECT * FROM v0, rt1, rt0 WHERE (UPPER(rt0.c1)) ORDER BY '' DESC, ((((((((((rt1.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c6)))GLOB(((rt1.c1)GLOB(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c1)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY '' DESC, ((((((((((rt1.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c6)))GLOB(((rt1.c1)GLOB(NULL)))) DESC);
SELECT * FROM v0, rt1, rt0 WHERE (UPPER(rt0.c1)) ORDER BY '' DESC, ((((((((((rt1.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c6)))GLOB(((rt1.c1)GLOB(NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(rt0.c1)) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY '' DESC, ((((((((((rt1.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c6)))GLOB(((rt1.c1)GLOB(NULL)))) DESC);
SELECT * FROM v0, rt1, rt0 WHERE (UPPER(rt0.c1)) ORDER BY '' DESC, ((((((((((rt1.c1)OR(v0.c0)))OR(rt0.c0)))AND(v0.c0)))OR(rt0.c6)))GLOB(((rt1.c1)GLOB(NULL)))) DESC;
SELECT ALL * FROM rt0, rt1 WHERE ('Sa[(E') ORDER BY ((rt1.c2 COLLATE BINARY)-(rt0.c5));
SELECT SUM(count) FROM (SELECT ALL (('Sa[(E') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2 COLLATE BINARY)-(rt0.c5)));
SELECT ALL * FROM rt0, rt1 WHERE ('Sa[(E') ORDER BY ((rt1.c2 COLLATE BINARY)-(rt0.c5));
SELECT SUM(count) FROM (SELECT ALL (('Sa[(E') IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2 COLLATE BINARY)-(rt0.c5)));
SELECT ALL * FROM rt0, rt1 WHERE ('Sa[(E') ORDER BY ((rt1.c2 COLLATE BINARY)-(rt0.c5));
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS BLOB) FULL OUTER JOIN rt1 ON (+ (v0.c1)) WHERE (IFNULL(((rt0.c4)IS NOT(t1.c4)), ((((((((rt0.c2)AND(v0.c2)))OR(t1.c1)))OR('''Li')))AND(t1.c4)))) ORDER BY v0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c4)IS NOT(t1.c4)), ((((((((rt0.c2)AND(v0.c2)))OR(t1.c1)))OR('''Li')))AND(t1.c4)))) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS BLOB) FULL OUTER JOIN rt1 ON (+ (v0.c1)) ORDER BY v0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS BLOB) FULL OUTER JOIN rt1 ON (+ (v0.c1)) WHERE (IFNULL(((rt0.c4)IS NOT(t1.c4)), ((((((((rt0.c2)AND(v0.c2)))OR(t1.c1)))OR('''Li')))AND(t1.c4)))) ORDER BY v0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt0.c4)IS NOT(t1.c4)), ((((((((rt0.c2)AND(v0.c2)))OR(t1.c1)))OR('''Li')))AND(t1.c4)))) IS TRUE)  as count FROM v0, t1 CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS BLOB) FULL OUTER JOIN rt1 ON (+ (v0.c1)) ORDER BY v0.c1 COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0, t1 CROSS JOIN rt0 ON CAST(((v0.c2) ISNULL) AS BLOB) FULL OUTER JOIN rt1 ON (+ (v0.c1)) WHERE (IFNULL(((rt0.c4)IS NOT(t1.c4)), ((((((((rt0.c2)AND(v0.c2)))OR(t1.c1)))OR('''Li')))AND(t1.c4)))) ORDER BY v0.c1 COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM t1 WHERE (((0.5273285801371468) NOT BETWEEN (TRIM(DISTINCT t1.c4)) AND (((0X28a0eaf9)>=(t1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5273285801371468) NOT BETWEEN (TRIM(DISTINCT t1.c4)) AND (((0x28a0eaf9)>=(t1.c3))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((0.5273285801371468) NOT BETWEEN (TRIM(DISTINCT t1.c4)) AND (((0X28a0eaf9)>=(t1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5273285801371468) NOT BETWEEN (TRIM(DISTINCT t1.c4)) AND (((0x28a0eaf9)>=(t1.c3))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((0.5273285801371468) NOT BETWEEN (TRIM(DISTINCT t1.c4)) AND (((0X28a0eaf9)>=(t1.c3)))));
SELECT * FROM rt0, rt1, t1 WHERE ((TRIM(DISTINCT rt0.c6, t1.c2) IN ())) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt1.c1)))IS NOT(LIKELIHOOD(rt0.c3, 0.6221453427608692)));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c6, t1.c2) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt1.c1)))IS NOT(LIKELIHOOD(rt0.c3, 0.6221453427608692))));
SELECT * FROM rt0, rt1, t1 WHERE ((TRIM(DISTINCT rt0.c6, t1.c2) IN ())) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt1.c1)))IS NOT(LIKELIHOOD(rt0.c3, 0.6221453427608692)));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT rt0.c6, t1.c2) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt1.c1)))IS NOT(LIKELIHOOD(rt0.c3, 0.6221453427608692))));
SELECT * FROM rt0, rt1, t1 WHERE ((TRIM(DISTINCT rt0.c6, t1.c2) IN ())) ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt1.c1)))IS NOT(LIKELIHOOD(rt0.c3, 0.6221453427608692)));
SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt0.c2)OR(rt1.c1)))OR(v0.c2)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt1.c1)))OR(v0.c2)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt0.c2)OR(rt1.c1)))OR(v0.c2)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt1.c1)))OR(v0.c2)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (((((((((rt0.c2)OR(rt1.c1)))OR(v0.c2)))AND(rt0.c3)))OR(rt0.c2)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c12) NOT BETWEEN (-1.160545293E9) AND (t1.c0)) THEN TRIM(DISTINCT t1.c4, t1.c12) WHEN ((t1.c12)||(t1.c3)) THEN t1.c1 COLLATE RTRIM WHEN ((('-1882085385')) BETWEEN ((t1.c3)) AND ((t1.c1))) THEN ((((t1.c2)AND(t1.c4)))OR(t1.c1)) ELSE x'' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c12) NOT BETWEEN (-1.160545293E9) AND (t1.c0)) THEN TRIM(DISTINCT t1.c4, t1.c12) WHEN ((t1.c12)||(t1.c3)) THEN t1.c1 COLLATE RTRIM WHEN ((('-1882085385')) BETWEEN ((t1.c3)) AND ((t1.c1))) THEN ((((t1.c2)AND(t1.c4)))OR(t1.c1)) ELSE x'' COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c12) NOT BETWEEN (-1.160545293E9) AND (t1.c0)) THEN TRIM(DISTINCT t1.c4, t1.c12) WHEN ((t1.c12)||(t1.c3)) THEN t1.c1 COLLATE RTRIM WHEN ((('-1882085385')) BETWEEN ((t1.c3)) AND ((t1.c1))) THEN ((((t1.c2)AND(t1.c4)))OR(t1.c1)) ELSE x'' COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c12) NOT BETWEEN (-1.160545293E9) AND (t1.c0)) THEN TRIM(DISTINCT t1.c4, t1.c12) WHEN ((t1.c12)||(t1.c3)) THEN t1.c1 COLLATE RTRIM WHEN ((('-1882085385')) BETWEEN ((t1.c3)) AND ((t1.c1))) THEN ((((t1.c2)AND(t1.c4)))OR(t1.c1)) ELSE x'' COLLATE NOCASE END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c12) NOT BETWEEN (-1.160545293E9) AND (t1.c0)) THEN TRIM(DISTINCT t1.c4, t1.c12) WHEN ((t1.c12)||(t1.c3)) THEN t1.c1 COLLATE RTRIM WHEN ((('-1882085385')) BETWEEN ((t1.c3)) AND ((t1.c1))) THEN ((((t1.c2)AND(t1.c4)))OR(t1.c1)) ELSE x'' COLLATE NOCASE END);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c4) ISNULL) IN ((((rt0.c2, rt1.c0, rt0.c3)) BETWEEN ((rt0.c1, x'9311e380', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c5))), rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) ISNULL) IN ((((rt0.c2, rt1.c0, rt0.c3)) BETWEEN ((rt0.c1, x'9311e380', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c5))), rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c4) ISNULL) IN ((((rt0.c2, rt1.c0, rt0.c3)) BETWEEN ((rt0.c1, x'9311e380', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c5))), rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) ISNULL) IN ((((rt0.c2, rt1.c0, rt0.c3)) BETWEEN ((rt0.c1, x'9311e380', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c5))), rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c4) ISNULL) IN ((((rt0.c2, rt1.c0, rt0.c3)) BETWEEN ((rt0.c1, x'9311e380', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c5))), rt1.c2)));
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (LIKELY(DISTINCT t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (LIKELY(DISTINCT t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT t1.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (LIKELY(DISTINCT t1.c0 COLLATE BINARY));
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE (CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c2 AS INTEGER) THEN CAST(rt0.c1 AS INTEGER) ELSE '' END) ORDER BY ((((t1.c12)-(rt0.c1))) BETWEEN (json_array_length(rt0.c0)) AND (CASE WHEN v0.c0 THEN t1.c12 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c2 AS INTEGER) THEN CAST(rt0.c1 AS INTEGER) ELSE '' END) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY ((((t1.c12)-(rt0.c1))) BETWEEN (json_array_length(rt0.c0)) AND (CASE WHEN v0.c0 THEN t1.c12 ELSE rt0.c5 END)));
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE (CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c2 AS INTEGER) THEN CAST(rt0.c1 AS INTEGER) ELSE '' END) ORDER BY ((((t1.c12)-(rt0.c1))) BETWEEN (json_array_length(rt0.c0)) AND (CASE WHEN v0.c0 THEN t1.c12 ELSE rt0.c5 END));
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c2 AS INTEGER) THEN CAST(rt0.c1 AS INTEGER) ELSE '' END) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY ((((t1.c12)-(rt0.c1))) BETWEEN (json_array_length(rt0.c0)) AND (CASE WHEN v0.c0 THEN t1.c12 ELSE rt0.c5 END)));
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE (CASE v0.c1 COLLATE NOCASE  WHEN CAST(v0.c2 AS INTEGER) THEN CAST(rt0.c1 AS INTEGER) ELSE '' END) ORDER BY ((((t1.c12)-(rt0.c1))) BETWEEN (json_array_length(rt0.c0)) AND (CASE WHEN v0.c0 THEN t1.c12 ELSE rt0.c5 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS INTEGER)) IS TRUE));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((t1.c12) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c12) IS FALSE) AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((t1.c12) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c12) IS FALSE) AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((t1.c12) IS FALSE) AS REAL));
SELECT ALL * FROM rt0, v0, t1, rt1 WHERE (((rt0.c2) NOT BETWEEN (t1.c4) AND (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (t1.c4) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, t1, rt1);
SELECT ALL * FROM rt0, v0, t1, rt1 WHERE (((rt0.c2) NOT BETWEEN (t1.c4) AND (rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (t1.c4) AND (rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0, t1, rt1);
SELECT ALL * FROM rt0, v0, t1, rt1 WHERE (((rt0.c2) NOT BETWEEN (t1.c4) AND (rt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(NULL))) IS TRUE)) ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(NULL))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(NULL))) IS TRUE)) ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)IS NOT(NULL))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c2)IS NOT(NULL))) IS TRUE)) ORDER BY (- ((rt1.c1 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c0)) AS TEXT) WHERE (((((rt0.c0)/(rt1.c2)))LIKE((((rt0.c2))>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt1.c2)))LIKE((((rt0.c2))>((rt0.c4)))))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c0)) AS TEXT) WHERE (((((rt0.c0)/(rt1.c2)))LIKE((((rt0.c2))>((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)/(rt1.c2)))LIKE((((rt0.c2))>((rt0.c4)))))) IS TRUE)  as count FROM v0, rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c0)) AS TEXT));
SELECT COUNT(*) FROM v0, rt1 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt1.c0)) AS TEXT) WHERE (((((rt0.c0)/(rt1.c2)))LIKE((((rt0.c2))>((rt0.c4))))));
SELECT ALL * FROM rt1 WHERE ((((COALESCE(DISTINCT rt1.c0, rt1.c1)))>=((((rt1.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(DISTINCT rt1.c0, rt1.c1)))>=((((rt1.c2) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((COALESCE(DISTINCT rt1.c0, rt1.c1)))>=((((rt1.c2) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(DISTINCT rt1.c0, rt1.c1)))>=((((rt1.c2) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((COALESCE(DISTINCT rt1.c0, rt1.c1)))>=((((rt1.c2) NOT NULL)))));
SELECT COUNT(*) FROM rt1, rt0, t1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t1, v0);
SELECT COUNT(*) FROM rt1, rt0, t1, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t1, v0);
SELECT COUNT(*) FROM rt1, rt0, t1, v0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt1.c2 AS TEXT)) ORDER BY CAST(((t1.c12) NOT NULL) AS REAL)  NULLS FIRST, t1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(((t1.c12) NOT NULL) AS REAL)  NULLS FIRST, t1.c4 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt1.c2 AS TEXT)) ORDER BY CAST(((t1.c12) NOT NULL) AS REAL)  NULLS FIRST, t1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 AS TEXT)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(((t1.c12) NOT NULL) AS REAL)  NULLS FIRST, t1.c4 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt1.c2 AS TEXT)) ORDER BY CAST(((t1.c12) NOT NULL) AS REAL)  NULLS FIRST, t1.c4 DESC  NULLS LAST;
SELECT ALL * FROM rt1, t1 INNER JOIN rt0 ON ((((((rt0.c4)OR(x'0c2b')))AND(LENGTH(rt1.c0))))AND(rt0.c0)) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt1, t1 INNER JOIN rt0 ON ((((((rt0.c4)OR(x'0c2b')))AND(LENGTH(rt1.c0))))AND(rt0.c0)));
SELECT ALL * FROM rt1, t1 INNER JOIN rt0 ON ((((((rt0.c4)OR(x'0c2b')))AND(LENGTH(rt1.c0))))AND(rt0.c0)) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt1, t1 INNER JOIN rt0 ON ((((((rt0.c4)OR(x'0c2b')))AND(LENGTH(rt1.c0))))AND(rt0.c0)));
SELECT ALL * FROM rt1, t1 INNER JOIN rt0 ON ((((((rt0.c4)OR(x'0c2b')))AND(LENGTH(rt1.c0))))AND(rt0.c0)) WHERE (CAST(CASE WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))<((- (rt1.c2))))) ORDER BY CHAR((rt1.c1 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))<((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CHAR((rt1.c1 IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))<((- (rt1.c2))))) ORDER BY CHAR((rt1.c1 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))<((- (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY CHAR((rt1.c1 IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c0)))<((- (rt1.c2))))) ORDER BY CHAR((rt1.c1 IN ())) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)!=(CASE WHEN t1.c2 THEN t1.c1 END))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)!=(CASE WHEN t1.c2 THEN t1.c1 END))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)!=(CASE WHEN t1.c2 THEN t1.c1 END))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)!=(CASE WHEN t1.c2 THEN t1.c1 END))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt1, t1 WHERE (((CASE WHEN t1.c0 THEN v0.c1 WHEN t1.c2 THEN t1.c0 WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END)!=(CASE WHEN t1.c2 THEN t1.c1 END))) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2)AND(CAST(x'' AS BLOB))))AND(((rt0.c5)IS NOT(rt0.c2)))) WHERE (((rt0.c4)!=(rt0.c2)) COLLATE BINARY) ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)<>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2)AND(CAST(x'' AS BLOB))))AND(((rt0.c5)IS NOT(rt0.c2)))) ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2)AND(CAST(x'' AS BLOB))))AND(((rt0.c5)IS NOT(rt0.c2)))) WHERE (((rt0.c4)!=(rt0.c2)) COLLATE BINARY) ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)<>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2)AND(CAST(x'' AS BLOB))))AND(((rt0.c5)IS NOT(rt0.c2)))) ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((v0.c2)AND(CAST(x'' AS BLOB))))AND(((rt0.c5)IS NOT(rt0.c2)))) WHERE (((rt0.c4)!=(rt0.c2)) COLLATE BINARY) ORDER BY (~ (SQLITE_SOURCE_ID()))  NULLS LAST;
SELECT * FROM t1 WHERE (((CAST(t1.c4 AS TEXT))/(CASE t1.c4  WHEN t1.c2 THEN t1.c2 END))) ORDER BY ((UNLIKELY(DISTINCT t1.c1))%(((x'e03a') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS TEXT))/(CASE t1.c4  WHEN t1.c2 THEN t1.c2 END))) IS TRUE)  as count FROM t1 ORDER BY ((UNLIKELY(DISTINCT t1.c1))%(((x'e03a') IS FALSE)))  NULLS LAST);
SELECT * FROM t1 WHERE (((CAST(t1.c4 AS TEXT))/(CASE t1.c4  WHEN t1.c2 THEN t1.c2 END))) ORDER BY ((UNLIKELY(DISTINCT t1.c1))%(((x'e03a') IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS TEXT))/(CASE t1.c4  WHEN t1.c2 THEN t1.c2 END))) IS TRUE)  as count FROM t1 ORDER BY ((UNLIKELY(DISTINCT t1.c1))%(((x'e03a') IS FALSE)))  NULLS LAST);
SELECT * FROM t1 WHERE (((CAST(t1.c4 AS TEXT))/(CASE t1.c4  WHEN t1.c2 THEN t1.c2 END))) ORDER BY ((UNLIKELY(DISTINCT t1.c1))%(((x'e03a') IS FALSE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c2)))IS NOT(0X13eaa475)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))IS NOT(0X13eaa475))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c2)))IS NOT(0X13eaa475)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c2)))IS NOT(0X13eaa475))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c2)))IS NOT(0X13eaa475)));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (('1180930723')LIKE(CAST(rt0.c3 AS BLOB))) INNER JOIN rt0 ON CAST(((((((((t1.c3)AND(t1.c0)))AND(v0.c2)))AND('F7')))AND(rt1.c1)) AS BLOB) FULL OUTER JOIN t1 ON CAST((((t1.c12))!=((rt0.c5))) AS REAL) WHERE (368727660 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((368727660 COLLATE NOCASE) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (('1180930723')LIKE(CAST(rt0.c3 AS BLOB))) INNER JOIN rt0 ON CAST(((((((((t1.c3)AND(t1.c0)))AND(v0.c2)))AND('F7')))AND(rt1.c1)) AS BLOB) FULL OUTER JOIN t1 ON CAST((((t1.c12))<>((rt0.c5))) AS REAL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (('1180930723')LIKE(CAST(rt0.c3 AS BLOB))) INNER JOIN rt0 ON CAST(((((((((t1.c3)AND(t1.c0)))AND(v0.c2)))AND('F7')))AND(rt1.c1)) AS BLOB) FULL OUTER JOIN t1 ON CAST((((t1.c12))!=((rt0.c5))) AS REAL) WHERE (368727660 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((368727660 COLLATE NOCASE) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (('1180930723')LIKE(CAST(rt0.c3 AS BLOB))) INNER JOIN rt0 ON CAST(((((((((t1.c3)AND(t1.c0)))AND(v0.c2)))AND('F7')))AND(rt1.c1)) AS BLOB) FULL OUTER JOIN t1 ON CAST((((t1.c12))<>((rt0.c5))) AS REAL));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((rt0.c3, t1.c0, rt0.c0, '-212373655', t1.c0))=((t1.c12, rt0.c6, rt0.c2, rt0.c6, rt0.c6)))) NOT BETWEEN (rt0.c5) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((rt0.c3, t1.c0, rt0.c0, '-212373655', t1.c0))=((t1.c12, rt0.c6, rt0.c2, rt0.c6, rt0.c6)))) NOT BETWEEN (rt0.c5) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((rt0.c3, t1.c0, rt0.c0, '-212373655', t1.c0))=((t1.c12, rt0.c6, rt0.c2, rt0.c6, rt0.c6)))) NOT BETWEEN (rt0.c5) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((rt0.c3, t1.c0, rt0.c0, '-212373655', t1.c0))=((t1.c12, rt0.c6, rt0.c2, rt0.c6, rt0.c6)))) NOT BETWEEN (rt0.c5) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((rt0.c3, t1.c0, rt0.c0, '-212373655', t1.c0))=((t1.c12, rt0.c6, rt0.c2, rt0.c6, rt0.c6)))) NOT BETWEEN (rt0.c5) AND (((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))) WHERE (t1.c0);
SELECT * FROM rt1 WHERE (DATE(((rt1.c1)/(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN 0.28606895818894984 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END, (~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(((rt1.c1)/(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN 0.28606895818894984 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END, (~ (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (DATE(((rt1.c1)/(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN 0.28606895818894984 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END, (~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(((rt1.c1)/(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN 0.28606895818894984 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END, (~ (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (DATE(((rt1.c1)/(rt1.c2)), CASE WHEN rt1.c2 THEN rt1.c2 WHEN 0.28606895818894984 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END, (~ (rt1.c1))));
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c0)>=(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c0)>=(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c0)>=(rt1.c1)) COLLATE BINARY);
SELECT * FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(v0.c0)))OR(v0.c1)))))OR('Y+vQ')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(v0.c0)))OR(v0.c1)))))OR('Y+vQ'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(v0.c0)))OR(v0.c1)))))OR('Y+vQ')));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(v0.c0)))OR(v0.c1)))))OR('Y+vQ'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(v0.c0)))OR(v0.c1)))))OR('Y+vQ')));
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN t1 ON (~ (((((((((t1.c4)OR('죪C')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) WHERE (((((t1.c2)AND((rt1.c2 IN ()))))AND(CASE WHEN t1.c0 THEN t1.c12 WHEN t1.c1 THEN t1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY CAST(((((t1.c2)OR(t1.c0)))OR(x'')) AS TEXT)  NULLS FIRST, (((v0.c2) BETWEEN (t1.c1) AND (t1.c2)) IN ()) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2)AND((rt1.c2 IN ()))))AND(CASE WHEN t1.c0 THEN t1.c12 WHEN t1.c1 THEN t1.c0 WHEN v0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN t1 ON (~ (((((((((t1.c4)OR('죪C')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) ORDER BY CAST(((((t1.c2)OR(t1.c0)))OR(x'')) AS TEXT)  NULLS FIRST, (((v0.c2) BETWEEN (t1.c1) AND (t1.c2)) IN ()) ASC, NULL  NULLS LAST);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN t1 ON (~ (((((((((t1.c4)OR('죪C')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) WHERE (((((t1.c2)AND((rt1.c2 IN ()))))AND(CASE WHEN t1.c0 THEN t1.c12 WHEN t1.c1 THEN t1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY CAST(((((t1.c2)OR(t1.c0)))OR(x'')) AS TEXT)  NULLS FIRST, (((v0.c2) BETWEEN (t1.c1) AND (t1.c2)) IN ()) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2)AND((rt1.c2 IN ()))))AND(CASE WHEN t1.c0 THEN t1.c12 WHEN t1.c1 THEN t1.c0 WHEN v0.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN t1 ON (~ (((((((((t1.c4)OR('죪C')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) ORDER BY CAST(((((t1.c2)OR(t1.c0)))OR(x'')) AS TEXT)  NULLS FIRST, (((v0.c2) BETWEEN (t1.c1) AND (t1.c2)) IN ()) ASC, NULL  NULLS LAST);
SELECT ALL * FROM v0, rt1 RIGHT OUTER JOIN t1 ON (~ (((((((((t1.c4)OR('죪C')))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))) WHERE (((((t1.c2)AND((rt1.c2 IN ()))))AND(CASE WHEN t1.c0 THEN t1.c12 WHEN t1.c1 THEN t1.c0 WHEN v0.c0 THEN rt1.c1 END))) ORDER BY CAST(((((t1.c2)OR(t1.c0)))OR(x'')) AS TEXT)  NULLS FIRST, (((v0.c2) BETWEEN (t1.c1) AND (t1.c2)) IN ()) ASC, NULL  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1 FULL OUTER JOIN v0 ON NULL WHERE (((((t1.c2, '', t1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c6)) AND ((rt0.c1, -9.60900723E8, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2, '', t1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c6)) AND ((rt0.c1, -9.60900723E8, rt0.c0))) IN ())) IS TRUE)  as count FROM rt1, rt0, t1 FULL OUTER JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 FULL OUTER JOIN v0 ON NULL WHERE (((((t1.c2, '', t1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c6)) AND ((rt0.c1, -9.60900723E8, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2, '', t1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c6)) AND ((rt0.c1, -9.60900723E8, rt0.c0))) IN ())) IS TRUE)  as count FROM rt1, rt0, t1 FULL OUTER JOIN v0 ON NULL);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 FULL OUTER JOIN v0 ON NULL WHERE (((((t1.c2, '', t1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, rt0.c6)) AND ((rt0.c1, -9.60900723E8, rt0.c0))) IN ()));
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY CAST(((t1.c0)<(t1.c4)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)<(t1.c4)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY CAST(((t1.c0)<(t1.c4)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c0)<(t1.c4)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY CAST(((t1.c0)<(t1.c4)) AS REAL) DESC  NULLS LAST;
SELECT * FROM v0, t1, rt1, rt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c6 END) NOT BETWEEN (CAST(t1.c3 AS INTEGER)) AND (((t1.c3)*(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c6 END) NOT BETWEEN (CAST(t1.c3 AS INTEGER)) AND (((t1.c3)*(t1.c1))))) IS TRUE)  as count FROM v0, t1, rt1, rt0);
SELECT * FROM v0, t1, rt1, rt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c6 END) NOT BETWEEN (CAST(t1.c3 AS INTEGER)) AND (((t1.c3)*(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c6 END) NOT BETWEEN (CAST(t1.c3 AS INTEGER)) AND (((t1.c3)*(t1.c1))))) IS TRUE)  as count FROM v0, t1, rt1, rt0);
SELECT * FROM v0, t1, rt1, rt0 WHERE (((CASE rt1.c2  WHEN rt1.c1 THEN rt0.c6 END) NOT BETWEEN (CAST(t1.c3 AS INTEGER)) AND (((t1.c3)*(t1.c1)))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) INNER JOIN rt1 ON v0.c0 INNER JOIN v0 ON UPPER(DISTINCT ((((((((t1.c12)OR(v0.c2)))OR(t1.c3)))OR(rt1.c0)))AND(rt0.c5))) WHERE (((((rt0.c4)IS NOT(t1.c3)))||(((((((((v0.c1)OR(v0.c0)))AND(t1.c1)))AND(NULL)))OR(t1.c4))))) ORDER BY CASE WHEN (((t1.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) THEN rt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)IS NOT(t1.c3)))||(((((((((v0.c1)OR(v0.c0)))AND(t1.c1)))AND(NULL)))OR(t1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) INNER JOIN rt1 ON v0.c0 INNER JOIN v0 ON UPPER(DISTINCT ((((((((t1.c12)OR(v0.c2)))OR(t1.c3)))OR(rt1.c0)))AND(rt0.c5))) ORDER BY CASE WHEN (((t1.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) THEN rt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) INNER JOIN rt1 ON v0.c0 INNER JOIN v0 ON UPPER(DISTINCT ((((((((t1.c12)OR(v0.c2)))OR(t1.c3)))OR(rt1.c0)))AND(rt0.c5))) WHERE (((((rt0.c4)IS NOT(t1.c3)))||(((((((((v0.c1)OR(v0.c0)))AND(t1.c1)))AND(NULL)))OR(t1.c4))))) ORDER BY CASE WHEN (((t1.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) THEN rt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)IS NOT(t1.c3)))||(((((((((v0.c1)OR(v0.c0)))AND(t1.c1)))AND(NULL)))OR(t1.c4))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (NOT ((+ (v0.c1)))) INNER JOIN rt1 ON v0.c0 INNER JOIN v0 ON UPPER(DISTINCT ((((((((t1.c12)OR(v0.c2)))OR(t1.c3)))OR(rt1.c0)))AND(rt0.c5))) ORDER BY CASE WHEN (((t1.c2)) NOT BETWEEN ((rt0.c2)) AND ((NULL))) THEN rt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN rt1 ON NULLIF(DISTINCT t1.c0 COLLATE BINARY, CAST(t1.c12 AS BLOB)) CROSS JOIN rt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c5)*(t1.c0)) THEN (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))) WHEN NULLIF(rt0.c0, t1.c12) THEN rt0.c6 WHEN (NOT (t1.c1)) THEN ((rt1.c2) NOTNULL) ELSE NULL END WHERE (((((v0.c2 COLLATE BINARY)OR((+ (rt0.c3)))))AND(CAST(t1.c1 AS INTEGER)))) ORDER BY CAST(rt0.c6 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, ((+ (t1.c12)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE BINARY)OR((+ (rt0.c3)))))AND(CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON NULLIF(DISTINCT t1.c0 COLLATE BINARY, CAST(t1.c12 AS BLOB)) CROSS JOIN rt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c5)*(t1.c0)) THEN (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))) WHEN NULLIF(rt0.c0, t1.c12) THEN rt0.c6 WHEN (NOT (t1.c1)) THEN ((rt1.c2) NOTNULL) ELSE NULL END ORDER BY CAST(rt0.c6 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, ((+ (t1.c12)) IN ())  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt1 ON NULLIF(DISTINCT t1.c0 COLLATE BINARY, CAST(t1.c12 AS BLOB)) CROSS JOIN rt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c5)*(t1.c0)) THEN (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))) WHEN NULLIF(rt0.c0, t1.c12) THEN rt0.c6 WHEN (NOT (t1.c1)) THEN ((rt1.c2) NOTNULL) ELSE NULL END WHERE (((((v0.c2 COLLATE BINARY)OR((+ (rt0.c3)))))AND(CAST(t1.c1 AS INTEGER)))) ORDER BY CAST(rt0.c6 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, ((+ (t1.c12)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE BINARY)OR((+ (rt0.c3)))))AND(CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON NULLIF(DISTINCT t1.c0 COLLATE BINARY, CAST(t1.c12 AS BLOB)) CROSS JOIN rt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c5)*(t1.c0)) THEN (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))) WHEN NULLIF(rt0.c0, t1.c12) THEN rt0.c6 WHEN (NOT (t1.c1)) THEN ((rt1.c2) NOTNULL) ELSE NULL END ORDER BY CAST(rt0.c6 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, ((+ (t1.c12)) IN ())  NULLS LAST);
SELECT * FROM v0 CROSS JOIN rt1 ON NULLIF(DISTINCT t1.c0 COLLATE BINARY, CAST(t1.c12 AS BLOB)) CROSS JOIN rt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) LEFT OUTER JOIN t1 ON CASE WHEN ((rt0.c5)*(t1.c0)) THEN (((rt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))) WHEN NULLIF(rt0.c0, t1.c12) THEN rt0.c6 WHEN (NOT (t1.c1)) THEN ((rt1.c2) NOTNULL) ELSE NULL END WHERE (((((v0.c2 COLLATE BINARY)OR((+ (rt0.c3)))))AND(CAST(t1.c1 AS INTEGER)))) ORDER BY CAST(rt0.c6 AS TEXT) COLLATE BINARY ASC  NULLS FIRST, ((+ (t1.c12)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE ((NOT (CAST(v0.c2 AS NUMERIC)))) ORDER BY (((((((rt1.c0))==((rt0.c1))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE ORDER BY (((((((rt1.c0))=((rt0.c1))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE ((NOT (CAST(v0.c2 AS NUMERIC)))) ORDER BY (((((((rt1.c0))==((rt0.c1))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c2 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt1 CROSS JOIN rt0 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE ORDER BY (((((((rt1.c0))=((rt0.c1))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM v0, rt1 CROSS JOIN rt0 ON CAST(rt0.c4 AS INTEGER) COLLATE NOCASE WHERE ((NOT (CAST(v0.c2 AS NUMERIC)))) ORDER BY (((((((rt1.c0))==((rt0.c1))))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(CASE WHEN rt1.c2 THEN x'' ELSE rt0.c4 END));
SELECT ALL * FROM rt1, v0 INDEXED BY i82 WHERE (CAST(((rt1.c2)LIKE(v0.c1)) AS NUMERIC)) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)LIKE(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 INDEXED BY i82 ORDER BY v0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 INDEXED BY i82 WHERE (CAST(((rt1.c2)LIKE(v0.c1)) AS NUMERIC)) ORDER BY v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2)LIKE(v0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 INDEXED BY i82 ORDER BY v0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, v0, t1 NATURAL JOIN rt1 WHERE (((LOWER(DISTINCT rt0.c6))&(CASE WHEN rt0.c6 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c6))&(CASE WHEN rt0.c6 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, v0, t1 NATURAL JOIN rt1);
SELECT * FROM rt0, v0, t1 NATURAL JOIN rt1 WHERE (((LOWER(DISTINCT rt0.c6))&(CASE WHEN rt0.c6 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c6))&(CASE WHEN rt0.c6 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0, v0, t1 NATURAL JOIN rt1);
SELECT * FROM rt0, v0, t1 NATURAL JOIN rt1 WHERE (((LOWER(DISTINCT rt0.c6))&(CASE WHEN rt0.c6 THEN rt0.c4 END)));
SELECT * FROM rt1, rt0, v0, t1 WHERE (((x'6d4a') NOT BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c3 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'6d4a') NOT BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, v0, t1 ORDER BY (rt0.c0 IN (rt0.c3 COLLATE BINARY)) ASC);
SELECT * FROM rt1, rt0, v0, t1 WHERE (((x'6d4a') NOT BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c3 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'6d4a') NOT BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, v0, t1 ORDER BY (rt0.c0 IN (rt0.c3 COLLATE BINARY)) ASC);
SELECT * FROM rt1, rt0, v0, t1 WHERE (((x'6d4a') NOT BETWEEN (v0.c1) AND (t1.c0)) COLLATE BINARY) ORDER BY (rt0.c0 IN (rt0.c3 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2)!=(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<>(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2)!=(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c2)<>(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE (((v0.c2)!=(v0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CASE rt1.c0  WHEN rt0.c3 THEN -1523945640 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c1 ELSE '1513620280' END))) ORDER BY LIKELIHOOD(rt0.c1, 0.993413614231877) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c0  WHEN rt0.c3 THEN -1523945640 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c1 ELSE '1513620280' END))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 ORDER BY LIKELIHOOD(rt0.c1, 0.993413614231877) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CASE rt1.c0  WHEN rt0.c3 THEN -1523945640 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c1 ELSE '1513620280' END))) ORDER BY LIKELIHOOD(rt0.c1, 0.993413614231877) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c0  WHEN rt0.c3 THEN -1523945640 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c1 ELSE '1513620280' END))) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0 ORDER BY LIKELIHOOD(rt0.c1, 0.993413614231877) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((~ (CASE rt1.c0  WHEN rt0.c3 THEN -1523945640 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c1 ELSE '1513620280' END))) ORDER BY LIKELIHOOD(rt0.c1, 0.993413614231877) COLLATE BINARY  NULLS FIRST;
SELECT * FROM rt1, t1, rt0, v0 WHERE (((((((((((t1.c1)OR('g')))AND(rt0.c4)))AND(t1.c4)))OR(t1.c1)))/(((rt1.c0)<=(t1.c4))))) ORDER BY 0.9364454918031153 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)OR('g')))AND(rt0.c4)))AND(t1.c4)))OR(t1.c1)))/(((rt1.c0)<=(t1.c4))))) IS TRUE)  as count FROM rt1, t1, rt0, v0 ORDER BY 0.9364454918031153 DESC  NULLS LAST);
SELECT * FROM rt1, t1, rt0, v0 WHERE (((((((((((t1.c1)OR('g')))AND(rt0.c4)))AND(t1.c4)))OR(t1.c1)))/(((rt1.c0)<=(t1.c4))))) ORDER BY 0.9364454918031153 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)OR('g')))AND(rt0.c4)))AND(t1.c4)))OR(t1.c1)))/(((rt1.c0)<=(t1.c4))))) IS TRUE)  as count FROM rt1, t1, rt0, v0 ORDER BY 0.9364454918031153 DESC  NULLS LAST);
SELECT * FROM rt1, t1, rt0, v0 WHERE (((((((((((t1.c1)OR('g')))AND(rt0.c4)))AND(t1.c4)))OR(t1.c1)))/(((rt1.c0)<=(t1.c4))))) ORDER BY 0.9364454918031153 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (CAST(v0.c0 AS REAL) COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST(v0.c0 AS INTEGER) COLLATE BINARY;
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c1))) IS TRUE) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN v0.c1 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN v0.c1 END) AND (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c1))) IS TRUE));
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c1))) IS TRUE) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN v0.c1 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN v0.c1 END) AND (((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt1, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c1))) IS TRUE));
SELECT ALL * FROM rt1, v0 FULL OUTER JOIN rt0 ON ((((rt0.c2)>=(rt0.c1))) IS TRUE) WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN v0.c1 END) AND (((rt0.c0)*(rt0.c0)))));
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((- (x'fcfb'))))>(((t1.c4 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((- (x'fcfb'))))>(((t1.c4 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((- (x'fcfb'))))>(((t1.c4 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((- (x'fcfb'))))>(((t1.c4 IN ()))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 NOT INDEXED WHERE (((((- (x'fcfb'))))>(((t1.c4 IN ())))));
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c12)IS(t1.c4))))) ORDER BY ((((x'')<=(t1.c0)))AND(((t1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c12)IS(t1.c4))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'')<=(t1.c0)))AND(((t1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c12)IS(t1.c4))))) ORDER BY ((((x'')<=(t1.c0)))AND(((t1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c12)IS(t1.c4))))) IS TRUE)  as count FROM t1 ORDER BY ((((x'')<=(t1.c0)))AND(((t1.c0) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((NOT (((t1.c12)IS(t1.c4))))) ORDER BY ((((x'')<=(t1.c0)))AND(((t1.c0) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i10, t1, v0 WHERE (((((((t1.c1)AND(t1.c12)))AND(v0.c0))) NOT NULL)) ORDER BY UPPER(DISTINCT ((((t1.c3)OR(rt0.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)AND(t1.c12)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i10, t1, v0 ORDER BY UPPER(DISTINCT ((((t1.c3)OR(rt0.c0)))AND(NULL))));
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i10, t1, v0 WHERE (((((((t1.c1)AND(t1.c12)))AND(v0.c0))) NOT NULL)) ORDER BY UPPER(DISTINCT ((((t1.c3)OR(rt0.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c1)AND(t1.c12)))AND(v0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 INDEXED BY i10, t1, v0 ORDER BY UPPER(DISTINCT ((((t1.c3)OR(rt0.c0)))AND(NULL))));
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((((((NULL)-(t1.c1)))AND(((((rt0.c3)AND(t1.c0)))OR(rt1.c2)))))OR(t1.c12 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((((v0.c1)OR(rt0.c3)))AND(rt0.c3))) ASC, LTRIM((v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)-(t1.c1)))AND(((((rt0.c3)AND(t1.c0)))OR(rt1.c2)))))OR(t1.c12 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY UNLIKELY(DISTINCT ((((v0.c1)OR(rt0.c3)))AND(rt0.c3))) ASC, LTRIM((v0.c0 IN ())) DESC);
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((((((NULL)-(t1.c1)))AND(((((rt0.c3)AND(t1.c0)))OR(rt1.c2)))))OR(t1.c12 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((((v0.c1)OR(rt0.c3)))AND(rt0.c3))) ASC, LTRIM((v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)-(t1.c1)))AND(((((rt0.c3)AND(t1.c0)))OR(rt1.c2)))))OR(t1.c12 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY UNLIKELY(DISTINCT ((((v0.c1)OR(rt0.c3)))AND(rt0.c3))) ASC, LTRIM((v0.c0 IN ())) DESC);
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((((((NULL)-(t1.c1)))AND(((((rt0.c3)AND(t1.c0)))OR(rt1.c2)))))OR(t1.c12 COLLATE RTRIM))) ORDER BY UNLIKELY(DISTINCT ((((v0.c1)OR(rt0.c3)))AND(rt0.c3))) ASC, LTRIM((v0.c0 IN ())) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1))%(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1))%(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1))%(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(rt0.c1))%(NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((HEX(rt0.c1))%(NULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) BETWEEN (((1.7764165E7) NOT BETWEEN (NULL) AND (t1.c0))) AND (HEX(DISTINCT t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) BETWEEN (((1.7764165E7) NOT BETWEEN (NULL) AND (t1.c0))) AND (HEX(DISTINCT t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) BETWEEN (((1.7764165E7) NOT BETWEEN (NULL) AND (t1.c0))) AND (HEX(DISTINCT t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) NOTNULL)) BETWEEN (((1.7764165E7) NOT BETWEEN (NULL) AND (t1.c0))) AND (HEX(DISTINCT t1.c0)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c1) NOTNULL)) BETWEEN (((1.7764165E7) NOT BETWEEN (NULL) AND (t1.c0))) AND (HEX(DISTINCT t1.c0))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c0 THEN rt0.c2 COLLATE NOCASE WHEN IFNULL(rt1.c2, rt1.c0) THEN (('946263039') BETWEEN (v0.c0) AND (rt1.c2)) WHEN ((rt0.c4)%(rt1.c1)) THEN rt1.c1 COLLATE NOCASE END FULL OUTER JOIN rt1 ON ((((rt0.c6)>(v0.c0))) NOT BETWEEN (CAST(rt0.c6 AS INTEGER)) AND (rt0.c0 COLLATE NOCASE)) WHERE ((~ (LTRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c0 THEN rt0.c2 COLLATE NOCASE WHEN IFNULL(rt1.c2, rt1.c0) THEN (('946263039') BETWEEN (v0.c0) AND (rt1.c2)) WHEN ((rt0.c4)%(rt1.c1)) THEN rt1.c1 COLLATE NOCASE END FULL OUTER JOIN rt1 ON ((((rt0.c6)>(v0.c0))) NOT BETWEEN (CAST(rt0.c6 AS INTEGER)) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c0 THEN rt0.c2 COLLATE NOCASE WHEN IFNULL(rt1.c2, rt1.c0) THEN (('946263039') BETWEEN (v0.c0) AND (rt1.c2)) WHEN ((rt0.c4)%(rt1.c1)) THEN rt1.c1 COLLATE NOCASE END FULL OUTER JOIN rt1 ON ((((rt0.c6)>(v0.c0))) NOT BETWEEN (CAST(rt0.c6 AS INTEGER)) AND (rt0.c0 COLLATE NOCASE)) WHERE ((~ (LTRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CASE WHEN v0.c0 THEN rt0.c2 COLLATE NOCASE WHEN IFNULL(rt1.c2, rt1.c0) THEN (('946263039') BETWEEN (v0.c0) AND (rt1.c2)) WHEN ((rt0.c4)%(rt1.c1)) THEN rt1.c1 COLLATE NOCASE END FULL OUTER JOIN rt1 ON ((((rt0.c6)>(v0.c0))) NOT BETWEEN (CAST(rt0.c6 AS INTEGER)) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM v0 WHERE (((('P뤁3d}', v0.c0, (- (v0.c0)), (v0.c2 IN (v0.c0)), (v0.c0 IN ()), (NOT (v0.c1)), ((v0.c0) NOTNULL)))>=(((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)<=(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), COALESCE(v0.c1, v0.c2, v0.c1, v0.c0), (((0.4041450651599362))=((v0.c1))), (((((((('')AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c0)), ((v0.c1) IS TRUE))))) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('P뤁3d}', v0.c0, (- (v0.c0)), (v0.c2 IN (v0.c0)), (v0.c0 IN ()), (NOT (v0.c1)), ((v0.c0) NOTNULL)))>=(((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)<=(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), COALESCE(v0.c1, v0.c2, v0.c1, v0.c0), (((0.4041450651599362))==((v0.c1))), (((((((('')AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c0)), ((v0.c1) IS TRUE))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((('P뤁3d}', v0.c0, (- (v0.c0)), (v0.c2 IN (v0.c0)), (v0.c0 IN ()), (NOT (v0.c1)), ((v0.c0) NOTNULL)))>=(((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)<=(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), COALESCE(v0.c1, v0.c2, v0.c1, v0.c0), (((0.4041450651599362))=((v0.c1))), (((((((('')AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c0)), ((v0.c1) IS TRUE))))) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('P뤁3d}', v0.c0, (- (v0.c0)), (v0.c2 IN (v0.c0)), (v0.c0 IN ()), (NOT (v0.c1)), ((v0.c0) NOTNULL)))>=(((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)<=(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), COALESCE(v0.c1, v0.c2, v0.c1, v0.c0), (((0.4041450651599362))==((v0.c1))), (((((((('')AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c0)), ((v0.c1) IS TRUE))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) NOT NULL) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((('P뤁3d}', v0.c0, (- (v0.c0)), (v0.c2 IN (v0.c0)), (v0.c0 IN ()), (NOT (v0.c1)), ((v0.c0) NOTNULL)))>=(((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0)<=(v0.c1)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), COALESCE(v0.c1, v0.c2, v0.c1, v0.c0), (((0.4041450651599362))=((v0.c1))), (((((((('')AND(v0.c0)))AND(v0.c1)))AND(v0.c2)))AND(v0.c0)), ((v0.c1) IS TRUE))))) ORDER BY (((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1)))) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((rt0.c3)LIKE(rt0.c4)) THEN TRIM(v0.c2, '1971388658') END, rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((rt0.c3)LIKE(rt0.c4)) THEN TRIM(v0.c2, '1971388658') END, rt0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((rt0.c3)LIKE(rt0.c4)) THEN TRIM(v0.c2, '1971388658') END, rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN ((rt0.c3)LIKE(rt0.c4)) THEN TRIM(v0.c2, '1971388658') END, rt0.c3 ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((rt0.c2 COLLATE BINARY IN ())) ORDER BY CASE WHEN ((rt0.c3)LIKE(rt0.c4)) THEN TRIM(v0.c2, '1971388658') END, rt0.c3 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN ())) ORDER BY ''  NULLS FIRST, (rt1.c2 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ''  NULLS FIRST, (rt1.c2 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN ())) ORDER BY ''  NULLS FIRST, (rt1.c2 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ''  NULLS FIRST, (rt1.c2 IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2) IS FALSE) IN ())) ORDER BY ''  NULLS FIRST, (rt1.c2 IN ()) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END)*((v0.c1 IN (rt0.c4)))) WHERE ((((v0.c1))<(((NOT (v0.c2)))))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))<(((NOT (v0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END)*((v0.c1 IN (rt0.c4)))) ORDER BY v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END)*((v0.c1 IN (rt0.c4)))) WHERE ((((v0.c1))<(((NOT (v0.c2)))))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1))<(((NOT (v0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END)*((v0.c1 IN (rt0.c4)))) ORDER BY v0.c2 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c1 END)*((v0.c1 IN (rt0.c4)))) WHERE ((((v0.c1))<(((NOT (v0.c2)))))) ORDER BY v0.c2 ASC  NULLS LAST;
SELECT ALL * FROM v0, t1 WHERE (((CAST(t1.c0 AS INTEGER))IS(v0.c2 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE NOCASE)<(((t1.c3)%(t1.c0)))) DESC, 0.4006231279851875  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))IS(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 ORDER BY ((v0.c0 COLLATE NOCASE)<(((t1.c3)%(t1.c0)))) DESC, 0.4006231279851875  NULLS FIRST);
SELECT ALL * FROM v0, t1 WHERE (((CAST(t1.c0 AS INTEGER))IS(v0.c2 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE NOCASE)<(((t1.c3)%(t1.c0)))) DESC, 0.4006231279851875  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS INTEGER))IS(v0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 ORDER BY ((v0.c0 COLLATE NOCASE)<(((t1.c3)%(t1.c0)))) DESC, 0.4006231279851875  NULLS FIRST);
SELECT ALL * FROM v0, t1 WHERE (((CAST(t1.c0 AS INTEGER))IS(v0.c2 COLLATE RTRIM))) ORDER BY ((v0.c0 COLLATE NOCASE)<(((t1.c3)%(t1.c0)))) DESC, 0.4006231279851875  NULLS FIRST;
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (v0.c2 IN (((rt1.c2) IS FALSE), ((rt1.c0)<(rt1.c0)))) WHERE ((((((((((((((rt1.c1 IN ()))AND(((rt1.c0) ISNULL))))OR(IFNULL(DISTINCT v0.c2, rt1.c1))))AND(CAST(rt1.c0 AS INTEGER))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND((NOT (rt1.c1)))))AND(load_extension(v0.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c1 IN ()))AND(((rt1.c0) ISNULL))))OR(IFNULL(DISTINCT v0.c2, rt1.c1))))AND(CAST(rt1.c0 AS INTEGER))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND((NOT (rt1.c1)))))AND(load_extension(v0.c0, rt1.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON (v0.c2 IN (((rt1.c2) IS FALSE), ((rt1.c0)<(rt1.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (v0.c2 IN (((rt1.c2) IS FALSE), ((rt1.c0)<(rt1.c0)))) WHERE ((((((((((((((rt1.c1 IN ()))AND(((rt1.c0) ISNULL))))OR(IFNULL(DISTINCT v0.c2, rt1.c1))))AND(CAST(rt1.c0 AS INTEGER))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND((NOT (rt1.c1)))))AND(load_extension(v0.c0, rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((rt1.c1 IN ()))AND(((rt1.c0) ISNULL))))OR(IFNULL(DISTINCT v0.c2, rt1.c1))))AND(CAST(rt1.c0 AS INTEGER))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND((NOT (rt1.c1)))))AND(load_extension(v0.c0, rt1.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED LEFT OUTER JOIN rt1 ON (v0.c2 IN (((rt1.c2) IS FALSE), ((rt1.c0)<(rt1.c0)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (v0.c2 IN (((rt1.c2) IS FALSE), ((rt1.c0)<(rt1.c0)))) WHERE ((((((((((((((rt1.c1 IN ()))AND(((rt1.c0) ISNULL))))OR(IFNULL(DISTINCT v0.c2, rt1.c1))))AND(CAST(rt1.c0 AS INTEGER))))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0)))))AND((NOT (rt1.c1)))))AND(load_extension(v0.c0, rt1.c1))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((((NULL)OR(rt0.c3)))AND(rt0.c6)) AS REAL)) ORDER BY ((rt0.c0)|(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(rt0.c3)))AND(rt0.c6)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt0.c0)|(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (NULL IN ()) DESC);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((((NULL)OR(rt0.c3)))AND(rt0.c6)) AS REAL)) ORDER BY ((rt0.c0)|(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)OR(rt0.c3)))AND(rt0.c6)) AS REAL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((rt0.c0)|(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (NULL IN ()) DESC);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(((((NULL)OR(rt0.c3)))AND(rt0.c6)) AS REAL)) ORDER BY ((rt0.c0)|(rt0.c2)) COLLATE BINARY ASC  NULLS LAST, (NULL IN ()) DESC;
SELECT ALL * FROM v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND ((('253468399') BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((1234626667) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND ((('253468399') BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((1234626667) ISNULL) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND ((('253468399') BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((1234626667) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) ISNULL)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND ((('253468399') BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((1234626667) ISNULL) ASC);
SELECT ALL * FROM v0 WHERE (((((v0.c2) ISNULL)) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND ((('253468399') BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((1234626667) ISNULL) ASC;
SELECT * FROM t1, rt1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY ((CAST(t1.c4 AS TEXT)) NOT BETWEEN ((t1.c0 IN (0x579e060e, rt1.c1))) AND (((t1.c12) ISNULL))), CASE WHEN ABS(DISTINCT rt1.c2) THEN CAST(rt1.c2 AS TEXT) WHEN (0X6862cc IN ()) THEN (((t1.c2, t1.c0, rt1.c0))!=((t1.c3, rt1.c1, t1.c2))) WHEN CAST(t1.c0 AS TEXT) THEN 0.03113683037736903 ELSE ((rt1.c2)%(t1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((CAST(t1.c4 AS TEXT)) NOT BETWEEN ((t1.c0 IN (0X579e060e, rt1.c1))) AND (((t1.c12) ISNULL))), CASE WHEN ABS(DISTINCT rt1.c2) THEN CAST(rt1.c2 AS TEXT) WHEN (0x6862cc IN ()) THEN (((t1.c2, t1.c0, rt1.c0))<>((t1.c3, rt1.c1, t1.c2))) WHEN CAST(t1.c0 AS TEXT) THEN 0.03113683037736903 ELSE ((rt1.c2)%(t1.c1)) END ASC);
SELECT * FROM t1, rt1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY ((CAST(t1.c4 AS TEXT)) NOT BETWEEN ((t1.c0 IN (0x579e060e, rt1.c1))) AND (((t1.c12) ISNULL))), CASE WHEN ABS(DISTINCT rt1.c2) THEN CAST(rt1.c2 AS TEXT) WHEN (0X6862cc IN ()) THEN (((t1.c2, t1.c0, rt1.c0))!=((t1.c3, rt1.c1, t1.c2))) WHEN CAST(t1.c0 AS TEXT) THEN 0.03113683037736903 ELSE ((rt1.c2)%(t1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((CAST(t1.c4 AS TEXT)) NOT BETWEEN ((t1.c0 IN (0X579e060e, rt1.c1))) AND (((t1.c12) ISNULL))), CASE WHEN ABS(DISTINCT rt1.c2) THEN CAST(rt1.c2 AS TEXT) WHEN (0x6862cc IN ()) THEN (((t1.c2, t1.c0, rt1.c0))<>((t1.c3, rt1.c1, t1.c2))) WHEN CAST(t1.c0 AS TEXT) THEN 0.03113683037736903 ELSE ((rt1.c2)%(t1.c1)) END ASC);
SELECT * FROM t1, rt1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY ((CAST(t1.c4 AS TEXT)) NOT BETWEEN ((t1.c0 IN (0x579e060e, rt1.c1))) AND (((t1.c12) ISNULL))), CASE WHEN ABS(DISTINCT rt1.c2) THEN CAST(rt1.c2 AS TEXT) WHEN (0X6862cc IN ()) THEN (((t1.c2, t1.c0, rt1.c0))!=((t1.c3, rt1.c1, t1.c2))) WHEN CAST(t1.c0 AS TEXT) THEN 0.03113683037736903 ELSE ((rt1.c2)%(t1.c1)) END ASC;
SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON (((((t1.c1)) NOT BETWEEN ((v0.c1)) AND ((t1.c0))))AND((x'' IN ()))) CROSS JOIN t1 ON NULL WHERE (CASE t1.c1 COLLATE BINARY  WHEN CAST(t1.c0 AS BLOB) THEN CAST(rt0.c4 AS TEXT) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN (t1.c0 IN ()) THEN CASE WHEN rt1.c2 THEN rt0.c6 END END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1 COLLATE BINARY  WHEN CAST(t1.c0 AS BLOB) THEN CAST(rt0.c4 AS TEXT) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN (t1.c0 IN ()) THEN CASE WHEN rt1.c2 THEN rt0.c6 END END) IS TRUE)  as count FROM rt0, v0 INNER JOIN rt1 ON (((((t1.c1)) NOT BETWEEN ((v0.c1)) AND ((t1.c0))))AND((x'' IN ()))) CROSS JOIN t1 ON NULL);
SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON (((((t1.c1)) NOT BETWEEN ((v0.c1)) AND ((t1.c0))))AND((x'' IN ()))) CROSS JOIN t1 ON NULL WHERE (CASE t1.c1 COLLATE BINARY  WHEN CAST(t1.c0 AS BLOB) THEN CAST(rt0.c4 AS TEXT) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN (t1.c0 IN ()) THEN CASE WHEN rt1.c2 THEN rt0.c6 END END);
SELECT SUM(count) FROM (SELECT ((CASE t1.c1 COLLATE BINARY  WHEN CAST(t1.c0 AS BLOB) THEN CAST(rt0.c4 AS TEXT) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN (t1.c0 IN ()) THEN CASE WHEN rt1.c2 THEN rt0.c6 END END) IS TRUE)  as count FROM rt0, v0 INNER JOIN rt1 ON (((((t1.c1)) NOT BETWEEN ((v0.c1)) AND ((t1.c0))))AND((x'' IN ()))) CROSS JOIN t1 ON NULL);
SELECT ALL * FROM rt0, v0 INNER JOIN rt1 ON (((((t1.c1)) NOT BETWEEN ((v0.c1)) AND ((t1.c0))))AND((x'' IN ()))) CROSS JOIN t1 ON NULL WHERE (CASE t1.c1 COLLATE BINARY  WHEN CAST(t1.c0 AS BLOB) THEN CAST(rt0.c4 AS TEXT) WHEN TYPEOF(DISTINCT rt0.c2) THEN ((rt0.c1)LIKE(rt1.c0)) WHEN (t1.c0 IN ()) THEN CASE WHEN rt1.c2 THEN rt0.c6 END END);
SELECT ALL * FROM rt0 NOT INDEXED, t1, v0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((- (v0.c1))))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL * FROM rt0 NOT INDEXED, t1, v0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((- (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((- (v0.c1))))) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL * FROM rt0 NOT INDEXED, t1, v0 WHERE ((((+ (rt0.c2))) NOT BETWEEN (((rt0.c4) NOT NULL)) AND ((- (v0.c1)))));
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (x'4949' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'4949' COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (x'4949' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'4949' COLLATE RTRIM) IS TRUE)  as count FROM v0 NATURAL JOIN rt1);
SELECT ALL * FROM v0 NATURAL JOIN rt1 WHERE (x'4949' COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 COLLATE NOCASE THEN ((t1.c3)<>(t1.c12)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY (((t1.c12) BETWEEN (t1.c3) AND (t1.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c1 COLLATE NOCASE THEN ((t1.c3)!=(t1.c12)) ELSE (t1.c0 IN (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c12) BETWEEN (t1.c3) AND (t1.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 COLLATE NOCASE THEN ((t1.c3)<>(t1.c12)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY (((t1.c12) BETWEEN (t1.c3) AND (t1.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c1 COLLATE NOCASE THEN ((t1.c3)!=(t1.c12)) ELSE (t1.c0 IN (t1.c0)) END) IS TRUE)  as count FROM t1 ORDER BY (((t1.c12) BETWEEN (t1.c3) AND (t1.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN t1.c1 COLLATE NOCASE THEN ((t1.c3)<>(t1.c12)) ELSE (t1.c0 IN (t1.c0)) END) ORDER BY (((t1.c12) BETWEEN (t1.c3) AND (t1.c3)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t1, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((t1.c3)>(NULL))) AND (x''))) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((t1.c3)>(NULL))) AND (x''))) IS TRUE)  as count FROM t1, rt1 ORDER BY SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t1, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((t1.c3)>(NULL))) AND (x''))) ORDER BY SQLITE_SOURCE_ID();
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((t1.c3)>(NULL))) AND (x''))) IS TRUE)  as count FROM t1, rt1 ORDER BY SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t1, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((t1.c3)>(NULL))) AND (x''))) ORDER BY SQLITE_SOURCE_ID();
SELECT * FROM rt1, rt0, t1, v0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND('*')))OR(v0.c1))) ISNULL)  NULLS LAST, ((t1.c0 COLLATE BINARY)*(((v0.c2)AND(rt0.c1)))) ASC  NULLS FIRST, (((rt0.c5, t1.c0, rt1.c0)) NOT BETWEEN ((0.4728200260497972, CASE 0.8406590945476262  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END, (- (t1.c4)))) AND (((NOT (rt0.c2)), ((rt0.c6) ISNULL), CASE rt0.c4  WHEN v0.c0 THEN rt1.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY ((((((rt0.c0)AND('*')))OR(v0.c1))) ISNULL)  NULLS LAST, ((t1.c0 COLLATE BINARY)*(((v0.c2)AND(rt0.c1)))) ASC  NULLS FIRST, (((rt0.c5, t1.c0, rt1.c0)) NOT BETWEEN ((0.4728200260497972, CASE 0.8406590945476262  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END, (- (t1.c4)))) AND (((NOT (rt0.c2)), ((rt0.c6) ISNULL), CASE rt0.c4  WHEN v0.c0 THEN rt1.c0 ELSE t1.c0 END))));
SELECT * FROM rt1, rt0, t1, v0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND('*')))OR(v0.c1))) ISNULL)  NULLS LAST, ((t1.c0 COLLATE BINARY)*(((v0.c2)AND(rt0.c1)))) ASC  NULLS FIRST, (((rt0.c5, t1.c0, rt1.c0)) NOT BETWEEN ((0.4728200260497972, CASE 0.8406590945476262  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END, (- (t1.c4)))) AND (((NOT (rt0.c2)), ((rt0.c6) ISNULL), CASE rt0.c4  WHEN v0.c0 THEN rt1.c0 ELSE t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY ((((((rt0.c0)AND('*')))OR(v0.c1))) ISNULL)  NULLS LAST, ((t1.c0 COLLATE BINARY)*(((v0.c2)AND(rt0.c1)))) ASC  NULLS FIRST, (((rt0.c5, t1.c0, rt1.c0)) NOT BETWEEN ((0.4728200260497972, CASE 0.8406590945476262  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END, (- (t1.c4)))) AND (((NOT (rt0.c2)), ((rt0.c6) ISNULL), CASE rt0.c4  WHEN v0.c0 THEN rt1.c0 ELSE t1.c0 END))));
SELECT * FROM rt1, rt0, t1, v0 WHERE (NULL) ORDER BY ((((((rt0.c0)AND('*')))OR(v0.c1))) ISNULL)  NULLS LAST, ((t1.c0 COLLATE BINARY)*(((v0.c2)AND(rt0.c1)))) ASC  NULLS FIRST, (((rt0.c5, t1.c0, rt1.c0)) NOT BETWEEN ((0.4728200260497972, CASE 0.8406590945476262  WHEN t1.c0 THEN rt0.c4 ELSE rt0.c0 END, (- (t1.c4)))) AND (((NOT (rt0.c2)), ((rt0.c6) ISNULL), CASE rt0.c4  WHEN v0.c0 THEN rt1.c0 ELSE t1.c0 END)));
SELECT ALL * FROM v0, rt1, rt0, t1 WHERE ((~ (((t1.c2)!=('120229740')))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2)<>('120229740'))))) IS TRUE)  as count FROM v0, rt1, rt0, t1);
SELECT ALL * FROM v0, rt1, rt0, t1 WHERE ((~ (((t1.c2)!=('120229740')))));
SELECT SUM(count) FROM (SELECT (((~ (((t1.c2)<>('120229740'))))) IS TRUE)  as count FROM v0, rt1, rt0, t1);
SELECT ALL * FROM v0, rt1, rt0, t1 WHERE ((~ (((t1.c2)!=('120229740')))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (NULL)));
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN ((~ (v0.c1))) AND (((v0.c0)=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT BETWEEN ((~ (v0.c1))) AND (((v0.c0)=(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN ((~ (v0.c1))) AND (((v0.c0)=(v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (v0.c0))) NOT BETWEEN ((~ (v0.c1))) AND (((v0.c0)=(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN ((~ (v0.c1))) AND (((v0.c0)=(v0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN t1.c3 THEN rt0.c1 ELSE v0.c1 END) BETWEEN (((NULL) NOTNULL)) AND ((x'' IN ()))) INNER JOIN rt1 ON (((((rt1.c2, t1.c4, t1.c1))!=((rt1.c2, rt1.c1, 3.69764285E8)))) NOT BETWEEN (((rt0.c3)AND(rt1.c2))) AND (((t1.c4) NOT BETWEEN (3.69764285E8) AND (t1.c2)))) LEFT OUTER JOIN t1 ON (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) IN ()) WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY ((CASE rt0.c3  WHEN t1.c12 THEN t1.c2 END) ISNULL) DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOTNULL) THEN t1.c3 COLLATE RTRIM WHEN CASE rt0.c1  WHEN t1.c3 THEN rt0.c5 WHEN rt0.c4 THEN 0.8963434949556037 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c4 END THEN NULL COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (t1.c1) AND (t1.c3)) THEN (((rt0.c4, v0.c0, NULL)) NOT BETWEEN ((rt1.c1, rt0.c3, rt1.c2)) AND ((rt1.c2, rt1.c0, ''))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN t1.c3 THEN rt0.c1 ELSE v0.c1 END) BETWEEN (((NULL) NOTNULL)) AND ((x'' IN ()))) INNER JOIN rt1 ON (((((rt1.c2, t1.c4, t1.c1))!=((rt1.c2, rt1.c1, 3.69764285E8)))) NOT BETWEEN (((rt0.c3)AND(rt1.c2))) AND (((t1.c4) NOT BETWEEN (3.69764285E8) AND (t1.c2)))) LEFT OUTER JOIN t1 ON (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) IN ()) ORDER BY ((CASE rt0.c3  WHEN t1.c12 THEN t1.c2 END) ISNULL) DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOTNULL) THEN t1.c3 COLLATE RTRIM WHEN CASE rt0.c1  WHEN t1.c3 THEN rt0.c5 WHEN rt0.c4 THEN 0.8963434949556037 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c4 END THEN NULL COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (t1.c1) AND (t1.c3)) THEN (((rt0.c4, v0.c0, NULL)) NOT BETWEEN ((rt1.c1, rt0.c3, rt1.c2)) AND ((rt1.c2, rt1.c0, ''))) END ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN t1.c3 THEN rt0.c1 ELSE v0.c1 END) BETWEEN (((NULL) NOTNULL)) AND ((x'' IN ()))) INNER JOIN rt1 ON (((((rt1.c2, t1.c4, t1.c1))!=((rt1.c2, rt1.c1, 3.69764285E8)))) NOT BETWEEN (((rt0.c3)AND(rt1.c2))) AND (((t1.c4) NOT BETWEEN (3.69764285E8) AND (t1.c2)))) LEFT OUTER JOIN t1 ON (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) IN ()) WHERE ((NOT (rt0.c0 COLLATE BINARY))) ORDER BY ((CASE rt0.c3  WHEN t1.c12 THEN t1.c2 END) ISNULL) DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOTNULL) THEN t1.c3 COLLATE RTRIM WHEN CASE rt0.c1  WHEN t1.c3 THEN rt0.c5 WHEN rt0.c4 THEN 0.8963434949556037 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c4 END THEN NULL COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (t1.c1) AND (t1.c3)) THEN (((rt0.c4, v0.c0, NULL)) NOT BETWEEN ((rt1.c1, rt0.c3, rt1.c2)) AND ((rt1.c2, rt1.c0, ''))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((CASE WHEN t1.c3 THEN rt0.c1 ELSE v0.c1 END) BETWEEN (((NULL) NOTNULL)) AND ((x'' IN ()))) INNER JOIN rt1 ON (((((rt1.c2, t1.c4, t1.c1))!=((rt1.c2, rt1.c1, 3.69764285E8)))) NOT BETWEEN (((rt0.c3)AND(rt1.c2))) AND (((t1.c4) NOT BETWEEN (3.69764285E8) AND (t1.c2)))) LEFT OUTER JOIN t1 ON (((rt0.c3) NOT BETWEEN (NULL) AND (rt0.c0)) IN ()) ORDER BY ((CASE rt0.c3  WHEN t1.c12 THEN t1.c2 END) ISNULL) DESC  NULLS LAST, CASE WHEN ((rt1.c1) NOTNULL) THEN t1.c3 COLLATE RTRIM WHEN CASE rt0.c1  WHEN t1.c3 THEN rt0.c5 WHEN rt0.c4 THEN 0.8963434949556037 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 ELSE t1.c4 END THEN NULL COLLATE NOCASE WHEN ((rt0.c1) NOT BETWEEN (t1.c1) AND (t1.c3)) THEN (((rt0.c4, v0.c0, NULL)) NOT BETWEEN ((rt1.c1, rt0.c3, rt1.c2)) AND ((rt1.c2, rt1.c0, ''))) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON rtreenode((((rt1.c1)) BETWEEN ((-1.860289476E9)) AND ((t1.c4))), (((t1.c2, t1.c3, t1.c4))!=((t1.c1, t1.c12, t1.c12)))) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON rtreenode((((rt1.c1)) BETWEEN ((-1.860289476E9)) AND ((t1.c4))), (((t1.c2, t1.c3, t1.c4))<>((t1.c1, t1.c12, t1.c12)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON rtreenode((((rt1.c1)) BETWEEN ((-1.860289476E9)) AND ((t1.c4))), (((t1.c2, t1.c3, t1.c4))!=((t1.c1, t1.c12, t1.c12)))) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON rtreenode((((rt1.c1)) BETWEEN ((-1.860289476E9)) AND ((t1.c4))), (((t1.c2, t1.c3, t1.c4))<>((t1.c1, t1.c12, t1.c12)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON rtreenode((((rt1.c1)) BETWEEN ((-1.860289476E9)) AND ((t1.c4))), (((t1.c2, t1.c3, t1.c4))!=((t1.c1, t1.c12, t1.c12)))) WHERE (t1.c1);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT rt0.c1, 0.22792622597728307) FULL OUTER JOIN v0 ON (- (((((((((t1.c12)OR(rt0.c0)))OR(t1.c12)))AND(rt0.c1)))OR(v0.c0)))) WHERE (COALESCE(DISTINCT t1.c3, t1.c1) COLLATE NOCASE) ORDER BY CAST(v0.c2 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c3, t1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT rt0.c1, 0.22792622597728307) FULL OUTER JOIN v0 ON (- (((((((((t1.c12)OR(rt0.c0)))OR(t1.c12)))AND(rt0.c1)))OR(v0.c0)))) ORDER BY CAST(v0.c2 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT rt0.c1, 0.22792622597728307) FULL OUTER JOIN v0 ON (- (((((((((t1.c12)OR(rt0.c0)))OR(t1.c12)))AND(rt0.c1)))OR(v0.c0)))) WHERE (COALESCE(DISTINCT t1.c3, t1.c1) COLLATE NOCASE) ORDER BY CAST(v0.c2 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t1.c3, t1.c1) COLLATE NOCASE) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT rt0.c1, 0.22792622597728307) FULL OUTER JOIN v0 ON (- (((((((((t1.c12)OR(rt0.c0)))OR(t1.c12)))AND(rt0.c1)))OR(v0.c0)))) ORDER BY CAST(v0.c2 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT rt0.c1, 0.22792622597728307) FULL OUTER JOIN v0 ON (- (((((((((t1.c12)OR(rt0.c0)))OR(t1.c12)))AND(rt0.c1)))OR(v0.c0)))) WHERE (COALESCE(DISTINCT t1.c3, t1.c1) COLLATE NOCASE) ORDER BY CAST(v0.c2 AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON '1878111897' WHERE (t1.c12);
SELECT SUM(count) FROM (SELECT ALL ((t1.c12) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON '1878111897');
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON '1878111897' WHERE (t1.c12);
SELECT SUM(count) FROM (SELECT ALL ((t1.c12) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON '1878111897');
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON '1878111897' WHERE (t1.c12);
SELECT * FROM v0 WHERE (((((NOT (v0.c0))))==((((((v0.c1)OR(v0.c2)))AND('493813936')))))) ORDER BY 0.8363486965859114 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (v0.c0))))=((((((v0.c1)OR(v0.c2)))AND('493813936')))))) IS TRUE)  as count FROM v0 ORDER BY 0.8363486965859114 DESC);
SELECT * FROM v0 WHERE (((((NOT (v0.c0))))==((((((v0.c1)OR(v0.c2)))AND('493813936')))))) ORDER BY 0.8363486965859114 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (v0.c0))))=((((((v0.c1)OR(v0.c2)))AND('493813936')))))) IS TRUE)  as count FROM v0 ORDER BY 0.8363486965859114 DESC);
SELECT * FROM v0 WHERE (((((NOT (v0.c0))))==((((((v0.c1)OR(v0.c2)))AND('493813936')))))) ORDER BY 0.8363486965859114 DESC;
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'8937')%(rt0.c6))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((0X66a4d2ff)))) AND (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c2))))) ORDER BY ((CAST(rt0.c5 AS TEXT))=((- (rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'8937')%(rt0.c6))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((0X66a4d2ff)))) AND (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))=((- (rt0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'8937')%(rt0.c6))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((0X66a4d2ff)))) AND (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c2))))) ORDER BY ((CAST(rt0.c5 AS TEXT))=((- (rt0.c6))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'8937')%(rt0.c6))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((0X66a4d2ff)))) AND (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((CAST(rt0.c5 AS TEXT))=((- (rt0.c6))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (((((x'8937')%(rt0.c6))) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((0X66a4d2ff)))) AND (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c2))))) ORDER BY ((CAST(rt0.c5 AS TEXT))=((- (rt0.c6))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN t1.c1 END IN (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c0 THEN t1.c1 END IN (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN t1.c1 END IN (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c0  WHEN rt1.c0 THEN t1.c1 END IN (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM rt1, rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((CASE rt1.c0  WHEN rt1.c0 THEN t1.c1 END IN (((v0.c2) NOT NULL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (+ (CASE WHEN rt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c6 THEN NULL END)) CROSS JOIN rt1 ON UNLIKELY(NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (CASE WHEN rt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c6 THEN NULL END)) CROSS JOIN rt1 ON UNLIKELY(NULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (+ (CASE WHEN rt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c6 THEN NULL END)) CROSS JOIN rt1 ON UNLIKELY(NULL) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (+ (CASE WHEN rt0.c0 THEN v0.c2 WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c6 THEN NULL END)) CROSS JOIN rt1 ON UNLIKELY(NULL));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (NULL)))IS(v0.c0))) ORDER BY LIKELY((v0.c1 IN (v0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (NULL)))IS(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELY((v0.c1 IN (v0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (NULL)))IS(v0.c0))) ORDER BY LIKELY((v0.c1 IN (v0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (v0.c2) AND (NULL)))IS(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY LIKELY((v0.c1 IN (v0.c1))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1) BETWEEN (v0.c2) AND (NULL)))IS(v0.c0))) ORDER BY LIKELY((v0.c1 IN (v0.c1))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE (((('-128054687' IN ())) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c1)) AND (((((((((v0.c0)AND('0.24336729713566885')))OR(NULL)))OR(t1.c2)))OR(x''))))) ORDER BY CAST(CASE t1.c2  WHEN v0.c0 THEN v0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-128054687' IN ())) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c1)) AND (((((((((v0.c0)AND('0.24336729713566885')))OR(NULL)))OR(t1.c2)))OR(x''))))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY CAST(CASE t1.c2  WHEN v0.c0 THEN v0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE (((('-128054687' IN ())) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c1)) AND (((((((((v0.c0)AND('0.24336729713566885')))OR(NULL)))OR(t1.c2)))OR(x''))))) ORDER BY CAST(CASE t1.c2  WHEN v0.c0 THEN v0.c0 END AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-128054687' IN ())) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c1)) AND (((((((((v0.c0)AND('0.24336729713566885')))OR(NULL)))OR(t1.c2)))OR(x''))))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY CAST(CASE t1.c2  WHEN v0.c0 THEN v0.c0 END AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE (((('-128054687' IN ())) BETWEEN (TRIM(DISTINCT rt1.c2, rt1.c1)) AND (((((((((v0.c0)AND('0.24336729713566885')))OR(NULL)))OR(t1.c2)))OR(x''))))) ORDER BY CAST(CASE t1.c2  WHEN v0.c0 THEN v0.c0 END AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, rt1, t1);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0, rt1, t1);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2);
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c1)-(rt1.c2)))) ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END IN ()) DESC  NULLS LAST, TRIM((rt1.c2 IN (rt1.c0, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c1)-(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END IN ()) DESC  NULLS LAST, TRIM((rt1.c2 IN (rt1.c0, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c1)-(rt1.c2)))) ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END IN ()) DESC  NULLS LAST, TRIM((rt1.c2 IN (rt1.c0, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt1.c1)-(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END IN ()) DESC  NULLS LAST, TRIM((rt1.c2 IN (rt1.c0, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (ABS(((rt1.c1)-(rt1.c2)))) ORDER BY (CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END IN ()) DESC  NULLS LAST, TRIM((rt1.c2 IN (rt1.c0, rt1.c0)));
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL * FROM v0, rt1 INNER JOIN t1 ON (((((((rt0.c6)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))))AND((t1.c3 IN ()))))AND((+ (rt0.c5)))) LEFT OUTER JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((CASE WHEN t1.c4 THEN NULL END)AND((+ (rt1.c1)))))OR(TRIM(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t1.c4 THEN NULL END)AND((+ (rt1.c1)))))OR(TRIM(DISTINCT rt1.c2)))) IS TRUE)  as count FROM v0, rt1 INNER JOIN t1 ON (((((((rt0.c6)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))))AND((t1.c3 IN ()))))AND((+ (rt0.c5)))) LEFT OUTER JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0, rt1 INNER JOIN t1 ON (((((((rt0.c6)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))))AND((t1.c3 IN ()))))AND((+ (rt0.c5)))) LEFT OUTER JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((CASE WHEN t1.c4 THEN NULL END)AND((+ (rt1.c1)))))OR(TRIM(DISTINCT rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN t1.c4 THEN NULL END)AND((+ (rt1.c1)))))OR(TRIM(DISTINCT rt1.c2)))) IS TRUE)  as count FROM v0, rt1 INNER JOIN t1 ON (((((((rt0.c6)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))))AND((t1.c3 IN ()))))AND((+ (rt0.c5)))) LEFT OUTER JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN ()));
SELECT ALL * FROM v0, rt1 INNER JOIN t1 ON (((((((rt0.c6)) NOT BETWEEN ((rt1.c0)) AND ((t1.c1))))AND((t1.c3 IN ()))))AND((+ (rt0.c5)))) LEFT OUTER JOIN rt0 ON (rt1.c2 COLLATE RTRIM IN ()) WHERE (((((CASE WHEN t1.c4 THEN NULL END)AND((+ (rt1.c1)))))OR(TRIM(DISTINCT rt1.c2))));
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (((((t1.c4)OR(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c4)OR(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (((((t1.c4)OR(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c4)OR(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE (((((t1.c4)OR(rt1.c2))) IS TRUE));
SELECT ALL * FROM rt1, v0, t1 WHERE (((CASE rt1.c1  WHEN t1.c0 THEN 0X53157316 WHEN t1.c1 THEN v0.c2 WHEN v0.c1 THEN t1.c2 ELSE t1.c4 END)IS NOT(((t1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN t1.c0 THEN 0X53157316 WHEN t1.c1 THEN v0.c2 WHEN v0.c1 THEN t1.c2 ELSE t1.c4 END)IS NOT(((t1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, t1);
SELECT ALL * FROM rt1, v0, t1 WHERE (((CASE rt1.c1  WHEN t1.c0 THEN 0X53157316 WHEN t1.c1 THEN v0.c2 WHEN v0.c1 THEN t1.c2 ELSE t1.c4 END)IS NOT(((t1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN t1.c0 THEN 0X53157316 WHEN t1.c1 THEN v0.c2 WHEN v0.c1 THEN t1.c2 ELSE t1.c4 END)IS NOT(((t1.c1) NOTNULL)))) IS TRUE)  as count FROM rt1, v0, t1);
SELECT ALL * FROM rt1, v0, t1 WHERE (((CASE rt1.c1  WHEN t1.c0 THEN 0X53157316 WHEN t1.c1 THEN v0.c2 WHEN v0.c1 THEN t1.c2 ELSE t1.c4 END)IS NOT(((t1.c1) NOTNULL))));
SELECT COUNT(*) FROM t1 WHERE (((('cJ'))=(('0.8910879808181563'))) COLLATE NOCASE) ORDER BY (((t1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((('cJ'))==(('0.8910879808181563'))) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM t1 WHERE (((('cJ'))=(('0.8910879808181563'))) COLLATE NOCASE) ORDER BY (((t1.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((('cJ'))==(('0.8910879808181563'))) COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM t1 WHERE (((('cJ'))=(('0.8910879808181563'))) COLLATE NOCASE) ORDER BY (((t1.c0 IN ())) IS TRUE);
SELECT COUNT(*) FROM v0 WHERE ('1795512017') ORDER BY CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))  WHEN v0.c1 THEN v0.c1 WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c2)<<(v0.c1)) WHEN CAST(v0.c0 AS REAL) THEN (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c2, v0.c1, v0.c2))) END;
SELECT SUM(count) FROM (SELECT (('1795512017') IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))  WHEN v0.c1 THEN v0.c1 WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c2)<<(v0.c1)) WHEN CAST(v0.c0 AS REAL) THEN (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c2, v0.c1, v0.c2))) END);
SELECT COUNT(*) FROM v0 WHERE ('1795512017') ORDER BY CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))  WHEN v0.c1 THEN v0.c1 WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c2)<<(v0.c1)) WHEN CAST(v0.c0 AS REAL) THEN (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c2, v0.c1, v0.c2))) END;
SELECT SUM(count) FROM (SELECT (('1795512017') IS TRUE)  as count FROM v0 ORDER BY CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))  WHEN v0.c1 THEN v0.c1 WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c2)<<(v0.c1)) WHEN CAST(v0.c0 AS REAL) THEN (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c2, v0.c1, v0.c2))) END);
SELECT COUNT(*) FROM v0 WHERE ('1795512017') ORDER BY CASE ((((((((v0.c1)AND(v0.c1)))OR(v0.c2)))OR(v0.c1)))AND(v0.c0))  WHEN v0.c1 THEN v0.c1 WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN ((v0.c2)<<(v0.c1)) WHEN CAST(v0.c0 AS REAL) THEN (((v0.c1, v0.c2, v0.c2)) NOT BETWEEN ((v0.c2, v0.c1, v0.c0)) AND ((v0.c2, v0.c1, v0.c2))) END;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULLIF(((((((((t1.c12)OR(rt1.c2)))OR(t1.c1)))OR(0.6406484673934862)))OR(rt0.c5)), CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c6 END) LEFT OUTER JOIN t1 ON t1.c4 CROSS JOIN v0 ON (~ (x'')) WHERE (((((t1.c12 IN (0.25689314451104606, v0.c0))))<=(((('')%(rt0.c2)))))) ORDER BY t1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12 IN (0.25689314451104606, v0.c0))))<=(((('')%(rt0.c2)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULLIF(((((((((t1.c12)OR(rt1.c2)))OR(t1.c1)))OR(0.6406484673934862)))OR(rt0.c5)), CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c6 END) LEFT OUTER JOIN t1 ON t1.c4 CROSS JOIN v0 ON (~ (x'')) ORDER BY t1.c3);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON NULLIF(((((((((t1.c12)OR(rt1.c2)))OR(t1.c1)))OR(0.6406484673934862)))OR(rt0.c5)), CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c6 END) LEFT OUTER JOIN t1 ON t1.c4 CROSS JOIN v0 ON (~ (x'')) WHERE (((((t1.c12 IN (0.25689314451104606, v0.c0))))<=(((('')%(rt0.c2)))))) ORDER BY t1.c3;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12 IN (0.25689314451104606, v0.c0))))<=(((('')%(rt0.c2)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON NULLIF(((((((((t1.c12)OR(rt1.c2)))OR(t1.c1)))OR(0.6406484673934862)))OR(rt0.c5)), CASE WHEN rt1.c2 THEN rt0.c2 ELSE rt0.c6 END) LEFT OUTER JOIN t1 ON t1.c4 CROSS JOIN v0 ON (~ (x'')) ORDER BY t1.c3);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))+(rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(rt0.c5 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))+(rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c0) IS TRUE))+(rt0.c5 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (NULL))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (NULL))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((((NOT (NULL))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((NOT (NULL))) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2)))));
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN 1.770426025E9 ELSE t1.c3 END)) ORDER BY (((((((('2086076386')OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c3)))OR(v0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN v0.c2 THEN 1.770426025E9 ELSE t1.c3 END)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY (((((((('2086076386')OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c3)))OR(v0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN 1.770426025E9 ELSE t1.c3 END)) ORDER BY (((((((('2086076386')OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c3)))OR(v0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN v0.c2 THEN 1.770426025E9 ELSE t1.c3 END)) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY (((((((('2086076386')OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c3)))OR(v0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, rt0, t1 WHERE (UPPER(DISTINCT CASE WHEN v0.c2 THEN 1.770426025E9 ELSE t1.c3 END)) ORDER BY (((((((('2086076386')OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c3)))OR(v0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)<=(((rt1.c2)>=(rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR((((0.39189262934680313, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))))))OR(CASE rt1.c1  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS LAST, ((((((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOTNULL), ((rt1.c1)||(rt1.c1))))<((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)), ((rt1.c2)<<(rt1.c2)), CAST(rt1.c0 AS INTEGER)))), ((rt1.c0 COLLATE BINARY)>=(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)<=(((rt1.c2)>=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) IS TRUE))OR((((0.39189262934680313, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))))))OR(CASE rt1.c1  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS LAST, ((((((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOTNULL), ((rt1.c1)||(rt1.c1))))<((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)), ((rt1.c2)<<(rt1.c2)), CAST(rt1.c0 AS INTEGER)))), ((rt1.c0 COLLATE BINARY)>=(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)<=(((rt1.c2)>=(rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR((((0.39189262934680313, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))))))OR(CASE rt1.c1  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS LAST, ((((((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOTNULL), ((rt1.c1)||(rt1.c1))))<((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)), ((rt1.c2)<<(rt1.c2)), CAST(rt1.c0 AS INTEGER)))), ((rt1.c0 COLLATE BINARY)>=(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)<=(((rt1.c2)>=(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c1) IS TRUE))OR((((0.39189262934680313, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))))))OR(CASE rt1.c1  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS LAST, ((((((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOTNULL), ((rt1.c1)||(rt1.c1))))<((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)), ((rt1.c2)<<(rt1.c2)), CAST(rt1.c0 AS INTEGER)))), ((rt1.c0 COLLATE BINARY)>=(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE BINARY)<=(((rt1.c2)>=(rt1.c1))))) ORDER BY ((((((rt1.c1) IS TRUE))OR((((0.39189262934680313, rt1.c1, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2))))))OR(CASE rt1.c1  WHEN x'' THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END)) ASC  NULLS LAST, ((((((rt1.c2))<=((rt1.c1))), ((rt1.c0) NOTNULL), ((rt1.c1)||(rt1.c1))))<((((rt1.c1) NOT BETWEEN (x'') AND (rt1.c1)), ((rt1.c2)<<(rt1.c2)), CAST(rt1.c0 AS INTEGER)))), ((rt1.c0 COLLATE BINARY)>=(((rt1.c1) IS FALSE))) DESC  NULLS FIRST, rt1.c1  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY CASE (((v0.c1, v0.c0, t1.c12)) NOT BETWEEN ((v0.c2, rt0.c5, t1.c12)) AND ((t1.c3, rt0.c6, t1.c2)))  WHEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c0, v0.c1, t1.c2))==((rt1.c1, rt0.c4, v0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY CASE (((v0.c1, v0.c0, t1.c12)) NOT BETWEEN ((v0.c2, rt0.c5, t1.c12)) AND ((t1.c3, rt0.c6, t1.c2)))  WHEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c0, v0.c1, t1.c2))=((rt1.c1, rt0.c4, v0.c1))) END DESC);
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY CASE (((v0.c1, v0.c0, t1.c12)) NOT BETWEEN ((v0.c2, rt0.c5, t1.c12)) AND ((t1.c3, rt0.c6, t1.c2)))  WHEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c0, v0.c1, t1.c2))==((rt1.c1, rt0.c4, v0.c1))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY CASE (((v0.c1, v0.c0, t1.c12)) NOT BETWEEN ((v0.c2, rt0.c5, t1.c12)) AND ((t1.c3, rt0.c6, t1.c2)))  WHEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c0, v0.c1, t1.c2))=((rt1.c1, rt0.c4, v0.c1))) END DESC);
SELECT COUNT(*) FROM t1, rt1, rt0, v0 WHERE (((~ (rt0.c1)) IN ())) ORDER BY CASE (((v0.c1, v0.c0, t1.c12)) NOT BETWEEN ((v0.c2, rt0.c5, t1.c12)) AND ((t1.c3, rt0.c6, t1.c2)))  WHEN ((rt1.c1) NOT BETWEEN (v0.c0) AND (rt1.c0)) THEN ((rt0.c1) NOTNULL) ELSE (((rt0.c0, v0.c1, t1.c2))==((rt1.c1, rt0.c4, v0.c1))) END DESC;
SELECT COUNT(*) FROM rt1, v0, t1 WHERE (((((t1.c3)==(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3)==(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, v0, t1);
SELECT COUNT(*) FROM rt1, v0, t1 WHERE (((((t1.c3)==(rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3)==(rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, v0, t1);
SELECT COUNT(*) FROM rt1, v0, t1 WHERE (((((t1.c3)==(rt1.c2))) IS TRUE));
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (CAST(NULL AS REAL)) AND (0X20cab72e))) ORDER BY (((((((v0.c1)) BETWEEN ((v0.c0)) AND ((rt1.c2))))AND(((rt1.c1)==('0.5035727820770576')))))OR(CASE v0.c2  WHEN v0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c1 THEN v0.c1 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (CAST(NULL AS REAL)) AND (0x20cab72e))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((((v0.c1)) BETWEEN ((v0.c0)) AND ((rt1.c2))))AND(((rt1.c1)==('0.5035727820770576')))))OR(CASE v0.c2  WHEN v0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c1 THEN v0.c1 ELSE rt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (CAST(NULL AS REAL)) AND (0X20cab72e))) ORDER BY (((((((v0.c1)) BETWEEN ((v0.c0)) AND ((rt1.c2))))AND(((rt1.c1)==('0.5035727820770576')))))OR(CASE v0.c2  WHEN v0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c1 THEN v0.c1 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (CAST(NULL AS REAL)) AND (0x20cab72e))) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((((v0.c1)) BETWEEN ((v0.c0)) AND ((rt1.c2))))AND(((rt1.c1)==('0.5035727820770576')))))OR(CASE v0.c2  WHEN v0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c1 THEN v0.c1 ELSE rt1.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1))) BETWEEN (CAST(NULL AS REAL)) AND (0X20cab72e))) ORDER BY (((((((v0.c1)) BETWEEN ((v0.c0)) AND ((rt1.c2))))AND(((rt1.c1)==('0.5035727820770576')))))OR(CASE v0.c2  WHEN v0.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 WHEN v0.c1 THEN v0.c1 ELSE rt1.c1 END))  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, rt1.c0))) AS TEXT)) ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))OR(rt1.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, rt1.c0))) AS TEXT)) ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))OR(rt1.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt1 WHERE (CAST((((rt1.c0, rt1.c1, rt1.c0))<=((rt1.c0, rt1.c1, rt1.c0))) AS TEXT)) ORDER BY ((((CASE WHEN rt1.c0 THEN rt1.c0 END)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))OR(rt1.c1 COLLATE BINARY)) ASC;
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c1, v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c2) IS TRUE))OR(x'5494' COLLATE RTRIM)))OR((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ASC  NULLS LAST, v0.c1 DESC  NULLS FIRST, LENGTH(CAST(v0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT v0.c1, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) IS TRUE))OR(x'5494' COLLATE RTRIM)))OR((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ASC  NULLS LAST, v0.c1 DESC  NULLS FIRST, LENGTH(CAST(v0.c1 AS TEXT)));
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c1, v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c2) IS TRUE))OR(x'5494' COLLATE RTRIM)))OR((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ASC  NULLS LAST, v0.c1 DESC  NULLS FIRST, LENGTH(CAST(v0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT v0.c1, v0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) IS TRUE))OR(x'5494' COLLATE RTRIM)))OR((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ASC  NULLS LAST, v0.c1 DESC  NULLS FIRST, LENGTH(CAST(v0.c1 AS TEXT)));
SELECT * FROM v0 WHERE (NULLIF(DISTINCT v0.c1, v0.c0) COLLATE BINARY) ORDER BY ((((((v0.c2) IS TRUE))OR(x'5494' COLLATE RTRIM)))OR((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) ASC  NULLS LAST, v0.c1 DESC  NULLS FIRST, LENGTH(CAST(v0.c1 AS TEXT));
SELECT * FROM rt1 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c0 END  WHEN (rt1.c0 IN (rt1.c2)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c2 THEN rt1.c0 END  WHEN (rt1.c0 IN (rt1.c2)) THEN x'' END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c0 END  WHEN (rt1.c0 IN (rt1.c2)) THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt1.c2 THEN rt1.c0 END  WHEN (rt1.c0 IN (rt1.c2)) THEN x'' END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE CASE WHEN rt1.c2 THEN rt1.c0 END  WHEN (rt1.c0 IN (rt1.c2)) THEN x'' END);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1 WHERE ((+ (((rt0.c1)&(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)&(rt0.c4))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1 WHERE ((+ (((rt0.c1)&(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c1)&(rt0.c4))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0 NOT INDEXED, rt1 WHERE ((+ (((rt0.c1)&(rt0.c4)))));
SELECT ALL * FROM t1, v0 WHERE ((((- (v0.c1)))%(((v0.c0)GLOB('''LMCi\n'))))) ORDER BY (- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c3)))) ASC  NULLS FIRST, CAST(((((t1.c3)OR(-7.5378075E8)))OR(t1.c3)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))%(((v0.c0)GLOB('''LMCi\n'))))) IS TRUE)  as count FROM t1, v0 ORDER BY (- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c3)))) ASC  NULLS FIRST, CAST(((((t1.c3)OR(-7.5378075E8)))OR(t1.c3)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((((- (v0.c1)))%(((v0.c0)GLOB('''LMCi\n'))))) ORDER BY (- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c3)))) ASC  NULLS FIRST, CAST(((((t1.c3)OR(-7.5378075E8)))OR(t1.c3)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))%(((v0.c0)GLOB('''LMCi\n'))))) IS TRUE)  as count FROM t1, v0 ORDER BY (- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c3)))) ASC  NULLS FIRST, CAST(((((t1.c3)OR(-7.5378075E8)))OR(t1.c3)) AS BLOB)  NULLS LAST);
SELECT ALL * FROM t1, v0 WHERE ((((- (v0.c1)))%(((v0.c0)GLOB('''LMCi\n'))))) ORDER BY (- (((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c3)))) ASC  NULLS FIRST, CAST(((((t1.c3)OR(-7.5378075E8)))OR(t1.c3)) AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((('K6')GLOB(t1.c1))) ORDER BY ((((rt1.c2)AND((NOT (v0.c2)))))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('K6')GLOB(t1.c1))) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY ((((rt1.c2)AND((NOT (v0.c2)))))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((('K6')GLOB(t1.c1))) ORDER BY ((((rt1.c2)AND((NOT (v0.c2)))))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('K6')GLOB(t1.c1))) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY ((((rt1.c2)AND((NOT (v0.c2)))))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((('K6')GLOB(t1.c1))) ORDER BY ((((rt1.c2)AND((NOT (v0.c2)))))OR(CAST(NULL AS REAL))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)OR(rt0.c2)) IN ())) ORDER BY (~ ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, x'4ff4', rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, x'4ff4', rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)OR(rt0.c2)) IN ())) ORDER BY (~ ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, x'4ff4', rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)OR(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, x'4ff4', rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)OR(rt0.c2)) IN ())) ORDER BY (~ ((((rt0.c1, rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, x'4ff4', rt0.c0)) AND ((rt0.c0, rt0.c5, rt0.c4)))))  NULLS LAST;
SELECT * FROM v0, rt1, t1 WHERE (((((rt1.c2)>(rt1.c0))) ISNULL)) ORDER BY ((((((rt1.c2) IS TRUE))AND(CAST(rt1.c2 AS INTEGER))))AND((- (t1.c1))))  NULLS FIRST, (+ ((- (v0.c2)))) DESC, (t1.c3 IN (t1.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>(rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY ((((((rt1.c2) IS TRUE))AND(CAST(rt1.c2 AS INTEGER))))AND((- (t1.c1))))  NULLS FIRST, (+ ((- (v0.c2)))) DESC, (t1.c3 IN (t1.c4)) COLLATE RTRIM);
SELECT * FROM v0, rt1, t1 WHERE (((((rt1.c2)>(rt1.c0))) ISNULL)) ORDER BY ((((((rt1.c2) IS TRUE))AND(CAST(rt1.c2 AS INTEGER))))AND((- (t1.c1))))  NULLS FIRST, (+ ((- (v0.c2)))) DESC, (t1.c3 IN (t1.c4)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)>(rt1.c0))) ISNULL)) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY ((((((rt1.c2) IS TRUE))AND(CAST(rt1.c2 AS INTEGER))))AND((- (t1.c1))))  NULLS FIRST, (+ ((- (v0.c2)))) DESC, (t1.c3 IN (t1.c4)) COLLATE RTRIM);
SELECT * FROM v0, rt1, t1 WHERE (((((rt1.c2)>(rt1.c0))) ISNULL)) ORDER BY ((((((rt1.c2) IS TRUE))AND(CAST(rt1.c2 AS INTEGER))))AND((- (t1.c1))))  NULLS FIRST, (+ ((- (v0.c2)))) DESC, (t1.c3 IN (t1.c4)) COLLATE RTRIM;
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY);
SELECT * FROM rt1 WHERE (rt1.c2) ORDER BY ((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)) COLLATE BINARY;
SELECT * FROM rt0, v0, t1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, (- (rt0.c5)))) ORDER BY ((((((((((((((t1.c2)AND(rt0.c4)))OR(t1.c3)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c5)))>=(v0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c2 COLLATE NOCASE, (- (rt0.c5)))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY ((((((((((((((t1.c2)AND(rt0.c4)))OR(t1.c3)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c5)))>=(v0.c0 COLLATE NOCASE)) DESC);
SELECT * FROM rt0, v0, t1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, (- (rt0.c5)))) ORDER BY ((((((((((((((t1.c2)AND(rt0.c4)))OR(t1.c3)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c5)))>=(v0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt0.c2 COLLATE NOCASE, (- (rt0.c5)))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY ((((((((((((((t1.c2)AND(rt0.c4)))OR(t1.c3)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c5)))>=(v0.c0 COLLATE NOCASE)) DESC);
SELECT * FROM rt0, v0, t1 WHERE (TRIM(rt0.c2 COLLATE NOCASE, (- (rt0.c5)))) ORDER BY ((((((((((((((t1.c2)AND(rt0.c4)))OR(t1.c3)))AND(rt0.c5)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c5)))>=(v0.c0 COLLATE NOCASE)) DESC;
SELECT * FROM t1, v0 WHERE (((((t1.c3) BETWEEN (v0.c1) AND (t1.c12)))!=(v0.c1))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3) BETWEEN (v0.c1) AND (t1.c12)))!=(v0.c1))) IS TRUE)  as count FROM t1, v0 ORDER BY NULL DESC);
SELECT * FROM t1, v0 WHERE (((((t1.c3) BETWEEN (v0.c1) AND (t1.c12)))!=(v0.c1))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3) BETWEEN (v0.c1) AND (t1.c12)))!=(v0.c1))) IS TRUE)  as count FROM t1, v0 ORDER BY NULL DESC);
SELECT * FROM t1, v0 WHERE (((((t1.c3) BETWEEN (v0.c1) AND (t1.c12)))!=(v0.c1))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM v0, rt1, t1 RIGHT OUTER JOIN rt0 ON CASE WHEN HEX(DISTINCT rt0.c3) THEN x'9040' END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt1, t1 RIGHT OUTER JOIN rt0 ON CASE WHEN HEX(DISTINCT rt0.c3) THEN x'9040' END);
SELECT COUNT(*) FROM v0, rt1, t1 RIGHT OUTER JOIN rt0 ON CASE WHEN HEX(DISTINCT rt0.c3) THEN x'9040' END WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0, rt1, t1 RIGHT OUTER JOIN rt0 ON CASE WHEN HEX(DISTINCT rt0.c3) THEN x'9040' END);
SELECT COUNT(*) FROM v0, rt1, t1 RIGHT OUTER JOIN rt0 ON CASE WHEN HEX(DISTINCT rt0.c3) THEN x'9040' END WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c6, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c6))))AND(CAST(rt0.c5 AS NUMERIC))))OR(ABS(DISTINCT x'af3b')))) ORDER BY ((((((((((rt0.c0)IS(rt0.c6)))OR(UPPER(''))))OR((('um~rH') NOT NULL))))AND(((((rt0.c6)AND('v~?A͡xx')))AND(rt0.c6)))))AND(((rt0.c6)+(rt0.c6))))  NULLS LAST, (- ((+ (rt0.c1)))) ASC  NULLS LAST, (((rt0.c3 IN (rt0.c4, rt0.c0)))<((+ (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c6, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c6))))AND(CAST(rt0.c5 AS NUMERIC))))OR(ABS(DISTINCT x'af3b')))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)IS(rt0.c6)))OR(UPPER(''))))OR((('um~rH') NOT NULL))))AND(((((rt0.c6)AND('v~?A͡xx')))AND(rt0.c6)))))AND(((rt0.c6)+(rt0.c6))))  NULLS LAST, (- ((+ (rt0.c1)))) ASC  NULLS LAST, (((rt0.c3 IN (rt0.c4, rt0.c0)))<((+ (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c6, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c6))))AND(CAST(rt0.c5 AS NUMERIC))))OR(ABS(DISTINCT x'af3b')))) ORDER BY ((((((((((rt0.c0)IS(rt0.c6)))OR(UPPER(''))))OR((('um~rH') NOT NULL))))AND(((((rt0.c6)AND('v~?A͡xx')))AND(rt0.c6)))))AND(((rt0.c6)+(rt0.c6))))  NULLS LAST, (- ((+ (rt0.c1)))) ASC  NULLS LAST, (((rt0.c3 IN (rt0.c4, rt0.c0)))<((+ (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c6, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c6))))AND(CAST(rt0.c5 AS NUMERIC))))OR(ABS(DISTINCT x'af3b')))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)IS(rt0.c6)))OR(UPPER(''))))OR((('um~rH') NOT NULL))))AND(((((rt0.c6)AND('v~?A͡xx')))AND(rt0.c6)))))AND(((rt0.c6)+(rt0.c6))))  NULLS LAST, (- ((+ (rt0.c1)))) ASC  NULLS LAST, (((rt0.c3 IN (rt0.c4, rt0.c0)))<((+ (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c6, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c6))))AND(CAST(rt0.c5 AS NUMERIC))))OR(ABS(DISTINCT x'af3b')))) ORDER BY ((((((((((rt0.c0)IS(rt0.c6)))OR(UPPER(''))))OR((('um~rH') NOT NULL))))AND(((((rt0.c6)AND('v~?A͡xx')))AND(rt0.c6)))))AND(((rt0.c6)+(rt0.c6))))  NULLS LAST, (- ((+ (rt0.c1)))) ASC  NULLS LAST, (((rt0.c3 IN (rt0.c4, rt0.c0)))<((+ (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((((((t1.c3)&(NULL)))AND(((rt0.c1) BETWEEN (t1.c3) AND (t1.c3)))))AND(LOWER(v0.c1))) RIGHT OUTER JOIN rt0 ON ((t1.c3 IN ()) IN (((x'')<>(rt0.c1)), t1.c4)) RIGHT OUTER JOIN t1 ON (((t1.c2)>>('1826300594')) IN (((rt1.c2) ISNULL))) WHERE ((x'' IN ((((rt1.c1))==((rt0.c4))), v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((((rt1.c1))=((rt0.c4))), v0.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((((t1.c3)&(NULL)))AND(((rt0.c1) BETWEEN (t1.c3) AND (t1.c3)))))AND(LOWER(v0.c1))) RIGHT OUTER JOIN rt0 ON ((t1.c3 IN ()) IN (((x'')!=(rt0.c1)), t1.c4)) RIGHT OUTER JOIN t1 ON (((t1.c2)>>('1826300594')) IN (((rt1.c2) ISNULL))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON ((((((t1.c3)&(NULL)))AND(((rt0.c1) BETWEEN (t1.c3) AND (t1.c3)))))AND(LOWER(v0.c1))) RIGHT OUTER JOIN rt0 ON ((t1.c3 IN ()) IN (((x'')<>(rt0.c1)), t1.c4)) RIGHT OUTER JOIN t1 ON (((t1.c2)>>('1826300594')) IN (((rt1.c2) ISNULL))) WHERE ((x'' IN ((((rt1.c1))==((rt0.c4))), v0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ((((rt1.c1))=((rt0.c4))), v0.c2))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON ((((((t1.c3)&(NULL)))AND(((rt0.c1) BETWEEN (t1.c3) AND (t1.c3)))))AND(LOWER(v0.c1))) RIGHT OUTER JOIN rt0 ON ((t1.c3 IN ()) IN (((x'')!=(rt0.c1)), t1.c4)) RIGHT OUTER JOIN t1 ON (((t1.c2)>>('1826300594')) IN (((rt1.c2) ISNULL))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON '-1860289476' FULL OUTER JOIN rt1 ON rt0.c2 RIGHT OUTER JOIN v0 ON ABS(rt0.c0) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CASE t1.c3  WHEN t1.c12 THEN rt0.c3 END))) ORDER BY CASE (((t1.c4))<>((t1.c3)))  WHEN ROUND(rt1.c2, t1.c3) THEN ((((((((t1.c2)OR(NULL)))OR('0.701597444338353')))OR(rt1.c0)))OR(rt1.c1)) ELSE CASE 0.8798525863147824  WHEN t1.c2 THEN rt1.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CASE t1.c3  WHEN t1.c12 THEN rt0.c3 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON '-1860289476' FULL OUTER JOIN rt1 ON rt0.c2 RIGHT OUTER JOIN v0 ON ABS(rt0.c0) ORDER BY CASE (((t1.c4))!=((t1.c3)))  WHEN ROUND(rt1.c2, t1.c3) THEN ((((((((t1.c2)OR(NULL)))OR('0.701597444338353')))OR(rt1.c0)))OR(rt1.c1)) ELSE CASE 0.8798525863147824  WHEN t1.c2 THEN rt1.c2 ELSE v0.c1 END END);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON '-1860289476' FULL OUTER JOIN rt1 ON rt0.c2 RIGHT OUTER JOIN v0 ON ABS(rt0.c0) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CASE t1.c3  WHEN t1.c12 THEN rt0.c3 END))) ORDER BY CASE (((t1.c4))<>((t1.c3)))  WHEN ROUND(rt1.c2, t1.c3) THEN ((((((((t1.c2)OR(NULL)))OR('0.701597444338353')))OR(rt1.c0)))OR(rt1.c1)) ELSE CASE 0.8798525863147824  WHEN t1.c2 THEN rt1.c2 ELSE v0.c1 END END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CASE t1.c3  WHEN t1.c12 THEN rt0.c3 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON '-1860289476' FULL OUTER JOIN rt1 ON rt0.c2 RIGHT OUTER JOIN v0 ON ABS(rt0.c0) ORDER BY CASE (((t1.c4))!=((t1.c3)))  WHEN ROUND(rt1.c2, t1.c3) THEN ((((((((t1.c2)OR(NULL)))OR('0.701597444338353')))OR(rt1.c0)))OR(rt1.c1)) ELSE CASE 0.8798525863147824  WHEN t1.c2 THEN rt1.c2 ELSE v0.c1 END END);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON '-1860289476' FULL OUTER JOIN rt1 ON rt0.c2 RIGHT OUTER JOIN v0 ON ABS(rt0.c0) WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(NULL AS NUMERIC)) AND (CASE t1.c3  WHEN t1.c12 THEN rt0.c3 END))) ORDER BY CASE (((t1.c4))<>((t1.c3)))  WHEN ROUND(rt1.c2, t1.c3) THEN ((((((((t1.c2)OR(NULL)))OR('0.701597444338353')))OR(rt1.c0)))OR(rt1.c1)) ELSE CASE 0.8798525863147824  WHEN t1.c2 THEN rt1.c2 ELSE v0.c1 END END;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON t1.c3 INNER JOIN rt1 ON ((((((((((v0.c2) IS TRUE))OR(NULL)))OR(((rt0.c2)|(v0.c1)))))OR(((((t1.c3)AND(rt1.c0)))AND(rt0.c5)))))OR(('1812133595' IN (rt1.c1)))) CROSS JOIN t1 ON TRIM(t1.c3) WHERE (((((rt1.c0)*(t1.c12)))|(((rt0.c3)>=(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(t1.c12)))|(((rt0.c3)>=(t1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON t1.c3 INNER JOIN rt1 ON ((((((((((v0.c2) IS TRUE))OR(NULL)))OR(((rt0.c2)|(v0.c1)))))OR(((((t1.c3)AND(rt1.c0)))AND(rt0.c5)))))OR(('1812133595' IN (rt1.c1)))) CROSS JOIN t1 ON TRIM(t1.c3));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON t1.c3 INNER JOIN rt1 ON ((((((((((v0.c2) IS TRUE))OR(NULL)))OR(((rt0.c2)|(v0.c1)))))OR(((((t1.c3)AND(rt1.c0)))AND(rt0.c5)))))OR(('1812133595' IN (rt1.c1)))) CROSS JOIN t1 ON TRIM(t1.c3) WHERE (((((rt1.c0)*(t1.c12)))|(((rt0.c3)>=(t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(t1.c12)))|(((rt0.c3)>=(t1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON t1.c3 INNER JOIN rt1 ON ((((((((((v0.c2) IS TRUE))OR(NULL)))OR(((rt0.c2)|(v0.c1)))))OR(((((t1.c3)AND(rt1.c0)))AND(rt0.c5)))))OR(('1812133595' IN (rt1.c1)))) CROSS JOIN t1 ON TRIM(t1.c3));
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM rt0, t1, rt1, v0 WHERE (((((+ (t1.c0))))=((((rt0.c2)/(rt0.c5))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c0))))=((((rt0.c2)/(rt0.c5)))))) IS TRUE)  as count FROM rt0, t1, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, rt1, v0 WHERE (((((+ (t1.c0))))=((((rt0.c2)/(rt0.c5))))));
SELECT SUM(count) FROM (SELECT ((((((+ (t1.c0))))=((((rt0.c2)/(rt0.c5)))))) IS TRUE)  as count FROM rt0, t1, rt1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, rt1, v0 WHERE (((((+ (t1.c0))))=((((rt0.c2)/(rt0.c5))))));
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE ((- (((rt1.c1)+(rt0.c5))))) ORDER BY ((((rt1.c0)=(v0.c2))) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c1)+(rt0.c5))))) IS TRUE)  as count FROM rt0, rt1, t1, v0 ORDER BY ((((rt1.c0)==(v0.c2))) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt0.c4)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE ((- (((rt1.c1)+(rt0.c5))))) ORDER BY ((((rt1.c0)=(v0.c2))) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt0.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c1)+(rt0.c5))))) IS TRUE)  as count FROM rt0, rt1, t1, v0 ORDER BY ((((rt1.c0)==(v0.c2))) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt0.c4)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE ((- (((rt1.c1)+(rt0.c5))))) ORDER BY ((((rt1.c0)=(v0.c2))) NOT BETWEEN (rt1.c0) AND ((rt1.c1 IN (rt0.c4)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (t1.c12) AND (t1.c3)), ((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), v0.c1 COLLATE BINARY)) AND ((((v0.c1) NOT BETWEEN (rt0.c5) AND (t1.c2)), (rt0.c4 IN ()), t1.c3 COLLATE RTRIM)))) ORDER BY (NOT (v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (t1.c12) AND (t1.c3)), ((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), v0.c1 COLLATE BINARY)) AND ((((v0.c1) NOT BETWEEN (rt0.c5) AND (t1.c2)), (rt0.c4 IN ()), t1.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY (NOT (v0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (t1.c12) AND (t1.c3)), ((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), v0.c1 COLLATE BINARY)) AND ((((v0.c1) NOT BETWEEN (rt0.c5) AND (t1.c2)), (rt0.c4 IN ()), t1.c3 COLLATE RTRIM)))) ORDER BY (NOT (v0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (t1.c12) AND (t1.c3)), ((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), v0.c1 COLLATE BINARY)) AND ((((v0.c1) NOT BETWEEN (rt0.c5) AND (t1.c2)), (rt0.c4 IN ()), t1.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, t1, v0, rt1 ORDER BY (NOT (v0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, v0, rt1 WHERE ((((v0.c1, v0.c1, v0.c0)) NOT BETWEEN ((((rt1.c0) NOT BETWEEN (t1.c12) AND (t1.c3)), ((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)), v0.c1 COLLATE BINARY)) AND ((((v0.c1) NOT BETWEEN (rt0.c5) AND (t1.c2)), (rt0.c4 IN ()), t1.c3 COLLATE RTRIM)))) ORDER BY (NOT (v0.c2)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1, v0 WHERE (GLOB(((rt1.c1)>(rt1.c0)), '-771931911'));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt1.c1)>(rt1.c0)), '-771931911')) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (GLOB(((rt1.c1)>(rt1.c0)), '-771931911'));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt1.c1)>(rt1.c0)), '-771931911')) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (GLOB(((rt1.c1)>(rt1.c0)), '-771931911'));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c1)))AND(((rt1.c1)>>(rt0.c6)))))OR((((rt0.c3, rt1.c0, rt0.c4))!=((rt0.c1, '|_K躩繫Kb', v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c1)))AND(((rt1.c1)>>(rt0.c6)))))OR((((rt0.c3, rt1.c0, rt0.c4))<>((rt0.c1, '|_K躩繫Kb', v0.c0)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c1)))AND(((rt1.c1)>>(rt0.c6)))))OR((((rt0.c3, rt1.c0, rt0.c4))!=((rt0.c1, '|_K躩繫Kb', v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c1)))AND(((rt1.c1)>>(rt0.c6)))))OR((((rt0.c3, rt1.c0, rt0.c4))<>((rt0.c1, '|_K躩繫Kb', v0.c0)))))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (((((((((rt0.c1)OR(rt0.c0)))OR(rt1.c1)))AND(((rt1.c1)>>(rt0.c6)))))OR((((rt0.c3, rt1.c0, rt0.c4))!=((rt0.c1, '|_K躩繫Kb', v0.c0))))));
SELECT ALL * FROM rt0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE ((v0.c2 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE ((((((t1.c3)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t1.c3)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(v0.c1))) IS TRUE)  as count FROM t1, rt1, v0);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE ((((((t1.c3)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(v0.c1)));
SELECT SUM(count) FROM (SELECT (((((((t1.c3)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(v0.c1))) IS TRUE)  as count FROM t1, rt1, v0);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE ((((((t1.c3)) BETWEEN ((t1.c0)) AND ((t1.c2))))IS(v0.c1)));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 LEFT OUTER JOIN v0 ON (((((0.45670742773909156, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c12, t1.c2)) AND ((t1.c12, t1.c12, v0.c1)))) IS TRUE) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t1, rt1 LEFT OUTER JOIN v0 ON (((((0.45670742773909156, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c12, t1.c2)) AND ((t1.c12, t1.c12, v0.c1)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 LEFT OUTER JOIN v0 ON (((((0.45670742773909156, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c12, t1.c2)) AND ((t1.c12, t1.c12, v0.c1)))) IS TRUE) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t1, rt1 LEFT OUTER JOIN v0 ON (((((0.45670742773909156, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c12, t1.c2)) AND ((t1.c12, t1.c12, v0.c1)))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 LEFT OUTER JOIN v0 ON (((((0.45670742773909156, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c12, t1.c2)) AND ((t1.c12, t1.c12, v0.c1)))) IS TRUE) WHERE (rt0.c4);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (HEX(((v0.c0) BETWEEN (rt0.c0) AND (v0.c2)))) ORDER BY ((((rt0.c5)||(rt0.c6))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND ((((rt0.c4, rt0.c5, '-2088067089', v0.c2, rt0.c3)) BETWEEN ((v0.c1, v0.c1, v0.c2, rt0.c3, 0X3709e98)) AND ((rt0.c3, rt0.c3, rt0.c5, rt0.c4, rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0) BETWEEN (rt0.c0) AND (v0.c2)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c5)||(rt0.c6))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND ((((rt0.c4, rt0.c5, '-2088067089', v0.c2, rt0.c3)) BETWEEN ((v0.c1, v0.c1, v0.c2, rt0.c3, 0x3709e98)) AND ((rt0.c3, rt0.c3, rt0.c5, rt0.c4, rt0.c3))))) DESC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (HEX(((v0.c0) BETWEEN (rt0.c0) AND (v0.c2)))) ORDER BY ((((rt0.c5)||(rt0.c6))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND ((((rt0.c4, rt0.c5, '-2088067089', v0.c2, rt0.c3)) BETWEEN ((v0.c1, v0.c1, v0.c2, rt0.c3, 0X3709e98)) AND ((rt0.c3, rt0.c3, rt0.c5, rt0.c4, rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((v0.c0) BETWEEN (rt0.c0) AND (v0.c2)))) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((rt0.c5)||(rt0.c6))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND ((((rt0.c4, rt0.c5, '-2088067089', v0.c2, rt0.c3)) BETWEEN ((v0.c1, v0.c1, v0.c2, rt0.c3, 0x3709e98)) AND ((rt0.c3, rt0.c3, rt0.c5, rt0.c4, rt0.c3))))) DESC);
SELECT * FROM rt0 NATURAL JOIN v0 WHERE (HEX(((v0.c0) BETWEEN (rt0.c0) AND (v0.c2)))) ORDER BY ((((rt0.c5)||(rt0.c6))) NOT BETWEEN (((rt0.c2)>>(rt0.c0))) AND ((((rt0.c4, rt0.c5, '-2088067089', v0.c2, rt0.c3)) BETWEEN ((v0.c1, v0.c1, v0.c2, rt0.c3, 0X3709e98)) AND ((rt0.c3, rt0.c3, rt0.c5, rt0.c4, rt0.c3))))) DESC;
SELECT ALL * FROM rt0, v0 WHERE (((((((((NULL)OR(rt0.c6)))AND(v0.c1)))OR(((1450489135) BETWEEN (rt0.c2) AND (rt0.c6)))))OR(((2104641615) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((0.9953944107554008) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(rt0.c6)))AND(v0.c1)))OR(((1450489135) BETWEEN (rt0.c2) AND (rt0.c6)))))OR(((2104641615) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0.9953944107554008) ISNULL) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((((((NULL)OR(rt0.c6)))AND(v0.c1)))OR(((1450489135) BETWEEN (rt0.c2) AND (rt0.c6)))))OR(((2104641615) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((0.9953944107554008) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(rt0.c6)))AND(v0.c1)))OR(((1450489135) BETWEEN (rt0.c2) AND (rt0.c6)))))OR(((2104641615) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((0.9953944107554008) ISNULL) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((((((NULL)OR(rt0.c6)))AND(v0.c1)))OR(((1450489135) BETWEEN (rt0.c2) AND (rt0.c6)))))OR(((2104641615) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((0.9953944107554008) ISNULL) ASC;
SELECT * FROM t1, rt0 WHERE ((((((t1.c2)%(rt0.c5)), ((rt0.c2)+(t1.c0)), ((((((((t1.c12)OR(t1.c0)))OR(rt0.c4)))OR(t1.c4)))OR(rt0.c0))))=((((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE BINARY, CAST(rt0.c1 AS REAL))))) ORDER BY NULLIF(DISTINCT ((0.8686769780271641) ISNULL), ((rt0.c5) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)%(rt0.c5)), ((rt0.c2)+(t1.c0)), ((((((((t1.c12)OR(t1.c0)))OR(rt0.c4)))OR(t1.c4)))OR(rt0.c0))))=((((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE BINARY, CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM t1, rt0 ORDER BY NULLIF(DISTINCT ((0.8686769780271641) ISNULL), ((rt0.c5) IS TRUE)));
SELECT * FROM t1, rt0 WHERE ((((((t1.c2)%(rt0.c5)), ((rt0.c2)+(t1.c0)), ((((((((t1.c12)OR(t1.c0)))OR(rt0.c4)))OR(t1.c4)))OR(rt0.c0))))=((((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE BINARY, CAST(rt0.c1 AS REAL))))) ORDER BY NULLIF(DISTINCT ((0.8686769780271641) ISNULL), ((rt0.c5) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)%(rt0.c5)), ((rt0.c2)+(t1.c0)), ((((((((t1.c12)OR(t1.c0)))OR(rt0.c4)))OR(t1.c4)))OR(rt0.c0))))=((((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE BINARY, CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM t1, rt0 ORDER BY NULLIF(DISTINCT ((0.8686769780271641) ISNULL), ((rt0.c5) IS TRUE)));
SELECT * FROM t1, rt0 WHERE ((((((t1.c2)%(rt0.c5)), ((rt0.c2)+(t1.c0)), ((((((((t1.c12)OR(t1.c0)))OR(rt0.c4)))OR(t1.c4)))OR(rt0.c0))))=((((rt0.c3) NOT BETWEEN (t1.c0) AND (t1.c1)), t1.c1 COLLATE BINARY, CAST(rt0.c1 AS REAL))))) ORDER BY NULLIF(DISTINCT ((0.8686769780271641) ISNULL), ((rt0.c5) IS TRUE));
SELECT * FROM rt1, t1, rt0 WHERE ((+ ((NOT (rt0.c6))))) ORDER BY ((((rt0.c0)|(rt0.c5))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c6))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt0.c0)|(rt0.c5))) IS FALSE));
SELECT * FROM rt1, t1, rt0 WHERE ((+ ((NOT (rt0.c6))))) ORDER BY ((((rt0.c0)|(rt0.c5))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c6))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt0.c0)|(rt0.c5))) IS FALSE));
SELECT * FROM rt1, t1, rt0 WHERE ((+ ((NOT (rt0.c6))))) ORDER BY ((((rt0.c0)|(rt0.c5))) IS FALSE);
SELECT ALL * FROM rt1 CROSS JOIN t1 ON '978463927' WHERE (((((((((((0.7203528085007344)AND(t1.c2)))OR(t1.c12)))AND(rt1.c2)))AND(rt1.c2)))==((rt1.c1 IN ())))) ORDER BY ((0.856964909712239) BETWEEN ((~ (rt1.c2))) AND ((- (1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.7203528085007344)AND(t1.c2)))OR(t1.c12)))AND(rt1.c2)))AND(rt1.c2)))=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON '978463927' ORDER BY ((0.856964909712239) BETWEEN ((~ (rt1.c2))) AND ((- (1))))  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN t1 ON '978463927' WHERE (((((((((((0.7203528085007344)AND(t1.c2)))OR(t1.c12)))AND(rt1.c2)))AND(rt1.c2)))==((rt1.c1 IN ())))) ORDER BY ((0.856964909712239) BETWEEN ((~ (rt1.c2))) AND ((- (1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((0.7203528085007344)AND(t1.c2)))OR(t1.c12)))AND(rt1.c2)))AND(rt1.c2)))=((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON '978463927' ORDER BY ((0.856964909712239) BETWEEN ((~ (rt1.c2))) AND ((- (1))))  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN t1 ON '978463927' WHERE (((((((((((0.7203528085007344)AND(t1.c2)))OR(t1.c12)))AND(rt1.c2)))AND(rt1.c2)))==((rt1.c1 IN ())))) ORDER BY ((0.856964909712239) BETWEEN ((~ (rt1.c2))) AND ((- (1))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c1)=('641363823'))) NOT BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((((v0.c2))<=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)=('641363823'))) NOT BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((((v0.c2))<=((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)=('641363823'))) NOT BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((((v0.c2))<=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)=('641363823'))) NOT BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((((v0.c2))<=((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)=('641363823'))) NOT BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((((v0.c2))<=((v0.c2))))));
SELECT * FROM v0 WHERE (LIKELY(((v0.c1)<<(v0.c1)))) ORDER BY (((v0.c2 IN ()))=(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((v0.c1)<<(v0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c2 IN ()))=(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELY(((v0.c1)<<(v0.c1)))) ORDER BY (((v0.c2 IN ()))=(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((v0.c1)<<(v0.c1)))) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (((v0.c2 IN ()))=(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (LIKELY(((v0.c1)<<(v0.c1)))) ORDER BY (((v0.c2 IN ()))=(((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((rt0.c3 COLLATE RTRIM)OR((((t1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE RTRIM)OR((((t1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR((- (rt0.c3))))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((rt0.c3 COLLATE RTRIM)OR((((t1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE RTRIM)OR((((t1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR((- (rt0.c3))))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((rt0.c3 COLLATE RTRIM)OR((((t1.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))))))OR((- (rt0.c3)))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))<=((t1.c4))))/((t1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<=((t1.c4))))/((t1.c3 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))<=((t1.c4))))/((t1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((t1.c0))<=((t1.c4))))/((t1.c3 IN ())))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0))<=((t1.c4))))/((t1.c3 IN ()))));
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((((rt1.c1)OR(rt0.c3)))AND(0.7218414596033431)))OR((((v0.c2))>=((v0.c0))))))AND((rt0.c5 IN (v0.c2)))))OR(rt1.c1)))OR(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c1)OR(rt0.c3)))AND(0.7218414596033431)))OR((((v0.c2))>=((v0.c0))))))AND((rt0.c5 IN (v0.c2)))))OR(rt1.c1)))OR(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((((rt1.c1)OR(rt0.c3)))AND(0.7218414596033431)))OR((((v0.c2))>=((v0.c0))))))AND((rt0.c5 IN (v0.c2)))))OR(rt1.c1)))OR(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt1.c1)OR(rt0.c3)))AND(0.7218414596033431)))OR((((v0.c2))>=((v0.c0))))))AND((rt0.c5 IN (v0.c2)))))OR(rt1.c1)))OR(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (((((((((((((rt1.c1)OR(rt0.c3)))AND(0.7218414596033431)))OR((((v0.c2))>=((v0.c0))))))AND((rt0.c5 IN (v0.c2)))))OR(rt1.c1)))OR(((rt0.c0)AND(rt0.c0)))));
SELECT * FROM t1, v0, rt1, rt0 WHERE (rt0.c1) ORDER BY ((rt1.c1) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((v0.c2)|(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, v0, rt1, rt0 ORDER BY ((rt1.c1) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((v0.c2)|(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt1, rt0 WHERE (rt0.c1) ORDER BY ((rt1.c1) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((v0.c2)|(t1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t1, v0, rt1, rt0 ORDER BY ((rt1.c1) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((v0.c2)|(t1.c0)))) DESC  NULLS FIRST);
SELECT * FROM t1, v0, rt1, rt0 WHERE (rt0.c1) ORDER BY ((rt1.c1) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (((v0.c2)|(t1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (LAST_INSERT_ROWID());
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT * FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t1.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((t1.c2 IN ()) COLLATE RTRIM);
SELECT * FROM t1 WHERE ((((t1.c3)) BETWEEN (('1805950107')) AND ((((t1.c3)IS NOT(1.860049082E9)))))) ORDER BY HEX(t1.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c3)) BETWEEN (('1805950107')) AND ((((t1.c3)IS NOT(1.860049082E9)))))) IS TRUE)  as count FROM t1 ORDER BY HEX(t1.c1) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c3)) BETWEEN (('1805950107')) AND ((((t1.c3)IS NOT(1.860049082E9)))))) ORDER BY HEX(t1.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c3)) BETWEEN (('1805950107')) AND ((((t1.c3)IS NOT(1.860049082E9)))))) IS TRUE)  as count FROM t1 ORDER BY HEX(t1.c1) COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM t1 WHERE ((((t1.c3)) BETWEEN (('1805950107')) AND ((((t1.c3)IS NOT(1.860049082E9)))))) ORDER BY HEX(t1.c1) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((-3.95036221E8)!=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((-3.95036221E8)<>(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((-3.95036221E8)!=(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((-3.95036221E8)<>(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (((-3.95036221E8)!=(v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 CROSS JOIN t1 ON TYPEOF(LIKELIHOOD(t1.c0, 0.6299219414559173)) WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN rt0.c0 THEN rt0.c6 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN rt0.c0 THEN rt0.c6 END)))) IS TRUE)  as count FROM rt1, v0, rt0 CROSS JOIN t1 ON TYPEOF(LIKELIHOOD(t1.c0, 0.6299219414559173)));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 CROSS JOIN t1 ON TYPEOF(LIKELIHOOD(t1.c0, 0.6299219414559173)) WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN rt0.c0 THEN rt0.c6 END))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN rt0.c0 THEN rt0.c6 END)))) IS TRUE)  as count FROM rt1, v0, rt0 CROSS JOIN t1 ON TYPEOF(LIKELIHOOD(t1.c0, 0.6299219414559173)));
SELECT ALL COUNT(*) FROM rt1, v0, rt0 CROSS JOIN t1 ON TYPEOF(LIKELIHOOD(t1.c0, 0.6299219414559173)) WHERE ((((v0.c1)) NOT BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((CASE WHEN rt0.c0 THEN rt0.c6 END))));
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((t1.c12, (~ (t1.c4)), CAST(t1.c4 AS NUMERIC)))>((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)), ((t1.c3)>(rt0.c2)), -8.44786321E8))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12, (~ (t1.c4)), CAST(t1.c4 AS NUMERIC)))>((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)), ((t1.c3)>(rt0.c2)), -8.44786321E8)))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((t1.c12, (~ (t1.c4)), CAST(t1.c4 AS NUMERIC)))>((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)), ((t1.c3)>(rt0.c2)), -8.44786321E8))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12, (~ (t1.c4)), CAST(t1.c4 AS NUMERIC)))>((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)), ((t1.c3)>(rt0.c2)), -8.44786321E8)))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT COUNT(*) FROM rt1, v0, t1, rt0 WHERE ((((t1.c12, (~ (t1.c4)), CAST(t1.c4 AS NUMERIC)))>((((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c2)), ((t1.c3)>(rt0.c2)), -8.44786321E8))));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((t1.c3)/((NOT (v0.c0)))) WHERE (CASE WHEN ((v0.c2)IS(t1.c1)) THEN CASE WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END ELSE (NOT (t1.c0)) END) ORDER BY ((+ (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)IS(t1.c1)) THEN CASE WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END ELSE (NOT (t1.c0)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((t1.c3)/((NOT (v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((t1.c3)/((NOT (v0.c0)))) WHERE (CASE WHEN ((v0.c2)IS(t1.c1)) THEN CASE WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END ELSE (NOT (t1.c0)) END) ORDER BY ((+ (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)IS(t1.c1)) THEN CASE WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END ELSE (NOT (t1.c0)) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((t1.c3)/((NOT (v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((t1.c3)/((NOT (v0.c0)))) WHERE (CASE WHEN ((v0.c2)IS(t1.c1)) THEN CASE WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END ELSE (NOT (t1.c0)) END) ORDER BY ((+ (v0.c0)) IN ());
SELECT ALL COUNT(*) FROM t1, rt0, v0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(v0.c2)))LIKE(((t1.c2)IS(t1.c1)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, rt0, v0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(v0.c2)))LIKE(((t1.c2)IS(t1.c1)))));
SELECT ALL COUNT(*) FROM t1, rt0, v0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(v0.c2)))LIKE(((t1.c2)IS(t1.c1)))) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1, rt0, v0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(v0.c2)))LIKE(((t1.c2)IS(t1.c1)))));
SELECT ALL COUNT(*) FROM t1, rt0, v0 LEFT OUTER JOIN rt1 ON ((((rt1.c0)<=(v0.c2)))LIKE(((t1.c2)IS(t1.c1)))) WHERE (t1.c0);
SELECT COUNT(*) FROM v0 WHERE (0.8027398495808677) ORDER BY CAST(0x93151fb AS REAL);
SELECT SUM(count) FROM (SELECT ((0.8027398495808677) IS TRUE)  as count FROM v0 ORDER BY CAST(0X93151fb AS REAL));
SELECT COUNT(*) FROM v0 WHERE (0.8027398495808677) ORDER BY CAST(0x93151fb AS REAL);
SELECT SUM(count) FROM (SELECT ((0.8027398495808677) IS TRUE)  as count FROM v0 ORDER BY CAST(0X93151fb AS REAL));
SELECT COUNT(*) FROM v0 WHERE (0.8027398495808677) ORDER BY CAST(0x93151fb AS REAL);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT * FROM rt0, t1, v0 LEFT OUTER JOIN rt1 ON CASE (v0.c1 IN ())  WHEN ((rt1.c0) ISNULL) THEN 0x39fd3048 END WHERE ((((rt0.c5)) NOT BETWEEN ((((((v0.c2)OR(t1.c4)))AND(rt0.c4)))) AND ((((((rt0.c3)OR('')))OR(rt0.c4)))))) ORDER BY (((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c3))))<=((rt1.c2 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((((((v0.c2)OR(t1.c4)))AND(rt0.c4)))) AND ((((((rt0.c3)OR('')))OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, t1, v0 LEFT OUTER JOIN rt1 ON CASE (v0.c1 IN ())  WHEN ((rt1.c0) ISNULL) THEN 0X39fd3048 END ORDER BY (((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c3))))<=((rt1.c2 COLLATE NOCASE)))  NULLS FIRST);
SELECT * FROM rt0, t1, v0 LEFT OUTER JOIN rt1 ON CASE (v0.c1 IN ())  WHEN ((rt1.c0) ISNULL) THEN 0x39fd3048 END WHERE ((((rt0.c5)) NOT BETWEEN ((((((v0.c2)OR(t1.c4)))AND(rt0.c4)))) AND ((((((rt0.c3)OR('')))OR(rt0.c4)))))) ORDER BY (((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c3))))<=((rt1.c2 COLLATE NOCASE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((((((v0.c2)OR(t1.c4)))AND(rt0.c4)))) AND ((((((rt0.c3)OR('')))OR(rt0.c4)))))) IS TRUE)  as count FROM rt0, t1, v0 LEFT OUTER JOIN rt1 ON CASE (v0.c1 IN ())  WHEN ((rt1.c0) ISNULL) THEN 0X39fd3048 END ORDER BY (((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c3))))<=((rt1.c2 COLLATE NOCASE)))  NULLS FIRST);
SELECT * FROM rt0, t1, v0 LEFT OUTER JOIN rt1 ON CASE (v0.c1 IN ())  WHEN ((rt1.c0) ISNULL) THEN 0x39fd3048 END WHERE ((((rt0.c5)) NOT BETWEEN ((((((v0.c2)OR(t1.c4)))AND(rt0.c4)))) AND ((((((rt0.c3)OR('')))OR(rt0.c4)))))) ORDER BY (((((rt0.c0) NOT BETWEEN (v0.c0) AND (t1.c3))))<=((rt1.c2 COLLATE NOCASE)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN v0 ON x'' LEFT OUTER JOIN rt1 ON (json_array_length(t1.c4) IN (CAST(rt0.c1 AS TEXT))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN v0 ON x'' LEFT OUTER JOIN rt1 ON (json_array_length(t1.c4) IN (CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN v0 ON x'' LEFT OUTER JOIN rt1 ON (json_array_length(t1.c4) IN (CAST(rt0.c1 AS TEXT))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN v0 ON x'' LEFT OUTER JOIN rt1 ON (json_array_length(t1.c4) IN (CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM rt0, t1 LEFT OUTER JOIN v0 ON x'' LEFT OUTER JOIN rt1 ON (json_array_length(t1.c4) IN (CAST(rt0.c1 AS TEXT))) WHERE (x'');
SELECT * FROM rt0, t1, v0, rt1 WHERE (((((((((((v0.c0)AND('-1455179126')))OR(rt0.c0)))AND(t1.c3)))OR(rt0.c0))) NOT BETWEEN (((v0.c2)-(t1.c1))) AND (((t1.c12)<=(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND('-1455179126')))OR(rt0.c0)))AND(t1.c3)))OR(rt0.c0))) NOT BETWEEN (((v0.c2)-(t1.c1))) AND (((t1.c12)<=(rt0.c6))))) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT * FROM rt0, t1, v0, rt1 WHERE (((((((((((v0.c0)AND('-1455179126')))OR(rt0.c0)))AND(t1.c3)))OR(rt0.c0))) NOT BETWEEN (((v0.c2)-(t1.c1))) AND (((t1.c12)<=(rt0.c6)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND('-1455179126')))OR(rt0.c0)))AND(t1.c3)))OR(rt0.c0))) NOT BETWEEN (((v0.c2)-(t1.c1))) AND (((t1.c12)<=(rt0.c6))))) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT * FROM rt0, t1, v0, rt1 WHERE (((((((((((v0.c0)AND('-1455179126')))OR(rt0.c0)))AND(t1.c3)))OR(rt0.c0))) NOT BETWEEN (((v0.c2)-(t1.c1))) AND (((t1.c12)<=(rt0.c6)))));
SELECT ALL COUNT(*) FROM rt1, t1, v0 WHERE (CAST(CASE WHEN 0.8208960429065426 THEN t1.c1 WHEN t1.c4 THEN t1.c12 WHEN v0.c0 THEN t1.c2 END AS TEXT)) ORDER BY TYPEOF(DISTINCT CASE x'84c1'  WHEN t1.c0 THEN v0.c0 END), 825828999 ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.8208960429065426 THEN t1.c1 WHEN t1.c4 THEN t1.c12 WHEN v0.c0 THEN t1.c2 END AS TEXT)) IS TRUE)  as count FROM rt1, t1, v0 ORDER BY TYPEOF(DISTINCT CASE x'84c1'  WHEN t1.c0 THEN v0.c0 END), 825828999 ASC, '' DESC);
SELECT ALL COUNT(*) FROM rt1, t1, v0 WHERE (CAST(CASE WHEN 0.8208960429065426 THEN t1.c1 WHEN t1.c4 THEN t1.c12 WHEN v0.c0 THEN t1.c2 END AS TEXT)) ORDER BY TYPEOF(DISTINCT CASE x'84c1'  WHEN t1.c0 THEN v0.c0 END), 825828999 ASC, '' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN 0.8208960429065426 THEN t1.c1 WHEN t1.c4 THEN t1.c12 WHEN v0.c0 THEN t1.c2 END AS TEXT)) IS TRUE)  as count FROM rt1, t1, v0 ORDER BY TYPEOF(DISTINCT CASE x'84c1'  WHEN t1.c0 THEN v0.c0 END), 825828999 ASC, '' DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NOT (rt1.c1)) IN (((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))))) ORDER BY (~ ((rt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c1)) IN (((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (~ ((rt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NOT (rt1.c1)) IN (((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))))) ORDER BY (~ ((rt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt1.c1)) IN (((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (~ ((rt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((NOT (rt1.c1)) IN (((((rt1.c0)AND(rt1.c1)))AND(rt1.c0))))) ORDER BY (~ ((rt1.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE t1.c1 COLLATE RTRIM  WHEN t1.c4 THEN ((rt1.c0)GLOB(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1 COLLATE RTRIM  WHEN t1.c4 THEN ((rt1.c0)GLOB(t1.c1)) END) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE t1.c1 COLLATE RTRIM  WHEN t1.c4 THEN ((rt1.c0)GLOB(t1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1 COLLATE RTRIM  WHEN t1.c4 THEN ((rt1.c0)GLOB(t1.c1)) END) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE t1.c1 COLLATE RTRIM  WHEN t1.c4 THEN ((rt1.c0)GLOB(t1.c1)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c12, t1.c12)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (NOT (t1.c4)), (t1.c0 IN ()))) AND (((t1.c2 IN ()), ((t1.c4) IS FALSE), ((t1.c0) NOTNULL))))) ORDER BY (t1.c3 IN (t1.c0, t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, (t1.c0 IN (x'c5f2')) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2, t1.c12, t1.c12)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (NOT (t1.c4)), (t1.c0 IN ()))) AND (((t1.c2 IN ()), ((t1.c4) IS FALSE), ((t1.c0) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY (t1.c3 IN (t1.c0, t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, (t1.c0 IN (x'c5f2')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c12, t1.c12)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (NOT (t1.c4)), (t1.c0 IN ()))) AND (((t1.c2 IN ()), ((t1.c4) IS FALSE), ((t1.c0) NOTNULL))))) ORDER BY (t1.c3 IN (t1.c0, t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, (t1.c0 IN (x'c5f2')) ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c2, t1.c12, t1.c12)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (NOT (t1.c4)), (t1.c0 IN ()))) AND (((t1.c2 IN ()), ((t1.c4) IS FALSE), ((t1.c0) NOTNULL))))) IS TRUE)  as count FROM t1 ORDER BY (t1.c3 IN (t1.c0, t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, (t1.c0 IN (x'c5f2')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c2, t1.c12, t1.c12)) NOT BETWEEN ((t1.c0 COLLATE BINARY, (NOT (t1.c4)), (t1.c0 IN ()))) AND (((t1.c2 IN ()), ((t1.c4) IS FALSE), ((t1.c0) NOTNULL))))) ORDER BY (t1.c3 IN (t1.c0, t1.c0)) COLLATE RTRIM DESC  NULLS FIRST, (t1.c0 IN (x'c5f2')) ASC;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3 IN ()))AND((((t1.c12, t1.c1, rt0.c4))>=((t1.c1, rt0.c2, t1.c3))))))AND((+ (rt1.c0)))) CROSS JOIN rt0 ON ((x'')>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))) WHERE (CAST((rt1.c1 IN ()) AS REAL)) ORDER BY ((rt0.c5 COLLATE NOCASE)=((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3 IN ()))AND((((t1.c12, t1.c1, rt0.c4))>=((t1.c1, rt0.c2, t1.c3))))))AND((+ (rt1.c0)))) CROSS JOIN rt0 ON ((x'')>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))) ORDER BY ((rt0.c5 COLLATE NOCASE)=((NULL IN ()))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3 IN ()))AND((((t1.c12, t1.c1, rt0.c4))>=((t1.c1, rt0.c2, t1.c3))))))AND((+ (rt1.c0)))) CROSS JOIN rt0 ON ((x'')>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))) WHERE (CAST((rt1.c1 IN ()) AS REAL)) ORDER BY ((rt0.c5 COLLATE NOCASE)=((NULL IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3 IN ()))AND((((t1.c12, t1.c1, rt0.c4))>=((t1.c1, rt0.c2, t1.c3))))))AND((+ (rt1.c0)))) CROSS JOIN rt0 ON ((x'')>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))) ORDER BY ((rt0.c5 COLLATE NOCASE)=((NULL IN ()))));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (((((rt0.c3 IN ()))AND((((t1.c12, t1.c1, rt0.c4))>=((t1.c1, rt0.c2, t1.c3))))))AND((+ (rt1.c0)))) CROSS JOIN rt0 ON ((x'')>=(((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt1.c1)))OR(rt1.c1)))) WHERE (CAST((rt1.c1 IN ()) AS REAL)) ORDER BY ((rt0.c5 COLLATE NOCASE)=((NULL IN ())));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((rt0.c4 IN (rt0.c5))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL), ((((rt0.c3)<(rt0.c6))) BETWEEN ((rt0.c0 IN ())) AND (((('FALSE', v0.c0, v0.c1)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN (rt0.c5))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL), ((((rt0.c3)<(rt0.c6))) BETWEEN ((rt0.c0 IN ())) AND (((('FALSE', v0.c0, v0.c1)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c2))))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((rt0.c4 IN (rt0.c5))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL), ((((rt0.c3)<(rt0.c6))) BETWEEN ((rt0.c0 IN ())) AND (((('FALSE', v0.c0, v0.c1)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN (rt0.c5))) IS TRUE)  as count FROM rt1, v0, rt0 ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL), ((((rt0.c3)<(rt0.c6))) BETWEEN ((rt0.c0 IN ())) AND (((('FALSE', v0.c0, v0.c1)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c2))))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((rt0.c4 IN (rt0.c5))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt0.c4) AND (rt1.c1))) NOT NULL), ((((rt0.c3)<(rt0.c6))) BETWEEN ((rt0.c0 IN ())) AND (((('FALSE', v0.c0, v0.c1)) NOT BETWEEN ((rt1.c2, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c2)))));
SELECT * FROM v0, t1, rt1 WHERE (((0.6368457649632663) NOT NULL)) ORDER BY (((v0.c2) BETWEEN (t1.c2) AND (-1919060150)) IN ()), ((((CAST(rt1.c0 AS BLOB))AND(((t1.c4)&(rt1.c0)))))AND(((t1.c2) BETWEEN (t1.c12) AND (rt1.c2))))  NULLS LAST, CAST(CAST(v0.c0 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ((((0.6368457649632663) NOT NULL)) IS TRUE)  as count FROM v0, t1, rt1 ORDER BY (((v0.c2) BETWEEN (t1.c2) AND (-1919060150)) IN ()), ((((CAST(rt1.c0 AS BLOB))AND(((t1.c4)&(rt1.c0)))))AND(((t1.c2) BETWEEN (t1.c12) AND (rt1.c2))))  NULLS LAST, CAST(CAST(v0.c0 AS TEXT) AS REAL));
SELECT * FROM v0, t1, rt1 WHERE (((0.6368457649632663) NOT NULL)) ORDER BY (((v0.c2) BETWEEN (t1.c2) AND (-1919060150)) IN ()), ((((CAST(rt1.c0 AS BLOB))AND(((t1.c4)&(rt1.c0)))))AND(((t1.c2) BETWEEN (t1.c12) AND (rt1.c2))))  NULLS LAST, CAST(CAST(v0.c0 AS TEXT) AS REAL);
SELECT SUM(count) FROM (SELECT ((((0.6368457649632663) NOT NULL)) IS TRUE)  as count FROM v0, t1, rt1 ORDER BY (((v0.c2) BETWEEN (t1.c2) AND (-1919060150)) IN ()), ((((CAST(rt1.c0 AS BLOB))AND(((t1.c4)&(rt1.c0)))))AND(((t1.c2) BETWEEN (t1.c12) AND (rt1.c2))))  NULLS LAST, CAST(CAST(v0.c0 AS TEXT) AS REAL));
SELECT * FROM v0, t1, rt1 WHERE (((0.6368457649632663) NOT NULL)) ORDER BY (((v0.c2) BETWEEN (t1.c2) AND (-1919060150)) IN ()), ((((CAST(rt1.c0 AS BLOB))AND(((t1.c4)&(rt1.c0)))))AND(((t1.c2) BETWEEN (t1.c12) AND (rt1.c2))))  NULLS LAST, CAST(CAST(v0.c0 AS TEXT) AS REAL);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((((rt1.c1)||(t1.c2)))>=(json_array('-455445655', rt0.c0))) FULL OUTER JOIN t1 ON ((rt0.c6 COLLATE NOCASE)IS((~ (rt0.c1)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((((rt1.c1)||(t1.c2)))>=(json_array('-455445655', rt0.c0))) FULL OUTER JOIN t1 ON ((rt0.c6 COLLATE NOCASE)IS((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((((rt1.c1)||(t1.c2)))>=(json_array('-455445655', rt0.c0))) FULL OUTER JOIN t1 ON ((rt0.c6 COLLATE NOCASE)IS((~ (rt0.c1)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST((+ (rt1.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((((rt1.c1)||(t1.c2)))>=(json_array('-455445655', rt0.c0))) FULL OUTER JOIN t1 ON ((rt0.c6 COLLATE NOCASE)IS((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c2 THEN t1.c3 END, CAST(t1.c3 AS NUMERIC), (((rt0.c5, t1.c0, rt0.c5)) BETWEEN ((rt1.c0, x'd721', t1.c3)) AND ((NULL, rt1.c1, rt1.c1)))))>((((t1.c3)<(rt0.c2)), (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt1.c1))), rt0.c0 COLLATE RTRIM)))) ORDER BY ((rt1.c1) BETWEEN ((((rt0.c1))<=((rt0.c6)))) AND (CASE t1.c12  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN t1.c3 END, CAST(t1.c3 AS NUMERIC), (((rt0.c5, t1.c0, rt0.c5)) BETWEEN ((rt1.c0, x'd721', t1.c3)) AND ((NULL, rt1.c1, rt1.c1)))))>((((t1.c3)<(rt0.c2)), (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt1.c1))), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((rt1.c1) BETWEEN ((((rt0.c1))<=((rt0.c6)))) AND (CASE t1.c12  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c2 THEN t1.c3 END, CAST(t1.c3 AS NUMERIC), (((rt0.c5, t1.c0, rt0.c5)) BETWEEN ((rt1.c0, x'd721', t1.c3)) AND ((NULL, rt1.c1, rt1.c1)))))>((((t1.c3)<(rt0.c2)), (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt1.c1))), rt0.c0 COLLATE RTRIM)))) ORDER BY ((rt1.c1) BETWEEN ((((rt0.c1))<=((rt0.c6)))) AND (CASE t1.c12  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN t1.c3 END, CAST(t1.c3 AS NUMERIC), (((rt0.c5, t1.c0, rt0.c5)) BETWEEN ((rt1.c0, x'd721', t1.c3)) AND ((NULL, rt1.c1, rt1.c1)))))>((((t1.c3)<(rt0.c2)), (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt1.c1))), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((rt1.c1) BETWEEN ((((rt0.c1))<=((rt0.c6)))) AND (CASE t1.c12  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c2 THEN t1.c3 END, CAST(t1.c3 AS NUMERIC), (((rt0.c5, t1.c0, rt0.c5)) BETWEEN ((rt1.c0, x'd721', t1.c3)) AND ((NULL, rt1.c1, rt1.c1)))))>((((t1.c3)<(rt0.c2)), (((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt1.c1))), rt0.c0 COLLATE RTRIM)))) ORDER BY ((rt1.c1) BETWEEN ((((rt0.c1))<=((rt0.c6)))) AND (CASE t1.c12  WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c0 END));
SELECT * FROM v0, rt1 WHERE ((~ (((((v0.c1)OR(rt1.c1)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c1)OR(rt1.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((~ (((((v0.c1)OR(rt1.c1)))AND(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((((v0.c1)OR(rt1.c1)))AND(v0.c1))))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0, rt1 WHERE ((~ (((((v0.c1)OR(rt1.c1)))AND(v0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(t1.c3 AS BLOB) IN ())) ORDER BY (((rt0.c1, rt0.c3, rt0.c3, t1.c2, t1.c3)) NOT BETWEEN (((((rt0.c5, t1.c3, rt0.c3))>=((rt0.c3, rt0.c4, t1.c4))), t1.c4, 0xffffffffb946c2d2, ((rt0.c2) ISNULL), x'50b1')) AND (((t1.c3 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c12 END, (((t1.c0, rt0.c3, '4AD'))!=((rt0.c1, t1.c12, rt0.c2))), 72467007 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c1, rt0.c3, rt0.c3, t1.c2, t1.c3)) NOT BETWEEN (((((rt0.c5, t1.c3, rt0.c3))>=((rt0.c3, rt0.c4, t1.c4))), t1.c4, 0Xffffffffb946c2d2, ((rt0.c2) ISNULL), x'50b1')) AND (((t1.c3 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c12 END, (((t1.c0, rt0.c3, '4AD'))!=((rt0.c1, t1.c12, rt0.c2))), 72467007 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(t1.c3 AS BLOB) IN ())) ORDER BY (((rt0.c1, rt0.c3, rt0.c3, t1.c2, t1.c3)) NOT BETWEEN (((((rt0.c5, t1.c3, rt0.c3))>=((rt0.c3, rt0.c4, t1.c4))), t1.c4, 0xffffffffb946c2d2, ((rt0.c2) ISNULL), x'50b1')) AND (((t1.c3 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c12 END, (((t1.c0, rt0.c3, '4AD'))!=((rt0.c1, t1.c12, rt0.c2))), 72467007 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t1.c3 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c1, rt0.c3, rt0.c3, t1.c2, t1.c3)) NOT BETWEEN (((((rt0.c5, t1.c3, rt0.c3))>=((rt0.c3, rt0.c4, t1.c4))), t1.c4, 0Xffffffffb946c2d2, ((rt0.c2) ISNULL), x'50b1')) AND (((t1.c3 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c12 END, (((t1.c0, rt0.c3, '4AD'))!=((rt0.c1, t1.c12, rt0.c2))), 72467007 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((CAST(t1.c3 AS BLOB) IN ())) ORDER BY (((rt0.c1, rt0.c3, rt0.c3, t1.c2, t1.c3)) NOT BETWEEN (((((rt0.c5, t1.c3, rt0.c3))>=((rt0.c3, rt0.c4, t1.c4))), t1.c4, 0xffffffffb946c2d2, ((rt0.c2) ISNULL), x'50b1')) AND (((t1.c3 IN ()), ((rt0.c3) NOT BETWEEN (rt0.c2) AND (t1.c1)), CASE WHEN t1.c0 THEN t1.c12 END, (((t1.c0, rt0.c3, '4AD'))!=((rt0.c1, t1.c12, rt0.c2))), 72467007 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c2) ISNULL))GLOB(LOWER(DISTINCT t1.c1))) FULL OUTER JOIN v0 ON rt0.c6 WHERE (((((rt0.c2 IN (t1.c2))))<>((HEX(DISTINCT t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (t1.c2))))<>((HEX(DISTINCT t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c2) ISNULL))GLOB(LOWER(DISTINCT t1.c1))) FULL OUTER JOIN v0 ON rt0.c6);
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c2) ISNULL))GLOB(LOWER(DISTINCT t1.c1))) FULL OUTER JOIN v0 ON rt0.c6 WHERE (((((rt0.c2 IN (t1.c2))))<>((HEX(DISTINCT t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN (t1.c2))))<>((HEX(DISTINCT t1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c2) ISNULL))GLOB(LOWER(DISTINCT t1.c1))) FULL OUTER JOIN v0 ON rt0.c6);
SELECT * FROM t1 CROSS JOIN rt0 ON ((((rt0.c2) ISNULL))GLOB(LOWER(DISTINCT t1.c1))) FULL OUTER JOIN v0 ON rt0.c6 WHERE (((((rt0.c2 IN (t1.c2))))<>((HEX(DISTINCT t1.c0)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))AND(v0.c1 COLLATE RTRIM)))OR((((rt1.c0, v0.c1, v0.c1)) NOT BETWEEN ((2.061569481E9, v0.c2, v0.c1)) AND ((-1.608195189E9, rt1.c2, v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))AND(v0.c1 COLLATE RTRIM)))OR((((rt1.c0, v0.c1, v0.c1)) NOT BETWEEN ((2.061569481E9, v0.c2, v0.c1)) AND ((-1.608195189E9, rt1.c2, v0.c1)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))AND(v0.c1 COLLATE RTRIM)))OR((((rt1.c0, v0.c1, v0.c1)) NOT BETWEEN ((2.061569481E9, v0.c2, v0.c1)) AND ((-1.608195189E9, rt1.c2, v0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))AND(v0.c1 COLLATE RTRIM)))OR((((rt1.c0, v0.c1, v0.c1)) NOT BETWEEN ((2.061569481E9, v0.c2, v0.c1)) AND ((-1.608195189E9, rt1.c2, v0.c1)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((((rt1.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))AND(v0.c1 COLLATE RTRIM)))OR((((rt1.c0, v0.c1, v0.c1)) NOT BETWEEN ((2.061569481E9, v0.c2, v0.c1)) AND ((-1.608195189E9, rt1.c2, v0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c1)))OR(1.971388658E9)))AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c1)))OR(1.971388658E9)))AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c1)))OR(1.971388658E9)))AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c1)))OR(1.971388658E9)))AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c6)OR(rt0.c6)))OR(rt0.c1)))OR(1.971388658E9)))AND(NULL))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (NULL);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c2)))OR(t1.c4)))AND(0.8532842871231736)))AND(t1.c12))) IS TRUE)) ORDER BY (((t1.c3 IN ())) NOT BETWEEN (LOWER(DISTINCT t1.c12)) AND ((t1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(t1.c2)))OR(t1.c4)))AND(0.8532842871231736)))AND(t1.c12))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c3 IN ())) NOT BETWEEN (LOWER(DISTINCT t1.c12)) AND ((t1.c3 IN ()))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c2)))OR(t1.c4)))AND(0.8532842871231736)))AND(t1.c12))) IS TRUE)) ORDER BY (((t1.c3 IN ())) NOT BETWEEN (LOWER(DISTINCT t1.c12)) AND ((t1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)AND(t1.c2)))OR(t1.c4)))AND(0.8532842871231736)))AND(t1.c12))) IS TRUE)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c3 IN ())) NOT BETWEEN (LOWER(DISTINCT t1.c12)) AND ((t1.c3 IN ()))) DESC);
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)AND(t1.c2)))OR(t1.c4)))AND(0.8532842871231736)))AND(t1.c12))) IS TRUE)) ORDER BY (((t1.c3 IN ())) NOT BETWEEN (LOWER(DISTINCT t1.c12)) AND ((t1.c3 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY t1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY t1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (v0.c2) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, t1, rt1 WHERE (((UNLIKELY(DISTINCT t1.c4))%(json_array_length(rt0.c6, t1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT t1.c4))%(json_array_length(rt0.c6, t1.c3)))) IS TRUE)  as count FROM rt0, v0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, t1, rt1 WHERE (((UNLIKELY(DISTINCT t1.c4))%(json_array_length(rt0.c6, t1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT t1.c4))%(json_array_length(rt0.c6, t1.c3)))) IS TRUE)  as count FROM rt0, v0, t1, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, t1, rt1 WHERE (((UNLIKELY(DISTINCT t1.c4))%(json_array_length(rt0.c6, t1.c3))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (NULL)) CROSS JOIN t1 ON rt1.c1 LEFT OUTER JOIN rt0 ON (t1.c2 IN ()) WHERE ((((rt0.c2 IN (t1.c1)))OR((t1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (t1.c1)))OR((t1.c3 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (NULL)) CROSS JOIN t1 ON rt1.c1 LEFT OUTER JOIN rt0 ON (t1.c2 IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (NULL)) CROSS JOIN t1 ON rt1.c1 LEFT OUTER JOIN rt0 ON (t1.c2 IN ()) WHERE ((((rt0.c2 IN (t1.c1)))OR((t1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (t1.c1)))OR((t1.c3 IN ())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (NULL)) CROSS JOIN t1 ON rt1.c1 LEFT OUTER JOIN rt0 ON (t1.c2 IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (~ (NULL)) CROSS JOIN t1 ON rt1.c1 LEFT OUTER JOIN rt0 ON (t1.c2 IN ()) WHERE ((((rt0.c2 IN (t1.c1)))OR((t1.c3 IN ()))));
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN t1 ON CASE t1.c2  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY WHERE (rt0.c5);
SELECT * FROM rt1, v0, t1 WHERE (((((((rt1.c0)*(t1.c2)))AND((t1.c4 IN (t1.c3)))))OR(((t1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)*(t1.c2)))AND((t1.c4 IN (t1.c3)))))OR(((t1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, v0, t1);
SELECT * FROM rt1, v0, t1 WHERE (((((((rt1.c0)*(t1.c2)))AND((t1.c4 IN (t1.c3)))))OR(((t1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c0)*(t1.c2)))AND((t1.c4 IN (t1.c3)))))OR(((t1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1, v0, t1);
SELECT * FROM rt1, v0, t1 WHERE (((((((rt1.c0)*(t1.c2)))AND((t1.c4 IN (t1.c3)))))OR(((t1.c1) NOT NULL))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c5 IN ())) NOT BETWEEN ((((rt0.c5, rt0.c1, v0.c2)) BETWEEN ((rt0.c6, v0.c2, rt0.c0)) AND ((v0.c1, v0.c0, rt0.c4)))) AND (v0.c0 COLLATE RTRIM)) WHERE (((((((((CASE WHEN v0.c2 THEN rt0.c6 ELSE rt0.c1 END)AND(CAST('1471538690' AS INTEGER))))AND(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c1 THEN v0.c2 WHEN x'a66ade51' THEN rt0.c5 ELSE rt0.c3 END)))OR(((rt0.c3)<<(rt0.c3)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c2 THEN rt0.c6 ELSE rt0.c1 END)AND(CAST('1471538690' AS INTEGER))))AND(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c1 THEN v0.c2 WHEN x'a66ade51' THEN rt0.c5 ELSE rt0.c3 END)))OR(((rt0.c3)<<(rt0.c3)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c5 IN ())) NOT BETWEEN ((((rt0.c5, rt0.c1, v0.c2)) BETWEEN ((rt0.c6, v0.c2, rt0.c0)) AND ((v0.c1, v0.c0, rt0.c4)))) AND (v0.c0 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c5 IN ())) NOT BETWEEN ((((rt0.c5, rt0.c1, v0.c2)) BETWEEN ((rt0.c6, v0.c2, rt0.c0)) AND ((v0.c1, v0.c0, rt0.c4)))) AND (v0.c0 COLLATE RTRIM)) WHERE (((((((((CASE WHEN v0.c2 THEN rt0.c6 ELSE rt0.c1 END)AND(CAST('1471538690' AS INTEGER))))AND(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c1 THEN v0.c2 WHEN x'a66ade51' THEN rt0.c5 ELSE rt0.c3 END)))OR(((rt0.c3)<<(rt0.c3)))))OR(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN v0.c2 THEN rt0.c6 ELSE rt0.c1 END)AND(CAST('1471538690' AS INTEGER))))AND(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c1 THEN v0.c2 WHEN x'a66ade51' THEN rt0.c5 ELSE rt0.c3 END)))OR(((rt0.c3)<<(rt0.c3)))))OR(rt0.c0))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c5 IN ())) NOT BETWEEN ((((rt0.c5, rt0.c1, v0.c2)) BETWEEN ((rt0.c6, v0.c2, rt0.c0)) AND ((v0.c1, v0.c0, rt0.c4)))) AND (v0.c0 COLLATE RTRIM)));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (((rt0.c5 IN ())) NOT BETWEEN ((((rt0.c5, rt0.c1, v0.c2)) BETWEEN ((rt0.c6, v0.c2, rt0.c0)) AND ((v0.c1, v0.c0, rt0.c4)))) AND (v0.c0 COLLATE RTRIM)) WHERE (((((((((CASE WHEN v0.c2 THEN rt0.c6 ELSE rt0.c1 END)AND(CAST('1471538690' AS INTEGER))))AND(CASE WHEN v0.c2 THEN rt0.c3 WHEN v0.c1 THEN v0.c2 WHEN x'a66ade51' THEN rt0.c5 ELSE rt0.c3 END)))OR(((rt0.c3)<<(rt0.c3)))))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON ((((((((t1.c12)AND(((rt0.c1) BETWEEN (0.5115064521951014) AND (t1.c1)))))AND((t1.c4 IN ()))))AND('')))AND(((-789276355) IS FALSE))) CROSS JOIN v0 ON ((((((((rt1.c2)OR(NULL)))OR(t1.c12)))AND((((rt0.c2, rt0.c6, t1.c2))>((t1.c12, rt0.c4, rt0.c6))))))AND(((((t1.c0)AND(rt1.c0)))OR(t1.c4)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON ((((((((t1.c12)AND(((rt0.c1) BETWEEN (0.5115064521951014) AND (t1.c1)))))AND((t1.c4 IN ()))))AND('')))AND(((-789276355) IS FALSE))) CROSS JOIN v0 ON ((((((((rt1.c2)OR(NULL)))OR(t1.c12)))AND((((rt0.c2, rt0.c6, t1.c2))>((t1.c12, rt0.c4, rt0.c6))))))AND(((((t1.c0)AND(rt1.c0)))OR(t1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON ((((((((t1.c12)AND(((rt0.c1) BETWEEN (0.5115064521951014) AND (t1.c1)))))AND((t1.c4 IN ()))))AND('')))AND(((-789276355) IS FALSE))) CROSS JOIN v0 ON ((((((((rt1.c2)OR(NULL)))OR(t1.c12)))AND((((rt0.c2, rt0.c6, t1.c2))>((t1.c12, rt0.c4, rt0.c6))))))AND(((((t1.c0)AND(rt1.c0)))OR(t1.c4)))) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1, rt1 INNER JOIN rt0 ON ((((((((t1.c12)AND(((rt0.c1) BETWEEN (0.5115064521951014) AND (t1.c1)))))AND((t1.c4 IN ()))))AND('')))AND(((-789276355) IS FALSE))) CROSS JOIN v0 ON ((((((((rt1.c2)OR(NULL)))OR(t1.c12)))AND((((rt0.c2, rt0.c6, t1.c2))>((t1.c12, rt0.c4, rt0.c6))))))AND(((((t1.c0)AND(rt1.c0)))OR(t1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1 INNER JOIN rt0 ON ((((((((t1.c12)AND(((rt0.c1) BETWEEN (0.5115064521951014) AND (t1.c1)))))AND((t1.c4 IN ()))))AND('')))AND(((-789276355) IS FALSE))) CROSS JOIN v0 ON ((((((((rt1.c2)OR(NULL)))OR(t1.c12)))AND((((rt0.c2, rt0.c6, t1.c2))>((t1.c12, rt0.c4, rt0.c6))))))AND(((((t1.c0)AND(rt1.c0)))OR(t1.c4)))) WHERE (CAST(NULL AS TEXT));
SELECT * FROM v0, rt0 CROSS JOIN t1 ON x'' WHERE ((('1795512017') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('1795512017') IS TRUE)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t1 ON x'');
SELECT * FROM v0, rt0 CROSS JOIN t1 ON x'' WHERE ((('1795512017') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('1795512017') IS TRUE)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN t1 ON x'');
SELECT * FROM v0, rt0 CROSS JOIN t1 ON x'' WHERE ((('1795512017') IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((NULL)AND(load_extension(v0.c2, v0.c0))))OR((rt1.c1 IN ()))))OR(v0.c2 COLLATE NOCASE)))AND((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(load_extension(v0.c2, v0.c0))))OR((rt1.c1 IN ()))))OR(v0.c2 COLLATE NOCASE)))AND((- (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((NULL)AND(load_extension(v0.c2, v0.c0))))OR((rt1.c1 IN ()))))OR(v0.c2 COLLATE NOCASE)))AND((- (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(load_extension(v0.c2, v0.c0))))OR((rt1.c1 IN ()))))OR(v0.c2 COLLATE NOCASE)))AND((- (rt1.c2))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((((((((NULL)AND(load_extension(v0.c2, v0.c0))))OR((rt1.c1 IN ()))))OR(v0.c2 COLLATE NOCASE)))AND((- (rt1.c2)))));
SELECT ALL * FROM t1 WHERE ((NULLIF(DISTINCT t1.c3, t1.c3) IN ())) ORDER BY (((t1.c1))<((((((t1.c0)OR(t1.c4)))OR(t1.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT t1.c3, t1.c3) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1))<((((((t1.c0)OR(t1.c4)))OR(t1.c3))))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((NULLIF(DISTINCT t1.c3, t1.c3) IN ())) ORDER BY (((t1.c1))<((((((t1.c0)OR(t1.c4)))OR(t1.c3))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT t1.c3, t1.c3) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1))<((((((t1.c0)OR(t1.c4)))OR(t1.c3))))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE ((NULLIF(DISTINCT t1.c3, t1.c3) IN ())) ORDER BY (((t1.c1))<((((((t1.c0)OR(t1.c4)))OR(t1.c3))))) DESC  NULLS LAST;
SELECT * FROM rt1, t1 WHERE (((((t1.c4) NOT BETWEEN (t1.c1) AND (rt1.c1)))LIKE((((('')OR(t1.c1)))OR(t1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (t1.c1) AND (rt1.c1)))LIKE((((('')OR(t1.c1)))OR(t1.c4))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (((((t1.c4) NOT BETWEEN (t1.c1) AND (rt1.c1)))LIKE((((('')OR(t1.c1)))OR(t1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (t1.c1) AND (rt1.c1)))LIKE((((('')OR(t1.c1)))OR(t1.c4))))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (((((t1.c4) NOT BETWEEN (t1.c1) AND (rt1.c1)))LIKE((((('')OR(t1.c1)))OR(t1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((MAX(-9.60900723E8, t1.c4))>(((rt1.c1)<(t1.c12))))) ORDER BY CASE WHEN ((rt1.c1)%(t1.c4)) THEN ((rt0.c4)||(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(-9.60900723E8, t1.c4))>(((rt1.c1)<(t1.c12))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN ((rt1.c1)%(t1.c4)) THEN ((rt0.c4)||(rt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((MAX(-9.60900723E8, t1.c4))>(((rt1.c1)<(t1.c12))))) ORDER BY CASE WHEN ((rt1.c1)%(t1.c4)) THEN ((rt0.c4)||(rt1.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((MAX(-9.60900723E8, t1.c4))>(((rt1.c1)<(t1.c12))))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE WHEN ((rt1.c1)%(t1.c4)) THEN ((rt0.c4)||(rt1.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (((MAX(-9.60900723E8, t1.c4))>(((rt1.c1)<(t1.c12))))) ORDER BY CASE WHEN ((rt1.c1)%(t1.c4)) THEN ((rt0.c4)||(rt1.c1)) END  NULLS FIRST;
SELECT ALL * FROM rt1, t1 INDEXED BY i82, v0 CROSS JOIN rt0 ON ABS(DISTINCT v0.c0) COLLATE NOCASE WHERE ((('1966823363')>=(rt0.c4))) ORDER BY (((('398005791')AND(((0.027520966667748614) NOT NULL))))OR(((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('1966823363')>=(rt0.c4))) IS TRUE)  as count FROM rt1, t1 INDEXED BY i82, v0 CROSS JOIN rt0 ON ABS(DISTINCT v0.c0) COLLATE NOCASE ORDER BY (((('398005791')AND(((0.027520966667748614) NOT NULL))))OR(((t1.c0) NOT NULL))));
SELECT ALL * FROM rt1, t1 INDEXED BY i82, v0 CROSS JOIN rt0 ON ABS(DISTINCT v0.c0) COLLATE NOCASE WHERE ((('1966823363')>=(rt0.c4))) ORDER BY (((('398005791')AND(((0.027520966667748614) NOT NULL))))OR(((t1.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((('1966823363')>=(rt0.c4))) IS TRUE)  as count FROM rt1, t1 INDEXED BY i82, v0 CROSS JOIN rt0 ON ABS(DISTINCT v0.c0) COLLATE NOCASE ORDER BY (((('398005791')AND(((0.027520966667748614) NOT NULL))))OR(((t1.c0) NOT NULL))));
SELECT ALL * FROM rt1, t1 INDEXED BY i82, v0 CROSS JOIN rt0 ON ABS(DISTINCT v0.c0) COLLATE NOCASE WHERE ((('1966823363')>=(rt0.c4))) ORDER BY (((('398005791')AND(((0.027520966667748614) NOT NULL))))OR(((t1.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 CROSS JOIN v0 ON (((CAST(t1.c2 AS NUMERIC)))>((CASE WHEN rt0.c1 THEN t1.c3 WHEN 'k5gg\nn*O' THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN v0.c2 THEN t1.c2 END))) WHERE (((((rt0.c2)==(rt1.c1)))LIKE(((v0.c0) IS TRUE)))) ORDER BY ((((rt0.c6)/(rt0.c0)))||(((NULL) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt1.c1)))LIKE(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, t1 CROSS JOIN v0 ON (((CAST(t1.c2 AS NUMERIC)))>((CASE WHEN rt0.c1 THEN t1.c3 WHEN 'k5gg\nn*O' THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN v0.c2 THEN t1.c2 END))) ORDER BY ((((rt0.c6)/(rt0.c0)))||(((NULL) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 CROSS JOIN v0 ON (((CAST(t1.c2 AS NUMERIC)))>((CASE WHEN rt0.c1 THEN t1.c3 WHEN 'k5gg\nn*O' THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN v0.c2 THEN t1.c2 END))) WHERE (((((rt0.c2)==(rt1.c1)))LIKE(((v0.c0) IS TRUE)))) ORDER BY ((((rt0.c6)/(rt0.c0)))||(((NULL) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)=(rt1.c1)))LIKE(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, t1 CROSS JOIN v0 ON (((CAST(t1.c2 AS NUMERIC)))>((CASE WHEN rt0.c1 THEN t1.c3 WHEN 'k5gg\nn*O' THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN v0.c2 THEN t1.c2 END))) ORDER BY ((((rt0.c6)/(rt0.c0)))||(((NULL) IS TRUE)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 CROSS JOIN v0 ON (((CAST(t1.c2 AS NUMERIC)))>((CASE WHEN rt0.c1 THEN t1.c3 WHEN 'k5gg\nn*O' THEN rt0.c2 WHEN rt1.c1 THEN v0.c0 WHEN v0.c1 THEN rt0.c0 WHEN v0.c2 THEN t1.c2 END))) WHERE (((((rt0.c2)==(rt1.c1)))LIKE(((v0.c0) IS TRUE)))) ORDER BY ((((rt0.c6)/(rt0.c0)))||(((NULL) IS TRUE)))  NULLS LAST;
SELECT * FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt1.c0)))AND(t1.c2)))OR(t1.c0)))AND(rt0.c5)))<=((+ (rt0.c6))))) ORDER BY ((rt0.c5 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt1.c0)))AND(t1.c2)))OR(t1.c0)))AND(rt0.c5)))<=((+ (rt0.c6))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t1 ORDER BY ((rt0.c5 COLLATE RTRIM) IS TRUE) DESC);
SELECT * FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt1.c0)))AND(t1.c2)))OR(t1.c0)))AND(rt0.c5)))<=((+ (rt0.c6))))) ORDER BY ((rt0.c5 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt1.c0)))AND(t1.c2)))OR(t1.c0)))AND(rt0.c5)))<=((+ (rt0.c6))))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t1 ORDER BY ((rt0.c5 COLLATE RTRIM) IS TRUE) DESC);
SELECT * FROM rt1, rt0, t1 WHERE (((((((((((rt0.c1)AND(rt1.c0)))AND(t1.c2)))OR(t1.c0)))AND(rt0.c5)))<=((+ (rt0.c6))))) ORDER BY ((rt0.c5 COLLATE RTRIM) IS TRUE) DESC;
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c1)) COLLATE BINARY) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c2) NOT NULL), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE 0.4318024388076823 END, rt1.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c2) NOT NULL), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE 0.4318024388076823 END, rt1.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c1)) COLLATE BINARY) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c2) NOT NULL), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE 0.4318024388076823 END, rt1.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt1.c1 IN (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c2) NOT NULL), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE 0.4318024388076823 END, rt1.c1 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM rt1 WHERE ((rt1.c1 IN (rt1.c1)) COLLATE BINARY) ORDER BY COALESCE(CASE WHEN rt1.c1 THEN rt1.c0 END, ((rt1.c2) NOT NULL), CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE 0.4318024388076823 END, rt1.c1 COLLATE RTRIM)  NULLS FIRST;
SELECT * FROM t1 WHERE (CAST(t1.c4 AS TEXT) COLLATE RTRIM) ORDER BY LTRIM(((t1.c0) NOT BETWEEN (0.09785204416099436) AND (t1.c1)))  NULLS LAST, ((((((((((((((t1.c2)<=(t1.c3)))AND(((((((((t1.c4)AND(0.12408431656360308)))AND(t1.c2)))AND(t1.c4)))OR(t1.c4)))))AND((t1.c3 IN (t1.c1, t1.c4)))))AND(((t1.c2) NOT BETWEEN (t1.c3) AND (t1.c2)))))AND((t1.c2 IN ()))))AND(TRIM(t1.c12))))AND(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c4 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY LTRIM(((t1.c0) NOT BETWEEN (0.09785204416099436) AND (t1.c1)))  NULLS LAST, ((((((((((((((t1.c2)<=(t1.c3)))AND(((((((((t1.c4)AND(0.12408431656360308)))AND(t1.c2)))AND(t1.c4)))OR(t1.c4)))))AND((t1.c3 IN (t1.c1, t1.c4)))))AND(((t1.c2) NOT BETWEEN (t1.c3) AND (t1.c2)))))AND((t1.c2 IN ()))))AND(TRIM(t1.c12))))AND(NULL)) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c4 AS TEXT) COLLATE RTRIM) ORDER BY LTRIM(((t1.c0) NOT BETWEEN (0.09785204416099436) AND (t1.c1)))  NULLS LAST, ((((((((((((((t1.c2)<=(t1.c3)))AND(((((((((t1.c4)AND(0.12408431656360308)))AND(t1.c2)))AND(t1.c4)))OR(t1.c4)))))AND((t1.c3 IN (t1.c1, t1.c4)))))AND(((t1.c2) NOT BETWEEN (t1.c3) AND (t1.c2)))))AND((t1.c2 IN ()))))AND(TRIM(t1.c12))))AND(NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c4 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t1 ORDER BY LTRIM(((t1.c0) NOT BETWEEN (0.09785204416099436) AND (t1.c1)))  NULLS LAST, ((((((((((((((t1.c2)<=(t1.c3)))AND(((((((((t1.c4)AND(0.12408431656360308)))AND(t1.c2)))AND(t1.c4)))OR(t1.c4)))))AND((t1.c3 IN (t1.c1, t1.c4)))))AND(((t1.c2) NOT BETWEEN (t1.c3) AND (t1.c2)))))AND((t1.c2 IN ()))))AND(TRIM(t1.c12))))AND(NULL)) ASC  NULLS FIRST);
SELECT ALL * FROM t1, v0 FULL OUTER JOIN rt1 ON IFNULL(CASE WHEN t1.c1 THEN v0.c0 ELSE rt0.c5 END, (((0.19180120095769537)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)>(rt0.c1))  WHEN ((t1.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN ((t1.c3)-(rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c6 COLLATE NOCASE WHEN (((t1.c4))=((rt0.c3))) THEN t1.c0 WHEN (- (x'')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((((t1.c1)AND(rt0.c5)))AND(t1.c0)) THEN (t1.c1 IN (t1.c4)) END WHERE (0.5398378888637838 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5398378888637838 COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN rt1 ON IFNULL(CASE WHEN t1.c1 THEN v0.c0 ELSE rt0.c5 END, (((0.19180120095769537)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)>(rt0.c1))  WHEN ((t1.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN ((t1.c3)-(rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c6 COLLATE NOCASE WHEN (((t1.c4))=((rt0.c3))) THEN t1.c0 WHEN (- (x'')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((((t1.c1)AND(rt0.c5)))AND(t1.c0)) THEN (t1.c1 IN (t1.c4)) END);
SELECT ALL * FROM t1, v0 FULL OUTER JOIN rt1 ON IFNULL(CASE WHEN t1.c1 THEN v0.c0 ELSE rt0.c5 END, (((0.19180120095769537)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)>(rt0.c1))  WHEN ((t1.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN ((t1.c3)-(rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c6 COLLATE NOCASE WHEN (((t1.c4))=((rt0.c3))) THEN t1.c0 WHEN (- (x'')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((((t1.c1)AND(rt0.c5)))AND(t1.c0)) THEN (t1.c1 IN (t1.c4)) END WHERE (0.5398378888637838 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.5398378888637838 COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 FULL OUTER JOIN rt1 ON IFNULL(CASE WHEN t1.c1 THEN v0.c0 ELSE rt0.c5 END, (((0.19180120095769537)) NOT BETWEEN ((t1.c2)) AND ((t1.c1)))) LEFT OUTER JOIN rt0 ON CASE ((rt0.c0)>(rt0.c1))  WHEN ((t1.c0) BETWEEN (rt0.c3) AND (v0.c1)) THEN ((t1.c3)-(rt0.c2)) WHEN (rt0.c3 IN ()) THEN rt0.c6 COLLATE NOCASE WHEN (((t1.c4))=((rt0.c3))) THEN t1.c0 WHEN (- (x'')) THEN CAST(rt1.c0 AS INTEGER) WHEN ((((t1.c1)AND(rt0.c5)))AND(t1.c0)) THEN (t1.c1 IN (t1.c4)) END);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (((rt1.c1) NOTNULL)) AND (CASE WHEN '1340006250' THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN (((rt1.c1) NOTNULL)) AND (CASE WHEN '1340006250' THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (((rt1.c1) NOTNULL)) AND (CASE WHEN '1340006250' THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS NUMERIC)) BETWEEN (((rt1.c1) NOTNULL)) AND (CASE WHEN '1340006250' THEN rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c1 AS NUMERIC)) BETWEEN (((rt1.c1) NOTNULL)) AND (CASE WHEN '1340006250' THEN rt1.c1 END)));
SELECT * FROM v0 WHERE ((((NULL IN (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL IN (v0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN (v0.c2))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((NULL IN (v0.c2))) IS FALSE));
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (0X435e61f7) ORDER BY ((CAST(rt0.c4 AS TEXT))-((t1.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X435e61f7) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((CAST(rt0.c4 AS TEXT))-((t1.c3 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (0X435e61f7) ORDER BY ((CAST(rt0.c4 AS TEXT))-((t1.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X435e61f7) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY ((CAST(rt0.c4 AS TEXT))-((t1.c3 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (0X435e61f7) ORDER BY ((CAST(rt0.c4 AS TEXT))-((t1.c3 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt1 WHERE (((t1.c0)IS NOT(t1.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(t1.c4)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((t1.c0)IS NOT(t1.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)IS NOT(t1.c4)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (((t1.c0)IS NOT(t1.c4)) COLLATE BINARY);
SELECT * FROM rt0, v0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((t1.c0)OR(t1.c3)))OR(rt1.c1)))*((t1.c2 IN ())))) ORDER BY NULL  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c3)))OR(rt1.c1)))*((t1.c2 IN ())))) IS TRUE)  as count FROM t1, rt1 ORDER BY NULL  NULLS LAST, rt1.c0);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((t1.c0)OR(t1.c3)))OR(rt1.c1)))*((t1.c2 IN ())))) ORDER BY NULL  NULLS LAST, rt1.c0;
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c3)))OR(rt1.c1)))*((t1.c2 IN ())))) IS TRUE)  as count FROM t1, rt1 ORDER BY NULL  NULLS LAST, rt1.c0);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((t1.c0)OR(t1.c3)))OR(rt1.c1)))*((t1.c2 IN ())))) ORDER BY NULL  NULLS LAST, rt1.c0;
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c0))<((v0.c1))) IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c6 END)) WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN 0.46793924753429084 WHEN rt0.c3 THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 END) AND ((((rt0.c6))<=((0.8276926014529722))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN 0.46793924753429084 WHEN rt0.c3 THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 END) AND ((((rt0.c6))<=((0.8276926014529722)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c0))<((v0.c1))) IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c6 END)));
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c0))<((v0.c1))) IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c6 END)) WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN 0.46793924753429084 WHEN rt0.c3 THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 END) AND ((((rt0.c6))<=((0.8276926014529722))))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN 0.46793924753429084 WHEN rt0.c3 THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 END) AND ((((rt0.c6))<=((0.8276926014529722)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c0))<((v0.c1))) IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c6 END)));
SELECT ALL * FROM v0, rt0 CROSS JOIN rt1 ON ((((rt0.c0))<((v0.c1))) IN (CASE WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c6 THEN rt0.c0 WHEN rt1.c2 THEN v0.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c6 END)) WHERE (((v0.c1 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN 0.46793924753429084 WHEN rt0.c3 THEN v0.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c3 END) AND ((((rt0.c6))<=((0.8276926014529722))))));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON ((((t1.c3)OR(t1.c3)))|(((rt1.c2) IS FALSE))) WHERE (t1.c3);
SELECT SUM(count) FROM (SELECT ALL ((t1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((((t1.c3)OR(t1.c3)))|(((rt1.c2) IS FALSE))));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON ((((t1.c3)OR(t1.c3)))|(((rt1.c2) IS FALSE))) WHERE (t1.c3);
SELECT SUM(count) FROM (SELECT ALL ((t1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((((t1.c3)OR(t1.c3)))|(((rt1.c2) IS FALSE))));
SELECT COUNT(*) FROM rt1 INNER JOIN t1 ON ((((t1.c3)OR(t1.c3)))|(((rt1.c2) IS FALSE))) WHERE (t1.c3);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (0.11361616940666175) ORDER BY json_valid(((x'')OR(rt0.c6))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11361616940666175) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY json_valid(((x'')OR(rt0.c6))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (0.11361616940666175) ORDER BY json_valid(((x'')OR(rt0.c6))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.11361616940666175) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY json_valid(((x'')OR(rt0.c6))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0, v0 WHERE (0.11361616940666175) ORDER BY json_valid(((x'')OR(rt0.c6))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 INDEXED BY i82, v0 WHERE (((CASE WHEN '550156078' THEN rt0.c4 END)IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '550156078' THEN rt0.c4 END)IS NOT(NULL))) IS TRUE)  as count FROM rt0 INDEXED BY i82, v0);
SELECT ALL * FROM rt0 INDEXED BY i82, v0 WHERE (((CASE WHEN '550156078' THEN rt0.c4 END)IS NOT(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN '550156078' THEN rt0.c4 END)IS NOT(NULL))) IS TRUE)  as count FROM rt0 INDEXED BY i82, v0);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((NULL IN (v0.c1)) COLLATE NOCASE) ORDER BY x'f85110ea' DESC  NULLS LAST, IFNULL(DISTINCT CAST(rt1.c2 AS INTEGER), rt1.c0)  NULLS FIRST, UNLIKELY(DISTINCT ((((rt1.c0)OR(t1.c12)))OR(rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY x'f85110ea' DESC  NULLS LAST, IFNULL(DISTINCT CAST(rt1.c2 AS INTEGER), rt1.c0)  NULLS FIRST, UNLIKELY(DISTINCT ((((rt1.c0)OR(t1.c12)))OR(rt0.c4))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((NULL IN (v0.c1)) COLLATE NOCASE) ORDER BY x'f85110ea' DESC  NULLS LAST, IFNULL(DISTINCT CAST(rt1.c2 AS INTEGER), rt1.c0)  NULLS FIRST, UNLIKELY(DISTINCT ((((rt1.c0)OR(t1.c12)))OR(rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL IN (v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY x'f85110ea' DESC  NULLS LAST, IFNULL(DISTINCT CAST(rt1.c2 AS INTEGER), rt1.c0)  NULLS FIRST, UNLIKELY(DISTINCT ((((rt1.c0)OR(t1.c12)))OR(rt0.c4))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((NULL IN (v0.c1)) COLLATE NOCASE) ORDER BY x'f85110ea' DESC  NULLS LAST, IFNULL(DISTINCT CAST(rt1.c2 AS INTEGER), rt1.c0)  NULLS FIRST, UNLIKELY(DISTINCT ((((rt1.c0)OR(t1.c12)))OR(rt0.c4))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1, rt1, v0 WHERE ((0xffffffffe2992348 IN ())) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((0Xffffffffe2992348 IN ())) IS TRUE)  as count FROM rt0, t1, rt1, v0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, t1, rt1, v0 WHERE ((0xffffffffe2992348 IN ())) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((0Xffffffffe2992348 IN ())) IS TRUE)  as count FROM rt0, t1, rt1, v0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0, t1, rt1, v0 WHERE ((0xffffffffe2992348 IN ())) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((t1.c4)AND(t1.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c4)AND(t1.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0, v0);
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((t1.c4)AND(t1.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c4)AND(t1.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0, v0);
SELECT ALL * FROM rt1, t1, rt0, v0 WHERE (((((((((t1.c4)AND(t1.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt1.c2)) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) IN ())) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) IN ())) ORDER BY rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)) IN ())) ORDER BY rt1.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (+ (rt0.c1))  WHEN (NOT ('-1882085385')) THEN (+ (rt1.c0)) END) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (0.8473217757180252) AND (rt0.c2)) THEN CASE v0.c2  WHEN rt0.c5 THEN rt1.c1 WHEN v0.c1 THEN NULL WHEN v0.c0 THEN rt0.c5 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c1))  WHEN (NOT ('-1882085385')) THEN (+ (rt1.c0)) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (0.8473217757180252) AND (rt0.c2)) THEN CASE v0.c2  WHEN rt0.c5 THEN rt1.c1 WHEN v0.c1 THEN NULL WHEN v0.c0 THEN rt0.c5 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (+ (rt0.c1))  WHEN (NOT ('-1882085385')) THEN (+ (rt1.c0)) END) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (0.8473217757180252) AND (rt0.c2)) THEN CASE v0.c2  WHEN rt0.c5 THEN rt1.c1 WHEN v0.c1 THEN NULL WHEN v0.c0 THEN rt0.c5 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt0.c1))  WHEN (NOT ('-1882085385')) THEN (+ (rt1.c0)) END) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (0.8473217757180252) AND (rt0.c2)) THEN CASE v0.c2  WHEN rt0.c5 THEN rt1.c1 WHEN v0.c1 THEN NULL WHEN v0.c0 THEN rt0.c5 END END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (CASE (+ (rt0.c1))  WHEN (NOT ('-1882085385')) THEN (+ (rt1.c0)) END) ORDER BY CASE WHEN ((rt0.c2) NOT BETWEEN (0.8473217757180252) AND (rt0.c2)) THEN CASE v0.c2  WHEN rt0.c5 THEN rt1.c1 WHEN v0.c1 THEN NULL WHEN v0.c0 THEN rt0.c5 END END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(((((((((t1.c12)AND(t1.c4)))OR(rt0.c1)))OR(t1.c1)))OR(rt0.c3)) AS BLOB) WHERE (((((rt0.c2)AND(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CAST(((((((((t1.c12)AND(t1.c4)))OR(rt0.c1)))OR(t1.c1)))OR(rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(((((((((t1.c12)AND(t1.c4)))OR(rt0.c1)))OR(t1.c1)))OR(rt0.c3)) AS BLOB) WHERE (((((rt0.c2)AND(rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CAST(((((((((t1.c12)AND(t1.c4)))OR(rt0.c1)))OR(t1.c1)))OR(rt0.c3)) AS BLOB));
SELECT COUNT(*) FROM rt0 CROSS JOIN t1 ON CAST(((((((((t1.c12)AND(t1.c4)))OR(rt0.c1)))OR(t1.c1)))OR(rt0.c3)) AS BLOB) WHERE (((((rt0.c2)AND(rt0.c4))) ISNULL));
SELECT ALL COUNT(*) FROM t1, rt1, rt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE 'D'  WHEN t1.c12 THEN t1.c3 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY CASE 'D'  WHEN t1.c12 THEN t1.c3 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM t1, rt1, rt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE 'D'  WHEN t1.c12 THEN t1.c3 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS REAL)) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY CASE 'D'  WHEN t1.c12 THEN t1.c3 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM t1, rt1, rt0, v0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE 'D'  WHEN t1.c12 THEN t1.c3 COLLATE RTRIM END ASC;
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((NOT (v0.c2))) NOT BETWEEN ((+ (rt0.c6))) AND ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2))) NOT BETWEEN ((+ (rt0.c6))) AND ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((NOT (v0.c2))) NOT BETWEEN ((+ (rt0.c6))) AND ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c2))) NOT BETWEEN ((+ (rt0.c6))) AND ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((((NOT (v0.c2))) NOT BETWEEN ((+ (rt0.c6))) AND ((((rt0.c4)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt0.c0)-(rt0.c6)) IN (rt0.c0, (+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(rt0.c6)) IN (rt0.c0, (+ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt0.c0)-(rt0.c6)) IN (rt0.c0, (+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)-(rt0.c6)) IN (rt0.c0, (+ (rt1.c0))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt0.c0)-(rt0.c6)) IN (rt0.c0, (+ (rt1.c0)))));
SELECT ALL * FROM t1, rt1, v0, rt0 WHERE ((((((t1.c4))>((t1.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c4))>((t1.c2)))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT ALL * FROM t1, rt1, v0, rt0 WHERE ((((((t1.c4))>((t1.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c4))>((t1.c2)))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT ALL * FROM t1, rt1, v0, rt0 WHERE ((((((t1.c4))>((t1.c2)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c3 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(rt0.c3 COLLATE BINARY));
SELECT * FROM rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((CAST(rt1.c0 AS BLOB) IN ()));
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, v0 WHERE (((((('1614309409') NOTNULL)))>=((NULL)))) ORDER BY ((((NULL)AND(((rt0.c5) IS TRUE))))OR(((v0.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('1614309409') NOTNULL)))>=((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NULL)AND(((rt0.c5) IS TRUE))))OR(((v0.c1) ISNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((('1614309409') NOTNULL)))>=((NULL)))) ORDER BY ((((NULL)AND(((rt0.c5) IS TRUE))))OR(((v0.c1) ISNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('1614309409') NOTNULL)))>=((NULL)))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((NULL)AND(((rt0.c5) IS TRUE))))OR(((v0.c1) ISNULL))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((((('1614309409') NOTNULL)))>=((NULL)))) ORDER BY ((((NULL)AND(((rt0.c5) IS TRUE))))OR(((v0.c1) ISNULL))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t1 WHERE ('7WfJ.冗');
SELECT SUM(count) FROM (SELECT ALL (('7WfJ.冗') IS TRUE)  as count FROM v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t1 WHERE ('7WfJ.冗');
SELECT SUM(count) FROM (SELECT ALL (('7WfJ.冗') IS TRUE)  as count FROM v0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN t1 WHERE ('7WfJ.冗');
SELECT * FROM v0, t1 WHERE ((NOT (CAST(t1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c4 AS INTEGER)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((NOT (CAST(t1.c4 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t1.c4 AS INTEGER)))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE ((NOT (CAST(t1.c4 AS INTEGER))));
SELECT * FROM t1, v0, rt0 WHERE (((((NULL)&(t1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(t1.c4))) NOT NULL)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT * FROM t1, v0, rt0 WHERE (((((NULL)&(t1.c4))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)&(t1.c4))) NOT NULL)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT * FROM t1, v0, rt0 WHERE (((((NULL)&(t1.c4))) NOT NULL));
SELECT COUNT(*) FROM v0, t1, rt1 WHERE ((((v0.c2)<(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)<(v0.c1)) IN ())) IS TRUE)  as count FROM v0, t1, rt1);
SELECT COUNT(*) FROM v0, t1, rt1 WHERE ((((v0.c2)<(v0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c2)<(v0.c1)) IN ())) IS TRUE)  as count FROM v0, t1, rt1);
SELECT COUNT(*) FROM v0, t1, rt1 WHERE ((((v0.c2)<(v0.c1)) IN ()));
SELECT * FROM t1, rt1, v0, rt0 WHERE (load_extension(t1.c12, (NOT (t1.c4)))) ORDER BY LOWER(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(t1.c12, (NOT (t1.c4)))) IS TRUE)  as count FROM t1, rt1, v0, rt0 ORDER BY LOWER(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, v0, rt0 WHERE (load_extension(t1.c12, (NOT (t1.c4)))) ORDER BY LOWER(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(t1.c12, (NOT (t1.c4)))) IS TRUE)  as count FROM t1, rt1, v0, rt0 ORDER BY LOWER(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS FIRST);
SELECT * FROM t1, rt1, v0, rt0 WHERE (load_extension(t1.c12, (NOT (t1.c4)))) ORDER BY LOWER(DISTINCT CAST(rt1.c2 AS BLOB)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c12))))|((((t1.c1, t1.c0, t1.c3))<((t1.c2, t1.c3, t1.c4)))))) ORDER BY ((t1.c3 COLLATE RTRIM)=(t1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c12))))|((((t1.c1, t1.c0, t1.c3))<((t1.c2, t1.c3, t1.c4)))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c3 COLLATE RTRIM)==(t1.c4 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c12))))|((((t1.c1, t1.c0, t1.c3))<((t1.c2, t1.c3, t1.c4)))))) ORDER BY ((t1.c3 COLLATE RTRIM)=(t1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c12))))|((((t1.c1, t1.c0, t1.c3))<((t1.c2, t1.c3, t1.c4)))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c3 COLLATE RTRIM)==(t1.c4 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c12))))|((((t1.c1, t1.c0, t1.c3))<((t1.c2, t1.c3, t1.c4)))))) ORDER BY ((t1.c3 COLLATE RTRIM)=(t1.c4 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((NULLIF(t1.c4, t1.c0)) NOTNULL)) ORDER BY ((((CASE t1.c3  WHEN t1.c1 THEN t1.c2 END)OR(((t1.c12)-(t1.c12)))))AND(CASE t1.c12  WHEN t1.c2 THEN t1.c4 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))  NULLS FIRST, rtreenode(CAST('' AS TEXT), CAST(t1.c3 AS TEXT)) DESC  NULLS LAST, ((t1.c0) BETWEEN (CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c12 WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN 0.04822281666616346 ELSE x'' END) AND (SQLITE_COMPILEOPTION_USED(t1.c12))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c4, t1.c0)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((CASE t1.c3  WHEN t1.c1 THEN t1.c2 END)OR(((t1.c12)-(t1.c12)))))AND(CASE t1.c12  WHEN t1.c2 THEN t1.c4 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))  NULLS FIRST, rtreenode(CAST('' AS TEXT), CAST(t1.c3 AS TEXT)) DESC  NULLS LAST, ((t1.c0) BETWEEN (CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c12 WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN 0.04822281666616346 ELSE x'' END) AND (SQLITE_COMPILEOPTION_USED(t1.c12))) DESC);
SELECT ALL * FROM t1 WHERE (((NULLIF(t1.c4, t1.c0)) NOTNULL)) ORDER BY ((((CASE t1.c3  WHEN t1.c1 THEN t1.c2 END)OR(((t1.c12)-(t1.c12)))))AND(CASE t1.c12  WHEN t1.c2 THEN t1.c4 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))  NULLS FIRST, rtreenode(CAST('' AS TEXT), CAST(t1.c3 AS TEXT)) DESC  NULLS LAST, ((t1.c0) BETWEEN (CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c12 WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN 0.04822281666616346 ELSE x'' END) AND (SQLITE_COMPILEOPTION_USED(t1.c12))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(t1.c4, t1.c0)) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((CASE t1.c3  WHEN t1.c1 THEN t1.c2 END)OR(((t1.c12)-(t1.c12)))))AND(CASE t1.c12  WHEN t1.c2 THEN t1.c4 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))  NULLS FIRST, rtreenode(CAST('' AS TEXT), CAST(t1.c3 AS TEXT)) DESC  NULLS LAST, ((t1.c0) BETWEEN (CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c12 WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN 0.04822281666616346 ELSE x'' END) AND (SQLITE_COMPILEOPTION_USED(t1.c12))) DESC);
SELECT ALL * FROM t1 WHERE (((NULLIF(t1.c4, t1.c0)) NOTNULL)) ORDER BY ((((CASE t1.c3  WHEN t1.c1 THEN t1.c2 END)OR(((t1.c12)-(t1.c12)))))AND(CASE t1.c12  WHEN t1.c2 THEN t1.c4 WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 END))  NULLS FIRST, rtreenode(CAST('' AS TEXT), CAST(t1.c3 AS TEXT)) DESC  NULLS LAST, ((t1.c0) BETWEEN (CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c12 WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN 0.04822281666616346 ELSE x'' END) AND (SQLITE_COMPILEOPTION_USED(t1.c12))) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 IN ()) IN ()) WHERE (CASE TYPEOF(DISTINCT v0.c2)  WHEN ')੡|bSX' THEN (((v0.c1))>=((v0.c1))) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT v0.c2)  WHEN ')੡|bSX' THEN (((v0.c1))>=((v0.c1))) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 IN ()) IN ()) WHERE (CASE TYPEOF(DISTINCT v0.c2)  WHEN ')੡|bSX' THEN (((v0.c1))>=((v0.c1))) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(DISTINCT v0.c2)  WHEN ')੡|bSX' THEN (((v0.c1))>=((v0.c1))) ELSE CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON ((v0.c0 IN ()) IN ()) WHERE (CASE TYPEOF(DISTINCT v0.c2)  WHEN ')੡|bSX' THEN (((v0.c1))>=((v0.c1))) ELSE CAST(rt1.c0 AS NUMERIC) END);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1, v0 WHERE (((((rt1.c1)AND(t1.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(t1.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, rt1, v0);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1, v0 WHERE (((((rt1.c1)AND(t1.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(t1.c0)))OR(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t1, rt1, v0);
SELECT ALL * FROM rt0, t1 NOT INDEXED, rt1, v0 WHERE (((((rt1.c1)AND(t1.c0)))OR(v0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c5)))OR(NULL)) IN (TRIM(rt0.c1)))) ORDER BY ((rt0.c3) NOT NULL) COLLATE RTRIM ASC, (NOT ((- (rt0.c3)))) DESC  NULLS FIRST, (NOT (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c5)))OR(NULL)) IN (TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT NULL) COLLATE RTRIM ASC, (NOT ((- (rt0.c3)))) DESC  NULLS FIRST, (NOT (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c5)))OR(NULL)) IN (TRIM(rt0.c1)))) ORDER BY ((rt0.c3) NOT NULL) COLLATE RTRIM ASC, (NOT ((- (rt0.c3)))) DESC  NULLS FIRST, (NOT (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)AND(rt0.c5)))OR(NULL)) IN (TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT NULL) COLLATE RTRIM ASC, (NOT ((- (rt0.c3)))) DESC  NULLS FIRST, (NOT (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c5)))OR(NULL)) IN (TRIM(rt0.c1)))) ORDER BY ((rt0.c3) NOT NULL) COLLATE RTRIM ASC, (NOT ((- (rt0.c3)))) DESC  NULLS FIRST, (NOT (CAST(rt0.c2 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0, v0 WHERE (ABS(DISTINCT CASE rt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN '' WHEN rt1.c0 THEN v0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE rt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN '' WHEN rt1.c0 THEN v0.c0 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (ABS(DISTINCT CASE rt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN '' WHEN rt1.c0 THEN v0.c0 ELSE rt0.c3 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE rt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN '' WHEN rt1.c0 THEN v0.c0 ELSE rt0.c3 END)) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT * FROM rt1, rt0, v0 WHERE (ABS(DISTINCT CASE rt1.c1  WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c6 THEN '' WHEN rt1.c0 THEN v0.c0 ELSE rt0.c3 END));
SELECT ALL COUNT(*) FROM t1, v0 NOT INDEXED, rt0 LEFT OUTER JOIN rt1 ON (0.16528371036180223 IN ()) WHERE ((((~ (t1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c3))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0 LEFT OUTER JOIN rt1 ON (0.16528371036180223 IN ()));
SELECT ALL COUNT(*) FROM t1, v0 NOT INDEXED, rt0 LEFT OUTER JOIN rt1 ON (0.16528371036180223 IN ()) WHERE ((((~ (t1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (t1.c3))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0 LEFT OUTER JOIN rt1 ON (0.16528371036180223 IN ()));
SELECT ALL COUNT(*) FROM t1, v0 NOT INDEXED, rt0 LEFT OUTER JOIN rt1 ON (0.16528371036180223 IN ()) WHERE ((((~ (t1.c3))) IS TRUE));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS NUMERIC)) ORDER BY x'c9ad'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY x'c9ad'  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS NUMERIC)) ORDER BY x'c9ad'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY x'c9ad'  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (CAST(ABS(DISTINCT rt0.c2) AS NUMERIC)) ORDER BY x'c9ad'  NULLS LAST;
SELECT * FROM v0, rt0, t1, rt1 WHERE (((((t1.c0)%(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(rt1.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0, t1, rt1);
SELECT * FROM v0, rt0, t1, rt1 WHERE (((((t1.c0)%(rt1.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)%(rt1.c2))) ISNULL)) IS TRUE)  as count FROM v0, rt0, t1, rt1);
SELECT * FROM v0, rt0, t1, rt1 WHERE (((((t1.c0)%(rt1.c2))) ISNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c2 IN (rt1.c0)) AS INTEGER));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON ((0.4279344599441537)<<(v0.c0 COLLATE RTRIM)) WHERE (((((rt1.c1)||(rt1.c0))) NOTNULL)) ORDER BY ((((v0.c1) BETWEEN (rt1.c2) AND (v0.c2))) IS FALSE) DESC, 0.6454482683125435  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((0.4279344599441537)<<(v0.c0 COLLATE RTRIM)) ORDER BY ((((v0.c1) BETWEEN (rt1.c2) AND (v0.c2))) IS FALSE) DESC, 0.6454482683125435  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON ((0.4279344599441537)<<(v0.c0 COLLATE RTRIM)) WHERE (((((rt1.c1)||(rt1.c0))) NOTNULL)) ORDER BY ((((v0.c1) BETWEEN (rt1.c2) AND (v0.c2))) IS FALSE) DESC, 0.6454482683125435  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)||(rt1.c0))) NOTNULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON ((0.4279344599441537)<<(v0.c0 COLLATE RTRIM)) ORDER BY ((((v0.c1) BETWEEN (rt1.c2) AND (v0.c2))) IS FALSE) DESC, 0.6454482683125435  NULLS FIRST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON ((0.4279344599441537)<<(v0.c0 COLLATE RTRIM)) WHERE (((((rt1.c1)||(rt1.c0))) NOTNULL)) ORDER BY ((((v0.c1) BETWEEN (rt1.c2) AND (v0.c2))) IS FALSE) DESC, 0.6454482683125435  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((((~ (x'')))OR((~ (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0)))))AND((((x'40a1')) BETWEEN ((rt0.c5)) AND ((rt0.c3))))))OR(rt0.c5))) ORDER BY CAST(rt0.c4 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (x'')))OR((~ (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0)))))AND((((x'40a1')) BETWEEN ((rt0.c5)) AND ((rt0.c3))))))OR(rt0.c5))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 AS TEXT) DESC);
SELECT * FROM rt0 WHERE ((((((((((~ (x'')))OR((~ (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0)))))AND((((x'40a1')) BETWEEN ((rt0.c5)) AND ((rt0.c3))))))OR(rt0.c5))) ORDER BY CAST(rt0.c4 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (x'')))OR((~ (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0)))))AND((((x'40a1')) BETWEEN ((rt0.c5)) AND ((rt0.c3))))))OR(rt0.c5))) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c4 AS TEXT) DESC);
SELECT * FROM rt0 WHERE ((((((((((~ (x'')))OR((~ (rt0.c0)))))AND(((rt0.c2)<=(rt0.c0)))))AND((((x'40a1')) BETWEEN ((rt0.c5)) AND ((rt0.c3))))))OR(rt0.c5))) ORDER BY CAST(rt0.c4 AS TEXT) DESC;
SELECT ALL * FROM v0, t1, rt1, rt0 WHERE (((t1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM v0, t1, rt1, rt0);
SELECT ALL * FROM v0, t1, rt1, rt0 WHERE (((t1.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) NOTNULL)) IS TRUE)  as count FROM v0, t1, rt1, rt0);
SELECT ALL * FROM v0, t1, rt1, rt0 WHERE (((t1.c0) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t1 ON (CAST(rt1.c1 AS INTEGER) IN (TRIM(t1.c1), (- (t1.c12)))) WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON (CAST(rt1.c1 AS INTEGER) IN (TRIM(t1.c1), (- (t1.c12)))));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t1 ON (CAST(rt1.c1 AS INTEGER) IN (TRIM(t1.c1), (- (t1.c12)))) WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON (CAST(rt1.c1 AS INTEGER) IN (TRIM(t1.c1), (- (t1.c12)))));
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t1 ON (CAST(rt1.c1 AS INTEGER) IN (TRIM(t1.c1), (- (t1.c12)))) WHERE (rt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (INSTR((v0.c2 IN ()), ((v0.c0) IS FALSE))) ORDER BY (NOT (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR((v0.c2 IN ()), ((v0.c0) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (INSTR((v0.c2 IN ()), ((v0.c0) IS FALSE))) ORDER BY (NOT (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((INSTR((v0.c2 IN ()), ((v0.c0) IS FALSE))) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c2 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (INSTR((v0.c2 IN ()), ((v0.c0) IS FALSE))) ORDER BY (NOT (v0.c2 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((((v0.c2)) NOT BETWEEN ((((((rt1.c2)AND(rt0.c3)))OR(rt0.c5)))) AND ((rt1.c2)))) ORDER BY (((t1.c0)) BETWEEN ((NULLIF(rt0.c5, t1.c0))) AND (((t1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((((rt1.c2)AND(rt0.c3)))OR(rt0.c5)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY (((t1.c0)) BETWEEN ((NULLIF(rt0.c5, t1.c0))) AND (((t1.c0 IN ())))) DESC);
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((((v0.c2)) NOT BETWEEN ((((((rt1.c2)AND(rt0.c3)))OR(rt0.c5)))) AND ((rt1.c2)))) ORDER BY (((t1.c0)) BETWEEN ((NULLIF(rt0.c5, t1.c0))) AND (((t1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN ((((((rt1.c2)AND(rt0.c3)))OR(rt0.c5)))) AND ((rt1.c2)))) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY (((t1.c0)) BETWEEN ((NULLIF(rt0.c5, t1.c0))) AND (((t1.c0 IN ())))) DESC);
SELECT ALL * FROM rt1, t1, v0, rt0 WHERE ((((v0.c2)) NOT BETWEEN ((((((rt1.c2)AND(rt0.c3)))OR(rt0.c5)))) AND ((rt1.c2)))) ORDER BY (((t1.c0)) BETWEEN ((NULLIF(rt0.c5, t1.c0))) AND (((t1.c0 IN ())))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((NOT (((rt1.c0) IS FALSE)))) ORDER BY TRIM(CAST(x'3503cad1' AS REAL), (NOT (rt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY TRIM(CAST(x'3503cad1' AS REAL), (NOT (rt1.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((NOT (((rt1.c0) IS FALSE)))) ORDER BY TRIM(CAST(x'3503cad1' AS REAL), (NOT (rt1.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0, t1, v0 ORDER BY TRIM(CAST(x'3503cad1' AS REAL), (NOT (rt1.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1, v0 WHERE ((NOT (((rt1.c0) IS FALSE)))) ORDER BY TRIM(CAST(x'3503cad1' AS REAL), (NOT (rt1.c2))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON CAST((((rt1.c1, rt1.c0, v0.c0))<((v0.c0, -1.372465091E9, rt1.c2))) AS REAL) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c1 END THEN COALESCE(DISTINCT v0.c1, v0.c1) ELSE (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c1 END THEN COALESCE(DISTINCT v0.c1, v0.c1) ELSE (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON CAST((((rt1.c1, rt1.c0, v0.c0))<((v0.c0, -1.372465091E9, rt1.c2))) AS REAL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON CAST((((rt1.c1, rt1.c0, v0.c0))<((v0.c0, -1.372465091E9, rt1.c2))) AS REAL) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c1 END THEN COALESCE(DISTINCT v0.c1, v0.c1) ELSE (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c1 END THEN COALESCE(DISTINCT v0.c1, v0.c1) ELSE (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON CAST((((rt1.c1, rt1.c0, v0.c0))<((v0.c0, -1.372465091E9, rt1.c2))) AS REAL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON CAST((((rt1.c1, rt1.c0, v0.c0))<((v0.c0, -1.372465091E9, rt1.c2))) AS REAL) WHERE (CASE WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE v0.c1 END THEN COALESCE(DISTINCT v0.c1, v0.c1) ELSE (rt1.c2 IN ()) END);
SELECT * FROM v0, t1, rt0 WHERE ((((((t1.c0) IS FALSE)))>(((+ (rt0.c2)))))) ORDER BY ((((((t1.c1)LIKE(rt0.c4)))AND(((t1.c1)<(rt0.c1)))))AND(((t1.c4) NOT BETWEEN (rt0.c3) AND (t1.c3)))) DESC  NULLS LAST, HEX(t1.c4)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) IS FALSE)))>(((+ (rt0.c2)))))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((((((t1.c1)LIKE(rt0.c4)))AND(((t1.c1)<(rt0.c1)))))AND(((t1.c4) NOT BETWEEN (rt0.c3) AND (t1.c3)))) DESC  NULLS LAST, HEX(t1.c4)  NULLS LAST);
SELECT * FROM v0, t1, rt0 WHERE ((((((t1.c0) IS FALSE)))>(((+ (rt0.c2)))))) ORDER BY ((((((t1.c1)LIKE(rt0.c4)))AND(((t1.c1)<(rt0.c1)))))AND(((t1.c4) NOT BETWEEN (rt0.c3) AND (t1.c3)))) DESC  NULLS LAST, HEX(t1.c4)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) IS FALSE)))>(((+ (rt0.c2)))))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY ((((((t1.c1)LIKE(rt0.c4)))AND(((t1.c1)<(rt0.c1)))))AND(((t1.c4) NOT BETWEEN (rt0.c3) AND (t1.c3)))) DESC  NULLS LAST, HEX(t1.c4)  NULLS LAST);
SELECT * FROM v0, t1, rt0 WHERE ((((((t1.c0) IS FALSE)))>(((+ (rt0.c2)))))) ORDER BY ((((((t1.c1)LIKE(rt0.c4)))AND(((t1.c1)<(rt0.c1)))))AND(((t1.c4) NOT BETWEEN (rt0.c3) AND (t1.c3)))) DESC  NULLS LAST, HEX(t1.c4)  NULLS LAST;
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT ('NDj')) COLLATE RTRIM) ORDER BY ((LOWER(rt0.c4))|(((rt0.c2)||(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('NDj')) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY ((LOWER(rt0.c4))|(((rt0.c2)||(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT ('NDj')) COLLATE RTRIM) ORDER BY ((LOWER(rt0.c4))|(((rt0.c2)||(v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('NDj')) COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, rt0 NOT INDEXED ORDER BY ((LOWER(rt0.c4))|(((rt0.c2)||(v0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, rt1, rt0 WHERE ((NOT ('NDj')) COLLATE RTRIM) ORDER BY ((LOWER(rt0.c4))|(((rt0.c2)||(v0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0 WHERE (v0.c1);
SELECT ALL * FROM t1, v0, rt0, rt1 WHERE ((NOT ((v0.c1 IN (t1.c2))))) ORDER BY ((NOT (t1.c1)) IN ())  NULLS FIRST, rt0.c4;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c1 IN (t1.c2))))) IS TRUE)  as count FROM t1, v0, rt0, rt1 ORDER BY ((NOT (t1.c1)) IN ())  NULLS FIRST, rt0.c4);
SELECT ALL * FROM t1, v0, rt0, rt1 WHERE ((NOT ((v0.c1 IN (t1.c2))))) ORDER BY ((NOT (t1.c1)) IN ())  NULLS FIRST, rt0.c4;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((v0.c1 IN (t1.c2))))) IS TRUE)  as count FROM t1, v0, rt0, rt1 ORDER BY ((NOT (t1.c1)) IN ())  NULLS FIRST, rt0.c4);
SELECT ALL * FROM t1, v0, rt0, rt1 WHERE ((NOT ((v0.c1 IN (t1.c2))))) ORDER BY ((NOT (t1.c1)) IN ())  NULLS FIRST, rt0.c4;
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (IFNULL((t1.c3 IN ()), (t1.c12 IN (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((t1.c3 IN ()), (t1.c12 IN (v0.c1)))) IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (IFNULL((t1.c3 IN ()), (t1.c12 IN (v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((t1.c3 IN ()), (t1.c12 IN (v0.c1)))) IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (IFNULL((t1.c3 IN ()), (t1.c12 IN (v0.c1))));
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c6))+(x'')));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c6))+(x''))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c6))+(x'')));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt0.c6))+(x''))) IS TRUE)  as count FROM t1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t1 NATURAL JOIN rt0 WHERE (((LOWER(DISTINCT rt0.c6))+(x'')));
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c4)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t1.c4)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c4)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(t1.c4)) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((TYPEOF(t1.c4)) NOT NULL));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'b3be');
SELECT SUM(count) FROM (SELECT ((x'b3be') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'b3be');
SELECT SUM(count) FROM (SELECT ((x'b3be') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (x'b3be');
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON '4VlXj' COLLATE BINARY WHERE (((((v0.c0))>=((rt1.c1))) IN ())) ORDER BY (NOT (((x'')/(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0))>=((rt1.c1))) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON '4VlXj' COLLATE BINARY ORDER BY (NOT (((x'')/(v0.c1)))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON '4VlXj' COLLATE BINARY WHERE (((((v0.c0))>=((rt1.c1))) IN ())) ORDER BY (NOT (((x'')/(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0))>=((rt1.c1))) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON '4VlXj' COLLATE BINARY ORDER BY (NOT (((x'')/(v0.c1)))) DESC  NULLS FIRST);
SELECT * FROM v0 RIGHT OUTER JOIN rt1 ON '4VlXj' COLLATE BINARY WHERE (((((v0.c0))>=((rt1.c1))) IN ())) ORDER BY (NOT (((x'')/(v0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c2)))AND(t1.c4))) NOT BETWEEN ((~ (t1.c0))) AND (CASE t1.c12  WHEN t1.c3 THEN t1.c4 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)AND(t1.c2)))AND(t1.c4))) NOT BETWEEN ((~ (t1.c0))) AND (CASE t1.c12  WHEN t1.c3 THEN t1.c4 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c2)))AND(t1.c4))) NOT BETWEEN ((~ (t1.c0))) AND (CASE t1.c12  WHEN t1.c3 THEN t1.c4 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)AND(t1.c2)))AND(t1.c4))) NOT BETWEEN ((~ (t1.c0))) AND (CASE t1.c12  WHEN t1.c3 THEN t1.c4 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c2)))AND(t1.c4))) NOT BETWEEN ((~ (t1.c0))) AND (CASE t1.c12  WHEN t1.c3 THEN t1.c4 WHEN t1.c1 THEN t1.c0 WHEN t1.c1 THEN t1.c0 END)));
SELECT ALL * FROM t1, v0 WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM t1, v0 WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) IS TRUE) AS REAL)) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c2  NULLS FIRST);
SELECT ALL * FROM t1, v0 WHERE (CAST(((v0.c2) IS TRUE) AS REAL)) ORDER BY t1.c2  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((LIKELIHOOD(v0.c1, 0.6444950640413935)) BETWEEN (((rt1.c1) IS FALSE)) AND (PRINTF(t1.c12, v0.c0, rt1.c0))) INNER JOIN v0 ON ((TRIM(DISTINCT rt0.c2)) ISNULL) RIGHT OUTER JOIN rt1 ON (MAX(rt0.c0, t1.c4) IN ()) WHERE (rt0.c1) ORDER BY (- (rt0.c1)), ((CAST(v0.c1 AS REAL))!=(((v0.c0)GLOB(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((LIKELIHOOD(v0.c1, 0.6444950640413935)) BETWEEN (((rt1.c1) IS FALSE)) AND (PRINTF(t1.c12, v0.c0, rt1.c0))) INNER JOIN v0 ON ((TRIM(DISTINCT rt0.c2)) ISNULL) RIGHT OUTER JOIN rt1 ON (MAX(rt0.c0, t1.c4) IN ()) ORDER BY (- (rt0.c1)), ((CAST(v0.c1 AS REAL))<>(((v0.c0)GLOB(rt0.c4))))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON ((LIKELIHOOD(v0.c1, 0.6444950640413935)) BETWEEN (((rt1.c1) IS FALSE)) AND (PRINTF(t1.c12, v0.c0, rt1.c0))) INNER JOIN v0 ON ((TRIM(DISTINCT rt0.c2)) ISNULL) RIGHT OUTER JOIN rt1 ON (MAX(rt0.c0, t1.c4) IN ()) WHERE (rt0.c1) ORDER BY (- (rt0.c1)), ((CAST(v0.c1 AS REAL))!=(((v0.c0)GLOB(rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((LIKELIHOOD(v0.c1, 0.6444950640413935)) BETWEEN (((rt1.c1) IS FALSE)) AND (PRINTF(t1.c12, v0.c0, rt1.c0))) INNER JOIN v0 ON ((TRIM(DISTINCT rt0.c2)) ISNULL) RIGHT OUTER JOIN rt1 ON (MAX(rt0.c0, t1.c4) IN ()) ORDER BY (- (rt0.c1)), ((CAST(v0.c1 AS REAL))<>(((v0.c0)GLOB(rt0.c4))))  NULLS FIRST);
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN v0 ON ((((t1.c1)LIKE(v0.c2)))LIKE((((rt0.c0))>=((rt0.c2))))) WHERE (((0.21046381885666443) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.21046381885666443) ISNULL)) IS TRUE)  as count FROM t1 NOT INDEXED, rt0 RIGHT OUTER JOIN v0 ON ((((t1.c1)LIKE(v0.c2)))LIKE((((rt0.c0))>=((rt0.c2))))));
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN v0 ON ((((t1.c1)LIKE(v0.c2)))LIKE((((rt0.c0))>=((rt0.c2))))) WHERE (((0.21046381885666443) ISNULL));
SELECT SUM(count) FROM (SELECT ((((0.21046381885666443) ISNULL)) IS TRUE)  as count FROM t1 NOT INDEXED, rt0 RIGHT OUTER JOIN v0 ON ((((t1.c1)LIKE(v0.c2)))LIKE((((rt0.c0))>=((rt0.c2))))));
SELECT ALL * FROM t1, rt0 RIGHT OUTER JOIN v0 ON ((((t1.c1)LIKE(v0.c2)))LIKE((((rt0.c0))>=((rt0.c2))))) WHERE (((0.21046381885666443) ISNULL));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((~ (((((rt1.c1)OR(x'531b')))AND(t1.c12))))) ORDER BY (((((t1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))<=(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c1)OR(x'531b')))AND(t1.c12))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((t1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))<=(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((~ (((((rt1.c1)OR(x'531b')))AND(t1.c12))))) ORDER BY (((((t1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))<=(rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((~ (((((rt1.c1)OR(x'531b')))AND(t1.c12))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((t1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))<=(rt1.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ((~ (((((rt1.c1)OR(x'531b')))AND(t1.c12))))) ORDER BY (((((t1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))<=(rt1.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c12)%(t1.c1)))LIKE(((t1.c4)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12)%(t1.c1)))LIKE(((t1.c4)/(rt0.c1))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c12)%(t1.c1)))LIKE(((t1.c4)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12)%(t1.c1)))LIKE(((t1.c4)/(rt0.c1))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c12)%(t1.c1)))LIKE(((t1.c4)/(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN rt1.c1 END)AND(((rt1.c0) NOTNULL))))OR((((v0.c1))=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN rt1.c1 END)AND(((rt1.c0) NOTNULL))))OR((((v0.c1))==((rt1.c2)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN rt1.c1 END)AND(((rt1.c0) NOTNULL))))OR((((v0.c1))=((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN rt1.c1 END)AND(((rt1.c0) NOTNULL))))OR((((v0.c1))==((rt1.c2)))))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (((((CASE v0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN rt1.c1 END)AND(((rt1.c0) NOTNULL))))OR((((v0.c1))=((rt1.c2))))));
SELECT * FROM v0, rt1 CROSS JOIN t1 ON '-238110871' CROSS JOIN rt0 ON (((NOT (t1.c2))) NOTNULL) WHERE (0.11624753355707551) ORDER BY TYPEOF(rt0.c6) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.11624753355707551) IS TRUE)  as count FROM v0, rt1 CROSS JOIN t1 ON '-238110871' CROSS JOIN rt0 ON (((NOT (t1.c2))) NOTNULL) ORDER BY TYPEOF(rt0.c6) COLLATE RTRIM DESC);
SELECT * FROM v0, rt1 CROSS JOIN t1 ON '-238110871' CROSS JOIN rt0 ON (((NOT (t1.c2))) NOTNULL) WHERE (0.11624753355707551) ORDER BY TYPEOF(rt0.c6) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.11624753355707551) IS TRUE)  as count FROM v0, rt1 CROSS JOIN t1 ON '-238110871' CROSS JOIN rt0 ON (((NOT (t1.c2))) NOTNULL) ORDER BY TYPEOF(rt0.c6) COLLATE RTRIM DESC);
SELECT * FROM v0, rt1 CROSS JOIN t1 ON '-238110871' CROSS JOIN rt0 ON (((NOT (t1.c2))) NOTNULL) WHERE (0.11624753355707551) ORDER BY TYPEOF(rt0.c6) COLLATE RTRIM DESC;
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.1633267142582765)))<=(((v0.c0)<=(rt1.c2))))) ORDER BY (((((rt1.c1)) BETWEEN ((v0.c2)) AND ((rt0.c6))))<<((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(0.1633267142582765)))<=(((v0.c0)<=(rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((((rt1.c1)) BETWEEN ((v0.c2)) AND ((rt0.c6))))<<((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.1633267142582765)))<=(((v0.c0)<=(rt1.c2))))) ORDER BY (((((rt1.c1)) BETWEEN ((v0.c2)) AND ((rt0.c6))))<<((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(0.1633267142582765)))<=(((v0.c0)<=(rt1.c2))))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY (((((rt1.c1)) BETWEEN ((v0.c2)) AND ((rt0.c6))))<<((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, rt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(0.1633267142582765)))<=(((v0.c0)<=(rt1.c2))))) ORDER BY (((((rt1.c1)) BETWEEN ((v0.c2)) AND ((rt0.c6))))<<((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt1.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c4) ORDER BY ((((((0.4675497976545048)OR(rt1.c1)))AND(rt1.c2)))GLOB(CAST(t1.c12 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((((0.4675497976545048)OR(rt1.c1)))AND(rt1.c2)))GLOB(CAST(t1.c12 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c4) ORDER BY ((((((0.4675497976545048)OR(rt1.c1)))AND(rt1.c2)))GLOB(CAST(t1.c12 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt1, t1 ORDER BY ((((((0.4675497976545048)OR(rt1.c1)))AND(rt1.c2)))GLOB(CAST(t1.c12 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 WHERE (t1.c4) ORDER BY ((((((0.4675497976545048)OR(rt1.c1)))AND(rt1.c2)))GLOB(CAST(t1.c12 AS REAL)))  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))) IN ()));
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)<(t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<(t1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)<(t1.c0)) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((t1.c0)<(t1.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t1 WHERE (((IFNULL(t1.c2, rt0.c1))||((0.024660728785850017 IN ()))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t1.c2, rt0.c1))||((0.024660728785850017 IN ())))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((IFNULL(t1.c2, rt0.c1))||((0.024660728785850017 IN ()))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(t1.c2, rt0.c1))||((0.024660728785850017 IN ())))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((IFNULL(t1.c2, rt0.c1))||((0.024660728785850017 IN ()))));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((0X6253cef0) BETWEEN (rt0.c4) AND (x'0c8a'))) AND ('*\rP>02T{}')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (((0X6253cef0) BETWEEN (rt0.c4) AND (x'0c8a'))) AND ('*\rP>02T{}'))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((0X6253cef0) BETWEEN (rt0.c4) AND (x'0c8a'))) AND ('*\rP>02T{}')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (((0X6253cef0) BETWEEN (rt0.c4) AND (x'0c8a'))) AND ('*\rP>02T{}'))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (((0X6253cef0) BETWEEN (rt0.c4) AND (x'0c8a'))) AND ('*\rP>02T{}')));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((rt0.c1)AND(t1.c3)))OR(rt0.c2)))AND(t1.c1)))OR(rt0.c2)))<(rt0.c0))) ORDER BY ((CASE WHEN t1.c4 THEN rt0.c6 WHEN 0.7930275346009831 THEN rt0.c5 WHEN t1.c12 THEN rt0.c3 ELSE rt0.c3 END) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(t1.c3)))OR(rt0.c2)))AND(t1.c1)))OR(rt0.c2)))<(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CASE WHEN t1.c4 THEN rt0.c6 WHEN 0.7930275346009831 THEN rt0.c5 WHEN t1.c12 THEN rt0.c3 ELSE rt0.c3 END) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((rt0.c1)AND(t1.c3)))OR(rt0.c2)))AND(t1.c1)))OR(rt0.c2)))<(rt0.c0))) ORDER BY ((CASE WHEN t1.c4 THEN rt0.c6 WHEN 0.7930275346009831 THEN rt0.c5 WHEN t1.c12 THEN rt0.c3 ELSE rt0.c3 END) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(t1.c3)))OR(rt0.c2)))AND(t1.c1)))OR(rt0.c2)))<(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((CASE WHEN t1.c4 THEN rt0.c6 WHEN 0.7930275346009831 THEN rt0.c5 WHEN t1.c12 THEN rt0.c3 ELSE rt0.c3 END) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((((((((((rt0.c1)AND(t1.c3)))OR(rt0.c2)))AND(t1.c1)))OR(rt0.c2)))<(rt0.c0))) ORDER BY ((CASE WHEN t1.c4 THEN rt0.c6 WHEN 0.7930275346009831 THEN rt0.c5 WHEN t1.c12 THEN rt0.c3 ELSE rt0.c3 END) NOT NULL) ASC;
SELECT COUNT(*) FROM rt1, t1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE (((NULL) IS FALSE));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (- ('1765668685')) COLLATE NOCASE WHERE (CAST('gy' AS REAL)) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c6 END THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c6)) WHEN ((rt0.c6)<=(',6N)Xl8f')) THEN ((rt1.c0) ISNULL) WHEN (rt1.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE rt0.c3 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('gy' AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- ('1765668685')) COLLATE NOCASE ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c6 END THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c6)) WHEN ((rt0.c6)<=(',6N)Xl8f')) THEN ((rt1.c0) ISNULL) WHEN (rt1.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE rt0.c3 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (- ('1765668685')) COLLATE NOCASE WHERE (CAST('gy' AS REAL)) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c6 END THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c6)) WHEN ((rt0.c6)<=(',6N)Xl8f')) THEN ((rt1.c0) ISNULL) WHEN (rt1.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE rt0.c3 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('gy' AS REAL)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- ('1765668685')) COLLATE NOCASE ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c6 END THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c6)) WHEN ((rt0.c6)<=(',6N)Xl8f')) THEN ((rt1.c0) ISNULL) WHEN (rt1.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE rt0.c3 END  NULLS FIRST);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (- ('1765668685')) COLLATE NOCASE WHERE (CAST('gy' AS REAL)) ORDER BY CASE WHEN CASE WHEN rt0.c1 THEN rt0.c6 END THEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c6)) WHEN ((rt0.c6)<=(',6N)Xl8f')) THEN ((rt1.c0) ISNULL) WHEN (rt1.c0 IN ()) THEN rt0.c2 COLLATE RTRIM ELSE rt0.c3 END  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (0.405887011433122);
SELECT SUM(count) FROM (SELECT ALL ((0.405887011433122) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.405887011433122);
SELECT SUM(count) FROM (SELECT ALL ((0.405887011433122) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (0.405887011433122);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((rt1.c2) IS TRUE))AND(v0.c1))) ORDER BY (((rt1.c0 COLLATE BINARY))=(((- (NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))AND(v0.c1))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY (((rt1.c0 COLLATE BINARY))==(((- (NULL)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((rt1.c2) IS TRUE))AND(v0.c1))) ORDER BY (((rt1.c0 COLLATE BINARY))=(((- (NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))AND(v0.c1))) IS TRUE)  as count FROM v0 NATURAL JOIN rt1 ORDER BY (((rt1.c0 COLLATE BINARY))==(((- (NULL)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt1 WHERE (((((rt1.c2) IS TRUE))AND(v0.c1))) ORDER BY (((rt1.c0 COLLATE BINARY))=(((- (NULL)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, rt1 NOT INDEXED WHERE (((((((((((rt1.c2)AND(t1.c12)))OR(v0.c2)))OR(v0.c0)))OR(t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(t1.c12)))OR(v0.c2)))OR(v0.c0)))OR(t1.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t1, rt1);
SELECT ALL COUNT(*) FROM v0, t1, rt1 NOT INDEXED WHERE (((((((((((rt1.c2)AND(t1.c12)))OR(v0.c2)))OR(v0.c0)))OR(t1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)AND(t1.c12)))OR(v0.c2)))OR(v0.c0)))OR(t1.c0))) NOTNULL)) IS TRUE)  as count FROM v0, t1, rt1);
SELECT ALL COUNT(*) FROM v0, t1, rt1 NOT INDEXED WHERE (((((((((((rt1.c2)AND(t1.c12)))OR(v0.c2)))OR(v0.c0)))OR(t1.c0))) NOTNULL));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c2)>=(t1.c1)), 0.7420145541382853) LEFT OUTER JOIN t1 ON (-1.75796582E8 COLLATE RTRIM IN ()) WHERE ((+ (((t1.c12)LIKE(t1.c3))))) ORDER BY (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) IN (CAST(t1.c1 AS REAL), (((NULL, t1.c0, NULL)) NOT BETWEEN ((t1.c12, v0.c1, t1.c1)) AND ((t1.c1, v0.c2, t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c12)LIKE(t1.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c2)>=(t1.c1)), 0.7420145541382853) LEFT OUTER JOIN t1 ON (-1.75796582E8 COLLATE RTRIM IN ()) ORDER BY (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) IN (CAST(t1.c1 AS REAL), (((NULL, t1.c0, NULL)) NOT BETWEEN ((t1.c12, v0.c1, t1.c1)) AND ((t1.c1, v0.c2, t1.c0))))) ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c2)>=(t1.c1)), 0.7420145541382853) LEFT OUTER JOIN t1 ON (-1.75796582E8 COLLATE RTRIM IN ()) WHERE ((+ (((t1.c12)LIKE(t1.c3))))) ORDER BY (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) IN (CAST(t1.c1 AS REAL), (((NULL, t1.c0, NULL)) NOT BETWEEN ((t1.c12, v0.c1, t1.c1)) AND ((t1.c1, v0.c2, t1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c12)LIKE(t1.c3))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c2)>=(t1.c1)), 0.7420145541382853) LEFT OUTER JOIN t1 ON (-1.75796582E8 COLLATE RTRIM IN ()) ORDER BY (((NULL) NOT BETWEEN (NULL) AND (rt1.c2)) IN (CAST(t1.c1 AS REAL), (((NULL, t1.c0, NULL)) NOT BETWEEN ((t1.c12, v0.c1, t1.c1)) AND ((t1.c1, v0.c2, t1.c0))))) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0.10416567464228765)) AND ((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))))) ORDER BY (((rt0.c6 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((0.10416567464228765)) AND ((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c6 IN ())) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0.10416567464228765)) AND ((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))))) ORDER BY (((rt0.c6 IN ())) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((0.10416567464228765)) AND ((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c6 IN ())) IS TRUE) ASC);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c0)) NOT BETWEEN ((0.10416567464228765)) AND ((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))))) ORDER BY (((rt0.c6 IN ())) IS TRUE) ASC;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (rt1.c0) AND (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (rt1.c0) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (rt1.c0) AND (((rt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (rt1.c0) AND (((rt1.c0) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (rt1.c0) AND (((rt1.c0) NOT NULL))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN ('Sk*JE') AND (rt0.c0)))&((NOT (0.1321847957830039)))) LEFT OUTER JOIN rt1 ON rt0.c5 WHERE (x'aaf6') ORDER BY v0.c0  NULLS LAST, ((((((v0.c1)OR(6.6114494E8)))OR(v0.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'aaf6') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN ('Sk*JE') AND (rt0.c0)))&((NOT (0.1321847957830039)))) LEFT OUTER JOIN rt1 ON rt0.c5 ORDER BY v0.c0  NULLS LAST, ((((((v0.c1)OR(6.6114494E8)))OR(v0.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN ('Sk*JE') AND (rt0.c0)))&((NOT (0.1321847957830039)))) LEFT OUTER JOIN rt1 ON rt0.c5 WHERE (x'aaf6') ORDER BY v0.c0  NULLS LAST, ((((((v0.c1)OR(6.6114494E8)))OR(v0.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'aaf6') IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN ('Sk*JE') AND (rt0.c0)))&((NOT (0.1321847957830039)))) LEFT OUTER JOIN rt1 ON rt0.c5 ORDER BY v0.c0  NULLS LAST, ((((((v0.c1)OR(6.6114494E8)))OR(v0.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((rt0.c0) BETWEEN ('Sk*JE') AND (rt0.c0)))&((NOT (0.1321847957830039)))) LEFT OUTER JOIN rt1 ON rt0.c5 WHERE (x'aaf6') ORDER BY v0.c0  NULLS LAST, ((((((v0.c1)OR(6.6114494E8)))OR(v0.c1))) ISNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((x'')OR(rt0.c5)))AND(rt1.c1)) WHEN ((('1226319366', rt1.c1, rt0.c6)) NOT BETWEEN ((0.007805301286751498, rt0.c0, rt1.c0)) AND ((rt0.c0, rt0.c5, rt0.c3))) THEN CASE WHEN 0.16264843590947398 THEN rt0.c0 END WHEN SQLITE_VERSION() THEN '5y*6[' END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((x'')OR(rt0.c5)))AND(rt1.c1)) WHEN ((('1226319366', rt1.c1, rt0.c6)) NOT BETWEEN ((0.007805301286751498, rt0.c0, rt1.c0)) AND ((rt0.c0, rt0.c5, rt0.c3))) THEN CASE WHEN 0.16264843590947398 THEN rt0.c0 END WHEN SQLITE_VERSION() THEN '5y*6[' END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((x'')OR(rt0.c5)))AND(rt1.c1)) WHEN ((('1226319366', rt1.c1, rt0.c6)) NOT BETWEEN ((0.007805301286751498, rt0.c0, rt1.c0)) AND ((rt0.c0, rt0.c5, rt0.c3))) THEN CASE WHEN 0.16264843590947398 THEN rt0.c0 END WHEN SQLITE_VERSION() THEN '5y*6[' END;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((x'')OR(rt0.c5)))AND(rt1.c1)) WHEN ((('1226319366', rt1.c1, rt0.c6)) NOT BETWEEN ((0.007805301286751498, rt0.c0, rt1.c0)) AND ((rt0.c0, rt0.c5, rt0.c3))) THEN CASE WHEN 0.16264843590947398 THEN rt0.c0 END WHEN SQLITE_VERSION() THEN '5y*6[' END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 IN ()) IN (CASE rt0.c1  WHEN NULL THEN rt0.c1 END))) ORDER BY CASE WHEN (NOT (rt1.c0)) THEN ((((x'')OR(rt0.c5)))AND(rt1.c1)) WHEN ((('1226319366', rt1.c1, rt0.c6)) NOT BETWEEN ((0.007805301286751498, rt0.c0, rt1.c0)) AND ((rt0.c0, rt0.c5, rt0.c3))) THEN CASE WHEN 0.16264843590947398 THEN rt0.c0 END WHEN SQLITE_VERSION() THEN '5y*6[' END;
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t1.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0)AND(t1.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t1, rt0 WHERE (((((((((rt0.c0)AND(t1.c2)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON ((CAST(v0.c0 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t1 ON (((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((CAST(rt1.c2 AS BLOB)))) FULL OUTER JOIN rt0 ON x'' WHERE (((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))&((~ (0xffffffffd53c08a3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))&((~ (0xffffffffd53c08a3))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CAST(v0.c0 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t1 ON (((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((CAST(rt1.c2 AS BLOB)))) FULL OUTER JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON ((CAST(v0.c0 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t1 ON (((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((CAST(rt1.c2 AS BLOB)))) FULL OUTER JOIN rt0 ON x'' WHERE (((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))&((~ (0xffffffffd53c08a3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))&((~ (0xffffffffd53c08a3))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CAST(v0.c0 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t1 ON (((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((CAST(rt1.c2 AS BLOB)))) FULL OUTER JOIN rt0 ON x'');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOTNULL))+((+ (v0.c1)))) WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c0)LIKE(rt0.c0)))) ORDER BY CAST(409830961 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOTNULL))+((+ (v0.c1)))) ORDER BY CAST(409830961 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOTNULL))+((+ (v0.c1)))) WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c0)LIKE(rt0.c0)))) ORDER BY CAST(409830961 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOTNULL))+((+ (v0.c1)))) ORDER BY CAST(409830961 AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON ((((v0.c1) NOTNULL))+((+ (v0.c1)))) WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c0)LIKE(rt0.c0)))) ORDER BY CAST(409830961 AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)&(v0.c1)))==(((v0.c0)*(rt1.c1))))) ORDER BY LIKELY(((((v0.c0)OR(rt1.c2)))OR(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(v0.c1)))=(((v0.c0)*(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY LIKELY(((((v0.c0)OR(rt1.c2)))OR(v0.c2))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)&(v0.c1)))==(((v0.c0)*(rt1.c1))))) ORDER BY LIKELY(((((v0.c0)OR(rt1.c2)))OR(v0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(v0.c1)))=(((v0.c0)*(rt1.c1))))) IS TRUE)  as count FROM v0, rt1 ORDER BY LIKELY(((((v0.c0)OR(rt1.c2)))OR(v0.c2))) DESC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt1 WHERE (((((rt1.c1)&(v0.c1)))==(((v0.c0)*(rt1.c1))))) ORDER BY LIKELY(((((v0.c0)OR(rt1.c2)))OR(v0.c2))) DESC;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((v0.c2) ISNULL) INNER JOIN rt1 ON CASE ((rt1.c2) IS TRUE)  WHEN (- (rt0.c1)) THEN NULL ELSE CASE WHEN rt0.c6 THEN v0.c2 ELSE rt0.c6 END END WHERE (((((+ (rt1.c1))))=((CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt1.c1))))==((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((v0.c2) ISNULL) INNER JOIN rt1 ON CASE ((rt1.c2) IS TRUE)  WHEN (- (rt0.c1)) THEN NULL ELSE CASE WHEN rt0.c6 THEN v0.c2 ELSE rt0.c6 END END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((v0.c2) ISNULL) INNER JOIN rt1 ON CASE ((rt1.c2) IS TRUE)  WHEN (- (rt0.c1)) THEN NULL ELSE CASE WHEN rt0.c6 THEN v0.c2 ELSE rt0.c6 END END WHERE (((((+ (rt1.c1))))=((CAST(rt0.c3 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (rt1.c1))))==((CAST(rt0.c3 AS BLOB))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((v0.c2) ISNULL) INNER JOIN rt1 ON CASE ((rt1.c2) IS TRUE)  WHEN (- (rt0.c1)) THEN NULL ELSE CASE WHEN rt0.c6 THEN v0.c2 ELSE rt0.c6 END END);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((v0.c2) ISNULL) INNER JOIN rt1 ON CASE ((rt1.c2) IS TRUE)  WHEN (- (rt0.c1)) THEN NULL ELSE CASE WHEN rt0.c6 THEN v0.c2 ELSE rt0.c6 END END WHERE (((((+ (rt1.c1))))=((CAST(rt0.c3 AS BLOB)))));
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT * FROM rt0, rt1, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN 0.22163679649928292 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN 0.22163679649928292 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN 0.22163679649928292 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN 0.22163679649928292 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CASE WHEN x'' THEN rt0.c2 WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN 0.22163679649928292 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (((x'', rt0.c5, t1.c3)) BETWEEN (((((t1.c0, rt0.c0, rt1.c0, rt0.c0, rt0.c4))<((441663397, rt0.c3, rt1.c0, rt0.c3, 0.15016086181055543))), (t1.c1 IN ()), ABS(rt0.c4))) AND (((+ (t1.c0)), (+ (t1.c4)), rt0.c4))) INNER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(((rt0.c6)<=(rt0.c6))) WHERE ((((rt1.c2)) BETWEEN ((((rt0.c4)<(rt0.c1)))) AND ((JULIANDAY('-960900723', t1.c1, t1.c0, rt0.c5, t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt0.c4)<(rt0.c1)))) AND ((JULIANDAY('-960900723', t1.c1, t1.c0, rt0.c5, t1.c12))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((x'', rt0.c5, t1.c3)) BETWEEN (((((t1.c0, rt0.c0, rt1.c0, rt0.c0, rt0.c4))<((441663397, rt0.c3, rt1.c0, rt0.c3, 0.15016086181055543))), (t1.c1 IN ()), ABS(rt0.c4))) AND (((+ (t1.c0)), (+ (t1.c4)), rt0.c4))) INNER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(((rt0.c6)<=(rt0.c6))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (((x'', rt0.c5, t1.c3)) BETWEEN (((((t1.c0, rt0.c0, rt1.c0, rt0.c0, rt0.c4))<((441663397, rt0.c3, rt1.c0, rt0.c3, 0.15016086181055543))), (t1.c1 IN ()), ABS(rt0.c4))) AND (((+ (t1.c0)), (+ (t1.c4)), rt0.c4))) INNER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(((rt0.c6)<=(rt0.c6))) WHERE ((((rt1.c2)) BETWEEN ((((rt0.c4)<(rt0.c1)))) AND ((JULIANDAY('-960900723', t1.c1, t1.c0, rt0.c5, t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt0.c4)<(rt0.c1)))) AND ((JULIANDAY('-960900723', t1.c1, t1.c0, rt0.c5, t1.c12))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON (((x'', rt0.c5, t1.c3)) BETWEEN (((((t1.c0, rt0.c0, rt1.c0, rt0.c0, rt0.c4))<((441663397, rt0.c3, rt1.c0, rt0.c3, 0.15016086181055543))), (t1.c1 IN ()), ABS(rt0.c4))) AND (((+ (t1.c0)), (+ (t1.c4)), rt0.c4))) INNER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(((rt0.c6)<=(rt0.c6))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t1 ON (((x'', rt0.c5, t1.c3)) BETWEEN (((((t1.c0, rt0.c0, rt1.c0, rt0.c0, rt0.c4))<((441663397, rt0.c3, rt1.c0, rt0.c3, 0.15016086181055543))), (t1.c1 IN ()), ABS(rt0.c4))) AND (((+ (t1.c0)), (+ (t1.c4)), rt0.c4))) INNER JOIN rt1 ON SQLITE_COMPILEOPTION_GET(((rt0.c6)<=(rt0.c6))) WHERE ((((rt1.c2)) BETWEEN ((((rt0.c4)<(rt0.c1)))) AND ((JULIANDAY('-960900723', t1.c1, t1.c0, rt0.c5, t1.c12)))));
SELECT * FROM v0, t1, rt1 WHERE (((((((((CASE t1.c12  WHEN rt1.c1 THEN t1.c2 END)OR(((t1.c0) BETWEEN (t1.c3) AND (t1.c3)))))OR((NOT (t1.c0)))))OR((((v0.c1, t1.c12, 0X7fffffffffffffff))<=((t1.c3, rt1.c0, t1.c3))))))AND(((0.9263772818423315)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t1.c12  WHEN rt1.c1 THEN t1.c2 END)OR(((t1.c0) BETWEEN (t1.c3) AND (t1.c3)))))OR((NOT (t1.c0)))))OR((((v0.c1, t1.c12, 0x7fffffffffffffff))<=((t1.c3, rt1.c0, t1.c3))))))AND(((0.9263772818423315)AND(v0.c0))))) IS TRUE)  as count FROM v0, t1, rt1);
SELECT * FROM v0, t1, rt1 WHERE (((((((((CASE t1.c12  WHEN rt1.c1 THEN t1.c2 END)OR(((t1.c0) BETWEEN (t1.c3) AND (t1.c3)))))OR((NOT (t1.c0)))))OR((((v0.c1, t1.c12, 0X7fffffffffffffff))<=((t1.c3, rt1.c0, t1.c3))))))AND(((0.9263772818423315)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE t1.c12  WHEN rt1.c1 THEN t1.c2 END)OR(((t1.c0) BETWEEN (t1.c3) AND (t1.c3)))))OR((NOT (t1.c0)))))OR((((v0.c1, t1.c12, 0x7fffffffffffffff))<=((t1.c3, rt1.c0, t1.c3))))))AND(((0.9263772818423315)AND(v0.c0))))) IS TRUE)  as count FROM v0, t1, rt1);
SELECT * FROM v0, t1, rt1 WHERE (((((((((CASE t1.c12  WHEN rt1.c1 THEN t1.c2 END)OR(((t1.c0) BETWEEN (t1.c3) AND (t1.c3)))))OR((NOT (t1.c0)))))OR((((v0.c1, t1.c12, 0X7fffffffffffffff))<=((t1.c3, rt1.c0, t1.c3))))))AND(((0.9263772818423315)AND(v0.c0)))));
SELECT * FROM v0, t1 WHERE ((+ ('U^TR' COLLATE RTRIM))) ORDER BY (((((((v0.c1, t1.c0, t1.c0))<((v0.c0, v0.c2, t1.c3))))OR(((t1.c1) NOT BETWEEN ('c|磾	⤱-?') AND (t1.c12)))))OR(CASE t1.c0  WHEN t1.c12 THEN t1.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((+ ('U^TR' COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 ORDER BY (((((((v0.c1, t1.c0, t1.c0))<((v0.c0, v0.c2, t1.c3))))OR(((t1.c1) NOT BETWEEN ('c|磾	⤱-?') AND (t1.c12)))))OR(CASE t1.c0  WHEN t1.c12 THEN t1.c3 END)));
SELECT * FROM v0, t1 WHERE ((+ ('U^TR' COLLATE RTRIM))) ORDER BY (((((((v0.c1, t1.c0, t1.c0))<((v0.c0, v0.c2, t1.c3))))OR(((t1.c1) NOT BETWEEN ('c|磾	⤱-?') AND (t1.c12)))))OR(CASE t1.c0  WHEN t1.c12 THEN t1.c3 END));
SELECT SUM(count) FROM (SELECT ALL (((+ ('U^TR' COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1 ORDER BY (((((((v0.c1, t1.c0, t1.c0))<((v0.c0, v0.c2, t1.c3))))OR(((t1.c1) NOT BETWEEN ('c|磾	⤱-?') AND (t1.c12)))))OR(CASE t1.c0  WHEN t1.c12 THEN t1.c3 END)));
SELECT * FROM v0, t1 WHERE ((+ ('U^TR' COLLATE RTRIM))) ORDER BY (((((((v0.c1, t1.c0, t1.c0))<((v0.c0, v0.c2, t1.c3))))OR(((t1.c1) NOT BETWEEN ('c|磾	⤱-?') AND (t1.c12)))))OR(CASE t1.c0  WHEN t1.c12 THEN t1.c3 END));
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, v0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t1 WHERE (NULL);
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt0.c1))) IS FALSE) WHERE (((t1.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt0.c1))) IS FALSE));
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt0.c1))) IS FALSE) WHERE (((t1.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt0.c1))) IS FALSE));
SELECT ALL * FROM t1, rt0 CROSS JOIN rt1 ON ((((rt0.c1)<=(rt0.c1))) IS FALSE) WHERE (((t1.c1) NOT NULL) COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM rt0, t1, v0, rt1 WHERE (((CAST(v0.c1 AS NUMERIC))>>(((rt0.c5)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC))>>(((rt0.c5)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL * FROM rt0, t1, v0, rt1 WHERE (((CAST(v0.c1 AS NUMERIC))>>(((rt0.c5)OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS NUMERIC))>>(((rt0.c5)OR(rt0.c1))))) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT ALL * FROM rt0, t1, v0, rt1 WHERE (((CAST(v0.c1 AS NUMERIC))>>(((rt0.c5)OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((v0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOTNULL)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((v0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c2) NOTNULL)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((v0.c2) NOTNULL));
SELECT ALL * FROM rt1, v0, rt0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c0 THEN v0.c1 END))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c1 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN v0.c0 THEN v0.c1 END))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT ALL * FROM rt1, v0, rt0 WHERE ((~ (CASE WHEN v0.c0 THEN v0.c1 END)));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))>>(((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))>>(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))>>(((v0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))>>(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))>>(((v0.c2) IS FALSE))));
SELECT ALL * FROM rt1, t1, rt0 WHERE (0.08808962064075632 COLLATE BINARY) ORDER BY ((((rt1.c0)OR(CASE WHEN t1.c12 THEN t1.c0 END)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c5)))) ASC  NULLS LAST, ((rt0.c5)LIKE(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.08808962064075632 COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt1.c0)OR(CASE WHEN t1.c12 THEN t1.c0 END)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c5)))) ASC  NULLS LAST, ((rt0.c5)LIKE(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (0.08808962064075632 COLLATE BINARY) ORDER BY ((((rt1.c0)OR(CASE WHEN t1.c12 THEN t1.c0 END)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c5)))) ASC  NULLS LAST, ((rt0.c5)LIKE(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.08808962064075632 COLLATE BINARY) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt1.c0)OR(CASE WHEN t1.c12 THEN t1.c0 END)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c5)))) ASC  NULLS LAST, ((rt0.c5)LIKE(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (0.08808962064075632 COLLATE BINARY) ORDER BY ((((rt1.c0)OR(CASE WHEN t1.c12 THEN t1.c0 END)))OR(((((rt0.c2)AND(rt0.c4)))OR(rt0.c5)))) ASC  NULLS LAST, ((rt0.c5)LIKE(rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM rt0, rt1, v0, t1 NOT INDEXED WHERE ((0.44918662834622447 IN ())) ORDER BY (+ (((t1.c3)LIKE(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.44918662834622447 IN ())) IS TRUE)  as count FROM rt0, rt1, v0, t1 ORDER BY (+ (((t1.c3)LIKE(t1.c0))))  NULLS LAST);
SELECT * FROM rt0, rt1, v0, t1 NOT INDEXED WHERE ((0.44918662834622447 IN ())) ORDER BY (+ (((t1.c3)LIKE(t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.44918662834622447 IN ())) IS TRUE)  as count FROM rt0, rt1, v0, t1 ORDER BY (+ (((t1.c3)LIKE(t1.c0))))  NULLS LAST);
SELECT * FROM rt0, rt1, v0, t1 NOT INDEXED WHERE ((0.44918662834622447 IN ())) ORDER BY (+ (((t1.c3)LIKE(t1.c0))))  NULLS LAST;
SELECT * FROM v0, rt1, t1, rt0 WHERE (rt0.c6) ORDER BY (('Y+VQ') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM v0, rt1, t1, rt0 ORDER BY (('Y+VQ') NOTNULL) ASC);
SELECT * FROM v0, rt1, t1, rt0 WHERE (rt0.c6) ORDER BY (('Y+VQ') NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c6) IS TRUE)  as count FROM v0, rt1, t1, rt0 ORDER BY (('Y+VQ') NOTNULL) ASC);
SELECT * FROM v0, rt1, t1, rt0 WHERE (rt0.c6) ORDER BY (('Y+VQ') NOTNULL) ASC;
SELECT * FROM rt1, rt0 WHERE ((+ (CASE 348503689  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((CASE WHEN rt0.c4 THEN 0X3c52473a END, rt0.c6 COLLATE NOCASE, ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c4))))==((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), 0Xffffffff91c5c365, CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c2 END))) DESC, (~ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)) ASC  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 348503689  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CASE WHEN rt0.c4 THEN 0X3c52473a END, rt0.c6 COLLATE NOCASE, ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c4))))=((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), 0xffffffff91c5c365, CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c2 END))) DESC, (~ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)) ASC  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END AS REAL) ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (CASE 348503689  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((CASE WHEN rt0.c4 THEN 0X3c52473a END, rt0.c6 COLLATE NOCASE, ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c4))))==((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), 0Xffffffff91c5c365, CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c2 END))) DESC, (~ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)) ASC  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 348503689  WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((CASE WHEN rt0.c4 THEN 0X3c52473a END, rt0.c6 COLLATE NOCASE, ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c4))))=((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), 0xffffffff91c5c365, CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c2 END))) DESC, (~ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)) ASC  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END AS REAL) ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE ((+ (CASE 348503689  WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY (((CASE WHEN rt0.c4 THEN 0X3c52473a END, rt0.c6 COLLATE NOCASE, ((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c4))))==((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c3)), 0Xffffffff91c5c365, CASE WHEN rt0.c4 THEN rt0.c6 ELSE rt1.c2 END))) DESC, (~ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c5 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END)) ASC  NULLS FIRST, CAST(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c4 END AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN rt1 ON ((((rt0.c0) ISNULL)) BETWEEN (t1.c12 COLLATE NOCASE) AND (QUOTE(rt1.c0))) WHERE (CASE (NULL IN ())  WHEN (rt1.c2 IN (t1.c12, t1.c3)) THEN ((((rt1.c1)AND(rt0.c4)))OR(rt0.c0)) ELSE CAST(t1.c2 AS REAL) END) ORDER BY ((((t1.c2) IS FALSE)) BETWEEN ((rt0.c3 IN (t1.c3))) AND (x''))  NULLS LAST, (((rt1.c0 IN (t1.c12, rt0.c0)))LIKE((rt0.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (rt1.c2 IN (t1.c12, t1.c3)) THEN ((((rt1.c1)AND(rt0.c4)))OR(rt0.c0)) ELSE CAST(t1.c2 AS REAL) END) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN rt1 ON ((((rt0.c0) ISNULL)) BETWEEN (t1.c12 COLLATE NOCASE) AND (QUOTE(rt1.c0))) ORDER BY ((((t1.c2) IS FALSE)) BETWEEN ((rt0.c3 IN (t1.c3))) AND (x''))  NULLS LAST, (((rt1.c0 IN (t1.c12, rt0.c0)))LIKE((rt0.c3 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN rt1 ON ((((rt0.c0) ISNULL)) BETWEEN (t1.c12 COLLATE NOCASE) AND (QUOTE(rt1.c0))) WHERE (CASE (NULL IN ())  WHEN (rt1.c2 IN (t1.c12, t1.c3)) THEN ((((rt1.c1)AND(rt0.c4)))OR(rt0.c0)) ELSE CAST(t1.c2 AS REAL) END) ORDER BY ((((t1.c2) IS FALSE)) BETWEEN ((rt0.c3 IN (t1.c3))) AND (x''))  NULLS LAST, (((rt1.c0 IN (t1.c12, rt0.c0)))LIKE((rt0.c3 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (NULL IN ())  WHEN (rt1.c2 IN (t1.c12, t1.c3)) THEN ((((rt1.c1)AND(rt0.c4)))OR(rt0.c0)) ELSE CAST(t1.c2 AS REAL) END) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN rt1 ON ((((rt0.c0) ISNULL)) BETWEEN (t1.c12 COLLATE NOCASE) AND (QUOTE(rt1.c0))) ORDER BY ((((t1.c2) IS FALSE)) BETWEEN ((rt0.c3 IN (t1.c3))) AND (x''))  NULLS LAST, (((rt1.c0 IN (t1.c12, rt0.c0)))LIKE((rt0.c3 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1 LEFT OUTER JOIN rt1 ON ((((rt0.c0) ISNULL)) BETWEEN (t1.c12 COLLATE NOCASE) AND (QUOTE(rt1.c0))) WHERE (CASE (NULL IN ())  WHEN (rt1.c2 IN (t1.c12, t1.c3)) THEN ((((rt1.c1)AND(rt0.c4)))OR(rt0.c0)) ELSE CAST(t1.c2 AS REAL) END) ORDER BY ((((t1.c2) IS FALSE)) BETWEEN ((rt0.c3 IN (t1.c3))) AND (x''))  NULLS LAST, (((rt1.c0 IN (t1.c12, rt0.c0)))LIKE((rt0.c3 IN ()))) ASC  NULLS FIRST;
SELECT * FROM v0, rt1, t1 WHERE (((v0.c1)IS NOT((((t1.c1, NULL, rt1.c0))>((t1.c12, t1.c2, t1.c4)))))) ORDER BY (((CAST(v0.c2 AS REAL), CASE rt1.c0  WHEN v0.c2 THEN v0.c2 WHEN rt1.c2 THEN t1.c1 WHEN -8.38843851E8 THEN rt1.c0 ELSE t1.c12 END, ((rt1.c1) BETWEEN (t1.c12) AND (t1.c2))))=((CASE WHEN rt1.c2 THEN rt1.c0 WHEN t1.c3 THEN rt1.c0 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END, rt1.c2 COLLATE NOCASE, (((t1.c3))>=((v0.c2)))))) ASC  NULLS LAST, (('-612636063')&(((rt1.c2) IS TRUE)))  NULLS FIRST, (((((rt1.c1)&(t1.c1))))<(((t1.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS NOT((((t1.c1, NULL, rt1.c0))>((t1.c12, t1.c2, t1.c4)))))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY (((CAST(v0.c2 AS REAL), CASE rt1.c0  WHEN v0.c2 THEN v0.c2 WHEN rt1.c2 THEN t1.c1 WHEN -8.38843851E8 THEN rt1.c0 ELSE t1.c12 END, ((rt1.c1) BETWEEN (t1.c12) AND (t1.c2))))==((CASE WHEN rt1.c2 THEN rt1.c0 WHEN t1.c3 THEN rt1.c0 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END, rt1.c2 COLLATE NOCASE, (((t1.c3))>=((v0.c2)))))) ASC  NULLS LAST, (('-612636063')&(((rt1.c2) IS TRUE)))  NULLS FIRST, (((((rt1.c1)&(t1.c1))))<(((t1.c2 IN ()))))  NULLS FIRST);
SELECT * FROM v0, rt1, t1 WHERE (((v0.c1)IS NOT((((t1.c1, NULL, rt1.c0))>((t1.c12, t1.c2, t1.c4)))))) ORDER BY (((CAST(v0.c2 AS REAL), CASE rt1.c0  WHEN v0.c2 THEN v0.c2 WHEN rt1.c2 THEN t1.c1 WHEN -8.38843851E8 THEN rt1.c0 ELSE t1.c12 END, ((rt1.c1) BETWEEN (t1.c12) AND (t1.c2))))=((CASE WHEN rt1.c2 THEN rt1.c0 WHEN t1.c3 THEN rt1.c0 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END, rt1.c2 COLLATE NOCASE, (((t1.c3))>=((v0.c2)))))) ASC  NULLS LAST, (('-612636063')&(((rt1.c2) IS TRUE)))  NULLS FIRST, (((((rt1.c1)&(t1.c1))))<(((t1.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS NOT((((t1.c1, NULL, rt1.c0))>((t1.c12, t1.c2, t1.c4)))))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY (((CAST(v0.c2 AS REAL), CASE rt1.c0  WHEN v0.c2 THEN v0.c2 WHEN rt1.c2 THEN t1.c1 WHEN -8.38843851E8 THEN rt1.c0 ELSE t1.c12 END, ((rt1.c1) BETWEEN (t1.c12) AND (t1.c2))))==((CASE WHEN rt1.c2 THEN rt1.c0 WHEN t1.c3 THEN rt1.c0 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END, rt1.c2 COLLATE NOCASE, (((t1.c3))>=((v0.c2)))))) ASC  NULLS LAST, (('-612636063')&(((rt1.c2) IS TRUE)))  NULLS FIRST, (((((rt1.c1)&(t1.c1))))<(((t1.c2 IN ()))))  NULLS FIRST);
SELECT * FROM v0, rt1, t1 WHERE (((v0.c1)IS NOT((((t1.c1, NULL, rt1.c0))>((t1.c12, t1.c2, t1.c4)))))) ORDER BY (((CAST(v0.c2 AS REAL), CASE rt1.c0  WHEN v0.c2 THEN v0.c2 WHEN rt1.c2 THEN t1.c1 WHEN -8.38843851E8 THEN rt1.c0 ELSE t1.c12 END, ((rt1.c1) BETWEEN (t1.c12) AND (t1.c2))))=((CASE WHEN rt1.c2 THEN rt1.c0 WHEN t1.c3 THEN rt1.c0 WHEN t1.c2 THEN v0.c0 ELSE v0.c1 END, rt1.c2 COLLATE NOCASE, (((t1.c3))>=((v0.c2)))))) ASC  NULLS LAST, (('-612636063')&(((rt1.c2) IS TRUE)))  NULLS FIRST, (((((rt1.c1)&(t1.c1))))<(((t1.c2 IN ()))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)) IN ())) ORDER BY ((((((x'')*(rt1.c0)))OR((+ (rt1.c2)))))AND(((rt1.c0) IS TRUE))) DESC, ((CAST(rt1.c0 AS NUMERIC)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((x'')*(rt1.c0)))OR((+ (rt1.c2)))))AND(((rt1.c0) IS TRUE))) DESC, ((CAST(rt1.c0 AS NUMERIC)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)) IN ())) ORDER BY ((((((x'')*(rt1.c0)))OR((+ (rt1.c2)))))AND(((rt1.c0) IS TRUE))) DESC, ((CAST(rt1.c0 AS NUMERIC)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((x'')*(rt1.c0)))OR((+ (rt1.c2)))))AND(((rt1.c0) IS TRUE))) DESC, ((CAST(rt1.c0 AS NUMERIC)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1) NOT BETWEEN (NULL) AND (rt1.c1)) IN ())) ORDER BY ((((((x'')*(rt1.c0)))OR((+ (rt1.c2)))))AND(((rt1.c0) IS TRUE))) DESC, ((CAST(rt1.c0 AS NUMERIC)) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(t1.c4 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c4 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(t1.c4 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c4 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (CAST(t1.c4 COLLATE BINARY AS NUMERIC));
SELECT ALL * FROM t1, v0, rt1 WHERE ((((t1.c2 IN (t1.c2)))|((~ (t1.c3)))));
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c2)))|((~ (t1.c3))))) IS TRUE)  as count FROM t1, v0, rt1);
SELECT ALL * FROM t1, v0, rt1 WHERE ((((t1.c2 IN (t1.c2)))|((~ (t1.c3)))));
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c2)))|((~ (t1.c3))))) IS TRUE)  as count FROM t1, v0, rt1);
SELECT ALL * FROM t1, v0, rt1 WHERE ((((t1.c2 IN (t1.c2)))|((~ (t1.c3)))));
SELECT * FROM rt0, v0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT * FROM rt0, v0, rt1 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(HEX(t1.c2) AS BLOB)) ORDER BY CAST(((t1.c1) BETWEEN (t1.c3) AND (t1.c4)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(t1.c2) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1) BETWEEN (t1.c3) AND (t1.c4)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(HEX(t1.c2) AS BLOB)) ORDER BY CAST(((t1.c1) BETWEEN (t1.c3) AND (t1.c4)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(t1.c2) AS BLOB)) IS TRUE)  as count FROM t1 ORDER BY CAST(((t1.c1) BETWEEN (t1.c3) AND (t1.c4)) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(HEX(t1.c2) AS BLOB)) ORDER BY CAST(((t1.c1) BETWEEN (t1.c3) AND (t1.c4)) AS INTEGER) ASC;
SELECT ALL * FROM v0, rt0, rt1 WHERE (LIKELY(DISTINCT x'90f7'));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT x'90f7')) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (LIKELY(DISTINCT x'90f7'));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT x'90f7')) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE (LIKELY(DISTINCT x'90f7'));
SELECT * FROM v0 INNER JOIN rt1 ON ((CHAR(rt0.c6))>=((('[') NOT BETWEEN (rt0.c2) AND (NULL)))) INNER JOIN rt0 ON rt1.c2 FULL OUTER JOIN t1 ON IFNULL(CASE rt0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c0 THEN t1.c0 END, x'' COLLATE NOCASE) WHERE ((((- (x'')))GLOB((rt0.c4 IN (rt0.c0))))) ORDER BY ((((((v0.c1, rt1.c1, v0.c2)) NOT BETWEEN ((rt0.c1, t1.c2, rt0.c2)) AND ((x'55dd', v0.c0, rt1.c2)))))!=(('SG*)'))), (((((0.3257423046614579)OR(rt1.c0)))OR(rt0.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (x'')))GLOB((rt0.c4 IN (rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CHAR(rt0.c6))>=((('[') NOT BETWEEN (rt0.c2) AND (NULL)))) INNER JOIN rt0 ON rt1.c2 FULL OUTER JOIN t1 ON IFNULL(CASE rt0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c0 THEN t1.c0 END, x'' COLLATE NOCASE) ORDER BY ((((((v0.c1, rt1.c1, v0.c2)) NOT BETWEEN ((rt0.c1, t1.c2, rt0.c2)) AND ((x'55dd', v0.c0, rt1.c2)))))<>(('SG*)'))), (((((0.3257423046614579)OR(rt1.c0)))OR(rt0.c4)) IN ())  NULLS FIRST);
SELECT * FROM v0 INNER JOIN rt1 ON ((CHAR(rt0.c6))>=((('[') NOT BETWEEN (rt0.c2) AND (NULL)))) INNER JOIN rt0 ON rt1.c2 FULL OUTER JOIN t1 ON IFNULL(CASE rt0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c0 THEN t1.c0 END, x'' COLLATE NOCASE) WHERE ((((- (x'')))GLOB((rt0.c4 IN (rt0.c0))))) ORDER BY ((((((v0.c1, rt1.c1, v0.c2)) NOT BETWEEN ((rt0.c1, t1.c2, rt0.c2)) AND ((x'55dd', v0.c0, rt1.c2)))))!=(('SG*)'))), (((((0.3257423046614579)OR(rt1.c0)))OR(rt0.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (x'')))GLOB((rt0.c4 IN (rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ((CHAR(rt0.c6))>=((('[') NOT BETWEEN (rt0.c2) AND (NULL)))) INNER JOIN rt0 ON rt1.c2 FULL OUTER JOIN t1 ON IFNULL(CASE rt0.c3  WHEN rt1.c0 THEN rt1.c0 WHEN v0.c2 THEN rt0.c0 WHEN rt1.c0 THEN t1.c0 END, x'' COLLATE NOCASE) ORDER BY ((((((v0.c1, rt1.c1, v0.c2)) NOT BETWEEN ((rt0.c1, t1.c2, rt0.c2)) AND ((x'55dd', v0.c0, rt1.c2)))))<>(('SG*)'))), (((((0.3257423046614579)OR(rt1.c0)))OR(rt0.c4)) IN ())  NULLS FIRST);
SELECT * FROM t1, rt1, rt0, v0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(json_array_length(rt1.c1))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE NOCASE)AND(json_array_length(rt1.c1))))AND(x''))) IS TRUE)  as count FROM t1, rt1, rt0, v0);
SELECT * FROM t1, rt1, rt0, v0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(json_array_length(rt1.c1))))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE NOCASE)AND(json_array_length(rt1.c1))))AND(x''))) IS TRUE)  as count FROM t1, rt1, rt0, v0);
SELECT * FROM t1, rt1, rt0, v0 WHERE (((((rt1.c0 COLLATE NOCASE)AND(json_array_length(rt1.c1))))AND(x'')));
SELECT ALL * FROM v0 WHERE (((((v0.c1)>(v0.c1))) IS TRUE)) ORDER BY ((v0.c1 COLLATE NOCASE)<=('')) DESC, (NOT (((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)>(v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE)<=('')) DESC, (NOT (((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE (((((v0.c1)>(v0.c1))) IS TRUE)) ORDER BY ((v0.c1 COLLATE NOCASE)<=('')) DESC, (NOT (((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)>(v0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1 COLLATE NOCASE)<=('')) DESC, (NOT (((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)))));
SELECT ALL * FROM v0 WHERE (((((v0.c1)>(v0.c1))) IS TRUE)) ORDER BY ((v0.c1 COLLATE NOCASE)<=('')) DESC, (NOT (((((((((v0.c1)OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2))));
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE (((((CASE t1.c2  WHEN t1.c4 THEN rt1.c1 END)AND(CAST(0.13644962308999553 AS BLOB))))AND(((((rt0.c2)AND(rt0.c5)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c2  WHEN t1.c4 THEN rt1.c1 END)AND(CAST(0.13644962308999553 AS BLOB))))AND(((((rt0.c2)AND(rt0.c5)))OR(t1.c1))))) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE (((((CASE t1.c2  WHEN t1.c4 THEN rt1.c1 END)AND(CAST(0.13644962308999553 AS BLOB))))AND(((((rt0.c2)AND(rt0.c5)))OR(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c2  WHEN t1.c4 THEN rt1.c1 END)AND(CAST(0.13644962308999553 AS BLOB))))AND(((((rt0.c2)AND(rt0.c5)))OR(t1.c1))))) IS TRUE)  as count FROM t1, rt1, v0, rt0);
SELECT COUNT(*) FROM t1, rt1, v0, rt0 WHERE (((((CASE t1.c2  WHEN t1.c4 THEN rt1.c1 END)AND(CAST(0.13644962308999553 AS BLOB))))AND(((((rt0.c2)AND(rt0.c5)))OR(t1.c1)))));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0)AND(t1.c3)))AND(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(t1.c3)))AND(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0)AND(t1.c3)))AND(NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(t1.c3)))AND(NULL)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0)AND(t1.c3)))AND(NULL)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c1) ORDER BY ((t1.c12)IS NOT(rt0.c2)) COLLATE NOCASE, ((((((((t1.c0 COLLATE RTRIM)AND((rt0.c6 IN (t1.c3)))))OR((+ (rt0.c4)))))OR(((rt0.c4) BETWEEN (t1.c3) AND (rt0.c0)))))AND(((rt0.c6)AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY ((t1.c12)IS NOT(rt0.c2)) COLLATE NOCASE, ((((((((t1.c0 COLLATE RTRIM)AND((rt0.c6 IN (t1.c3)))))OR((+ (rt0.c4)))))OR(((rt0.c4) BETWEEN (t1.c3) AND (rt0.c0)))))AND(((rt0.c6)AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c1) ORDER BY ((t1.c12)IS NOT(rt0.c2)) COLLATE NOCASE, ((((((((t1.c0 COLLATE RTRIM)AND((rt0.c6 IN (t1.c3)))))OR((+ (rt0.c4)))))OR(((rt0.c4) BETWEEN (t1.c3) AND (rt0.c0)))))AND(((rt0.c6)AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM rt0, t1 ORDER BY ((t1.c12)IS NOT(rt0.c2)) COLLATE NOCASE, ((((((((t1.c0 COLLATE RTRIM)AND((rt0.c6 IN (t1.c3)))))OR((+ (rt0.c4)))))OR(((rt0.c4) BETWEEN (t1.c3) AND (rt0.c0)))))AND(((rt0.c6)AND(rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c1) ORDER BY ((t1.c12)IS NOT(rt0.c2)) COLLATE NOCASE, ((((((((t1.c0 COLLATE RTRIM)AND((rt0.c6 IN (t1.c3)))))OR((+ (rt0.c4)))))OR(((rt0.c4) BETWEEN (t1.c3) AND (rt0.c0)))))AND(((rt0.c6)AND(rt0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE ((+ ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC, ((((v0.c0)OR(CAST(-5.67053955E8 AS BLOB))))AND(((v0.c1)|(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC, ((((v0.c0)OR(CAST(-5.67053955E8 AS BLOB))))AND(((v0.c1)|(v0.c2)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC, ((((v0.c0)OR(CAST(-5.67053955E8 AS BLOB))))AND(((v0.c1)|(v0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC, ((((v0.c0)OR(CAST(-5.67053955E8 AS BLOB))))AND(((v0.c1)|(v0.c2)))) ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((+ ((((v0.c2)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY (- (v0.c1 COLLATE RTRIM)) DESC, ((((v0.c0)OR(CAST(-5.67053955E8 AS BLOB))))AND(((v0.c1)|(v0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((1.247705875E9)AND(t1.c12)))OR(t1.c0)))OR(t1.c2)))AND(t1.c3)))IS(((t1.c4)>(t1.c12))))) ORDER BY ((t1.c4 IN (t1.c12)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((1.247705875E9)AND(t1.c12)))OR(t1.c0)))OR(t1.c2)))AND(t1.c3)))IS(((t1.c4)>(t1.c12))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c4 IN (t1.c12)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((1.247705875E9)AND(t1.c12)))OR(t1.c0)))OR(t1.c2)))AND(t1.c3)))IS(((t1.c4)>(t1.c12))))) ORDER BY ((t1.c4 IN (t1.c12)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((((((1.247705875E9)AND(t1.c12)))OR(t1.c0)))OR(t1.c2)))AND(t1.c3)))IS(((t1.c4)>(t1.c12))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c4 IN (t1.c12)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((1.247705875E9)AND(t1.c12)))OR(t1.c0)))OR(t1.c2)))AND(t1.c3)))IS(((t1.c4)>(t1.c12))))) ORDER BY ((t1.c4 IN (t1.c12)) IN ());
SELECT ALL * FROM rt0, t1 NATURAL JOIN rt1 WHERE ((~ ('k5gg\nn*o' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ ('k5gg\nn*o' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, t1 NATURAL JOIN rt1 WHERE ((~ ('k5gg\nn*o' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((~ ('k5gg\nn*o' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN rt1);
SELECT ALL * FROM rt0, t1 NATURAL JOIN rt1 WHERE ((~ ('k5gg\nn*o' COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1, v0 WHERE (0.7613027705565205) ORDER BY ((v0.c1)GLOB(rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((0.7613027705565205) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c1)GLOB(rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, v0 WHERE (0.7613027705565205) ORDER BY ((v0.c1)GLOB(rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((0.7613027705565205) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c1)GLOB(rt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, v0 WHERE (0.7613027705565205) ORDER BY ((v0.c1)GLOB(rt1.c0)) COLLATE BINARY;
SELECT ALL * FROM t1, rt1 WHERE (x'') ORDER BY ((((((x'')OR(t1.c12)))OR(rt1.c0)))IS((((t1.c1))<((t1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((x'')OR(t1.c12)))OR(rt1.c0)))IS((((t1.c1))<((t1.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE (x'') ORDER BY ((((((x'')OR(t1.c12)))OR(rt1.c0)))IS((((t1.c1))<((t1.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt1 ORDER BY ((((((x'')OR(t1.c12)))OR(rt1.c0)))IS((((t1.c1))<((t1.c2))))) DESC  NULLS LAST);
SELECT ALL * FROM t1, rt1 WHERE (x'') ORDER BY ((((((x'')OR(t1.c12)))OR(rt1.c0)))IS((((t1.c1))<((t1.c2))))) DESC  NULLS LAST;
SELECT ALL * FROM rt1, t1 LEFT OUTER JOIN v0 ON (NOT (((rt1.c1)>>(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c5)))) WHERE ((v0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN v0 ON (NOT (((rt1.c1)>>(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c5)))));
SELECT ALL * FROM rt1, t1 LEFT OUTER JOIN v0 ON (NOT (((rt1.c1)>>(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c5)))) WHERE ((v0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN v0 ON (NOT (((rt1.c1)>>(rt0.c4)))) RIGHT OUTER JOIN rt0 ON (~ (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c5)))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((CASE t1.c0  WHEN t1.c3 THEN t1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN t1.c2 ELSE t1.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (t1.c1))) AND (((t1.c4)|(t1.c1)))) INNER JOIN v0 ON x'0448' COLLATE RTRIM WHERE ((((t1.c1 COLLATE RTRIM))!=((((t1.c12) BETWEEN (v0.c1) AND (t1.c12)))))) ORDER BY ((((((((((((v0.c0)AND(t1.c4)))AND('0.06434397334483466')))AND(t1.c2 COLLATE NOCASE)))AND(LIKELY(DISTINCT t1.c3))))AND(CHAR(rt1.c0))))AND(((v0.c0)%(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 COLLATE RTRIM))<>((((t1.c12) BETWEEN (v0.c1) AND (t1.c12)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((CASE t1.c0  WHEN t1.c3 THEN t1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN t1.c2 ELSE t1.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (t1.c1))) AND (((t1.c4)|(t1.c1)))) INNER JOIN v0 ON x'0448' COLLATE RTRIM ORDER BY ((((((((((((v0.c0)AND(t1.c4)))AND('0.06434397334483466')))AND(t1.c2 COLLATE NOCASE)))AND(LIKELY(DISTINCT t1.c3))))AND(CHAR(rt1.c0))))AND(((v0.c0)%(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((CASE t1.c0  WHEN t1.c3 THEN t1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN t1.c2 ELSE t1.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (t1.c1))) AND (((t1.c4)|(t1.c1)))) INNER JOIN v0 ON x'0448' COLLATE RTRIM WHERE ((((t1.c1 COLLATE RTRIM))!=((((t1.c12) BETWEEN (v0.c1) AND (t1.c12)))))) ORDER BY ((((((((((((v0.c0)AND(t1.c4)))AND('0.06434397334483466')))AND(t1.c2 COLLATE NOCASE)))AND(LIKELY(DISTINCT t1.c3))))AND(CHAR(rt1.c0))))AND(((v0.c0)%(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c1 COLLATE RTRIM))<>((((t1.c12) BETWEEN (v0.c1) AND (t1.c12)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((CASE t1.c0  WHEN t1.c3 THEN t1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN t1.c2 ELSE t1.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (t1.c1))) AND (((t1.c4)|(t1.c1)))) INNER JOIN v0 ON x'0448' COLLATE RTRIM ORDER BY ((((((((((((v0.c0)AND(t1.c4)))AND('0.06434397334483466')))AND(t1.c2 COLLATE NOCASE)))AND(LIKELY(DISTINCT t1.c3))))AND(CHAR(rt1.c0))))AND(((v0.c0)%(NULL))))  NULLS LAST);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON ((CASE t1.c0  WHEN t1.c3 THEN t1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN v0.c1 THEN t1.c2 ELSE t1.c1 END) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c2) AND (t1.c1))) AND (((t1.c4)|(t1.c1)))) INNER JOIN v0 ON x'0448' COLLATE RTRIM WHERE ((((t1.c1 COLLATE RTRIM))!=((((t1.c12) BETWEEN (v0.c1) AND (t1.c12)))))) ORDER BY ((((((((((((v0.c0)AND(t1.c4)))AND('0.06434397334483466')))AND(t1.c2 COLLATE NOCASE)))AND(LIKELY(DISTINCT t1.c3))))AND(CHAR(rt1.c0))))AND(((v0.c0)%(NULL))))  NULLS LAST;
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(t1.c3 AS BLOB))<=((((rt0.c5, t1.c1, t1.c12, '', rt0.c3))>=((rt1.c2, rt0.c6, t1.c0, t1.c2, rt0.c2)))))) ORDER BY ((CAST('' AS TEXT)) BETWEEN (rt1.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0x71f26008)))))  NULLS FIRST, ((((0x7730bb6b)AND(((rt0.c4)AND(rt0.c1)))))AND(CAST(rt0.c4 AS TEXT))), ((rt1.c2 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS BLOB))<=((((rt0.c5, t1.c1, t1.c12, '', rt0.c3))>=((rt1.c2, rt0.c6, t1.c0, t1.c2, rt0.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((CAST('' AS TEXT)) BETWEEN (rt1.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0x71f26008)))))  NULLS FIRST, ((((0X7730bb6b)AND(((rt0.c4)AND(rt0.c1)))))AND(CAST(rt0.c4 AS TEXT))), ((rt1.c2 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(t1.c3 AS BLOB))<=((((rt0.c5, t1.c1, t1.c12, '', rt0.c3))>=((rt1.c2, rt0.c6, t1.c0, t1.c2, rt0.c2)))))) ORDER BY ((CAST('' AS TEXT)) BETWEEN (rt1.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0x71f26008)))))  NULLS FIRST, ((((0x7730bb6b)AND(((rt0.c4)AND(rt0.c1)))))AND(CAST(rt0.c4 AS TEXT))), ((rt1.c2 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS BLOB))<=((((rt0.c5, t1.c1, t1.c12, '', rt0.c3))>=((rt1.c2, rt0.c6, t1.c0, t1.c2, rt0.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((CAST('' AS TEXT)) BETWEEN (rt1.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0x71f26008)))))  NULLS FIRST, ((((0X7730bb6b)AND(((rt0.c4)AND(rt0.c1)))))AND(CAST(rt0.c4 AS TEXT))), ((rt1.c2 COLLATE NOCASE) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(t1.c3 AS BLOB))<=((((rt0.c5, t1.c1, t1.c12, '', rt0.c3))>=((rt1.c2, rt0.c6, t1.c0, t1.c2, rt0.c2)))))) ORDER BY ((CAST('' AS TEXT)) BETWEEN (rt1.c1) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((0x71f26008)))))  NULLS FIRST, ((((0x7730bb6b)AND(((rt0.c4)AND(rt0.c1)))))AND(CAST(rt0.c4 AS TEXT))), ((rt1.c2 COLLATE NOCASE) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c2) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c2) ORDER BY NULL COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY NULL COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (t1.c2) ORDER BY NULL COLLATE NOCASE DESC;
SELECT COUNT(*) FROM v0, t1, rt1 WHERE (v0.c0) ORDER BY (- (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t1, rt1 ORDER BY (- (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, t1, rt1 WHERE (v0.c0) ORDER BY (- (v0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t1, rt1 ORDER BY (- (v0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, t1, rt1 WHERE (v0.c0) ORDER BY (- (v0.c0 COLLATE NOCASE));
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL)) ORDER BY (((x'b930535e')) NOT BETWEEN ((((v0.c0)+(v0.c0)))) AND ((CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((x'b930535e')) NOT BETWEEN ((((v0.c0)+(v0.c0)))) AND ((CAST(v0.c1 AS NUMERIC)))));
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL)) ORDER BY (((x'b930535e')) NOT BETWEEN ((((v0.c0)+(v0.c0)))) AND ((CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (((x'b930535e')) NOT BETWEEN ((((v0.c0)+(v0.c0)))) AND ((CAST(v0.c1 AS NUMERIC)))));
SELECT * FROM v0 WHERE (((v0.c0) NOT NULL)) ORDER BY (((x'b930535e')) NOT BETWEEN ((((v0.c0)+(v0.c0)))) AND ((CAST(v0.c1 AS NUMERIC))));
SELECT * FROM v0, t1, rt1 INDEXED BY i82, rt0 WHERE (NULLIF(DISTINCT (- (v0.c2)), (t1.c0 IN ()))) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) THEN (((rt0.c1)) BETWEEN ((v0.c2)) AND ((t1.c0))) WHEN ((t1.c3)>=(rt1.c1)) THEN rt0.c5 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (v0.c2)), (t1.c0 IN ()))) IS TRUE)  as count FROM v0, t1, rt1 INDEXED BY i82, rt0 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) THEN (((rt0.c1)) BETWEEN ((v0.c2)) AND ((t1.c0))) WHEN ((t1.c3)>=(rt1.c1)) THEN rt0.c5 END ASC);
SELECT * FROM v0, t1, rt1 INDEXED BY i82, rt0 WHERE (NULLIF(DISTINCT (- (v0.c2)), (t1.c0 IN ()))) ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) THEN (((rt0.c1)) BETWEEN ((v0.c2)) AND ((t1.c0))) WHEN ((t1.c3)>=(rt1.c1)) THEN rt0.c5 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (v0.c2)), (t1.c0 IN ()))) IS TRUE)  as count FROM v0, t1, rt1 INDEXED BY i82, rt0 ORDER BY CASE WHEN rt1.c1 COLLATE NOCASE THEN NULL WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c1)) THEN (((rt0.c1)) BETWEEN ((v0.c2)) AND ((t1.c0))) WHEN ((t1.c3)>=(rt1.c1)) THEN rt0.c5 END ASC);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((+ (LIKELIHOOD(DISTINCT rt0.c3, 0.1462232795541677))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT rt0.c3, 0.1462232795541677)))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((+ (LIKELIHOOD(DISTINCT rt0.c3, 0.1462232795541677))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LIKELIHOOD(DISTINCT rt0.c3, 0.1462232795541677)))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE ((+ (LIKELIHOOD(DISTINCT rt0.c3, 0.1462232795541677))));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON TIME((v0.c2 IN (t1.c12)), LIKELY(4.60860869E8), ((v0.c2) IS FALSE), ((((t1.c1)OR(rt0.c2)))AND(rt1.c2)), rt1.c2) FULL OUTER JOIN v0 ON (~ (rt1.c2)) FULL OUTER JOIN rt1 ON (((t1.c0))>=(((rt0.c4 IN ())))) WHERE ((((rt0.c6, v0.c1, t1.c4)) NOT BETWEEN ((((rt1.c1)||(rt1.c0)), ((v0.c0)GLOB(t1.c2)), ((rt0.c6) NOT BETWEEN (t1.c2) AND (v0.c2)))) AND ((((rt0.c1) IS TRUE), t1.c1 COLLATE RTRIM, ((t1.c4) ISNULL))))) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(t1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c6, v0.c1, t1.c4)) NOT BETWEEN ((((rt1.c1)||(rt1.c0)), ((v0.c0)GLOB(t1.c2)), ((rt0.c6) NOT BETWEEN (t1.c2) AND (v0.c2)))) AND ((((rt0.c1) IS TRUE), t1.c1 COLLATE RTRIM, ((t1.c4) ISNULL))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON TIME((v0.c2 IN (t1.c12)), LIKELY(4.60860869E8), ((v0.c2) IS FALSE), ((((t1.c1)OR(rt0.c2)))AND(rt1.c2)), rt1.c2) FULL OUTER JOIN v0 ON (~ (rt1.c2)) FULL OUTER JOIN rt1 ON (((t1.c0))>=(((rt0.c4 IN ())))) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(t1.c2 COLLATE RTRIM)));
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON TIME((v0.c2 IN (t1.c12)), LIKELY(4.60860869E8), ((v0.c2) IS FALSE), ((((t1.c1)OR(rt0.c2)))AND(rt1.c2)), rt1.c2) FULL OUTER JOIN v0 ON (~ (rt1.c2)) FULL OUTER JOIN rt1 ON (((t1.c0))>=(((rt0.c4 IN ())))) WHERE ((((rt0.c6, v0.c1, t1.c4)) NOT BETWEEN ((((rt1.c1)||(rt1.c0)), ((v0.c0)GLOB(t1.c2)), ((rt0.c6) NOT BETWEEN (t1.c2) AND (v0.c2)))) AND ((((rt0.c1) IS TRUE), t1.c1 COLLATE RTRIM, ((t1.c4) ISNULL))))) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(t1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c6, v0.c1, t1.c4)) NOT BETWEEN ((((rt1.c1)||(rt1.c0)), ((v0.c0)GLOB(t1.c2)), ((rt0.c6) NOT BETWEEN (t1.c2) AND (v0.c2)))) AND ((((rt0.c1) IS TRUE), t1.c1 COLLATE RTRIM, ((t1.c4) ISNULL))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON TIME((v0.c2 IN (t1.c12)), LIKELY(4.60860869E8), ((v0.c2) IS FALSE), ((((t1.c1)OR(rt0.c2)))AND(rt1.c2)), rt1.c2) FULL OUTER JOIN v0 ON (~ (rt1.c2)) FULL OUTER JOIN rt1 ON (((t1.c0))>=(((rt0.c4 IN ())))) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(t1.c2 COLLATE RTRIM)));
SELECT ALL * FROM v0 WHERE ('\E哧9UO8O̸') ORDER BY ((CAST(v0.c1 AS NUMERIC))+(v0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\E哧9UO8O̸') IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS NUMERIC))+(v0.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('\E哧9UO8O̸') ORDER BY ((CAST(v0.c1 AS NUMERIC))+(v0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('\E哧9UO8O̸') IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c1 AS NUMERIC))+(v0.c1 COLLATE BINARY)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ('\E哧9UO8O̸') ORDER BY ((CAST(v0.c1 AS NUMERIC))+(v0.c1 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1, v0, t1 WHERE ((((rt0.c2 COLLATE NOCASE))>((((rt0.c2)>(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>((((rt0.c2)>(v0.c2)))))) IS TRUE)  as count FROM rt0, rt1, v0, t1);
SELECT ALL * FROM rt0, rt1, v0, t1 WHERE ((((rt0.c2 COLLATE NOCASE))>((((rt0.c2)>(v0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>((((rt0.c2)>(v0.c2)))))) IS TRUE)  as count FROM rt0, rt1, v0, t1);
SELECT ALL * FROM rt0, rt1, v0, t1 WHERE ((((rt0.c2 COLLATE NOCASE))>((((rt0.c2)>(v0.c2))))));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c5)%(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))AND((t1.c0 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)%(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))AND((t1.c0 IN (rt0.c4))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c5)%(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))AND((t1.c0 IN (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c5)%(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))AND((t1.c0 IN (rt0.c4))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c5)%(rt0.c4)))AND(rt0.c2 COLLATE NOCASE)))AND((t1.c0 IN (rt0.c4)))));
SELECT ALL * FROM rt0, rt1 INDEXED BY i10, v0, t1 WHERE (t1.c0) ORDER BY v0.c2  NULLS FIRST, (+ ((v0.c1 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i10, v0, t1 ORDER BY v0.c2  NULLS FIRST, (+ ((v0.c1 IN (rt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 INDEXED BY i10, v0, t1 WHERE (t1.c0) ORDER BY v0.c2  NULLS FIRST, (+ ((v0.c1 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, rt1 INDEXED BY i10, v0, t1 ORDER BY v0.c2  NULLS FIRST, (+ ((v0.c1 IN (rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c1)IS NOT(t1.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0)) BETWEEN ((t1.c4)) AND ((v0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)IS NOT(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY (((((v0.c0)) BETWEEN ((t1.c4)) AND ((v0.c1)))) IS TRUE) DESC);
SELECT COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c1)IS NOT(t1.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0)) BETWEEN ((t1.c4)) AND ((v0.c1)))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c1)IS NOT(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY (((((v0.c0)) BETWEEN ((t1.c4)) AND ((v0.c1)))) IS TRUE) DESC);
SELECT COUNT(*) FROM t1, rt1, v0 WHERE (((t1.c1)IS NOT(t1.c0)) COLLATE NOCASE) ORDER BY (((((v0.c0)) BETWEEN ((t1.c4)) AND ((v0.c1)))) IS TRUE) DESC;
SELECT ALL * FROM rt1, t1 WHERE (LIKELY((((t1.c12))<=((t1.c3))))) ORDER BY (((((rt1.c1))=((t1.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((t1.c12))<=((t1.c3))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((rt1.c1))=((t1.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1, t1 WHERE (LIKELY((((t1.c12))<=((t1.c3))))) ORDER BY (((((rt1.c1))=((t1.c0)))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((t1.c12))<=((t1.c3))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((rt1.c1))=((t1.c0)))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1, t1 WHERE (LIKELY((((t1.c12))<=((t1.c3))))) ORDER BY (((((rt1.c1))=((t1.c0)))) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE ((+ ((rt0.c0 IN ()))));
SELECT * FROM t1, v0, rt1 WHERE ((NOT (((t1.c2) IS TRUE)))) ORDER BY ((((v0.c1) NOTNULL))<>(LTRIM(x'8997fdbb', t1.c3))) DESC, (NOT (((t1.c1) BETWEEN (t1.c4) AND (t1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2) IS TRUE)))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY ((((v0.c1) NOTNULL))<>(LTRIM(x'8997fdbb', t1.c3))) DESC, (NOT (((t1.c1) BETWEEN (t1.c4) AND (t1.c3)))) DESC);
SELECT * FROM t1, v0, rt1 WHERE ((NOT (((t1.c2) IS TRUE)))) ORDER BY ((((v0.c1) NOTNULL))<>(LTRIM(x'8997fdbb', t1.c3))) DESC, (NOT (((t1.c1) BETWEEN (t1.c4) AND (t1.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2) IS TRUE)))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY ((((v0.c1) NOTNULL))<>(LTRIM(x'8997fdbb', t1.c3))) DESC, (NOT (((t1.c1) BETWEEN (t1.c4) AND (t1.c3)))) DESC);
SELECT * FROM t1, v0, rt1 WHERE ((NOT (((t1.c2) IS TRUE)))) ORDER BY ((((v0.c1) NOTNULL))<>(LTRIM(x'8997fdbb', t1.c3))) DESC, (NOT (((t1.c1) BETWEEN (t1.c4) AND (t1.c3)))) DESC;
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c1)AND(rt1.c1)))OR(t1.c0)))<(-2141821905)) WHERE (CAST((((rt1.c1, t1.c4, t1.c1))>=((x'', t1.c3, t1.c2))) AS REAL)) ORDER BY ((((rt1.c2) BETWEEN (t1.c12) AND (t1.c2)))GLOB(UPPER(0.5814294196928976))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1, t1.c4, t1.c1))>=((x'', t1.c3, t1.c2))) AS REAL)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c1)AND(rt1.c1)))OR(t1.c0)))<(-2141821905)) ORDER BY ((((rt1.c2) BETWEEN (t1.c12) AND (t1.c2)))GLOB(UPPER(0.5814294196928976))) DESC);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c1)AND(rt1.c1)))OR(t1.c0)))<(-2141821905)) WHERE (CAST((((rt1.c1, t1.c4, t1.c1))>=((x'', t1.c3, t1.c2))) AS REAL)) ORDER BY ((((rt1.c2) BETWEEN (t1.c12) AND (t1.c2)))GLOB(UPPER(0.5814294196928976))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1, t1.c4, t1.c1))>=((x'', t1.c3, t1.c2))) AS REAL)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c1)AND(rt1.c1)))OR(t1.c0)))<(-2141821905)) ORDER BY ((((rt1.c2) BETWEEN (t1.c12) AND (t1.c2)))GLOB(UPPER(0.5814294196928976))) DESC);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt1 ON ((((((t1.c1)AND(rt1.c1)))OR(t1.c0)))<(-2141821905)) WHERE (CAST((((rt1.c1, t1.c4, t1.c1))>=((x'', t1.c3, t1.c2))) AS REAL)) ORDER BY ((((rt1.c2) BETWEEN (t1.c12) AND (t1.c2)))GLOB(UPPER(0.5814294196928976))) DESC;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt0.c1)*(rt0.c6)))))AND((((rt0.c0))>((rt0.c2)))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC) DESC, (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt0.c1)*(rt0.c6)))))AND((((rt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC) DESC, (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt0.c1)*(rt0.c6)))))AND((((rt0.c0))>((rt0.c2)))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC) DESC, (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt0.c1)*(rt0.c6)))))AND((((rt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC) DESC, (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))OR(((rt0.c1)*(rt0.c6)))))AND((((rt0.c0))>((rt0.c2)))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC) DESC, (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))  NULLS FIRST;
SELECT * FROM rt1, t1, rt0 WHERE (CAST(((rt0.c0)AND(t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)AND(t1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST(((rt0.c0)AND(t1.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)AND(t1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST(((rt0.c0)AND(t1.c2)) AS INTEGER));
SELECT COUNT(*) FROM t1 WHERE (CASE (0.8601624370258495 IN ())  WHEN CAST(t1.c3 AS TEXT) THEN (t1.c12 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (0.8601624370258495 IN ())  WHEN CAST(t1.c3 AS TEXT) THEN (t1.c12 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (0.8601624370258495 IN ())  WHEN CAST(t1.c3 AS TEXT) THEN (t1.c12 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (0.8601624370258495 IN ())  WHEN CAST(t1.c3 AS TEXT) THEN (t1.c12 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE (0.8601624370258495 IN ())  WHEN CAST(t1.c3 AS TEXT) THEN (t1.c12 IN ()) END);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY '');
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY '');
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY '';
SELECT ALL * FROM rt0, t1, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t1.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c2) BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY CASE ((v0.c2)/(rt0.c3))  WHEN COALESCE('', rt0.c1) THEN t1.c12 WHEN ((t1.c12) IS TRUE) THEN (+ (rt0.c1)) WHEN ((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((t1.c0)-(rt0.c5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN t1.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c2) BETWEEN (rt0.c5) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CASE ((v0.c2)/(rt0.c3))  WHEN COALESCE('', rt0.c1) THEN t1.c12 WHEN ((t1.c12) IS TRUE) THEN (+ (rt0.c1)) WHEN ((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((t1.c0)-(rt0.c5)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t1.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c2) BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY CASE ((v0.c2)/(rt0.c3))  WHEN COALESCE('', rt0.c1) THEN t1.c12 WHEN ((t1.c12) IS TRUE) THEN (+ (rt0.c1)) WHEN ((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((t1.c0)-(rt0.c5)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c1 THEN t1.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c2) BETWEEN (rt0.c5) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CASE ((v0.c2)/(rt0.c3))  WHEN COALESCE('', rt0.c1) THEN t1.c12 WHEN ((t1.c12) IS TRUE) THEN (+ (rt0.c1)) WHEN ((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((t1.c0)-(rt0.c5)) END DESC  NULLS LAST);
SELECT ALL * FROM rt0, t1, v0 WHERE (((CASE v0.c0  WHEN v0.c1 THEN t1.c1 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((t1.c2) BETWEEN (rt0.c5) AND (rt0.c0))))) ORDER BY CASE ((v0.c2)/(rt0.c3))  WHEN COALESCE('', rt0.c1) THEN t1.c12 WHEN ((t1.c12) IS TRUE) THEN (+ (rt0.c1)) WHEN ((t1.c2) BETWEEN (t1.c0) AND (rt0.c0)) THEN ((t1.c0)-(rt0.c5)) END DESC  NULLS LAST;
SELECT * FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t1, v0 NOT INDEXED);
SELECT * FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t1, v0 NOT INDEXED);
SELECT * FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 END IN (CAST(v0.c1 AS REAL))) WHERE ((((((v0.c2 IN ()))OR((rt0.c6 IN ()))))OR(rt0.c0 COLLATE BINARY))) ORDER BY (((+ (rt0.c0)))<((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))OR((rt0.c6 IN ()))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 END IN (CAST(v0.c1 AS REAL))) ORDER BY (((+ (rt0.c0)))<((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 END IN (CAST(v0.c1 AS REAL))) WHERE ((((((v0.c2 IN ()))OR((rt0.c6 IN ()))))OR(rt0.c0 COLLATE BINARY))) ORDER BY (((+ (rt0.c0)))<((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c2 IN ()))OR((rt0.c6 IN ()))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 END IN (CAST(v0.c1 AS REAL))) ORDER BY (((+ (rt0.c0)))<((rt0.c1 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN v0 ON (CASE v0.c1  WHEN rt0.c0 THEN rt0.c3 END IN (CAST(v0.c1 AS REAL))) WHERE ((((((v0.c2 IN ()))OR((rt0.c6 IN ()))))OR(rt0.c0 COLLATE BINARY))) ORDER BY (((+ (rt0.c0)))<((rt0.c1 IN ())))  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (LOWER(((((rt0.c5)OR(rt1.c2)))OR(rt0.c5)))) ORDER BY (((NULL, rt1.c1, rt0.c6)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (0x77673917 IN ()), NULL)) AND ((CAST(rt1.c2 AS REAL), x'', (rt0.c4 IN ())))) DESC, ((0.9000358785404657)<<(rt0.c3)) COLLATE NOCASE  NULLS LAST, 0.9082629038836235 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((rt0.c5)OR(rt1.c2)))OR(rt0.c5)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NULL, rt1.c1, rt0.c6)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (0X77673917 IN ()), NULL)) AND ((CAST(rt1.c2 AS REAL), x'', (rt0.c4 IN ())))) DESC, ((0.9000358785404657)<<(rt0.c3)) COLLATE NOCASE  NULLS LAST, 0.9082629038836235 DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (LOWER(((((rt0.c5)OR(rt1.c2)))OR(rt0.c5)))) ORDER BY (((NULL, rt1.c1, rt0.c6)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (0x77673917 IN ()), NULL)) AND ((CAST(rt1.c2 AS REAL), x'', (rt0.c4 IN ())))) DESC, ((0.9000358785404657)<<(rt0.c3)) COLLATE NOCASE  NULLS LAST, 0.9082629038836235 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((rt0.c5)OR(rt1.c2)))OR(rt0.c5)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((NULL, rt1.c1, rt0.c6)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (0X77673917 IN ()), NULL)) AND ((CAST(rt1.c2 AS REAL), x'', (rt0.c4 IN ())))) DESC, ((0.9000358785404657)<<(rt0.c3)) COLLATE NOCASE  NULLS LAST, 0.9082629038836235 DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (LOWER(((((rt0.c5)OR(rt1.c2)))OR(rt0.c5)))) ORDER BY (((NULL, rt1.c1, rt0.c6)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM, (0x77673917 IN ()), NULL)) AND ((CAST(rt1.c2 AS REAL), x'', (rt0.c4 IN ())))) DESC, ((0.9000358785404657)<<(rt0.c3)) COLLATE NOCASE  NULLS LAST, 0.9082629038836235 DESC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((CASE t1.c4  WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c6 THEN '\vj?' WHEN t1.c3 THEN t1.c4 WHEN rt0.c4 THEN rt0.c6 WHEN x'' THEN v0.c2 END)OR(t1.c0 COLLATE BINARY)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c4  WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c6 THEN '\vj?' WHEN t1.c3 THEN t1.c4 WHEN rt0.c4 THEN rt0.c6 WHEN x'' THEN v0.c2 END)OR(t1.c0 COLLATE BINARY)))AND(rt1.c0))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((CASE t1.c4  WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c6 THEN '\vj?' WHEN t1.c3 THEN t1.c4 WHEN rt0.c4 THEN rt0.c6 WHEN x'' THEN v0.c2 END)OR(t1.c0 COLLATE BINARY)))AND(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c4  WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c6 THEN '\vj?' WHEN t1.c3 THEN t1.c4 WHEN rt0.c4 THEN rt0.c6 WHEN x'' THEN v0.c2 END)OR(t1.c0 COLLATE BINARY)))AND(rt1.c0))) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT ALL * FROM t1, rt0, rt1, v0 WHERE (((((CASE t1.c4  WHEN rt0.c5 THEN rt1.c2 WHEN rt0.c6 THEN '\vj?' WHEN t1.c3 THEN t1.c4 WHEN rt0.c4 THEN rt0.c6 WHEN x'' THEN v0.c2 END)OR(t1.c0 COLLATE BINARY)))AND(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((rt1.c1 COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((NOT (((v0.c2) IS TRUE))));
SELECT * FROM rt1, v0 WHERE (CAST(((v0.c1)>(rt1.c2)) AS REAL)) ORDER BY ((TYPEOF(rt1.c1))<=(((rt1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)>(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((TYPEOF(rt1.c1))<=(((rt1.c1) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (CAST(((v0.c1)>(rt1.c2)) AS REAL)) ORDER BY ((TYPEOF(rt1.c1))<=(((rt1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)>(rt1.c2)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY ((TYPEOF(rt1.c1))<=(((rt1.c1) IS FALSE))) DESC  NULLS LAST);
SELECT * FROM rt1, v0 WHERE (CAST(((v0.c1)>(rt1.c2)) AS REAL)) ORDER BY ((TYPEOF(rt1.c1))<=(((rt1.c1) IS FALSE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c5) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c5) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c5) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c5) ISNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c5) ISNULL));
SELECT * FROM v0 INDEXED BY i82 WHERE (CASE WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c0)) THEN CAST(v0.c1 AS BLOB) WHEN CAST(v0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END WHEN (v0.c1 IN ()) THEN (((v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c0))) WHEN '741451915' COLLATE NOCASE THEN ((v0.c2)LIKE(v0.c1)) WHEN json_extract(v0.c2, v0.c0) THEN (+ (v0.c0)) WHEN (((x'')) BETWEEN ((x'')) AND ((v0.c1))) THEN ((((v0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((x'c482')OR(v0.c2)) END) ORDER BY ((((v0.c2)<<('FL娌E9鿃bUW')))IS(((((((((v0.c0)OR(v0.c2)))OR(x'')))OR(v0.c0)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c0)) THEN CAST(v0.c1 AS BLOB) WHEN CAST(v0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END WHEN (v0.c1 IN ()) THEN (((v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c0))) WHEN '741451915' COLLATE NOCASE THEN ((v0.c2)LIKE(v0.c1)) WHEN json_extract(v0.c2, v0.c0) THEN (+ (v0.c0)) WHEN (((x'')) BETWEEN ((x'')) AND ((v0.c1))) THEN ((((v0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((x'c482')OR(v0.c2)) END) IS TRUE)  as count FROM v0 INDEXED BY i82 ORDER BY ((((v0.c2)<<('FL娌E9鿃bUW')))IS(((((((((v0.c0)OR(v0.c2)))OR(x'')))OR(v0.c0)))OR(v0.c2)))));
SELECT * FROM v0 INDEXED BY i82 WHERE (CASE WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c0)) THEN CAST(v0.c1 AS BLOB) WHEN CAST(v0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END WHEN (v0.c1 IN ()) THEN (((v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c0))) WHEN '741451915' COLLATE NOCASE THEN ((v0.c2)LIKE(v0.c1)) WHEN json_extract(v0.c2, v0.c0) THEN (+ (v0.c0)) WHEN (((x'')) BETWEEN ((x'')) AND ((v0.c1))) THEN ((((v0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((x'c482')OR(v0.c2)) END) ORDER BY ((((v0.c2)<<('FL娌E9鿃bUW')))IS(((((((((v0.c0)OR(v0.c2)))OR(x'')))OR(v0.c0)))OR(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((v0.c1)OR(v0.c0)))OR(v0.c0)) THEN CAST(v0.c1 AS BLOB) WHEN CAST(v0.c1 AS NUMERIC) THEN v0.c2 COLLATE BINARY WHEN CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE x'' END WHEN (v0.c1 IN ()) THEN (((v0.c1, v0.c0, v0.c1)) NOT BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, v0.c0, v0.c0))) WHEN '741451915' COLLATE NOCASE THEN ((v0.c2)LIKE(v0.c1)) WHEN json_extract(v0.c2, v0.c0) THEN (+ (v0.c0)) WHEN (((x'')) BETWEEN ((x'')) AND ((v0.c1))) THEN ((((v0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((x'c482')OR(v0.c2)) END) IS TRUE)  as count FROM v0 INDEXED BY i82 ORDER BY ((((v0.c2)<<('FL娌E9鿃bUW')))IS(((((((((v0.c0)OR(v0.c2)))OR(x'')))OR(v0.c0)))OR(v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1 COLLATE NOCASE)AND(CASE WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c1) NOT NULL)))) ORDER BY CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS FIRST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE NOCASE)AND(CASE WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS FIRST, v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1 COLLATE NOCASE)AND(CASE WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c1) NOT NULL)))) ORDER BY CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS FIRST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1 COLLATE NOCASE)AND(CASE WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS FIRST, v0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1 COLLATE NOCASE)AND(CASE WHEN v0.c1 THEN v0.c0 END)))OR(((v0.c1) NOT NULL)))) ORDER BY CASE v0.c0  WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c2 END COLLATE RTRIM  NULLS FIRST, v0.c0  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c0)IS NOT(rt1.c0)) AS TEXT)) ORDER BY ((rt1.c2) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c0))  NULLS FIRST, ((((rt1.c1) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS NOT(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c0))  NULLS FIRST, ((((rt1.c1) IS TRUE)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c0)IS NOT(rt1.c0)) AS TEXT)) ORDER BY ((rt1.c2) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c0))  NULLS FIRST, ((((rt1.c1) IS TRUE)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)IS NOT(rt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c0))  NULLS FIRST, ((((rt1.c1) IS TRUE)) IS TRUE) DESC);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c0)IS NOT(rt1.c0)) AS TEXT)) ORDER BY ((rt1.c2) BETWEEN (rt1.c0 COLLATE NOCASE) AND (rt1.c0))  NULLS FIRST, ((((rt1.c1) IS TRUE)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM rt1, t1, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0, v0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END) NOT BETWEEN (IFNULL(rt0.c0, rt0.c6)) AND (CAST(rt0.c5 AS BLOB))) WHERE ((((rt0.c0)+(rt0.c0)) IN ())) ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END) NOT BETWEEN (IFNULL(rt0.c0, rt0.c6)) AND (CAST(rt0.c5 AS BLOB))) ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END) NOT BETWEEN (IFNULL(rt0.c0, rt0.c6)) AND (CAST(rt0.c5 AS BLOB))) WHERE ((((rt0.c0)+(rt0.c0)) IN ())) ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)+(rt0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END) NOT BETWEEN (IFNULL(rt0.c0, rt0.c6)) AND (CAST(rt0.c5 AS BLOB))) ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 END) NOT BETWEEN (IFNULL(rt0.c0, rt0.c6)) AND (CAST(rt0.c5 AS BLOB))) WHERE ((((rt0.c0)+(rt0.c0)) IN ())) ORDER BY ((((((rt0.c2)AND(v0.c0)))AND(rt0.c1))) IS TRUE) ASC;
SELECT * FROM rt0, v0, t1 WHERE ((((rt0.c5)GLOB(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)GLOB(x'')) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE ((((rt0.c5)GLOB(x'')) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)GLOB(x'')) IN ())) IS TRUE)  as count FROM rt0 NOT INDEXED, v0, t1);
SELECT * FROM rt0, v0, t1 WHERE ((((rt0.c5)GLOB(x'')) IN ()));
SELECT * FROM rt0, v0 WHERE ((((('C1]fngx')/(rt0.c6)))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('C1]fngx')/(rt0.c6)))OR(((rt0.c4)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((('C1]fngx')/(rt0.c6)))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('C1]fngx')/(rt0.c6)))OR(((rt0.c4)GLOB(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((('C1]fngx')/(rt0.c6)))OR(((rt0.c4)GLOB(rt0.c2)))));
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) AS INTEGER)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) AS INTEGER)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) AS INTEGER)) ORDER BY (rt1.c2 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (x'' IN ()) FULL OUTER JOIN v0 ON ((NULLIF(v0.c1, rt0.c5))IS NOT(((NULL) ISNULL))) WHERE (((STRFTIME(t1.c2, t1.c3, v0.c0, rt0.c2, rt0.c0)) NOTNULL)) ORDER BY (((t1.c4, t1.c2, 0.621753885589577)) BETWEEN ((((rt0.c6)==(t1.c1)), ((rt0.c3)OR(t1.c1)), rt0.c1)) AND (('0.6961318560458079', (v0.c1 IN ()), (+ (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((STRFTIME(t1.c2, t1.c3, v0.c0, rt0.c2, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (x'' IN ()) FULL OUTER JOIN v0 ON ((NULLIF(v0.c1, rt0.c5))IS NOT(((NULL) ISNULL))) ORDER BY (((t1.c4, t1.c2, 0.621753885589577)) BETWEEN ((((rt0.c6)==(t1.c1)), ((rt0.c3)OR(t1.c1)), rt0.c1)) AND (('0.6961318560458079', (v0.c1 IN ()), (+ (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (x'' IN ()) FULL OUTER JOIN v0 ON ((NULLIF(v0.c1, rt0.c5))IS NOT(((NULL) ISNULL))) WHERE (((STRFTIME(t1.c2, t1.c3, v0.c0, rt0.c2, rt0.c0)) NOTNULL)) ORDER BY (((t1.c4, t1.c2, 0.621753885589577)) BETWEEN ((((rt0.c6)==(t1.c1)), ((rt0.c3)OR(t1.c1)), rt0.c1)) AND (('0.6961318560458079', (v0.c1 IN ()), (+ (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((STRFTIME(t1.c2, t1.c3, v0.c0, rt0.c2, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (x'' IN ()) FULL OUTER JOIN v0 ON ((NULLIF(v0.c1, rt0.c5))IS NOT(((NULL) ISNULL))) ORDER BY (((t1.c4, t1.c2, 0.621753885589577)) BETWEEN ((((rt0.c6)==(t1.c1)), ((rt0.c3)OR(t1.c1)), rt0.c1)) AND (('0.6961318560458079', (v0.c1 IN ()), (+ (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (x'' IN ()) FULL OUTER JOIN v0 ON ((NULLIF(v0.c1, rt0.c5))IS NOT(((NULL) ISNULL))) WHERE (((STRFTIME(t1.c2, t1.c3, v0.c0, rt0.c2, rt0.c0)) NOTNULL)) ORDER BY (((t1.c4, t1.c2, 0.621753885589577)) BETWEEN ((((rt0.c6)==(t1.c1)), ((rt0.c3)OR(t1.c1)), rt0.c1)) AND (('0.6961318560458079', (v0.c1 IN ()), (+ (rt0.c0))))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE BINARY) ORDER BY (- ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE BINARY) ORDER BY (- ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY (- ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) ASC);
SELECT COUNT(*) FROM v0, rt0 WHERE ((rt0.c1 IN (rt0.c0)) COLLATE BINARY) ORDER BY (- ((((v0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))) ASC;
SELECT * FROM t1, rt0, rt1 WHERE ((NOT (((((((((0.8392369335963927)OR(rt0.c1)))AND(t1.c4)))AND(rt1.c2)))OR(rt0.c6))))) ORDER BY rt0.c6 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((0.8392369335963927)OR(rt0.c1)))AND(t1.c4)))AND(rt1.c2)))OR(rt0.c6))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c6 DESC  NULLS FIRST);
SELECT * FROM t1, rt0, rt1 WHERE ((NOT (((((((((0.8392369335963927)OR(rt0.c1)))AND(t1.c4)))AND(rt1.c2)))OR(rt0.c6))))) ORDER BY rt0.c6 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((0.8392369335963927)OR(rt0.c1)))AND(t1.c4)))AND(rt1.c2)))OR(rt0.c6))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c6 DESC  NULLS FIRST);
SELECT * FROM t1, rt0, rt1 WHERE ((NOT (((((((((0.8392369335963927)OR(rt0.c1)))AND(t1.c4)))AND(rt1.c2)))OR(rt0.c6))))) ORDER BY rt0.c6 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c4)>=(1.130258935E9)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4)>=(1.130258935E9))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c4)>=(1.130258935E9)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4)>=(1.130258935E9))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c4)>=(1.130258935E9)));
SELECT * FROM rt1, rt0 WHERE (((((rt0.c6)-(rt1.c2)))%(((rt0.c0) IS FALSE)))) ORDER BY (NOT (((rt0.c4) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c6)-(rt1.c2)))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c4) IS TRUE)))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c6)-(rt1.c2)))%(((rt0.c0) IS FALSE)))) ORDER BY (NOT (((rt0.c4) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c6)-(rt1.c2)))%(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (NOT (((rt0.c4) IS TRUE)))  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (((((rt0.c6)-(rt1.c2)))%(((rt0.c0) IS FALSE)))) ORDER BY (NOT (((rt0.c4) IS TRUE)))  NULLS LAST;
SELECT * FROM t1 INDEXED BY i10, rt0, v0 WHERE ((((((rt0.c6 IN ()))AND(((v0.c0)==(t1.c3)))))OR(((v0.c0)<('2LK{l.~,')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c6 IN ()))AND(((v0.c0)=(t1.c3)))))OR(((v0.c0)<('2LK{l.~,'))))) IS TRUE)  as count FROM t1 INDEXED BY i10, rt0, v0);
SELECT * FROM t1 INDEXED BY i10, rt0, v0 WHERE ((((((rt0.c6 IN ()))AND(((v0.c0)==(t1.c3)))))OR(((v0.c0)<('2LK{l.~,')))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c6 IN ()))AND(((v0.c0)=(t1.c3)))))OR(((v0.c0)<('2LK{l.~,'))))) IS TRUE)  as count FROM t1 INDEXED BY i10, rt0, v0);
SELECT * FROM t1, rt0 WHERE (((((((((((((((((((((rt0.c5)AND(rt0.c6)))AND(t1.c12)))AND(rt0.c4)))AND(rt0.c4)))OR(t1.c4)))OR(rt0.c5)))AND(0.8176435803961366)))AND(((t1.c12) ISNULL))))OR((((rt0.c5, t1.c1, rt0.c3))!=((rt0.c1, rt0.c2, rt0.c3))))))AND(CAST(rt0.c5 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (t1.c2) AND (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c5)AND(rt0.c6)))AND(t1.c12)))AND(rt0.c4)))AND(rt0.c4)))OR(t1.c4)))OR(rt0.c5)))AND(0.8176435803961366)))AND(((t1.c12) ISNULL))))OR((((rt0.c5, t1.c1, rt0.c3))!=((rt0.c1, rt0.c2, rt0.c3))))))AND(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c4) BETWEEN (t1.c2) AND (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((((((((((((((((((rt0.c5)AND(rt0.c6)))AND(t1.c12)))AND(rt0.c4)))AND(rt0.c4)))OR(t1.c4)))OR(rt0.c5)))AND(0.8176435803961366)))AND(((t1.c12) ISNULL))))OR((((rt0.c5, t1.c1, rt0.c3))!=((rt0.c1, rt0.c2, rt0.c3))))))AND(CAST(rt0.c5 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (t1.c2) AND (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((rt0.c5)AND(rt0.c6)))AND(t1.c12)))AND(rt0.c4)))AND(rt0.c4)))OR(t1.c4)))OR(rt0.c5)))AND(0.8176435803961366)))AND(((t1.c12) ISNULL))))OR((((rt0.c5, t1.c1, rt0.c3))!=((rt0.c1, rt0.c2, rt0.c3))))))AND(CAST(rt0.c5 AS TEXT)))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c4) BETWEEN (t1.c2) AND (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE (((((((((((((((((((((rt0.c5)AND(rt0.c6)))AND(t1.c12)))AND(rt0.c4)))AND(rt0.c4)))OR(t1.c4)))OR(rt0.c5)))AND(0.8176435803961366)))AND(((t1.c12) ISNULL))))OR((((rt0.c5, t1.c1, rt0.c3))!=((rt0.c1, rt0.c2, rt0.c3))))))AND(CAST(rt0.c5 AS TEXT)))) ORDER BY ((rt0.c4) BETWEEN (t1.c2) AND (rt0.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, v0, rt1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL * FROM t1, rt0, v0, rt1 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL * FROM t1, rt0, v0, rt1 WHERE (v0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2);
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON (~ (x'')) COLLATE RTRIM FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0)OR(rt0.c0)), ((rt0.c2)GLOB(v0.c2))) WHERE (CAST(rt1.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (x'')) COLLATE RTRIM FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0)OR(rt0.c0)), ((rt0.c2)GLOB(v0.c2))));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON (~ (x'')) COLLATE RTRIM FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0)OR(rt0.c0)), ((rt0.c2)GLOB(v0.c2))) WHERE (CAST(rt1.c1 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS NUMERIC)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (~ (x'')) COLLATE RTRIM FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0)OR(rt0.c0)), ((rt0.c2)GLOB(v0.c2))));
SELECT * FROM rt1 RIGHT OUTER JOIN v0 ON (~ (x'')) COLLATE RTRIM FULL OUTER JOIN rt0 ON IFNULL(DISTINCT ((rt0.c0)OR(rt0.c0)), ((rt0.c2)GLOB(v0.c2))) WHERE (CAST(rt1.c1 AS NUMERIC));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON STRFTIME((((rt0.c6, v0.c2, rt1.c2)) NOT BETWEEN ((t1.c0, t1.c2, rt1.c2)) AND ((rt0.c3, t1.c3, t1.c2))), IFNULL(DISTINCT t1.c2, x'9822'), (((t1.c1, t1.c1, rt0.c3, rt0.c4, rt0.c1))==((rt0.c2, '-1523945640', rt0.c0, t1.c12, t1.c0)))) FULL OUTER JOIN v0 ON rt0.c6 LEFT OUTER JOIN t1 ON rt0.c3 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) ORDER BY TRIM(NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON STRFTIME((((rt0.c6, v0.c2, rt1.c2)) NOT BETWEEN ((t1.c0, t1.c2, rt1.c2)) AND ((rt0.c3, t1.c3, t1.c2))), IFNULL(DISTINCT t1.c2, x'9822'), (((t1.c1, t1.c1, rt0.c3, rt0.c4, rt0.c1))==((rt0.c2, '-1523945640', rt0.c0, t1.c12, t1.c0)))) FULL OUTER JOIN v0 ON rt0.c6 LEFT OUTER JOIN t1 ON rt0.c3 ORDER BY TRIM(NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON STRFTIME((((rt0.c6, v0.c2, rt1.c2)) NOT BETWEEN ((t1.c0, t1.c2, rt1.c2)) AND ((rt0.c3, t1.c3, t1.c2))), IFNULL(DISTINCT t1.c2, x'9822'), (((t1.c1, t1.c1, rt0.c3, rt0.c4, rt0.c1))==((rt0.c2, '-1523945640', rt0.c0, t1.c12, t1.c0)))) FULL OUTER JOIN v0 ON rt0.c6 LEFT OUTER JOIN t1 ON rt0.c3 WHERE ((NOT (rt0.c3 COLLATE RTRIM))) ORDER BY TRIM(NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON STRFTIME((((rt0.c6, v0.c2, rt1.c2)) NOT BETWEEN ((t1.c0, t1.c2, rt1.c2)) AND ((rt0.c3, t1.c3, t1.c2))), IFNULL(DISTINCT t1.c2, x'9822'), (((t1.c1, t1.c1, rt0.c3, rt0.c4, rt0.c1))==((rt0.c2, '-1523945640', rt0.c0, t1.c12, t1.c0)))) FULL OUTER JOIN v0 ON rt0.c6 LEFT OUTER JOIN t1 ON rt0.c3 ORDER BY TRIM(NULL) ASC  NULLS LAST);
SELECT ALL * FROM rt1, v0, t1, rt0 WHERE ((NOT (STRFTIME(rt0.c1, v0.c1, t1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (STRFTIME(rt0.c1, v0.c1, t1.c2)))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL * FROM rt1, v0, t1, rt0 WHERE ((NOT (STRFTIME(rt0.c1, v0.c1, t1.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (STRFTIME(rt0.c1, v0.c1, t1.c2)))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT ALL * FROM rt1, v0, t1, rt0 WHERE ((NOT (STRFTIME(rt0.c1, v0.c1, t1.c2))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((v0.c1 IN ())) NOTNULL) LEFT OUTER JOIN rt0 ON rt0.c5 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c4) AND (rt1.c1))))) ORDER BY ((((HEX(rt0.c3))OR(rt0.c1 COLLATE NOCASE)))OR(0x57f5ea15))  NULLS FIRST, ((((0.22443561054609718)AND((+ (rt0.c1)))))AND(((rt0.c2)|(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) NOT BETWEEN (rt0.c4) AND (rt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((v0.c1 IN ())) NOTNULL) LEFT OUTER JOIN rt0 ON rt0.c5 ORDER BY ((((HEX(rt0.c3))OR(rt0.c1 COLLATE NOCASE)))OR(0X57f5ea15))  NULLS FIRST, ((((0.22443561054609718)AND((+ (rt0.c1)))))AND(((rt0.c2)|(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((v0.c1 IN ())) NOTNULL) LEFT OUTER JOIN rt0 ON rt0.c5 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c4) AND (rt1.c1))))) ORDER BY ((((HEX(rt0.c3))OR(rt0.c1 COLLATE NOCASE)))OR(0x57f5ea15))  NULLS FIRST, ((((0.22443561054609718)AND((+ (rt0.c1)))))AND(((rt0.c2)|(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((NULL) NOT BETWEEN (rt0.c4) AND (rt1.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((v0.c1 IN ())) NOTNULL) LEFT OUTER JOIN rt0 ON rt0.c5 ORDER BY ((((HEX(rt0.c3))OR(rt0.c1 COLLATE NOCASE)))OR(0X57f5ea15))  NULLS FIRST, ((((0.22443561054609718)AND((+ (rt0.c1)))))AND(((rt0.c2)|(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt1 ON (((v0.c1 IN ())) NOTNULL) LEFT OUTER JOIN rt0 ON rt0.c5 WHERE ((NOT (((NULL) NOT BETWEEN (rt0.c4) AND (rt1.c1))))) ORDER BY ((((HEX(rt0.c3))OR(rt0.c1 COLLATE NOCASE)))OR(0x57f5ea15))  NULLS FIRST, ((((0.22443561054609718)AND((+ (rt0.c1)))))AND(((rt0.c2)|(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c4) NOTNULL) THEN ((rt1.c2) NOTNULL) END) ORDER BY (((t1.c3)+(t1.c12)) IN ()) ASC  NULLS LAST, CAST((((t1.c1))>=((rt1.c1))) AS BLOB)  NULLS LAST, rt1.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c4) NOTNULL) THEN ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM t1, rt1 ORDER BY (((t1.c3)+(t1.c12)) IN ()) ASC  NULLS LAST, CAST((((t1.c1))>=((rt1.c1))) AS BLOB)  NULLS LAST, rt1.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c4) NOTNULL) THEN ((rt1.c2) NOTNULL) END) ORDER BY (((t1.c3)+(t1.c12)) IN ()) ASC  NULLS LAST, CAST((((t1.c1))>=((rt1.c1))) AS BLOB)  NULLS LAST, rt1.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c4) NOTNULL) THEN ((rt1.c2) NOTNULL) END) IS TRUE)  as count FROM t1, rt1 ORDER BY (((t1.c3)+(t1.c12)) IN ()) ASC  NULLS LAST, CAST((((t1.c1))>=((rt1.c1))) AS BLOB)  NULLS LAST, rt1.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE ((t1.c0) BETWEEN (t1.c0) AND (t1.c1))  WHEN ((t1.c4) NOTNULL) THEN ((rt1.c2) NOTNULL) END) ORDER BY (((t1.c3)+(t1.c12)) IN ()) ASC  NULLS LAST, CAST((((t1.c1))>=((rt1.c1))) AS BLOB)  NULLS LAST, rt1.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 INNER JOIN v0 ON (((((((('%SP-Sf')OR(rt0.c2)))AND(825828999)))AND((v0.c2 IN (NULL, rt0.c0)))))OR(((((rt0.c2)OR(v0.c1)))OR(rt1.c0)))) CROSS JOIN rt0 ON 'J ' WHERE (rt0.c2) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((((((('%SP-Sf')OR(rt0.c2)))AND(825828999)))AND((v0.c2 IN (NULL, rt0.c0)))))OR(((((rt0.c2)OR(v0.c1)))OR(rt1.c0)))) CROSS JOIN rt0 ON 'J ' ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 INNER JOIN v0 ON (((((((('%SP-Sf')OR(rt0.c2)))AND(825828999)))AND((v0.c2 IN (NULL, rt0.c0)))))OR(((((rt0.c2)OR(v0.c1)))OR(rt1.c0)))) CROSS JOIN rt0 ON 'J ' WHERE (rt0.c2) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (((((((('%SP-Sf')OR(rt0.c2)))AND(825828999)))AND((v0.c2 IN (NULL, rt0.c0)))))OR(((((rt0.c2)OR(v0.c1)))OR(rt1.c0)))) CROSS JOIN rt0 ON 'J ' ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 INNER JOIN v0 ON (((((((('%SP-Sf')OR(rt0.c2)))AND(825828999)))AND((v0.c2 IN (NULL, rt0.c0)))))OR(((((rt0.c2)OR(v0.c1)))OR(rt1.c0)))) CROSS JOIN rt0 ON 'J ' WHERE (rt0.c2) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE;
SELECT * FROM rt1, rt0, t1 INNER JOIN v0 ON TRIM(DISTINCT ((((((((((((t1.c12)AND(v0.c1)))OR(0.5215716093889804)))AND(t1.c12)))AND(t1.c12)))AND(t1.c0)))AND(rt0.c3))) WHERE (v0.c2) ORDER BY CASE WHEN TRIM(rt0.c0) THEN (((-192272472, v0.c1, t1.c1)) NOT BETWEEN ((NULL, rt1.c1, rt0.c6)) AND ((rt0.c1, 0.48950013328673025, rt0.c5))) WHEN ((rt1.c1)=(t1.c12)) THEN ((rt0.c2) IS TRUE) WHEN ((((rt1.c2)AND(v0.c1)))AND(rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (t1.c3) AND (rt0.c5)) END  NULLS LAST, ((((((((CAST(t1.c3 AS TEXT))OR((v0.c2 IN ('갈*V')))))AND(CAST(rt1.c2 AS INTEGER))))AND((((v0.c1))<((rt1.c0))))))OR(((v0.c1)/(v0.c2)))), ((((((((((((((((t1.c0)AND(v0.c2)))OR(-1500832160)))AND(rt0.c5)))OR(t1.c4)))AND(((0.41054164450162056)LIKE(rt0.c3)))))OR(v0.c2 COLLATE BINARY)))AND(CASE NULL  WHEN v0.c2 THEN v0.c0 END)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1, rt0, t1 INNER JOIN v0 ON TRIM(DISTINCT ((((((((((((t1.c12)AND(v0.c1)))OR(0.5215716093889804)))AND(t1.c12)))AND(t1.c12)))AND(t1.c0)))AND(rt0.c3))) ORDER BY CASE WHEN TRIM(rt0.c0) THEN (((-192272472, v0.c1, t1.c1)) NOT BETWEEN ((NULL, rt1.c1, rt0.c6)) AND ((rt0.c1, 0.48950013328673025, rt0.c5))) WHEN ((rt1.c1)==(t1.c12)) THEN ((rt0.c2) IS TRUE) WHEN ((((rt1.c2)AND(v0.c1)))AND(rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (t1.c3) AND (rt0.c5)) END  NULLS LAST, ((((((((CAST(t1.c3 AS TEXT))OR((v0.c2 IN ('갈*V')))))AND(CAST(rt1.c2 AS INTEGER))))AND((((v0.c1))<((rt1.c0))))))OR(((v0.c1)/(v0.c2)))), ((((((((((((((((t1.c0)AND(v0.c2)))OR(-1500832160)))AND(rt0.c5)))OR(t1.c4)))AND(((0.41054164450162056)LIKE(rt0.c3)))))OR(v0.c2 COLLATE BINARY)))AND(CASE NULL  WHEN v0.c2 THEN v0.c0 END)))AND(x''))  NULLS LAST);
SELECT * FROM rt1, rt0, t1 INNER JOIN v0 ON TRIM(DISTINCT ((((((((((((t1.c12)AND(v0.c1)))OR(0.5215716093889804)))AND(t1.c12)))AND(t1.c12)))AND(t1.c0)))AND(rt0.c3))) WHERE (v0.c2) ORDER BY CASE WHEN TRIM(rt0.c0) THEN (((-192272472, v0.c1, t1.c1)) NOT BETWEEN ((NULL, rt1.c1, rt0.c6)) AND ((rt0.c1, 0.48950013328673025, rt0.c5))) WHEN ((rt1.c1)=(t1.c12)) THEN ((rt0.c2) IS TRUE) WHEN ((((rt1.c2)AND(v0.c1)))AND(rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (t1.c3) AND (rt0.c5)) END  NULLS LAST, ((((((((CAST(t1.c3 AS TEXT))OR((v0.c2 IN ('갈*V')))))AND(CAST(rt1.c2 AS INTEGER))))AND((((v0.c1))<((rt1.c0))))))OR(((v0.c1)/(v0.c2)))), ((((((((((((((((t1.c0)AND(v0.c2)))OR(-1500832160)))AND(rt0.c5)))OR(t1.c4)))AND(((0.41054164450162056)LIKE(rt0.c3)))))OR(v0.c2 COLLATE BINARY)))AND(CASE NULL  WHEN v0.c2 THEN v0.c0 END)))AND(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c2) IS TRUE)  as count FROM rt1, rt0, t1 INNER JOIN v0 ON TRIM(DISTINCT ((((((((((((t1.c12)AND(v0.c1)))OR(0.5215716093889804)))AND(t1.c12)))AND(t1.c12)))AND(t1.c0)))AND(rt0.c3))) ORDER BY CASE WHEN TRIM(rt0.c0) THEN (((-192272472, v0.c1, t1.c1)) NOT BETWEEN ((NULL, rt1.c1, rt0.c6)) AND ((rt0.c1, 0.48950013328673025, rt0.c5))) WHEN ((rt1.c1)==(t1.c12)) THEN ((rt0.c2) IS TRUE) WHEN ((((rt1.c2)AND(v0.c1)))AND(rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (t1.c3) AND (rt0.c5)) END  NULLS LAST, ((((((((CAST(t1.c3 AS TEXT))OR((v0.c2 IN ('갈*V')))))AND(CAST(rt1.c2 AS INTEGER))))AND((((v0.c1))<((rt1.c0))))))OR(((v0.c1)/(v0.c2)))), ((((((((((((((((t1.c0)AND(v0.c2)))OR(-1500832160)))AND(rt0.c5)))OR(t1.c4)))AND(((0.41054164450162056)LIKE(rt0.c3)))))OR(v0.c2 COLLATE BINARY)))AND(CASE NULL  WHEN v0.c2 THEN v0.c0 END)))AND(x''))  NULLS LAST);
SELECT * FROM rt1, rt0, t1 INNER JOIN v0 ON TRIM(DISTINCT ((((((((((((t1.c12)AND(v0.c1)))OR(0.5215716093889804)))AND(t1.c12)))AND(t1.c12)))AND(t1.c0)))AND(rt0.c3))) WHERE (v0.c2) ORDER BY CASE WHEN TRIM(rt0.c0) THEN (((-192272472, v0.c1, t1.c1)) NOT BETWEEN ((NULL, rt1.c1, rt0.c6)) AND ((rt0.c1, 0.48950013328673025, rt0.c5))) WHEN ((rt1.c1)=(t1.c12)) THEN ((rt0.c2) IS TRUE) WHEN ((((rt1.c2)AND(v0.c1)))AND(rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (t1.c3) AND (rt0.c5)) END  NULLS LAST, ((((((((CAST(t1.c3 AS TEXT))OR((v0.c2 IN ('갈*V')))))AND(CAST(rt1.c2 AS INTEGER))))AND((((v0.c1))<((rt1.c0))))))OR(((v0.c1)/(v0.c2)))), ((((((((((((((((t1.c0)AND(v0.c2)))OR(-1500832160)))AND(rt0.c5)))OR(t1.c4)))AND(((0.41054164450162056)LIKE(rt0.c3)))))OR(v0.c2 COLLATE BINARY)))AND(CASE NULL  WHEN v0.c2 THEN v0.c0 END)))AND(x''))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) IS TRUE)) ORDER BY ((((0.03825413216713691)*(v0.c2)))OR(((v0.c0)AND(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((0.03825413216713691)*(v0.c2)))OR(((v0.c0)AND(v0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) IS TRUE)) ORDER BY ((((0.03825413216713691)*(v0.c2)))OR(((v0.c0)AND(v0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY ((((0.03825413216713691)*(v0.c2)))OR(((v0.c0)AND(v0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) IS TRUE)) ORDER BY ((((0.03825413216713691)*(v0.c2)))OR(((v0.c0)AND(v0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE ((- ((~ (x'b4e0')))));
SELECT SUM(count) FROM (SELECT (((- ((~ (x'b4e0'))))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE ((- ((~ (x'b4e0')))));
SELECT SUM(count) FROM (SELECT (((- ((~ (x'b4e0'))))) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE ((- ((~ (x'b4e0')))));
SELECT ALL COUNT(*) FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((((t1.c3)AND(t1.c3)))AND(v0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CASE WHEN rt0.c0 THEN NULL END)) WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((((t1.c3)AND(t1.c3)))AND(v0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CASE WHEN rt0.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((((t1.c3)AND(t1.c3)))AND(v0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CASE WHEN rt0.c0 THEN NULL END)) WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((((t1.c3)AND(t1.c3)))AND(v0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CASE WHEN rt0.c0 THEN NULL END)));
SELECT ALL COUNT(*) FROM rt0, t1, v0 CROSS JOIN rt1 ON ((((((t1.c3)AND(t1.c3)))AND(v0.c2))) BETWEEN ((rt0.c4 IN ())) AND (CASE WHEN rt0.c0 THEN NULL END)) WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS TEXT));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE INNER JOIN rt1 ON ((t1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((t1.c2 IN ()))) RIGHT OUTER JOIN v0 ON (~ (t1.c1)) COLLATE BINARY WHERE ((((((v0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))>=((rt1.c1 IN (0.16313568420878932, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))>=((rt1.c1 IN (0.16313568420878932, rt0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE INNER JOIN rt1 ON ((t1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((t1.c2 IN ()))) RIGHT OUTER JOIN v0 ON (~ (t1.c1)) COLLATE BINARY);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE INNER JOIN rt1 ON ((t1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((t1.c2 IN ()))) RIGHT OUTER JOIN v0 ON (~ (t1.c1)) COLLATE BINARY WHERE ((((((v0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))>=((rt1.c1 IN (0.16313568420878932, rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))>=((rt1.c1 IN (0.16313568420878932, rt0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE INNER JOIN rt1 ON ((t1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((t1.c2 IN ()))) RIGHT OUTER JOIN v0 ON (~ (t1.c1)) COLLATE BINARY);
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt0 ON (rt1.c0 IN ()) COLLATE NOCASE INNER JOIN rt1 ON ((t1.c0) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((t1.c2 IN ()))) RIGHT OUTER JOIN v0 ON (~ (t1.c1)) COLLATE BINARY WHERE ((((((v0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))))>=((rt1.c1 IN (0.16313568420878932, rt0.c1)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0)==(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)==(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)==(rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)==(rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c0)==(rt1.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c2)) THEN ((0.6117443393747031) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c2)) THEN ((0.6117443393747031) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c2)) THEN ((0.6117443393747031) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (v0.c2)) THEN ((0.6117443393747031) NOT NULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (NOT (v0.c2)) THEN ((0.6117443393747031) NOT NULL) END);
SELECT * FROM rt0 CROSS JOIN t1 ON ((((x'6763' COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (t1.c4) AND (rt0.c2)))))AND(((rt0.c5)>=(rt0.c0)))) WHERE (((((t1.c0) NOT NULL))||(((rt0.c1)<<(rt0.c1))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((t1.c4)) AND ((t1.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL))||(((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((x'6763' COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (t1.c4) AND (rt0.c2)))))AND(((rt0.c5)>=(rt0.c0)))) ORDER BY CAST((((rt0.c0)) BETWEEN ((t1.c4)) AND ((t1.c2))) AS INTEGER) ASC);
SELECT * FROM rt0 CROSS JOIN t1 ON ((((x'6763' COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (t1.c4) AND (rt0.c2)))))AND(((rt0.c5)>=(rt0.c0)))) WHERE (((((t1.c0) NOT NULL))||(((rt0.c1)<<(rt0.c1))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((t1.c4)) AND ((t1.c2))) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT NULL))||(((rt0.c1)<<(rt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((x'6763' COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (t1.c4) AND (rt0.c2)))))AND(((rt0.c5)>=(rt0.c0)))) ORDER BY CAST((((rt0.c0)) BETWEEN ((t1.c4)) AND ((t1.c2))) AS INTEGER) ASC);
SELECT * FROM rt0 CROSS JOIN t1 ON ((((x'6763' COLLATE BINARY)OR(((rt0.c3) NOT BETWEEN (t1.c4) AND (rt0.c2)))))AND(((rt0.c5)>=(rt0.c0)))) WHERE (((((t1.c0) NOT NULL))||(((rt0.c1)<<(rt0.c1))))) ORDER BY CAST((((rt0.c0)) BETWEEN ((t1.c4)) AND ((t1.c2))) AS INTEGER) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (v0.c2)))) AND ((CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (v0.c2)))) AND ((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (v0.c2)))) AND ((CAST(rt0.c1 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (v0.c2)))) AND ((CAST(rt0.c1 AS REAL))))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((((v0.c1)) NOT BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (v0.c2)))) AND ((CAST(rt0.c1 AS REAL)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((((((((v0.c1)*(t1.c3)))OR(((((rt0.c3)OR(v0.c1)))AND(v0.c1)))))OR((~ (t1.c3)))))AND((((t1.c1))<>((rt0.c1))))))AND(0.28231719587898696)) CROSS JOIN rt0 ON '' FULL OUTER JOIN v0 ON CAST((rt1.c2 IN ()) AS BLOB) WHERE ((+ ((+ (rt1.c1))))) ORDER BY (x'c69d' IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt1.c1))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((((((((v0.c1)*(t1.c3)))OR(((((rt0.c3)OR(v0.c1)))AND(v0.c1)))))OR((~ (t1.c3)))))AND((((t1.c1))!=((rt0.c1))))))AND(0.28231719587898696)) CROSS JOIN rt0 ON '' FULL OUTER JOIN v0 ON CAST((rt1.c2 IN ()) AS BLOB) ORDER BY (x'c69d' IN ()) DESC);
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((((((((((v0.c1)*(t1.c3)))OR(((((rt0.c3)OR(v0.c1)))AND(v0.c1)))))OR((~ (t1.c3)))))AND((((t1.c1))<>((rt0.c1))))))AND(0.28231719587898696)) CROSS JOIN rt0 ON '' FULL OUTER JOIN v0 ON CAST((rt1.c2 IN ()) AS BLOB) WHERE ((+ ((+ (rt1.c1))))) ORDER BY (x'c69d' IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt1.c1))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((((((((v0.c1)*(t1.c3)))OR(((((rt0.c3)OR(v0.c1)))AND(v0.c1)))))OR((~ (t1.c3)))))AND((((t1.c1))!=((rt0.c1))))))AND(0.28231719587898696)) CROSS JOIN rt0 ON '' FULL OUTER JOIN v0 ON CAST((rt1.c2 IN ()) AS BLOB) ORDER BY (x'c69d' IN ()) DESC);
SELECT COUNT(*) FROM v0, rt1 INNER JOIN rt0 ON 0.16438024796580886 COLLATE NOCASE WHERE ((HEX(rt1.c2) IN (((rt0.c0) ISNULL)))) ORDER BY 0xffffffff8aec2294 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt1.c2) IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt1 INNER JOIN rt0 ON 0.16438024796580886 COLLATE NOCASE ORDER BY 0xffffffff8aec2294 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 INNER JOIN rt0 ON 0.16438024796580886 COLLATE NOCASE WHERE ((HEX(rt1.c2) IN (((rt0.c0) ISNULL)))) ORDER BY 0xffffffff8aec2294 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((HEX(rt1.c2) IN (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM v0, rt1 INNER JOIN rt0 ON 0.16438024796580886 COLLATE NOCASE ORDER BY 0xffffffff8aec2294 DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1 INNER JOIN rt0 ON 0.16438024796580886 COLLATE NOCASE WHERE ((HEX(rt1.c2) IN (((rt0.c0) ISNULL)))) ORDER BY 0xffffffff8aec2294 DESC  NULLS LAST;
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt0.c6)))OR(rt0.c5)))|(7920257)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c6)))OR(rt0.c5)))|(7920257))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt0.c6)))OR(rt0.c5)))|(7920257)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c6)))OR(rt0.c5)))|(7920257))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((((rt0.c1)AND(rt0.c6)))OR(rt0.c5)))|(7920257)));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN t1.c1 THEN t1.c4 WHEN v0.c1 THEN t1.c4 WHEN t1.c0 THEN v0.c2 END)LIKE(CAST(t1.c12 AS REAL))) WHERE ((((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN t1.c1 THEN t1.c4 WHEN v0.c1 THEN t1.c4 WHEN t1.c0 THEN v0.c2 END)LIKE(CAST(t1.c12 AS REAL))));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN t1.c1 THEN t1.c4 WHEN v0.c1 THEN t1.c4 WHEN t1.c0 THEN v0.c2 END)LIKE(CAST(t1.c12 AS REAL))) WHERE ((((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN t1.c1 THEN t1.c4 WHEN v0.c1 THEN t1.c4 WHEN t1.c0 THEN v0.c2 END)LIKE(CAST(t1.c12 AS REAL))));
SELECT * FROM v0 LEFT OUTER JOIN t1 ON ((CASE v0.c1  WHEN t1.c1 THEN t1.c4 WHEN v0.c1 THEN t1.c4 WHEN t1.c0 THEN v0.c2 END)LIKE(CAST(t1.c12 AS REAL))) WHERE ((((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN v0.c1 WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c5 END) BETWEEN (((((rt0.c0)AND(rt0.c6)))OR(v0.c2))) AND (((((((((rt0.c3)OR(v0.c2)))OR(v0.c1)))OR(rt0.c3)))OR(v0.c1)))) INNER JOIN rt1 ON UPPER(DISTINCT ((0.6040700462447438) IS TRUE)) WHERE ((((+ (v0.c0)))<(((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c1)))OR(v0.c1)))LIKE(((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))<(((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN v0.c1 WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c5 END) BETWEEN (((((rt0.c0)AND(rt0.c6)))OR(v0.c2))) AND (((((((((rt0.c3)OR(v0.c2)))OR(v0.c1)))OR(rt0.c3)))OR(v0.c1)))) INNER JOIN rt1 ON UPPER(DISTINCT ((0.6040700462447438) IS TRUE)) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c1)))OR(v0.c1)))LIKE(((rt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN v0.c1 WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c5 END) BETWEEN (((((rt0.c0)AND(rt0.c6)))OR(v0.c2))) AND (((((((((rt0.c3)OR(v0.c2)))OR(v0.c1)))OR(rt0.c3)))OR(v0.c1)))) INNER JOIN rt1 ON UPPER(DISTINCT ((0.6040700462447438) IS TRUE)) WHERE ((((+ (v0.c0)))<(((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c1)))OR(v0.c1)))LIKE(((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0)))<(((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN v0.c1 WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c5 END) BETWEEN (((((rt0.c0)AND(rt0.c6)))OR(v0.c2))) AND (((((((((rt0.c3)OR(v0.c2)))OR(v0.c1)))OR(rt0.c3)))OR(v0.c1)))) INNER JOIN rt1 ON UPPER(DISTINCT ((0.6040700462447438) IS TRUE)) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c1)))OR(v0.c1)))LIKE(((rt0.c1) IS FALSE)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN v0.c1 WHEN rt0.c3 THEN v0.c2 WHEN v0.c1 THEN rt0.c5 END) BETWEEN (((((rt0.c0)AND(rt0.c6)))OR(v0.c2))) AND (((((((((rt0.c3)OR(v0.c2)))OR(v0.c1)))OR(rt0.c3)))OR(v0.c1)))) INNER JOIN rt1 ON UPPER(DISTINCT ((0.6040700462447438) IS TRUE)) WHERE ((((+ (v0.c0)))<(((x'') NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0 ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c1)))OR(v0.c1)))LIKE(((rt0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt1 CROSS JOIN v0 ON (((t1.c4))!=((t1.c3))) COLLATE RTRIM WHERE ((((((rt1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM t1, rt1 CROSS JOIN v0 ON (((t1.c4))!=((t1.c3))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt1 CROSS JOIN v0 ON (((t1.c4))!=((t1.c3))) COLLATE RTRIM WHERE ((((((rt1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t1.c1) IS FALSE)))) IS TRUE)  as count FROM t1, rt1 CROSS JOIN v0 ON (((t1.c4))!=((t1.c3))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, rt1 CROSS JOIN v0 ON (((t1.c4))!=((t1.c3))) COLLATE RTRIM WHERE ((((((rt1.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0))))||(((t1.c1) IS FALSE))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (- ((- (t1.c12)))) INNER JOIN t1 ON x'7b2a' RIGHT OUTER JOIN rt1 ON CASE WHEN ((((t1.c1)OR(t1.c12)))AND(rt1.c0)) THEN (((rt0.c0, t1.c2, rt0.c0)) BETWEEN ((rt0.c2, t1.c2, rt0.c2)) AND ((NULL, rt0.c5, rt0.c2))) ELSE (rt0.c1 IN (rt0.c5)) END WHERE (LIKELY(DISTINCT rt1.c0) COLLATE NOCASE) ORDER BY CAST(((t1.c12)<=(rt1.c1)) AS NUMERIC) ASC  NULLS FIRST, CASE ((rt1.c1)OR(v0.c2))  WHEN (v0.c2 IN (t1.c2)) THEN ((((0.2945682294799927)OR(rt1.c1)))AND(rt0.c4)) ELSE CASE rt0.c1  WHEN t1.c4 THEN '460860869' ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((- (t1.c12)))) INNER JOIN t1 ON x'7b2a' RIGHT OUTER JOIN rt1 ON CASE WHEN ((((t1.c1)OR(t1.c12)))AND(rt1.c0)) THEN (((rt0.c0, t1.c2, rt0.c0)) BETWEEN ((rt0.c2, t1.c2, rt0.c2)) AND ((NULL, rt0.c5, rt0.c2))) ELSE (rt0.c1 IN (rt0.c5)) END ORDER BY CAST(((t1.c12)<=(rt1.c1)) AS NUMERIC) ASC  NULLS FIRST, CASE ((rt1.c1)OR(v0.c2))  WHEN (v0.c2 IN (t1.c2)) THEN ((((0.2945682294799927)OR(rt1.c1)))AND(rt0.c4)) ELSE CASE rt0.c1  WHEN t1.c4 THEN '460860869' ELSE rt0.c0 END END DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON (- ((- (t1.c12)))) INNER JOIN t1 ON x'7b2a' RIGHT OUTER JOIN rt1 ON CASE WHEN ((((t1.c1)OR(t1.c12)))AND(rt1.c0)) THEN (((rt0.c0, t1.c2, rt0.c0)) BETWEEN ((rt0.c2, t1.c2, rt0.c2)) AND ((NULL, rt0.c5, rt0.c2))) ELSE (rt0.c1 IN (rt0.c5)) END WHERE (LIKELY(DISTINCT rt1.c0) COLLATE NOCASE) ORDER BY CAST(((t1.c12)<=(rt1.c1)) AS NUMERIC) ASC  NULLS FIRST, CASE ((rt1.c1)OR(v0.c2))  WHEN (v0.c2 IN (t1.c2)) THEN ((((0.2945682294799927)OR(rt1.c1)))AND(rt0.c4)) ELSE CASE rt0.c1  WHEN t1.c4 THEN '460860869' ELSE rt0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((- (t1.c12)))) INNER JOIN t1 ON x'7b2a' RIGHT OUTER JOIN rt1 ON CASE WHEN ((((t1.c1)OR(t1.c12)))AND(rt1.c0)) THEN (((rt0.c0, t1.c2, rt0.c0)) BETWEEN ((rt0.c2, t1.c2, rt0.c2)) AND ((NULL, rt0.c5, rt0.c2))) ELSE (rt0.c1 IN (rt0.c5)) END ORDER BY CAST(((t1.c12)<=(rt1.c1)) AS NUMERIC) ASC  NULLS FIRST, CASE ((rt1.c1)OR(v0.c2))  WHEN (v0.c2 IN (t1.c2)) THEN ((((0.2945682294799927)OR(rt1.c1)))AND(rt0.c4)) ELSE CASE rt0.c1  WHEN t1.c4 THEN '460860869' ELSE rt0.c0 END END DESC);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)AND((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(DATETIME(rt0.c5, rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)AND((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(DATETIME(rt0.c5, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)AND((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(DATETIME(rt0.c5, rt0.c1, rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)AND((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(DATETIME(rt0.c5, rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c2 END)AND((((rt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))))AND(DATETIME(rt0.c5, rt0.c1, rt0.c2))));
SELECT ALL COUNT(*) FROM rt1, t1 NOT INDEXED WHERE (json_array(CAST(rt1.c0 AS NUMERIC), ((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(rt1.c0 AS NUMERIC), ((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 NOT INDEXED WHERE (json_array(CAST(rt1.c0 AS NUMERIC), ((t1.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array(CAST(rt1.c0 AS NUMERIC), ((t1.c0) NOTNULL))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 NOT INDEXED WHERE (json_array(CAST(rt1.c0 AS NUMERIC), ((t1.c0) NOTNULL)));
SELECT * FROM t1, rt0, rt1, v0 WHERE (((rt0.c5)==(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5)=(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT * FROM t1, rt0, rt1, v0 WHERE (((rt0.c5)==(v0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5)=(v0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, rt1, v0);
SELECT * FROM t1, rt0, rt1, v0 WHERE (((rt0.c5)==(v0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((((((((((((t1.c4)AND(t1.c1)))OR('')))OR(rt1.c1)))OR(t1.c12)))AND(x'')))AND(t1.c2)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c4)AND(t1.c1)))OR('')))OR(rt1.c1)))OR(t1.c12)))AND(x'')))AND(t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((((((((((((t1.c4)AND(t1.c1)))OR('')))OR(rt1.c1)))OR(t1.c12)))AND(x'')))AND(t1.c2)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c4)AND(t1.c1)))OR('')))OR(rt1.c1)))OR(t1.c12)))AND(x'')))AND(t1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt1, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, v0 WHERE (((((((((((((t1.c4)AND(t1.c1)))OR('')))OR(rt1.c1)))OR(t1.c12)))AND(x'')))AND(t1.c2)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1 WHERE ((((((rt0.c0, NULL, x'', rt1.c0, t1.c1))!=((rt0.c1, rt0.c4, rt0.c3, rt0.c6, rt0.c6)))) IS TRUE)) ORDER BY (((NULL)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, x'', rt1.c0, t1.c1))<>((rt0.c1, rt0.c4, rt0.c3, rt0.c6, rt0.c6)))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0, rt1 ORDER BY (((NULL)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1 WHERE ((((((rt0.c0, NULL, x'', rt1.c0, t1.c1))!=((rt0.c1, rt0.c4, rt0.c3, rt0.c6, rt0.c6)))) IS TRUE)) ORDER BY (((NULL)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, NULL, x'', rt1.c0, t1.c1))<>((rt0.c1, rt0.c4, rt0.c3, rt0.c6, rt0.c6)))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0, rt1 ORDER BY (((NULL)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, rt0, rt1 WHERE ((((((rt0.c0, NULL, x'', rt1.c0, t1.c1))!=((rt0.c1, rt0.c4, rt0.c3, rt0.c6, rt0.c6)))) IS TRUE)) ORDER BY (((NULL)) BETWEEN ((CAST(v0.c2 AS INTEGER))) AND ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c2 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE (((((rt0.c3)AND('}?cfj3')))AND((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND('}?cfj3')))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, t1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE (((((rt0.c3)AND('}?cfj3')))AND((+ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)AND('}?cfj3')))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0, rt1, t1, v0);
SELECT ALL COUNT(*) FROM rt0, rt1, t1, v0 WHERE (((((rt0.c3)AND('}?cfj3')))AND((+ (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((rt0.c4 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((rt1.c0)OR(0.405785784366543)))OR((+ (v0.c2)))))AND(((rt1.c2)==(rt1.c1)))) WHERE ((((rt1.c1 COLLATE BINARY))<>(((v0.c2 IN ()))))) ORDER BY CASE WHEN ((rt1.c1)AND(rt1.c1)) THEN ((rt1.c1)<<(v0.c1)) ELSE ((rt1.c1) ISNULL) END  NULLS LAST, (+ (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE BINARY))!=(((v0.c2 IN ()))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((rt1.c0)OR(0.405785784366543)))OR((+ (v0.c2)))))AND(((rt1.c2)=(rt1.c1)))) ORDER BY CASE WHEN ((rt1.c1)AND(rt1.c1)) THEN ((rt1.c1)<<(v0.c1)) ELSE ((rt1.c1) ISNULL) END  NULLS LAST, (+ (NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((rt1.c0)OR(0.405785784366543)))OR((+ (v0.c2)))))AND(((rt1.c2)==(rt1.c1)))) WHERE ((((rt1.c1 COLLATE BINARY))<>(((v0.c2 IN ()))))) ORDER BY CASE WHEN ((rt1.c1)AND(rt1.c1)) THEN ((rt1.c1)<<(v0.c1)) ELSE ((rt1.c1) ISNULL) END  NULLS LAST, (+ (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1 COLLATE BINARY))!=(((v0.c2 IN ()))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON ((((((rt1.c0)OR(0.405785784366543)))OR((+ (v0.c2)))))AND(((rt1.c2)=(rt1.c1)))) ORDER BY CASE WHEN ((rt1.c1)AND(rt1.c1)) THEN ((rt1.c1)<<(v0.c1)) ELSE ((rt1.c1) ISNULL) END  NULLS LAST, (+ (NULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON ((((((rt1.c0)OR(0.405785784366543)))OR((+ (v0.c2)))))AND(((rt1.c2)==(rt1.c1)))) WHERE ((((rt1.c1 COLLATE BINARY))<>(((v0.c2 IN ()))))) ORDER BY CASE WHEN ((rt1.c1)AND(rt1.c1)) THEN ((rt1.c1)<<(v0.c1)) ELSE ((rt1.c1) ISNULL) END  NULLS LAST, (+ (NULL)) ASC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((t1.c3)>(t1.c1)) COLLATE BINARY) ORDER BY (((t1.c4)) NOT BETWEEN ((((t1.c1)GLOB(t1.c3)))) AND ((((t1.c3) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c3)>(t1.c1)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((t1.c4)) NOT BETWEEN ((((t1.c1)GLOB(t1.c3)))) AND ((((t1.c3) IS TRUE)))) DESC);
SELECT ALL * FROM t1 WHERE (((t1.c3)>(t1.c1)) COLLATE BINARY) ORDER BY (((t1.c4)) NOT BETWEEN ((((t1.c1)GLOB(t1.c3)))) AND ((((t1.c3) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c3)>(t1.c1)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY (((t1.c4)) NOT BETWEEN ((((t1.c1)GLOB(t1.c3)))) AND ((((t1.c3) IS TRUE)))) DESC);
SELECT ALL * FROM t1 WHERE (((t1.c3)>(t1.c1)) COLLATE BINARY) ORDER BY (((t1.c4)) NOT BETWEEN ((((t1.c1)GLOB(t1.c3)))) AND ((((t1.c3) IS TRUE)))) DESC;
SELECT COUNT(*) FROM rt1, t1 WHERE (x'') ORDER BY '-1675839213';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t1 ORDER BY '-1675839213');
SELECT COUNT(*) FROM rt1, t1 WHERE (x'') ORDER BY '-1675839213';
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t1 ORDER BY '-1675839213');
SELECT COUNT(*) FROM rt1, t1 WHERE (x'') ORDER BY '-1675839213';
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c6)))>(((rt0.c3) IS FALSE)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c6)), rt0.c3 COLLATE NOCASE, CAST('bge2l''oyx' AS TEXT)))<=((((((rt0.c1)AND(0.4159982431843925)))AND(rt0.c4)), LIKELIHOOD(rt0.c3, 0.7337760532258554), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c6)))>(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c6)), rt0.c3 COLLATE NOCASE, CAST('bge2l''oyx' AS TEXT)))<=((((((rt0.c1)AND(0.4159982431843925)))AND(rt0.c4)), LIKELIHOOD(rt0.c3, 0.7337760532258554), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c6)))>(((rt0.c3) IS FALSE)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c6)), rt0.c3 COLLATE NOCASE, CAST('bge2l''oyx' AS TEXT)))<=((((((rt0.c1)AND(0.4159982431843925)))AND(rt0.c4)), LIKELIHOOD(rt0.c3, 0.7337760532258554), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(rt0.c6)))>(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c6)), rt0.c3 COLLATE NOCASE, CAST('bge2l''oyx' AS TEXT)))<=((((((rt0.c1)AND(0.4159982431843925)))AND(rt0.c4)), LIKELIHOOD(rt0.c3, 0.7337760532258554), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)&(rt0.c6)))>(((rt0.c3) IS FALSE)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c6)), rt0.c3 COLLATE NOCASE, CAST('bge2l''oyx' AS TEXT)))<=((((((rt0.c1)AND(0.4159982431843925)))AND(rt0.c4)), LIKELIHOOD(rt0.c3, 0.7337760532258554), ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c5))))) ASC  NULLS FIRST, (((rt0.c2)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t1 ON ((((t1.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((rt1.c1 IN (v0.c1, t1.c12)))) CROSS JOIN rt0 ON ((v0.c0)LIKE(v0.c2)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((((v0.c1) IS FALSE)) NOT NULL) WHERE ((((rt0.c2)%(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(rt1.c2)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON ((((t1.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((rt1.c1 IN (v0.c1, t1.c12)))) CROSS JOIN rt0 ON ((v0.c0)LIKE(v0.c2)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((((v0.c1) IS FALSE)) NOT NULL));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t1 ON ((((t1.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((rt1.c1 IN (v0.c1, t1.c12)))) CROSS JOIN rt0 ON ((v0.c0)LIKE(v0.c2)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((((v0.c1) IS FALSE)) NOT NULL) WHERE ((((rt0.c2)%(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)%(rt1.c2)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON ((((t1.c1)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c3) IS FALSE)) AND ((rt1.c1 IN (v0.c1, t1.c12)))) CROSS JOIN rt0 ON ((v0.c0)LIKE(v0.c2)) COLLATE BINARY RIGHT OUTER JOIN rt1 ON ((((v0.c1) IS FALSE)) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS REAL));
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt0.c0))<>((t1.c4))))OR(((rt0.c2) ISNULL))))AND(-7.17485917E8)));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))<>((t1.c4))))OR(((rt0.c2) ISNULL))))AND(-7.17485917E8))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt0.c0))<>((t1.c4))))OR(((rt0.c2) ISNULL))))AND(-7.17485917E8)));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))<>((t1.c4))))OR(((rt0.c2) ISNULL))))AND(-7.17485917E8))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((((((rt0.c0))<>((t1.c4))))OR(((rt0.c2) ISNULL))))AND(-7.17485917E8)));
SELECT ALL COUNT(*) FROM rt1, t1, v0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c12  WHEN t1.c1 THEN t1.c1 ELSE rt1.c1 END WHEN (t1.c3 IN (rt0.c0)) THEN ((rt0.c0) BETWEEN (t1.c4) AND (x'819e')) WHEN (((rt1.c2, rt0.c0, rt0.c6)) BETWEEN ((rt0.c1, t1.c0, rt0.c2)) AND (('l\rX*', rt0.c5, rt0.c3))) THEN CASE rt0.c1  WHEN t1.c1 THEN rt0.c3 END ELSE ((t1.c3) NOTNULL) END, (((('AzJ('))=((t1.c1))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c12  WHEN t1.c1 THEN t1.c1 ELSE rt1.c1 END WHEN (t1.c3 IN (rt0.c0)) THEN ((rt0.c0) BETWEEN (t1.c4) AND (x'819e')) WHEN (((rt1.c2, rt0.c0, rt0.c6)) BETWEEN ((rt0.c1, t1.c0, rt0.c2)) AND (('l\rX*', rt0.c5, rt0.c3))) THEN CASE rt0.c1  WHEN t1.c1 THEN rt0.c3 END ELSE ((t1.c3) NOTNULL) END, (((('AzJ('))==((t1.c1))) IN ()));
SELECT ALL COUNT(*) FROM rt1, t1, v0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c12  WHEN t1.c1 THEN t1.c1 ELSE rt1.c1 END WHEN (t1.c3 IN (rt0.c0)) THEN ((rt0.c0) BETWEEN (t1.c4) AND (x'819e')) WHEN (((rt1.c2, rt0.c0, rt0.c6)) BETWEEN ((rt0.c1, t1.c0, rt0.c2)) AND (('l\rX*', rt0.c5, rt0.c3))) THEN CASE rt0.c1  WHEN t1.c1 THEN rt0.c3 END ELSE ((t1.c3) NOTNULL) END, (((('AzJ('))=((t1.c1))) IN ());
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ())) IS TRUE)  as count FROM rt1, t1, v0, rt0 ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c12  WHEN t1.c1 THEN t1.c1 ELSE rt1.c1 END WHEN (t1.c3 IN (rt0.c0)) THEN ((rt0.c0) BETWEEN (t1.c4) AND (x'819e')) WHEN (((rt1.c2, rt0.c0, rt0.c6)) BETWEEN ((rt0.c1, t1.c0, rt0.c2)) AND (('l\rX*', rt0.c5, rt0.c3))) THEN CASE rt0.c1  WHEN t1.c1 THEN rt0.c3 END ELSE ((t1.c3) NOTNULL) END, (((('AzJ('))==((t1.c1))) IN ()));
SELECT ALL COUNT(*) FROM rt1, t1, v0, rt0 WHERE ((rt0.c3 IN ())) ORDER BY CASE WHEN CAST(rt0.c1 AS REAL) THEN CASE t1.c12  WHEN t1.c1 THEN t1.c1 ELSE rt1.c1 END WHEN (t1.c3 IN (rt0.c0)) THEN ((rt0.c0) BETWEEN (t1.c4) AND (x'819e')) WHEN (((rt1.c2, rt0.c0, rt0.c6)) BETWEEN ((rt0.c1, t1.c0, rt0.c2)) AND (('l\rX*', rt0.c5, rt0.c3))) THEN CASE rt0.c1  WHEN t1.c1 THEN rt0.c3 END ELSE ((t1.c3) NOTNULL) END, (((('AzJ('))=((t1.c1))) IN ());
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c0)) IN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'b6a1' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS NOT(rt1.c0)) IN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'b6a1' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c0)) IN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'b6a1' ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)IS NOT(rt1.c0)) IN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'b6a1' ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1)IS NOT(rt1.c0)) IN (CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN x'b6a1' ELSE rt1.c0 END)));
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON (+ ((((0.16682949855306894, v0.c1, t1.c3, rt1.c2, v0.c0)) BETWEEN ((t1.c12, t1.c2, v0.c0, v0.c1, rt1.c1)) AND ((rt1.c2, '', t1.c4, rt1.c0, '946263039'))))) WHERE (CASE WHEN (((rt1.c1, t1.c1, rt1.c2))!=((t1.c2, v0.c1, t1.c0))) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE 1323720747  WHEN v0.c1 THEN NULL ELSE v0.c1 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN ('摌ꙍ' IN (t1.c12)) THEN rt1.c1 WHEN CAST(t1.c2 AS REAL) THEN (('349873079')GLOB(v0.c1)) WHEN SQLITE_SOURCE_ID() THEN ((t1.c2)AND('')) ELSE ((t1.c2)||(t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c1, t1.c1, rt1.c2))!=((t1.c2, v0.c1, t1.c0))) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE 1323720747  WHEN v0.c1 THEN NULL ELSE v0.c1 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN ('摌ꙍ' IN (t1.c12)) THEN rt1.c1 WHEN CAST(t1.c2 AS REAL) THEN (('349873079')GLOB(v0.c1)) WHEN SQLITE_SOURCE_ID() THEN ((t1.c2)AND('')) ELSE ((t1.c2)||(t1.c4)) END) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN v0 ON (+ ((((0.16682949855306894, v0.c1, t1.c3, rt1.c2, v0.c0)) BETWEEN ((t1.c12, t1.c2, v0.c0, v0.c1, rt1.c1)) AND ((rt1.c2, '', t1.c4, rt1.c0, '946263039'))))));
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON (+ ((((0.16682949855306894, v0.c1, t1.c3, rt1.c2, v0.c0)) BETWEEN ((t1.c12, t1.c2, v0.c0, v0.c1, rt1.c1)) AND ((rt1.c2, '', t1.c4, rt1.c0, '946263039'))))) WHERE (CASE WHEN (((rt1.c1, t1.c1, rt1.c2))!=((t1.c2, v0.c1, t1.c0))) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE 1323720747  WHEN v0.c1 THEN NULL ELSE v0.c1 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN ('摌ꙍ' IN (t1.c12)) THEN rt1.c1 WHEN CAST(t1.c2 AS REAL) THEN (('349873079')GLOB(v0.c1)) WHEN SQLITE_SOURCE_ID() THEN ((t1.c2)AND('')) ELSE ((t1.c2)||(t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt1.c1, t1.c1, rt1.c2))!=((t1.c2, v0.c1, t1.c0))) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE 1323720747  WHEN v0.c1 THEN NULL ELSE v0.c1 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN ('摌ꙍ' IN (t1.c12)) THEN rt1.c1 WHEN CAST(t1.c2 AS REAL) THEN (('349873079')GLOB(v0.c1)) WHEN SQLITE_SOURCE_ID() THEN ((t1.c2)AND('')) ELSE ((t1.c2)||(t1.c4)) END) IS TRUE)  as count FROM t1, rt1 LEFT OUTER JOIN v0 ON (+ ((((0.16682949855306894, v0.c1, t1.c3, rt1.c2, v0.c0)) BETWEEN ((t1.c12, t1.c2, v0.c0, v0.c1, rt1.c1)) AND ((rt1.c2, '', t1.c4, rt1.c0, '946263039'))))));
SELECT * FROM t1, rt1 LEFT OUTER JOIN v0 ON (+ ((((0.16682949855306894, v0.c1, t1.c3, rt1.c2, v0.c0)) BETWEEN ((t1.c12, t1.c2, v0.c0, v0.c1, rt1.c1)) AND ((rt1.c2, '', t1.c4, rt1.c0, '946263039'))))) WHERE (CASE WHEN (((rt1.c1, t1.c1, rt1.c2))!=((t1.c2, v0.c1, t1.c0))) THEN CAST(rt1.c0 AS NUMERIC) WHEN CASE 1323720747  WHEN v0.c1 THEN NULL ELSE v0.c1 END THEN CASE WHEN rt1.c1 THEN rt1.c0 END WHEN ('摌ꙍ' IN (t1.c12)) THEN rt1.c1 WHEN CAST(t1.c2 AS REAL) THEN (('349873079')GLOB(v0.c1)) WHEN SQLITE_SOURCE_ID() THEN ((t1.c2)AND('')) ELSE ((t1.c2)||(t1.c4)) END);
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1, rt0, v0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, v0, rt1 WHERE (x'');
SELECT COUNT(*) FROM t1, rt1, v0 CROSS JOIN rt0 ON 0.18599077932247687 WHERE (((((rt0.c1, v0.c2, '1073714113')) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c0)) AND ((0X3ad3d411, rt0.c3, t1.c1))) IN (rt1.c0, (((t1.c12)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, v0.c2, '1073714113')) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c0)) AND ((0X3ad3d411, rt0.c3, t1.c1))) IN (rt1.c0, (((t1.c12)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t1, rt1, v0 CROSS JOIN rt0 ON 0.18599077932247687);
SELECT COUNT(*) FROM t1, rt1, v0 CROSS JOIN rt0 ON 0.18599077932247687 WHERE (((((rt0.c1, v0.c2, '1073714113')) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c0)) AND ((0X3ad3d411, rt0.c3, t1.c1))) IN (rt1.c0, (((t1.c12)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, v0.c2, '1073714113')) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c0)) AND ((0X3ad3d411, rt0.c3, t1.c1))) IN (rt1.c0, (((t1.c12)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t1, rt1, v0 CROSS JOIN rt0 ON 0.18599077932247687);
SELECT COUNT(*) FROM t1, rt1, v0 CROSS JOIN rt0 ON 0.18599077932247687 WHERE (((((rt0.c1, v0.c2, '1073714113')) NOT BETWEEN ((rt0.c1, v0.c0, rt0.c0)) AND ((0X3ad3d411, rt0.c3, t1.c1))) IN (rt1.c0, (((t1.c12)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0))))));
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL))|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))|(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL))|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))|(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOTNULL))|(rt0.c2)));
SELECT COUNT(*) FROM t1, rt0 INDEXED BY i10, v0, rt1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS REAL)) ORDER BY NULLIF(rt0.c6, ((rt0.c0)<<(t1.c12))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c2 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1, rt0 INDEXED BY i10, v0, rt1 ORDER BY NULLIF(rt0.c6, ((rt0.c0)<<(t1.c12))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 INDEXED BY i10, v0, rt1 WHERE (CAST(CAST(t1.c2 AS NUMERIC) AS REAL)) ORDER BY NULLIF(rt0.c6, ((rt0.c0)<<(t1.c12))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c2 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM t1, rt0 INDEXED BY i10, v0, rt1 ORDER BY NULLIF(rt0.c6, ((rt0.c0)<<(t1.c12))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (((('-970779874')&(t1.c12)) IN (t1.c1 COLLATE RTRIM, LIKE(t1.c2, t1.c2, '-'), ((t1.c12) NOT BETWEEN (t1.c0) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((('-970779874')&(t1.c12)) IN (t1.c1 COLLATE RTRIM, LIKE(t1.c2, t1.c2, '-'), ((t1.c12) NOT BETWEEN (t1.c0) AND (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((('-970779874')&(t1.c12)) IN (t1.c1 COLLATE RTRIM, LIKE(t1.c2, t1.c2, '-'), ((t1.c12) NOT BETWEEN (t1.c0) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((('-970779874')&(t1.c12)) IN (t1.c1 COLLATE RTRIM, LIKE(t1.c2, t1.c2, '-'), ((t1.c12) NOT BETWEEN (t1.c0) AND (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((('-970779874')&(t1.c12)) IN (t1.c1 COLLATE RTRIM, LIKE(t1.c2, t1.c2, '-'), ((t1.c12) NOT BETWEEN (t1.c0) AND (t1.c1)))));
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE (((((t1.c3) NOT BETWEEN (rt0.c6) AND (rt1.c2))) BETWEEN (0X34056763 COLLATE RTRIM) AND ((- (rt1.c1))))) ORDER BY TRIM(((((t1.c0)AND(rt0.c4)))AND(rt1.c1)), CASE 0xffffffff8cb4bd6b  WHEN rt0.c0 THEN v0.c1 ELSE t1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3) NOT BETWEEN (rt0.c6) AND (rt1.c2))) BETWEEN (0x34056763 COLLATE RTRIM) AND ((- (rt1.c1))))) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY TRIM(((((t1.c0)AND(rt0.c4)))AND(rt1.c1)), CASE 0Xffffffff8cb4bd6b  WHEN rt0.c0 THEN v0.c1 ELSE t1.c0 END) DESC);
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE (((((t1.c3) NOT BETWEEN (rt0.c6) AND (rt1.c2))) BETWEEN (0X34056763 COLLATE RTRIM) AND ((- (rt1.c1))))) ORDER BY TRIM(((((t1.c0)AND(rt0.c4)))AND(rt1.c1)), CASE 0xffffffff8cb4bd6b  WHEN rt0.c0 THEN v0.c1 ELSE t1.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c3) NOT BETWEEN (rt0.c6) AND (rt1.c2))) BETWEEN (0x34056763 COLLATE RTRIM) AND ((- (rt1.c1))))) IS TRUE)  as count FROM v0, rt0, t1, rt1 ORDER BY TRIM(((((t1.c0)AND(rt0.c4)))AND(rt1.c1)), CASE 0Xffffffff8cb4bd6b  WHEN rt0.c0 THEN v0.c1 ELSE t1.c0 END) DESC);
SELECT ALL * FROM v0, rt0, t1, rt1 WHERE (((((t1.c3) NOT BETWEEN (rt0.c6) AND (rt1.c2))) BETWEEN (0X34056763 COLLATE RTRIM) AND ((- (rt1.c1))))) ORDER BY TRIM(((((t1.c0)AND(rt0.c4)))AND(rt1.c1)), CASE 0xffffffff8cb4bd6b  WHEN rt0.c0 THEN v0.c1 ELSE t1.c0 END) DESC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TYPEOF(((((v0.c0)AND(rt1.c1)))AND(x'')))) ORDER BY (+ (((rt1.c1)<(v0.c1))))  NULLS LAST, UNLIKELY(DISTINCT '-1887523468');
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((v0.c0)AND(rt1.c1)))AND(x'')))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((rt1.c1)<(v0.c1))))  NULLS LAST, UNLIKELY(DISTINCT '-1887523468'));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TYPEOF(((((v0.c0)AND(rt1.c1)))AND(x'')))) ORDER BY (+ (((rt1.c1)<(v0.c1))))  NULLS LAST, UNLIKELY(DISTINCT '-1887523468');
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((v0.c0)AND(rt1.c1)))AND(x'')))) IS TRUE)  as count FROM rt1, v0 ORDER BY (+ (((rt1.c1)<(v0.c1))))  NULLS LAST, UNLIKELY(DISTINCT '-1887523468'));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (TYPEOF(((((v0.c0)AND(rt1.c1)))AND(x'')))) ORDER BY (+ (((rt1.c1)<(v0.c1))))  NULLS LAST, UNLIKELY(DISTINCT '-1887523468');
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND((t1.c1 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND((t1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND((t1.c1 IN ())))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((((t1.c0)OR(t1.c2)))OR(t1.c1)))AND((t1.c1 IN ()))));
SELECT * FROM t1 CROSS JOIN v0 ON LOWER(DISTINCT t1.c12) WHERE ((NOT ('902727320')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('902727320'))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON LOWER(DISTINCT t1.c12));
SELECT * FROM t1 CROSS JOIN v0 ON LOWER(DISTINCT t1.c12) WHERE ((NOT ('902727320')));
SELECT SUM(count) FROM (SELECT ALL (((NOT ('902727320'))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON LOWER(DISTINCT t1.c12));
SELECT * FROM t1 CROSS JOIN v0 ON LOWER(DISTINCT t1.c12) WHERE ((NOT ('902727320')));
SELECT * FROM rt1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t1.c2 END  WHEN 0x7c0a5ad4 THEN LIKELIHOOD(DISTINCT rt0.c6, 0.3818626284346953) END CROSS JOIN t1 ON CASE WHEN ((t1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) THEN 2.104641615E9 ELSE (rt0.c6 IN (t1.c3)) END WHERE (ROUND((rt1.c0 IN ()), ((t1.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((rt1.c0 IN ()), ((t1.c4) ISNULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t1.c2 END  WHEN 0X7c0a5ad4 THEN LIKELIHOOD(DISTINCT rt0.c6, 0.3818626284346953) END CROSS JOIN t1 ON CASE WHEN ((t1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) THEN 2.104641615E9 ELSE (rt0.c6 IN (t1.c3)) END);
SELECT * FROM rt1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t1.c2 END  WHEN 0x7c0a5ad4 THEN LIKELIHOOD(DISTINCT rt0.c6, 0.3818626284346953) END CROSS JOIN t1 ON CASE WHEN ((t1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) THEN 2.104641615E9 ELSE (rt0.c6 IN (t1.c3)) END WHERE (ROUND((rt1.c0 IN ()), ((t1.c4) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((ROUND((rt1.c0 IN ()), ((t1.c4) ISNULL))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t1.c2 END  WHEN 0X7c0a5ad4 THEN LIKELIHOOD(DISTINCT rt0.c6, 0.3818626284346953) END CROSS JOIN t1 ON CASE WHEN ((t1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) THEN 2.104641615E9 ELSE (rt0.c6 IN (t1.c3)) END);
SELECT * FROM rt1 CROSS JOIN rt0 ON CASE CASE WHEN rt0.c1 THEN t1.c2 END  WHEN 0x7c0a5ad4 THEN LIKELIHOOD(DISTINCT rt0.c6, 0.3818626284346953) END CROSS JOIN t1 ON CASE WHEN ((t1.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) THEN 2.104641615E9 ELSE (rt0.c6 IN (t1.c3)) END WHERE (ROUND((rt1.c0 IN ()), ((t1.c4) ISNULL)));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN t1 ON ((t1.c2) IS TRUE) FULL OUTER JOIN rt1 ON (CAST(rt1.c1 AS BLOB) IN ()) WHERE ((((('') BETWEEN (0.9266932640114373) AND (t1.c3)))+(CAST(rt0.c6 AS INTEGER)))) ORDER BY (((rt0.c1, rt0.c0, t1.c0)) BETWEEN ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), ((rt1.c2)IS(rt1.c1)), ((rt0.c6) BETWEEN (rt0.c1) AND (t1.c4)))) AND ((((((((((v0.c2)AND(rt0.c6)))AND(rt0.c6)))OR(v0.c0)))OR(rt0.c0)), LIKELIHOOD(DISTINCT rt1.c1, 0.7705663828028944), ((rt0.c3)-(rt0.c0))))), ((((t1.c1)||(rt0.c1))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.09055139286217018)) AND (CASE rt0.c1  WHEN -1.982944248E9 THEN t1.c2 END)) DESC, (((rt1.c0)) BETWEEN (((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((t1.c4))))) AND (((NULL IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (0.9266932640114373) AND (t1.c3)))+(CAST(rt0.c6 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN t1 ON ((t1.c2) IS TRUE) FULL OUTER JOIN rt1 ON (CAST(rt1.c1 AS BLOB) IN ()) ORDER BY (((rt0.c1, rt0.c0, t1.c0)) BETWEEN ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), ((rt1.c2)IS(rt1.c1)), ((rt0.c6) BETWEEN (rt0.c1) AND (t1.c4)))) AND ((((((((((v0.c2)AND(rt0.c6)))AND(rt0.c6)))OR(v0.c0)))OR(rt0.c0)), LIKELIHOOD(DISTINCT rt1.c1, 0.7705663828028944), ((rt0.c3)-(rt0.c0))))), ((((t1.c1)||(rt0.c1))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.09055139286217018)) AND (CASE rt0.c1  WHEN -1.982944248E9 THEN t1.c2 END)) DESC, (((rt1.c0)) BETWEEN (((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((t1.c4))))) AND (((NULL IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN t1 ON ((t1.c2) IS TRUE) FULL OUTER JOIN rt1 ON (CAST(rt1.c1 AS BLOB) IN ()) WHERE ((((('') BETWEEN (0.9266932640114373) AND (t1.c3)))+(CAST(rt0.c6 AS INTEGER)))) ORDER BY (((rt0.c1, rt0.c0, t1.c0)) BETWEEN ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), ((rt1.c2)IS(rt1.c1)), ((rt0.c6) BETWEEN (rt0.c1) AND (t1.c4)))) AND ((((((((((v0.c2)AND(rt0.c6)))AND(rt0.c6)))OR(v0.c0)))OR(rt0.c0)), LIKELIHOOD(DISTINCT rt1.c1, 0.7705663828028944), ((rt0.c3)-(rt0.c0))))), ((((t1.c1)||(rt0.c1))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.09055139286217018)) AND (CASE rt0.c1  WHEN -1.982944248E9 THEN t1.c2 END)) DESC, (((rt1.c0)) BETWEEN (((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((t1.c4))))) AND (((NULL IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('') BETWEEN (0.9266932640114373) AND (t1.c3)))+(CAST(rt0.c6 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 INNER JOIN t1 ON ((t1.c2) IS TRUE) FULL OUTER JOIN rt1 ON (CAST(rt1.c1 AS BLOB) IN ()) ORDER BY (((rt0.c1, rt0.c0, t1.c0)) BETWEEN ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), ((rt1.c2)IS(rt1.c1)), ((rt0.c6) BETWEEN (rt0.c1) AND (t1.c4)))) AND ((((((((((v0.c2)AND(rt0.c6)))AND(rt0.c6)))OR(v0.c0)))OR(rt0.c0)), LIKELIHOOD(DISTINCT rt1.c1, 0.7705663828028944), ((rt0.c3)-(rt0.c0))))), ((((t1.c1)||(rt0.c1))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.09055139286217018)) AND (CASE rt0.c1  WHEN -1.982944248E9 THEN t1.c2 END)) DESC, (((rt1.c0)) BETWEEN (((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((t1.c4))))) AND (((NULL IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN t1 ON ((t1.c2) IS TRUE) FULL OUTER JOIN rt1 ON (CAST(rt1.c1 AS BLOB) IN ()) WHERE ((((('') BETWEEN (0.9266932640114373) AND (t1.c3)))+(CAST(rt0.c6 AS INTEGER)))) ORDER BY (((rt0.c1, rt0.c0, t1.c0)) BETWEEN ((((v0.c1) NOT BETWEEN (t1.c0) AND (t1.c2)), ((rt1.c2)IS(rt1.c1)), ((rt0.c6) BETWEEN (rt0.c1) AND (t1.c4)))) AND ((((((((((v0.c2)AND(rt0.c6)))AND(rt0.c6)))OR(v0.c0)))OR(rt0.c0)), LIKELIHOOD(DISTINCT rt1.c1, 0.7705663828028944), ((rt0.c3)-(rt0.c0))))), ((((t1.c1)||(rt0.c1))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c4, 0.09055139286217018)) AND (CASE rt0.c1  WHEN -1.982944248E9 THEN t1.c2 END)) DESC, (((rt1.c0)) BETWEEN (((((rt0.c5)) NOT BETWEEN ((NULL)) AND ((t1.c4))))) AND (((NULL IN ()))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, 8.22736185E8)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)||(rt1.c0)), (((rt1.c2, 0.8684585629850692, rt1.c2, rt1.c0, rt1.c0))>=((0.12606543413755777, rt1.c2, rt1.c1, rt1.c0, rt1.c1))))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c0)|(rt1.c2)), CASE WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, 8.22736185E8)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)||(rt1.c0)), (((rt1.c2, 0.8684585629850692, rt1.c2, rt1.c0, rt1.c0))>=((0.12606543413755777, rt1.c2, rt1.c1, rt1.c0, rt1.c1))))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c0)|(rt1.c2)), CASE WHEN rt1.c1 THEN x'' ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, 8.22736185E8)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)||(rt1.c0)), (((rt1.c2, 0.8684585629850692, rt1.c2, rt1.c0, rt1.c0))>=((0.12606543413755777, rt1.c2, rt1.c1, rt1.c0, rt1.c1))))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c0)|(rt1.c2)), CASE WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, 8.22736185E8)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)||(rt1.c0)), (((rt1.c2, 0.8684585629850692, rt1.c2, rt1.c0, rt1.c0))>=((0.12606543413755777, rt1.c2, rt1.c1, rt1.c0, rt1.c1))))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c0)|(rt1.c2)), CASE WHEN rt1.c1 THEN x'' ELSE rt1.c0 END)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c0, 8.22736185E8)) NOT BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c0)||(rt1.c0)), (((rt1.c2, 0.8684585629850692, rt1.c2, rt1.c0, rt1.c0))>=((0.12606543413755777, rt1.c2, rt1.c1, rt1.c0, rt1.c1))))) AND ((CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END, ((rt1.c0)|(rt1.c2)), CASE WHEN rt1.c1 THEN x'' ELSE rt1.c0 END))));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((t1.c1 COLLATE RTRIM)GLOB((- (v0.c0)))) RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (t1.c1) AND (x'862a'))) NOTNULL) WHERE (ABS(DISTINCT ((t1.c12)%(t1.c0)))) ORDER BY RTRIM(((rt1.c1) BETWEEN (t1.c2) AND (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c12)%(t1.c0)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((t1.c1 COLLATE RTRIM)GLOB((- (v0.c0)))) RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (t1.c1) AND (x'862a'))) NOTNULL) ORDER BY RTRIM(((rt1.c1) BETWEEN (t1.c2) AND (v0.c0))) ASC);
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON ((t1.c1 COLLATE RTRIM)GLOB((- (v0.c0)))) RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (t1.c1) AND (x'862a'))) NOTNULL) WHERE (ABS(DISTINCT ((t1.c12)%(t1.c0)))) ORDER BY RTRIM(((rt1.c1) BETWEEN (t1.c2) AND (v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((t1.c12)%(t1.c0)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((t1.c1 COLLATE RTRIM)GLOB((- (v0.c0)))) RIGHT OUTER JOIN v0 ON ((((v0.c2) BETWEEN (t1.c1) AND (x'862a'))) NOTNULL) ORDER BY RTRIM(((rt1.c1) BETWEEN (t1.c2) AND (v0.c0))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 INDEXED BY i10, v0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t1, rt0 INDEXED BY i10, v0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0 INDEXED BY i10, v0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t1, rt0 INDEXED BY i10, v0, rt1);
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE ((NOT ((('-482809213') NOT BETWEEN (t1.c0) AND (t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('-482809213') NOT BETWEEN (t1.c0) AND (t1.c4))))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE ((NOT ((('-482809213') NOT BETWEEN (t1.c0) AND (t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((('-482809213') NOT BETWEEN (t1.c0) AND (t1.c4))))) IS TRUE)  as count FROM rt1, v0, t1, rt0);
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE ((NOT ((('-482809213') NOT BETWEEN (t1.c0) AND (t1.c4)))));
SELECT * FROM rt0, t1 WHERE (((((((((json(rt0.c4))AND((((rt0.c6))=((t1.c1))))))AND(CAST(t1.c4 AS REAL))))AND((- (rt0.c0)))))AND(((rt0.c6)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((json(rt0.c4))AND((((rt0.c6))==((t1.c1))))))AND(CAST(t1.c4 AS REAL))))AND((- (rt0.c0)))))AND(((rt0.c6)>(rt0.c3))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((((json(rt0.c4))AND((((rt0.c6))=((t1.c1))))))AND(CAST(t1.c4 AS REAL))))AND((- (rt0.c0)))))AND(((rt0.c6)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((((((json(rt0.c4))AND((((rt0.c6))==((t1.c1))))))AND(CAST(t1.c4 AS REAL))))AND((- (rt0.c0)))))AND(((rt0.c6)>(rt0.c3))))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((((((((json(rt0.c4))AND((((rt0.c6))=((t1.c1))))))AND(CAST(t1.c4 AS REAL))))AND((- (rt0.c0)))))AND(((rt0.c6)>(rt0.c3)))));
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (x'') ORDER BY ((rt0.c0 COLLATE BINARY) NOT NULL)  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 CROSS JOIN v0 ON CAST((~ (NULL)) AS TEXT) WHERE (((rt0.c4)<>(json_array_length(-1584319981))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)<>(json_array_length(-1584319981)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 CROSS JOIN v0 ON CAST((~ (NULL)) AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 CROSS JOIN v0 ON CAST((~ (NULL)) AS TEXT) WHERE (((rt0.c4)<>(json_array_length(-1584319981))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)<>(json_array_length(-1584319981)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 CROSS JOIN v0 ON CAST((~ (NULL)) AS TEXT));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON rt0.c0 CROSS JOIN v0 ON CAST((~ (NULL)) AS TEXT) WHERE (((rt0.c4)<>(json_array_length(-1584319981))));
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((v0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((v0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((((v0.c2) ISNULL) IN ()));
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (((CAST(t1.c4 AS INTEGER)))<>((((t1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) WHERE (CASE (t1.c1 IN ())  WHEN (rt0.c2 IN ()) THEN (- (t1.c1)) WHEN ((t1.c2)%(t1.c2)) THEN (rt0.c3 IN ()) WHEN CAST(NULL AS NUMERIC) THEN NULL WHEN ((t1.c3)<=(x'')) THEN v0.c0 WHEN CASE t1.c1  WHEN v0.c1 THEN t1.c4 WHEN 0Xffffffffb10c4bd2 THEN t1.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN v0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 END THEN (((v0.c1, v0.c2, x''))>=((t1.c4, 0.03315730980603038, v0.c2))) ELSE (((rt0.c6))<((rt0.c5))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c1 IN ())  WHEN (rt0.c2 IN ()) THEN (- (t1.c1)) WHEN ((t1.c2)%(t1.c2)) THEN (rt0.c3 IN ()) WHEN CAST(NULL AS NUMERIC) THEN NULL WHEN ((t1.c3)<=(x'')) THEN v0.c0 WHEN CASE t1.c1  WHEN v0.c1 THEN t1.c4 WHEN 0xffffffffb10c4bd2 THEN t1.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN v0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 END THEN (((v0.c1, v0.c2, x''))>=((t1.c4, 0.03315730980603038, v0.c2))) ELSE (((rt0.c6))<((rt0.c5))) END) IS TRUE)  as count FROM t1, v0 INNER JOIN rt0 ON (((CAST(t1.c4 AS INTEGER)))!=((((t1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))))));
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (((CAST(t1.c4 AS INTEGER)))<>((((t1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) WHERE (CASE (t1.c1 IN ())  WHEN (rt0.c2 IN ()) THEN (- (t1.c1)) WHEN ((t1.c2)%(t1.c2)) THEN (rt0.c3 IN ()) WHEN CAST(NULL AS NUMERIC) THEN NULL WHEN ((t1.c3)<=(x'')) THEN v0.c0 WHEN CASE t1.c1  WHEN v0.c1 THEN t1.c4 WHEN 0Xffffffffb10c4bd2 THEN t1.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN v0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 END THEN (((v0.c1, v0.c2, x''))>=((t1.c4, 0.03315730980603038, v0.c2))) ELSE (((rt0.c6))<((rt0.c5))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t1.c1 IN ())  WHEN (rt0.c2 IN ()) THEN (- (t1.c1)) WHEN ((t1.c2)%(t1.c2)) THEN (rt0.c3 IN ()) WHEN CAST(NULL AS NUMERIC) THEN NULL WHEN ((t1.c3)<=(x'')) THEN v0.c0 WHEN CASE t1.c1  WHEN v0.c1 THEN t1.c4 WHEN 0xffffffffb10c4bd2 THEN t1.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN v0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 END THEN (((v0.c1, v0.c2, x''))>=((t1.c4, 0.03315730980603038, v0.c2))) ELSE (((rt0.c6))<((rt0.c5))) END) IS TRUE)  as count FROM t1, v0 INNER JOIN rt0 ON (((CAST(t1.c4 AS INTEGER)))!=((((t1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))))));
SELECT COUNT(*) FROM t1, v0 INNER JOIN rt0 ON (((CAST(t1.c4 AS INTEGER)))<>((((t1.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) WHERE (CASE (t1.c1 IN ())  WHEN (rt0.c2 IN ()) THEN (- (t1.c1)) WHEN ((t1.c2)%(t1.c2)) THEN (rt0.c3 IN ()) WHEN CAST(NULL AS NUMERIC) THEN NULL WHEN ((t1.c3)<=(x'')) THEN v0.c0 WHEN CASE t1.c1  WHEN v0.c1 THEN t1.c4 WHEN 0Xffffffffb10c4bd2 THEN t1.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN v0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c2 END THEN (((v0.c1, v0.c2, x''))>=((t1.c4, 0.03315730980603038, v0.c2))) ELSE (((rt0.c6))<((rt0.c5))) END);
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON ((((~ (rt0.c4))))==((((rt0.c4) BETWEEN (rt0.c6) AND (v0.c0))))) WHERE (CASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (0xffffffffa12ce3cb)) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN LIKE(rt1.c1, rt0.c2, '0') WHEN (~ (rt1.c0)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (0xffffffffa12ce3cb)) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN LIKE(rt1.c1, rt0.c2, '0') WHEN (~ (rt1.c0)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON ((((~ (rt0.c4))))==((((rt0.c4) BETWEEN (rt0.c6) AND (v0.c0))))));
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON ((((~ (rt0.c4))))==((((rt0.c4) BETWEEN (rt0.c6) AND (v0.c0))))) WHERE (CASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (0xffffffffa12ce3cb)) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN LIKE(rt1.c1, rt0.c2, '0') WHEN (~ (rt1.c0)) THEN rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (0xffffffffa12ce3cb)) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN LIKE(rt1.c1, rt0.c2, '0') WHEN (~ (rt1.c0)) THEN rt1.c1 END) IS TRUE)  as count FROM rt1, v0 INNER JOIN rt0 ON ((((~ (rt0.c4))))==((((rt0.c4) BETWEEN (rt0.c6) AND (v0.c0))))));
SELECT ALL * FROM rt1, v0 INNER JOIN rt0 ON ((((~ (rt0.c4))))==((((rt0.c4) BETWEEN (rt0.c6) AND (v0.c0))))) WHERE (CASE WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1) BETWEEN (rt0.c0) AND (0xffffffffa12ce3cb)) WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c0)) THEN LIKE(rt1.c1, rt0.c2, '0') WHEN (~ (rt1.c0)) THEN rt1.c1 END);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY ((((0.18834036113619823) BETWEEN (rt1.c1) AND (rt1.c1)))!=(rt1.c1 COLLATE NOCASE))  NULLS LAST, ((rt1.c1) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((0.18834036113619823) BETWEEN (rt1.c1) AND (rt1.c1)))<>(rt1.c1 COLLATE NOCASE))  NULLS LAST, ((rt1.c1) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY ((((0.18834036113619823) BETWEEN (rt1.c1) AND (rt1.c1)))!=(rt1.c1 COLLATE NOCASE))  NULLS LAST, ((rt1.c1) IS FALSE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY ((((0.18834036113619823) BETWEEN (rt1.c1) AND (rt1.c1)))<>(rt1.c1 COLLATE NOCASE))  NULLS LAST, ((rt1.c1) IS FALSE) COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE ((~ (((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY ((((0.18834036113619823) BETWEEN (rt1.c1) AND (rt1.c1)))!=(rt1.c1 COLLATE NOCASE))  NULLS LAST, ((rt1.c1) IS FALSE) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN ((((v0.c0)OR(28399340)))OR(v0.c0)) THEN UPPER(rt0.c3) END WHERE ((((NULL IN ()))-(v0.c2 COLLATE BINARY))) ORDER BY ((load_extension(rt0.c4, v0.c0))||(0.7827694533184839))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))-(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN ((((v0.c0)OR(28399340)))OR(v0.c0)) THEN UPPER(rt0.c3) END ORDER BY ((load_extension(rt0.c4, v0.c0))||(0.7827694533184839))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN ((((v0.c0)OR(28399340)))OR(v0.c0)) THEN UPPER(rt0.c3) END WHERE ((((NULL IN ()))-(v0.c2 COLLATE BINARY))) ORDER BY ((load_extension(rt0.c4, v0.c0))||(0.7827694533184839))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ()))-(v0.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN ((((v0.c0)OR(28399340)))OR(v0.c0)) THEN UPPER(rt0.c3) END ORDER BY ((load_extension(rt0.c4, v0.c0))||(0.7827694533184839))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN rt0 ON CASE rt0.c3  WHEN ((((v0.c0)OR(28399340)))OR(v0.c0)) THEN UPPER(rt0.c3) END WHERE ((((NULL IN ()))-(v0.c2 COLLATE BINARY))) ORDER BY ((load_extension(rt0.c4, v0.c0))||(0.7827694533184839))  NULLS FIRST;
SELECT * FROM t1 WHERE (((((((t1.c4)<=(t1.c2)))OR('*>w	')))AND((+ (t1.c3))))) ORDER BY ((t1.c2) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)<=(t1.c2)))OR('*>w	')))AND((+ (t1.c3))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOTNULL) DESC);
SELECT * FROM t1 WHERE (((((((t1.c4)<=(t1.c2)))OR('*>w	')))AND((+ (t1.c3))))) ORDER BY ((t1.c2) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)<=(t1.c2)))OR('*>w	')))AND((+ (t1.c3))))) IS TRUE)  as count FROM t1 ORDER BY ((t1.c2) NOTNULL) DESC);
SELECT * FROM t1 WHERE (((((((t1.c4)<=(t1.c2)))OR('*>w	')))AND((+ (t1.c3))))) ORDER BY ((t1.c2) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY 0.0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY 0.0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY 0.0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY 0.0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY 0.0  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (json(((rt1.c2) IS TRUE))) ORDER BY (('-1195094049')AND(CASE WHEN x'' THEN rt1.c0 END))  NULLS LAST, ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2) IS TRUE))) IS TRUE)  as count FROM rt1 ORDER BY (('-1195094049')AND(CASE WHEN x'' THEN rt1.c0 END))  NULLS LAST, ((rt1.c0 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (json(((rt1.c2) IS TRUE))) ORDER BY (('-1195094049')AND(CASE WHEN x'' THEN rt1.c0 END))  NULLS LAST, ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT SUM(count) FROM (SELECT ((json(((rt1.c2) IS TRUE))) IS TRUE)  as count FROM rt1 ORDER BY (('-1195094049')AND(CASE WHEN x'' THEN rt1.c0 END))  NULLS LAST, ((rt1.c0 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (json(((rt1.c2) IS TRUE))) ORDER BY (('-1195094049')AND(CASE WHEN x'' THEN rt1.c0 END))  NULLS LAST, ((rt1.c0 COLLATE BINARY) NOTNULL);
SELECT * FROM t1, v0, rt1 FULL OUTER JOIN rt0 ON ((((0x6325e747)&(rt0.c1))) NOT BETWEEN (((v0.c1)*(v0.c1))) AND ((~ (rt0.c4)))) WHERE (((((((t1.c4)AND(rt1.c0)))OR(((rt1.c0)AND(rt0.c0)))))OR('236869909'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)AND(rt1.c0)))OR(((rt1.c0)AND(rt0.c0)))))OR('236869909'))) IS TRUE)  as count FROM t1, v0, rt1 FULL OUTER JOIN rt0 ON ((((0x6325e747)&(rt0.c1))) NOT BETWEEN (((v0.c1)*(v0.c1))) AND ((~ (rt0.c4)))) ORDER BY rt1.c0 COLLATE RTRIM);
SELECT * FROM t1, v0, rt1 FULL OUTER JOIN rt0 ON ((((0x6325e747)&(rt0.c1))) NOT BETWEEN (((v0.c1)*(v0.c1))) AND ((~ (rt0.c4)))) WHERE (((((((t1.c4)AND(rt1.c0)))OR(((rt1.c0)AND(rt0.c0)))))OR('236869909'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c4)AND(rt1.c0)))OR(((rt1.c0)AND(rt0.c0)))))OR('236869909'))) IS TRUE)  as count FROM t1, v0, rt1 FULL OUTER JOIN rt0 ON ((((0x6325e747)&(rt0.c1))) NOT BETWEEN (((v0.c1)*(v0.c1))) AND ((~ (rt0.c4)))) ORDER BY rt1.c0 COLLATE RTRIM);
SELECT * FROM t1, v0, rt1 FULL OUTER JOIN rt0 ON ((((0x6325e747)&(rt0.c1))) NOT BETWEEN (((v0.c1)*(v0.c1))) AND ((~ (rt0.c4)))) WHERE (((((((t1.c4)AND(rt1.c0)))OR(((rt1.c0)AND(rt0.c0)))))OR('236869909'))) ORDER BY rt1.c0 COLLATE RTRIM;
SELECT * FROM v0, rt0 WHERE (((((((0xffffffffb2037028)<=(rt0.c5)))AND(COALESCE('-1395289699', rt0.c4))))AND((v0.c1 IN (rt0.c1))))) ORDER BY ((rt0.c3)<<(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffffb2037028)<=(rt0.c5)))AND(COALESCE('-1395289699', rt0.c4))))AND((v0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3)<<(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((((0xffffffffb2037028)<=(rt0.c5)))AND(COALESCE('-1395289699', rt0.c4))))AND((v0.c1 IN (rt0.c1))))) ORDER BY ((rt0.c3)<<(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0Xffffffffb2037028)<=(rt0.c5)))AND(COALESCE('-1395289699', rt0.c4))))AND((v0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c3)<<(v0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, rt0 WHERE (((((((0xffffffffb2037028)<=(rt0.c5)))AND(COALESCE('-1395289699', rt0.c4))))AND((v0.c1 IN (rt0.c1))))) ORDER BY ((rt0.c3)<<(v0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON LIKE(((t1.c3) IS FALSE), (t1.c3 IN ()), 'n') WHERE (((CAST(t1.c3 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON LIKE(((t1.c3) IS FALSE), (t1.c3 IN ()), 'n'));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON LIKE(((t1.c3) IS FALSE), (t1.c3 IN ()), 'n') WHERE (((CAST(t1.c3 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c3 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON LIKE(((t1.c3) IS FALSE), (t1.c3 IN ()), 'n'));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t1 ON LIKE(((t1.c3) IS FALSE), (t1.c3 IN ()), 'n') WHERE (((CAST(t1.c3 AS INTEGER)) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID();
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY LAST_INSERT_ROWID());
SELECT COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c3 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID();
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((v0.c1)<<(v0.c2)) AS NUMERIC)) ORDER BY (((rt1.c0 IN (v0.c2)))<=(-2125634038 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)<<(v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0 IN (v0.c2)))<=(-2125634038 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((v0.c1)<<(v0.c2)) AS NUMERIC)) ORDER BY (((rt1.c0 IN (v0.c2)))<=(-2125634038 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c1)<<(v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c0 IN (v0.c2)))<=(-2125634038 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CAST(((v0.c1)<<(v0.c2)) AS NUMERIC)) ORDER BY (((rt1.c0 IN (v0.c2)))<=(-2125634038 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN rt0.c2 ELSE CAST(v0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN rt0.c2 ELSE CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN rt0.c2 ELSE CAST(v0.c2 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN rt0.c2 ELSE CAST(v0.c2 AS INTEGER) END) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CASE rt0.c0  WHEN ((v0.c1) NOT BETWEEN (v0.c2) AND (rt0.c5)) THEN rt0.c2 ELSE CAST(v0.c2 AS INTEGER) END);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN v0 ON CAST(json_patch(t1.c1, rt0.c0) AS TEXT) WHERE (((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(x'')))OR(CASE t1.c3  WHEN t1.c2 THEN rt0.c4 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(x'')))OR(CASE t1.c3  WHEN t1.c2 THEN rt0.c4 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN v0 ON CAST(json_patch(t1.c1, rt0.c0) AS TEXT));
SELECT * FROM rt0, t1 RIGHT OUTER JOIN v0 ON CAST(json_patch(t1.c1, rt0.c0) AS TEXT) WHERE (((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(x'')))OR(CASE t1.c3  WHEN t1.c2 THEN rt0.c4 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(x'')))OR(CASE t1.c3  WHEN t1.c2 THEN rt0.c4 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN v0 ON CAST(json_patch(t1.c1, rt0.c0) AS TEXT));
SELECT * FROM rt0, t1 RIGHT OUTER JOIN v0 ON CAST(json_patch(t1.c1, rt0.c0) AS TEXT) WHERE (((((((v0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))AND(x'')))OR(CASE t1.c3  WHEN t1.c2 THEN rt0.c4 ELSE rt0.c1 END)));
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(v0.c2)))AND(rt1.c1)) THEN TRIM(DISTINCT rt1.c1, v0.c0) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR(rt1.c1)))OR(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(v0.c2)))AND(rt1.c1)) THEN TRIM(DISTINCT rt1.c1, v0.c0) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR(rt1.c1)))OR(((rt1.c2)LIKE(v0.c0)))) DESC);
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(v0.c2)))AND(rt1.c1)) THEN TRIM(DISTINCT rt1.c1, v0.c0) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR(rt1.c1)))OR(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(v0.c2)))AND(rt1.c1)) THEN TRIM(DISTINCT rt1.c1, v0.c0) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, v0 ORDER BY (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR(rt1.c1)))OR(((rt1.c2)LIKE(v0.c0)))) DESC);
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((((((((((((v0.c0)AND(v0.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(v0.c2)))AND(rt1.c1)) THEN TRIM(DISTINCT rt1.c1, v0.c0) ELSE ((((rt1.c2)AND(rt1.c1)))AND(rt1.c2)) END) ORDER BY (((((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((v0.c1))))OR(rt1.c1)))OR(((rt1.c2)LIKE(v0.c0)))) DESC;
SELECT COUNT(*) FROM t1, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))LIKE((rt1.c0 IN (rt1.c0))))) ORDER BY (((((((((((rt1.c0))>((rt1.c0))))AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c2) IS FALSE))))AND(CASE WHEN '?\n' THEN 'k' WHEN rt1.c0 THEN rt1.c1 WHEN x'b2c7' THEN rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))LIKE((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c0))>((rt1.c0))))AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c2) IS FALSE))))AND(CASE WHEN '?\n' THEN 'k' WHEN rt1.c0 THEN rt1.c1 WHEN x'b2c7' THEN rt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))LIKE((rt1.c0 IN (rt1.c0))))) ORDER BY (((((((((((rt1.c0))>((rt1.c0))))AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c2) IS FALSE))))AND(CASE WHEN '?\n' THEN 'k' WHEN rt1.c0 THEN rt1.c1 WHEN x'b2c7' THEN rt1.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))LIKE((rt1.c0 IN (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((((((((rt1.c0))>((rt1.c0))))AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c2) IS FALSE))))AND(CASE WHEN '?\n' THEN 'k' WHEN rt1.c0 THEN rt1.c1 WHEN x'b2c7' THEN rt1.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c1)))OR(rt1.c2)))LIKE((rt1.c0 IN (rt1.c0))))) ORDER BY (((((((((((rt1.c0))>((rt1.c0))))AND(rt1.c0 COLLATE BINARY)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c2) IS FALSE))))AND(CASE WHEN '?\n' THEN 'k' WHEN rt1.c0 THEN rt1.c1 WHEN x'b2c7' THEN rt1.c0 END))  NULLS FIRST;
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN ((~ (v0.c2))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY (t1.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT BETWEEN ((~ (v0.c2))) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0, t1, rt0 ORDER BY (t1.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN ((~ (v0.c2))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY (t1.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT BETWEEN ((~ (v0.c2))) AND (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, v0, t1, rt0 ORDER BY (t1.c2 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt1 NOT INDEXED, v0, t1, rt0 WHERE (((((rt0.c4) IS FALSE)) NOT BETWEEN ((~ (v0.c2))) AND (rt1.c0 COLLATE RTRIM))) ORDER BY (t1.c2 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON ((CASE rt1.c1  WHEN t1.c1 THEN rt0.c1 END)>>(((rt0.c0) IS TRUE))) WHERE (((((((rt0.c5)!=(rt0.c3)))OR(((((0.8787949473332201)OR(t1.c2)))AND(rt0.c2)))))OR(((((((((t1.c4)OR(rt1.c1)))AND('2 e\y')))OR(rt0.c2)))OR(t1.c2))))) ORDER BY 1.795512017E9;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)<>(rt0.c3)))OR(((((0.8787949473332201)OR(t1.c2)))AND(rt0.c2)))))OR(((((((((t1.c4)OR(rt1.c1)))AND('2 e\y')))OR(rt0.c2)))OR(t1.c2))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON ((CASE rt1.c1  WHEN t1.c1 THEN rt0.c1 END)>>(((rt0.c0) IS TRUE))) ORDER BY 1.795512017E9);
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON ((CASE rt1.c1  WHEN t1.c1 THEN rt0.c1 END)>>(((rt0.c0) IS TRUE))) WHERE (((((((rt0.c5)!=(rt0.c3)))OR(((((0.8787949473332201)OR(t1.c2)))AND(rt0.c2)))))OR(((((((((t1.c4)OR(rt1.c1)))AND('2 e\y')))OR(rt0.c2)))OR(t1.c2))))) ORDER BY 1.795512017E9;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c5)<>(rt0.c3)))OR(((((0.8787949473332201)OR(t1.c2)))AND(rt0.c2)))))OR(((((((((t1.c4)OR(rt1.c1)))AND('2 e\y')))OR(rt0.c2)))OR(t1.c2))))) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t1 ON ((CASE rt1.c1  WHEN t1.c1 THEN rt0.c1 END)>>(((rt0.c0) IS TRUE))) ORDER BY 1.795512017E9);
SELECT ALL * FROM rt1, rt0 INNER JOIN t1 ON ((CASE rt1.c1  WHEN t1.c1 THEN rt0.c1 END)>>(((rt0.c0) IS TRUE))) WHERE (((((((rt0.c5)!=(rt0.c3)))OR(((((0.8787949473332201)OR(t1.c2)))AND(rt0.c2)))))OR(((((((((t1.c4)OR(rt1.c1)))AND('2 e\y')))OR(rt0.c2)))OR(t1.c2))))) ORDER BY 1.795512017E9;
SELECT ALL * FROM rt0, t1, rt1, v0 WHERE (CASE WHEN ((rt0.c5)<(t1.c4)) THEN (~ (t1.c3)) ELSE ((rt1.c1) ISNULL) END) ORDER BY (- (((rt0.c6) NOT NULL))), ((rt1.c0)IS NOT(((v0.c2)LIKE(rt0.c1))))  NULLS FIRST, LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<(t1.c4)) THEN (~ (t1.c3)) ELSE ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t1, rt1, v0 ORDER BY (- (((rt0.c6) NOT NULL))), ((rt1.c0)IS NOT(((v0.c2)LIKE(rt0.c1))))  NULLS FIRST, LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)) ASC);
SELECT ALL * FROM rt0, t1, rt1, v0 WHERE (CASE WHEN ((rt0.c5)<(t1.c4)) THEN (~ (t1.c3)) ELSE ((rt1.c1) ISNULL) END) ORDER BY (- (((rt0.c6) NOT NULL))), ((rt1.c0)IS NOT(((v0.c2)LIKE(rt0.c1))))  NULLS FIRST, LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c5)<(t1.c4)) THEN (~ (t1.c3)) ELSE ((rt1.c1) ISNULL) END) IS TRUE)  as count FROM rt0, t1, rt1, v0 ORDER BY (- (((rt0.c6) NOT NULL))), ((rt1.c0)IS NOT(((v0.c2)LIKE(rt0.c1))))  NULLS FIRST, LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)) ASC);
SELECT ALL * FROM rt0, t1, rt1, v0 WHERE (CASE WHEN ((rt0.c5)<(t1.c4)) THEN (~ (t1.c3)) ELSE ((rt1.c1) ISNULL) END) ORDER BY (- (((rt0.c6) NOT NULL))), ((rt1.c0)IS NOT(((v0.c2)LIKE(rt0.c1))))  NULLS FIRST, LIKELY(DISTINCT LOWER(DISTINCT rt0.c1)) ASC;
SELECT COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c3)) AND ((rt0.c5))))||(((0.5998364961099182) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((t1.c3)) AND ((rt0.c5))))||(((0.5998364961099182) IS TRUE)))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c3)) AND ((rt0.c5))))||(((0.5998364961099182) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) NOT BETWEEN ((t1.c3)) AND ((rt0.c5))))||(((0.5998364961099182) IS TRUE)))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c3)) AND ((rt0.c5))))||(((0.5998364961099182) IS TRUE))));
SELECT * FROM v0, t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c2)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t1.c0))))) ORDER BY (t1.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c2)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM v0, t1 ORDER BY (t1.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM v0, t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c2)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t1.c0))))) ORDER BY (t1.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c2)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM v0, t1 ORDER BY (t1.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM v0, t1 WHERE ((((((t1.c1)) BETWEEN ((t1.c1)) AND ((t1.c2)))) BETWEEN (((t1.c0) IS FALSE)) AND ((NOT (t1.c0))))) ORDER BY (t1.c0 COLLATE RTRIM IN ()) DESC;
SELECT * FROM v0 WHERE (IFNULL(TRIM(v0.c1, -1.7976931348623157E308), CASE WHEN v0.c2 THEN v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TRIM(v0.c1, -1.7976931348623157E308), CASE WHEN v0.c2 THEN v0.c1 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL(TRIM(v0.c1, -1.7976931348623157E308), CASE WHEN v0.c2 THEN v0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(TRIM(v0.c1, -1.7976931348623157E308), CASE WHEN v0.c2 THEN v0.c1 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL(TRIM(v0.c1, -1.7976931348623157E308), CASE WHEN v0.c2 THEN v0.c1 END));
SELECT ALL * FROM v0, t1, rt1 WHERE ((((NULL) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM v0, t1, rt1);
SELECT ALL * FROM v0, t1, rt1 WHERE ((((NULL) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) ISNULL) IN ())) IS TRUE)  as count FROM v0, t1, rt1);
SELECT ALL * FROM v0, t1, rt1 WHERE ((((NULL) ISNULL) IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CAST(rt1.c1 AS INTEGER) WHERE (CAST(v0.c0 AS REAL)) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (0Xffffffffd2d73291) AND ('d2'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CAST(rt1.c1 AS INTEGER) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (0xffffffffd2d73291) AND ('d2'))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CAST(rt1.c1 AS INTEGER) WHERE (CAST(v0.c0 AS REAL)) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (0Xffffffffd2d73291) AND ('d2'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON CAST(rt1.c1 AS INTEGER) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (0xffffffffd2d73291) AND ('d2'))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON CAST(rt1.c1 AS INTEGER) WHERE (CAST(v0.c0 AS REAL)) ORDER BY ((CAST(v0.c0 AS BLOB)) NOT BETWEEN (0Xffffffffd2d73291) AND ('d2'))  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c0)<>(v0.c0)) AS REAL)) ORDER BY rt1.c1 DESC, rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<>(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 DESC, rt1.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c0)<>(v0.c0)) AS REAL)) ORDER BY rt1.c1 DESC, rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0)<>(v0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 DESC, rt1.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 WHERE (CAST(((rt1.c0)<>(v0.c0)) AS REAL)) ORDER BY rt1.c1 DESC, rt1.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (t1.c1)))OR(t1.c0))) ORDER BY ((-7.71931911E8) BETWEEN (((t1.c3)<=(t1.c2))) AND ((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c2) AND (t1.c1)))OR(t1.c0))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY ((-7.71931911E8) BETWEEN (((t1.c3)<=(t1.c2))) AND ((~ (rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (t1.c1)))OR(t1.c0))) ORDER BY ((-7.71931911E8) BETWEEN (((t1.c3)<=(t1.c2))) AND ((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c2) AND (t1.c1)))OR(t1.c0))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY ((-7.71931911E8) BETWEEN (((t1.c3)<=(t1.c2))) AND ((~ (rt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt1, t1 WHERE (((((rt1.c1) BETWEEN (rt1.c2) AND (t1.c1)))OR(t1.c0))) ORDER BY ((-7.71931911E8) BETWEEN (((t1.c3)<=(t1.c2))) AND ((~ (rt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN (((t1.c12)<(v0.c1)))) RIGHT OUTER JOIN rt0 ON ((t1.c3 COLLATE NOCASE)+((+ (rt0.c3)))) WHERE (((((((v0.c1)!=(v0.c0)))OR(CASE WHEN rt0.c5 THEN v0.c0 ELSE rt0.c0 END)))OR(((t1.c4) NOTNULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)!=(v0.c0)))OR(CASE WHEN rt0.c5 THEN v0.c0 ELSE rt0.c0 END)))OR(((t1.c4) NOTNULL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN (((t1.c12)<(v0.c1)))) RIGHT OUTER JOIN rt0 ON ((t1.c3 COLLATE NOCASE)+((+ (rt0.c3)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN (((t1.c12)<(v0.c1)))) RIGHT OUTER JOIN rt0 ON ((t1.c3 COLLATE NOCASE)+((+ (rt0.c3)))) WHERE (((((((v0.c1)!=(v0.c0)))OR(CASE WHEN rt0.c5 THEN v0.c0 ELSE rt0.c0 END)))OR(((t1.c4) NOTNULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)!=(v0.c0)))OR(CASE WHEN rt0.c5 THEN v0.c0 ELSE rt0.c0 END)))OR(((t1.c4) NOTNULL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN (((t1.c12)<(v0.c1)))) RIGHT OUTER JOIN rt0 ON ((t1.c3 COLLATE NOCASE)+((+ (rt0.c3)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON (CAST(v0.c0 AS BLOB) IN (((t1.c12)<(v0.c1)))) RIGHT OUTER JOIN rt0 ON ((t1.c3 COLLATE NOCASE)+((+ (rt0.c3)))) WHERE (((((((v0.c1)!=(v0.c0)))OR(CASE WHEN rt0.c5 THEN v0.c0 ELSE rt0.c0 END)))OR(((t1.c4) NOTNULL)))) ORDER BY CAST(CAST(v0.c0 AS TEXT) AS BLOB) DESC;
SELECT COUNT(*) FROM rt0, t1 NOT INDEXED WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c3)OR(rt0.c3))) AND (((rt0.c1)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c3)OR(rt0.c3))) AND (((rt0.c1)-(rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 NOT INDEXED WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c3)OR(rt0.c3))) AND (((rt0.c1)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c3)OR(rt0.c3))) AND (((rt0.c1)-(rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 NOT INDEXED WHERE (((CAST(t1.c1 AS TEXT)) BETWEEN (((t1.c3)OR(rt0.c3))) AND (((rt0.c1)-(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(x'' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(x'' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CAST(x'' AS NUMERIC))));
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT CAST(0.20431510089349614 AS NUMERIC))) ORDER BY ((CAST(t1.c0 AS TEXT))<(SQLITE_SOURCE_ID())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(0.20431510089349614 AS NUMERIC))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS TEXT))<(SQLITE_SOURCE_ID())) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT CAST(0.20431510089349614 AS NUMERIC))) ORDER BY ((CAST(t1.c0 AS TEXT))<(SQLITE_SOURCE_ID())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT CAST(0.20431510089349614 AS NUMERIC))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS TEXT))<(SQLITE_SOURCE_ID())) DESC  NULLS LAST);
SELECT * FROM t1 WHERE (TYPEOF(DISTINCT CAST(0.20431510089349614 AS NUMERIC))) ORDER BY ((CAST(t1.c0 AS TEXT))<(SQLITE_SOURCE_ID())) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, rt1, v0, rt0 WHERE (CAST(0.068340150416493 AS INTEGER)) ORDER BY ((CASE t1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END) BETWEEN (((t1.c0)GLOB(rt0.c5))) AND ((('-1590411908') NOT BETWEEN (v0.c2) AND (t1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.068340150416493 AS INTEGER)) IS TRUE)  as count FROM t1, rt1, v0, rt0 ORDER BY ((CASE t1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END) BETWEEN (((t1.c0)GLOB(rt0.c5))) AND ((('-1590411908') NOT BETWEEN (v0.c2) AND (t1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, v0, rt0 WHERE (CAST(0.068340150416493 AS INTEGER)) ORDER BY ((CASE t1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END) BETWEEN (((t1.c0)GLOB(rt0.c5))) AND ((('-1590411908') NOT BETWEEN (v0.c2) AND (t1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.068340150416493 AS INTEGER)) IS TRUE)  as count FROM t1, rt1, v0, rt0 ORDER BY ((CASE t1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END) BETWEEN (((t1.c0)GLOB(rt0.c5))) AND ((('-1590411908') NOT BETWEEN (v0.c2) AND (t1.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, v0, rt0 WHERE (CAST(0.068340150416493 AS INTEGER)) ORDER BY ((CASE t1.c4  WHEN rt0.c3 THEN rt1.c1 ELSE rt0.c4 END) BETWEEN (((t1.c0)GLOB(rt0.c5))) AND ((('-1590411908') NOT BETWEEN (v0.c2) AND (t1.c3))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((t1.c1)AND(t1.c2)))AND(t1.c3)))AND(t1.c4)))AND(rt1.c0))) NOT BETWEEN ((+ (t1.c3))) AND ((((t1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c12))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)AND(t1.c2)))AND(t1.c3)))AND(t1.c4)))AND(rt1.c0))) NOT BETWEEN ((+ (t1.c3))) AND ((((t1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c12)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((t1.c1)AND(t1.c2)))AND(t1.c3)))AND(t1.c4)))AND(rt1.c0))) NOT BETWEEN ((+ (t1.c3))) AND ((((t1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c12))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c1)AND(t1.c2)))AND(t1.c3)))AND(t1.c4)))AND(rt1.c0))) NOT BETWEEN ((+ (t1.c3))) AND ((((t1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c12)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((((((((t1.c1)AND(t1.c2)))AND(t1.c3)))AND(t1.c4)))AND(rt1.c0))) NOT BETWEEN ((+ (t1.c3))) AND ((((t1.c2)) NOT BETWEEN ((rt1.c1)) AND ((t1.c12))))));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c5)%(v0.c1)))||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)%(v0.c1)))||(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c5)%(v0.c1)))||(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)%(v0.c1)))||(rt0.c1))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c5)%(v0.c1)))||(rt0.c1)));
SELECT COUNT(*) FROM t1, rt1, v0 LEFT OUTER JOIN rt0 ON CASE '䠬J'  WHEN ((((rt0.c2)AND(t1.c1)))OR(rt0.c2)) THEN ((t1.c0)GLOB(rt0.c1)) WHEN CASE t1.c12  WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END THEN (~ (rt0.c0)) WHEN NULL THEN (- ('-1183407372')) END WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c3 WHEN rt0.c5 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 ELSE v0.c0 END)))) ORDER BY ((((t1.c12)GLOB(v0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c3 WHEN rt0.c5 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 ELSE v0.c0 END)))) IS TRUE)  as count FROM t1, rt1, v0 LEFT OUTER JOIN rt0 ON CASE '䠬J'  WHEN ((((rt0.c2)AND(t1.c1)))OR(rt0.c2)) THEN ((t1.c0)GLOB(rt0.c1)) WHEN CASE t1.c12  WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END THEN (~ (rt0.c0)) WHEN NULL THEN (- ('-1183407372')) END ORDER BY ((((t1.c12)GLOB(v0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, v0 LEFT OUTER JOIN rt0 ON CASE '䠬J'  WHEN ((((rt0.c2)AND(t1.c1)))OR(rt0.c2)) THEN ((t1.c0)GLOB(rt0.c1)) WHEN CASE t1.c12  WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END THEN (~ (rt0.c0)) WHEN NULL THEN (- ('-1183407372')) END WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c3 WHEN rt0.c5 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 ELSE v0.c0 END)))) ORDER BY ((((t1.c12)GLOB(v0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c3 WHEN rt0.c5 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 ELSE v0.c0 END)))) IS TRUE)  as count FROM t1, rt1, v0 LEFT OUTER JOIN rt0 ON CASE '䠬J'  WHEN ((((rt0.c2)AND(t1.c1)))OR(rt0.c2)) THEN ((t1.c0)GLOB(rt0.c1)) WHEN CASE t1.c12  WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END THEN (~ (rt0.c0)) WHEN NULL THEN (- ('-1183407372')) END ORDER BY ((((t1.c12)GLOB(v0.c0))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1, v0 LEFT OUTER JOIN rt0 ON CASE '䠬J'  WHEN ((((rt0.c2)AND(t1.c1)))OR(rt0.c2)) THEN ((t1.c0)GLOB(rt0.c1)) WHEN CASE t1.c12  WHEN rt1.c1 THEN rt0.c5 ELSE rt0.c4 END THEN (~ (rt0.c0)) WHEN NULL THEN (- ('-1183407372')) END WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((CASE WHEN v0.c1 THEN rt0.c3 WHEN rt0.c5 THEN t1.c3 WHEN rt0.c2 THEN t1.c3 ELSE v0.c0 END)))) ORDER BY ((((t1.c12)GLOB(v0.c0))) NOTNULL) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c5 IN ()) IN (CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 IN ()) IN (CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (((rt0.c5 IN ()) IN (CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 IN ()) IN (CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (((rt0.c5 IN ()) IN (CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'' END))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN v0 ON rt0.c1 WHERE ((((((('1572613175')OR(rt0.c3)))OR(rt0.c0)))OR((((rt0.c3, rt0.c0, t1.c2))>((rt0.c6, t1.c4, t1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((('1572613175')OR(rt0.c3)))OR(rt0.c0)))OR((((rt0.c3, rt0.c0, t1.c2))>((rt0.c6, t1.c4, t1.c3)))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN v0 ON rt0.c1);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN v0 ON rt0.c1 WHERE ((((((('1572613175')OR(rt0.c3)))OR(rt0.c0)))OR((((rt0.c3, rt0.c0, t1.c2))>((rt0.c6, t1.c4, t1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((('1572613175')OR(rt0.c3)))OR(rt0.c0)))OR((((rt0.c3, rt0.c0, t1.c2))>((rt0.c6, t1.c4, t1.c3)))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN v0 ON rt0.c1);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN v0 ON rt0.c1 WHERE ((((((('1572613175')OR(rt0.c3)))OR(rt0.c0)))OR((((rt0.c3, rt0.c0, t1.c2))>((rt0.c6, t1.c4, t1.c3))))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt1.c0)||(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt1 ON 0.71666579349061 CROSS JOIN t1 ON CASE LIKELY(v0.c0)  WHEN (((t1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((((rt0.c6)AND('0.35973710644337153')))AND(rt0.c2)) ELSE v0.c1 END WHERE ((((LIKE(t1.c3, rt0.c0, 'D'), t1.c3, CASE WHEN rt1.c0 THEN v0.c2 END))>((CASE WHEN -1.676549854E9 THEN rt1.c2 ELSE t1.c0 END, x'a65a', x'b824')))) ORDER BY CAST(((v0.c1)&(v0.c0)) AS INTEGER) DESC, (((t1.c4)) NOT BETWEEN ((0.9861259761152487)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKE(t1.c3, rt0.c0, 'D'), t1.c3, CASE WHEN rt1.c0 THEN v0.c2 END))>((CASE WHEN -1.676549854E9 THEN rt1.c2 ELSE t1.c0 END, x'a65a', x'b824')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt1.c0)||(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt1 ON 0.71666579349061 CROSS JOIN t1 ON CASE LIKELY(v0.c0)  WHEN (((t1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((((rt0.c6)AND('0.35973710644337153')))AND(rt0.c2)) ELSE v0.c1 END ORDER BY CAST(((v0.c1)&(v0.c0)) AS INTEGER) DESC, (((t1.c4)) NOT BETWEEN ((0.9861259761152487)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c3)))));
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt1.c0)||(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt1 ON 0.71666579349061 CROSS JOIN t1 ON CASE LIKELY(v0.c0)  WHEN (((t1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((((rt0.c6)AND('0.35973710644337153')))AND(rt0.c2)) ELSE v0.c1 END WHERE ((((LIKE(t1.c3, rt0.c0, 'D'), t1.c3, CASE WHEN rt1.c0 THEN v0.c2 END))>((CASE WHEN -1.676549854E9 THEN rt1.c2 ELSE t1.c0 END, x'a65a', x'b824')))) ORDER BY CAST(((v0.c1)&(v0.c0)) AS INTEGER) DESC, (((t1.c4)) NOT BETWEEN ((0.9861259761152487)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((LIKE(t1.c3, rt0.c0, 'D'), t1.c3, CASE WHEN rt1.c0 THEN v0.c2 END))>((CASE WHEN -1.676549854E9 THEN rt1.c2 ELSE t1.c0 END, x'a65a', x'b824')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON CAST(((rt1.c0)||(rt0.c2)) AS TEXT) RIGHT OUTER JOIN rt1 ON 0.71666579349061 CROSS JOIN t1 ON CASE LIKELY(v0.c0)  WHEN (((t1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c1))) THEN ((((rt0.c6)AND('0.35973710644337153')))AND(rt0.c2)) ELSE v0.c1 END ORDER BY CAST(((v0.c1)&(v0.c0)) AS INTEGER) DESC, (((t1.c4)) NOT BETWEEN ((0.9861259761152487)) AND ((SQLITE_COMPILEOPTION_GET(rt0.c3)))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (NOT (rt0.c5)) COLLATE NOCASE WHERE (ABS(((rt0.c2) IS FALSE))) ORDER BY ((((((rt0.c5)AND(v0.c0)))OR(x'6e55'))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c2) IS FALSE))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (NOT (rt0.c5)) COLLATE NOCASE ORDER BY ((((((rt0.c5)AND(v0.c0)))OR(x'6e55'))) NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (NOT (rt0.c5)) COLLATE NOCASE WHERE (ABS(((rt0.c2) IS FALSE))) ORDER BY ((((((rt0.c5)AND(v0.c0)))OR(x'6e55'))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((ABS(((rt0.c2) IS FALSE))) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON (NOT (rt0.c5)) COLLATE NOCASE ORDER BY ((((((rt0.c5)AND(v0.c0)))OR(x'6e55'))) NOTNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON (NOT (rt0.c5)) COLLATE NOCASE WHERE (ABS(((rt0.c2) IS FALSE))) ORDER BY ((((((rt0.c5)AND(v0.c0)))OR(x'6e55'))) NOTNULL);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ROUND(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)), (t1.c3 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t1, v0 ORDER BY ROUND(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)), (t1.c3 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ROUND(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)), (t1.c3 IN ())) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t1, v0 ORDER BY ROUND(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)), (t1.c3 IN ())) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CAST(v0.c2 COLLATE BINARY AS INTEGER)) ORDER BY ROUND(((t1.c2) NOT BETWEEN (t1.c4) AND (v0.c0)), (t1.c3 IN ())) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY ((rt1.c0)*(((x'')IS(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)*(((x'')IS(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((+ ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY ((rt1.c0)*(((x'')IS(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)*(((x'')IS(rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((+ ((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) ORDER BY ((rt1.c0)*(((x'')IS(rt1.c2))))  NULLS FIRST;
SELECT * FROM rt0, t1, rt1 CROSS JOIN v0 ON CAST(CAST(t1.c1 AS BLOB) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, rt1 CROSS JOIN v0 ON CAST(CAST(t1.c1 AS BLOB) AS NUMERIC));
SELECT * FROM rt0, t1, rt1 CROSS JOIN v0 ON CAST(CAST(t1.c1 AS BLOB) AS NUMERIC) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, rt1 CROSS JOIN v0 ON CAST(CAST(t1.c1 AS BLOB) AS NUMERIC));
SELECT * FROM rt0, t1, rt1 CROSS JOIN v0 ON CAST(CAST(t1.c1 AS BLOB) AS NUMERIC) WHERE (x'');
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (rt0.c1 IN ()) COLLATE BINARY INNER JOIN rt0 ON x'98f6' WHERE (((((load_extension(rt0.c0))OR(t1.c3)))AND(((rt0.c6) IS FALSE)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((load_extension(rt0.c0))OR(t1.c3)))AND(((rt0.c6) IS FALSE)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (rt0.c1 IN ()) COLLATE BINARY INNER JOIN rt0 ON x'98f6' ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (rt0.c1 IN ()) COLLATE BINARY INNER JOIN rt0 ON x'98f6' WHERE (((((load_extension(rt0.c0))OR(t1.c3)))AND(((rt0.c6) IS FALSE)))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((load_extension(rt0.c0))OR(t1.c3)))AND(((rt0.c6) IS FALSE)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON (rt0.c1 IN ()) COLLATE BINARY INNER JOIN rt0 ON x'98f6' ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON (rt0.c1 IN ()) COLLATE BINARY INNER JOIN rt0 ON x'98f6' WHERE (((((load_extension(rt0.c0))OR(t1.c3)))AND(((rt0.c6) IS FALSE)))) ORDER BY x'' DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON SUBSTR(t1.c0, ((rt0.c5) ISNULL)) FULL OUTER JOIN v0 ON (CASE 0.07494504414258452  WHEN t1.c4 THEN 'cH)≛]nqXH' WHEN rt0.c1 THEN t1.c4 WHEN rt0.c6 THEN rt1.c1 ELSE rt0.c2 END IN ()) CROSS JOIN rt1 ON CAST(((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)) AS BLOB) WHERE (((highlight(rt0.c3, rt0.c4, rt1.c0, t1.c3))|(((((rt0.c2)AND(rt1.c1)))OR(t1.c4))))) ORDER BY json_array_length(t1.c1, ((rt0.c5) BETWEEN (rt0.c0) AND (t1.c0))), CASE x''  WHEN (+ (v0.c0)) THEN t1.c0 COLLATE RTRIM END ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c5)) IN (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c3, rt0.c4, rt1.c0, t1.c3))|(((((rt0.c2)AND(rt1.c1)))OR(t1.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON SUBSTR(t1.c0, ((rt0.c5) ISNULL)) FULL OUTER JOIN v0 ON (CASE 0.07494504414258452  WHEN t1.c4 THEN 'cH)≛]nqXH' WHEN rt0.c1 THEN t1.c4 WHEN rt0.c6 THEN rt1.c1 ELSE rt0.c2 END IN ()) CROSS JOIN rt1 ON CAST(((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)) AS BLOB) ORDER BY json_array_length(t1.c1, ((rt0.c5) BETWEEN (rt0.c0) AND (t1.c0))), CASE x''  WHEN (+ (v0.c0)) THEN t1.c0 COLLATE RTRIM END ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c5)) IN (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON SUBSTR(t1.c0, ((rt0.c5) ISNULL)) FULL OUTER JOIN v0 ON (CASE 0.07494504414258452  WHEN t1.c4 THEN 'cH)≛]nqXH' WHEN rt0.c1 THEN t1.c4 WHEN rt0.c6 THEN rt1.c1 ELSE rt0.c2 END IN ()) CROSS JOIN rt1 ON CAST(((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)) AS BLOB) WHERE (((highlight(rt0.c3, rt0.c4, rt1.c0, t1.c3))|(((((rt0.c2)AND(rt1.c1)))OR(t1.c4))))) ORDER BY json_array_length(t1.c1, ((rt0.c5) BETWEEN (rt0.c0) AND (t1.c0))), CASE x''  WHEN (+ (v0.c0)) THEN t1.c0 COLLATE RTRIM END ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c5)) IN (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((highlight(rt0.c3, rt0.c4, rt1.c0, t1.c3))|(((((rt0.c2)AND(rt1.c1)))OR(t1.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON SUBSTR(t1.c0, ((rt0.c5) ISNULL)) FULL OUTER JOIN v0 ON (CASE 0.07494504414258452  WHEN t1.c4 THEN 'cH)≛]nqXH' WHEN rt0.c1 THEN t1.c4 WHEN rt0.c6 THEN rt1.c1 ELSE rt0.c2 END IN ()) CROSS JOIN rt1 ON CAST(((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)) AS BLOB) ORDER BY json_array_length(t1.c1, ((rt0.c5) BETWEEN (rt0.c0) AND (t1.c0))), CASE x''  WHEN (+ (v0.c0)) THEN t1.c0 COLLATE RTRIM END ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c5)) IN (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON SUBSTR(t1.c0, ((rt0.c5) ISNULL)) FULL OUTER JOIN v0 ON (CASE 0.07494504414258452  WHEN t1.c4 THEN 'cH)≛]nqXH' WHEN rt0.c1 THEN t1.c4 WHEN rt0.c6 THEN rt1.c1 ELSE rt0.c2 END IN ()) CROSS JOIN rt1 ON CAST(((rt1.c1) BETWEEN (v0.c2) AND (v0.c2)) AS BLOB) WHERE (((highlight(rt0.c3, rt0.c4, rt1.c0, t1.c3))|(((((rt0.c2)AND(rt1.c1)))OR(t1.c4))))) ORDER BY json_array_length(t1.c1, ((rt0.c5) BETWEEN (rt0.c0) AND (t1.c0))), CASE x''  WHEN (+ (v0.c0)) THEN t1.c0 COLLATE RTRIM END ASC  NULLS LAST, (((rt0.c3) NOT BETWEEN (rt1.c1) AND (rt0.c5)) IN (rt0.c4 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ('-1441985206');
SELECT SUM(count) FROM (SELECT ALL (('-1441985206') IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ('-1441985206');
SELECT SUM(count) FROM (SELECT ALL (('-1441985206') IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE ('-1441985206');
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 0.6014690351428891)) ORDER BY (((t1.c3) BETWEEN (t1.c1) AND (t1.c4)) IN ()), (((NOT (t1.c12))) BETWEEN (t1.c1) AND ((((t1.c2))>=((t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 0.6014690351428891)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c3) BETWEEN (t1.c1) AND (t1.c4)) IN ()), (((NOT (t1.c12))) BETWEEN (t1.c1) AND ((((t1.c2))>=((t1.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 0.6014690351428891)) ORDER BY (((t1.c3) BETWEEN (t1.c1) AND (t1.c4)) IN ()), (((NOT (t1.c12))) BETWEEN (t1.c1) AND ((((t1.c2))>=((t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 0.6014690351428891)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c3) BETWEEN (t1.c1) AND (t1.c4)) IN ()), (((NOT (t1.c12))) BETWEEN (t1.c1) AND ((((t1.c2))>=((t1.c2)))))  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (LIKELIHOOD(DISTINCT t1.c0 COLLATE NOCASE, 0.6014690351428891)) ORDER BY (((t1.c3) BETWEEN (t1.c1) AND (t1.c4)) IN ()), (((NOT (t1.c12))) BETWEEN (t1.c1) AND ((((t1.c2))>=((t1.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (((rt0.c5))<((NULL))) COLLATE NOCASE WHERE ((- (UNLIKELY(t1.c12)))) ORDER BY (((+ (t1.c0))) NOT BETWEEN (ABS(DISTINCT rt0.c5)) AND (t1.c3 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(t1.c12)))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON (((rt0.c5))<((NULL))) COLLATE NOCASE ORDER BY (((+ (t1.c0))) NOT BETWEEN (ABS(DISTINCT rt0.c5)) AND (t1.c3 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (((rt0.c5))<((NULL))) COLLATE NOCASE WHERE ((- (UNLIKELY(t1.c12)))) ORDER BY (((+ (t1.c0))) NOT BETWEEN (ABS(DISTINCT rt0.c5)) AND (t1.c3 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((- (UNLIKELY(t1.c12)))) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON (((rt0.c5))<((NULL))) COLLATE NOCASE ORDER BY (((+ (t1.c0))) NOT BETWEEN (ABS(DISTINCT rt0.c5)) AND (t1.c3 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (((rt0.c5))<((NULL))) COLLATE NOCASE WHERE ((- (UNLIKELY(t1.c12)))) ORDER BY (((+ (t1.c0))) NOT BETWEEN (ABS(DISTINCT rt0.c5)) AND (t1.c3 COLLATE RTRIM)) ASC;
SELECT ALL * FROM t1 INDEXED BY i10, v0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))=(CASE t1.c4  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c2 THEN t1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))=(CASE t1.c4  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c2 THEN t1.c3 END))) IS TRUE)  as count FROM t1 INDEXED BY i10, v0, rt0);
SELECT ALL * FROM t1 INDEXED BY i10, v0, rt0 WHERE (((CAST(rt0.c0 AS NUMERIC))=(CASE t1.c4  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c2 THEN t1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))=(CASE t1.c4  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN t1.c2 THEN t1.c3 END))) IS TRUE)  as count FROM t1 INDEXED BY i10, v0, rt0);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (+ (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (+ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (+ (rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (TRIM(DISTINCT ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), (+ (rt1.c1))));
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON (('D.KQ' COLLATE BINARY)<<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))) LEFT OUTER JOIN rt0 ON x'' WHERE (0.00871757028776965);
SELECT SUM(count) FROM (SELECT ((0.00871757028776965) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON (('D.KQ' COLLATE BINARY)<<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))) LEFT OUTER JOIN rt0 ON x'');
SELECT ALL * FROM v0 FULL OUTER JOIN t1 ON (('D.KQ' COLLATE BINARY)<<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))) LEFT OUTER JOIN rt0 ON x'' WHERE (0.00871757028776965);
SELECT SUM(count) FROM (SELECT ((0.00871757028776965) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON (('D.KQ' COLLATE BINARY)<<(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))) LEFT OUTER JOIN rt0 ON x'');
SELECT COUNT(*) FROM rt1, t1, v0 CROSS JOIN rt0 ON CAST(((((((((t1.c2)OR(rt0.c2)))AND(t1.c12)))AND(t1.c0)))OR(v0.c1)) AS NUMERIC) WHERE ((((NULL)) BETWEEN (((rt0.c1 IN ()))) AND ((((NULL) BETWEEN (v0.c1) AND (t1.c3))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((rt0.c1 IN ()))) AND ((((NULL) BETWEEN (v0.c1) AND (t1.c3)))))) IS TRUE)  as count FROM rt1, t1, v0 CROSS JOIN rt0 ON CAST(((((((((t1.c2)OR(rt0.c2)))AND(t1.c12)))AND(t1.c0)))OR(v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, t1, v0 CROSS JOIN rt0 ON CAST(((((((((t1.c2)OR(rt0.c2)))AND(t1.c12)))AND(t1.c0)))OR(v0.c1)) AS NUMERIC) WHERE ((((NULL)) BETWEEN (((rt0.c1 IN ()))) AND ((((NULL) BETWEEN (v0.c1) AND (t1.c3))))));
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN (((rt0.c1 IN ()))) AND ((((NULL) BETWEEN (v0.c1) AND (t1.c3)))))) IS TRUE)  as count FROM rt1, t1, v0 CROSS JOIN rt0 ON CAST(((((((((t1.c2)OR(rt0.c2)))AND(t1.c12)))AND(t1.c0)))OR(v0.c1)) AS NUMERIC));
SELECT COUNT(*) FROM rt1, t1, v0 CROSS JOIN rt0 ON CAST(((((((((t1.c2)OR(rt0.c2)))AND(t1.c12)))AND(t1.c0)))OR(v0.c1)) AS NUMERIC) WHERE ((((NULL)) BETWEEN (((rt0.c1 IN ()))) AND ((((NULL) BETWEEN (v0.c1) AND (t1.c3))))));
SELECT ALL * FROM rt1 WHERE ((NOT (6.6114494E8)));
SELECT SUM(count) FROM (SELECT (((NOT (6.6114494E8))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (6.6114494E8)));
SELECT SUM(count) FROM (SELECT (((NOT (6.6114494E8))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (6.6114494E8)));
SELECT ALL COUNT(*) FROM v0 WHERE ((0xffffffff89ceac08 IN ((v0.c2 IN ())))) ORDER BY LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.5327321688579989)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0xffffffff89ceac08 IN ((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.5327321688579989)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0xffffffff89ceac08 IN ((v0.c2 IN ())))) ORDER BY LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.5327321688579989)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0xffffffff89ceac08 IN ((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.5327321688579989)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((0xffffffff89ceac08 IN ((v0.c2 IN ())))) ORDER BY LIKELIHOOD(DISTINCT (v0.c1 IN ()), 0.5327321688579989)  NULLS LAST;
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE (CAST(((rt1.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE (CAST(((rt1.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM v0, t1, rt0, rt1);
SELECT ALL * FROM v0, t1, rt0, rt1 WHERE (CAST(((rt1.c0) NOTNULL) AS BLOB));
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c1))) BETWEEN (((v0.c2)=(rt0.c0))) AND (((rt0.c0)OR(v0.c2))))) ORDER BY (((((rt0.c5)OR(rt0.c4)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((v0.c2)=(rt0.c0))) AND (((rt0.c0)OR(v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c5)OR(rt0.c4)))OR(v0.c0)) IN ()));
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c1))) BETWEEN (((v0.c2)=(rt0.c0))) AND (((rt0.c0)OR(v0.c2))))) ORDER BY (((((rt0.c5)OR(rt0.c4)))OR(v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((v0.c2)=(rt0.c0))) AND (((rt0.c0)OR(v0.c2))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((((rt0.c5)OR(rt0.c4)))OR(v0.c0)) IN ()));
SELECT ALL * FROM rt0, v0 WHERE ((((+ (rt0.c1))) BETWEEN (((v0.c2)=(rt0.c0))) AND (((rt0.c0)OR(v0.c2))))) ORDER BY (((((rt0.c5)OR(rt0.c4)))OR(v0.c0)) IN ());
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE ((((t1.c2)<(rt1.c0)) IN (t1.c12))) ORDER BY ((CAST(t1.c3 AS TEXT))<>(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)<(rt1.c0)) IN (t1.c12))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY ((CAST(t1.c3 AS TEXT))<>(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE ((((t1.c2)<(rt1.c0)) IN (t1.c12))) ORDER BY ((CAST(t1.c3 AS TEXT))<>(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)<(rt1.c0)) IN (t1.c12))) IS TRUE)  as count FROM t1, v0, rt1 ORDER BY ((CAST(t1.c3 AS TEXT))<>(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, rt1 WHERE ((((t1.c2)<(rt1.c0)) IN (t1.c12))) ORDER BY ((CAST(t1.c3 AS TEXT))<>(x''))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ('-1964471755');
SELECT SUM(count) FROM (SELECT ALL (('-1964471755') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('-1964471755');
SELECT SUM(count) FROM (SELECT ALL (('-1964471755') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ('-1964471755');
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c6)|(v0.c0)))AND((NOT (rt0.c3)))))OR(((rt0.c6)>>('')))))AND(((rt0.c6)>(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((v0.c0)||(rt0.c5)) ELSE ((v0.c2)<>(rt0.c4)) END  NULLS LAST, (+ (CASE rt0.c3  WHEN rt0.c5 THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN v0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6)|(v0.c0)))AND((NOT (rt0.c3)))))OR(((rt0.c6)>>('')))))AND(((rt0.c6)>(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((v0.c0)||(rt0.c5)) ELSE ((v0.c2)<>(rt0.c4)) END  NULLS LAST, (+ (CASE rt0.c3  WHEN rt0.c5 THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN v0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c6)|(v0.c0)))AND((NOT (rt0.c3)))))OR(((rt0.c6)>>('')))))AND(((rt0.c6)>(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((v0.c0)||(rt0.c5)) ELSE ((v0.c2)<>(rt0.c4)) END  NULLS LAST, (+ (CASE rt0.c3  WHEN rt0.c5 THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN v0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c6)|(v0.c0)))AND((NOT (rt0.c3)))))OR(((rt0.c6)>>('')))))AND(((rt0.c6)>(rt0.c2)))))OR((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((v0.c0)||(rt0.c5)) ELSE ((v0.c2)<>(rt0.c4)) END  NULLS LAST, (+ (CASE rt0.c3  WHEN rt0.c5 THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN v0.c1 THEN rt0.c2 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((((((((((rt0.c6)|(v0.c0)))AND((NOT (rt0.c3)))))OR(((rt0.c6)>>('')))))AND(((rt0.c6)>(rt0.c2)))))OR((rt0.c1 IN ())))) ORDER BY CASE WHEN ((rt0.c3) NOT NULL) THEN ((v0.c0)||(rt0.c5)) ELSE ((v0.c2)<>(rt0.c4)) END  NULLS LAST, (+ (CASE rt0.c3  WHEN rt0.c5 THEN v0.c0 WHEN rt0.c1 THEN NULL WHEN v0.c1 THEN rt0.c2 END))  NULLS LAST;
SELECT * FROM v0 WHERE ('WM') ORDER BY ((((((v0.c2) NOTNULL))OR(((v0.c0)|(v0.c1)))))OR(((v0.c2) IS TRUE))) ASC, (('-1608195189' IN ()) IN ()) DESC, CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN '4' ELSE v0.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('WM') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) NOTNULL))OR(((v0.c0)|(v0.c1)))))OR(((v0.c2) IS TRUE))) ASC, (('-1608195189' IN ()) IN ()) DESC, CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN '4' ELSE v0.c1 END AS REAL));
SELECT * FROM v0 WHERE ('WM') ORDER BY ((((((v0.c2) NOTNULL))OR(((v0.c0)|(v0.c1)))))OR(((v0.c2) IS TRUE))) ASC, (('-1608195189' IN ()) IN ()) DESC, CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN '4' ELSE v0.c1 END AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('WM') IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2) NOTNULL))OR(((v0.c0)|(v0.c1)))))OR(((v0.c2) IS TRUE))) ASC, (('-1608195189' IN ()) IN ()) DESC, CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN '4' ELSE v0.c1 END AS REAL));
SELECT * FROM v0 WHERE ('WM') ORDER BY ((((((v0.c2) NOTNULL))OR(((v0.c0)|(v0.c1)))))OR(((v0.c2) IS TRUE))) ASC, (('-1608195189' IN ()) IN ()) DESC, CAST(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c1 WHEN v0.c0 THEN '4' ELSE v0.c1 END AS REAL);
SELECT COUNT(*) FROM v0, t1, rt0 WHERE (CAST(((((rt0.c5)OR(v0.c1)))OR(rt0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c5)OR(v0.c1)))OR(rt0.c4)) AS TEXT)) IS TRUE)  as count FROM v0, t1, rt0);
SELECT COUNT(*) FROM v0, t1, rt0 WHERE (CAST(((((rt0.c5)OR(v0.c1)))OR(rt0.c4)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c5)OR(v0.c1)))OR(rt0.c4)) AS TEXT)) IS TRUE)  as count FROM v0, t1, rt0);
SELECT COUNT(*) FROM v0, t1, rt0 WHERE (CAST(((((rt0.c5)OR(v0.c1)))OR(rt0.c4)) AS TEXT));
SELECT * FROM v0 CROSS JOIN t1 ON ((rt1.c0)*(rt0.c3)) COLLATE BINARY INNER JOIN rt1 ON CASE WHEN v0.c1 THEN t1.c4 COLLATE NOCASE END CROSS JOIN rt0 ON CASE WHEN (- (NULL)) THEN ((t1.c2)<(t1.c2)) END WHERE ((((((rt0.c5, rt0.c0, rt1.c0)) BETWEEN ((t1.c12, rt0.c1, t1.c1)) AND ((t1.c12, t1.c0, v0.c2)))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((t1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5, rt0.c0, rt1.c0)) BETWEEN ((t1.c12, rt0.c1, t1.c1)) AND ((t1.c12, t1.c0, v0.c2)))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((t1.c0) NOT NULL)))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON ((rt1.c0)*(rt0.c3)) COLLATE BINARY INNER JOIN rt1 ON CASE WHEN v0.c1 THEN t1.c4 COLLATE NOCASE END CROSS JOIN rt0 ON CASE WHEN (- (NULL)) THEN ((t1.c2)<(t1.c2)) END);
SELECT * FROM v0 CROSS JOIN t1 ON ((rt1.c0)*(rt0.c3)) COLLATE BINARY INNER JOIN rt1 ON CASE WHEN v0.c1 THEN t1.c4 COLLATE NOCASE END CROSS JOIN rt0 ON CASE WHEN (- (NULL)) THEN ((t1.c2)<(t1.c2)) END WHERE ((((((rt0.c5, rt0.c0, rt1.c0)) BETWEEN ((t1.c12, rt0.c1, t1.c1)) AND ((t1.c12, t1.c0, v0.c2)))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((t1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5, rt0.c0, rt1.c0)) BETWEEN ((t1.c12, rt0.c1, t1.c1)) AND ((t1.c12, t1.c0, v0.c2)))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((t1.c0) NOT NULL)))) IS TRUE)  as count FROM v0 CROSS JOIN t1 ON ((rt1.c0)*(rt0.c3)) COLLATE BINARY INNER JOIN rt1 ON CASE WHEN v0.c1 THEN t1.c4 COLLATE NOCASE END CROSS JOIN rt0 ON CASE WHEN (- (NULL)) THEN ((t1.c2)<(t1.c2)) END);
SELECT * FROM v0 CROSS JOIN t1 ON ((rt1.c0)*(rt0.c3)) COLLATE BINARY INNER JOIN rt1 ON CASE WHEN v0.c1 THEN t1.c4 COLLATE NOCASE END CROSS JOIN rt0 ON CASE WHEN (- (NULL)) THEN ((t1.c2)<(t1.c2)) END WHERE ((((((rt0.c5, rt0.c0, rt1.c0)) BETWEEN ((t1.c12, rt0.c1, t1.c1)) AND ((t1.c12, t1.c0, v0.c2)))) NOT BETWEEN (v0.c1 COLLATE NOCASE) AND (((t1.c0) NOT NULL))));
SELECT * FROM rt0, t1, v0, rt1 WHERE (CAST(((t1.c1)LIKE(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)LIKE(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT * FROM rt0, t1, v0, rt1 WHERE (CAST(((t1.c1)LIKE(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1)LIKE(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt0, t1, v0, rt1);
SELECT * FROM rt0, t1, v0, rt1 WHERE (CAST(((t1.c1)LIKE(NULL)) AS INTEGER));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON '-1753588830' INNER JOIN t1 ON (((('-1334329814')>>(rt1.c1))) IS FALSE) WHERE (COALESCE(((t1.c3) BETWEEN (929735413) AND (v0.c2)), v0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t1.c3) BETWEEN (929735413) AND (v0.c2)), v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON '-1753588830' INNER JOIN t1 ON (((('-1334329814')>>(rt1.c1))) IS FALSE));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON '-1753588830' INNER JOIN t1 ON (((('-1334329814')>>(rt1.c1))) IS FALSE) WHERE (COALESCE(((t1.c3) BETWEEN (929735413) AND (v0.c2)), v0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((COALESCE(((t1.c3) BETWEEN (929735413) AND (v0.c2)), v0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON '-1753588830' INNER JOIN t1 ON (((('-1334329814')>>(rt1.c1))) IS FALSE));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt1 ON '-1753588830' INNER JOIN t1 ON (((('-1334329814')>>(rt1.c1))) IS FALSE) WHERE (COALESCE(((t1.c3) BETWEEN (929735413) AND (v0.c2)), v0.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (- (((v0.c0)<<(x'fe2f')))) WHERE ('1541512256');
SELECT SUM(count) FROM (SELECT (('1541512256') IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON (- (((v0.c0)<<(x'fe2f')))));
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (- (((v0.c0)<<(x'fe2f')))) WHERE ('1541512256');
SELECT SUM(count) FROM (SELECT (('1541512256') IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN v0 ON (- (((v0.c0)<<(x'fe2f')))));
SELECT ALL COUNT(*) FROM rt0, t1 FULL OUTER JOIN v0 ON (- (((v0.c0)<<(x'fe2f')))) WHERE ('1541512256');
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (0.5685162648168745);
SELECT SUM(count) FROM (SELECT ALL ((0.5685162648168745) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (0.5685162648168745);
SELECT SUM(count) FROM (SELECT ALL ((0.5685162648168745) IS TRUE)  as count FROM rt1, v0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (0.5685162648168745);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(v0.c2 AS INTEGER))<<(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS INTEGER))<<(CAST(v0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(v0.c2 AS INTEGER))<<(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c2 AS INTEGER))<<(CAST(v0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE BINARY AS INTEGER)) ORDER BY ((CAST(v0.c2 AS INTEGER))<<(CAST(v0.c1 AS REAL)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1 WHERE ((((CAST(v0.c2 AS NUMERIC)))!=((((v0.c1)OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c2 AS NUMERIC)))<>((((v0.c1)OR(v0.c2)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1 WHERE ((((CAST(v0.c2 AS NUMERIC)))!=((((v0.c1)OR(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c2 AS NUMERIC)))<>((((v0.c1)OR(v0.c2)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1 WHERE ((((CAST(v0.c2 AS NUMERIC)))!=((((v0.c1)OR(v0.c2))))));
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) BETWEEN (((t1.c2)LIKE(t1.c4))) AND (CAST(t1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) ISNULL)) BETWEEN (((t1.c2)LIKE(t1.c4))) AND (CAST(t1.c4 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) BETWEEN (((t1.c2)LIKE(t1.c4))) AND (CAST(t1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1) ISNULL)) BETWEEN (((t1.c2)LIKE(t1.c4))) AND (CAST(t1.c4 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c1) ISNULL)) BETWEEN (((t1.c2)LIKE(t1.c4))) AND (CAST(t1.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((x'')AND(t1.c0)))AND(t1.c3))) ORDER BY (((rt0.c0)<(rt1.c0)) IN ()) DESC, CAST(rt1.c0 AS TEXT)  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(t1.c0)))AND(t1.c3))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((rt0.c0)<(rt1.c0)) IN ()) DESC, CAST(rt1.c0 AS TEXT)  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((x'')AND(t1.c0)))AND(t1.c3))) ORDER BY (((rt0.c0)<(rt1.c0)) IN ()) DESC, CAST(rt1.c0 AS TEXT)  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')AND(t1.c0)))AND(t1.c3))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (((rt0.c0)<(rt1.c0)) IN ()) DESC, CAST(rt1.c0 AS TEXT)  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((x'')AND(t1.c0)))AND(t1.c3))) ORDER BY (((rt0.c0)<(rt1.c0)) IN ()) DESC, CAST(rt1.c0 AS TEXT)  NULLS FIRST, CAST(t1.c0 COLLATE BINARY AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN (v0.c1)) IN (((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c1)LIKE(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN (v0.c1)) IN (((v0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c1)LIKE(NULL)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN (v0.c1)) IN (((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c1)LIKE(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 IN (v0.c1)) IN (((v0.c1) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c1)LIKE(NULL)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 IN (v0.c1)) IN (((v0.c1) IS TRUE)))) ORDER BY ((((CAST(v0.c1 AS REAL))AND(v0.c2 COLLATE NOCASE)))OR(((v0.c1)LIKE(NULL)))) ASC;
SELECT ALL * FROM v0, rt1, t1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c1 AS REAL) AS NUMERIC) WHERE (CAST(((rt0.c2)IS(rt0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS(rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, t1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c1 AS REAL) AS NUMERIC));
SELECT ALL * FROM v0, rt1, t1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c1 AS REAL) AS NUMERIC) WHERE (CAST(((rt0.c2)IS(rt0.c4)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)IS(rt0.c4)) AS INTEGER)) IS TRUE)  as count FROM v0, rt1, t1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c1 AS REAL) AS NUMERIC));
SELECT ALL * FROM v0, rt1, t1 LEFT OUTER JOIN rt0 ON CAST(CAST(t1.c1 AS REAL) AS NUMERIC) WHERE (CAST(((rt0.c2)IS(rt0.c4)) AS INTEGER));
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c5, rt0.c3, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c6, rt0.c6, 'q0'))) AS REAL)) ORDER BY rt0.c6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c5, rt0.c3, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c6, rt0.c6, 'q0'))) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c6 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c5, rt0.c3, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c6, rt0.c6, 'q0'))) AS REAL)) ORDER BY rt0.c6 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c5, rt0.c3, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c6, rt0.c6, 'q0'))) AS REAL)) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c6 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (CAST((((rt0.c5, rt0.c3, rt0.c0)) NOT BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND ((rt0.c6, rt0.c6, 'q0'))) AS REAL)) ORDER BY rt0.c6 ASC  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c5)<=(v0.c2))  WHEN ((((v0.c2)OR(rt0.c3)))OR(0.6806928041700151)) THEN '-1790065903' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5)<=(v0.c2))  WHEN ((((v0.c2)OR(rt0.c3)))OR(0.6806928041700151)) THEN '-1790065903' END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c5)<=(v0.c2))  WHEN ((((v0.c2)OR(rt0.c3)))OR(0.6806928041700151)) THEN '-1790065903' END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c5)<=(v0.c2))  WHEN ((((v0.c2)OR(rt0.c3)))OR(0.6806928041700151)) THEN '-1790065903' END) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c5)<=(v0.c2))  WHEN ((((v0.c2)OR(rt0.c3)))OR(0.6806928041700151)) THEN '-1790065903' END);
SELECT * FROM v0 WHERE (IFNULL((('')==(v0.c2)), ((((v0.c2)AND(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL((('')=(v0.c2)), ((((v0.c2)AND(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((('')==(v0.c2)), ((((v0.c2)AND(v0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((IFNULL((('')=(v0.c2)), ((((v0.c2)AND(v0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (IFNULL((('')==(v0.c2)), ((((v0.c2)AND(v0.c1)))OR(v0.c0))));
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END COLLATE NOCASE);
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c2);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c12 IN ()))==(CASE t1.c2  WHEN t1.c4 THEN t1.c1 ELSE t1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12 IN ()))==(CASE t1.c2  WHEN t1.c4 THEN t1.c1 ELSE t1.c3 END))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c12 IN ()))==(CASE t1.c2  WHEN t1.c4 THEN t1.c1 ELSE t1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12 IN ()))==(CASE t1.c2  WHEN t1.c4 THEN t1.c1 ELSE t1.c3 END))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c12 IN ()))==(CASE t1.c2  WHEN t1.c4 THEN t1.c1 ELSE t1.c3 END)));
SELECT * FROM v0 WHERE ((((((((('-767125808')OR(((v0.c1) IS FALSE))))OR((((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((7.61241749E8, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, x'd3a8'))))))AND(((v0.c0) IS FALSE))))AND(((v0.c2) NOTNULL)))) ORDER BY json_remove(NULL, v0.c2, v0.c2, '-1284315982') COLLATE BINARY, ((((v0.c2) NOTNULL)) BETWEEN (HEX(x'')) AND (((v0.c2) ISNULL))), (+ ((v0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('-767125808')OR(((v0.c1) IS FALSE))))OR((((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((7.61241749E8, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, x'd3a8'))))))AND(((v0.c0) IS FALSE))))AND(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY json_remove(NULL, v0.c2, v0.c2, '-1284315982') COLLATE BINARY, ((((v0.c2) NOTNULL)) BETWEEN (HEX(x'')) AND (((v0.c2) ISNULL))), (+ ((v0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((('-767125808')OR(((v0.c1) IS FALSE))))OR((((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((7.61241749E8, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, x'd3a8'))))))AND(((v0.c0) IS FALSE))))AND(((v0.c2) NOTNULL)))) ORDER BY json_remove(NULL, v0.c2, v0.c2, '-1284315982') COLLATE BINARY, ((((v0.c2) NOTNULL)) BETWEEN (HEX(x'')) AND (((v0.c2) ISNULL))), (+ ((v0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((('-767125808')OR(((v0.c1) IS FALSE))))OR((((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((7.61241749E8, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, x'd3a8'))))))AND(((v0.c0) IS FALSE))))AND(((v0.c2) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY json_remove(NULL, v0.c2, v0.c2, '-1284315982') COLLATE BINARY, ((((v0.c2) NOTNULL)) BETWEEN (HEX(x'')) AND (((v0.c2) ISNULL))), (+ ((v0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((('-767125808')OR(((v0.c1) IS FALSE))))OR((((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((7.61241749E8, v0.c0, v0.c0)) AND ((v0.c1, v0.c1, x'd3a8'))))))AND(((v0.c0) IS FALSE))))AND(((v0.c2) NOTNULL)))) ORDER BY json_remove(NULL, v0.c2, v0.c2, '-1284315982') COLLATE BINARY, ((((v0.c2) NOTNULL)) BETWEEN (HEX(x'')) AND (((v0.c2) ISNULL))), (+ ((v0.c2 IN ()))) ASC  NULLS LAST;
SELECT * FROM t1, rt0, v0, rt1 WHERE (LIKELIHOOD(((v0.c2)IS(t1.c1)), 0.775382997719099)) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((v0.c2)IS(t1.c1)), 0.775382997719099)) IS TRUE)  as count FROM t1, rt0, v0, rt1 ORDER BY rt0.c4 ASC  NULLS FIRST);
SELECT * FROM t1, rt0, v0, rt1 WHERE (LIKELIHOOD(((v0.c2)IS(t1.c1)), 0.775382997719099)) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((v0.c2)IS(t1.c1)), 0.775382997719099)) IS TRUE)  as count FROM t1, rt0, v0, rt1 ORDER BY rt0.c4 ASC  NULLS FIRST);
SELECT * FROM t1, rt0, v0, rt1 WHERE (LIKELIHOOD(((v0.c2)IS(t1.c1)), 0.775382997719099)) ORDER BY rt0.c4 ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))=(((v0.c2)>>(NULL))))) ORDER BY ((COALESCE(x'62c5', v0.c0))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))=(((v0.c2)>>(NULL))))) IS TRUE)  as count FROM v0 ORDER BY ((COALESCE(x'62c5', v0.c0))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))=(((v0.c2)>>(NULL))))) ORDER BY ((COALESCE(x'62c5', v0.c0))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))=(((v0.c2)>>(NULL))))) IS TRUE)  as count FROM v0 ORDER BY ((COALESCE(x'62c5', v0.c0))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS REAL))=(((v0.c2)>>(NULL))))) ORDER BY ((COALESCE(x'62c5', v0.c0))IS(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (('^	Su' IN ())) ORDER BY ((((((((((((((rt0.c4)OR(v0.c1)))OR(rt0.c4)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(rt0.c2))) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c2, v0.c1, v0.c0, rt0.c5, v0.c1))<((rt0.c6, v0.c0, rt0.c5, rt0.c1, 1.180930723E9)))))  NULLS FIRST, (((rt0.c5)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('^	Su' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((((rt0.c4)OR(v0.c1)))OR(rt0.c4)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(rt0.c2))) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c2, v0.c1, v0.c0, rt0.c5, v0.c1))<((rt0.c6, v0.c0, rt0.c5, rt0.c1, 1.180930723E9)))))  NULLS FIRST, (((rt0.c5)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END))) DESC);
SELECT * FROM rt0, v0 WHERE (('^	Su' IN ())) ORDER BY ((((((((((((((rt0.c4)OR(v0.c1)))OR(rt0.c4)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(rt0.c2))) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c2, v0.c1, v0.c0, rt0.c5, v0.c1))<((rt0.c6, v0.c0, rt0.c5, rt0.c1, 1.180930723E9)))))  NULLS FIRST, (((rt0.c5)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((('^	Su' IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((((((rt0.c4)OR(v0.c1)))OR(rt0.c4)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(rt0.c2))) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c2, v0.c1, v0.c0, rt0.c5, v0.c1))<((rt0.c6, v0.c0, rt0.c5, rt0.c1, 1.180930723E9)))))  NULLS FIRST, (((rt0.c5)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END))) DESC);
SELECT * FROM rt0, v0 WHERE (('^	Su' IN ())) ORDER BY ((((((((((((((rt0.c4)OR(v0.c1)))OR(rt0.c4)))AND(v0.c2)))AND(v0.c1)))OR(v0.c1)))AND(rt0.c2))) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c2, v0.c1, v0.c0, rt0.c5, v0.c1))<((rt0.c6, v0.c0, rt0.c5, rt0.c1, 1.180930723E9)))))  NULLS FIRST, (((rt0.c5)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((CASE v0.c0  WHEN rt0.c3 THEN rt0.c1 WHEN '' THEN rt0.c3 WHEN rt0.c4 THEN rt0.c5 END))) DESC;
SELECT * FROM rt1, v0, rt0, t1 WHERE ((((rt1.c2 IN ()))>>((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c6)))))) ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, (((t1.c3)) BETWEEN ((IFNULL(rt1.c2, x'f04e'))) AND ((v0.c2 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))>>((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c6)))))) IS TRUE)  as count FROM rt1, v0, rt0, t1 ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, (((t1.c3)) BETWEEN ((IFNULL(rt1.c2, x'f04e'))) AND ((v0.c2 COLLATE NOCASE))) ASC);
SELECT * FROM rt1, v0, rt0, t1 WHERE ((((rt1.c2 IN ()))>>((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c6)))))) ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, (((t1.c3)) BETWEEN ((IFNULL(rt1.c2, x'f04e'))) AND ((v0.c2 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))>>((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c6)))))) IS TRUE)  as count FROM rt1, v0, rt0, t1 ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, (((t1.c3)) BETWEEN ((IFNULL(rt1.c2, x'f04e'))) AND ((v0.c2 COLLATE NOCASE))) ASC);
SELECT * FROM rt1, v0, rt0, t1 WHERE ((((rt1.c2 IN ()))>>((((rt1.c2)) BETWEEN ((v0.c0)) AND ((rt0.c6)))))) ORDER BY (+ (t1.c0 COLLATE RTRIM)) DESC  NULLS FIRST, (((t1.c3)) BETWEEN ((IFNULL(rt1.c2, x'f04e'))) AND ((v0.c2 COLLATE NOCASE))) ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c3)-(0.0795262168987596)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)-(0.0795262168987596)) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c3)-(0.0795262168987596)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)-(0.0795262168987596)) AS REAL)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST(((rt0.c3)-(0.0795262168987596)) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c1 AS NUMERIC)  WHEN json_extract(v0.c0, v0.c1) THEN '' WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c0) NOTNULL) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (v0.c0 IN (v0.c1)) WHEN ((v0.c1) IS TRUE) THEN v0.c2 WHEN v0.c1 COLLATE RTRIM THEN (((v0.c1, v0.c1, v0.c2))>=((v0.c0, v0.c1, '1513620280'))) END) ORDER BY (- (LOWER(DISTINCT v0.c2)))  NULLS FIRST, (((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))AND(''));
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c1 AS NUMERIC)  WHEN json_extract(v0.c0, v0.c1) THEN '' WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c0) NOTNULL) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (v0.c0 IN (v0.c1)) WHEN ((v0.c1) IS TRUE) THEN v0.c2 WHEN v0.c1 COLLATE RTRIM THEN (((v0.c1, v0.c1, v0.c2))>=((v0.c0, v0.c1, '1513620280'))) END) IS TRUE)  as count FROM v0 ORDER BY (- (LOWER(DISTINCT v0.c2)))  NULLS FIRST, (((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))AND('')));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c1 AS NUMERIC)  WHEN json_extract(v0.c0, v0.c1) THEN '' WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c0) NOTNULL) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (v0.c0 IN (v0.c1)) WHEN ((v0.c1) IS TRUE) THEN v0.c2 WHEN v0.c1 COLLATE RTRIM THEN (((v0.c1, v0.c1, v0.c2))>=((v0.c0, v0.c1, '1513620280'))) END) ORDER BY (- (LOWER(DISTINCT v0.c2)))  NULLS FIRST, (((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))AND(''));
SELECT SUM(count) FROM (SELECT ((CASE CAST(v0.c1 AS NUMERIC)  WHEN json_extract(v0.c0, v0.c1) THEN '' WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c0) NOTNULL) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (v0.c0 IN (v0.c1)) WHEN ((v0.c1) IS TRUE) THEN v0.c2 WHEN v0.c1 COLLATE RTRIM THEN (((v0.c1, v0.c1, v0.c2))>=((v0.c0, v0.c1, '1513620280'))) END) IS TRUE)  as count FROM v0 ORDER BY (- (LOWER(DISTINCT v0.c2)))  NULLS FIRST, (((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))AND('')));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CAST(v0.c1 AS NUMERIC)  WHEN json_extract(v0.c0, v0.c1) THEN '' WHEN ((((((((v0.c2)AND(v0.c1)))AND(v0.c1)))OR(v0.c1)))OR(v0.c2)) THEN ((v0.c0) NOTNULL) WHEN CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END THEN (v0.c0 IN (v0.c1)) WHEN ((v0.c1) IS TRUE) THEN v0.c2 WHEN v0.c1 COLLATE RTRIM THEN (((v0.c1, v0.c1, v0.c2))>=((v0.c0, v0.c1, '1513620280'))) END) ORDER BY (- (LOWER(DISTINCT v0.c2)))  NULLS FIRST, (((((v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c1, x'', v0.c0)) AND ((v0.c1, v0.c1, v0.c0))))AND(''));
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(t1.c2)))) AND ((((t1.c0)>(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((rt1.c1)!=(t1.c2)))) AND ((((t1.c0)>(t1.c1)))))) IS TRUE)  as count FROM t1, rt0, rt1 NOT INDEXED);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(t1.c2)))) AND ((((t1.c0)>(t1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((rt1.c1)!=(t1.c2)))) AND ((((t1.c0)>(t1.c1)))))) IS TRUE)  as count FROM t1, rt0, rt1 NOT INDEXED);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(t1.c2)))) AND ((((t1.c0)>(t1.c1))))));
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON ((((((t1.c3))>=((t1.c3)))))>=((CAST(t1.c3 AS NUMERIC)))) INNER JOIN rt1 ON CASE WHEN v0.c2 THEN t1.c3 END COLLATE NOCASE WHERE (NULL) ORDER BY CAST(rt1.c1 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN v0 ON ((((((t1.c3))>=((t1.c3)))))>=((CAST(t1.c3 AS NUMERIC)))) INNER JOIN rt1 ON CASE WHEN v0.c2 THEN t1.c3 END COLLATE NOCASE ORDER BY CAST(rt1.c1 COLLATE BINARY AS NUMERIC) ASC);
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON ((((((t1.c3))>=((t1.c3)))))>=((CAST(t1.c3 AS NUMERIC)))) INNER JOIN rt1 ON CASE WHEN v0.c2 THEN t1.c3 END COLLATE NOCASE WHERE (NULL) ORDER BY CAST(rt1.c1 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 INNER JOIN v0 ON ((((((t1.c3))>=((t1.c3)))))>=((CAST(t1.c3 AS NUMERIC)))) INNER JOIN rt1 ON CASE WHEN v0.c2 THEN t1.c3 END COLLATE NOCASE ORDER BY CAST(rt1.c1 COLLATE BINARY AS NUMERIC) ASC);
SELECT COUNT(*) FROM t1 INNER JOIN v0 ON ((((((t1.c3))>=((t1.c3)))))>=((CAST(t1.c3 AS NUMERIC)))) INNER JOIN rt1 ON CASE WHEN v0.c2 THEN t1.c3 END COLLATE NOCASE WHERE (NULL) ORDER BY CAST(rt1.c1 COLLATE BINARY AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER(((((rt0.c4)OR(rt0.c5)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((rt0.c4)OR(rt0.c5)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER(((((rt0.c4)OR(rt0.c5)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((((rt0.c4)OR(rt0.c5)))AND(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LOWER(((((rt0.c4)OR(rt0.c5)))AND(rt0.c2))));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((0xfffffffff65112f1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((0Xfffffffff65112f1) IS TRUE))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((0xfffffffff65112f1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((0Xfffffffff65112f1) IS TRUE))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((((rt0.c5)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((0xfffffffff65112f1) IS TRUE)))));
SELECT ALL * FROM t1 INDEXED BY i10 WHERE ((+ (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 INDEXED BY i10);
SELECT ALL * FROM t1 INDEXED BY i10 WHERE ((+ (((t1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1 INDEXED BY i10);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3)>=(rt1.c0))  WHEN ((((rt0.c5)AND(rt0.c0)))AND(t1.c2)) THEN CAST(t1.c0 AS TEXT) END FULL OUTER JOIN rt1 ON rt0.c2 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (CHANGES()) AND (rt0.c5 COLLATE RTRIM))) ORDER BY CAST(0.281352603117614 AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (CHANGES()) AND (rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3)>=(rt1.c0))  WHEN ((((rt0.c5)AND(rt0.c0)))AND(t1.c2)) THEN CAST(t1.c0 AS TEXT) END FULL OUTER JOIN rt1 ON rt0.c2 ORDER BY CAST(0.281352603117614 AS INTEGER) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3)>=(rt1.c0))  WHEN ((((rt0.c5)AND(rt0.c0)))AND(t1.c2)) THEN CAST(t1.c0 AS TEXT) END FULL OUTER JOIN rt1 ON rt0.c2 WHERE (((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (CHANGES()) AND (rt0.c5 COLLATE RTRIM))) ORDER BY CAST(0.281352603117614 AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC)) NOT BETWEEN (CHANGES()) AND (rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CASE ((rt0.c3)>=(rt1.c0))  WHEN ((((rt0.c5)AND(rt0.c0)))AND(t1.c2)) THEN CAST(t1.c0 AS TEXT) END FULL OUTER JOIN rt1 ON rt0.c2 ORDER BY CAST(0.281352603117614 AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (-1314660400) AND (t1.c3)) THEN (NOT (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(t1.c0 AS TEXT) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt0.c1)) THEN (((v0.c2))<=((t1.c12))) ELSE ((t1.c3) NOT BETWEEN (rt0.c6) AND (t1.c2)) END) ORDER BY ((((CAST(rt0.c3 AS NUMERIC))AND(CAST(0.16133750853241136 AS INTEGER))))OR(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT BETWEEN (-1314660400) AND (t1.c3)) THEN (NOT (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(t1.c0 AS TEXT) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt0.c1)) THEN (((v0.c2))<=((t1.c12))) ELSE ((t1.c3) NOT BETWEEN (rt0.c6) AND (t1.c2)) END) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY ((((CAST(rt0.c3 AS NUMERIC))AND(CAST(0.16133750853241136 AS INTEGER))))OR(rt1.c1)));
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (-1314660400) AND (t1.c3)) THEN (NOT (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(t1.c0 AS TEXT) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt0.c1)) THEN (((v0.c2))<=((t1.c12))) ELSE ((t1.c3) NOT BETWEEN (rt0.c6) AND (t1.c2)) END) ORDER BY ((((CAST(rt0.c3 AS NUMERIC))AND(CAST(0.16133750853241136 AS INTEGER))))OR(rt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c1) NOT BETWEEN (-1314660400) AND (t1.c3)) THEN (NOT (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(t1.c0 AS TEXT) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt0.c1)) THEN (((v0.c2))<=((t1.c12))) ELSE ((t1.c3) NOT BETWEEN (rt0.c6) AND (t1.c2)) END) IS TRUE)  as count FROM v0, t1, rt0, rt1 ORDER BY ((((CAST(rt0.c3 AS NUMERIC))AND(CAST(0.16133750853241136 AS INTEGER))))OR(rt1.c1)));
SELECT COUNT(*) FROM v0, t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c1) NOT BETWEEN (-1314660400) AND (t1.c3)) THEN (NOT (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN CAST(t1.c0 AS TEXT) WHEN ((rt1.c1) BETWEEN (NULL) AND (rt0.c1)) THEN (((v0.c2))<=((t1.c12))) ELSE ((t1.c3) NOT BETWEEN (rt0.c6) AND (t1.c2)) END) ORDER BY ((((CAST(rt0.c3 AS NUMERIC))AND(CAST(0.16133750853241136 AS INTEGER))))OR(rt1.c1));
SELECT ALL * FROM rt1, t1, v0 WHERE ('>g{') ORDER BY UPPER(CASE WHEN t1.c4 THEN v0.c2 WHEN v0.c2 THEN t1.c3 WHEN t1.c1 THEN t1.c4 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('>g{') IS TRUE)  as count FROM rt1, t1, v0 ORDER BY UPPER(CASE WHEN t1.c4 THEN v0.c2 WHEN v0.c2 THEN t1.c3 WHEN t1.c1 THEN t1.c4 END)  NULLS FIRST);
SELECT ALL * FROM rt1, t1, v0 WHERE ('>g{') ORDER BY UPPER(CASE WHEN t1.c4 THEN v0.c2 WHEN v0.c2 THEN t1.c3 WHEN t1.c1 THEN t1.c4 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('>g{') IS TRUE)  as count FROM rt1, t1, v0 ORDER BY UPPER(CASE WHEN t1.c4 THEN v0.c2 WHEN v0.c2 THEN t1.c3 WHEN t1.c1 THEN t1.c4 END)  NULLS FIRST);
SELECT ALL * FROM rt1, t1, v0 WHERE ('>g{') ORDER BY UPPER(CASE WHEN t1.c4 THEN v0.c2 WHEN v0.c2 THEN t1.c3 WHEN t1.c1 THEN t1.c4 END)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ('-1218054904') ORDER BY ((((rt0.c6) ISNULL))==(rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1218054904') IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((rt0.c6) ISNULL))==(rt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ('-1218054904') ORDER BY ((((rt0.c6) ISNULL))==(rt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1218054904') IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((rt0.c6) ISNULL))==(rt0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ('-1218054904') ORDER BY ((((rt0.c6) ISNULL))==(rt0.c0 COLLATE BINARY)) DESC;
SELECT ALL * FROM rt0, t1 INDEXED BY i82, rt1, v0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (t1.c2 IN ()) END) ORDER BY ((t1.c12) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN (t1.c2 IN ()) END) IS TRUE)  as count FROM rt0, t1 INDEXED BY i82, rt1, v0 ORDER BY ((t1.c12) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 INDEXED BY i82, rt1, v0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (t1.c2 IN ()) END) ORDER BY ((t1.c12) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE RTRIM THEN (t1.c2 IN ()) END) IS TRUE)  as count FROM rt0, t1 INDEXED BY i82, rt1, v0 ORDER BY ((t1.c12) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt0, t1 INDEXED BY i82, rt1, v0 WHERE (CASE WHEN rt1.c0 COLLATE RTRIM THEN (t1.c2 IN ()) END) ORDER BY ((t1.c12) NOT BETWEEN (((x'') NOT BETWEEN (rt0.c1) AND (v0.c2))) AND (((v0.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM v0 INDEXED BY i10 WHERE (((((v0.c1) IS TRUE)) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0))))) ORDER BY (NOT (v0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i10 ORDER BY (NOT (v0.c1)) ASC  NULLS LAST);
SELECT ALL * FROM v0 INDEXED BY i10 WHERE (((((v0.c1) IS TRUE)) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0))))) ORDER BY (NOT (v0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) IS TRUE)) NOT BETWEEN (CAST(v0.c2 AS TEXT)) AND (((((((((v0.c1)OR(v0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i10 ORDER BY (NOT (v0.c1)) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((CASE WHEN '677503899' THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN 'm觧' END))>(((- ('1153496589'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN '677503899' THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN 'm觧' END))>(((- ('1153496589')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN '677503899' THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN 'm觧' END))>(((- ('1153496589'))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN '677503899' THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN 'm觧' END))>(((- ('1153496589')))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN '677503899' THEN rt0.c5 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c6 THEN 'm觧' END))>(((- ('1153496589'))))));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT t1.c1 COLLATE RTRIM, ((('1320876367')) NOT BETWEEN ((t1.c4)) AND ((t1.c0)))) WHERE ((+ ((0.8670644574114198 IN ())))) ORDER BY CASE WHEN (+ (v0.c0)) THEN t1.c3 COLLATE NOCASE ELSE ((v0.c2)!=(t1.c2)) END ASC, CAST(v0.c2 AS REAL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((+ ((0.8670644574114198 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT t1.c1 COLLATE RTRIM, ((('1320876367')) NOT BETWEEN ((t1.c4)) AND ((t1.c0)))) ORDER BY CASE WHEN (+ (v0.c0)) THEN t1.c3 COLLATE NOCASE ELSE ((v0.c2)!=(t1.c2)) END ASC, CAST(v0.c2 AS REAL) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT t1.c1 COLLATE RTRIM, ((('1320876367')) NOT BETWEEN ((t1.c4)) AND ((t1.c0)))) WHERE ((+ ((0.8670644574114198 IN ())))) ORDER BY CASE WHEN (+ (v0.c0)) THEN t1.c3 COLLATE NOCASE ELSE ((v0.c2)!=(t1.c2)) END ASC, CAST(v0.c2 AS REAL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((+ ((0.8670644574114198 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT t1.c1 COLLATE RTRIM, ((('1320876367')) NOT BETWEEN ((t1.c4)) AND ((t1.c0)))) ORDER BY CASE WHEN (+ (v0.c0)) THEN t1.c3 COLLATE NOCASE ELSE ((v0.c2)!=(t1.c2)) END ASC, CAST(v0.c2 AS REAL) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN v0 ON COALESCE(DISTINCT t1.c1 COLLATE RTRIM, ((('1320876367')) NOT BETWEEN ((t1.c4)) AND ((t1.c0)))) WHERE ((+ ((0.8670644574114198 IN ())))) ORDER BY CASE WHEN (+ (v0.c0)) THEN t1.c3 COLLATE NOCASE ELSE ((v0.c2)!=(t1.c2)) END ASC, CAST(v0.c2 AS REAL) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (NULL) ORDER BY ((rt0.c5)||(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, rt1, v0 ORDER BY ((rt0.c5)||(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (NULL) ORDER BY ((rt0.c5)||(rt0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, rt1, v0 ORDER BY ((rt0.c5)||(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t1, rt0, rt1, v0 WHERE (NULL) ORDER BY ((rt0.c5)||(rt0.c2)) COLLATE BINARY;
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c5)IS NOT(t1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(t1.c1))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c5)IS NOT(t1.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)IS NOT(t1.c1))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((rt0.c5)IS NOT(t1.c1))) IS FALSE));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (~ (CAST(rt1.c2 AS TEXT))) WHERE (CASE v0.c2  WHEN rt1.c2 THEN 1.7976931348623157E308 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN rt1.c2 THEN 1.7976931348623157E308 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (~ (CAST(rt1.c2 AS TEXT))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (~ (CAST(rt1.c2 AS TEXT))) WHERE (CASE v0.c2  WHEN rt1.c2 THEN 1.7976931348623157E308 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c2  WHEN rt1.c2 THEN 1.7976931348623157E308 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (~ (CAST(rt1.c2 AS TEXT))));
SELECT ALL * FROM rt1 FULL OUTER JOIN v0 ON (~ (CAST(rt1.c2 AS TEXT))) WHERE (CASE v0.c2  WHEN rt1.c2 THEN 1.7976931348623157E308 WHEN rt1.c0 THEN v0.c0 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c0 END COLLATE BINARY);
SELECT ALL * FROM t1 WHERE (((((NULL)OR(CAST(0.2554554569007703 AS TEXT))))AND(-1043454557))) ORDER BY ((((((((((t1.c2)%(t1.c12)))OR(NULL)))AND(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c3)))AND(t1.c1)))))OR((NULL IN (x'')))))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c3)>>(1406346343))) NOTNULL) ASC  NULLS LAST, GLOB((- (t1.c2)), t1.c12 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CAST(0.2554554569007703 AS TEXT))))AND(-1043454557))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c2)%(t1.c12)))OR(NULL)))AND(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c3)))AND(t1.c1)))))OR((NULL IN (x'')))))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c3)>>(1406346343))) NOTNULL) ASC  NULLS LAST, GLOB((- (t1.c2)), t1.c12 COLLATE BINARY) ASC);
SELECT ALL * FROM t1 WHERE (((((NULL)OR(CAST(0.2554554569007703 AS TEXT))))AND(-1043454557))) ORDER BY ((((((((((t1.c2)%(t1.c12)))OR(NULL)))AND(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c3)))AND(t1.c1)))))OR((NULL IN (x'')))))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c3)>>(1406346343))) NOTNULL) ASC  NULLS LAST, GLOB((- (t1.c2)), t1.c12 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(CAST(0.2554554569007703 AS TEXT))))AND(-1043454557))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c2)%(t1.c12)))OR(NULL)))AND(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c3)))AND(t1.c1)))))OR((NULL IN (x'')))))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c3)>>(1406346343))) NOTNULL) ASC  NULLS LAST, GLOB((- (t1.c2)), t1.c12 COLLATE BINARY) ASC);
SELECT ALL * FROM t1 WHERE (((((NULL)OR(CAST(0.2554554569007703 AS TEXT))))AND(-1043454557))) ORDER BY ((((((((((t1.c2)%(t1.c12)))OR(NULL)))AND(((((((((t1.c1)OR(t1.c2)))OR(t1.c0)))AND(t1.c3)))AND(t1.c1)))))OR((NULL IN (x'')))))OR(t1.c1 COLLATE NOCASE)) DESC  NULLS FIRST, ((((t1.c3)>>(1406346343))) NOTNULL) ASC  NULLS LAST, GLOB((- (t1.c2)), t1.c12 COLLATE BINARY) ASC;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CASE WHEN (+ (v0.c2)) THEN ((t1.c1) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((t1.c12)&(v0.c0)) END) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))IS NOT(((t1.c2)+(v0.c1)))), ((((t1.c4, t1.c2, t1.c3))==((t1.c3, t1.c3, t1.c3))) IN ((((v0.c2, t1.c2, x'e641'))<=((v0.c0, v0.c2, t1.c4))), ((v0.c0) IS FALSE))), ((TOTAL_CHANGES()) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(t1.c3))) AND (((t1.c4)<(v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c2)) THEN ((t1.c1) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((t1.c12)&(v0.c0)) END) IS TRUE)  as count FROM t1, v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))IS NOT(((t1.c2)+(v0.c1)))), ((((t1.c4, t1.c2, t1.c3))=((t1.c3, t1.c3, t1.c3))) IN ((((v0.c2, t1.c2, x'e641'))<=((v0.c0, v0.c2, t1.c4))), ((v0.c0) IS FALSE))), ((TOTAL_CHANGES()) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(t1.c3))) AND (((t1.c4)<(v0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CASE WHEN (+ (v0.c2)) THEN ((t1.c1) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((t1.c12)&(v0.c0)) END) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))IS NOT(((t1.c2)+(v0.c1)))), ((((t1.c4, t1.c2, t1.c3))==((t1.c3, t1.c3, t1.c3))) IN ((((v0.c2, t1.c2, x'e641'))<=((v0.c0, v0.c2, t1.c4))), ((v0.c0) IS FALSE))), ((TOTAL_CHANGES()) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(t1.c3))) AND (((t1.c4)<(v0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (v0.c2)) THEN ((t1.c1) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((t1.c12)&(v0.c0)) END) IS TRUE)  as count FROM t1, v0 ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))IS NOT(((t1.c2)+(v0.c1)))), ((((t1.c4, t1.c2, t1.c3))=((t1.c3, t1.c3, t1.c3))) IN ((((v0.c2, t1.c2, x'e641'))<=((v0.c0, v0.c2, t1.c4))), ((v0.c0) IS FALSE))), ((TOTAL_CHANGES()) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(t1.c3))) AND (((t1.c4)<(v0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (CASE WHEN (+ (v0.c2)) THEN ((t1.c1) BETWEEN (t1.c2) AND (v0.c2)) ELSE ((t1.c12)&(v0.c0)) END) ORDER BY ((((v0.c1) BETWEEN (v0.c0) AND (v0.c1)))IS NOT(((t1.c2)+(v0.c1)))), ((((t1.c4, t1.c2, t1.c3))==((t1.c3, t1.c3, t1.c3))) IN ((((v0.c2, t1.c2, x'e641'))<=((v0.c0, v0.c2, t1.c4))), ((v0.c0) IS FALSE))), ((TOTAL_CHANGES()) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(t1.c3))) AND (((t1.c4)<(v0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0 CROSS JOIN t1 ON (+ (((v0.c2)>>(v0.c1)))) WHERE (((t1.c0)<(CASE WHEN t1.c3 THEN v0.c2 ELSE t1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<(CASE WHEN t1.c3 THEN v0.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, v0 CROSS JOIN t1 ON (+ (((v0.c2)>>(v0.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 CROSS JOIN t1 ON (+ (((v0.c2)>>(v0.c1)))) WHERE (((t1.c0)<(CASE WHEN t1.c3 THEN v0.c2 ELSE t1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c0)<(CASE WHEN t1.c3 THEN v0.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, v0 CROSS JOIN t1 ON (+ (((v0.c2)>>(v0.c1)))));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 CROSS JOIN t1 ON (+ (((v0.c2)>>(v0.c1)))) WHERE (((t1.c0)<(CASE WHEN t1.c3 THEN v0.c2 ELSE t1.c1 END)));
SELECT ALL COUNT(*) FROM v0 INDEXED BY i10 WHERE (-1239314179) ORDER BY (((x'348c27b0' IN ()))GLOB(TOTAL_CHANGES()))  NULLS LAST, v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1239314179) IS TRUE)  as count FROM v0 INDEXED BY i10 ORDER BY (((x'348c27b0' IN ()))GLOB(TOTAL_CHANGES()))  NULLS LAST, v0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i10 WHERE (-1239314179) ORDER BY (((x'348c27b0' IN ()))GLOB(TOTAL_CHANGES()))  NULLS LAST, v0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1239314179) IS TRUE)  as count FROM v0 INDEXED BY i10 ORDER BY (((x'348c27b0' IN ()))GLOB(TOTAL_CHANGES()))  NULLS LAST, v0.c2 DESC  NULLS FIRST);
SELECT * FROM rt1, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(rt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(rt1.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(SQLITE_COMPILEOPTION_GET(rt1.c0) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE (CAST(SQLITE_COMPILEOPTION_GET(rt1.c0) AS NUMERIC));
SELECT * FROM t1 WHERE ((((((t1.c0))=((t1.c12)))) NOT BETWEEN (t1.c4 COLLATE NOCASE) AND (((((((((t1.c12)AND(t1.c4)))OR(t1.c1)))OR(t1.c2)))OR(0.19063807206151528))))) ORDER BY ((((t1.c3) IS TRUE))IS((((t1.c3, x'', t1.c4, t1.c12, t1.c3)) NOT BETWEEN ((t1.c4, t1.c3, t1.c0, t1.c4, t1.c4)) AND ((t1.c3, t1.c1, t1.c0, t1.c1, t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))==((t1.c12)))) NOT BETWEEN (t1.c4 COLLATE NOCASE) AND (((((((((t1.c12)AND(t1.c4)))OR(t1.c1)))OR(t1.c2)))OR(0.19063807206151528))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c3) IS TRUE))IS((((t1.c3, x'', t1.c4, t1.c12, t1.c3)) NOT BETWEEN ((t1.c4, t1.c3, t1.c0, t1.c4, t1.c4)) AND ((t1.c3, t1.c1, t1.c0, t1.c1, t1.c0))))) DESC);
SELECT * FROM t1 WHERE ((((((t1.c0))=((t1.c12)))) NOT BETWEEN (t1.c4 COLLATE NOCASE) AND (((((((((t1.c12)AND(t1.c4)))OR(t1.c1)))OR(t1.c2)))OR(0.19063807206151528))))) ORDER BY ((((t1.c3) IS TRUE))IS((((t1.c3, x'', t1.c4, t1.c12, t1.c3)) NOT BETWEEN ((t1.c4, t1.c3, t1.c0, t1.c4, t1.c4)) AND ((t1.c3, t1.c1, t1.c0, t1.c1, t1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0))==((t1.c12)))) NOT BETWEEN (t1.c4 COLLATE NOCASE) AND (((((((((t1.c12)AND(t1.c4)))OR(t1.c1)))OR(t1.c2)))OR(0.19063807206151528))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c3) IS TRUE))IS((((t1.c3, x'', t1.c4, t1.c12, t1.c3)) NOT BETWEEN ((t1.c4, t1.c3, t1.c0, t1.c4, t1.c4)) AND ((t1.c3, t1.c1, t1.c0, t1.c1, t1.c0))))) DESC);
SELECT * FROM t1 WHERE ((((((t1.c0))=((t1.c12)))) NOT BETWEEN (t1.c4 COLLATE NOCASE) AND (((((((((t1.c12)AND(t1.c4)))OR(t1.c1)))OR(t1.c2)))OR(0.19063807206151528))))) ORDER BY ((((t1.c3) IS TRUE))IS((((t1.c3, x'', t1.c4, t1.c12, t1.c3)) NOT BETWEEN ((t1.c4, t1.c3, t1.c0, t1.c4, t1.c4)) AND ((t1.c3, t1.c1, t1.c0, t1.c1, t1.c0))))) DESC;
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0) ORDER BY (((t1.c1))==((UPPER(NULL))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, v0 ORDER BY (((t1.c1))=((UPPER(NULL)))));
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0) ORDER BY (((t1.c1))==((UPPER(NULL))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1, v0 ORDER BY (((t1.c1))=((UPPER(NULL)))));
SELECT COUNT(*) FROM t1, v0 WHERE (t1.c0) ORDER BY (((t1.c1))==((UPPER(NULL))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 NATURAL JOIN v0 WHERE (((t1.c1) NOT BETWEEN (((rt0.c0)GLOB(t1.c2))) AND (((t1.c4)+(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN (((rt0.c0)GLOB(t1.c2))) AND (((t1.c4)+(t1.c2))))) IS TRUE)  as count FROM rt1, t1, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 NATURAL JOIN v0 WHERE (((t1.c1) NOT BETWEEN (((rt0.c0)GLOB(t1.c2))) AND (((t1.c4)+(t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) NOT BETWEEN (((rt0.c0)GLOB(t1.c2))) AND (((t1.c4)+(t1.c2))))) IS TRUE)  as count FROM rt1, t1, rt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 NATURAL JOIN v0 WHERE (((t1.c1) NOT BETWEEN (((rt0.c0)GLOB(t1.c2))) AND (((t1.c4)+(t1.c2)))));
SELECT * FROM rt1, v0, rt0, t1 WHERE (((0xffffffffcd232463) NOT NULL)) ORDER BY CASE (((t1.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))  WHEN CASE rt1.c2  WHEN t1.c4 THEN rt0.c4 END THEN ((rt1.c0)||(t1.c3)) ELSE CAST(NULL AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffcd232463) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t1 ORDER BY CASE (((t1.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))  WHEN CASE rt1.c2  WHEN t1.c4 THEN rt0.c4 END THEN ((rt1.c0)||(t1.c3)) ELSE CAST(NULL AS BLOB) END);
SELECT * FROM rt1, v0, rt0, t1 WHERE (((0xffffffffcd232463) NOT NULL)) ORDER BY CASE (((t1.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))  WHEN CASE rt1.c2  WHEN t1.c4 THEN rt0.c4 END THEN ((rt1.c0)||(t1.c3)) ELSE CAST(NULL AS BLOB) END;
SELECT SUM(count) FROM (SELECT ALL ((((0xffffffffcd232463) NOT NULL)) IS TRUE)  as count FROM rt1, v0, rt0, t1 ORDER BY CASE (((t1.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))  WHEN CASE rt1.c2  WHEN t1.c4 THEN rt0.c4 END THEN ((rt1.c0)||(t1.c3)) ELSE CAST(NULL AS BLOB) END);
SELECT * FROM rt1, v0, rt0, t1 WHERE (((0xffffffffcd232463) NOT NULL)) ORDER BY CASE (((t1.c2)) BETWEEN ((rt0.c1)) AND ((t1.c0)))  WHEN CASE rt1.c2  WHEN t1.c4 THEN rt0.c4 END THEN ((rt1.c0)||(t1.c3)) ELSE CAST(NULL AS BLOB) END;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c4, rt0.c2))) BETWEEN ((((rt0.c5))>((v0.c1)))) AND ((((rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c0))>((rt0.c3, rt0.c6, rt0.c0, rt0.c3, v0.c0))))) WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c4, rt0.c2))) BETWEEN ((((rt0.c5))>((v0.c1)))) AND ((((rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c0))>((rt0.c3, rt0.c6, rt0.c0, rt0.c3, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c4, rt0.c2))) BETWEEN ((((rt0.c5))>((v0.c1)))) AND ((((rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c0))>((rt0.c3, rt0.c6, rt0.c0, rt0.c3, v0.c0))))) WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) AS REAL)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c4, rt0.c2))) BETWEEN ((((rt0.c5))>((v0.c1)))) AND ((((rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c0))>((rt0.c3, rt0.c6, rt0.c0, rt0.c3, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c2 IN (rt0.c4, rt0.c2))) BETWEEN ((((rt0.c5))>((v0.c1)))) AND ((((rt0.c1, v0.c1, v0.c2, v0.c0, rt0.c0))>((rt0.c3, rt0.c6, rt0.c0, rt0.c3, v0.c0))))) WHERE (CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY rt0.c3;
SELECT * FROM v0, rt1, t1 WHERE (((CAST(rt1.c2 AS REAL))GLOB(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((((((v0.c2))>((v0.c0))))OR(IFNULL(NULL, rt1.c0))))OR((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL))GLOB(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY (((((((v0.c2))>((v0.c0))))OR(IFNULL(NULL, rt1.c0))))OR((NOT (rt1.c1))))  NULLS LAST);
SELECT * FROM v0, rt1, t1 WHERE (((CAST(rt1.c2 AS REAL))GLOB(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((((((v0.c2))>((v0.c0))))OR(IFNULL(NULL, rt1.c0))))OR((NOT (rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL))GLOB(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM v0, rt1, t1 ORDER BY (((((((v0.c2))>((v0.c0))))OR(IFNULL(NULL, rt1.c0))))OR((NOT (rt1.c1))))  NULLS LAST);
SELECT * FROM v0, rt1, t1 WHERE (((CAST(rt1.c2 AS REAL))GLOB(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) ORDER BY (((((((v0.c2))>((v0.c0))))OR(IFNULL(NULL, rt1.c0))))OR((NOT (rt1.c1))))  NULLS LAST;
SELECT * FROM v0 WHERE (((((((v0.c1)AND(v0.c2)))OR(v0.c1)))<(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END))) ORDER BY ((((CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN -1675839213 THEN v0.c0 END)OR(((v0.c0) NOTNULL))))AND((v0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))<(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN -1675839213 THEN v0.c0 END)OR(((v0.c0) NOTNULL))))AND((v0.c2 IN ())))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((v0.c1)AND(v0.c2)))OR(v0.c1)))<(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END))) ORDER BY ((((CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN -1675839213 THEN v0.c0 END)OR(((v0.c0) NOTNULL))))AND((v0.c2 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)AND(v0.c2)))OR(v0.c1)))<(CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END))) IS TRUE)  as count FROM v0 ORDER BY ((((CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN -1675839213 THEN v0.c0 END)OR(((v0.c0) NOTNULL))))AND((v0.c2 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt0.c6)LIKE(rt0.c1)) AS NUMERIC)) ORDER BY (NOT ((+ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c6)LIKE(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (NOT ((+ (rt1.c2)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt0.c6)LIKE(rt0.c1)) AS NUMERIC)) ORDER BY (NOT ((+ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c6)LIKE(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (NOT ((+ (rt1.c2)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(((rt0.c6)LIKE(rt0.c1)) AS NUMERIC)) ORDER BY (NOT ((+ (rt1.c2))));
SELECT ALL * FROM t1, rt1, rt0, v0 WHERE ((~ ((((t1.c1))=((t1.c12)))))) ORDER BY (~ ((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c1))=((t1.c12)))))) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY (~ ((rt0.c4 IN ()))));
SELECT ALL * FROM t1, rt1, rt0, v0 WHERE ((~ ((((t1.c1))=((t1.c12)))))) ORDER BY (~ ((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT (((~ ((((t1.c1))=((t1.c12)))))) IS TRUE)  as count FROM t1, rt1, rt0, v0 ORDER BY (~ ((rt0.c4 IN ()))));
SELECT ALL * FROM t1, rt1, rt0, v0 WHERE ((~ ((((t1.c1))=((t1.c12)))))) ORDER BY (~ ((rt0.c4 IN ())));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c1)IS NOT(v0.c2)) THEN (((v0.c1, t1.c2, t1.c1, v0.c2, t1.c0))>=((t1.c4, v0.c2, v0.c0, t1.c2, t1.c2))) WHEN (v0.c0 IN (t1.c1)) THEN ((t1.c1)LIKE(t1.c12)) WHEN ((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c0)) THEN CASE WHEN t1.c4 THEN v0.c1 END END WHERE ((CAST(v0.c2 AS NUMERIC) IN (0.701597444338353)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS NUMERIC) IN (0.701597444338353))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c1)IS NOT(v0.c2)) THEN (((v0.c1, t1.c2, t1.c1, v0.c2, t1.c0))>=((t1.c4, v0.c2, v0.c0, t1.c2, t1.c2))) WHEN (v0.c0 IN (t1.c1)) THEN ((t1.c1)LIKE(t1.c12)) WHEN ((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c0)) THEN CASE WHEN t1.c4 THEN v0.c1 END END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c1)IS NOT(v0.c2)) THEN (((v0.c1, t1.c2, t1.c1, v0.c2, t1.c0))>=((t1.c4, v0.c2, v0.c0, t1.c2, t1.c2))) WHEN (v0.c0 IN (t1.c1)) THEN ((t1.c1)LIKE(t1.c12)) WHEN ((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c0)) THEN CASE WHEN t1.c4 THEN v0.c1 END END WHERE ((CAST(v0.c2 AS NUMERIC) IN (0.701597444338353)));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS NUMERIC) IN (0.701597444338353))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c1)IS NOT(v0.c2)) THEN (((v0.c1, t1.c2, t1.c1, v0.c2, t1.c0))>=((t1.c4, v0.c2, v0.c0, t1.c2, t1.c2))) WHEN (v0.c0 IN (t1.c1)) THEN ((t1.c1)LIKE(t1.c12)) WHEN ((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c0)) THEN CASE WHEN t1.c4 THEN v0.c1 END END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c1)IS NOT(v0.c2)) THEN (((v0.c1, t1.c2, t1.c1, v0.c2, t1.c0))>=((t1.c4, v0.c2, v0.c0, t1.c2, t1.c2))) WHEN (v0.c0 IN (t1.c1)) THEN ((t1.c1)LIKE(t1.c12)) WHEN ((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c0)) THEN CASE WHEN t1.c4 THEN v0.c1 END END WHERE ((CAST(v0.c2 AS NUMERIC) IN (0.701597444338353)));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((t1.c4 IN ()))/(((t1.c3) ISNULL)))) ORDER BY HEX(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c4 IN ()))/(((t1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY HEX(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((t1.c4 IN ()))/(((t1.c3) ISNULL)))) ORDER BY HEX(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c4 IN ()))/(((t1.c3) ISNULL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY HEX(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE ((((t1.c4 IN ()))/(((t1.c3) ISNULL)))) ORDER BY HEX(((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c4))) ASC  NULLS LAST;
