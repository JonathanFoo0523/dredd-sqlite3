-- Time: 2024/06/09 09:27:54
-- Database: database97
-- Database version: 3.40.0
-- seed value: 1398106297
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, order=DESC); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1413636632);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('', '') WHERE (NOT ((NOT (vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ((((1.7976931348623157E308) NOTNULL) IN ())); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.4808263255855699) WHERE (((((vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0))))||(vt0.c0 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1413636632);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0xfffffffffc211d78, 0.27243285891263846); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'95f5', c0=-1.413636632E9, c0=x'05db'; -- 0ms;
UPDATE vt0 SET (c0)=('-840340201') WHERE ((('0.27243285891263846')%(vt0.c0)) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '46460'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
UPDATE OR FAIL vt0 SET c0='1249841060'; -- 0ms;
UPDATE vt0 SET (c0)=('') WHERE CHAR(vt0.c0 COLLATE BINARY); -- 0ms;
UPDATE OR FAIL vt0 SET c0=-2046998131 WHERE (('NF' COLLATE RTRIM)LIKE((((vt0.c0))==((vt0.c0))))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.9328719915779109; -- 0ms;
UPDATE vt0 SET c0='' WHERE CAST(CAST(vt0.c0 AS REAL) AS BLOB); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET c0=x''; -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(0X1cbaed4f, x'', '-1404821080'); -- 0ms;
UPDATE OR FAIL vt0 SET c0=NULL WHERE x'876a'; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE vt0 SET c0=x''; -- 1ms;
UPDATE vt0 SET c0=x''; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('|+Z%k+'), (0Xffffffffabbd9de8), (x'01e0'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(x'47cda662') WHERE ((((vt0.c0, vt0.c0, vt0.c0))==(('b', vt0.c0, vt0.c0))) IN (((vt0.c0) ISNULL), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-909571244' AS TEXT)) BETWEEN (0.47979723233861793) AND ((('(0JL),xA\n&')AND('0.9328719915779109')))); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63415'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1.40482108E9, c0='1356771706'; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-703339329,11');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR FAIL vt0 SET (c0, c0)=('1732683902', '1249841060') WHERE ((((((vt0.c0)AND(vt0.c0)))OR((((vt0.c0)) BETWEEN (('(0JL),xA\n&')) AND ((vt0.c0))))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.9643205386670503, c0=x''; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB  CHECK ( ((((c0)>=(c0))) ISNULL))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.6791852785764894) WHERE (((+ (t0.c0)))IS NOT((('-64938632') NOT NULL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'91f7', x'') WHERE ((vt0.c0 IN ()) IN ()); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-64938632'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, '0.9643205386670503')) BETWEEN ((rt0.c0 COLLATE RTRIM, rt0.c0, ((rt0.c1) IS FALSE))) AND ((rt0.c0 COLLATE RTRIM, ((((x'')OR(rt0.c1)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))) ORDER BY (((('샤x~%h(wd')OR(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, '0.9643205386670503')) BETWEEN ((rt0.c0 COLLATE RTRIM, rt0.c0, ((rt0.c1) IS FALSE))) AND ((rt0.c0 COLLATE RTRIM, ((((x'')OR(rt0.c1)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((('샤x~%h(wd')OR(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, '0.9643205386670503')) BETWEEN ((rt0.c0 COLLATE RTRIM, rt0.c0, ((rt0.c1) IS FALSE))) AND ((rt0.c0 COLLATE RTRIM, ((((x'')OR(rt0.c1)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))) ORDER BY (((('샤x~%h(wd')OR(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, '0.9643205386670503')) BETWEEN ((rt0.c0 COLLATE RTRIM, rt0.c0, ((rt0.c1) IS FALSE))) AND ((rt0.c0 COLLATE RTRIM, ((((x'')OR(rt0.c1)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((('샤x~%h(wd')OR(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c1 AS BLOB))) DESC);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1, rt0.c2, '0.9643205386670503')) BETWEEN ((rt0.c0 COLLATE RTRIM, rt0.c0, ((rt0.c1) IS FALSE))) AND ((rt0.c0 COLLATE RTRIM, ((((x'')OR(rt0.c1)))AND(rt0.c0)), CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END)))) ORDER BY (((('샤x~%h(wd')OR(CAST(rt0.c0 AS INTEGER))))OR(CAST(rt0.c1 AS BLOB))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (json_remove(vt0.c0, vt0.c0)))) ORDER BY 0.818334947443342 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.818334947443342 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (json_remove(vt0.c0, vt0.c0)))) ORDER BY 0.818334947443342 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY 0.818334947443342 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (json_remove(vt0.c0, vt0.c0)))) ORDER BY 0.818334947443342 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))OR(vt0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT x'ab1f', 0.3415006264786171)) BETWEEN ('1249100004') AND (((vt0.c0) IS FALSE)))) ORDER BY rt0.c0 DESC, json_patch(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT x'ab1f', 0.3415006264786171)) BETWEEN ('1249100004') AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC, json_patch(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT x'ab1f', 0.3415006264786171)) BETWEEN ('1249100004') AND (((vt0.c0) IS FALSE)))) ORDER BY rt0.c0 DESC, json_patch(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT x'ab1f', 0.3415006264786171)) BETWEEN ('1249100004') AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c0 DESC, json_patch(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT x'ab1f', 0.3415006264786171)) BETWEEN ('1249100004') AND (((vt0.c0) IS FALSE)))) ORDER BY rt0.c0 DESC, json_patch(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1)))&(((rt0.c0)-(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((0X5974fbb3)AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0))=((rt0.c2, rt0.c1, rt0.c2))), ((rt0.c0)>>(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1)))&(((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((0x5974fbb3)AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0))==((rt0.c2, rt0.c1, rt0.c2))), ((rt0.c0)>>(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1)))&(((rt0.c0)-(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((0X5974fbb3)AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0))=((rt0.c2, rt0.c1, rt0.c2))), ((rt0.c0)>>(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1)))&(((rt0.c0)-(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY COALESCE(DISTINCT ((0x5974fbb3)AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0))==((rt0.c2, rt0.c1, rt0.c2))), ((rt0.c0)>>(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)>(rt0.c1)))&(((rt0.c0)-(rt0.c1))))) ORDER BY COALESCE(DISTINCT ((0X5974fbb3)AND(rt0.c0)), (((rt0.c1, rt0.c0, rt0.c0))=((rt0.c2, rt0.c1, rt0.c2))), ((rt0.c0)>>(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.40482108E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE NOCASE), (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.40482108E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT vt0.c0 COLLATE NOCASE), (+ (vt0.c0)));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.40482108E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE NOCASE), (+ (vt0.c0));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.40482108E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT vt0.c0 COLLATE NOCASE), (+ (vt0.c0)));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN -1.40482108E9 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY HEX(DISTINCT vt0.c0 COLLATE NOCASE), (+ (vt0.c0));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) ORDER BY (- (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) ORDER BY (- (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<<((vt0.c0 IN ())))) ORDER BY (- (((vt0.c0) NOTNULL))) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB((- (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) AND (load_extension(vt0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB((- (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) AND (load_extension(vt0.c0, rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB((- (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) AND (load_extension(vt0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((GLOB((- (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) AND (load_extension(vt0.c0, rt0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (GLOB((- (rt0.c2)), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) ORDER BY ((NULL) NOT BETWEEN (((((rt0.c1)OR(rt0.c0)))AND(vt0.c0))) AND (load_extension(vt0.c0, rt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2 IN ()))IS('-840340201'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((rt0.c2 IN ()))IS('-840340201'))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2 IN ()))IS('-840340201'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((rt0.c2 IN ()))IS('-840340201'))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2 IN ()))IS('-840340201'))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((('')OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND ('-1376733600'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((('')OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND ('-1376733600'))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((('')OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND ('-1376733600'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((('')OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND ('-1376733600'))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((('')OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((rt0.c1 IN ())) AND ('-1376733600'))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))))OR(x'')))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c1)*(rt0.c2)))))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))))OR(x'')))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c1)*(rt0.c2)))))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))))OR(x'')))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c1)*(rt0.c2)))))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)*(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))))OR(x'')))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c1)*(rt0.c2)))))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)*(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((((((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)OR(((rt0.c1) BETWEEN (vt0.c0) AND (NULL)))))OR(x'')))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))OR(((rt0.c1)*(rt0.c2)))))AND(((vt0.c0) NOTNULL))))OR(((rt0.c2)*(rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (LIKELY(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CAST(((482012495) NOT NULL) AS TEXT)) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((482012495) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))!=((NOT (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CAST(((482012495) NOT NULL) AS TEXT)) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((482012495) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))!=((NOT (rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE (CAST(((482012495) NOT NULL) AS TEXT)) ORDER BY ((((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))<>((NOT (rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((LIKELY(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((LIKELY(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((LIKELY(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((LIKELY(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0))<=((LIKELY(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE 'FALSE'  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'FALSE'  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 'FALSE'  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 'FALSE'  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE 'FALSE'  WHEN ((vt0.c0)IS(vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), ((rt0.c2) NOT NULL), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND ((((0.6774958177730325)AND(x'')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, LTRIM(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), ((rt0.c2) NOT NULL), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND ((((0.6774958177730325)AND(x'')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, LTRIM(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), ((rt0.c2) NOT NULL), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND ((((0.6774958177730325)AND(x'')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, LTRIM(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), ((rt0.c2) NOT NULL), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND ((((0.6774958177730325)AND(x'')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, LTRIM(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL, rt0.c1, rt0.c1)) NOT BETWEEN (((~ (rt0.c2)), ((rt0.c2) NOT NULL), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))) AND ((((0.6774958177730325)AND(x'')), CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END, LTRIM(rt0.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 1.249100004E9 THEN rt0.c2 END)/(((vt0.c0) IS TRUE))) WHERE ((((((((rt0.c2))>((rt0.c0))))OR((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.6791852785764894, rt0.c1))))))OR(((vt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>((rt0.c0))))OR((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.6791852785764894, rt0.c1))))))OR(((vt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 1.249100004E9 THEN rt0.c2 END)/(((vt0.c0) IS TRUE))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 1.249100004E9 THEN rt0.c2 END)/(((vt0.c0) IS TRUE))) WHERE ((((((((rt0.c2))>((rt0.c0))))OR((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.6791852785764894, rt0.c1))))))OR(((vt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>((rt0.c0))))OR((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.6791852785764894, rt0.c1))))))OR(((vt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 1.249100004E9 THEN rt0.c2 END)/(((vt0.c0) IS TRUE))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN 1.249100004E9 THEN rt0.c2 END)/(((vt0.c0) IS TRUE))) WHERE ((((((((rt0.c2))>((rt0.c0))))OR((((vt0.c0, vt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c1, 0.6791852785764894, rt0.c1))))))OR(((vt0.c0)|(rt0.c0))))) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) NOT BETWEEN (((((rt0.c2)AND(NULL)))AND(rt0.c0))) AND (CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))+(-1036589771))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.14636904564279007))/(((rt0.c1)>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))+(-1036589771))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.14636904564279007))/(((rt0.c1)>(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))+(-1036589771))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.14636904564279007))/(((rt0.c1)>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))+(-1036589771))) IS TRUE)  as count FROM rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.14636904564279007))/(((rt0.c1)>(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))+(-1036589771))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c2, 0.14636904564279007))/(((rt0.c1)>(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((- ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((1.356771706E9) ISNULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((1.356771706E9) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((1.356771706E9) ISNULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((1.356771706E9) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c1) IS FALSE)) ORDER BY ((1.356771706E9) ISNULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)OR(vt0.c0)))||(((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c2, rt0.c1)) COLLATE BINARY) ORDER BY ((0.721662240962297) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c2, rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0.721662240962297) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c2, rt0.c1)) COLLATE BINARY) ORDER BY ((0.721662240962297) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN (rt0.c2, rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((0.721662240962297) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((rt0.c2 IN (rt0.c2, rt0.c1)) COLLATE BINARY) ORDER BY ((0.721662240962297) BETWEEN (((rt0.c2) IS FALSE)) AND (rt0.c2))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((NULL)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c1  WHEN -840340201 THEN 0.9643205386670503 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c1  WHEN -840340201 THEN 0.9643205386670503 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c1  WHEN -840340201 THEN 0.9643205386670503 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c1  WHEN -840340201 THEN 0.9643205386670503 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((NULL)OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(CASE rt0.c1  WHEN -840340201 THEN 0.9643205386670503 END)));
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER)) ORDER BY rt0.c2 ASC, LOWER(DISTINCT (- (rt0.c2)))  NULLS LAST, (((- ('403287961')))>=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, LOWER(DISTINCT (- (rt0.c2)))  NULLS LAST, (((- ('403287961')))>=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER)) ORDER BY rt0.c2 ASC, LOWER(DISTINCT (- (rt0.c2)))  NULLS LAST, (((- ('403287961')))>=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC, LOWER(DISTINCT (- (rt0.c2)))  NULLS LAST, (((- ('403287961')))>=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 END AS INTEGER)) ORDER BY rt0.c2 ASC, LOWER(DISTINCT (- (rt0.c2)))  NULLS LAST, (((- ('403287961')))>=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))));
SELECT * FROM vt0, rt0 WHERE (TRIM((rt0.c0 IN ()), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c0 IN ()), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (TRIM((rt0.c0 IN ()), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM((rt0.c0 IN ()), (rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (TRIM((rt0.c0 IN ()), (rt0.c2 IN ())));
SELECT COUNT(*) FROM rt0, vt0 WHERE ('Bb*');
SELECT SUM(count) FROM (SELECT ALL (('Bb*') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('Bb*');
SELECT SUM(count) FROM (SELECT ALL (('Bb*') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('Bb*');
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c0)LIKE(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0)LIKE(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (ABS(DISTINCT ((rt0.c0)LIKE(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND((~ (rt0.c0)))))AND(json_type(rt0.c0))))OR((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0, rt0.c0, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, x'69f7'))))) WHERE (((rt0.c2)>=(x'')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND((~ (rt0.c0)))))AND(json_type(rt0.c0))))OR((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0, rt0.c0, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, x'69f7'))))) ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND((~ (rt0.c0)))))AND(json_type(rt0.c0))))OR((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0, rt0.c0, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, x'69f7'))))) WHERE (((rt0.c2)>=(x'')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>=(x'')) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND((~ (rt0.c0)))))AND(json_type(rt0.c0))))OR((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0, rt0.c0, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, x'69f7'))))) ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((((((((vt0.c0) NOTNULL))AND((~ (rt0.c0)))))AND(json_type(rt0.c0))))OR((rt0.c0 IN (rt0.c0)))))AND((((rt0.c0, rt0.c0, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, x'69f7'))))) WHERE (((rt0.c2)>=(x'')) COLLATE BINARY) ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((x''))<=((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((x''))<=((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((x''))<=((vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (((x''))<=((vt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))*(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (((x''))<=((vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))%((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))%((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))%((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))%((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))%((+ (vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c2)))OR(((rt0.c0) IS FALSE)))) ORDER BY x'7379' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS BLOB))AND(rt0.c2)))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY x'7379' COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c2)))OR(((rt0.c0) IS FALSE)))) ORDER BY x'7379' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS BLOB))AND(rt0.c2)))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY x'7379' COLLATE RTRIM DESC);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c1 AS BLOB))AND(rt0.c2)))OR(((rt0.c0) IS FALSE)))) ORDER BY x'7379' COLLATE RTRIM DESC;
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (SQLITE_VERSION()) ORDER BY rt0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))<=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))<=(((rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))<=(((rt0.c1 IN ())))));
SELECT COUNT(*) FROM vt0 WHERE (((0.10876872419073147) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.10876872419073147) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.10876872419073147) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.10876872419073147) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.10876872419073147) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c0)==(vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c0) NOTNULL), (rt0.c0 IN (rt0.c2)), rt0.c2, CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c0) NOTNULL), (rt0.c0 IN (rt0.c2)), rt0.c2, CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c0) NOTNULL), (rt0.c0 IN (rt0.c2)), rt0.c2, CAST(rt0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c0) NOTNULL), (rt0.c0 IN (rt0.c2)), rt0.c2, CAST(rt0.c2 AS REAL))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c0) NOTNULL), (rt0.c0 IN (rt0.c2)), rt0.c2, CAST(rt0.c2 AS REAL)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (0.7187123695328728)) WHEN ((x'')&(vt0.c0)) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (0.7187123695328728)) WHEN ((x'')&(vt0.c0)) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (0.7187123695328728)) WHEN ((x'')&(vt0.c0)) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (0.7187123695328728)) WHEN ((x'')&(vt0.c0)) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)) THEN (- (0.7187123695328728)) WHEN ((x'')&(vt0.c0)) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) ELSE ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((UNLIKELY(rt0.c2))-(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UNLIKELY(rt0.c2))-(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((UNLIKELY(rt0.c2))-(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UNLIKELY(rt0.c2))-(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY ((UNLIKELY(rt0.c2))-(((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))=((UPPER(vt0.c0))))) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))=((UPPER(vt0.c0))))) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))==((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0))=((UPPER(vt0.c0))))) ORDER BY (((~ (vt0.c0))) NOT BETWEEN (((vt0.c0)<(vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c0 COLLATE BINARY))) ORDER BY load_extension(rt0.c1 COLLATE RTRIM, (rt0.c0 IN ())) ASC  NULLS LAST, ((RTRIM(rt0.c2))<=(NULL))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(rt0.c1 COLLATE RTRIM, (rt0.c0 IN ())) ASC  NULLS LAST, ((RTRIM(rt0.c2))<=(NULL))  NULLS FIRST, NULL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c0 COLLATE BINARY))) ORDER BY load_extension(rt0.c1 COLLATE RTRIM, (rt0.c0 IN ())) ASC  NULLS LAST, ((RTRIM(rt0.c2))<=(NULL))  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY load_extension(rt0.c1 COLLATE RTRIM, (rt0.c0 IN ())) ASC  NULLS LAST, ((RTRIM(rt0.c2))<=(NULL))  NULLS FIRST, NULL);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0 COLLATE NOCASE)))AND(rt0.c0 COLLATE BINARY))) ORDER BY load_extension(rt0.c1 COLLATE RTRIM, (rt0.c0 IN ())) ASC  NULLS LAST, ((RTRIM(rt0.c2))<=(NULL))  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))/(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))/(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))/(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))/(rt0.c2)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT)) ORDER BY ((((rt0.c2) IS FALSE))/(rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)&(rt0.c1)) ELSE NULL COLLATE BINARY END ASC, (+ (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)&(rt0.c1)) ELSE NULL COLLATE BINARY END ASC, (+ (rt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)&(rt0.c1)) ELSE NULL COLLATE BINARY END ASC, (+ (rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)&(rt0.c1)) ELSE NULL COLLATE BINARY END ASC, (+ (rt0.c2)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c2))  WHEN ((rt0.c1)>(rt0.c1)) THEN (rt0.c2 IN (rt0.c1)) ELSE CAST(rt0.c0 AS BLOB) END) ORDER BY CASE ((rt0.c0)|(rt0.c2))  WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c1)&(rt0.c1)) ELSE NULL COLLATE BINARY END ASC, (+ (rt0.c2)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) ASC);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) ASC);
SELECT * FROM rt0, vt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END) IS FALSE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) BETWEEN ((- (NULL))) AND (LOWER(vt0.c0))), CAST(vt0.c0 AS REAL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) BETWEEN ((- (NULL))) AND (LOWER(vt0.c0))), CAST(vt0.c0 AS REAL) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) BETWEEN ((- (NULL))) AND (LOWER(vt0.c0))), CAST(vt0.c0 AS REAL) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((HEX(vt0.c0)) BETWEEN ((- (NULL))) AND (LOWER(vt0.c0))), CAST(vt0.c0 AS REAL) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE RTRIM) ORDER BY ((HEX(vt0.c0)) BETWEEN ((- (NULL))) AND (LOWER(vt0.c0))), CAST(vt0.c0 AS REAL) COLLATE NOCASE ASC;
SELECT * FROM vt0, rt0 WHERE ((+ (0.27782454036791815)));
SELECT SUM(count) FROM (SELECT (((+ (0.27782454036791815))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((+ (0.27782454036791815)));
SELECT SUM(count) FROM (SELECT (((+ (0.27782454036791815))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((+ (0.27782454036791815)));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)GLOB(vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))!=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))!=((vt0.c0)))) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ('' COLLATE NOCASE) ORDER BY x'5f06' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'5f06' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('' COLLATE NOCASE) ORDER BY x'5f06' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'5f06' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('' COLLATE NOCASE) ORDER BY x'5f06' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ('403287961');
SELECT SUM(count) FROM (SELECT ALL (('403287961') IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('403287961');
SELECT SUM(count) FROM (SELECT ALL (('403287961') IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('403287961');
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY ((- ('᷷M&귝')) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '1249100004' WHEN '	,' THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- ('᷷M&귝')) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '1249100004' WHEN '	,' THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY ((- ('᷷M&귝')) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '1249100004' WHEN '	,' THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- ('᷷M&귝')) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '1249100004' WHEN '	,' THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 COLLATE RTRIM AS TEXT)) ORDER BY ((- ('᷷M&귝')) IN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN '1249100004' WHEN '	,' THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN (rt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN (rt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt0.c0 IN (rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ ((rt0.c0 IN (rt0.c1, rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (((((- (rt0.c1))))<>(((rt0.c1 IN (rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c1))))!=(((rt0.c1 IN (rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((- (rt0.c1))))<>(((rt0.c1 IN (rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c1))))!=(((rt0.c1 IN (rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((- (rt0.c1))))<>(((rt0.c1 IN (rt0.c1, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)>(rt0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=((vt0.c0 IN ())))) ORDER BY JULIANDAY(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), (+ (vt0.c0)), CAST(rt0.c0 AS TEXT)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)>(rt0.c0)))) ORDER BY JULIANDAY(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), (+ (vt0.c0)), CAST(rt0.c0 AS TEXT)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)>(rt0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=((vt0.c0 IN ())))) ORDER BY JULIANDAY(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), (+ (vt0.c0)), CAST(rt0.c0 AS TEXT)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)>(rt0.c0)))) ORDER BY JULIANDAY(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), (+ (vt0.c0)), CAST(rt0.c0 AS TEXT)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c2)>(rt0.c0)))) WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END)>=((vt0.c0 IN ())))) ORDER BY JULIANDAY(((rt0.c2) BETWEEN (rt0.c1) AND (vt0.c0)), (+ (vt0.c0)), CAST(rt0.c0 AS TEXT)) ASC  NULLS LAST, (((rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-1.40482108E9) ORDER BY CAST((((vt0.c0, rt0.c1, rt0.c2))!=((rt0.c2, vt0.c0, vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((-1.40482108E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c1, rt0.c2))<>((rt0.c2, vt0.c0, vt0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-1.40482108E9) ORDER BY CAST((((vt0.c0, rt0.c1, rt0.c2))!=((rt0.c2, vt0.c0, vt0.c0))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((-1.40482108E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c1, rt0.c2))<>((rt0.c2, vt0.c0, vt0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (-1.40482108E9) ORDER BY CAST((((vt0.c0, rt0.c1, rt0.c2))!=((rt0.c2, vt0.c0, vt0.c0))) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS((vt0.c0 IN ()))) WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS((vt0.c0 IN ()))) WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))IS((vt0.c0 IN ()))) WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE 0xffffffffac6fb94f  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(0.25420500870509)))AND(rt0.c0)))AND(rt0.c0)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END WHERE (rt0.c1) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((rt0.c1 IN (rt0.c1, rt0.c0)))))AND(COALESCE(DISTINCT rt0.c2, rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE 0xffffffffac6fb94f  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(0.25420500870509)))AND(rt0.c0)))AND(rt0.c0)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((rt0.c1 IN (rt0.c1, rt0.c0)))))AND(COALESCE(DISTINCT rt0.c2, rt0.c1))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE 0xffffffffac6fb94f  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(0.25420500870509)))AND(rt0.c0)))AND(rt0.c0)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END WHERE (rt0.c1) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((rt0.c1 IN (rt0.c1, rt0.c0)))))AND(COALESCE(DISTINCT rt0.c2, rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE 0xffffffffac6fb94f  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(0.25420500870509)))AND(rt0.c0)))AND(rt0.c0)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((rt0.c1 IN (rt0.c1, rt0.c0)))))AND(COALESCE(DISTINCT rt0.c2, rt0.c1))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE 0xffffffffac6fb94f  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN rt0.c0 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN ((rt0.c1)>(rt0.c0)) WHEN ((rt0.c1)>>(rt0.c2)) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(0.25420500870509)))AND(rt0.c0)))AND(rt0.c0)) ELSE SQLITE_COMPILEOPTION_GET(vt0.c0) END WHERE (rt0.c1) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND((rt0.c1 IN (rt0.c1, rt0.c0)))))AND(COALESCE(DISTINCT rt0.c2, rt0.c1))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOT NULL))));
SELECT * FROM rt0 WHERE (((((NULL)AND(rt0.c0))) BETWEEN (GLOB('1249841060', rt0.c2)) AND (((rt0.c1)=(0Xffffffffadf0b660))))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(rt0.c0))) BETWEEN (GLOB('1249841060', rt0.c2)) AND (((rt0.c1)==(0Xffffffffadf0b660))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((NULL)AND(rt0.c0))) BETWEEN (GLOB('1249841060', rt0.c2)) AND (((rt0.c1)=(0Xffffffffadf0b660))))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(rt0.c0))) BETWEEN (GLOB('1249841060', rt0.c2)) AND (((rt0.c1)==(0Xffffffffadf0b660))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((NULL)AND(rt0.c0))) BETWEEN (GLOB('1249841060', rt0.c2)) AND (((rt0.c1)=(0Xffffffffadf0b660))))) ORDER BY ((rt0.c1 IN ()) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c1 THEN 0X3084919c ELSE rt0.c0 END COLLATE RTRIM WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c1 THEN 0x3084919c ELSE rt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c1 THEN 0X3084919c ELSE rt0.c0 END COLLATE RTRIM WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c1 THEN 0x3084919c ELSE rt0.c0 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON CASE WHEN rt0.c1 THEN 0X3084919c ELSE rt0.c0 END COLLATE RTRIM WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((((vt0.c0))<>((rt0.c1)))))) ORDER BY ((((rt0.c2)%(rt0.c2)))>(CASE rt0.c1  WHEN vt0.c0 THEN NULL END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((((vt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)%(rt0.c2)))>(CASE rt0.c1  WHEN vt0.c0 THEN NULL END)) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((((vt0.c0))<>((rt0.c1)))))) ORDER BY ((((rt0.c2)%(rt0.c2)))>(CASE rt0.c1  WHEN vt0.c0 THEN NULL END)) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((((vt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)%(rt0.c2)))>(CASE rt0.c1  WHEN vt0.c0 THEN NULL END)) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)AND(rt0.c0))) AND ((((vt0.c0))<>((rt0.c1)))))) ORDER BY ((((rt0.c2)%(rt0.c2)))>(CASE rt0.c1  WHEN vt0.c0 THEN NULL END)) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)|(x'2efa')))OR(0.04780584190861381)))OR(((rt0.c0) ISNULL))))AND((rt0.c1 IN ()))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c2)<(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)|(x'2efa')))OR(0.04780584190861381)))OR(((rt0.c0) ISNULL))))AND((rt0.c1 IN ()))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)|(x'2efa')))OR(0.04780584190861381)))OR(((rt0.c0) ISNULL))))AND((rt0.c1 IN ()))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c2)<(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)|(x'2efa')))OR(0.04780584190861381)))OR(((rt0.c0) ISNULL))))AND((rt0.c1 IN ()))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)<(rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c2)|(x'2efa')))OR(0.04780584190861381)))OR(((rt0.c0) ISNULL))))AND((rt0.c1 IN ()))))OR(((rt0.c0) BETWEEN (NULL) AND (rt0.c1))))) ORDER BY ((rt0.c2)<(rt0.c1)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN UPPER(rt0.c1) THEN ((rt0.c2) BETWEEN (vt0.c0) AND ('482012495')) WHEN (+ (NULL)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY CASE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN UPPER(rt0.c1) THEN ((rt0.c2) BETWEEN (vt0.c0) AND ('482012495')) WHEN (+ (NULL)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN UPPER(rt0.c1) THEN ((rt0.c2) BETWEEN (vt0.c0) AND ('482012495')) WHEN (+ (NULL)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) ORDER BY CASE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN UPPER(rt0.c1) THEN ((rt0.c2) BETWEEN (vt0.c0) AND ('482012495')) WHEN (+ (NULL)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (rt0.c2 COLLATE RTRIM IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) WHERE (((rt0.c2) IS FALSE) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN UPPER(rt0.c1) THEN ((rt0.c2) BETWEEN (vt0.c0) AND ('482012495')) WHEN (+ (NULL)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c0) ISNULL) THEN rt0.c2 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((0.782603823339749) IS TRUE), (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND (('', rt0.c0, rt0.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((0.782603823339749) IS TRUE), (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND (('', rt0.c0, rt0.c1)))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((0.782603823339749) IS TRUE), (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND (('', rt0.c0, rt0.c1)))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((0.782603823339749) IS TRUE), (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND (('', rt0.c0, rt0.c1)))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((0.782603823339749) IS TRUE), (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND (('', rt0.c0, rt0.c1)))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)AND(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)AND(rt0.c1)) AS BLOB));
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE RTRIM) ORDER BY ((CAST(rt0.c0 AS BLOB)) IS FALSE) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY CAST(((rt0.c0)GLOB(rt0.c2)) AS INTEGER);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(((rt0.c0) IS TRUE)) WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c2) AND (0.7028286023838477))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c2) AND (0.7028286023838477)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(((rt0.c0) IS TRUE)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(((rt0.c0) IS TRUE)) WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c2) AND (0.7028286023838477))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c2) AND (0.7028286023838477)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(((rt0.c0) IS TRUE)));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON UNLIKELY(((rt0.c0) IS TRUE)) WHERE (SQLITE_COMPILEOPTION_USED(((rt0.c2) BETWEEN (rt0.c2) AND (0.7028286023838477))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON '\/d귝' WHERE (((((rt0.c2)>>(rt0.c1)))>(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c1)))>(RTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '\/d귝');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON '\/d귝' WHERE (((((rt0.c2)>>(rt0.c1)))>(RTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(rt0.c1)))>(RTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON '\/d귝');
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON '\/d귝' WHERE (((((rt0.c2)>>(rt0.c1)))>(RTRIM(rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY COALESCE(DISTINCT '-1760586476', ((rt0.c1)-(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT '-1760586476', ((rt0.c1)-(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY COALESCE(DISTINCT '-1760586476', ((rt0.c1)-(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT '-1760586476', ((rt0.c1)-(rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY COALESCE(DISTINCT '-1760586476', ((rt0.c1)-(rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0)OR(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0)OR(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0)OR(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0)OR(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c0)OR(rt0.c0)) ELSE CAST(rt0.c0 AS REAL) END);
SELECT * FROM vt0, rt0 WHERE (JULIANDAY(rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) ORDER BY NULLIF(DISTINCT vt0.c0, rt0.c1) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(DISTINCT vt0.c0, rt0.c1) COLLATE BINARY ASC);
SELECT * FROM vt0, rt0 WHERE (JULIANDAY(rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) ORDER BY NULLIF(DISTINCT vt0.c0, rt0.c1) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULLIF(DISTINCT vt0.c0, rt0.c1) COLLATE BINARY ASC);
SELECT * FROM vt0, rt0 WHERE (JULIANDAY(rt0.c2, rt0.c2, rt0.c0) COLLATE BINARY) ORDER BY NULLIF(DISTINCT vt0.c0, rt0.c1) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('')LIKE(NULL)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ('-1404821080' COLLATE NOCASE) AND (((rt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0)&(rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (('')LIKE(NULL)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ('-1404821080' COLLATE NOCASE) AND (((rt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0)&(rt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('')LIKE(NULL)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ('-1404821080' COLLATE NOCASE) AND (((rt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0)&(rt0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (('')LIKE(NULL)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ('-1404821080' COLLATE NOCASE) AND (((rt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0)&(rt0.c0))) ISNULL) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULLIF(DISTINCT (('')LIKE(NULL)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN ('-1404821080' COLLATE NOCASE) AND (((rt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0)&(rt0.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY DATETIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY DATETIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY DATETIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY DATETIME(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (vt0.c0 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) DESC;
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((x'')>=(vt0.c0))))) ORDER BY CAST(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS INTEGER), vt0.c0 DESC, json_insert((+ (0.30426660192453714)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((x'')>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS INTEGER), vt0.c0 DESC, json_insert((+ (0.30426660192453714)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE)));
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((x'')>=(vt0.c0))))) ORDER BY CAST(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS INTEGER), vt0.c0 DESC, json_insert((+ (0.30426660192453714)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((x'')>=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS INTEGER), vt0.c0 DESC, json_insert((+ (0.30426660192453714)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE)));
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(((x'')>=(vt0.c0))))) ORDER BY CAST(MIN(vt0.c0, vt0.c0, vt0.c0, vt0.c0) AS INTEGER), vt0.c0 DESC, json_insert((+ (0.30426660192453714)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(NULL))) ORDER BY ((DATE(vt0.c0, NULL, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((DATE(vt0.c0, NULL, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(NULL))) ORDER BY ((DATE(vt0.c0, NULL, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(NULL))) IS TRUE)  as count FROM vt0 ORDER BY ((DATE(vt0.c0, NULL, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(NULL))) ORDER BY ((DATE(vt0.c0, NULL, vt0.c0)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND ((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c0))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)<(rt0.c0))) BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c0))) AND ((rt0.c2 IN ()))));
SELECT * FROM rt0 WHERE ((- ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- ((- (rt0.c2)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c2 IN ()) WHERE (x'f7c57a41') ORDER BY -1123331502 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'f7c57a41') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c2 IN ()) ORDER BY -1123331502 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c2 IN ()) WHERE (x'f7c57a41') ORDER BY -1123331502 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'f7c57a41') IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (rt0.c2 IN ()) ORDER BY -1123331502 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((('(0JL),XA\n&' COLLATE RTRIM)<(CASE rt0.c0  WHEN rt0.c1 THEN '᷷' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((('(0JL),XA\n&' COLLATE RTRIM)<(CASE rt0.c0  WHEN rt0.c1 THEN '᷷' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('(0JL),XA\n&' COLLATE RTRIM)<(CASE rt0.c0  WHEN rt0.c1 THEN '᷷' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((('(0JL),XA\n&' COLLATE RTRIM)<(CASE rt0.c0  WHEN rt0.c1 THEN '᷷' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('(0JL),XA\n&' COLLATE RTRIM)<(CASE rt0.c0  WHEN rt0.c1 THEN '᷷' WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (0x50deb17a, rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (0X50deb17a, rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (0x50deb17a, rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (0X50deb17a, rt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((vt0.c0 IN (0x50deb17a, rt0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))%(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))%(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))%(((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))%(((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)))%(((rt0.c0)AND(rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) NOT NULL) IN (((rt0.c0) NOTNULL), 0.30801553746583576)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT NULL) IN (((rt0.c0) NOTNULL), 0.30801553746583576))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) NOT NULL) IN (((rt0.c0) NOTNULL), 0.30801553746583576)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT NULL) IN (((rt0.c0) NOTNULL), 0.30801553746583576))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) NOT NULL) IN (((rt0.c0) NOTNULL), 0.30801553746583576)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE RTRIM)) WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE RTRIM)) WHERE (((rt0.c1) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE))AND(vt0.c0 COLLATE RTRIM)) WHERE (((rt0.c1) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)OR(x'')))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(x'')))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)OR(x'')))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c2)OR(x'')))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (((((rt0.c2)OR(x'')))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))=(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))==(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))=(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))==(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL))=(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)IS NOT(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)IS NOT(rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END IN ())) ORDER BY (((rt0.c0)) BETWEEN ((x'')) AND ((((vt0.c0)IS NOT(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, NULL)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) ORDER BY ((((((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.782603823339749')))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, NULL)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.782603823339749')))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, NULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, NULL)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) ORDER BY ((((((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.782603823339749')))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, NULL)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.782603823339749')))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, NULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, NULL)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND (COALESCE(vt0.c0, vt0.c0)))) ORDER BY ((((((((((((((((x'')OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('0.782603823339749')))AND(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c0) NOTNULL))) DESC  NULLS FIRST, NULL;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.2709812089121286 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.2709812089121286 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.2709812089121286 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.2709812089121286 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 0.2709812089121286 END) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (((vt0.c0)LIKE(vt0.c0))))) ORDER BY vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) NOT NULL), CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) NOT NULL), CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) NOT NULL), CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) NOT NULL), CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, ((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)), CAST(rt0.c1 AS REAL))) AND ((((rt0.c2) NOT NULL), CAST(rt0.c1 AS INTEGER), rt0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN 0x4c97b17d END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN 0X4c97b17d END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN 0x4c97b17d END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN 0X4c97b17d END AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN 0x4c97b17d END AS TEXT));
SELECT * FROM rt0, vt0 WHERE (((((1732683902) IS FALSE))<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY CAST(((rt0.c1) BETWEEN (0.12850615449946745) AND (rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((1732683902) IS FALSE))<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CAST(((rt0.c1) BETWEEN (0.12850615449946745) AND (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (((((1732683902) IS FALSE))<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY CAST(((rt0.c1) BETWEEN (0.12850615449946745) AND (rt0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((1732683902) IS FALSE))<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY CAST(((rt0.c1) BETWEEN (0.12850615449946745) AND (rt0.c1)) AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (((((1732683902) IS FALSE))<>((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) ORDER BY CAST(((rt0.c1) BETWEEN (0.12850615449946745) AND (rt0.c1)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.6227500074039889) ORDER BY '-1827722649'  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.6227500074039889) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-1827722649'  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.6227500074039889) ORDER BY '-1827722649'  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT ((0.6227500074039889) IS TRUE)  as count FROM rt0, vt0 ORDER BY '-1827722649'  NULLS FIRST, vt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (0.6227500074039889) ORDER BY '-1827722649'  NULLS FIRST, vt0.c0;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ABS(DISTINCT -1.40482108E9) ELSE ((rt0.c1)||(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ABS(DISTINCT -1.40482108E9) ELSE ((rt0.c1)||(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ABS(DISTINCT -1.40482108E9) ELSE ((rt0.c1)||(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ABS(DISTINCT -1.40482108E9) ELSE ((rt0.c1)||(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN CAST(rt0.c2 AS NUMERIC) THEN ABS(DISTINCT -1.40482108E9) ELSE ((rt0.c1)||(rt0.c1)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'') BETWEEN (rt0.c0 COLLATE NOCASE) AND (rt0.c1)));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c0)+(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c0)+(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c0)+(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c0)+(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (((rt0.c0)+(rt0.c0))) AND ((((rt0.c1, rt0.c1, rt0.c2, vt0.c0, vt0.c0))>((rt0.c1, rt0.c1, rt0.c0, rt0.c1, rt0.c0)))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)AND(vt0.c0))) BETWEEN (-1.123331502E9) AND (CASE WHEN vt0.c0 THEN 1.500838835E9 WHEN 0.5612098616874869 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((rt0.c2) NOT NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, CHANGES()) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))>=((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)AND(vt0.c0))) BETWEEN (-1.123331502E9) AND (CASE WHEN vt0.c0 THEN 1.500838835E9 WHEN 0.5612098616874869 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, CHANGES()) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)AND(vt0.c0))) BETWEEN (-1.123331502E9) AND (CASE WHEN vt0.c0 THEN 1.500838835E9 WHEN 0.5612098616874869 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((rt0.c2) NOT NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, CHANGES()) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))>=((((rt0.c2) NOT NULL))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)AND(vt0.c0))) BETWEEN (-1.123331502E9) AND (CASE WHEN vt0.c0 THEN 1.500838835E9 WHEN 0.5612098616874869 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) ORDER BY COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, CHANGES()) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)AND(vt0.c0))) BETWEEN (-1.123331502E9) AND (CASE WHEN vt0.c0 THEN 1.500838835E9 WHEN 0.5612098616874869 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)) WHERE ((((CAST(rt0.c0 AS BLOB)))>=((((rt0.c2) NOT NULL))))) ORDER BY COALESCE(DISTINCT rt0.c1 COLLATE RTRIM, CHANGES()) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (x''))) ORDER BY (((vt0.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (x''))) ORDER BY (((vt0.c0 IN ())) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (x''))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) IS TRUE));
SELECT * FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0))) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (x''))) ORDER BY (((vt0.c0 IN ())) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((+ (vt0.c0)))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c2))>((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))>((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c2))>((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2))>((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c1) NOT NULL))||(CASE vt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((((rt0.c2))>((rt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))))AND((rt0.c2 IN (vt0.c0, rt0.c1)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((x'4233')) AND ((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))))AND((rt0.c2 IN (vt0.c0, rt0.c1)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((x'4233')) AND ((vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))))AND((rt0.c2 IN (vt0.c0, rt0.c1)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((x'4233')) AND ((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))))AND((rt0.c2 IN (vt0.c0, rt0.c1)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)) BETWEEN ((x'4233')) AND ((vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c2)+(vt0.c0)))))AND((rt0.c2 IN (vt0.c0, rt0.c1)))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((x'4233')) AND ((vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2) IS FALSE)))=((((rt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))=((((rt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2) IS FALSE)))=((((rt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) IS FALSE)))=((((rt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c2) IS FALSE)))=((((rt0.c0)<=(rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))) ORDER BY CAST(((rt0.c0)IS(NULL)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)IS(NULL)) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))) ORDER BY CAST(((rt0.c0)IS(NULL)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)IS(NULL)) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN ((((rt0.c1))<>((rt0.c0)))) AND (CAST(rt0.c0 AS REAL)))) ORDER BY CAST(((rt0.c0)IS(NULL)) AS REAL) ASC;
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c0)=(rt0.c0)) THEN (- (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1)), ((NULL)*(rt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.0945180194962636, CAST(vt0.c0 AS INTEGER)))), ((((NULL)AND(STRFTIME(vt0.c0, rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, (((NOT (rt0.c1)))||(0.5224752304553083))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c0)=(rt0.c0)) THEN (- (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1)), ((NULL)*(rt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.0945180194962636, CAST(vt0.c0 AS INTEGER)))), ((((NULL)AND(STRFTIME(vt0.c0, rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, (((NOT (rt0.c1)))||(0.5224752304553083))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c0)=(rt0.c0)) THEN (- (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1)), ((NULL)*(rt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.0945180194962636, CAST(vt0.c0 AS INTEGER)))), ((((NULL)AND(STRFTIME(vt0.c0, rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, (((NOT (rt0.c1)))||(0.5224752304553083))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c0)=(rt0.c0)) THEN (- (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1)), ((NULL)*(rt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.0945180194962636, CAST(vt0.c0 AS INTEGER)))), ((((NULL)AND(STRFTIME(vt0.c0, rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, (((NOT (rt0.c1)))||(0.5224752304553083))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CASE ((rt0.c2) NOT NULL)  WHEN ((vt0.c0)=(rt0.c0)) THEN (- (vt0.c0)) ELSE CAST(rt0.c2 AS INTEGER) END) ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)), (+ (rt0.c1)), ((NULL)*(rt0.c0))))<>((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), 0.0945180194962636, CAST(vt0.c0 AS INTEGER)))), ((((NULL)AND(STRFTIME(vt0.c0, rt0.c2, rt0.c0))))AND(rt0.c2 COLLATE NOCASE))  NULLS FIRST, (((NOT (rt0.c1)))||(0.5224752304553083))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH((('1732683902') NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LENGTH((('1732683902') NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH((('1732683902') NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LENGTH((('1732683902') NOT BETWEEN (rt0.c2) AND (rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (LENGTH((('1732683902') NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((x'')IS(vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN LTRIM(vt0.c0, x'8687') THEN vt0.c0 COLLATE BINARY END DESC, ((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))) DESC, (((vt0.c0, vt0.c0, '-1791835828')) NOT BETWEEN (((((x'', '	!Pyd#', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), -1918977021)) AND (('', ((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<>((((x'')IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN LTRIM(vt0.c0, x'8687') THEN vt0.c0 COLLATE BINARY END DESC, ((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))) DESC, (((vt0.c0, vt0.c0, '-1791835828')) NOT BETWEEN (((((x'', '	!Pyd#', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), -1918977021)) AND (('', ((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((x'')IS(vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN LTRIM(vt0.c0, x'8687') THEN vt0.c0 COLLATE BINARY END DESC, ((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))) DESC, (((vt0.c0, vt0.c0, '-1791835828')) NOT BETWEEN (((((x'', '	!Pyd#', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), -1918977021)) AND (('', ((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<>((((x'')IS(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN LTRIM(vt0.c0, x'8687') THEN vt0.c0 COLLATE BINARY END DESC, ((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))) DESC, (((vt0.c0, vt0.c0, '-1791835828')) NOT BETWEEN (((((x'', '	!Pyd#', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), -1918977021)) AND (('', ((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0 IN ())))!=((((x'')IS(vt0.c0)))))) ORDER BY CASE WHEN ((vt0.c0)*(vt0.c0)) THEN UNLIKELY(vt0.c0) WHEN ((vt0.c0) NOTNULL) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) WHEN LTRIM(vt0.c0, x'8687') THEN vt0.c0 COLLATE BINARY END DESC, ((((vt0.c0)<<(vt0.c0)))OR(((vt0.c0)>>(vt0.c0)))) DESC, (((vt0.c0, vt0.c0, '-1791835828')) NOT BETWEEN (((((x'', '	!Pyd#', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0)<(vt0.c0)), -1918977021)) AND (('', ((vt0.c0)IS(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS TRUE) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c2) IS TRUE) IN ()));
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((((((vt0.c0))<((vt0.c0))))OR(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<((vt0.c0))))OR(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((((((vt0.c0))<((vt0.c0))))OR(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0))<((vt0.c0))))OR(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY (((((((vt0.c0))<((vt0.c0))))OR(vt0.c0)))OR((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((((0x1731fb71 IN (rt0.c2, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X1731fb71 IN (rt0.c2, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((0x1731fb71 IN (rt0.c2, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((0X1731fb71 IN (rt0.c2, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(NULL))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((0x1731fb71 IN (rt0.c2, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR(NULL))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1245991459' END AS INTEGER)) ORDER BY ((((vt0.c0)==(vt0.c0)))%('b')) ASC, (((vt0.c0 IN (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1245991459' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0)))%('b')) ASC, (((vt0.c0 IN (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1245991459' END AS INTEGER)) ORDER BY ((((vt0.c0)==(vt0.c0)))%('b')) ASC, (((vt0.c0 IN (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1245991459' END AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(vt0.c0)))%('b')) ASC, (((vt0.c0 IN (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN '-1245991459' END AS INTEGER)) ORDER BY ((((vt0.c0)==(vt0.c0)))%('b')) ASC, (((vt0.c0 IN (vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))) WHERE (1.24984106E9);
SELECT SUM(count) FROM (SELECT ((1.24984106E9) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))) WHERE (1.24984106E9);
SELECT SUM(count) FROM (SELECT ((1.24984106E9) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(CAST(vt0.c0 AS NUMERIC))))AND((NOT (vt0.c0)))) WHERE (1.24984106E9);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((NOT (rt0.c2)) AS TEXT));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)*(vt0.c0)) IN ())) ORDER BY ((~ (rt0.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN 0Xffffffffabbd9de8 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c1)>(vt0.c0)) IN ()) DESC, ((((vt0.c0)<<(vt0.c0)))<>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN 0Xffffffffabbd9de8 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c1)>(vt0.c0)) IN ()) DESC, ((((vt0.c0)<<(vt0.c0)))!=(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)*(vt0.c0)) IN ())) ORDER BY ((~ (rt0.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN 0Xffffffffabbd9de8 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c1)>(vt0.c0)) IN ()) DESC, ((((vt0.c0)<<(vt0.c0)))<>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)*(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN 0Xffffffffabbd9de8 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c1)>(vt0.c0)) IN ()) DESC, ((((vt0.c0)<<(vt0.c0)))!=(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)*(vt0.c0)) IN ())) ORDER BY ((~ (rt0.c0)) IN (CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN 0Xffffffffabbd9de8 WHEN rt0.c1 THEN rt0.c2 ELSE vt0.c0 END, CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS FIRST, (((rt0.c1)>(vt0.c0)) IN ()) DESC, ((((vt0.c0)<<(vt0.c0)))<>(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR((vt0.c0 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (NOT (vt0.c0)) THEN x'e83ab962' ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(0.12850615449946745)))AND(vt0.c0)))OR(rt0.c2)) END WHERE (((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)), (((rt0.c0, rt0.c1, 0.00449787815421665)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, 0.44666613885687845, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)), (((rt0.c0, rt0.c1, 0.00449787815421665)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, 0.44666613885687845, vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (NOT (vt0.c0)) THEN x'e83ab962' ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(0.12850615449946745)))AND(vt0.c0)))OR(rt0.c2)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (NOT (vt0.c0)) THEN x'e83ab962' ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(0.12850615449946745)))AND(vt0.c0)))OR(rt0.c2)) END WHERE (((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)), (((rt0.c0, rt0.c1, 0.00449787815421665)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, 0.44666613885687845, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)), (((rt0.c0, rt0.c1, 0.00449787815421665)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, 0.44666613885687845, vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (NOT (vt0.c0)) THEN x'e83ab962' ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(0.12850615449946745)))AND(vt0.c0)))OR(rt0.c2)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON CASE ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1))  WHEN (NOT (vt0.c0)) THEN x'e83ab962' ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(0.12850615449946745)))AND(vt0.c0)))OR(rt0.c2)) END WHERE (((((rt0.c1, rt0.c0, vt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c1))) IN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c0)), ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)), (((rt0.c0, rt0.c1, 0.00449787815421665)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c0)) AND ((vt0.c0, 0.44666613885687845, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.9755454033600696) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.9755454033600696) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.9755454033600696) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (0.9755454033600696) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (0.9755454033600696) AND (vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)))>>(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)))>>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)))>>(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)))>>(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))AND(x'')))AND(rt0.c1)))>>(CAST(rt0.c0 AS REAL)))) ORDER BY rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c1) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c1) ISNULL) END);
SELECT * FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c0)))))AND((((rt0.c0))<=((rt0.c2))))))OR(((rt0.c1)<<(rt0.c2)))))AND((((rt0.c1))==((rt0.c0))))))OR(TYPEOF(DISTINCT 0.42346965536516934))))OR(rt0.c2))) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c0)))))AND((((rt0.c0))<=((rt0.c2))))))OR(((rt0.c1)<<(rt0.c2)))))AND((((rt0.c1))=((rt0.c0))))))OR(TYPEOF(DISTINCT 0.42346965536516934))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c0)))))AND((((rt0.c0))<=((rt0.c2))))))OR(((rt0.c1)<<(rt0.c2)))))AND((((rt0.c1))==((rt0.c0))))))OR(TYPEOF(DISTINCT 0.42346965536516934))))OR(rt0.c2))) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c0)))))AND((((rt0.c0))<=((rt0.c2))))))OR(((rt0.c1)<<(rt0.c2)))))AND((((rt0.c1))=((rt0.c0))))))OR(TYPEOF(DISTINCT 0.42346965536516934))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(((rt0.c2)IS NOT(rt0.c0)))))AND((((rt0.c0))<=((rt0.c2))))))OR(((rt0.c1)<<(rt0.c2)))))AND((((rt0.c1))==((rt0.c0))))))OR(TYPEOF(DISTINCT 0.42346965536516934))))OR(rt0.c2))) ORDER BY CASE WHEN (- (rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.27782454036791815)AND(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, UPPER(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.27782454036791815)AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, UPPER(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.27782454036791815)AND(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, UPPER(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.27782454036791815)AND(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, UPPER(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.27782454036791815)AND(rt0.c2))) NOT NULL)) ORDER BY (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) ASC, UPPER(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)GLOB(0.41061437941055545)))<=('')) WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rt0.c0)<<(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)GLOB(0.41061437941055545)))<=('')) ORDER BY ((rt0.c0)<<(rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)GLOB(0.41061437941055545)))<=('')) WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rt0.c0)<<(rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)GLOB(0.41061437941055545)))<=('')) ORDER BY ((rt0.c0)<<(rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0)GLOB(0.41061437941055545)))<=('')) WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY ((rt0.c0)<<(rt0.c1)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((((rt0.c1, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((rt0.c1, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c2, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((((rt0.c1, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c2, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((rt0.c1, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c2, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (HEX((((rt0.c1, rt0.c2, NULL)) BETWEEN ((vt0.c0, rt0.c2, rt0.c0)) AND ((NULL, rt0.c2, rt0.c2)))));
SELECT * FROM vt0 WHERE (json_array_length(highlight('-703339329', vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('3\녽|ppSW'))))) ORDER BY ((((NULL IN ()), vt0.c0 COLLATE RTRIM, 0.30822093262098627))!=((vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(highlight('-703339329', vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('3\녽|ppSW'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL IN ()), vt0.c0 COLLATE RTRIM, 0.30822093262098627))<>((vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), x''))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (json_array_length(highlight('-703339329', vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('3\녽|ppSW'))))) ORDER BY ((((NULL IN ()), vt0.c0 COLLATE RTRIM, 0.30822093262098627))!=((vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), x''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length(highlight('-703339329', vt0.c0, vt0.c0, vt0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND (('3\녽|ppSW'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL IN ()), vt0.c0 COLLATE RTRIM, 0.30822093262098627))<>((vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), x''))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))*(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN ()))*(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0)GLOB(vt0.c0)), HEX(DISTINCT vt0.c0)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), COALESCE(vt0.c0, vt0.c0))))) ORDER BY NULL ASC, (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB), ((vt0.c0)GLOB(vt0.c0)), HEX(DISTINCT vt0.c0)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), COALESCE(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0)GLOB(vt0.c0)), HEX(DISTINCT vt0.c0)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), COALESCE(vt0.c0, vt0.c0))))) ORDER BY NULL ASC, (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c0 AS BLOB), ((vt0.c0)GLOB(vt0.c0)), HEX(DISTINCT vt0.c0)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), COALESCE(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC, (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0)GLOB(vt0.c0)), HEX(DISTINCT vt0.c0)))=((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c0))), COALESCE(vt0.c0, vt0.c0))))) ORDER BY NULL ASC, (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) ORDER BY GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) ORDER BY GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE RTRIM))) ORDER BY GLOB((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((NULL) ISNULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((vt0.c0))>((rt0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))>((rt0.c2))) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((vt0.c0))>((rt0.c2))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0))>((rt0.c2))) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST((((vt0.c0))>((rt0.c2))) AS REAL));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (((((vt0.c0))>((vt0.c0)))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(1785530213)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(1785530213)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(1785530213)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(1785530213)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(1785530213)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS TEXT) WHERE (NULL) ORDER BY CAST('1356771706' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS TEXT) ORDER BY CAST('1356771706' AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS TEXT) WHERE (NULL) ORDER BY CAST('1356771706' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS TEXT) ORDER BY CAST('1356771706' AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(((rt0.c1) IS TRUE) AS TEXT) WHERE (NULL) ORDER BY CAST('1356771706' AS INTEGER) DESC;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY CASE ((((vt0.c0)AND(x'')))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN TRIM(vt0.c0) END  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))OR(8.13994396E8)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((vt0.c0)AND(x'')))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN TRIM(vt0.c0) END  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))OR(8.13994396E8)) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY CASE ((((vt0.c0)AND(x'')))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN TRIM(vt0.c0) END  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))OR(8.13994396E8)) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)IS NOT(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE ((((vt0.c0)AND(x'')))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN TRIM(vt0.c0) END  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))OR(8.13994396E8)) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((rt0.c2)IS NOT(rt0.c0)) COLLATE BINARY) ORDER BY CASE ((((vt0.c0)AND(x'')))OR(rt0.c0))  WHEN (rt0.c0 IN ()) THEN TRIM(vt0.c0) END  NULLS LAST, ((((((((rt0.c1)AND(rt0.c1)))AND(vt0.c0)))AND(CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))OR(8.13994396E8)) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('1500838835') NOT BETWEEN (rt0.c1) AND (((rt0.c2)&('')))) WHERE (NULL) ORDER BY (((((+ (rt0.c0)))OR('-1036589771')))OR(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('1500838835') NOT BETWEEN (rt0.c1) AND (((rt0.c2)&('')))) ORDER BY (((((+ (rt0.c0)))OR('-1036589771')))OR(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('1500838835') NOT BETWEEN (rt0.c1) AND (((rt0.c2)&('')))) WHERE (NULL) ORDER BY (((((+ (rt0.c0)))OR('-1036589771')))OR(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (('1500838835') NOT BETWEEN (rt0.c1) AND (((rt0.c2)&('')))) ORDER BY (((((+ (rt0.c0)))OR('-1036589771')))OR(rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (('1500838835') NOT BETWEEN (rt0.c1) AND (((rt0.c2)&('')))) WHERE (NULL) ORDER BY (((((+ (rt0.c0)))OR('-1036589771')))OR(rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('᷷M&귝');
SELECT SUM(count) FROM (SELECT ALL (('᷷M&귝') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('᷷M&귝');
SELECT SUM(count) FROM (SELECT ALL (('᷷M&귝') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('᷷M&귝');
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(CAST(vt0.c0 AS INTEGER), vt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN '᷷' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN NULL THEN '᷷' END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN '᷷' END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN NULL THEN '᷷' END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN '᷷' END IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (NULL) AND (NULL COLLATE BINARY))) ORDER BY rt0.c2 COLLATE NOCASE, ((((rt0.c1 COLLATE RTRIM)AND((((NULL, 0.47979723233861793, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))AND((NOT (rt0.c0))))  NULLS LAST, ((((((rt0.c0)GLOB(vt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0Xffffffffcb6ea79d))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (NULL) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE NOCASE, ((((rt0.c1 COLLATE RTRIM)AND((((NULL, 0.47979723233861793, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))AND((NOT (rt0.c0))))  NULLS LAST, ((((((rt0.c0)GLOB(vt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0xffffffffcb6ea79d))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (NULL) AND (NULL COLLATE BINARY))) ORDER BY rt0.c2 COLLATE NOCASE, ((((rt0.c1 COLLATE RTRIM)AND((((NULL, 0.47979723233861793, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))AND((NOT (rt0.c0))))  NULLS LAST, ((((((rt0.c0)GLOB(vt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0Xffffffffcb6ea79d))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) NOT BETWEEN (NULL) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE NOCASE, ((((rt0.c1 COLLATE RTRIM)AND((((NULL, 0.47979723233861793, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))AND((NOT (rt0.c0))))  NULLS LAST, ((((((rt0.c0)GLOB(vt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0xffffffffcb6ea79d))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((NOT (rt0.c1))) NOT BETWEEN (NULL) AND (NULL COLLATE BINARY))) ORDER BY rt0.c2 COLLATE NOCASE, ((((rt0.c1 COLLATE RTRIM)AND((((NULL, 0.47979723233861793, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c0))))))AND((NOT (rt0.c0))))  NULLS LAST, ((((((rt0.c0)GLOB(vt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(0Xffffffffcb6ea79d))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)||(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)||(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)||(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)||(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN '-552851067' ELSE rt0.c2 END) IS FALSE) WHERE (CASE WHEN (((rt0.c0))<>((0.918937438052602))) THEN (+ (rt0.c1)) ELSE IFNULL(rt0.c1, '1312022928') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0))<>((0.918937438052602))) THEN (+ (rt0.c1)) ELSE IFNULL(rt0.c1, '1312022928') END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN '-552851067' ELSE rt0.c2 END) IS FALSE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN '-552851067' ELSE rt0.c2 END) IS FALSE) WHERE (CASE WHEN (((rt0.c0))<>((0.918937438052602))) THEN (+ (rt0.c1)) ELSE IFNULL(rt0.c1, '1312022928') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c0))<>((0.918937438052602))) THEN (+ (rt0.c1)) ELSE IFNULL(rt0.c1, '1312022928') END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN '-552851067' ELSE rt0.c2 END) IS FALSE));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c0 THEN '-552851067' ELSE rt0.c2 END) IS FALSE) WHERE (CASE WHEN (((rt0.c0))<>((0.918937438052602))) THEN (+ (rt0.c1)) ELSE IFNULL(rt0.c1, '1312022928') END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((((vt0.c0)AND(NULL)))AND(vt0.c0))) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'41e6' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((x'') BETWEEN (vt0.c0) AND (rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'41e6' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((x'') BETWEEN (vt0.c0) AND (rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'41e6' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((x'') BETWEEN (vt0.c0) AND (rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'41e6' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((x'') BETWEEN (vt0.c0) AND (rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'41e6' WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((x'') BETWEEN (vt0.c0) AND (rt0.c2)))))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))))OR((rt0.c0 IN ()))))AND(CAST(rt0.c0 AS TEXT))))AND(CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE (DATE((rt0.c1 IN (rt0.c2)), TYPEOF(DISTINCT rt0.c0), CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATE((rt0.c1 IN (rt0.c2)), TYPEOF(DISTINCT rt0.c0), CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (DATE((rt0.c1 IN (rt0.c2)), TYPEOF(DISTINCT rt0.c0), CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((DATE((rt0.c1 IN (rt0.c2)), TYPEOF(DISTINCT rt0.c0), CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (DATE((rt0.c1 IN (rt0.c2)), TYPEOF(DISTINCT rt0.c0), CAST(rt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt0 WHERE (0xffffffff8d9ebc03) ORDER BY ((vt0.c0 IN (vt0.c0, '()mg,')) IN ())  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff8d9ebc03) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0 IN (vt0.c0, '()mg,')) IN ())  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0xffffffff8d9ebc03) ORDER BY ((vt0.c0 IN (vt0.c0, '()mg,')) IN ())  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff8d9ebc03) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((vt0.c0 IN (vt0.c0, '()mg,')) IN ())  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOTNULL)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0xffffffff8d9ebc03) ORDER BY ((vt0.c0 IN (vt0.c0, '()mg,')) IN ())  NULLS LAST, (((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0) NOTNULL)))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)GLOB(0.6117344662764207))) AND (json_extract(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)GLOB(0.6117344662764207))) AND (json_extract(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)GLOB(0.6117344662764207))) AND (json_extract(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)GLOB(0.6117344662764207))) AND (json_extract(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((rt0.c1)GLOB(0.6117344662764207))) AND (json_extract(rt0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) IS TRUE)) ORDER BY CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB) ASC;
SELECT COUNT(*) FROM vt0 WHERE (UPPER(0.04780584190861381)) ORDER BY CAST(UPPER(DISTINCT vt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(0.04780584190861381)) IS TRUE)  as count FROM vt0 ORDER BY CAST(UPPER(DISTINCT vt0.c0) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(0.04780584190861381)) ORDER BY CAST(UPPER(DISTINCT vt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((UPPER(0.04780584190861381)) IS TRUE)  as count FROM vt0 ORDER BY CAST(UPPER(DISTINCT vt0.c0) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(0.04780584190861381)) ORDER BY CAST(UPPER(DISTINCT vt0.c0) AS REAL);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY MIN(vt0.c0, CAST(rt0.c1 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(vt0.c0, CAST(rt0.c1 AS TEXT))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY MIN(vt0.c0, CAST(rt0.c1 AS TEXT))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY MIN(vt0.c0, CAST(rt0.c1 AS TEXT))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1) ORDER BY MIN(vt0.c0, CAST(rt0.c1 AS TEXT))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((IFNULL(rt0.c1, rt0.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((IFNULL(rt0.c1, rt0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((IFNULL(rt0.c1, rt0.c0)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)) THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((IFNULL(rt0.c1, rt0.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)) THEN rt0.c2 COLLATE BINARY END) ORDER BY ((IFNULL(rt0.c1, rt0.c0)) NOT NULL);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)) IN ()) WHERE (((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY 'u9s%	[' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)) IN ()) ORDER BY 'u9s%	[' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)) IN ()) WHERE (((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY 'u9s%	[' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)) IN ()) ORDER BY 'u9s%	[' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c0)))OR(NULL)))AND(vt0.c0)) IN ()) WHERE (((((((rt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY 'u9s%	[' ASC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(((vt0.c0) ISNULL))) WHERE (-6.4938632E7);
SELECT SUM(count) FROM (SELECT ((-6.4938632E7) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(((vt0.c0) ISNULL))) WHERE (-6.4938632E7);
SELECT SUM(count) FROM (SELECT ((-6.4938632E7) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(((vt0.c0) ISNULL))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((rt0.c1)OR(((vt0.c0) ISNULL))) WHERE (-6.4938632E7);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2))<((rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2))<((rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c2))<((rt0.c0)))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c2)) COLLATE BINARY) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ORDER BY ((x'') NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ORDER BY ((x'') NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ORDER BY ((x'') NOT BETWEEN (((rt0.c0)=(rt0.c2))) AND (CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE) ORDER BY (- (-1226810541));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (-1226810541)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE) ORDER BY (- (-1226810541));
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (-1226810541)));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((('', vt0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (+ (rt0.c2)), (((vt0.c0))>((rt0.c1))))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), '-136432398'))) WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((('', vt0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (+ (rt0.c2)), (((vt0.c0))>((rt0.c1))))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), '-136432398'))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((('', vt0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (+ (rt0.c2)), (((vt0.c0))>((rt0.c1))))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), '-136432398'))) WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0)))) ISNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((('', vt0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (+ (rt0.c2)), (((vt0.c0))>((rt0.c1))))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), '-136432398'))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON ((('', vt0.c0, rt0.c0)) BETWEEN ((rt0.c0 COLLATE NOCASE, (+ (rt0.c2)), (((vt0.c0))>((rt0.c1))))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), '-136432398'))) WHERE ((((((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0)))) ISNULL));
SELECT * FROM vt0 WHERE (json_extract(LIKELIHOOD(vt0.c0, 0.029734724612993424), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract(LIKELIHOOD(vt0.c0, 0.029734724612993424), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_extract(LIKELIHOOD(vt0.c0, 0.029734724612993424), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json_extract(LIKELIHOOD(vt0.c0, 0.029734724612993424), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_extract(LIKELIHOOD(vt0.c0, 0.029734724612993424), (vt0.c0 IN ())));
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(DISTINCT vt0.c0))GLOB(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(DISTINCT vt0.c0))GLOB(vt0.c0)));
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c1))) AND ((UPPER(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c1))) AND ((UPPER(DISTINCT rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c1))) AND ((UPPER(DISTINCT rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c1))) AND ((UPPER(DISTINCT rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c1))) AND ((UPPER(DISTINCT rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS BLOB))))AND(LENGTH(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS BLOB))))AND(LENGTH(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS BLOB))))AND(LENGTH(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS BLOB))))AND(LENGTH(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((CAST(rt0.c0 AS BLOB))OR(CAST(rt0.c2 AS BLOB))))AND(LENGTH(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (json_extract(rt0.c0, rt0.c0)))) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2)<>(rt0.c1)) ELSE (rt0.c2 IN (8.13994396E8, vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (json_extract(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2)<>(rt0.c1)) ELSE (rt0.c2 IN (8.13994396E8, vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (json_extract(rt0.c0, rt0.c0)))) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2)<>(rt0.c1)) ELSE (rt0.c2 IN (8.13994396E8, vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (json_extract(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2)<>(rt0.c1)) ELSE (rt0.c2 IN (8.13994396E8, vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (((((rt0.c1) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (json_extract(rt0.c0, rt0.c0)))) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c1 THEN ((rt0.c2)<>(rt0.c1)) ELSE (rt0.c2 IN (8.13994396E8, vt0.c0)) END;
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(HEX(vt0.c0))))AND(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN 0.8485459304339201 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(HEX(vt0.c0))))AND(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN 0.8485459304339201 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(HEX(vt0.c0))))AND(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN 0.8485459304339201 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(HEX(vt0.c0))))AND(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN 0.8485459304339201 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((CAST(vt0.c0 AS NUMERIC))AND(vt0.c0)))OR(((vt0.c0)OR(vt0.c0)))))OR(HEX(vt0.c0))))AND(((vt0.c0)<>(vt0.c0))))) ORDER BY ((((vt0.c0)>(vt0.c0)))>>(CASE vt0.c0  WHEN vt0.c0 THEN 0.8485459304339201 END))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(rt0.c0)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(rt0.c0)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)OR(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(rt0.c0)) COLLATE NOCASE) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(((rt0.c1) NOTNULL))))AND((('-1401964209') IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((rt0.c1) NOTNULL))))AND((('-1401964209') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(((rt0.c1) NOTNULL))))AND((('-1401964209') IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((rt0.c1) NOTNULL))))AND((('-1401964209') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((~ (vt0.c0)))AND(((rt0.c1) NOTNULL))))AND((('-1401964209') IS FALSE))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, rt0.c1, 801171812)) ISNULL) DESC  NULLS LAST, LOWER(((rt0.c0)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, rt0.c1, 801171812)) ISNULL) DESC  NULLS LAST, LOWER(((rt0.c0)>>(vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, rt0.c1, 801171812)) ISNULL) DESC  NULLS LAST, LOWER(((rt0.c0)>>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, rt0.c1, 801171812)) ISNULL) DESC  NULLS LAST, LOWER(((rt0.c0)>>(vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (NOT (((vt0.c0) NOT NULL))) ASC  NULLS LAST, ((highlight(vt0.c0, vt0.c0, rt0.c1, 801171812)) ISNULL) DESC  NULLS LAST, LOWER(((rt0.c0)>>(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0))) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0))) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0))) ORDER BY vt0.c0 COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0 WHERE ((- ((((NULL))>((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, 0.7761525418413774)) AND ((rt0.c0, rt0.c0, rt0.c1)))))  NULLS FIRST, (((((~ ('-1944248841')))OR(((rt0.c0) NOT NULL))))OR(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((NULL))>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, 0.7761525418413774)) AND ((rt0.c0, rt0.c0, rt0.c1)))))  NULLS FIRST, (((((~ ('-1944248841')))OR(((rt0.c0) NOT NULL))))OR(rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- ((((NULL))>((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, 0.7761525418413774)) AND ((rt0.c0, rt0.c0, rt0.c1)))))  NULLS FIRST, (((((~ ('-1944248841')))OR(((rt0.c0) NOT NULL))))OR(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((((NULL))>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, 0.7761525418413774)) AND ((rt0.c0, rt0.c0, rt0.c1)))))  NULLS FIRST, (((((~ ('-1944248841')))OR(((rt0.c0) NOT NULL))))OR(rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((- ((((NULL))>((rt0.c1)))))) ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c2, 0.7761525418413774)) AND ((rt0.c0, rt0.c0, rt0.c1)))))  NULLS FIRST, (((((~ ('-1944248841')))OR(((rt0.c0) NOT NULL))))OR(rt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0Xfffffffffb82d6ae)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0Xfffffffffb82d6ae)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0Xfffffffffb82d6ae)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0Xfffffffffb82d6ae)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(SQLITE_COMPILEOPTION_GET(vt0.c0))))AND(((vt0.c0) IS FALSE))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND(0Xfffffffffb82d6ae)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c1) AS BLOB)) ORDER BY (((~ (rt0.c1)))+(LIKE(rt0.c1, rt0.c0, 'Q'))), NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))+(LIKE(rt0.c1, rt0.c0, 'Q'))), NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c1) AS BLOB)) ORDER BY (((~ (rt0.c1)))+(LIKE(rt0.c1, rt0.c0, 'Q'))), NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c1) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))+(LIKE(rt0.c1, rt0.c0, 'Q'))), NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c1) AS BLOB)) ORDER BY (((~ (rt0.c1)))+(LIKE(rt0.c1, rt0.c0, 'Q'))), NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((-1466849912)AND((((rt0.c2))<=((rt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.724453419130979 THEN rt0.c0 ELSE 0.0945180194962636 END IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((-1466849912)AND((((rt0.c2))<=((rt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.724453419130979 THEN rt0.c0 ELSE 0.0945180194962636 END IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((-1466849912)AND((((rt0.c2))<=((rt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.724453419130979 THEN rt0.c0 ELSE 0.0945180194962636 END IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((-1466849912)AND((((rt0.c2))<=((rt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.724453419130979 THEN rt0.c0 ELSE 0.0945180194962636 END IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((-1466849912)AND((((rt0.c2))<=((rt0.c1))))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END))) ORDER BY (CASE x''  WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 0.724453419130979 THEN rt0.c0 ELSE 0.0945180194962636 END IN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (vt0.c0)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY (((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (vt0.c0)) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL)AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c1))) ORDER BY (((+ (rt0.c0))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (vt0.c0)) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (json(rt0.c1));
SELECT SUM(count) FROM (SELECT ((json(rt0.c1)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json(rt0.c1));
SELECT SUM(count) FROM (SELECT ((json(rt0.c1)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json(rt0.c1));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN (CAST(vt0.c0 AS NUMERIC), (vt0.c0 IN ())))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((('b', rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))))>>(((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((('b', rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))))>>(((rt0.c1) NOT NULL))) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((('b', rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))))>>(((rt0.c1) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((('b', rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))))>>(((rt0.c1) NOT NULL))) ASC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((((('b', rt0.c0, rt0.c1))<((rt0.c1, rt0.c0, rt0.c0))))>>(((rt0.c1) NOT NULL))) ASC;
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)!=(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL))GLOB((- (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)!=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))GLOB((- (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)!=(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL))GLOB((- (rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)!=(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL))GLOB((- (rt0.c2)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE ((rt0.c0)!=(rt0.c0)) END) ORDER BY ((((rt0.c2) NOTNULL))GLOB((- (rt0.c2)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (((0.6289959395939677)>>(((rt0.c1)<=(rt0.c2))))) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END  NULLS LAST, (+ (((rt0.c2)>=(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6289959395939677)>>(((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END  NULLS LAST, (+ (((rt0.c2)>=(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.6289959395939677)>>(((rt0.c1)<=(rt0.c2))))) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END  NULLS LAST, (+ (((rt0.c2)>=(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.6289959395939677)>>(((rt0.c1)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END  NULLS LAST, (+ (((rt0.c2)>=(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0.6289959395939677)>>(((rt0.c1)<=(rt0.c2))))) ORDER BY CASE CAST(rt0.c2 AS INTEGER)  WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)) THEN ((rt0.c0)*(rt0.c1)) ELSE CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END  NULLS LAST, (+ (((rt0.c2)>=(rt0.c0)))) DESC, CASE WHEN rt0.c2 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 END END  NULLS LAST;
SELECT * FROM rt0 WHERE (((0.3133129808946227) NOT BETWEEN ((((rt0.c2))!=((rt0.c1)))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.3133129808946227) NOT BETWEEN ((((rt0.c2))<>((rt0.c1)))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.3133129808946227) NOT BETWEEN ((((rt0.c2))!=((rt0.c1)))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.3133129808946227) NOT BETWEEN ((((rt0.c2))<>((rt0.c1)))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((0.3133129808946227) NOT BETWEEN ((((rt0.c2))!=((rt0.c1)))) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))));
SELECT * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((rt0.c2)OR(rt0.c0)))AND(((rt0.c0)IS(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, NULL, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))*(((rt0.c2)IS(rt0.c2)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(x'' AS REAL))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(x'' AS REAL))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, NULL, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))*(((rt0.c2)IS(rt0.c2)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, NULL, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))*(((rt0.c2)IS(rt0.c2)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(x'' AS REAL))))AND(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(x'' AS REAL))))AND(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, NULL, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))*(((rt0.c2)IS(rt0.c2)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, NULL, rt0.c2)) AND ((rt0.c0, rt0.c1, rt0.c0))))*(((rt0.c2)IS(rt0.c2)))) WHERE (((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)AND(CAST(x'' AS REAL))))AND(((rt0.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) ORDER BY rt0.c2 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) ORDER BY rt0.c2 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(rt0.c0 AS BLOB))) ORDER BY rt0.c2 COLLATE RTRIM;
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR((('-75311442')>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR((('-75311442')>>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR((('-75311442')>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR((('-75311442')>>(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS BLOB))AND(CAST(rt0.c1 AS REAL))))OR((('-75311442')>>(rt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((ROUND(((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0) NOT NULL), ((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((json_insert(rt0.c0, NULL, rt0.c2) IN ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(rt0.c0, NULL, rt0.c2) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((json_insert(rt0.c0, NULL, rt0.c2) IN ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(rt0.c0, NULL, rt0.c2) IN ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((json_insert(rt0.c0, NULL, rt0.c2) IN ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'') IS FALSE) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((x'') IS FALSE) IN ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'') IS FALSE) IN ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((x'') IS FALSE) IN ((- (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((x'') IS FALSE) IN ((- (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, NULL, rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY rt0.c2;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((((((rt0.c2))>=((rt0.c0)))) BETWEEN (((((rt0.c2)OR(x'807e')))AND(-8.40340201E8))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>=((rt0.c0)))) BETWEEN (((((rt0.c2)OR(x'807e')))AND(-8.40340201E8))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((((((rt0.c2))>=((rt0.c0)))) BETWEEN (((((rt0.c2)OR(x'807e')))AND(-8.40340201E8))) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>=((rt0.c0)))) BETWEEN (((((rt0.c2)OR(x'807e')))AND(-8.40340201E8))) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL WHERE ((((((rt0.c2))>=((rt0.c0)))) BETWEEN (((((rt0.c2)OR(x'807e')))AND(-8.40340201E8))) AND (rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((0x3084919c)AND(rt0.c0)))AND(-0.0)))OR(vt0.c0)))AND(rt0.c2)))LIKE((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE ((- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((0x3084919c)AND(rt0.c0)))AND(-0.0)))OR(vt0.c0)))AND(rt0.c2)))LIKE((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((0x3084919c)AND(rt0.c0)))AND(-0.0)))OR(vt0.c0)))AND(rt0.c2)))LIKE((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE ((- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((0x3084919c)AND(rt0.c0)))AND(-0.0)))OR(vt0.c0)))AND(rt0.c2)))LIKE((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((0x3084919c)AND(rt0.c0)))AND(-0.0)))OR(vt0.c0)))AND(rt0.c2)))LIKE((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) WHERE ((- (((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS BLOB) ASC  NULLS FIRST, (((+ (rt0.c2)))/(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS BLOB) ASC  NULLS FIRST, (((+ (rt0.c2)))/(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS BLOB) ASC  NULLS FIRST, (((+ (rt0.c2)))/(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS BLOB) ASC  NULLS FIRST, (((+ (rt0.c2)))/(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY CAST(((rt0.c1)OR(rt0.c0)) AS BLOB) ASC  NULLS FIRST, (((+ (rt0.c2)))/(UNLIKELY(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (((((((rt0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1))))AND(rt0.c0)))OR('-881940579'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1))))AND(rt0.c0)))OR('-881940579'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (((((((rt0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1))))AND(rt0.c0)))OR('-881940579'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((((rt0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1))))AND(rt0.c0)))OR('-881940579'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY (((((((rt0.c0, vt0.c0, rt0.c1, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, rt0.c1, rt0.c2, rt0.c1))))AND(rt0.c0)))OR('-881940579'))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)&(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) ELSE (- (rt0.c0)) END) ORDER BY ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c2, NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN 1652329834 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.9755454033600696' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(0xffffffff82c648f2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c2, NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN 1652329834 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.9755454033600696' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(0Xffffffff82c648f2 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)&(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) ELSE (- (rt0.c0)) END) ORDER BY ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c2, NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN 1652329834 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.9755454033600696' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(0xffffffff82c648f2 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) ELSE (- (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c2, NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN 1652329834 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.9755454033600696' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(0Xffffffff82c648f2 AS NUMERIC)))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)&(rt0.c2))  WHEN rt0.c1 THEN CAST(rt0.c2 AS INTEGER) ELSE (- (rt0.c0)) END) ORDER BY ((((((((((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)))AND(vt0.c0 COLLATE NOCASE)))AND(IFNULL(DISTINCT rt0.c2, NULL))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN 1652329834 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.9755454033600696' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)))AND(CAST(0xffffffff82c648f2 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.671425512435689))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS(rt0.c2))  WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.671425512435689))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.671425512435689))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)IS(rt0.c2))  WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.671425512435689))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE ((vt0.c0)IS(rt0.c2))  WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((0.671425512435689))) END);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c0)LIKE(0X6a6d0765))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((rt0.c0)LIKE(0X6a6d0765))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c0)LIKE(0X6a6d0765))) AND ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((rt0.c0)LIKE(0X6a6d0765))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c0)LIKE(0X6a6d0765))) AND ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN LOWER('') WHEN (NOT (rt0.c0)) THEN (((rt0.c2))>=((vt0.c0))) WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c2) NOTNULL) END) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST, CAST(((rt0.c2)||(rt0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN LOWER('') WHEN (NOT (rt0.c0)) THEN (((rt0.c2))>=((vt0.c0))) WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST, CAST(((rt0.c2)||(rt0.c1)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN LOWER('') WHEN (NOT (rt0.c0)) THEN (((rt0.c2))>=((vt0.c0))) WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c2) NOTNULL) END) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST, CAST(((rt0.c2)||(rt0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN LOWER('') WHEN (NOT (rt0.c0)) THEN (((rt0.c2))>=((vt0.c0))) WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST, CAST(((rt0.c2)||(rt0.c1)) AS BLOB) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN LOWER('') WHEN (NOT (rt0.c0)) THEN (((rt0.c2))>=((vt0.c0))) WHEN ((vt0.c0)IS NOT(rt0.c2)) THEN ((rt0.c2) NOTNULL) END) ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END IN ()) ASC  NULLS LAST, CAST(((rt0.c2)||(rt0.c1)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c2)>(vt0.c0))))) ORDER BY (NOT (LIKELY(DISTINCT 0.05551547001793988)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (LIKELY(DISTINCT 0.05551547001793988)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c2)>(vt0.c0))))) ORDER BY (NOT (LIKELY(DISTINCT 0.05551547001793988)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (LIKELY(DISTINCT 0.05551547001793988)))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((vt0.c0) BETWEEN (((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))) AND (((rt0.c2)>(vt0.c0))))) ORDER BY (NOT (LIKELY(DISTINCT 0.05551547001793988)))  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (TYPEOF(DISTINCT rt0.c2)))) ORDER BY ((((rt0.c0)IS(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, 0.5283321342812765, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)+(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)IS(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, 0.5283321342812765, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)+(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (TYPEOF(DISTINCT rt0.c2)))) ORDER BY ((((rt0.c0)IS(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, 0.5283321342812765, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)+(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((+ (TYPEOF(DISTINCT rt0.c2)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)IS(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, 0.5283321342812765, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)+(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (TYPEOF(DISTINCT rt0.c2)))) ORDER BY ((((rt0.c0)IS(vt0.c0))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, 0.5283321342812765, rt0.c0)) AND ((rt0.c2, rt0.c1, rt0.c2)))) AND (((((rt0.c2)AND(rt0.c1)))AND(vt0.c0)))), ((vt0.c0 COLLATE NOCASE)+(rt0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 END IN (((vt0.c0)/(rt0.c1)), CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c2 END IN (((vt0.c0)/(rt0.c1)), CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 END IN (((vt0.c0)/(rt0.c1)), CAST(x'' AS REAL))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c2 END IN (((vt0.c0)/(rt0.c1)), CAST(x'' AS REAL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c2 END IN (((vt0.c0)/(rt0.c1)), CAST(x'' AS REAL))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN x'9ae9' THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), (((rt0.c2))!=((rt0.c1))) COLLATE NOCASE ASC  NULLS FIRST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN x'9ae9' THEN rt0.c1 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), (((rt0.c2))!=((rt0.c1))) COLLATE NOCASE ASC  NULLS FIRST, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN x'9ae9' THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), (((rt0.c2))!=((rt0.c1))) COLLATE NOCASE ASC  NULLS FIRST, x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN x'9ae9' THEN rt0.c1 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), (((rt0.c2))!=((rt0.c1))) COLLATE NOCASE ASC  NULLS FIRST, x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((CASE vt0.c0  WHEN x'9ae9' THEN rt0.c1 ELSE rt0.c2 END)))) ORDER BY ((rt0.c0 COLLATE BINARY) IS FALSE), (((rt0.c2))!=((rt0.c1))) COLLATE NOCASE ASC  NULLS FIRST, x'' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (UNLIKELY(DISTINCT rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(NULL COLLATE NOCASE, ((vt0.c0) NOTNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((('-1612053029')==(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST, json_patch(x'', vt0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL COLLATE NOCASE, ((vt0.c0) NOTNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((('-1612053029')==(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST, json_patch(x'', vt0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME(NULL COLLATE NOCASE, ((vt0.c0) NOTNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY ((('-1612053029')==(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST, json_patch(x'', vt0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL COLLATE NOCASE, ((vt0.c0) NOTNULL), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((('-1612053029')==(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0)||(vt0.c0)))) ASC  NULLS FIRST, json_patch(x'', vt0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)AND('0.7761525418413774')))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))), 'y~cP' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)AND('0.7761525418413774')))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))), 'y~cP' ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)AND('0.7761525418413774')))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))), 'y~cP' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)AND('0.7761525418413774')))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))), 'y~cP' ASC);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE vt0.c0 END)AND('0.7761525418413774')))OR(((((vt0.c0)AND(rt0.c2)))OR(rt0.c0)))), 'y~cP' ASC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS BLOB));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c2)AND(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((0.41250183142194874 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((0.41250183142194874 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.41250183142194874 IN (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((0.41250183142194874 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((0.41250183142194874 IN (vt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((rt0.c0 IN ()))))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((rt0.c0 IN ()))))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((rt0.c0 IN ()))))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS REAL))AND((rt0.c0 IN ()))))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c2 AS REAL))AND((rt0.c0 IN ()))))AND(CASE NULL  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(0Xffffffffddac1cff)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(0Xffffffffddac1cff)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(0Xffffffffddac1cff)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(0Xffffffffddac1cff)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(0Xffffffffddac1cff)))AND(rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))-((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))-((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))-((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((- (vt0.c0)))<<(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (1.7976931348623157E308) AND (x'')))) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0)*(0.7187123695328728)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END THEN (vt0.c0 IN (rt0.c2, rt0.c1)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN (('') IS FALSE) THEN ((vt0.c0)GLOB(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0) NOT BETWEEN (1.7976931348623157E308) AND (x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0)*(0.7187123695328728)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END THEN (vt0.c0 IN (rt0.c2, rt0.c1)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN (('') IS FALSE) THEN ((vt0.c0)GLOB(rt0.c0)) END ASC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (1.7976931348623157E308) AND (x'')))) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0)*(0.7187123695328728)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END THEN (vt0.c0 IN (rt0.c2, rt0.c1)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN (('') IS FALSE) THEN ((vt0.c0)GLOB(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((rt0.c0) NOT BETWEEN (1.7976931348623157E308) AND (x'')))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0)*(0.7187123695328728)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END THEN (vt0.c0 IN (rt0.c2, rt0.c1)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN (('') IS FALSE) THEN ((vt0.c0)GLOB(rt0.c0)) END ASC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (ABS(DISTINCT ((rt0.c0) NOT BETWEEN (1.7976931348623157E308) AND (x'')))) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END THEN ((rt0.c0)*(0.7187123695328728)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE NULL END THEN (vt0.c0 IN (rt0.c2, rt0.c1)) WHEN CAST(vt0.c0 AS NUMERIC) THEN (rt0.c1 IN ()) WHEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((((rt0.c1)AND(vt0.c0)))OR(vt0.c0)) WHEN (('') IS FALSE) THEN ((vt0.c0)GLOB(rt0.c0)) END ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c2)) IN ())) ORDER BY CASE (rt0.c0 IN ())  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0) IS FALSE) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c2)) IN ())) ORDER BY CASE (rt0.c0 IN ())  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)*(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0) IS FALSE) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)*(rt0.c2)) IN ())) ORDER BY CASE (rt0.c0 IN ())  WHEN rt0.c0 THEN rt0.c1 COLLATE NOCASE ELSE ((rt0.c0) IS FALSE) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())  NULLS LAST, CAST(((vt0.c0)>=(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())  NULLS LAST, CAST(((vt0.c0)>=(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())  NULLS LAST, CAST(((vt0.c0)>=(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())  NULLS LAST, CAST(((vt0.c0)>=(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 IN (vt0.c0, vt0.c0)) IN ())  NULLS LAST, CAST(((vt0.c0)>=(vt0.c0)) AS TEXT), (vt0.c0 IN ()) COLLATE BINARY;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (GLOB(vt0.c0, rt0.c0) IN (NULL)) WHERE (((((('')IS(rt0.c2))))<>((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((('')IS(rt0.c2))))<>((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (GLOB(vt0.c0, rt0.c0) IN (NULL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (GLOB(vt0.c0, rt0.c0) IN (NULL)) WHERE (((((('')IS(rt0.c2))))<>((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((('')IS(rt0.c2))))<>((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (GLOB(vt0.c0, rt0.c0) IN (NULL)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (GLOB(vt0.c0, rt0.c0) IN (NULL)) WHERE (((((('')IS(rt0.c2))))<>((((((rt0.c1)OR(rt0.c1)))AND(vt0.c0))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS INTEGER) THEN (- (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ((- (rt0.c2))))) ORDER BY ((((rt0.c0)||(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c2))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ((- (rt0.c2))))) ORDER BY ((((rt0.c0)||(rt0.c2))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) IS FALSE) IN ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)||(rt0.c2))) NOT NULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2) IS FALSE) IN ((- (rt0.c2))))) ORDER BY ((((rt0.c0)||(rt0.c2))) NOT NULL) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) ISNULL)) ORDER BY (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)), ((vt0.c0)>(rt0.c2)), ((rt0.c2)>>(x'')), (~ (vt0.c0)), (+ (rt0.c2))))>((x'', x'', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), 'kiU', (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('0.3133129808946227')))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)), ((vt0.c0)>(rt0.c2)), ((rt0.c2)>>(x'')), (~ (vt0.c0)), (+ (rt0.c2))))>((x'', x'', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), 'kiU', (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('0.3133129808946227')))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) ISNULL)) ORDER BY (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)), ((vt0.c0)>(rt0.c2)), ((rt0.c2)>>(x'')), (~ (vt0.c0)), (+ (rt0.c2))))>((x'', x'', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), 'kiU', (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('0.3133129808946227')))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)), ((vt0.c0)>(rt0.c2)), ((rt0.c2)>>(x'')), (~ (vt0.c0)), (+ (rt0.c2))))>((x'', x'', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), 'kiU', (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('0.3133129808946227')))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) ISNULL)) ORDER BY (((((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)), ((vt0.c0)>(rt0.c2)), ((rt0.c2)>>(x'')), (~ (vt0.c0)), (+ (rt0.c2))))>((x'', x'', ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), 'kiU', (((rt0.c2)) BETWEEN ((rt0.c2)) AND (('0.3133129808946227')))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)=(rt0.c0)) IN ())) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)=(rt0.c0)) IN ())) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)=(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)=(rt0.c0)) IN ())) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c1))));
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(-351163532))) NOT BETWEEN ((((''))>=((rt0.c1)))) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT), x'c88a', ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>=(rt0.c0)), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, x'')))))) ASC  NULLS LAST, DATETIME(rt0.c0 COLLATE NOCASE, ((NULL) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 END) DESC  NULLS FIRST, CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(-351163532))) NOT BETWEEN ((((''))>=((rt0.c1)))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT), x'c88a', ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>=(rt0.c0)), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, x'')))))) ASC  NULLS LAST, DATETIME(rt0.c0 COLLATE NOCASE, ((NULL) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 END) DESC  NULLS FIRST, CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(-351163532))) NOT BETWEEN ((((''))>=((rt0.c1)))) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT), x'c88a', ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>=(rt0.c0)), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, x'')))))) ASC  NULLS LAST, DATETIME(rt0.c0 COLLATE NOCASE, ((NULL) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 END) DESC  NULLS FIRST, CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>=(-351163532))) NOT BETWEEN ((((''))>=((rt0.c1)))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT), x'c88a', ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>=(rt0.c0)), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, x'')))))) ASC  NULLS LAST, DATETIME(rt0.c0 COLLATE NOCASE, ((NULL) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 END) DESC  NULLS FIRST, CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)>=(-351163532))) NOT BETWEEN ((((''))>=((rt0.c1)))) AND (CAST(rt0.c2 AS BLOB)))) ORDER BY (((rt0.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT), x'c88a', ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c2)>=(rt0.c0)), (((rt0.c2, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, x'')))))) ASC  NULLS LAST, DATETIME(rt0.c0 COLLATE NOCASE, ((NULL) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 END) DESC  NULLS FIRST, CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0)OR(vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1)%(x'')), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1)+(rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c0)), CAST(rt0.c2 AS REAL), (- (rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))), 0.10736343313694652  NULLS FIRST, HEX(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1)%(x'')), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1)+(rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c0)), CAST(rt0.c2 AS REAL), (- (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))), 0.10736343313694652  NULLS FIRST, HEX(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) DESC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1)%(x'')), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1)+(rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c0)), CAST(rt0.c2 AS REAL), (- (rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))), 0.10736343313694652  NULLS FIRST, HEX(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1)%(x'')), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1)+(rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c0)), CAST(rt0.c2 AS REAL), (- (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))), 0.10736343313694652  NULLS FIRST, HEX(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) DESC);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((((rt0.c1)%(x'')), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END, ((rt0.c1)+(rt0.c1)))) AND ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(NULL)))AND(rt0.c0)), CAST(rt0.c2 AS REAL), (- (rt0.c0)))))) ORDER BY ((((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))OR(rt0.c1)))AND(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))), 0.10736343313694652  NULLS FIRST, HEX(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOTNULL))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOTNULL))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOTNULL))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) NOTNULL))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((rt0.c0) NOTNULL))OR(CAST(rt0.c0 AS REAL))))OR(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(x'1e91'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(x'1e91'))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(x'1e91'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(x'1e91'))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)|(x'1e91'))) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)-(vt0.c0))) AND (0Xfffffffff250be73)) DESC  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)-(vt0.c0))) AND (0Xfffffffff250be73)) DESC  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)-(vt0.c0))) AND (0Xfffffffff250be73)) DESC  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)-(vt0.c0))) AND (0Xfffffffff250be73)) DESC  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0)-(vt0.c0))) AND (0Xfffffffff250be73)) DESC  NULLS FIRST, CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (- (vt0.c0)) ELSE ((vt0.c0)|(vt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN LIKELIHOOD(rt0.c0, 0.03168030302725888) WHEN ((0Xffffffff8d9ebc03) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN '᷷M&귝' COLLATE NOCASE THEN ((rt0.c1)-(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN LIKELIHOOD(rt0.c0, 0.03168030302725888) WHEN ((0Xffffffff8d9ebc03) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN '᷷M&귝' COLLATE NOCASE THEN ((rt0.c1)-(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN LIKELIHOOD(rt0.c0, 0.03168030302725888) WHEN ((0Xffffffff8d9ebc03) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN '᷷M&귝' COLLATE NOCASE THEN ((rt0.c1)-(rt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c2) ISNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN LIKELIHOOD(rt0.c0, 0.03168030302725888) WHEN ((0Xffffffff8d9ebc03) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN '᷷M&귝' COLLATE NOCASE THEN ((rt0.c1)-(rt0.c1)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END THEN LIKELIHOOD(rt0.c0, 0.03168030302725888) WHEN ((0Xffffffff8d9ebc03) NOT NULL) THEN ((rt0.c0) NOT NULL) WHEN '᷷M&귝' COLLATE NOCASE THEN ((rt0.c1)-(rt0.c1)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)>=(rt0.c1)) WHEN 0.409317920701756 THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)>=(rt0.c1)) WHEN 0.409317920701756 THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)>=(rt0.c1)) WHEN 0.409317920701756 THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)>=(rt0.c1)) WHEN 0.409317920701756 THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN ((vt0.c0)>=(rt0.c1)) WHEN 0.409317920701756 THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c0)>>(rt0.c2)) THEN (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((vt0.c0 COLLATE BINARY)&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((vt0.c0 COLLATE BINARY)&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) ORDER BY ((vt0.c0 COLLATE BINARY)&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)+(0.671425512435689)))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))OR(1.312022928E9))) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))  NULLS LAST, ((CHANGES())&((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, x'', rt0.c1))))) DESC  NULLS LAST, (((~ (vt0.c0)))*(((rt0.c1)OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c0)+(0.671425512435689)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)OR(rt0.c2)))OR(1.312022928E9))) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))  NULLS LAST, ((CHANGES())&((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, x'', rt0.c1))))) DESC  NULLS LAST, (((~ (vt0.c0)))*(((rt0.c1)OR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)+(0.671425512435689)))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))OR(1.312022928E9))) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))  NULLS LAST, ((CHANGES())&((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, x'', rt0.c1))))) DESC  NULLS LAST, (((~ (vt0.c0)))*(((rt0.c1)OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c0)+(0.671425512435689)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)OR(rt0.c2)))OR(1.312022928E9))) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))  NULLS LAST, ((CHANGES())&((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, x'', rt0.c1))))) DESC  NULLS LAST, (((~ (vt0.c0)))*(((rt0.c1)OR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((rt0.c0)+(0.671425512435689)))) ORDER BY ((((((rt0.c1)OR(rt0.c2)))OR(1.312022928E9))) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))  NULLS LAST, ((CHANGES())&((((rt0.c1, rt0.c0, rt0.c1))<>((rt0.c1, x'', rt0.c1))))) DESC  NULLS LAST, (((~ (vt0.c0)))*(((rt0.c1)OR(rt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((UNLIKELY(DISTINCT vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((UNLIKELY(DISTINCT vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((UNLIKELY(DISTINCT vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((UNLIKELY(DISTINCT vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE ((NOT ((- (vt0.c0))))) ORDER BY ((CAST(vt0.c0 AS NUMERIC))LIKE((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((''))))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((UNLIKELY(DISTINCT vt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT));
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END COLLATE RTRIM COLLATE NOCASE) ORDER BY CAST((vt0.c0 IN ()) AS TEXT);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6243530420595907 THEN 'bb*' END)<<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (('cc3A')+(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))<((0.43523682404843933, (((rt0.c2))>((rt0.c0))), IFNULL(DISTINCT rt0.c2, rt0.c1), (NOT (rt0.c2)), x'')))  NULLS LAST, (~ (((rt0.c2)|(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6243530420595907 THEN 'bb*' END)<<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (('cc3A')+(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))<((0.43523682404843933, (((rt0.c2))>((rt0.c0))), IFNULL(DISTINCT rt0.c2, rt0.c1), (NOT (rt0.c2)), x'')))  NULLS LAST, (~ (((rt0.c2)|(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6243530420595907 THEN 'bb*' END)<<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (('cc3A')+(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))<((0.43523682404843933, (((rt0.c2))>((rt0.c0))), IFNULL(DISTINCT rt0.c2, rt0.c1), (NOT (rt0.c2)), x'')))  NULLS LAST, (~ (((rt0.c2)|(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6243530420595907 THEN 'bb*' END)<<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (('cc3A')+(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))<((0.43523682404843933, (((rt0.c2))>((rt0.c0))), IFNULL(DISTINCT rt0.c2, rt0.c1), (NOT (rt0.c2)), x'')))  NULLS LAST, (~ (((rt0.c2)|(rt0.c0)))) ASC);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 0.6243530420595907 THEN 'bb*' END)<<(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((NOT (rt0.c2)), rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (('cc3A')+(rt0.c0)), CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END))<((0.43523682404843933, (((rt0.c2))>((rt0.c0))), IFNULL(DISTINCT rt0.c2, rt0.c1), (NOT (rt0.c2)), x'')))  NULLS LAST, (~ (((rt0.c2)|(rt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) ORDER BY x'3cd8';
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY x'3cd8');
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) ORDER BY x'3cd8';
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY x'3cd8');
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (CAST(vt0.c0 AS BLOB)))) ORDER BY x'3cd8';
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS TEXT));
SELECT * FROM rt0 WHERE (json_patch((rt0.c0 IN (rt0.c2, rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((rt0.c0 IN (rt0.c2, rt0.c0)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_patch((rt0.c0 IN (rt0.c2, rt0.c0)), rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((rt0.c0 IN (rt0.c2, rt0.c0)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (json_patch((rt0.c0 IN (rt0.c2, rt0.c0)), rt0.c2));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))>((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c2))>((rt0.c2)))) IS FALSE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((x'')*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'')*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((x'')*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((x'')*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1)GLOB(vt0.c0)) COLLATE RTRIM) ORDER BY ((x'')*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (((rt0.c2) IS TRUE))), ((rt0.c2 IN (rt0.c2, rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (((rt0.c2) IS TRUE))), ((rt0.c2 IN (rt0.c2, rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (((rt0.c2) IS TRUE))), ((rt0.c2 IN (rt0.c2, rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) IS FALSE) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (((rt0.c2) IS TRUE))), ((rt0.c2 IN (rt0.c2, rt0.c2)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (- (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))) WHERE ((((rt0.c2) IS FALSE) IN ())) ORDER BY ((((rt0.c0)/(rt0.c2))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))) AND (((rt0.c2) IS TRUE))), ((rt0.c2 IN (rt0.c2, rt0.c2)) IN ()) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) NOT BETWEEN ((rt0.c1 IN (rt0.c2))) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9643205386670503);
SELECT SUM(count) FROM (SELECT ALL ((0.9643205386670503) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9643205386670503);
SELECT SUM(count) FROM (SELECT ALL ((0.9643205386670503) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.9643205386670503);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM)>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>((+ (vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c0, 0.0999215117118093, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c0, 0.0999215117118093, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c0, 0.0999215117118093, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c0, 0.0999215117118093, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0, rt0.c2, rt0.c0))==((rt0.c0, 0.0999215117118093, rt0.c1))) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(((rt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(((rt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (UNLIKELY(((rt0.c0)LIKE(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LOWER(vt0.c0))IS NOT(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))IS NOT(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LOWER(vt0.c0))IS NOT(((vt0.c0)<=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LOWER(vt0.c0))IS NOT(((vt0.c0)<=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((LOWER(vt0.c0))IS NOT(((vt0.c0)<=(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((+ (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)LIKE('n	')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)LIKE('n	')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((+ (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)LIKE('n	')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)LIKE('n	')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(((vt0.c0)*(vt0.c0)))))AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR((+ (vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)LIKE('n	')))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c1, rt0.c2)) IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((TRIM(rt0.c2, rt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN (rt0.c1, rt0.c2)) IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2, rt0.c0)) IS TRUE) DESC);
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c1, rt0.c2)) IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((TRIM(rt0.c2, rt0.c0)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' IN (rt0.c1, rt0.c2)) IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((TRIM(rt0.c2, rt0.c0)) IS TRUE) DESC);
SELECT ALL * FROM rt0 WHERE (((x'' IN (rt0.c1, rt0.c2)) IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1))))) ORDER BY ((TRIM(rt0.c2, rt0.c0)) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'1da6')))AND(50831402))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), vt0.c0, CAST((- (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'1da6')))AND(50831402))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), vt0.c0, CAST((- (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'1da6')))AND(50831402))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), vt0.c0, CAST((- (vt0.c0)) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'1da6')))AND(50831402))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), vt0.c0, CAST((- (vt0.c0)) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(x'1da6')))AND(50831402))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), vt0.c0, CAST((- (vt0.c0)) AS BLOB) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%('Zu]nv')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%('Zu]nv')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%('Zu]nv')) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)%('Zu]nv')) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)%('Zu]nv')) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (CASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN '' THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE ((((1.785530213E9)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN '' THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE ((((1.785530213E9)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN '' THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE ((((1.785530213E9)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN '' THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE ((((1.785530213E9)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN UNLIKELY(vt0.c0) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN '' THEN ((vt0.c0) NOTNULL) WHEN vt0.c0 COLLATE NOCASE THEN TRIM(vt0.c0) ELSE ((((1.785530213E9)OR(vt0.c0)))AND(vt0.c0)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((0.08879859690638436 IN ()))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((0.08879859690638436 IN ())))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((0.08879859690638436 IN ()))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((0.08879859690638436 IN ())))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END)) AND (((0.08879859690638436 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) COLLATE RTRIM) ORDER BY ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN x'' THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(0X1 AS REAL)) IS FALSE)) ORDER BY (((rt0.c1 IN (rt0.c1)))<=((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0X1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c1)))<=((- (vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(0X1 AS REAL)) IS FALSE)) ORDER BY (((rt0.c1 IN (rt0.c1)))<=((- (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(0X1 AS REAL)) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c1)))<=((- (vt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(0X1 AS REAL)) IS FALSE)) ORDER BY (((rt0.c1 IN (rt0.c1)))<=((- (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((((vt0.c0))!=((rt0.c1)))) NOT NULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((vt0.c0))!=((rt0.c1)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((((vt0.c0))!=((rt0.c1)))) NOT NULL) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (((((vt0.c0))!=((rt0.c1)))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (((((vt0.c0))!=((rt0.c1)))) NOT NULL) WHERE (NULL);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>(((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((((('')&(rt0.c1))))<(((((rt0.c1))=((rt0.c0))))))  NULLS LAST, (((((rt0.c2) ISNULL)))<((((rt0.c2) NOT BETWEEN (0.3699893856522478) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>(((((rt0.c2, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('')&(rt0.c1))))<(((((rt0.c1))=((rt0.c0))))))  NULLS LAST, (((((rt0.c2) ISNULL)))<((((rt0.c2) NOT BETWEEN (0.3699893856522478) AND (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>(((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((((('')&(rt0.c1))))<(((((rt0.c1))=((rt0.c0))))))  NULLS LAST, (((((rt0.c2) ISNULL)))<((((rt0.c2) NOT BETWEEN (0.3699893856522478) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>(((((rt0.c2, rt0.c1, rt0.c0))!=((rt0.c1, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('')&(rt0.c1))))<(((((rt0.c1))=((rt0.c0))))))  NULLS LAST, (((((rt0.c2) ISNULL)))<((((rt0.c2) NOT BETWEEN (0.3699893856522478) AND (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))>(((((rt0.c2, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, rt0.c0))))))) ORDER BY ((((('')&(rt0.c1))))<(((((rt0.c1))=((rt0.c0))))))  NULLS LAST, (((((rt0.c2) ISNULL)))<((((rt0.c2) NOT BETWEEN (0.3699893856522478) AND (rt0.c0))))) ASC;
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ((((((rt0.c1 IN ()))OR((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY CASE ((rt0.c0)||(rt0.c1))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '\nb' WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) WHEN rt0.c2 THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (NOT (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)||(rt0.c1))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '\nb' WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) WHEN rt0.c2 THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (NOT (vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ((((((rt0.c1 IN ()))OR((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY CASE ((rt0.c0)||(rt0.c1))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '\nb' WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) WHEN rt0.c2 THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (NOT (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)||(rt0.c1))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '\nb' WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) WHEN rt0.c2 THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (NOT (vt0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ((((((rt0.c1 IN ()))OR((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c2, rt0.c1))))))OR((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY CASE ((rt0.c0)||(rt0.c1))  WHEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN '\nb' WHEN ((rt0.c0)<=(rt0.c1)) THEN (~ (rt0.c0)) WHEN rt0.c2 THEN ((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (NOT (vt0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(NULL)))) AND ((rt0.c1))) ASC  NULLS LAST, (((((((rt0.c1)AND('p')))AND(vt0.c0))))>((((vt0.c0)%(rt0.c2))))) DESC  NULLS LAST, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(NULL)))) AND ((rt0.c1))) ASC  NULLS LAST, (((((((rt0.c1)AND('p')))AND(vt0.c0))))>((((vt0.c0)%(rt0.c2))))) DESC  NULLS LAST, '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(NULL)))) AND ((rt0.c1))) ASC  NULLS LAST, (((((((rt0.c1)AND('p')))AND(vt0.c0))))>((((vt0.c0)%(rt0.c2))))) DESC  NULLS LAST, '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(NULL)))) AND ((rt0.c1))) ASC  NULLS LAST, (((((((rt0.c1)AND('p')))AND(vt0.c0))))>((((vt0.c0)%(rt0.c2))))) DESC  NULLS LAST, '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c2) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0)<=(NULL)))) AND ((rt0.c1))) ASC  NULLS LAST, (((((((rt0.c1)AND('p')))AND(vt0.c0))))>((((vt0.c0)%(rt0.c2))))) DESC  NULLS LAST, '' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (0.43523682404843933)));
SELECT SUM(count) FROM (SELECT (((~ (0.43523682404843933))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (0.43523682404843933)));
SELECT SUM(count) FROM (SELECT (((~ (0.43523682404843933))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (0.43523682404843933)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(NULLIF(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(NULLIF(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(NULLIF(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(NULLIF(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND(NULLIF(vt0.c0, vt0.c0))))AND(vt0.c0 COLLATE NOCASE)) DESC;
SELECT * FROM vt0, rt0 WHERE ('') ORDER BY CAST(x'' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(x'' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM vt0, rt0 WHERE ('') ORDER BY CAST(x'' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(x'' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM vt0, rt0 WHERE ('') ORDER BY CAST(x'' COLLATE BINARY AS INTEGER)  NULLS FIRST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (json_type(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))) ORDER BY ((rt0.c2)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c2)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (json_type(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))) ORDER BY ((rt0.c2)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_type(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((rt0.c2)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (json_type(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))) ORDER BY ((rt0.c2)IS NOT(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY) ORDER BY (((((((rt0.c2, '', x''))>(('k!z(4', rt0.c2, rt0.c1))))OR(rt0.c2)))AND((rt0.c2 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2, '', x''))>(('k!z(4', rt0.c2, rt0.c1))))OR(rt0.c2)))AND((rt0.c2 IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY) ORDER BY (((((((rt0.c2, '', x''))>(('k!z(4', rt0.c2, rt0.c1))))OR(rt0.c2)))AND((rt0.c2 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2, '', x''))>(('k!z(4', rt0.c2, rt0.c1))))OR(rt0.c2)))AND((rt0.c2 IN (rt0.c0)))));
SELECT * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY) ORDER BY (((((((rt0.c2, '', x''))>(('k!z(4', rt0.c2, rt0.c1))))OR(rt0.c2)))AND((rt0.c2 IN (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) ORDER BY (('Z')LIKE(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (('Z')LIKE(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) ORDER BY (('Z')LIKE(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (('Z')LIKE(vt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((- (vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) ORDER BY (('Z')LIKE(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT ((rt0.c1 IN ()))));
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) ORDER BY CASE vt0.c0  WHEN '-192488170' THEN vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN '-192488170' THEN vt0.c0 END COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) ORDER BY CASE vt0.c0  WHEN '-192488170' THEN vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN '-192488170' THEN vt0.c0 END COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((((- (vt0.c0)))IS(vt0.c0 COLLATE NOCASE))) ORDER BY CASE vt0.c0  WHEN '-192488170' THEN vt0.c0 END COLLATE BINARY ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) IS TRUE));
SELECT * FROM rt0 WHERE (((LOWER(DISTINCT -2044167005))LIKE(-1.466849912E9))) ORDER BY CAST(((rt0.c0) IS TRUE) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT -2044167005))LIKE(-1.466849912E9))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS TRUE) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((LOWER(DISTINCT -2044167005))LIKE(-1.466849912E9))) ORDER BY CAST(((rt0.c0) IS TRUE) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT -2044167005))LIKE(-1.466849912E9))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) IS TRUE) AS REAL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((LOWER(DISTINCT -2044167005))LIKE(-1.466849912E9))) ORDER BY CAST(((rt0.c0) IS TRUE) AS REAL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))==((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB)))==((x'')))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))==((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt0.c2 AS BLOB)))==((x'')))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((CAST(rt0.c2 AS BLOB)))==((x''))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(rt0.c1 COLLATE BINARY)) WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY ((CAST(0.25807742474108997 AS BLOB))/((((x'2782', 'HN+GH㧣z*	', vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(rt0.c1 COLLATE BINARY)) ORDER BY ((CAST(0.25807742474108997 AS BLOB))/((((x'2782', 'HN+GH㧣z*	', vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(rt0.c1 COLLATE BINARY)) WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY ((CAST(0.25807742474108997 AS BLOB))/((((x'2782', 'HN+GH㧣z*	', vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(rt0.c1 COLLATE BINARY)) ORDER BY ((CAST(0.25807742474108997 AS BLOB))/((((x'2782', 'HN+GH㧣z*	', vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE NOCASE)AND(((rt0.c2) IS FALSE))))AND(rt0.c1 COLLATE BINARY)) WHERE ((~ (((vt0.c0) NOT NULL)))) ORDER BY ((CAST(0.25807742474108997 AS BLOB))/((((x'2782', 'HN+GH㧣z*	', vt0.c0)) BETWEEN ((vt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c0, vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2)LIKE(rt0.c2))))==(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(rt0.c2))))=(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2)LIKE(rt0.c2))))==(((+ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)LIKE(rt0.c2))))=(((+ (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2)LIKE(rt0.c2))))==(((+ (rt0.c0))))));
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))==(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))==(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))<(CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0) IS TRUE))))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)||((((((((('0.27243285891263846')OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)||((((((((('0.27243285891263846')OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)||((((((((('0.27243285891263846')OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)||((((((((('0.27243285891263846')OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)||((((((((('0.27243285891263846')OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END))<>((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c1 THEN rt0.c0 END))<>((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END))<>((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c1 THEN rt0.c0 END))<>((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt0.c0 END))<>((((((rt0.c2)OR(vt0.c0)))AND(rt0.c2)))))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (vt0.c0 COLLATE BINARY));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))AND(ABS(DISTINCT vt0.c0))))AND((~ (rt0.c0))))) ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))AND(ABS(DISTINCT vt0.c0))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))AND(ABS(DISTINCT vt0.c0))))AND((~ (rt0.c0))))) ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))AND(ABS(DISTINCT vt0.c0))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))AND(ABS(DISTINCT vt0.c0))))AND((~ (rt0.c0))))) ORDER BY (NOT (vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('샤x~%h(wd') AND (rt0.c2))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (0.8309590260913559));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT BETWEEN ('샤x~%h(wd') AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (0.8309590260913559)));
SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('샤x~%h(wd') AND (rt0.c2))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (0.8309590260913559));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT BETWEEN ('샤x~%h(wd') AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (0.8309590260913559)));
SELECT * FROM rt0, vt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('샤x~%h(wd') AND (rt0.c2))))) ORDER BY (CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN (0.8309590260913559));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ROUND(NULL, vt0.c0))OR(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(NULL, vt0.c0))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (UPPER(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ROUND(NULL, vt0.c0))OR(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(NULL, vt0.c0))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (UPPER(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((ROUND(NULL, vt0.c0))OR(vt0.c0))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (COALESCE(vt0.c0, vt0.c0)) AND (UPPER(DISTINCT vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.883582954361384) AND (vt0.c0)))>=(0.8579082888610531)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (0.883582954361384) AND (vt0.c0)))>=(0.8579082888610531)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.883582954361384) AND (vt0.c0)))>=(0.8579082888610531)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (0.883582954361384) AND (vt0.c0)))>=(0.8579082888610531)) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0) NOT BETWEEN (0.883582954361384) AND (vt0.c0)))>=(0.8579082888610531)) ASC;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c2))<=((vt0.c0, 67611412, rt0.c1, vt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))IS((((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c2))<=((vt0.c0, 67611412, rt0.c1, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c2))<=((vt0.c0, 67611412, rt0.c1, vt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))IS((((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c2))<=((vt0.c0, 67611412, rt0.c1, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((CAST(rt0.c0 AS BLOB))IS((((rt0.c1, rt0.c0, rt0.c2, rt0.c2, rt0.c2))<=((vt0.c0, 67611412, rt0.c1, vt0.c0, rt0.c0))))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&(((rt0.c0)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)&(((rt0.c0)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&(((rt0.c0)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM)&(((rt0.c0)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2 COLLATE RTRIM)&(((rt0.c0)==(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)OR((~ (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c1) IS TRUE)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CAST(rt0.c0 AS TEXT)));
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND((- (rt0.c2)))))AND((((rt0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND((- (rt0.c2)))))AND((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND((- (rt0.c2)))))AND((((rt0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND((- (rt0.c2)))))AND((((rt0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1)OR(rt0.c1)))OR(NULL)))AND((- (rt0.c2)))))AND((((rt0.c0))<>((rt0.c2))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<<(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<<('')));
SELECT COUNT(*) FROM vt0 WHERE (((json_insert(vt0.c0, vt0.c0, x''))>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((x'')AND('3\녽|ppSW')))AND(((vt0.c0) IS FALSE))))AND((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(vt0.c0, vt0.c0, x''))>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((x'')AND('3\녽|ppSW')))AND(((vt0.c0) IS FALSE))))AND((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)/(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((json_insert(vt0.c0, vt0.c0, x''))>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((x'')AND('3\녽|ppSW')))AND(((vt0.c0) IS FALSE))))AND((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(vt0.c0, vt0.c0, x''))>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((x'')AND('3\녽|ppSW')))AND(((vt0.c0) IS FALSE))))AND((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)/(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((json_insert(vt0.c0, vt0.c0, x''))>=(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY ((((((((((((x'')AND('3\녽|ppSW')))AND(((vt0.c0) IS FALSE))))AND((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0))))))OR(CAST(vt0.c0 AS INTEGER))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((vt0.c0)/(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(5.0831402E7 AS TEXT) WHERE (((((((((NULL)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(5.0831402E7 AS TEXT));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(5.0831402E7 AS TEXT) WHERE (((((((((NULL)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((NULL)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(5.0831402E7 AS TEXT));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(5.0831402E7 AS TEXT) WHERE (((((((((NULL)AND(rt0.c2)))AND(vt0.c0)))OR(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>=((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>=((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))>=((- (rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (DATETIME(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, ((('-192488170'))>=((vt0.c0))), rt0.c0));
SELECT SUM(count) FROM (SELECT ((DATETIME(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, ((('-192488170'))>=((vt0.c0))), rt0.c0)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (DATETIME(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, ((('-192488170'))>=((vt0.c0))), rt0.c0));
SELECT SUM(count) FROM (SELECT ((DATETIME(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, ((('-192488170'))>=((vt0.c0))), rt0.c0)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c2) NOT NULL))%((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) WHERE (DATETIME(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, ((('-192488170'))>=((vt0.c0))), rt0.c0));
SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0))!=((rt0.c0))))<<('-2044167005')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((rt0.c0))))<<('-2044167005'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0))!=((rt0.c0))))<<('-2044167005')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<>((rt0.c0))))<<('-2044167005'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((vt0.c0))!=((rt0.c0))))<<('-2044167005')));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((rt0.c0) NOTNULL))))OR(x'' COLLATE RTRIM))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((rt0.c0) NOTNULL))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((rt0.c0) NOTNULL))))OR(x'' COLLATE RTRIM))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((rt0.c0) NOTNULL))))OR(x'' COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)OR(((rt0.c0) NOTNULL))))OR(x'' COLLATE RTRIM))) ORDER BY rt0.c0 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c2))))AND((~ (rt0.c0))))) ORDER BY ((((((rt0.c1)AND('-900349353')))OR(rt0.c0))) NOT BETWEEN (rt0.c1) AND (x'07c3')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<=((rt0.c2))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND('-900349353')))OR(rt0.c0))) NOT BETWEEN (rt0.c1) AND (x'07c3')) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c2))))AND((~ (rt0.c0))))) ORDER BY ((((((rt0.c1)AND('-900349353')))OR(rt0.c0))) NOT BETWEEN (rt0.c1) AND (x'07c3')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0))<=((rt0.c2))))AND((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)AND('-900349353')))OR(rt0.c0))) NOT BETWEEN (rt0.c1) AND (x'07c3')) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c0))<=((rt0.c2))))AND((~ (rt0.c0))))) ORDER BY ((((((rt0.c1)AND('-900349353')))OR(rt0.c0))) NOT BETWEEN (rt0.c1) AND (x'07c3')) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (LENGTH(rt0.c2)) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (LENGTH(rt0.c2)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (LENGTH(rt0.c2)) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (LENGTH(rt0.c2)) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (LENGTH(rt0.c2)) AND ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN TIME(rt0.c1, rt0.c2, rt0.c1) THEN ((rt0.c0) IS TRUE) END) ORDER BY CAST(' WyAN' AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN TIME(rt0.c1, rt0.c2, rt0.c1) THEN ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(' WyAN' AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN TIME(rt0.c1, rt0.c2, rt0.c1) THEN ((rt0.c0) IS TRUE) END) ORDER BY CAST(' WyAN' AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN TIME(rt0.c1, rt0.c2, rt0.c1) THEN ((rt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(' WyAN' AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (NOT (rt0.c0)) THEN x'' WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c0 WHEN TIME(rt0.c1, rt0.c2, rt0.c1) THEN ((rt0.c0) IS TRUE) END) ORDER BY CAST(' WyAN' AS TEXT);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c0) AND (CAST(rt0.c1 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)>=(rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((rt0.c1))>(('Z\\3e&nD'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>=(rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((rt0.c1))>(('Z\\3e&nD')))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)>=(rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((rt0.c1))>(('Z\\3e&nD'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)>=(rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((rt0.c1))>(('Z\\3e&nD')))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c1)>=(rt0.c2)))OR(UNLIKELY(DISTINCT vt0.c0))))AND((((rt0.c1))>(('Z\\3e&nD'))))));
SELECT ALL * FROM rt0, vt0 WHERE (CAST('1339530653' AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1339530653' AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST('1339530653' AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1339530653' AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST('1339530653' AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)LIKE(vt0.c0))) ORDER BY ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1)+(rt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (json_object('-241142488', ((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_object('-241142488', ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1)+(rt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1)+(rt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (json_object('-241142488', ((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_object('-241142488', ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1)+(rt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1)+(rt0.c2)))OR((vt0.c0 IN (vt0.c0)))))AND(rt0.c0 COLLATE RTRIM)) WHERE (json_object('-241142488', ((rt0.c2) IS FALSE)));
SELECT * FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END)));
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL)) NOT BETWEEN ((((0.4006861742699851)<=('o[B')), (vt0.c0 IN (vt0.c0, rt0.c0)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0)+(rt0.c2)), (NOT (rt0.c1)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, NULL)) NOT BETWEEN ((((0.4006861742699851)<=('o[B')), (vt0.c0 IN (vt0.c0, rt0.c0)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0)+(rt0.c2)), (NOT (rt0.c1)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL)) NOT BETWEEN ((((0.4006861742699851)<=('o[B')), (vt0.c0 IN (vt0.c0, rt0.c0)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0)+(rt0.c2)), (NOT (rt0.c1)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt0.c2, NULL)) NOT BETWEEN ((((0.4006861742699851)<=('o[B')), (vt0.c0 IN (vt0.c0, rt0.c0)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0)+(rt0.c2)), (NOT (rt0.c1)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0, rt0.c2, NULL)) NOT BETWEEN ((((0.4006861742699851)<=('o[B')), (vt0.c0 IN (vt0.c0, rt0.c0)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0)+(rt0.c2)), (NOT (rt0.c1)), (rt0.c1 IN ())))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((TRIM(vt0.c0, 'cF屒\rQf勒jK')) NOT BETWEEN (CASE 403287961  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((TRIM(vt0.c0, 'cF屒\rQf勒jK')) NOT BETWEEN (CASE 403287961  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((TRIM(vt0.c0, 'cF屒\rQf勒jK')) NOT BETWEEN (CASE 403287961  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)GLOB(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((TRIM(vt0.c0, 'cF屒\rQf勒jK')) NOT BETWEEN (CASE 403287961  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)GLOB(vt0.c0)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((vt0.c0 IN ())))) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC, ((((((vt0.c0) IS TRUE))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, ((TRIM(vt0.c0, 'cF屒\rQf勒jK')) NOT BETWEEN (CASE 403287961  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c0)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c0)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c0)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c0)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c2)AND(rt0.c0)))) AND ((((rt0.c0)IS(rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0xffffffffd613e4bf) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN '1029733109' WHEN NULL THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd613e4bf) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN '1029733109' WHEN NULL THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0xffffffffd613e4bf) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN '1029733109' WHEN NULL THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffffd613e4bf) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN '1029733109' WHEN NULL THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (0xffffffffd613e4bf) ORDER BY ((((CAST(vt0.c0 AS REAL))OR(vt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN '1029733109' WHEN NULL THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0)<<(NULL)), ((vt0.c0)%('-724866709'))));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0)<<(NULL)), ((vt0.c0)%('-724866709')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0)<<(NULL)), ((vt0.c0)%('-724866709'))));
SELECT SUM(count) FROM (SELECT ((LIKE(((vt0.c0)<<(NULL)), ((vt0.c0)%('-724866709')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKE(((vt0.c0)<<(NULL)), ((vt0.c0)%('-724866709'))));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((~ (x'6e96'))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND ('W>'));
SELECT SUM(count) FROM (SELECT ALL (((~ (x'6e96'))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND ('W>')));
SELECT ALL * FROM vt0 WHERE ((~ (x'6e96'))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND ('W>'));
SELECT SUM(count) FROM (SELECT ALL (((~ (x'6e96'))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND ('W>')));
SELECT ALL * FROM vt0 WHERE ((~ (x'6e96'))) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)&(vt0.c0))) AND ('W>'));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)>(vt0.c0))))) ORDER BY ((('Fk60', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE, vt0.c0  NULLS LAST, 1448294331  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('Fk60', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE, vt0.c0  NULLS LAST, 1448294331  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)>(vt0.c0))))) ORDER BY ((('Fk60', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE, vt0.c0  NULLS LAST, 1448294331  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((('Fk60', vt0.c0, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) COLLATE NOCASE, vt0.c0  NULLS LAST, 1448294331  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2)));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((NULL)OR(rt0.c1)))OR(0.3699893856522478)))))AND(x'')))OR(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0)|(NULL))))) ORDER BY (((NOT (rt0.c0))) BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((NULL)OR(rt0.c1)))OR(0.3699893856522478)))))AND(x'')))OR(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0)|(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((NULL)OR(rt0.c1)))OR(0.3699893856522478)))))AND(x'')))OR(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0)|(NULL))))) ORDER BY (((NOT (rt0.c0))) BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((NULL)OR(rt0.c1)))OR(0.3699893856522478)))))AND(x'')))OR(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0)|(NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))OR(((((NULL)OR(rt0.c1)))OR(0.3699893856522478)))))AND(x'')))OR(((rt0.c1)%(rt0.c2)))))AND(((rt0.c0)|(NULL))))) ORDER BY (((NOT (rt0.c0))) BETWEEN (rt0.c2) AND (CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<=(rt0.c1)))==(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(rt0.c1)))==(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<=(rt0.c1)))==(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(rt0.c1)))==(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)<=(rt0.c1)))==(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((((rt0.c2)OR(vt0.c0)))AND(rt0.c0)))OR((rt0.c1 IN ()))))AND(((vt0.c0) IS FALSE))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN ())) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN json_remove(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN json_remove(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN ())) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN json_remove(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN json_remove(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)<>(vt0.c0)) IN ())) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN json_remove(vt0.c0, vt0.c0) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((UPPER(vt0.c0))OR(((vt0.c0)-(vt0.c0)))))AND('')) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((UPPER(vt0.c0))OR(((vt0.c0)-(vt0.c0)))))AND('')) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((UPPER(vt0.c0))OR(((vt0.c0)-(vt0.c0)))))AND('')) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((UPPER(vt0.c0))OR(((vt0.c0)-(vt0.c0)))))AND('')) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((UPPER(vt0.c0))OR(((vt0.c0)-(vt0.c0)))))AND('')) ASC;
SELECT ALL * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c0))-(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c0))-(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c0))-(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c0))-(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((LIKELY(DISTINCT rt0.c0))-(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (((('籱|<씢!>KO')AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((('籱|<씢!>KO')AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (((('籱|<씢!>KO')AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((('籱|<씢!>KO')AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL) COLLATE RTRIM) ORDER BY (((('籱|<씢!>KO')AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE ASC;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) ISNULL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0) ISNULL)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2, rt0.c0, rt0.c1))=((NULL, vt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2, rt0.c0, rt0.c1))==((NULL, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2, rt0.c0, rt0.c1))=((NULL, vt0.c0, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2, rt0.c0, rt0.c1))==((NULL, vt0.c0, rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2, rt0.c0, rt0.c1))=((NULL, vt0.c0, rt0.c0))))));
SELECT * FROM rt0 WHERE (COALESCE('67611412', rt0.c2 COLLATE NOCASE, ((rt0.c1)>>(rt0.c2)), '-1827722649'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('67611412', rt0.c2 COLLATE NOCASE, ((rt0.c1)>>(rt0.c2)), '-1827722649')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE('67611412', rt0.c2 COLLATE NOCASE, ((rt0.c1)>>(rt0.c2)), '-1827722649'));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE('67611412', rt0.c2 COLLATE NOCASE, ((rt0.c1)>>(rt0.c2)), '-1827722649')) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE('67611412', rt0.c2 COLLATE NOCASE, ((rt0.c1)>>(rt0.c2)), '-1827722649'));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) DESC, '';
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) DESC, '');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) DESC, '';
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) DESC, '');
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY ((((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))) IS FALSE) DESC, '';
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN rt0.c2 WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))>((rt0.c1))) WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN load_extension(rt0.c0) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN rt0.c2 WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))>((rt0.c1))) WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN load_extension(rt0.c0) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN rt0.c2 WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))>((rt0.c1))) WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN load_extension(rt0.c0) ELSE (~ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN TOTAL_CHANGES() THEN rt0.c2 WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))>((rt0.c1))) WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN load_extension(rt0.c0) ELSE (~ (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED, vt0 WHERE (CASE WHEN TOTAL_CHANGES() THEN rt0.c2 WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN (((vt0.c0))>((rt0.c1))) WHEN (vt0.c0 IN (vt0.c0, rt0.c1)) THEN load_extension(rt0.c0) ELSE (~ (rt0.c1)) END);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(rt0.c2 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE ((NULL)OR(vt0.c0)) END) ORDER BY (((('飊Mcw\[ ')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE ((NULL)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('飊Mcw\[ ')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE ((NULL)OR(vt0.c0)) END) ORDER BY (((('飊Mcw\[ ')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE ((NULL)OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((('飊Mcw\[ ')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS BLOB) ELSE ((NULL)OR(vt0.c0)) END) ORDER BY (((('飊Mcw\[ ')OR((('') NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)IS NOT(vt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('BM?iwd_') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('BM?iwd_') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('BM?iwd_') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (('BM?iwd_') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (('BM?iwd_') BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((~ (rt0.c2))) IS FALSE)) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN ((50831402 IN ())) AND (JULIANDAY('tT>0~Q', rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)))) ORDER BY LIKELY((('-1827722649')OR(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) NOT BETWEEN ((50831402 IN ())) AND (JULIANDAY('tT>0~Q', rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY((('-1827722649')OR(rt0.c2))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN ((50831402 IN ())) AND (JULIANDAY('tT>0~Q', rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)))) ORDER BY LIKELY((('-1827722649')OR(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) NOT BETWEEN ((50831402 IN ())) AND (JULIANDAY('tT>0~Q', rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY((('-1827722649')OR(rt0.c2))) ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) NOT BETWEEN ((50831402 IN ())) AND (JULIANDAY('tT>0~Q', rt0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c1, rt0.c0)))) ORDER BY LIKELY((('-1827722649')OR(rt0.c2))) ASC;
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT ALL * FROM vt0 WHERE ((NOT ((NOT (vt0.c0))))) ORDER BY NULL ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR('')))OR(((rt0.c0) NOTNULL))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR('')))OR(((rt0.c0) NOTNULL))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR('')))OR(((rt0.c0) NOTNULL))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c2)))OR('')))OR(((rt0.c0) NOTNULL))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((+ (rt0.c2)))OR('')))OR(((rt0.c0) NOTNULL))))OR(((rt0.c0) IS TRUE))))AND(((rt0.c0)%(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c2)))AND(((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c2)))AND(((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((((rt0.c1)*(rt0.c2)))AND(((rt0.c2) BETWEEN (NULL) AND (rt0.c1)))))OR(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (x'' IN (rt0.c2, rt0.c1)) THEN (NULL IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) ELSE (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (x'' IN (rt0.c2, rt0.c1)) THEN (NULL IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (x'' IN (rt0.c2, rt0.c1)) THEN (NULL IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) ELSE (- (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (x'' IN (rt0.c2, rt0.c1)) THEN (NULL IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) ELSE (- (rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN (x'' IN (rt0.c2, rt0.c1)) THEN (NULL IN ()) WHEN CAST(rt0.c0 AS REAL) THEN ((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))OR(vt0.c0)) ELSE (- (rt0.c1)) END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN -7.24866709E8 THEN rt0.c0 END)) AND (((- (vt0.c0))))) WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN -7.24866709E8 THEN rt0.c0 END)) AND (((- (vt0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN -7.24866709E8 THEN rt0.c0 END)) AND (((- (vt0.c0))))) WHERE ((rt0.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN -7.24866709E8 THEN rt0.c0 END)) AND (((- (vt0.c0))))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN NULL WHEN rt0.c2 THEN vt0.c0 WHEN -7.24866709E8 THEN rt0.c0 END)) AND (((- (vt0.c0))))) WHERE ((rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.39172486373722726)OR(rt0.c2)))OR(rt0.c1)))<>(((vt0.c0)<>(rt0.c2))))) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, (((+ (rt0.c0)))>((NOT (vt0.c0)))) ASC  NULLS FIRST, (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.39172486373722726)OR(rt0.c2)))OR(rt0.c1)))!=(((vt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, (((+ (rt0.c0)))>((NOT (vt0.c0)))) ASC  NULLS FIRST, (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.39172486373722726)OR(rt0.c2)))OR(rt0.c1)))<>(((vt0.c0)<>(rt0.c2))))) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, (((+ (rt0.c0)))>((NOT (vt0.c0)))) ASC  NULLS FIRST, (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), CAST(rt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.39172486373722726)OR(rt0.c2)))OR(rt0.c1)))!=(((vt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, (((+ (rt0.c0)))>((NOT (vt0.c0)))) ASC  NULLS FIRST, (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), CAST(rt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((0.39172486373722726)OR(rt0.c2)))OR(rt0.c1)))<>(((vt0.c0)<>(rt0.c2))))) ORDER BY (+ ((rt0.c1 IN ()))) ASC  NULLS LAST, (((+ (rt0.c0)))>((NOT (vt0.c0)))) ASC  NULLS FIRST, (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c0 END IN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)), CAST(rt0.c0 AS REAL))) ASC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT NULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))>((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE NOCASE))>((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT NULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))>((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE NOCASE))>((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOT NULL)) ORDER BY (((rt0.c2 COLLATE NOCASE))>((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))OR(NULL)))AND(rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END WHEN CAST(rt0.c0 AS REAL) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END WHEN CAST(rt0.c0 AS REAL) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END WHEN CAST(rt0.c0 AS REAL) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END WHEN CAST(rt0.c0 AS REAL) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END WHEN CAST(rt0.c0 AS REAL) THEN NULL WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c2 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT * FROM rt0 WHERE (((((((NULL)AND(rt0.c1)))AND(rt0.c0)))<=(((rt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c1)))AND(rt0.c0)))<=(((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (((((((NULL)AND(rt0.c1)))AND(rt0.c0)))<=(((rt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(rt0.c1)))AND(rt0.c0)))<=(((rt0.c0)<=(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT * FROM rt0 WHERE (((((((NULL)AND(rt0.c1)))AND(rt0.c0)))<=(((rt0.c0)<=(rt0.c2))))) ORDER BY rt0.c0;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (TRIM(vt0.c0, rt0.c2) IN ()) WHERE (((((vt0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (TRIM(vt0.c0, rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (TRIM(vt0.c0, rt0.c2) IN ()) WHERE (((((vt0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (TRIM(vt0.c0, rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (TRIM(vt0.c0, rt0.c2) IN ()) WHERE (((((vt0.c0 COLLATE NOCASE)OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1, vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY DATE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((NULL)OR(vt0.c0)))OR(vt0.c0))), ((CASE WHEN 0.28308851938539514 THEN vt0.c0 END)>(((vt0.c0)|(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY DATE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((NULL)OR(vt0.c0)))OR(vt0.c0))), ((CASE WHEN 0.28308851938539514 THEN vt0.c0 END)>(((vt0.c0)|(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY DATE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((NULL)OR(vt0.c0)))OR(vt0.c0))), ((CASE WHEN 0.28308851938539514 THEN vt0.c0 END)>(((vt0.c0)|(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY DATE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((NULL)OR(vt0.c0)))OR(vt0.c0))), ((CASE WHEN 0.28308851938539514 THEN vt0.c0 END)>(((vt0.c0)|(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY DATE(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), vt0.c0 COLLATE NOCASE, ((((NULL)OR(vt0.c0)))OR(vt0.c0))), ((CASE WHEN 0.28308851938539514 THEN vt0.c0 END)>(((vt0.c0)|(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)<=(vt0.c0))) ORDER BY (NOT (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c1 END)<=(vt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (NOT (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)<=(vt0.c0))) ORDER BY (NOT (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c1 END)<=(vt0.c0))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (NOT (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c1 END)<=(vt0.c0))) ORDER BY (NOT (((((vt0.c0)AND(rt0.c2)))AND(rt0.c2))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)OR('-1792345435')))AND(rt0.c1)) COLLATE RTRIM ASC, LIKELIHOOD(DISTINCT ((rt0.c1)==(vt0.c0)), 0.42460876825235916) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)OR('-1792345435')))AND(rt0.c1)) COLLATE RTRIM ASC, LIKELIHOOD(DISTINCT ((rt0.c1)==(vt0.c0)), 0.42460876825235916) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)OR('-1792345435')))AND(rt0.c1)) COLLATE RTRIM ASC, LIKELIHOOD(DISTINCT ((rt0.c1)==(vt0.c0)), 0.42460876825235916) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)OR('-1792345435')))AND(rt0.c1)) COLLATE RTRIM ASC, LIKELIHOOD(DISTINCT ((rt0.c1)==(vt0.c0)), 0.42460876825235916) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c2)OR('-1792345435')))AND(rt0.c1)) COLLATE RTRIM ASC, LIKELIHOOD(DISTINCT ((rt0.c1)==(vt0.c0)), 0.42460876825235916) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((-650014621) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((-650014621) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((-650014621) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((-650014621) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((-650014621) NOT NULL));
SELECT * FROM vt0 WHERE (((((0X5e5c42c1) ISNULL))!=(CAST('-1404821080' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((0X5e5c42c1) ISNULL))<>(CAST('-1404821080' AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0X5e5c42c1) ISNULL))!=(CAST('-1404821080' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((0X5e5c42c1) ISNULL))<>(CAST('-1404821080' AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((0X5e5c42c1) ISNULL))!=(CAST('-1404821080' AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN NULL END)+(0.3133129808946227))) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c0)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN NULL END)+(0.3133129808946227))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c0)AND(rt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN NULL END)+(0.3133129808946227))) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c0)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN NULL END)+(0.3133129808946227))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c0)AND(rt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN NULL END)+(0.3133129808946227))) ORDER BY CASE WHEN CASE rt0.c2  WHEN rt0.c1 THEN '' END THEN ((rt0.c0)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(((rt0.c1)<=(rt0.c2)))) ORDER BY HEX(((rt0.c2) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c1)<=(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(((rt0.c2) NOT NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(((rt0.c1)<=(rt0.c2)))) ORDER BY HEX(((rt0.c2) NOT NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c1)<=(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY HEX(((rt0.c2) NOT NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (TYPEOF(((rt0.c1)<=(rt0.c2)))) ORDER BY HEX(((rt0.c2) NOT NULL))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY CASE json_array(rt0.c1, rt0.c0, rt0.c0, rt0.c2)  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE json_array(rt0.c1, rt0.c0, rt0.c0, rt0.c2)  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY CASE json_array(rt0.c1, rt0.c0, rt0.c0, rt0.c2)  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CASE json_array(rt0.c1, rt0.c0, rt0.c0, rt0.c2)  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c0)OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c1)))))AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ())))) ORDER BY CASE json_array(rt0.c1, rt0.c0, rt0.c0, rt0.c2)  WHEN rt0.c1 COLLATE BINARY THEN CASE rt0.c0  WHEN x'' THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END END  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c1))!=(('0.3133129808946227'))))) AND ((-1.3767336E9)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c1))!=(('0.3133129808946227'))))) AND ((-1.3767336E9)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c1))!=(('0.3133129808946227'))))) AND ((-1.3767336E9)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c1))!=(('0.3133129808946227'))))) AND ((-1.3767336E9)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c1))!=(('0.3133129808946227'))))) AND ((-1.3767336E9)))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))IS NOT((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))IS NOT((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))IS NOT((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))IS NOT((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))IS NOT((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)>=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)>=(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)>=(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF((NOT (rt0.c1)), rt0.c2)) ORDER BY CAST(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) AS REAL) ASC, ((vt0.c0)<=(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((NOT (rt0.c1)), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) AS REAL) ASC, ((vt0.c0)<=(rt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF((NOT (rt0.c1)), rt0.c2)) ORDER BY CAST(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) AS REAL) ASC, ((vt0.c0)<=(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((NOT (rt0.c1)), rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) AS REAL) ASC, ((vt0.c0)<=(rt0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULLIF((NOT (rt0.c1)), rt0.c2)) ORDER BY CAST(((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) AS REAL) ASC, ((vt0.c0)<=(rt0.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((rt0.c0) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)+(((rt0.c0)>>(vt0.c0)))) WHERE (((rt0.c2 COLLATE NOCASE)*(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)*(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)+(((rt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)+(((rt0.c0)>>(vt0.c0)))) WHERE (((rt0.c2 COLLATE NOCASE)*(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)*(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)+(((rt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM)+(((rt0.c0)>>(vt0.c0)))) WHERE (((rt0.c2 COLLATE NOCASE)*(((((vt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.1859896577930129);
SELECT SUM(count) FROM (SELECT ((0.1859896577930129) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.1859896577930129);
SELECT SUM(count) FROM (SELECT ((0.1859896577930129) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.1859896577930129);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS BLOB)) ORDER BY rtreenode(rt0.c1, rt0.c0) COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC))||(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(rt0.c1, rt0.c0) COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC))||(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS BLOB)) ORDER BY rtreenode(rt0.c1, rt0.c0) COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC))||(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS NOT(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rtreenode(rt0.c1, rt0.c0) COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC))||(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)IS NOT(rt0.c0)) AS BLOB)) ORDER BY rtreenode(rt0.c1, rt0.c0) COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c1 AS NUMERIC))||(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c0) NOTNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote(CAST(vt0.c0 AS TEXT))) ORDER BY (((NOT (rt0.c1)))>(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c1)))>(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote(CAST(vt0.c0 AS TEXT))) ORDER BY (((NOT (rt0.c1)))>(rt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (rt0.c1)))>(rt0.c1)) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (json_quote(CAST(vt0.c0 AS TEXT))) ORDER BY (((NOT (rt0.c1)))>(rt0.c1)) DESC;
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TOTAL_CHANGES());
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON (~ (rt0.c0)) COLLATE NOCASE WHERE ((((((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-462013981') NOTNULL)))<>((vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-462013981') NOTNULL)))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-462013981') NOTNULL)))<>((vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('-462013981') NOTNULL)))<>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-462013981') NOTNULL)))<>((vt0.c0)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((('-900349353') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-900349353') IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('-900349353') IS FALSE));
SELECT SUM(count) FROM (SELECT (((('-900349353') IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('-900349353') IS FALSE));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((rt0.c0 IN ())) ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((rt0.c0 IN ())) ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (CAST(rt0.c2 AS NUMERIC) IN ()) WHERE ((rt0.c0 IN ())) ORDER BY (NOT (CAST(rt0.c2 AS INTEGER))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c1 IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (('Vc?cכg}X') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('Vc?cכg}X') IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (('Vc?cכg}X') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (('Vc?cכg}X') IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)-(rt0.c0))) ISNULL)) ORDER BY (('Vc?cכg}X') IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2))!=((vt0.c0))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<>((vt0.c0))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2))!=((vt0.c0))) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<>((vt0.c0))) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2))!=((vt0.c0))) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (+ (-2027155354))  WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (-2027155354))  WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (+ (-2027155354))  WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (-2027155354))  WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) NOT NULL) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE (+ (-2027155354))  WHEN ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)) THEN vt0.c0 ELSE ((rt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT * FROM vt0 NOT INDEXED WHERE ((+ (x''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE ((+ (x''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED WHERE ((+ (x''))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c2)) NOT BETWEEN ((x'')) AND ((rt0.c2))) COLLATE BINARY;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(0.3916590538720056 AS TEXT)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0) ISNULL))AND((('-136432398')||(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((0.5047188769886599 IN (rt0.c1)))OR(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((0.9693830208434623)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.3916590538720056 AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0) ISNULL))AND((('-136432398')||(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((0.5047188769886599 IN (rt0.c1)))OR(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((0.9693830208434623)) AND ((vt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(0.3916590538720056 AS TEXT)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0) ISNULL))AND((('-136432398')||(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((0.5047188769886599 IN (rt0.c1)))OR(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((0.9693830208434623)) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(0.3916590538720056 AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0) ISNULL))AND((('-136432398')||(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((0.5047188769886599 IN (rt0.c1)))OR(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((0.9693830208434623)) AND ((vt0.c0))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(0.3916590538720056 AS TEXT)) ORDER BY CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((((vt0.c0) ISNULL))AND((('-136432398')||(rt0.c2)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)) DESC  NULLS LAST, (((((0.5047188769886599 IN (rt0.c1)))OR(rt0.c0)))AND((((rt0.c0)) NOT BETWEEN ((0.9693830208434623)) AND ((vt0.c0))))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt0.c2)<(vt0.c0)))IS((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt0.c2)<(vt0.c0)))IS((~ (rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt0.c2)<(vt0.c0)))IS((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt0.c2)<(vt0.c0)))IS((~ (rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0) IS TRUE) IN ())  NULLS LAST, ((((rt0.c2)<(vt0.c0)))IS((~ (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((5.0831402E7)==(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((5.0831402E7)==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((5.0831402E7)==(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((5.0831402E7)==(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((5.0831402E7)==(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOTNULL)) IS TRUE)  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) IS TRUE)  NULLS LAST, rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOTNULL)) IS TRUE)  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOTNULL)) IS TRUE)  NULLS LAST, rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL)) ORDER BY ((((rt0.c2) NOTNULL)) IS TRUE)  NULLS LAST, rt0.c0;
SELECT ALL * FROM rt0 WHERE (COALESCE(((((rt0.c2)OR(NULL)))AND(rt0.c0)), (((rt0.c2))>=((rt0.c2))))) ORDER BY ((rt0.c1)==(rt0.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt0.c2)OR(NULL)))AND(rt0.c0)), (((rt0.c2))>=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)==(rt0.c1)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (COALESCE(((((rt0.c2)OR(NULL)))AND(rt0.c0)), (((rt0.c2))>=((rt0.c2))))) ORDER BY ((rt0.c1)==(rt0.c1)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((rt0.c2)OR(NULL)))AND(rt0.c0)), (((rt0.c2))>=((rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)==(rt0.c1)) COLLATE BINARY ASC);
SELECT ALL * FROM rt0 WHERE (COALESCE(((((rt0.c2)OR(NULL)))AND(rt0.c0)), (((rt0.c2))>=((rt0.c2))))) ORDER BY ((rt0.c1)==(rt0.c1)) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST, ((0x46b61f7d) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (json_quote(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST, ((0x46b61f7d) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (json_quote(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST, ((0x46b61f7d) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (json_quote(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST, ((0x46b61f7d) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (json_quote(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY CAST((vt0.c0 IN ()) AS TEXT)  NULLS LAST, ((0x46b61f7d) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND (json_quote(vt0.c0)))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((TRIM(vt0.c0))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((TRIM(vt0.c0))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt0.c0))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((TRIM(vt0.c0))>>(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)==(NULL)) THEN load_extension(rt0.c2, rt0.c1) WHEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.0945180194962636)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)=(NULL)) THEN load_extension(rt0.c2, rt0.c1) WHEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.0945180194962636)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)==(NULL)) THEN load_extension(rt0.c2, rt0.c1) WHEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.0945180194962636)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)=(NULL)) THEN load_extension(rt0.c2, rt0.c1) WHEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.0945180194962636)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)==(NULL)) THEN load_extension(rt0.c2, rt0.c1) WHEN (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c1))) THEN (rt0.c1 IN ()) WHEN rt0.c0 COLLATE NOCASE THEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.0945180194962636)) END);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, CAST(rt0.c2 AS TEXT) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, CAST(rt0.c2 AS TEXT) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, CAST(rt0.c2 AS TEXT) COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY NULL ASC, CAST(rt0.c2 AS TEXT) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY NULL ASC, CAST(rt0.c2 AS TEXT) COLLATE RTRIM COLLATE NOCASE;
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY json_quote(UNLIKELY(DISTINCT vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY json_quote(UNLIKELY(DISTINCT vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY json_quote(UNLIKELY(DISTINCT vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY json_quote(UNLIKELY(DISTINCT vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY json_quote(UNLIKELY(DISTINCT vt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)!=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)!=((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)!=((rt0.c1 IN ()))));
SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((vt0.c0)<(rt0.c2)), ((vt0.c0)>(rt0.c1)), ''))=((((0.20271771762913982)-(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)<(rt0.c2)), ((vt0.c0)>(rt0.c1)), ''))=((((0.20271771762913982)-(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), vt0.c0))));
SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((vt0.c0)<(rt0.c2)), ((vt0.c0)>(rt0.c1)), ''))=((((0.20271771762913982)-(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0)<(rt0.c2)), ((vt0.c0)>(rt0.c1)), ''))=((((0.20271771762913982)-(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), vt0.c0))));
SELECT * FROM rt0, vt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((vt0.c0)<(rt0.c2)), ((vt0.c0)>(rt0.c1)), ''))=((((0.20271771762913982)-(rt0.c2)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)), vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND ('W>'))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND ('W>'))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND ('W>'))) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND ('W>'))) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)OR(vt0.c0))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND ('W>'))) ISNULL) DESC  NULLS FIRST;
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c2) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c2) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (rt0.c2) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 END AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)|('')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)|(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)|('')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)|(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY)|('')));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)IS(vt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0)IS(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<=(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)<=(rt0.c0)) COLLATE NOCASE) ORDER BY ((rt0.c0 COLLATE RTRIM)AND(rt0.c1 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (+ (vt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (+ (vt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (+ (vt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (+ (vt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(DISTINCT (+ (vt0.c0)), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (x'')), (+ (rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.6508460572384966)<(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.6508460572384966)<(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.6508460572384966)<(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((0.6508460572384966)<(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.6508460572384966)<(rt0.c2)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS TEXT)) ORDER BY 'cF屒\rQf勒jK' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY 'cF屒\rQf勒jK' ASC);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS TEXT)) ORDER BY 'cF屒\rQf勒jK' ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_valid(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY 'cF屒\rQf勒jK' ASC);
SELECT * FROM vt0 WHERE (CAST(json_valid(vt0.c0) AS TEXT)) ORDER BY 'cF屒\rQf勒jK' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.12050767262700157) IS TRUE))<<(ROUND(x'704b', vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((0.12050767262700157) IS TRUE))<<(ROUND(x'704b', vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.12050767262700157) IS TRUE))<<(ROUND(x'704b', vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((0.12050767262700157) IS TRUE))<<(ROUND(x'704b', vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.12050767262700157) IS TRUE))<<(ROUND(x'704b', vt0.c0))));
SELECT * FROM rt0, vt0 WHERE (LIKELY(json_extract(vt0.c0, x'')));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(json_extract(vt0.c0, x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKELY(json_extract(vt0.c0, x'')));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(json_extract(vt0.c0, x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (LIKELY(json_extract(vt0.c0, x'')));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY rt0.c2, ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(json_patch(rt0.c0, rt0.c2))))OR(('' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c2, ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(json_patch(rt0.c0, rt0.c2))))OR(('' IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY rt0.c2, ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(json_patch(rt0.c0, rt0.c2))))OR(('' IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY rt0.c2, ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(json_patch(rt0.c0, rt0.c2))))OR(('' IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (NULL) ORDER BY rt0.c2, ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)))OR(json_patch(rt0.c0, rt0.c2))))OR(('' IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR('1356771706')))AND(((0Xffffffffe5bab253) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS TRUE))))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR('1356771706')))AND(((0Xffffffffe5bab253) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS TRUE))))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR('1356771706')))AND(((0Xffffffffe5bab253) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS TRUE))))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR('1356771706')))AND(((0Xffffffffe5bab253) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS TRUE))))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))OR('1356771706')))AND(((0Xffffffffe5bab253) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1) IS TRUE))))OR(CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c0 IN ()))AND(ABS(DISTINCT rt0.c0))))OR((rt0.c0 IN ()))))AND(((rt0.c1)>>(vt0.c0)))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))AND(ABS(DISTINCT rt0.c0))))OR((rt0.c0 IN ()))))AND(((rt0.c1)>>(vt0.c0)))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c0 IN ()))AND(ABS(DISTINCT rt0.c0))))OR((rt0.c0 IN ()))))AND(((rt0.c1)>>(vt0.c0)))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c0 IN ()))AND(ABS(DISTINCT rt0.c0))))OR((rt0.c0 IN ()))))AND(((rt0.c1)>>(vt0.c0)))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((((((rt0.c0 IN ()))AND(ABS(DISTINCT rt0.c0))))OR((rt0.c0 IN ()))))AND(((rt0.c1)>>(vt0.c0)))))OR(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((TOTAL_CHANGES())<>((~ ('b'))))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())!=((~ ('b'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((TOTAL_CHANGES())<>((~ ('b'))))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TOTAL_CHANGES())!=((~ ('b'))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((TOTAL_CHANGES())<>((~ ('b'))))) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(((vt0.c0)<=(vt0.c0)))))OR(NULL)) DESC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) WHERE ((~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(CASE rt0.c0  WHEN '-575922945' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC), ((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) ORDER BY CAST(CASE rt0.c0  WHEN '-575922945' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC), ((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) IN ()) DESC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) WHERE ((~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(CASE rt0.c0  WHEN '-575922945' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC), ((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) ORDER BY CAST(CASE rt0.c0  WHEN '-575922945' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC), ((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) IN ()) DESC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CAST(CAST(rt0.c0 AS INTEGER) AS BLOB) WHERE ((~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY CAST(CASE rt0.c0  WHEN '-575922945' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC), ((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) IN ()) DESC;
SELECT * FROM rt0 WHERE ((~ (CAST(0.0999215117118093 AS INTEGER)))) ORDER BY ((rt0.c0)LIKE((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.0999215117118093 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)LIKE((~ (rt0.c0)))));
SELECT * FROM rt0 WHERE ((~ (CAST(0.0999215117118093 AS INTEGER)))) ORDER BY ((rt0.c0)LIKE((~ (rt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(0.0999215117118093 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)LIKE((~ (rt0.c0)))));
SELECT * FROM rt0 WHERE ((~ (CAST(0.0999215117118093 AS INTEGER)))) ORDER BY ((rt0.c0)LIKE((~ (rt0.c0))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))>>(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))>>(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '/' ELSE 0.3133129808946227 END)<>(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '/' ELSE 0.3133129808946227 END)<>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '/' ELSE 0.3133129808946227 END)<>(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '/' ELSE 0.3133129808946227 END)<>(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN '/' ELSE 0.3133129808946227 END)<>(CAST(rt0.c2 AS BLOB)))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((('-1612053029' IN ())) IS TRUE)) ORDER BY CAST(COALESCE(DISTINCT rt0.c2, rt0.c1) AS REAL) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1612053029' IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(COALESCE(DISTINCT rt0.c2, rt0.c1) AS REAL) DESC  NULLS LAST, vt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((('-1612053029' IN ())) IS TRUE)) ORDER BY CAST(COALESCE(DISTINCT rt0.c2, rt0.c1) AS REAL) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-1612053029' IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(COALESCE(DISTINCT rt0.c2, rt0.c1) AS REAL) DESC  NULLS LAST, vt0.c0 ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((('-1612053029' IN ())) IS TRUE)) ORDER BY CAST(COALESCE(DISTINCT rt0.c2, rt0.c1) AS REAL) DESC  NULLS LAST, vt0.c0 ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY CAST(((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)))>=((((rt0.c2))>=((rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS FALSE) AS NUMERIC), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE 0xffffffffcdceb755  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY)) AND ((0.4999072480624741, ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)), LOWER(rt0.c2)))), (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR('[]')))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))OR(((((((((x'94fc')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)))>=((((rt0.c2))>=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1) IS FALSE) AS NUMERIC), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE 0Xffffffffcdceb755  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY)) AND ((0.4999072480624741, ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)), LOWER(rt0.c2)))), (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR('[]')))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))OR(((((((((x'94fc')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)))>=((((rt0.c2))>=((rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS FALSE) AS NUMERIC), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE 0xffffffffcdceb755  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY)) AND ((0.4999072480624741, ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)), LOWER(rt0.c2)))), (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR('[]')))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))OR(((((((((x'94fc')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)))>=((((rt0.c2))>=((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c1) IS FALSE) AS NUMERIC), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE 0Xffffffffcdceb755  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY)) AND ((0.4999072480624741, ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)), LOWER(rt0.c2)))), (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR('[]')))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))OR(((((((((x'94fc')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))AND(vt0.c0)))>=((((rt0.c2))>=((rt0.c1)))))) ORDER BY CAST(((rt0.c1) IS FALSE) AS NUMERIC), (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((CASE 0xffffffffcdceb755  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, vt0.c0 COLLATE RTRIM, rt0.c2 COLLATE BINARY)) AND ((0.4999072480624741, ((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)), LOWER(rt0.c2)))), (((((((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR('[]')))AND(((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(vt0.c0)))))OR(((((((((x'94fc')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)|(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)|(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)|(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)|(rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)|(rt0.c1)));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (1.652329834E9);
SELECT SUM(count) FROM (SELECT ALL ((1.652329834E9) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (1.652329834E9);
SELECT SUM(count) FROM (SELECT ALL ((1.652329834E9) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (1.652329834E9);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (TYPEOF(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ (TYPEOF(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (TYPEOF(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(x''))AND(((rt0.c0)OR(rt0.c0))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(x''))AND(((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(x''))AND(((rt0.c0)OR(rt0.c0))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(x''))AND(((rt0.c0)OR(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((TRIM(x''))AND(((rt0.c0)OR(rt0.c0))))) ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST, (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR('	,')))AND(vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR('	,')))AND(vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR('	,')))AND(vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR('	,')))AND(vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE NOCASE)AND(((((vt0.c0)OR('	,')))AND(vt0.c0)))))OR(((vt0.c0)||(vt0.c0))))) ORDER BY ((((vt0.c0) NOT NULL))GLOB(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST, (((rt0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, (((rt0.c0 IN ())) NOTNULL));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST, (((rt0.c0 IN ())) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST, (((rt0.c0 IN ())) NOTNULL));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c0  NULLS LAST, (((rt0.c0 IN ())) NOTNULL);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, 0.22868947547601226)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/((~ (''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, 0.22868947547601226)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/((~ (''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, 0.22868947547601226)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/((~ (''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, 0.22868947547601226)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/((~ (''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((((vt0.c0)<=(vt0.c0)), ((vt0.c0)>=(vt0.c0)), (vt0.c0 IN (vt0.c0)))) AND ((((vt0.c0) NOTNULL), vt0.c0 COLLATE BINARY, 0.22868947547601226)))) ORDER BY ((((vt0.c0)GLOB(vt0.c0)))/((~ (''))))  NULLS FIRST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))+(((rt0.c2)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))+(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))+(((rt0.c2)<<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))+(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))+(((rt0.c2)<<(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(vt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(vt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(vt0.c0 COLLATE BINARY))) ORDER BY NULL COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((- (json_type(rt0.c1)))) ORDER BY (((CAST(rt0.c0 AS REAL), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))>=(((rt0.c1 IN ('-136432398')), (+ (rt0.c0)), (((422932508))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_type(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS REAL), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))>=(((rt0.c1 IN ('-136432398')), (+ (rt0.c0)), (((422932508))>((rt0.c0)))))));
SELECT COUNT(*) FROM rt0 WHERE ((- (json_type(rt0.c1)))) ORDER BY (((CAST(rt0.c0 AS REAL), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))>=(((rt0.c1 IN ('-136432398')), (+ (rt0.c0)), (((422932508))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_type(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS REAL), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))>=(((rt0.c1 IN ('-136432398')), (+ (rt0.c0)), (((422932508))>((rt0.c0)))))));
SELECT COUNT(*) FROM rt0 WHERE ((- (json_type(rt0.c1)))) ORDER BY (((CAST(rt0.c0 AS REAL), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c2))))>=(((rt0.c1 IN ('-136432398')), (+ (rt0.c0)), (((422932508))>((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (NULL) AND ('1551052883'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (NULL) AND ('1551052883'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0))<((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (NULL) AND ('1551052883'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (NULL) AND ('1551052883'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0))<((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (NULL) AND ('1551052883'))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))) AND ((((rt0.c0))<((rt0.c2))))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 1530593489 WHERE (CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY x'4fc610fe' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 1530593489 ORDER BY x'4fc610fe' ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 1530593489 WHERE (CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY x'4fc610fe' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 1530593489 ORDER BY x'4fc610fe' ASC  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON 1530593489 WHERE (CASE WHEN ((rt0.c0)IS(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END) ORDER BY x'4fc610fe' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)>=(CAST(x'' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>=(CAST(x'' AS REAL))) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)>=(CAST(x'' AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)>=(CAST(x'' AS REAL))) DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c2)>=(CAST(x'' AS REAL))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c0)) WHEN ((NULL)+(-1584728993)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c0)) WHEN ((NULL)+(-1584728993)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c0)) WHEN ((NULL)+(-1584728993)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c0)) WHEN ((NULL)+(-1584728993)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((rt0.c2)OR(vt0.c0)))OR(rt0.c1)) WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c0 AS INTEGER) WHEN ((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN (~ (rt0.c0)) WHEN ((NULL)+(-1584728993)) THEN ((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(vt0.c0)) ELSE (rt0.c1 IN ()) END) ORDER BY rt0.c0;
SELECT ALL * FROM vt0, rt0 WHERE (((ABS(1947116289))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(1947116289))LIKE(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((ABS(1947116289))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(1947116289))LIKE(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((ABS(1947116289))LIKE(CAST(rt0.c2 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (UPPER(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (UPPER(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (UPPER(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((0.47979723233861793)) AND ((0.6498983020441882)))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((0.47979723233861793)) AND ((0.6498983020441882)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((0.47979723233861793)) AND ((0.6498983020441882)))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((0.47979723233861793)) AND ((0.6498983020441882)))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)+(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((0.47979723233861793)) AND ((0.6498983020441882)))))) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC;
SELECT * FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c2)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END)!=(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c2, rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END)!=(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c2)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END)!=(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c2, rt0.c2)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END)!=(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c2)) ISNULL)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c1 END)!=(rt0.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, vt0.c0)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((COALESCE(vt0.c0, vt0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (CAST(rt0.c1 AS BLOB))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c1, vt0.c0, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c1, vt0.c0, vt0.c0)))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c1, vt0.c0, vt0.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c1, vt0.c0, vt0.c0)))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0)>=(rt0.c2)) COLLATE NOCASE) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c0) NOTNULL))) AND (((((vt0.c0, vt0.c0, rt0.c0))>=((rt0.c1, vt0.c0, vt0.c0)))))) DESC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(HEX(vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(HEX(vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(HEX(vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(HEX(vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)*(vt0.c0)))OR(CAST(vt0.c0 AS TEXT))))OR(HEX(vt0.c0))))OR(((vt0.c0) NOTNULL))))AND(NULL)));
SELECT * FROM rt0 WHERE ((NOT ((((NULL))>=((rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(STRFTIME(rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(STRFTIME(rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((((NULL))>=((rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(STRFTIME(rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((NULL))>=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(STRFTIME(rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT ((((NULL))>=((rt0.c1)))))) ORDER BY ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c2 COLLATE BINARY)))AND(STRFTIME(rt0.c1, rt0.c2, rt0.c1, rt0.c1, rt0.c0))) DESC  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED);
SELECT * FROM vt0, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (NOT (rt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((NULL IN ()) IN ()));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) ISNULL) WHERE (json_extract(((vt0.c0) IS TRUE), -1714053322)) ORDER BY (~ (json_type(-4.40749485E8))), CAST((((rt0.c2, rt0.c1, rt0.c1))<>((vt0.c0, rt0.c2, vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((vt0.c0) IS TRUE), -1714053322)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) ISNULL) ORDER BY (~ (json_type(-4.40749485E8))), CAST((((rt0.c2, rt0.c1, rt0.c1))!=((vt0.c0, rt0.c2, vt0.c0))) AS BLOB));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) ISNULL) WHERE (json_extract(((vt0.c0) IS TRUE), -1714053322)) ORDER BY (~ (json_type(-4.40749485E8))), CAST((((rt0.c2, rt0.c1, rt0.c1))<>((vt0.c0, rt0.c2, vt0.c0))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((vt0.c0) IS TRUE), -1714053322)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) ISNULL) ORDER BY (~ (json_type(-4.40749485E8))), CAST((((rt0.c2, rt0.c1, rt0.c1))!=((vt0.c0, rt0.c2, vt0.c0))) AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(CAST(vt0.c0 AS TEXT), rt0.c2, CASE '(0JL),xA\n&'  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt0.c0 AS TEXT), rt0.c2, CASE '(0JL),xA\n&'  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(CAST(vt0.c0 AS TEXT), rt0.c2, CASE '(0JL),xA\n&'  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(vt0.c0 AS TEXT), rt0.c2, CASE '(0JL),xA\n&'  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(CAST(vt0.c0 AS TEXT), rt0.c2, CASE '(0JL),xA\n&'  WHEN rt0.c2 THEN rt0.c1 END, ((rt0.c2)>>(rt0.c1))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CASE rt0.c2  WHEN x'' THEN rt0.c2 END THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END WHEN CASE -1.792345435E9  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE ((((rt0.c1)AND(rt0.c0)))AND(NULL)) END) ORDER BY ((((NULL)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN CASE rt0.c2  WHEN x'' THEN rt0.c2 END THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END WHEN CASE -1.792345435E9  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE ((((rt0.c1)AND(rt0.c0)))AND(NULL)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CASE rt0.c2  WHEN x'' THEN rt0.c2 END THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END WHEN CASE -1.792345435E9  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE ((((rt0.c1)AND(rt0.c0)))AND(NULL)) END) ORDER BY ((((NULL)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN CASE rt0.c2  WHEN x'' THEN rt0.c2 END THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END WHEN CASE -1.792345435E9  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE ((((rt0.c1)AND(rt0.c0)))AND(NULL)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN CASE rt0.c2  WHEN x'' THEN rt0.c2 END THEN ((rt0.c2) NOTNULL) WHEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c0, rt0.c1))) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c0 END WHEN CASE -1.792345435E9  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE ((((rt0.c1)AND(rt0.c0)))AND(NULL)) END) ORDER BY ((((NULL)AND(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL END COLLATE RTRIM) ORDER BY ((((((((((vt0.c0)|(vt0.c0)))AND(((((0X670c50ac)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULL END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)|(vt0.c0)))AND(((((0X670c50ac)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL END COLLATE RTRIM) ORDER BY ((((((((((vt0.c0)|(vt0.c0)))AND(((((0X670c50ac)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULL END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)|(vt0.c0)))AND(((((0X670c50ac)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN NULL END COLLATE RTRIM) ORDER BY ((((((((((vt0.c0)|(vt0.c0)))AND(((((0X670c50ac)OR(vt0.c0)))AND(vt0.c0)))))AND(((vt0.c0)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (rt0.c1)))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (rt0.c1)))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NOT (rt0.c1)))-(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 THEN ((rt0.c1)%(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 THEN ((rt0.c1)%(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 THEN ((rt0.c1)%(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 THEN ((rt0.c1)%(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN rt0.c1 THEN ((rt0.c1)%(rt0.c2)) ELSE CAST(rt0.c0 AS REAL) END DESC;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY rt0.c1;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND('')))OR(rt0.c0)))OR((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND('')))OR(rt0.c0)))OR((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND('')))OR(rt0.c0)))OR((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c2, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND('')))OR(rt0.c0)))OR((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND('')))OR(rt0.c0)))OR((((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((NULL, rt0.c2, rt0.c0))))));
SELECT ALL * FROM rt0, vt0 WHERE ((((- ('2c-Ⲭ')))-(QUOTE(rt0.c1)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- ('2c-Ⲭ')))-(QUOTE(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, rt0.c2))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((- ('2c-Ⲭ')))-(QUOTE(rt0.c1)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- ('2c-Ⲭ')))-(QUOTE(rt0.c1)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, rt0.c2))))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((- ('2c-Ⲭ')))-(QUOTE(rt0.c1)))) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) BETWEEN (CAST(rt0.c0 AS TEXT)) AND ((((rt0.c2, rt0.c0, rt0.c1))>((vt0.c0, rt0.c1, rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (- (rt0.c1))  WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE (- (rt0.c1))  WHEN CAST(NULL AS NUMERIC) THEN CAST(rt0.c1 AS TEXT) ELSE CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((~ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((~ (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((~ (rt0.c0)) IN ()) ASC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((''))) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(x'da31272b')))OR(rt0.c2)) THEN (NOT (rt0.c0)) END DESC, (((rt0.c2) BETWEEN (rt0.c0) AND (x'')) IN ())  NULLS FIRST, ((((((rt0.c0)<<(rt0.c1)))OR(CASE rt0.c0  WHEN x'a582' THEN rt0.c0 ELSE rt0.c1 END)))OR((((rt0.c0))<((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((''))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(x'da31272b')))OR(rt0.c2)) THEN (NOT (rt0.c0)) END DESC, (((rt0.c2) BETWEEN (rt0.c0) AND (x'')) IN ())  NULLS FIRST, ((((((rt0.c0)<<(rt0.c1)))OR(CASE rt0.c0  WHEN x'a582' THEN rt0.c0 ELSE rt0.c1 END)))OR((((rt0.c0))<((rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((''))) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(x'da31272b')))OR(rt0.c2)) THEN (NOT (rt0.c0)) END DESC, (((rt0.c2) BETWEEN (rt0.c0) AND (x'')) IN ())  NULLS FIRST, ((((((rt0.c0)<<(rt0.c1)))OR(CASE rt0.c0  WHEN x'a582' THEN rt0.c0 ELSE rt0.c1 END)))OR((((rt0.c0))<((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((''))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(x'da31272b')))OR(rt0.c2)) THEN (NOT (rt0.c0)) END DESC, (((rt0.c2) BETWEEN (rt0.c0) AND (x'')) IN ())  NULLS FIRST, ((((((rt0.c0)<<(rt0.c1)))OR(CASE rt0.c0  WHEN x'a582' THEN rt0.c0 ELSE rt0.c1 END)))OR((((rt0.c0))<((rt0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<=((''))) COLLATE NOCASE) ORDER BY CASE ((rt0.c0) IS TRUE)  WHEN ((((((((rt0.c2)AND(rt0.c2)))OR(x'')))OR(x'da31272b')))OR(rt0.c2)) THEN (NOT (rt0.c0)) END DESC, (((rt0.c2) BETWEEN (rt0.c0) AND (x'')) IN ())  NULLS FIRST, ((((((rt0.c0)<<(rt0.c1)))OR(CASE rt0.c0  WHEN x'a582' THEN rt0.c0 ELSE rt0.c1 END)))OR((((rt0.c0))<((rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(rt0.c2 AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (load_extension((NOT (rt0.c0)))) ORDER BY rt0.c2, ((((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, ((((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (load_extension((NOT (rt0.c0)))) ORDER BY rt0.c2, ((((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2, ((((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (load_extension((NOT (rt0.c0)))) ORDER BY rt0.c2, ((((((((((rt0.c2)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c2)))OR(vt0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (x'' IN ())  NULLS FIRST, (((vt0.c0)+(0.30822093262098627)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ())  NULLS FIRST, (((vt0.c0)+(0.30822093262098627)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (x'' IN ())  NULLS FIRST, (((vt0.c0)+(0.30822093262098627)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (x'' IN ())  NULLS FIRST, (((vt0.c0)+(0.30822093262098627)) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY (x'' IN ())  NULLS FIRST, (((vt0.c0)+(0.30822093262098627)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(rt0.c2 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)LIKE(rt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) ISNULL) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)LIKE(rt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)LIKE(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0) ISNULL) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)LIKE(rt0.c0)) IN ())) ORDER BY ((vt0.c0) ISNULL) DESC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)IS(CAST(0X7bdce291 AS INTEGER)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS(CAST(0x7bdce291 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)IS(CAST(0X7bdce291 AS INTEGER)))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS(CAST(0x7bdce291 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1)IS(CAST(0X7bdce291 AS INTEGER)))) ORDER BY NULL ASC;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(('1741310198' IN ()))))OR(IFNULL(DISTINCT x'', vt0.c0))))OR(-2113244762))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))AND(NULL)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN ('{fm') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(('1741310198' IN ()))))OR(IFNULL(DISTINCT x'', vt0.c0))))OR(-2113244762))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))AND(NULL)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN ('{fm') AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(('1741310198' IN ()))))OR(IFNULL(DISTINCT x'', vt0.c0))))OR(-2113244762))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))AND(NULL)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN ('{fm') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOTNULL))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(('1741310198' IN ()))))OR(IFNULL(DISTINCT x'', vt0.c0))))OR(-2113244762))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))AND(NULL)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN ('{fm') AND (vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) NOTNULL))OR(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))))OR(('1741310198' IN ()))))OR(IFNULL(DISTINCT x'', vt0.c0))))OR(-2113244762))) ORDER BY ((((((((vt0.c0)AND(CAST(vt0.c0 AS NUMERIC))))AND(NULL)))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))))OR(((vt0.c0) BETWEEN ('{fm') AND (vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((NOT (vt0.c0))))<>(((((NULL))<=((vt0.c0))))))) ORDER BY ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))AND(LIKELY(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))!=(((((NULL))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))AND(LIKELY(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((NOT (vt0.c0))))<>(((((NULL))<=((vt0.c0))))))) ORDER BY ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))AND(LIKELY(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (vt0.c0))))!=(((((NULL))<=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))AND(LIKELY(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((NOT (vt0.c0))))<>(((((NULL))<=((vt0.c0))))))) ORDER BY ((((vt0.c0)AND(((vt0.c0)+(vt0.c0)))))AND(LIKELY(vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (rt0.c2 COLLATE RTRIM))) ORDER BY vt0.c0 ASC;
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN '-1596320587' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN '-1596320587' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN '-1596320587' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN '-1596320587' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE rt0.c0  WHEN (rt0.c2 IN ()) THEN CASE rt0.c0  WHEN '-1596320587' THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END ELSE (~ (vt0.c0)) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(LIKELIHOOD(vt0.c0, 0.5981563852243048)))) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(LIKELIHOOD(vt0.c0, 0.5981563852243048)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(LIKELIHOOD(vt0.c0, 0.5981563852243048)))) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)!=(LIKELIHOOD(vt0.c0, 0.5981563852243048)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)!=(LIKELIHOOD(vt0.c0, 0.5981563852243048)))) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, '-1792345435'))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, '-1792345435'))))OR(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, '-1792345435'))))OR(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, '-1792345435'))))OR(rt0.c1))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY (((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((NULL, rt0.c0, vt0.c0)) AND ((rt0.c2, rt0.c1, '-1792345435'))))OR(rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE ((((- (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE ((((- (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((COALESCE(vt0.c0, rt0.c0, vt0.c0, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(vt0.c0)))))AND((((rt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))) WHERE ((((- (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND ((rt0.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY CASE '1038157884'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)))) AND ((TYPEOF(DISTINCT '-1535907885'), ((vt0.c0) NOTNULL), (~ (vt0.c0))))) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE '1038157884'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)))) AND ((TYPEOF(DISTINCT '-1535907885'), ((vt0.c0) NOTNULL), (~ (vt0.c0))))) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY CASE '1038157884'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)))) AND ((TYPEOF(DISTINCT '-1535907885'), ((vt0.c0) NOTNULL), (~ (vt0.c0))))) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CASE '1038157884'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)))) AND ((TYPEOF(DISTINCT '-1535907885'), ((vt0.c0) NOTNULL), (~ (vt0.c0))))) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY CASE '1038157884'  WHEN (+ (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (vt0.c0)))) AND ((TYPEOF(DISTINCT '-1535907885'), ((vt0.c0) NOTNULL), (~ (vt0.c0))))) ASC  NULLS LAST, CAST(CAST(vt0.c0 AS BLOB) AS REAL) DESC;
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((rt0.c0 IN (rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((rt0.c0 IN (rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((rt0.c0 IN (rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((rt0.c0 IN (rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (PRINTF((rt0.c0 IN (rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c0)*(rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)*(rt0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c0)*(rt0.c2)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)*(rt0.c2)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)OR(((rt0.c2) ISNULL)))) ORDER BY (((rt0.c0)*(rt0.c2)) IN ())  NULLS LAST;
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)=(0.39172486373722726)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(0.39172486373722726)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)=(0.39172486373722726)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)==(0.39172486373722726)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c0)=(0.39172486373722726)))+(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1)AND(rt0.c2))))) ORDER BY ((rt0.c2)-(vt0.c0)) ASC  NULLS FIRST, CASE WHEN '-1760586476' COLLATE RTRIM THEN (x'' IN (rt0.c2)) WHEN LOWER(DISTINCT rt0.c1) THEN (+ (rt0.c1)) WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)-(vt0.c0)) ASC  NULLS FIRST, CASE WHEN '-1760586476' COLLATE RTRIM THEN (x'' IN (rt0.c2)) WHEN LOWER(DISTINCT rt0.c1) THEN (+ (rt0.c1)) WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1)AND(rt0.c2))))) ORDER BY ((rt0.c2)-(vt0.c0)) ASC  NULLS FIRST, CASE WHEN '-1760586476' COLLATE RTRIM THEN (x'' IN (rt0.c2)) WHEN LOWER(DISTINCT rt0.c1) THEN (+ (rt0.c1)) WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1)AND(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2)-(vt0.c0)) ASC  NULLS FIRST, CASE WHEN '-1760586476' COLLATE RTRIM THEN (x'' IN (rt0.c2)) WHEN LOWER(DISTINCT rt0.c1) THEN (+ (rt0.c1)) WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((rt0.c1)AND(rt0.c2))))) ORDER BY ((rt0.c2)-(vt0.c0)) ASC  NULLS FIRST, CASE WHEN '-1760586476' COLLATE RTRIM THEN (x'' IN (rt0.c2)) WHEN LOWER(DISTINCT rt0.c1) THEN (+ (rt0.c1)) WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((x'') BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(CAST('-1036589771' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST('-1036589771' AS BLOB))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(CAST('-1036589771' AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST('-1036589771' AS BLOB))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (TRIM(CAST('-1036589771' AS BLOB)));
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)-(rt0.c1)) IN ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(rt0.c1)) IN ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)-(rt0.c1)) IN ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)-(rt0.c1)) IN ((~ (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)-(rt0.c1)) IN ((~ (rt0.c1)))));
SELECT * FROM rt0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)IS(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)IS(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT))<(((vt0.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT))<(((vt0.c0)IS(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE CAST(vt0.c0 AS REAL) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)|(((x'b277') IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(((x'b277') IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)|(((x'b277') IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)|(((x'b277') IS TRUE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)|(((x'b277') IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)) THEN CAST(rt0.c1 AS NUMERIC) END;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2) ORDER BY ((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)||(NULL)))>>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) WHERE (((rt0.c0 COLLATE RTRIM)*(((NULL)IS(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS NUMERIC), ((rt0.c2 COLLATE RTRIM)>=(NULLIF(rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)*(((NULL)IS(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)||(NULL)))>>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS NUMERIC), ((rt0.c2 COLLATE RTRIM)>=(NULLIF(rt0.c2, rt0.c0))) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)||(NULL)))>>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) WHERE (((rt0.c0 COLLATE RTRIM)*(((NULL)IS(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS NUMERIC), ((rt0.c2 COLLATE RTRIM)>=(NULLIF(rt0.c2, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)*(((NULL)IS(rt0.c2))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)||(NULL)))>>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS NUMERIC), ((rt0.c2 COLLATE RTRIM)>=(NULLIF(rt0.c2, rt0.c0))) DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c2)||(NULL)))>>(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))) WHERE (((rt0.c0 COLLATE RTRIM)*(((NULL)IS(rt0.c2))))) ORDER BY CAST(CAST(rt0.c2 AS REAL) AS NUMERIC), ((rt0.c2 COLLATE RTRIM)>=(NULLIF(rt0.c2, rt0.c0))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-848603939' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-848603939' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-848603939' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-848603939' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((COALESCE(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE BINARY)))OR((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '-848603939' WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((- (NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (NULLIF(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (NULLIF(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- (NULLIF(vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0, ((CASE WHEN 1827309013 THEN vt0.c0 ELSE vt0.c0 END)>=(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0, ((CASE WHEN 1827309013 THEN vt0.c0 ELSE vt0.c0 END)>=(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0, ((CASE WHEN 1827309013 THEN vt0.c0 ELSE vt0.c0 END)>=(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0, ((CASE WHEN 1827309013 THEN vt0.c0 ELSE vt0.c0 END)>=(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), vt0.c0, ((CASE WHEN 1827309013 THEN vt0.c0 ELSE vt0.c0 END)>=(vt0.c0 COLLATE BINARY)) DESC;
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))=((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))=((~ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))=((~ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(JULIANDAY(vt0.c0, NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(JULIANDAY(vt0.c0, NULL, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(JULIANDAY(vt0.c0, NULL, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))|(JULIANDAY(vt0.c0, NULL, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))|(JULIANDAY(vt0.c0, NULL, vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN ((((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((((rt0.c0)>>(NULL)), CASE WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (0.6726198158845741) AND (vt0.c0)), rt0.c0))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0)>>(NULL)), CASE WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (0.6726198158845741) AND (vt0.c0)), rt0.c0))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c1 AS NUMERIC)))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN ((((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((((rt0.c0)>>(NULL)), CASE WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (0.6726198158845741) AND (vt0.c0)), rt0.c0))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN ((((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c0)>>(NULL)), CASE WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (0.6726198158845741) AND (vt0.c0)), rt0.c0))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c1 AS NUMERIC)))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0) BETWEEN ((((rt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c0, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY (((((rt0.c0)>>(NULL)), CASE WHEN rt0.c1 THEN rt0.c2 END, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((rt0.c0) NOT BETWEEN (0.6726198158845741) AND (vt0.c0)), rt0.c0))<((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END, ((rt0.c2)&(rt0.c2)), rt0.c1, CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END, CAST(rt0.c1 AS NUMERIC))));
