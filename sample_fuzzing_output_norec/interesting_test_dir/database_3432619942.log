-- Time: 2024/06/11 11:47:59
-- Database: database42
-- Database version: 3.40.0
-- seed value: 3432619942
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 10ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER ); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x''); -- 2ms;
UPDATE OR IGNORE t1 SET c0=NULL WHERE (((t1.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((NOT (t1.c0))))); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t1 VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18485'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1250844807); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('829705268'), (0.6450110035850227), ('1750454335'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT t1 SET c0=0.5287399535572324, c0=x'41714ce1', c0='' WHERE (((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(t1.c0)) IN ()); -- 0ms;
CREATE UNIQUE INDEX i89 ON t1((((c0 IN (c0))) NOTNULL) DESC); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (x''), ('Z퀿Wh퀿E?'), ('hEK{FZ'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX i89; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(-1837483090, NULL) WHERE (- (((t1.c0)|(t1.c0)))); -- 0ms;
CREATE INDEX i3 ON t1(c0 COLLATE BINARY); -- 10ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE VIRTUAL TABLE rt72 USING rtree(c0, c1, c2); -- 1ms;
UPDATE t1 SET c0=0.6760534109571971, c0=0.8106351172606824 WHERE (((((t1.c0)OR(t1.c0)))OR(t1.c0)) IN ()); -- 0ms;
CREATE INDEX IF NOT EXISTS i61 ON t1(UPPER((c0 IN ())) ASC) WHERE ((c0 COLLATE NOCASE)%(((c0) BETWEEN (c0) AND ('-1837483090')))); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO rt72(c2, c1, c0) VALUES (NULL, 'RA', x'd795'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=1750454335,15');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '64630'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29012'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 395394077); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt72 VALUES (x'62c4', x'', '1750454335'), ('829705268', x'', NULL), (-1380786241, '', 0xffffffff927a3bae); -- 0ms;
DELETE FROM vt0; -- 0ms;
ANALYZE; -- 1ms;
SELECT rtreecheck('rt72'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=829705268,6');\n; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('0.6760534109571971'); -- 0ms;
ALTER TABLE t1 ADD COLUMN c67 BLOB; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1664458764); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1260225267);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1997227304); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37065'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1591446055,4');\n; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1431012456'); -- 13ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x'e3e0'); -- 1ms;
BEGIN  TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO t1(c0) VALUES ('z퀿wh퀿e?'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt72(c1) VALUES (''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt72 SET (c0)=(0X6b5df8ab) WHERE CASE WHEN (((rt72.c0))<>((rt72.c0))) THEN NULL ELSE ((((rt72.c2)OR('eb')))AND(rt72.c0)) END; -- 1ms;
INSERT OR ABORT INTO t1(c67, c0) VALUES (0.5287399535572324, x''); -- 0ms;
INSERT OR IGNORE INTO t1(c67, c0) VALUES ('829705268', 0.9711947899210488), (-340030349, '-1431012456'), ('0.5287399535572324', '8K꣮ 苳,'), (0xffffffff9351c778, -1.823357064E9), (0.47308434261627985, 'B'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1942879734); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9861'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1402030193); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20811'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10990'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX  t1; -- 1ms;
PRAGMA main.locking_mode; -- 0ms;
REINDEX  rt72; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 8ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 1ms;
UPDATE OR IGNORE t1 SET c0='-1842369620', c0=0.02417133927514936, c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.application_id = -3949189842669513890; -- 0ms;
INSERT OR FAIL INTO rt72(c1, c0, c2) VALUES ('1d', 0xffffffffc03aa8ee, x'7679cddd'); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0.532342020299865); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE OF c67 ON t1 WHEN (- (((t1.c0) BETWEEN (t1.c0) AND (t1.c67)))) BEGIN UPDATE rt72 SET (c1)=('') WHERE TRIM(DISTINCT rt72.c0) COLLATE BINARY;DELETE FROM rt72;INSERT OR IGNORE INTO rt72(c1, c2) VALUES (x'8f5c', x'');END; -- 1ms;
UPDATE OR IGNORE vt0 SET c0='-748485564' WHERE CAST(((vt0.c0)+(vt0.c0)) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('0.6450110035850227') WHERE (((NOT ('-794827046')))<>(((((0.3973733816870806)AND(vt1.c0)))OR('1612801361')))); -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
UPDATE t1 SET (c0)=(NULL) WHERE t1.c67 COLLATE NOCASE COLLATE RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1750454335);\n; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt72(c1) VALUES ('-1089739410'); -- 0ms;
INSERT OR REPLACE INTO t1(c0, c67) VALUES ('now5>', 0X2604c4af), (x'10c7', 0.8654284548388681), ('0.47308434261627985', NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1(c67) VALUES ('-1431012456'); -- 0ms;
INSERT OR REPLACE INTO rt72 VALUES ('1257027319', NULL, 'w\r'); -- 0ms;
UPDATE vt0 SET (c0, c0)=('975169633', -1845395020); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'c50f855a'), ('1017989516'), (x''); -- 5ms;
UPDATE OR IGNORE rt72 SET (c1)=(''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t1 SET c0='', c67=0.8947665947894209 WHERE t1.c0; -- 0ms;
UPDATE t1 SET (c67)=(0.171725572477458); -- 0ms;
UPDATE OR IGNORE rt72 SET (c0, c1, c2)=(1035056979, 0X7510ab0, 'hGS') WHERE (((((rt72.c1, x'', rt72.c2))<((rt72.c0, rt72.c2, rt72.c2))))||(CASE rt72.c1  WHEN rt72.c0 THEN rt72.c2 ELSE rt72.c2 END)); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i60 ON t1((json_array_length(c0) IN ('975169633', ((((c0)OR(c0)))OR(c0)))) ASC,c0 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM); -- 0ms;
VACUUM; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt72(c2, c0) VALUES (0.19304218280452312, ''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 726559464); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1, '-1842369620', rt72.c0)) BETWEEN ((rt72.c2, ((rt72.c1)OR(NULL)), ((rt72.c1)-(rt72.c1)))) AND ((((((rt72.c2)OR(rt72.c0)))OR(rt72.c0)), ((rt72.c0) IS FALSE), x'492b'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, '-1842369620', rt72.c0)) BETWEEN ((rt72.c2, ((rt72.c1)OR(NULL)), ((rt72.c1)-(rt72.c1)))) AND ((((((rt72.c2)OR(rt72.c0)))OR(rt72.c0)), ((rt72.c0) IS FALSE), x'492b')))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1, '-1842369620', rt72.c0)) BETWEEN ((rt72.c2, ((rt72.c1)OR(NULL)), ((rt72.c1)-(rt72.c1)))) AND ((((((rt72.c2)OR(rt72.c0)))OR(rt72.c0)), ((rt72.c0) IS FALSE), x'492b'))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, '-1842369620', rt72.c0)) BETWEEN ((rt72.c2, ((rt72.c1)OR(NULL)), ((rt72.c1)-(rt72.c1)))) AND ((((((rt72.c2)OR(rt72.c0)))OR(rt72.c0)), ((rt72.c0) IS FALSE), x'492b')))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1, '-1842369620', rt72.c0)) BETWEEN ((rt72.c2, ((rt72.c1)OR(NULL)), ((rt72.c1)-(rt72.c1)))) AND ((((((rt72.c2)OR(rt72.c0)))OR(rt72.c0)), ((rt72.c0) IS FALSE), x'492b'))));
SELECT * FROM rt72, vt1, t1, vt0 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT * FROM rt72, vt1, t1, vt0 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT * FROM rt72, vt1, t1, vt0 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 END) NOT NULL));
SELECT ALL * FROM t1, rt72, vt1 WHERE (CAST(((t1.c67) NOT BETWEEN (rt72.c1) AND (rt72.c2)) AS BLOB)) ORDER BY (((CAST(rt72.c0 AS INTEGER), t1.c0, ((('-1842369620'))>((rt72.c2)))))<=((CASE WHEN t1.c67 THEN vt1.c0 ELSE t1.c67 END, ((rt72.c1)GLOB(vt1.c0)), t1.c67))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c67) NOT BETWEEN (rt72.c1) AND (rt72.c2)) AS BLOB)) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY (((CAST(rt72.c0 AS INTEGER), t1.c0, ((('-1842369620'))>((rt72.c2)))))<=((CASE WHEN t1.c67 THEN vt1.c0 ELSE t1.c67 END, ((rt72.c1)GLOB(vt1.c0)), t1.c67))) ASC);
SELECT ALL * FROM t1, rt72, vt1 WHERE (CAST(((t1.c67) NOT BETWEEN (rt72.c1) AND (rt72.c2)) AS BLOB)) ORDER BY (((CAST(rt72.c0 AS INTEGER), t1.c0, ((('-1842369620'))>((rt72.c2)))))<=((CASE WHEN t1.c67 THEN vt1.c0 ELSE t1.c67 END, ((rt72.c1)GLOB(vt1.c0)), t1.c67))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c67) NOT BETWEEN (rt72.c1) AND (rt72.c2)) AS BLOB)) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY (((CAST(rt72.c0 AS INTEGER), t1.c0, ((('-1842369620'))>((rt72.c2)))))<=((CASE WHEN t1.c67 THEN vt1.c0 ELSE t1.c67 END, ((rt72.c1)GLOB(vt1.c0)), t1.c67))) ASC);
SELECT ALL * FROM t1, rt72, vt1 WHERE (CAST(((t1.c67) NOT BETWEEN (rt72.c1) AND (rt72.c2)) AS BLOB)) ORDER BY (((CAST(rt72.c0 AS INTEGER), t1.c0, ((('-1842369620'))>((rt72.c2)))))<=((CASE WHEN t1.c67 THEN vt1.c0 ELSE t1.c67 END, ((rt72.c1)GLOB(vt1.c0)), t1.c67))) ASC;
SELECT ALL * FROM t1, rt72, vt1 WHERE (((((rt72.c0)+(t1.c0))) IS FALSE)) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)+(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, rt72, vt1 WHERE (((((rt72.c0)+(t1.c0))) IS FALSE)) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)+(t1.c0))) IS FALSE)) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL));
SELECT ALL * FROM t1, rt72, vt1 WHERE (((((rt72.c0)+(t1.c0))) IS FALSE)) ORDER BY ((vt1.c0 COLLATE NOCASE) ISNULL);
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((((((((('-1440749979'))>=((t1.c67))))AND(CAST(t1.c67 AS BLOB))))OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN (rt72.c0, t1.c67)))))OR((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt72.c2 AS TEXT))) AND ((((((((((((((vt0.c0)AND(t1.c0)))OR(rt72.c2)))OR(rt72.c2)))AND(t1.c0)))OR(rt72.c0)))OR(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((('-1440749979'))>=((t1.c67))))AND(CAST(t1.c67 AS BLOB))))OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN (rt72.c0, t1.c67)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, rt72 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt72.c2 AS TEXT))) AND ((((((((((((((vt0.c0)AND(t1.c0)))OR(rt72.c2)))OR(rt72.c2)))AND(t1.c0)))OR(rt72.c0)))OR(rt72.c0))))));
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((((((((('-1440749979'))>=((t1.c67))))AND(CAST(t1.c67 AS BLOB))))OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN (rt72.c0, t1.c67)))))OR((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt72.c2 AS TEXT))) AND ((((((((((((((vt0.c0)AND(t1.c0)))OR(rt72.c2)))OR(rt72.c2)))AND(t1.c0)))OR(rt72.c0)))OR(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((('-1440749979'))>=((t1.c67))))AND(CAST(t1.c67 AS BLOB))))OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN (rt72.c0, t1.c67)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt0, rt72 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt72.c2 AS TEXT))) AND ((((((((((((((vt0.c0)AND(t1.c0)))OR(rt72.c2)))OR(rt72.c2)))AND(t1.c0)))OR(rt72.c0)))OR(rt72.c0))))));
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((((((((('-1440749979'))>=((t1.c67))))AND(CAST(t1.c67 AS BLOB))))OR(ABS(DISTINCT vt0.c0))))OR((vt0.c0 IN (rt72.c0, t1.c67)))))OR((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(rt72.c2 AS TEXT))) AND ((((((((((((((vt0.c0)AND(t1.c0)))OR(rt72.c2)))OR(rt72.c2)))AND(t1.c0)))OR(rt72.c0)))OR(rt72.c0)))));
SELECT ALL COUNT(*) FROM rt72 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (NULL);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c0 IN ())) BETWEEN ((- (rt72.c1))) AND (CAST(rt72.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((rt72.c0 IN ())) BETWEEN ((- (rt72.c1))) AND (CAST(rt72.c0 AS BLOB)))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c0 IN ())) BETWEEN ((- (rt72.c1))) AND (CAST(rt72.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((rt72.c0 IN ())) BETWEEN ((- (rt72.c1))) AND (CAST(rt72.c0 AS BLOB)))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c0 IN ())) BETWEEN ((- (rt72.c1))) AND (CAST(rt72.c0 AS BLOB))));
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0)!=(vt1.c0)))));
SELECT * FROM rt72, t1, vt0 WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT * FROM rt72, t1, vt0 WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT * FROM rt72, t1, vt0 WHERE (rt72.c2);
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c67 AS INTEGER)) IS TRUE) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c67 AS INTEGER)) IS TRUE));
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c67 AS INTEGER)) IS TRUE) WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c67 AS INTEGER)) IS TRUE));
SELECT ALL * FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c67 AS INTEGER)) IS TRUE) WHERE (CAST(NULL AS TEXT));
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY rt72.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72 ORDER BY rt72.c1 ASC);
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY rt72.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72 ORDER BY rt72.c1 ASC);
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY rt72.c1 ASC;
SELECT * FROM vt0, rt72, t1 WHERE ((((t1.c67) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY t1.c67 ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c67) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY t1.c67 ASC);
SELECT * FROM vt0, rt72, t1 WHERE ((((t1.c67) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY t1.c67 ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c67) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY t1.c67 ASC);
SELECT * FROM vt0, rt72, t1 WHERE ((((t1.c67) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) ORDER BY t1.c67 ASC;
SELECT ALL * FROM t1, rt72 WHERE (((CAST(rt72.c0 AS INTEGER))%(((t1.c0)LIKE(-1.08973941E9)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c0 AS INTEGER))%(((t1.c0)LIKE(-1.08973941E9))))) IS TRUE)  as count FROM t1, rt72);
SELECT ALL * FROM t1, rt72 WHERE (((CAST(rt72.c0 AS INTEGER))%(((t1.c0)LIKE(-1.08973941E9)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c0 AS INTEGER))%(((t1.c0)LIKE(-1.08973941E9))))) IS TRUE)  as count FROM t1, rt72);
SELECT ALL * FROM t1, rt72 WHERE (((CAST(rt72.c0 AS INTEGER))%(((t1.c0)LIKE(-1.08973941E9)))));
SELECT ALL COUNT(*) FROM t1, rt72, vt1 RIGHT OUTER JOIN vt0 ON (((LIKELIHOOD('', 0.5992524714614711), (((rt72.c0, rt72.c1, rt72.c0, vt0.c0, rt72.c0))<=((t1.c67, vt0.c0, '-1380786241', rt72.c2, rt72.c1))), vt1.c0))<>((((rt72.c2) BETWEEN (rt72.c0) AND (t1.c0)), rt72.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c1)))))) WHERE (CAST(CASE NULL  WHEN NULL THEN '1590439018' END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN NULL THEN '1590439018' END AS REAL)) IS TRUE)  as count FROM t1, rt72, vt1 RIGHT OUTER JOIN vt0 ON (((LIKELIHOOD('', 0.5992524714614711), (((rt72.c0, rt72.c1, rt72.c0, vt0.c0, rt72.c0))<=((t1.c67, vt0.c0, '-1380786241', rt72.c2, rt72.c1))), vt1.c0))!=((((rt72.c2) BETWEEN (rt72.c0) AND (t1.c0)), rt72.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c1)))))));
SELECT ALL COUNT(*) FROM t1, rt72, vt1 RIGHT OUTER JOIN vt0 ON (((LIKELIHOOD('', 0.5992524714614711), (((rt72.c0, rt72.c1, rt72.c0, vt0.c0, rt72.c0))<=((t1.c67, vt0.c0, '-1380786241', rt72.c2, rt72.c1))), vt1.c0))<>((((rt72.c2) BETWEEN (rt72.c0) AND (t1.c0)), rt72.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c1)))))) WHERE (CAST(CASE NULL  WHEN NULL THEN '1590439018' END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN NULL THEN '1590439018' END AS REAL)) IS TRUE)  as count FROM t1, rt72, vt1 RIGHT OUTER JOIN vt0 ON (((LIKELIHOOD('', 0.5992524714614711), (((rt72.c0, rt72.c1, rt72.c0, vt0.c0, rt72.c0))<=((t1.c67, vt0.c0, '-1380786241', rt72.c2, rt72.c1))), vt1.c0))!=((((rt72.c2) BETWEEN (rt72.c0) AND (t1.c0)), rt72.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c1)))))));
SELECT ALL COUNT(*) FROM t1, rt72, vt1 RIGHT OUTER JOIN vt0 ON (((LIKELIHOOD('', 0.5992524714614711), (((rt72.c0, rt72.c1, rt72.c0, vt0.c0, rt72.c0))<=((t1.c67, vt0.c0, '-1380786241', rt72.c2, rt72.c1))), vt1.c0))<>((((rt72.c2) BETWEEN (rt72.c0) AND (t1.c0)), rt72.c0 COLLATE NOCASE, (((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c1)))))) WHERE (CAST(CASE NULL  WHEN NULL THEN '1590439018' END AS REAL));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t1.c0)) AS BLOB) WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((t1.c0)OR(t1.c67)))OR(t1.c0)))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS INTEGER))OR(((((t1.c0)OR(t1.c67)))OR(t1.c0)))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t1.c0)) AS BLOB) WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((t1.c0)OR(t1.c67)))OR(t1.c0)))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS INTEGER))OR(((((t1.c0)OR(t1.c67)))OR(t1.c0)))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON CAST((vt1.c0 IN (t1.c0)) AS BLOB) WHERE (((((CAST(t1.c0 AS INTEGER))OR(((((t1.c0)OR(t1.c67)))OR(t1.c0)))))OR((vt1.c0 IN ()))));
SELECT * FROM rt72, t1, vt1 INDEXED BY i61, vt0 WHERE (((0.3973733816870806 COLLATE RTRIM)<<((vt0.c0 IN (t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((0.3973733816870806 COLLATE RTRIM)<<((vt0.c0 IN (t1.c67))))) IS TRUE)  as count FROM rt72, t1, vt1 INDEXED BY i61, vt0);
SELECT * FROM rt72, t1, vt1 INDEXED BY i61, vt0 WHERE (((0.3973733816870806 COLLATE RTRIM)<<((vt0.c0 IN (t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((0.3973733816870806 COLLATE RTRIM)<<((vt0.c0 IN (t1.c67))))) IS TRUE)  as count FROM rt72, t1, vt1 INDEXED BY i61, vt0);
SELECT * FROM vt0, vt1 WHERE ((((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND(vt0.c0)))OR((vt1.c0 IN (vt0.c0))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND(vt0.c0)))OR((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt0, vt1 WHERE ((((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND(vt0.c0)))OR((vt1.c0 IN (vt0.c0))))) ORDER BY vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND(vt0.c0)))OR((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0 ASC);
SELECT * FROM vt0, vt1 WHERE ((((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(x'')))AND(vt0.c0)))OR((vt1.c0 IN (vt0.c0))))) ORDER BY vt1.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON ((vt1.c0 COLLATE BINARY)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt72 WHERE (((0.14977847247566722)&(((rt72.c2)%(vt0.c0))))) ORDER BY ((CAST(rt72.c1 AS INTEGER)) BETWEEN ((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((0.9306223730235239)))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((0.14977847247566722)&(((rt72.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt72 ORDER BY ((CAST(rt72.c1 AS INTEGER)) BETWEEN ((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((0.9306223730235239)))) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt72 WHERE (((0.14977847247566722)&(((rt72.c2)%(vt0.c0))))) ORDER BY ((CAST(rt72.c1 AS INTEGER)) BETWEEN ((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((0.9306223730235239)))) AND (vt0.c0));
SELECT SUM(count) FROM (SELECT ((((0.14977847247566722)&(((rt72.c2)%(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt72 ORDER BY ((CAST(rt72.c1 AS INTEGER)) BETWEEN ((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((0.9306223730235239)))) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt72 WHERE (((0.14977847247566722)&(((rt72.c2)%(vt0.c0))))) ORDER BY ((CAST(rt72.c1 AS INTEGER)) BETWEEN ((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((0.9306223730235239)))) AND (vt0.c0));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((NULL IN ()));
SELECT ALL * FROM rt72 NATURAL JOIN vt0 WHERE ('-48') ORDER BY ((((CAST(vt0.c0 AS REAL))OR(rt72.c2 COLLATE NOCASE)))OR((rt72.c1 IN (rt72.c1, rt72.c1))));
SELECT SUM(count) FROM (SELECT ALL (('-48') IS TRUE)  as count FROM rt72 NATURAL JOIN vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(rt72.c2 COLLATE NOCASE)))OR((rt72.c1 IN (rt72.c1, rt72.c1)))));
SELECT ALL * FROM rt72 NATURAL JOIN vt0 WHERE ('-48') ORDER BY ((((CAST(vt0.c0 AS REAL))OR(rt72.c2 COLLATE NOCASE)))OR((rt72.c1 IN (rt72.c1, rt72.c1))));
SELECT SUM(count) FROM (SELECT ALL (('-48') IS TRUE)  as count FROM rt72 NATURAL JOIN vt0 ORDER BY ((((CAST(vt0.c0 AS REAL))OR(rt72.c2 COLLATE NOCASE)))OR((rt72.c1 IN (rt72.c1, rt72.c1)))));
SELECT ALL * FROM rt72 NATURAL JOIN vt0 WHERE ('-48') ORDER BY ((((CAST(vt0.c0 AS REAL))OR(rt72.c2 COLLATE NOCASE)))OR((rt72.c1 IN (rt72.c1, rt72.c1))));
SELECT ALL * FROM rt72 WHERE ((+ (rt72.c0)));
SELECT SUM(count) FROM (SELECT (((+ (rt72.c0))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ((+ (rt72.c0)));
SELECT SUM(count) FROM (SELECT (((+ (rt72.c0))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ((+ (rt72.c0)));
SELECT * FROM vt0, t1, vt1 WHERE (LTRIM(CASE vt0.c0  WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 'b*' ELSE vt0.c0 END, (((vt1.c0, t1.c67, vt0.c0))>((t1.c0, vt1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE vt0.c0  WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 'b*' ELSE vt0.c0 END, (((vt1.c0, t1.c67, vt0.c0))>((t1.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (LTRIM(CASE vt0.c0  WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 'b*' ELSE vt0.c0 END, (((vt1.c0, t1.c67, vt0.c0))>((t1.c0, vt1.c0, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CASE vt0.c0  WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 'b*' ELSE vt0.c0 END, (((vt1.c0, t1.c67, vt0.c0))>((t1.c0, vt1.c0, t1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (LTRIM(CASE vt0.c0  WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN t1.c0 WHEN t1.c0 THEN 'b*' ELSE vt0.c0 END, (((vt1.c0, t1.c67, vt0.c0))>((t1.c0, vt1.c0, t1.c0)))));
SELECT * FROM t1 WHERE (((((t1.c0)AND(t1.c0)))AND(x'')) COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(t1.c0)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY NULL DESC);
SELECT * FROM t1 WHERE (((((t1.c0)AND(t1.c0)))AND(x'')) COLLATE RTRIM) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c0)AND(t1.c0)))AND(x'')) COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED ORDER BY NULL DESC);
SELECT * FROM t1 WHERE (((((t1.c0)AND(t1.c0)))AND(x'')) COLLATE RTRIM) ORDER BY NULL DESC;
SELECT COUNT(*) FROM t1, vt1 CROSS JOIN vt0 ON (((((- (t1.c67)))AND('1~' COLLATE RTRIM)))OR(COALESCE(t1.c67, t1.c67))) WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON (((((- (t1.c67)))AND('1~' COLLATE RTRIM)))OR(COALESCE(t1.c67, t1.c67))));
SELECT COUNT(*) FROM t1, vt1 CROSS JOIN vt0 ON (((((- (t1.c67)))AND('1~' COLLATE RTRIM)))OR(COALESCE(t1.c67, t1.c67))) WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON (((((- (t1.c67)))AND('1~' COLLATE RTRIM)))OR(COALESCE(t1.c67, t1.c67))));
SELECT COUNT(*) FROM t1, vt1 CROSS JOIN vt0 ON (((((- (t1.c67)))AND('1~' COLLATE RTRIM)))OR(COALESCE(t1.c67, t1.c67))) WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt72, t1, vt0 WHERE ((((((vt1.c0))>=((rt72.c1))))>(((((rt72.c1)OR(rt72.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((rt72.c1))))>(((((rt72.c1)OR(rt72.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, rt72, t1, vt0);
SELECT COUNT(*) FROM vt1, rt72, t1, vt0 WHERE ((((((vt1.c0))>=((rt72.c1))))>(((((rt72.c1)OR(rt72.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((rt72.c1))))>(((((rt72.c1)OR(rt72.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, rt72, t1, vt0);
SELECT COUNT(*) FROM vt1, rt72, t1, vt0 WHERE ((((((vt1.c0))>=((rt72.c1))))>(((((rt72.c1)OR(rt72.c2)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c1) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c1) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (rt72.c1);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOTNULL)) ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE ASC, vt0.c0;
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0)<=(vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, 0.172121363277849)) BETWEEN ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((0.4736113845237697) IS FALSE))) AND (((NOT (vt0.c0)), LTRIM(vt0.c0), vt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, 0.172121363277849)) BETWEEN ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((0.4736113845237697) IS FALSE))) AND (((NOT (vt0.c0)), LTRIM(vt0.c0), vt0.c0 COLLATE BINARY))) DESC);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0)<=(vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, 0.172121363277849)) BETWEEN ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((0.4736113845237697) IS FALSE))) AND (((NOT (vt0.c0)), LTRIM(vt0.c0), vt0.c0 COLLATE BINARY))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)<=(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, 0.172121363277849)) BETWEEN ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((0.4736113845237697) IS FALSE))) AND (((NOT (vt0.c0)), LTRIM(vt0.c0), vt0.c0 COLLATE BINARY))) DESC);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0)<=(vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, 0.172121363277849)) BETWEEN ((vt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((0.4736113845237697) IS FALSE))) AND (((NOT (vt0.c0)), LTRIM(vt0.c0), vt0.c0 COLLATE BINARY))) DESC;
SELECT * FROM vt1, rt72, t1 WHERE (CASE CHANGES()  WHEN TRIM(vt1.c0, rt72.c2) THEN ((rt72.c1)>=(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHANGES()  WHEN TRIM(vt1.c0, rt72.c2) THEN ((rt72.c1)>=(t1.c0)) END) IS TRUE)  as count FROM vt1, rt72, t1 NOT INDEXED);
SELECT * FROM vt1, rt72, t1 WHERE (CASE CHANGES()  WHEN TRIM(vt1.c0, rt72.c2) THEN ((rt72.c1)>=(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CHANGES()  WHEN TRIM(vt1.c0, rt72.c2) THEN ((rt72.c1)>=(t1.c0)) END) IS TRUE)  as count FROM vt1, rt72, t1 NOT INDEXED);
SELECT * FROM vt1, rt72, t1 WHERE (CASE CHANGES()  WHEN TRIM(vt1.c0, rt72.c2) THEN ((rt72.c1)>=(t1.c0)) END);
SELECT COUNT(*) FROM t1, vt1 INNER JOIN rt72 ON (((vt0.c0)) BETWEEN ((CASE rt72.c2  WHEN t1.c67 THEN vt1.c0 ELSE vt0.c0 END)) AND (((NOT (vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt72.c0 THEN vt0.c0 ELSE rt72.c2 END AS BLOB) WHERE ((((((((((((rt72.c1, t1.c0, rt72.c0)) NOT BETWEEN ((t1.c67, rt72.c1, rt72.c0)) AND ((rt72.c2, t1.c67, '-340030349'))))AND(((((vt1.c0)OR(vt1.c0)))AND('V')))))OR(CASE rt72.c2  WHEN rt72.c1 THEN rt72.c2 ELSE vt0.c0 END)))AND(((((((((x'')OR(rt72.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ((((((((((t1.c0)!=(t1.c67)))AND(((((rt72.c2)OR(rt72.c2)))OR(rt72.c1)))))AND(CAST(rt72.c0 AS TEXT))))OR((((0.2542656316411881))>=((t1.c0))))))AND(((((((((0.6450110035850227)AND(vt1.c0)))AND(vt1.c0)))AND(rt72.c0)))OR(t1.c0)))) DESC, (((vt0.c0) BETWEEN (vt1.c0) AND (rt72.c1)) IN (rt72.c1, CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt72.c1, t1.c0, rt72.c0)) NOT BETWEEN ((t1.c67, rt72.c1, rt72.c0)) AND ((rt72.c2, t1.c67, '-340030349'))))AND(((((vt1.c0)OR(vt1.c0)))AND('V')))))OR(CASE rt72.c2  WHEN rt72.c1 THEN rt72.c2 ELSE vt0.c0 END)))AND(((((((((x'')OR(rt72.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1 INNER JOIN rt72 ON (((vt0.c0)) BETWEEN ((CASE rt72.c2  WHEN t1.c67 THEN vt1.c0 ELSE vt0.c0 END)) AND (((NOT (vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt72.c0 THEN vt0.c0 ELSE rt72.c2 END AS BLOB) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ((((((((((t1.c0)!=(t1.c67)))AND(((((rt72.c2)OR(rt72.c2)))OR(rt72.c1)))))AND(CAST(rt72.c0 AS TEXT))))OR((((0.2542656316411881))>=((t1.c0))))))AND(((((((((0.6450110035850227)AND(vt1.c0)))AND(vt1.c0)))AND(rt72.c0)))OR(t1.c0)))) DESC, (((vt0.c0) BETWEEN (vt1.c0) AND (rt72.c1)) IN (rt72.c1, CAST(t1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t1, vt1 INNER JOIN rt72 ON (((vt0.c0)) BETWEEN ((CASE rt72.c2  WHEN t1.c67 THEN vt1.c0 ELSE vt0.c0 END)) AND (((NOT (vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt72.c0 THEN vt0.c0 ELSE rt72.c2 END AS BLOB) WHERE ((((((((((((rt72.c1, t1.c0, rt72.c0)) NOT BETWEEN ((t1.c67, rt72.c1, rt72.c0)) AND ((rt72.c2, t1.c67, '-340030349'))))AND(((((vt1.c0)OR(vt1.c0)))AND('V')))))OR(CASE rt72.c2  WHEN rt72.c1 THEN rt72.c2 ELSE vt0.c0 END)))AND(((((((((x'')OR(rt72.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ((((((((((t1.c0)!=(t1.c67)))AND(((((rt72.c2)OR(rt72.c2)))OR(rt72.c1)))))AND(CAST(rt72.c0 AS TEXT))))OR((((0.2542656316411881))>=((t1.c0))))))AND(((((((((0.6450110035850227)AND(vt1.c0)))AND(vt1.c0)))AND(rt72.c0)))OR(t1.c0)))) DESC, (((vt0.c0) BETWEEN (vt1.c0) AND (rt72.c1)) IN (rt72.c1, CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt72.c1, t1.c0, rt72.c0)) NOT BETWEEN ((t1.c67, rt72.c1, rt72.c0)) AND ((rt72.c2, t1.c67, '-340030349'))))AND(((((vt1.c0)OR(vt1.c0)))AND('V')))))OR(CASE rt72.c2  WHEN rt72.c1 THEN rt72.c2 ELSE vt0.c0 END)))AND(((((((((x'')OR(rt72.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM t1, vt1 INNER JOIN rt72 ON (((vt0.c0)) BETWEEN ((CASE rt72.c2  WHEN t1.c67 THEN vt1.c0 ELSE vt0.c0 END)) AND (((NOT (vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt72.c0 THEN vt0.c0 ELSE rt72.c2 END AS BLOB) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ((((((((((t1.c0)!=(t1.c67)))AND(((((rt72.c2)OR(rt72.c2)))OR(rt72.c1)))))AND(CAST(rt72.c0 AS TEXT))))OR((((0.2542656316411881))>=((t1.c0))))))AND(((((((((0.6450110035850227)AND(vt1.c0)))AND(vt1.c0)))AND(rt72.c0)))OR(t1.c0)))) DESC, (((vt0.c0) BETWEEN (vt1.c0) AND (rt72.c1)) IN (rt72.c1, CAST(t1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t1, vt1 INNER JOIN rt72 ON (((vt0.c0)) BETWEEN ((CASE rt72.c2  WHEN t1.c67 THEN vt1.c0 ELSE vt0.c0 END)) AND (((NOT (vt0.c0))))) LEFT OUTER JOIN vt0 ON CAST(CASE WHEN rt72.c0 THEN vt0.c0 ELSE rt72.c2 END AS BLOB) WHERE ((((((((((((rt72.c1, t1.c0, rt72.c0)) NOT BETWEEN ((t1.c67, rt72.c1, rt72.c0)) AND ((rt72.c2, t1.c67, '-340030349'))))AND(((((vt1.c0)OR(vt1.c0)))AND('V')))))OR(CASE rt72.c2  WHEN rt72.c1 THEN rt72.c2 ELSE vt0.c0 END)))AND(((((((((x'')OR(rt72.c0)))AND(vt1.c0)))OR(t1.c0)))OR(vt0.c0)))))AND((vt0.c0 IN ())))) ORDER BY ((vt0.c0 IN ()) IN ())  NULLS FIRST, ((((((((((t1.c0)!=(t1.c67)))AND(((((rt72.c2)OR(rt72.c2)))OR(rt72.c1)))))AND(CAST(rt72.c0 AS TEXT))))OR((((0.2542656316411881))>=((t1.c0))))))AND(((((((((0.6450110035850227)AND(vt1.c0)))AND(vt1.c0)))AND(rt72.c0)))OR(t1.c0)))) DESC, (((vt0.c0) BETWEEN (vt1.c0) AND (rt72.c1)) IN (rt72.c1, CAST(t1.c0 AS NUMERIC)));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(x'0488')))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<(vt1.c0)))AND(x'0488')))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(x'0488')))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)<(vt1.c0)))AND(x'0488')))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)<(vt1.c0)))AND(x'0488')))OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0, rt72 WHERE ((((rt72.c1 IN (vt0.c0, vt0.c0)))OR(((rt72.c2) NOT BETWEEN (rt72.c2) AND (rt72.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1 IN (vt0.c0, vt0.c0)))OR(((rt72.c2) NOT BETWEEN (rt72.c2) AND (rt72.c1))))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL * FROM vt0, rt72 WHERE ((((rt72.c1 IN (vt0.c0, vt0.c0)))OR(((rt72.c2) NOT BETWEEN (rt72.c2) AND (rt72.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1 IN (vt0.c0, vt0.c0)))OR(((rt72.c2) NOT BETWEEN (rt72.c2) AND (rt72.c1))))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL * FROM vt0, rt72 WHERE ((((rt72.c1 IN (vt0.c0, vt0.c0)))OR(((rt72.c2) NOT BETWEEN (rt72.c2) AND (rt72.c1)))));
SELECT * FROM vt1 CROSS JOIN rt72 ON CASE WHEN rt72.c1 COLLATE RTRIM THEN ((t1.c67)<>(t1.c67)) END FULL OUTER JOIN t1 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt72.c0) BETWEEN (rt72.c1) AND (rt72.c2))) AND (((t1.c0) IS FALSE))) WHERE (((((((rt72.c2)) BETWEEN ((t1.c0)) AND ((rt72.c1))), ((((((((t1.c0)OR(vt1.c0)))OR(rt72.c0)))AND(vt1.c0)))AND(t1.c0)), t1.c67 COLLATE RTRIM))<((rt72.c2 COLLATE BINARY, rt72.c2 COLLATE BINARY, CAST(rt72.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c2)) BETWEEN ((t1.c0)) AND ((rt72.c1))), ((((((((t1.c0)OR(vt1.c0)))OR(rt72.c0)))AND(vt1.c0)))AND(t1.c0)), t1.c67 COLLATE RTRIM))<((rt72.c2 COLLATE BINARY, rt72.c2 COLLATE BINARY, CAST(rt72.c0 AS REAL))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt72 ON CASE WHEN rt72.c1 COLLATE RTRIM THEN ((t1.c67)!=(t1.c67)) END FULL OUTER JOIN t1 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt72.c0) BETWEEN (rt72.c1) AND (rt72.c2))) AND (((t1.c0) IS FALSE))));
SELECT * FROM vt1 CROSS JOIN rt72 ON CASE WHEN rt72.c1 COLLATE RTRIM THEN ((t1.c67)<>(t1.c67)) END FULL OUTER JOIN t1 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt72.c0) BETWEEN (rt72.c1) AND (rt72.c2))) AND (((t1.c0) IS FALSE))) WHERE (((((((rt72.c2)) BETWEEN ((t1.c0)) AND ((rt72.c1))), ((((((((t1.c0)OR(vt1.c0)))OR(rt72.c0)))AND(vt1.c0)))AND(t1.c0)), t1.c67 COLLATE RTRIM))<((rt72.c2 COLLATE BINARY, rt72.c2 COLLATE BINARY, CAST(rt72.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c2)) BETWEEN ((t1.c0)) AND ((rt72.c1))), ((((((((t1.c0)OR(vt1.c0)))OR(rt72.c0)))AND(vt1.c0)))AND(t1.c0)), t1.c67 COLLATE RTRIM))<((rt72.c2 COLLATE BINARY, rt72.c2 COLLATE BINARY, CAST(rt72.c0 AS REAL))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt72 ON CASE WHEN rt72.c1 COLLATE RTRIM THEN ((t1.c67)!=(t1.c67)) END FULL OUTER JOIN t1 ON ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt72.c0) BETWEEN (rt72.c1) AND (rt72.c2))) AND (((t1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY CAST(0.16152869334299202 COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY CAST(0.16152869334299202 COLLATE RTRIM AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY CAST(0.16152869334299202 COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY CAST(0.16152869334299202 COLLATE RTRIM AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS INTEGER)) ORDER BY CAST(0.16152869334299202 COLLATE RTRIM AS NUMERIC) DESC;
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (((((t1.c67)<(t1.c0))) NOT BETWEEN (rt72.c1) AND (((rt72.c0)OR(rt72.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c67)<(t1.c0))) NOT BETWEEN (rt72.c1) AND (((rt72.c0)OR(rt72.c1))))) IS TRUE)  as count FROM t1, rt72, vt0, vt1);
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (((((t1.c67)<(t1.c0))) NOT BETWEEN (rt72.c1) AND (((rt72.c0)OR(rt72.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c67)<(t1.c0))) NOT BETWEEN (rt72.c1) AND (((rt72.c0)OR(rt72.c1))))) IS TRUE)  as count FROM t1, rt72, vt0, vt1);
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (((((t1.c67)<(t1.c0))) NOT BETWEEN (rt72.c1) AND (((rt72.c0)OR(rt72.c1)))));
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE (ABS(((vt0.c0) IS TRUE))) ORDER BY IFNULL(TRIM(rt72.c2), (((rt72.c2))<=((rt72.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM rt72, vt1, vt0 ORDER BY IFNULL(TRIM(rt72.c2), (((rt72.c2))<=((rt72.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE (ABS(((vt0.c0) IS TRUE))) ORDER BY IFNULL(TRIM(rt72.c2), (((rt72.c2))<=((rt72.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) IS TRUE))) IS TRUE)  as count FROM rt72, vt1, vt0 ORDER BY IFNULL(TRIM(rt72.c2), (((rt72.c2))<=((rt72.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE (ABS(((vt0.c0) IS TRUE))) ORDER BY IFNULL(TRIM(rt72.c2), (((rt72.c2))<=((rt72.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE (CASE WHEN (- (t1.c0)) THEN ((rt72.c1)*(rt72.c0)) END) ORDER BY IFNULL(DISTINCT CAST(rt72.c0 AS NUMERIC), t1.c0 COLLATE NOCASE), 'Q' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t1.c0)) THEN ((rt72.c1)*(rt72.c0)) END) IS TRUE)  as count FROM t1, vt1, vt0, rt72 ORDER BY IFNULL(DISTINCT CAST(rt72.c0 AS NUMERIC), t1.c0 COLLATE NOCASE), 'Q' COLLATE NOCASE);
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE (CASE WHEN (- (t1.c0)) THEN ((rt72.c1)*(rt72.c0)) END) ORDER BY IFNULL(DISTINCT CAST(rt72.c0 AS NUMERIC), t1.c0 COLLATE NOCASE), 'Q' COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t1.c0)) THEN ((rt72.c1)*(rt72.c0)) END) IS TRUE)  as count FROM t1, vt1, vt0, rt72 ORDER BY IFNULL(DISTINCT CAST(rt72.c0 AS NUMERIC), t1.c0 COLLATE NOCASE), 'Q' COLLATE NOCASE);
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE (CASE WHEN (- (t1.c0)) THEN ((rt72.c1)*(rt72.c0)) END) ORDER BY IFNULL(DISTINCT CAST(rt72.c0 AS NUMERIC), t1.c0 COLLATE NOCASE), 'Q' COLLATE NOCASE;
SELECT ALL * FROM rt72 WHERE ((((~ (rt72.c1))) NOT BETWEEN (CAST(rt72.c1 AS INTEGER)) AND (((((((((rt72.c0)OR('-1431012456')))AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt72.c1))) NOT BETWEEN (CAST(rt72.c1 AS INTEGER)) AND (((((((((rt72.c0)OR('-1431012456')))AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0))))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ((((~ (rt72.c1))) NOT BETWEEN (CAST(rt72.c1 AS INTEGER)) AND (((((((((rt72.c0)OR('-1431012456')))AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt72.c1))) NOT BETWEEN (CAST(rt72.c1 AS INTEGER)) AND (((((((((rt72.c0)OR('-1431012456')))AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0))))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ((((~ (rt72.c1))) NOT BETWEEN (CAST(rt72.c1 AS INTEGER)) AND (((((((((rt72.c0)OR('-1431012456')))AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (- (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((CASE WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN vt0.c0 END)) AND ((CAST(t1.c67 AS REAL)))) WHERE (((t1.c0)>>(vt0.c0)) COLLATE NOCASE) ORDER BY ((((t1.c0)IS NOT(vt0.c0)))IS(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)>>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (- (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((CASE WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN vt0.c0 END)) AND ((CAST(t1.c67 AS REAL)))) ORDER BY ((((t1.c0)IS NOT(vt0.c0)))IS(vt0.c0)) DESC);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (- (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((CASE WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN vt0.c0 END)) AND ((CAST(t1.c67 AS REAL)))) WHERE (((t1.c0)>>(vt0.c0)) COLLATE NOCASE) ORDER BY ((((t1.c0)IS NOT(vt0.c0)))IS(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((t1.c0)>>(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (- (CAST(t1.c0 AS INTEGER))) FULL OUTER JOIN t1 ON (((t1.c0)) BETWEEN ((CASE WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c67 WHEN vt1.c0 THEN vt0.c0 END)) AND ((CAST(t1.c67 AS REAL)))) ORDER BY ((((t1.c0)IS NOT(vt0.c0)))IS(vt0.c0)) DESC);
SELECT * FROM vt0, rt72 WHERE (CASE WHEN (rt72.c0 IN ()) THEN ((rt72.c0)OR(rt72.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt72.c0 IN ()) THEN ((rt72.c0)OR(rt72.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (CASE WHEN (rt72.c0 IN ()) THEN ((rt72.c0)OR(rt72.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt72.c0 IN ()) THEN ((rt72.c0)OR(rt72.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (CASE WHEN (rt72.c0 IN ()) THEN ((rt72.c0)OR(rt72.c0)) ELSE vt0.c0 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>=(t1.c0)))>>(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>=(t1.c0)))>>(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>=(t1.c0)))>>(((vt0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>=(t1.c0)))>>(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)>=(t1.c0)))>>(((vt0.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) WHERE (((rt72.c1)>=(((((0.6916681300951363)OR(rt72.c1)))AND(vt1.c0))))) ORDER BY t1.c67 ASC;
SELECT SUM(count) FROM (SELECT ((((rt72.c1)>=(((((0.6916681300951363)OR(rt72.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, t1, rt72 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) ORDER BY t1.c67 ASC);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) WHERE (((rt72.c1)>=(((((0.6916681300951363)OR(rt72.c1)))AND(vt1.c0))))) ORDER BY t1.c67 ASC;
SELECT SUM(count) FROM (SELECT ((((rt72.c1)>=(((((0.6916681300951363)OR(rt72.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt0, t1, rt72 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) ORDER BY t1.c67 ASC);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 CROSS JOIN vt1 ON CAST(vt1.c0 AS INTEGER) WHERE (((rt72.c1)>=(((((0.6916681300951363)OR(rt72.c1)))AND(vt1.c0))))) ORDER BY t1.c67 ASC;
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN rt72.c0 THEN rt72.c2 END WHEN CASE WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN vt0.c0 THEN rt72.c2 ELSE rt72.c1 END THEN CAST(rt72.c0 AS INTEGER) WHEN CASE WHEN rt72.c2 THEN rt72.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt72.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY (((x'')) BETWEEN ((CAST(rt72.c1 AS NUMERIC))) AND ((((((rt72.c0)OR(vt0.c0)))AND(0.4696142251333508))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN rt72.c0 THEN rt72.c2 END WHEN CASE WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN vt0.c0 THEN rt72.c2 ELSE rt72.c1 END THEN CAST(rt72.c0 AS INTEGER) WHEN CASE WHEN rt72.c2 THEN rt72.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt72.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt72 NOT INDEXED, vt0, vt1 ORDER BY (((x'')) BETWEEN ((CAST(rt72.c1 AS NUMERIC))) AND ((((((rt72.c0)OR(vt0.c0)))AND(0.4696142251333508))))) ASC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN rt72.c0 THEN rt72.c2 END WHEN CASE WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN vt0.c0 THEN rt72.c2 ELSE rt72.c1 END THEN CAST(rt72.c0 AS INTEGER) WHEN CASE WHEN rt72.c2 THEN rt72.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt72.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY (((x'')) BETWEEN ((CAST(rt72.c1 AS NUMERIC))) AND ((((((rt72.c0)OR(vt0.c0)))AND(0.4696142251333508))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN rt72.c0 THEN rt72.c2 END WHEN CASE WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN vt0.c0 THEN rt72.c2 ELSE rt72.c1 END THEN CAST(rt72.c0 AS INTEGER) WHEN CASE WHEN rt72.c2 THEN rt72.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt72.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt72 NOT INDEXED, vt0, vt1 ORDER BY (((x'')) BETWEEN ((CAST(rt72.c1 AS NUMERIC))) AND ((((((rt72.c0)OR(vt0.c0)))AND(0.4696142251333508))))) ASC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN rt72.c0 THEN rt72.c2 END WHEN CASE WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN vt0.c0 THEN rt72.c2 ELSE rt72.c1 END THEN CAST(rt72.c0 AS INTEGER) WHEN CASE WHEN rt72.c2 THEN rt72.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt72.c0 ELSE vt1.c0 END THEN (vt1.c0 IN ()) END) ORDER BY (((x'')) BETWEEN ((CAST(rt72.c1 AS NUMERIC))) AND ((((((rt72.c0)OR(vt0.c0)))AND(0.4696142251333508))))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt72, vt0, t1 WHERE (x'67db');
SELECT SUM(count) FROM (SELECT ((x'67db') IS TRUE)  as count FROM vt1, rt72, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, rt72, vt0, t1 WHERE (x'67db');
SELECT SUM(count) FROM (SELECT ((x'67db') IS TRUE)  as count FROM vt1, rt72, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, rt72, vt0, t1 WHERE (x'67db');
SELECT COUNT(*) FROM rt72, t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL))<>((rt72.c0 IN ('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))!=((rt72.c0 IN (''))))) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL))<>((rt72.c0 IN ('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))!=((rt72.c0 IN (''))))) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt1, vt0 WHERE (((((vt0.c0) ISNULL))<>((rt72.c0 IN ('')))));
SELECT ALL COUNT(*) FROM vt1, t1 NOT INDEXED, rt72 INDEXED BY i89 WHERE (CAST(CAST(-2125639474 AS REAL) AS TEXT)) ORDER BY vt1.c0 ASC  NULLS LAST, ((t1.c0 COLLATE BINARY) NOT BETWEEN (t1.c67) AND ((+ (rt72.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(-2125639474 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, t1, rt72 INDEXED BY i89 ORDER BY vt1.c0 ASC  NULLS LAST, ((t1.c0 COLLATE BINARY) NOT BETWEEN (t1.c67) AND ((+ (rt72.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t1 NOT INDEXED, rt72 INDEXED BY i89 WHERE (CAST(CAST(-2125639474 AS REAL) AS TEXT)) ORDER BY vt1.c0 ASC  NULLS LAST, ((t1.c0 COLLATE BINARY) NOT BETWEEN (t1.c67) AND ((+ (rt72.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(-2125639474 AS REAL) AS TEXT)) IS TRUE)  as count FROM vt1, t1, rt72 INDEXED BY i89 ORDER BY vt1.c0 ASC  NULLS LAST, ((t1.c0 COLLATE BINARY) NOT BETWEEN (t1.c67) AND ((+ (rt72.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(1260225267)))AND(vt0.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY '1017989516'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(1260225267)))AND(vt0.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '1017989516'  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(1260225267)))AND(vt0.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY '1017989516'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)|(vt0.c0))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(1260225267)))AND(vt0.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY '1017989516'  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)|(vt0.c0))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))OR(1260225267)))AND(vt0.c0))) AND (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY '1017989516'  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c0) AND (rt72.c0)))-(vt0.c0))) ORDER BY ((((((t1.c0))<((vt1.c0)))))>(((rt72.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c1) NOT BETWEEN (rt72.c0) AND (rt72.c0)))-(vt0.c0))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ((((((t1.c0))<((vt1.c0)))))>(((rt72.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c0) AND (rt72.c0)))-(vt0.c0))) ORDER BY ((((((t1.c0))<((vt1.c0)))))>(((rt72.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c1) NOT BETWEEN (rt72.c0) AND (rt72.c0)))-(vt0.c0))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ((((((t1.c0))<((vt1.c0)))))>(((rt72.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c0) AND (rt72.c0)))-(vt0.c0))) ORDER BY ((((((t1.c0))<((vt1.c0)))))>(((rt72.c1 IN ())))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (CASE ((rt72.c1) NOT BETWEEN (rt72.c0) AND (t1.c67))  WHEN (((0.46282005824206285)) BETWEEN ((rt72.c0)) AND ((t1.c0))) THEN CASE WHEN rt72.c1 THEN 0.7192255134510532 WHEN t1.c0 THEN vt1.c0 WHEN rt72.c2 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt72.c1) NOT BETWEEN (rt72.c0) AND (t1.c67))  WHEN (((0.46282005824206285)) BETWEEN ((rt72.c0)) AND ((t1.c0))) THEN CASE WHEN rt72.c1 THEN 0.7192255134510532 WHEN t1.c0 THEN vt1.c0 WHEN rt72.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, rt72, t1);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (CASE ((rt72.c1) NOT BETWEEN (rt72.c0) AND (t1.c67))  WHEN (((0.46282005824206285)) BETWEEN ((rt72.c0)) AND ((t1.c0))) THEN CASE WHEN rt72.c1 THEN 0.7192255134510532 WHEN t1.c0 THEN vt1.c0 WHEN rt72.c2 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt72.c1) NOT BETWEEN (rt72.c0) AND (t1.c67))  WHEN (((0.46282005824206285)) BETWEEN ((rt72.c0)) AND ((t1.c0))) THEN CASE WHEN rt72.c1 THEN 0.7192255134510532 WHEN t1.c0 THEN vt1.c0 WHEN rt72.c2 THEN vt0.c0 END END) IS TRUE)  as count FROM vt1, vt0, rt72, t1);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (CASE ((rt72.c1) NOT BETWEEN (rt72.c0) AND (t1.c67))  WHEN (((0.46282005824206285)) BETWEEN ((rt72.c0)) AND ((t1.c0))) THEN CASE WHEN rt72.c1 THEN 0.7192255134510532 WHEN t1.c0 THEN vt1.c0 WHEN rt72.c2 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE t1.c67  WHEN vt1.c0 THEN vt1.c0 END)/((~ (t1.c67))))) ORDER BY ((CASE '-984137581'  WHEN t1.c67 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END)GLOB(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c67  WHEN vt1.c0 THEN vt1.c0 END)/((~ (t1.c67))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((CASE '-984137581'  WHEN t1.c67 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END)GLOB(CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE t1.c67  WHEN vt1.c0 THEN vt1.c0 END)/((~ (t1.c67))))) ORDER BY ((CASE '-984137581'  WHEN t1.c67 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END)GLOB(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE t1.c67  WHEN vt1.c0 THEN vt1.c0 END)/((~ (t1.c67))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((CASE '-984137581'  WHEN t1.c67 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END)GLOB(CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt1, t1 WHERE (((CASE t1.c67  WHEN vt1.c0 THEN vt1.c0 END)/((~ (t1.c67))))) ORDER BY ((CASE '-984137581'  WHEN t1.c67 THEN t1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END)GLOB(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM rt72, vt1 RIGHT OUTER JOIN t1 ON (+ (((t1.c67)|(vt1.c0)))) WHERE ((rt72.c0 IN (t1.c0, rt72.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt72.c0 IN (t1.c0, rt72.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt72, vt1 RIGHT OUTER JOIN t1 ON (+ (((t1.c67)|(vt1.c0)))));
SELECT COUNT(*) FROM rt72, vt1 RIGHT OUTER JOIN t1 ON (+ (((t1.c67)|(vt1.c0)))) WHERE ((rt72.c0 IN (t1.c0, rt72.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((rt72.c0 IN (t1.c0, rt72.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt72, vt1 RIGHT OUTER JOIN t1 ON (+ (((t1.c67)|(vt1.c0)))));
SELECT COUNT(*) FROM rt72, vt1 RIGHT OUTER JOIN t1 ON (+ (((t1.c67)|(vt1.c0)))) WHERE ((rt72.c0 IN (t1.c0, rt72.c0)) COLLATE RTRIM);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)OR(t1.c0))))) ORDER BY ((((((t1.c67, t1.c67, t1.c0, t1.c67, t1.c0))!=((t1.c67, NULL, t1.c67, t1.c0, t1.c0))), ((('', t1.c0, t1.c0, t1.c67, t1.c0)) BETWEEN ((t1.c0, t1.c67, '1~', t1.c67, t1.c0)) AND ((t1.c67, NULL, t1.c67, t1.c67, t1.c67))), t1.c67))>(((((((((('1d')AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)), ((t1.c0)<<(t1.c0)), NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c67, t1.c67, t1.c0, t1.c67, t1.c0))!=((t1.c67, NULL, t1.c67, t1.c0, t1.c0))), ((('', t1.c0, t1.c0, t1.c67, t1.c0)) BETWEEN ((t1.c0, t1.c67, '1~', t1.c67, t1.c0)) AND ((t1.c67, NULL, t1.c67, t1.c67, t1.c67))), t1.c67))>(((((((((('1d')AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)), ((t1.c0)<<(t1.c0)), NULL))) ASC);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)OR(t1.c0))))) ORDER BY ((((((t1.c67, t1.c67, t1.c0, t1.c67, t1.c0))!=((t1.c67, NULL, t1.c67, t1.c0, t1.c0))), ((('', t1.c0, t1.c0, t1.c67, t1.c0)) BETWEEN ((t1.c0, t1.c67, '1~', t1.c67, t1.c0)) AND ((t1.c67, NULL, t1.c67, t1.c67, t1.c67))), t1.c67))>(((((((((('1d')AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)), ((t1.c0)<<(t1.c0)), NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c0)OR(t1.c0))))) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c67, t1.c67, t1.c0, t1.c67, t1.c0))!=((t1.c67, NULL, t1.c67, t1.c0, t1.c0))), ((('', t1.c0, t1.c0, t1.c67, t1.c0)) BETWEEN ((t1.c0, t1.c67, '1~', t1.c67, t1.c0)) AND ((t1.c67, NULL, t1.c67, t1.c67, t1.c67))), t1.c67))>(((((((((('1d')AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)), ((t1.c0)<<(t1.c0)), NULL))) ASC);
SELECT ALL * FROM t1 WHERE ((~ (((t1.c0)OR(t1.c0))))) ORDER BY ((((((t1.c67, t1.c67, t1.c0, t1.c67, t1.c0))!=((t1.c67, NULL, t1.c67, t1.c0, t1.c0))), ((('', t1.c0, t1.c0, t1.c67, t1.c0)) BETWEEN ((t1.c0, t1.c67, '1~', t1.c67, t1.c0)) AND ((t1.c67, NULL, t1.c67, t1.c67, t1.c67))), t1.c67))>(((((((((('1d')AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)), ((t1.c0)<<(t1.c0)), NULL))) ASC;
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt72 ON ((((rt72.c0) BETWEEN (vt0.c0) AND (rt72.c2))) BETWEEN (CASE t1.c67  WHEN t1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 WHEN t1.c67 THEN rt72.c0 WHEN vt1.c0 THEN rt72.c2 WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (rt72.c0)))) WHERE ((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))AND(json_array(rt72.c1, t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))AND(json_array(rt72.c1, t1.c0)))) IS TRUE)  as count FROM t1, vt0, vt1 CROSS JOIN rt72 ON ((((rt72.c0) BETWEEN (vt0.c0) AND (rt72.c2))) BETWEEN (CASE t1.c67  WHEN t1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 WHEN t1.c67 THEN rt72.c0 WHEN vt1.c0 THEN rt72.c2 WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (rt72.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt72 ON ((((rt72.c0) BETWEEN (vt0.c0) AND (rt72.c2))) BETWEEN (CASE t1.c67  WHEN t1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 WHEN t1.c67 THEN rt72.c0 WHEN vt1.c0 THEN rt72.c2 WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (rt72.c0)))) WHERE ((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))AND(json_array(rt72.c1, t1.c0))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))AND(json_array(rt72.c1, t1.c0)))) IS TRUE)  as count FROM t1, vt0, vt1 CROSS JOIN rt72 ON ((((rt72.c0) BETWEEN (vt0.c0) AND (rt72.c2))) BETWEEN (CASE t1.c67  WHEN t1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 WHEN t1.c67 THEN rt72.c0 WHEN vt1.c0 THEN rt72.c2 WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (rt72.c0)))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 CROSS JOIN rt72 ON ((((rt72.c0) BETWEEN (vt0.c0) AND (rt72.c2))) BETWEEN (CASE t1.c67  WHEN t1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 WHEN t1.c67 THEN rt72.c0 WHEN vt1.c0 THEN rt72.c2 WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END) AND ((+ (rt72.c0)))) WHERE ((((((~ (vt1.c0)))AND(CAST(vt1.c0 AS NUMERIC))))AND(json_array(rt72.c1, t1.c0))));
SELECT * FROM t1 WHERE (((t1.c67)%(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c67)%(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c67)%(t1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c67)%(t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c67)%(t1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt72 INNER JOIN t1 ON (((((+ (vt1.c0)))AND(rt72.c1 COLLATE NOCASE)))AND(ABS(t1.c0))) FULL OUTER JOIN vt1 ON (((rt72.c1)) NOT BETWEEN ((((t1.c0)&(vt1.c0)))) AND ((TYPEOF(DISTINCT t1.c0)))) WHERE (CAST(rt72.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt72.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt72 INNER JOIN t1 ON (((((+ (vt1.c0)))AND(rt72.c1 COLLATE NOCASE)))AND(ABS(t1.c0))) FULL OUTER JOIN vt1 ON (((rt72.c1)) NOT BETWEEN ((((t1.c0)&(vt1.c0)))) AND ((TYPEOF(DISTINCT t1.c0)))));
SELECT ALL * FROM rt72 INNER JOIN t1 ON (((((+ (vt1.c0)))AND(rt72.c1 COLLATE NOCASE)))AND(ABS(t1.c0))) FULL OUTER JOIN vt1 ON (((rt72.c1)) NOT BETWEEN ((((t1.c0)&(vt1.c0)))) AND ((TYPEOF(DISTINCT t1.c0)))) WHERE (CAST(rt72.c1 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt72.c1 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM rt72 INNER JOIN t1 ON (((((+ (vt1.c0)))AND(rt72.c1 COLLATE NOCASE)))AND(ABS(t1.c0))) FULL OUTER JOIN vt1 ON (((rt72.c1)) NOT BETWEEN ((((t1.c0)&(vt1.c0)))) AND ((TYPEOF(DISTINCT t1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ('-794827046') ORDER BY (NOT ('815822928')) COLLATE BINARY, ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (('-794827046') IS TRUE)  as count FROM vt0 ORDER BY (NOT ('815822928')) COLLATE BINARY, ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE ('-794827046') ORDER BY (NOT ('815822928')) COLLATE BINARY, ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (('-794827046') IS TRUE)  as count FROM vt0 ORDER BY (NOT ('815822928')) COLLATE BINARY, ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 WHERE ('-794827046') ORDER BY (NOT ('815822928')) COLLATE BINARY, ((vt0.c0)==(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN (x'9f71ef92')))AND((~ (-1558815228)))))OR(NULL)))AND(0xffffffff9738e7d9 COLLATE NOCASE)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN (x'9f71ef92')))AND((~ (-1558815228)))))OR(NULL)))AND(0Xffffffff9738e7d9 COLLATE NOCASE)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN (x'9f71ef92')))AND((~ (-1558815228)))))OR(NULL)))AND(0xffffffff9738e7d9 COLLATE NOCASE)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN (x'9f71ef92')))AND((~ (-1558815228)))))OR(NULL)))AND(0Xffffffff9738e7d9 COLLATE NOCASE)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((vt0.c0 IN (x'9f71ef92')))AND((~ (-1558815228)))))OR(NULL)))AND(0xffffffff9738e7d9 COLLATE NOCASE)))OR(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON rt72.c0 CROSS JOIN vt0 ON CAST((NOT (rt72.c0)) AS INTEGER) WHERE ((((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))<(CAST(rt72.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))<(CAST(rt72.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt72 FULL OUTER JOIN t1 ON rt72.c0 CROSS JOIN vt0 ON CAST((NOT (rt72.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON rt72.c0 CROSS JOIN vt0 ON CAST((NOT (rt72.c0)) AS INTEGER) WHERE ((((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))<(CAST(rt72.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))<(CAST(rt72.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt72 FULL OUTER JOIN t1 ON rt72.c0 CROSS JOIN vt0 ON CAST((NOT (rt72.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON rt72.c0 CROSS JOIN vt0 ON CAST((NOT (rt72.c0)) AS INTEGER) WHERE ((((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))<(CAST(rt72.c0 AS TEXT))));
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c0)GLOB(vt0.c0)) THEN -1.558815228E9 ELSE ((((((((t1.c67)OR(vt1.c0)))OR(NULL)))OR(t1.c0)))AND(vt0.c0)) END) ORDER BY 906900193;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)GLOB(vt0.c0)) THEN -1.558815228E9 ELSE ((((((((t1.c67)OR(vt1.c0)))OR(NULL)))OR(t1.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY 906900193);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c0)GLOB(vt0.c0)) THEN -1.558815228E9 ELSE ((((((((t1.c67)OR(vt1.c0)))OR(NULL)))OR(t1.c0)))AND(vt0.c0)) END) ORDER BY 906900193;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c0)GLOB(vt0.c0)) THEN -1.558815228E9 ELSE ((((((((t1.c67)OR(vt1.c0)))OR(NULL)))OR(t1.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY 906900193);
SELECT ALL COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ((t1.c67) IS TRUE)  as count FROM rt72, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ((t1.c67) IS TRUE)  as count FROM rt72, t1, vt0, vt1);
SELECT ALL COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (t1.c67);
SELECT * FROM vt0 CROSS JOIN t1 ON (((t1.c67 IN ()))OR(((vt0.c0)IS NOT(vt0.c0)))) WHERE (((((((NULL)AND(t1.c67)))AND(vt0.c0)))<<(t1.c0))) ORDER BY ((((t1.c67)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(t1.c67)))AND(vt0.c0)))<<(t1.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c67 IN ()))OR(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((((t1.c67)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((t1.c67 IN ()))OR(((vt0.c0)IS NOT(vt0.c0)))) WHERE (((((((NULL)AND(t1.c67)))AND(vt0.c0)))<<(t1.c0))) ORDER BY ((((t1.c67)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(t1.c67)))AND(vt0.c0)))<<(t1.c0))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c67 IN ()))OR(((vt0.c0)IS NOT(vt0.c0)))) ORDER BY ((((t1.c67)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN t1 ON (((t1.c67 IN ()))OR(((vt0.c0)IS NOT(vt0.c0)))) WHERE (((((((NULL)AND(t1.c67)))AND(vt0.c0)))<<(t1.c0))) ORDER BY ((((t1.c67)AND(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((((((((vt0.c0)OR(t1.c0)))AND(t1.c0)))AND(t1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON ((CAST(rt72.c1 AS TEXT))<=(((rt72.c1) IS FALSE))) WHERE ((((rt72.c2)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((rt72.c1 IN ()))))) ORDER BY ((rt72.c0)||(COALESCE(DISTINCT rt72.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c2)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((rt72.c1 IN ()))))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt1 ON ((CAST(rt72.c1 AS TEXT))<=(((rt72.c1) IS FALSE))) ORDER BY ((rt72.c0)||(COALESCE(DISTINCT rt72.c0, vt1.c0))));
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON ((CAST(rt72.c1 AS TEXT))<=(((rt72.c1) IS FALSE))) WHERE ((((rt72.c2)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((rt72.c1 IN ()))))) ORDER BY ((rt72.c0)||(COALESCE(DISTINCT rt72.c0, vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c2)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((rt72.c1 IN ()))))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt1 ON ((CAST(rt72.c1 AS TEXT))<=(((rt72.c1) IS FALSE))) ORDER BY ((rt72.c0)||(COALESCE(DISTINCT rt72.c0, vt1.c0))));
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON ((CAST(rt72.c1 AS TEXT))<=(((rt72.c1) IS FALSE))) WHERE ((((rt72.c2)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((rt72.c1 IN ()))))) ORDER BY ((rt72.c0)||(COALESCE(DISTINCT rt72.c0, vt1.c0)));
SELECT COUNT(*) FROM rt72 WHERE ((rt72.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt72.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt72);
SELECT COUNT(*) FROM rt72 WHERE ((rt72.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt72.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt72);
SELECT COUNT(*) FROM rt72 WHERE ((rt72.c1 COLLATE BINARY IN ()));
SELECT * FROM t1, vt0, rt72 WHERE (HEX((((rt72.c1, vt0.c0, rt72.c2)) NOT BETWEEN ((t1.c67, '1656297045', vt0.c0)) AND ((t1.c0, rt72.c2, t1.c67)))));
SELECT SUM(count) FROM (SELECT ((HEX((((rt72.c1, vt0.c0, rt72.c2)) NOT BETWEEN ((t1.c67, '1656297045', vt0.c0)) AND ((t1.c0, rt72.c2, t1.c67))))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT * FROM t1, vt0, rt72 WHERE (HEX((((rt72.c1, vt0.c0, rt72.c2)) NOT BETWEEN ((t1.c67, '1656297045', vt0.c0)) AND ((t1.c0, rt72.c2, t1.c67)))));
SELECT SUM(count) FROM (SELECT ((HEX((((rt72.c1, vt0.c0, rt72.c2)) NOT BETWEEN ((t1.c67, '1656297045', vt0.c0)) AND ((t1.c0, rt72.c2, t1.c67))))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT * FROM t1, vt0, rt72 WHERE (HEX((((rt72.c1, vt0.c0, rt72.c2)) NOT BETWEEN ((t1.c67, '1656297045', vt0.c0)) AND ((t1.c0, rt72.c2, t1.c67)))));
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (t1.c67)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t1.c67)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (t1.c67)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t1.c67)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1);
SELECT COUNT(*) FROM vt0, t1 WHERE ((~ (t1.c67)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (t1.c0) ORDER BY ((CAST(t1.c0 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY ((CAST(t1.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (t1.c0) ORDER BY ((CAST(t1.c0 AS BLOB)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY ((CAST(t1.c0 AS BLOB)) IS TRUE));
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (t1.c0) ORDER BY ((CAST(t1.c0 AS BLOB)) IS TRUE);
SELECT * FROM rt72, vt0, t1 WHERE (CASE WHEN t1.c67 COLLATE BINARY THEN CASE WHEN t1.c67 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c67 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c0 THEN t1.c67 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c67 COLLATE BINARY THEN CASE WHEN t1.c67 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c67 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c0 THEN t1.c67 END END) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT * FROM rt72, vt0, t1 WHERE (CASE WHEN t1.c67 COLLATE BINARY THEN CASE WHEN t1.c67 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c67 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c0 THEN t1.c67 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c67 COLLATE BINARY THEN CASE WHEN t1.c67 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c67 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c0 THEN t1.c67 END END) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT * FROM rt72, vt0, t1 WHERE (CASE WHEN t1.c67 COLLATE BINARY THEN CASE WHEN t1.c67 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c67 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN t1.c0 THEN t1.c67 END END);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((CAST(t1.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM t1 NATURAL JOIN rt72);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((CAST(t1.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM t1 NATURAL JOIN rt72);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((CAST(t1.c0 AS BLOB) IN ()));
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((+ (t1.c0)))OR((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c67, vt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c67))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t1.c67)))OR(t1.c67)))AND(t1.c0)))AND(vt1.c0)))GLOB(((t1.c67) IS TRUE))) DESC, CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN (+ (t1.c67)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c0)))OR((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c67, vt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c67))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((((((vt1.c0)OR(t1.c67)))OR(t1.c67)))AND(t1.c0)))AND(vt1.c0)))GLOB(((t1.c67) IS TRUE))) DESC, CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN (+ (t1.c67)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((+ (t1.c0)))OR((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c67, vt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c67))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t1.c67)))OR(t1.c67)))AND(t1.c0)))AND(vt1.c0)))GLOB(((t1.c67) IS TRUE))) DESC, CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN (+ (t1.c67)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c0)))OR((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c67, vt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c67))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((((((vt1.c0)OR(t1.c67)))OR(t1.c67)))AND(t1.c0)))AND(vt1.c0)))GLOB(((t1.c67) IS TRUE))) DESC, CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN (+ (t1.c67)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((((((+ (t1.c0)))OR((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c67, vt1.c0, t1.c0)) AND ((t1.c0, t1.c0, t1.c67))))))OR(((x'') NOT BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((((((((vt1.c0)OR(t1.c67)))OR(t1.c67)))AND(t1.c0)))AND(vt1.c0)))GLOB(((t1.c67) IS TRUE))) DESC, CASE WHEN ((t1.c0)LIKE(t1.c0)) THEN (+ (t1.c67)) END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c0 IN ()))));
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE ((((~ (rt72.c0)))%(LIKELIHOOD(DISTINCT rt72.c1, 0.9321395130468274))));
SELECT SUM(count) FROM (SELECT (((((~ (rt72.c0)))%(LIKELIHOOD(DISTINCT rt72.c1, 0.9321395130468274)))) IS TRUE)  as count FROM t1, vt1, rt72);
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE ((((~ (rt72.c0)))%(LIKELIHOOD(DISTINCT rt72.c1, 0.9321395130468274))));
SELECT SUM(count) FROM (SELECT (((((~ (rt72.c0)))%(LIKELIHOOD(DISTINCT rt72.c1, 0.9321395130468274)))) IS TRUE)  as count FROM t1, vt1, rt72);
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE ((((~ (rt72.c0)))%(LIKELIHOOD(DISTINCT rt72.c1, 0.9321395130468274))));
SELECT * FROM vt1, vt0, rt72, t1 WHERE (((((0.6499986827027253) BETWEEN (t1.c67) AND (rt72.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (vt1.c0))))) ORDER BY (((NULL) ISNULL) IN ((+ (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6499986827027253) BETWEEN (t1.c67) AND (rt72.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY (((NULL) ISNULL) IN ((+ (t1.c0)))) ASC);
SELECT * FROM vt1, vt0, rt72, t1 WHERE (((((0.6499986827027253) BETWEEN (t1.c67) AND (rt72.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (vt1.c0))))) ORDER BY (((NULL) ISNULL) IN ((+ (t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6499986827027253) BETWEEN (t1.c67) AND (rt72.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY (((NULL) ISNULL) IN ((+ (t1.c0)))) ASC);
SELECT * FROM vt1, vt0, rt72, t1 WHERE (((((0.6499986827027253) BETWEEN (t1.c67) AND (rt72.c2))) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (vt1.c0))))) ORDER BY (((NULL) ISNULL) IN ((+ (t1.c0)))) ASC;
SELECT ALL * FROM rt72, t1 INNER JOIN vt1 ON ((0.2380086986940143) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (json_valid(rt72.c1)) AND (((vt1.c0)IS(vt1.c0)))) WHERE ((((vt1.c0 IN (rt72.c0, t1.c67))) NOT BETWEEN (((t1.c67) IS TRUE)) AND (CAST(rt72.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt72.c0, t1.c67))) NOT BETWEEN (((t1.c67) IS TRUE)) AND (CAST(rt72.c2 AS BLOB)))) IS TRUE)  as count FROM rt72, t1 INNER JOIN vt1 ON ((0.2380086986940143) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (json_valid(rt72.c1)) AND (((vt1.c0)IS(vt1.c0)))));
SELECT ALL * FROM rt72, t1 INNER JOIN vt1 ON ((0.2380086986940143) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (json_valid(rt72.c1)) AND (((vt1.c0)IS(vt1.c0)))) WHERE ((((vt1.c0 IN (rt72.c0, t1.c67))) NOT BETWEEN (((t1.c67) IS TRUE)) AND (CAST(rt72.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt72.c0, t1.c67))) NOT BETWEEN (((t1.c67) IS TRUE)) AND (CAST(rt72.c2 AS BLOB)))) IS TRUE)  as count FROM rt72, t1 INNER JOIN vt1 ON ((0.2380086986940143) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (json_valid(rt72.c1)) AND (((vt1.c0)IS(vt1.c0)))));
SELECT ALL * FROM rt72, t1 INNER JOIN vt1 ON ((0.2380086986940143) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0 IN ())) NOT BETWEEN (json_valid(rt72.c1)) AND (((vt1.c0)IS(vt1.c0)))) WHERE ((((vt1.c0 IN (rt72.c0, t1.c67))) NOT BETWEEN (((t1.c67) IS TRUE)) AND (CAST(rt72.c2 AS BLOB))));
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY '%' DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '%' DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY '%' DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '%' DESC);
SELECT * FROM vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))%(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY '%' DESC;
SELECT COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt72 ON ((- (rt72.c1)) IN ()) WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE rt72.c2  WHEN t1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CASE rt72.c2  WHEN t1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t1 FULL OUTER JOIN rt72 ON ((- (rt72.c1)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt72 ON ((- (rt72.c1)) IN ()) WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE rt72.c2  WHEN t1.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN CASE rt72.c2  WHEN t1.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t1 FULL OUTER JOIN rt72 ON ((- (rt72.c1)) IN ()));
SELECT COUNT(*) FROM vt0, vt1, t1 FULL OUTER JOIN rt72 ON ((- (rt72.c1)) IN ()) WHERE (CASE WHEN (vt0.c0 IN ()) THEN CASE rt72.c2  WHEN t1.c0 THEN vt0.c0 END END);
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t1 ON ((rt72.c0 COLLATE BINARY)||(CASE WHEN NULL THEN rt72.c1 END)) RIGHT OUTER JOIN rt72 ON ((((((((UPPER(t1.c67))OR((t1.c0 IN (rt72.c1)))))OR(((t1.c67)LIKE(rt72.c0)))))AND(((rt72.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(t1.c0 COLLATE NOCASE)) WHERE (900298037);
SELECT SUM(count) FROM (SELECT ((900298037) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON ((rt72.c0 COLLATE BINARY)||(CASE WHEN NULL THEN rt72.c1 END)) RIGHT OUTER JOIN rt72 ON ((((((((UPPER(t1.c67))OR((t1.c0 IN (rt72.c1)))))OR(((t1.c67)LIKE(rt72.c0)))))AND(((rt72.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(t1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 CROSS JOIN t1 ON ((rt72.c0 COLLATE BINARY)||(CASE WHEN NULL THEN rt72.c1 END)) RIGHT OUTER JOIN rt72 ON ((((((((UPPER(t1.c67))OR((t1.c0 IN (rt72.c1)))))OR(((t1.c67)LIKE(rt72.c0)))))AND(((rt72.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(t1.c0 COLLATE NOCASE)) WHERE (900298037);
SELECT SUM(count) FROM (SELECT ((900298037) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t1 ON ((rt72.c0 COLLATE BINARY)||(CASE WHEN NULL THEN rt72.c1 END)) RIGHT OUTER JOIN rt72 ON ((((((((UPPER(t1.c67))OR((t1.c0 IN (rt72.c1)))))OR(((t1.c67)LIKE(rt72.c0)))))AND(((rt72.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))OR(t1.c0 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7437262291895184 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7437262291895184 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7437262291895184 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7437262291895184 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (CASE NULL  WHEN vt1.c0 THEN vt1.c0 ELSE 0.7437262291895184 END)));
SELECT * FROM vt0, rt72, t1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM vt0, rt72, t1);
SELECT * FROM vt0, rt72, t1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM vt0, rt72, t1);
SELECT * FROM vt0, rt72, t1 WHERE (rt72.c1);
SELECT ALL * FROM vt1, rt72, t1 WHERE (LIKELY(rt72.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt72.c2)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT ALL * FROM vt1, rt72, t1 WHERE (LIKELY(rt72.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt72.c2)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT ALL * FROM vt1, rt72, t1 WHERE (LIKELY(rt72.c2));
SELECT ALL * FROM vt0 WHERE (0.15173625052063555) ORDER BY ((TRIM(vt0.c0))%(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((0.15173625052063555) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))%(NULL)) DESC);
SELECT ALL * FROM vt0 WHERE (0.15173625052063555) ORDER BY ((TRIM(vt0.c0))%(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((0.15173625052063555) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c0))%(NULL)) DESC);
SELECT ALL * FROM vt0 WHERE (0.15173625052063555) ORDER BY ((TRIM(vt0.c0))%(NULL)) DESC;
SELECT ALL * FROM vt1, t1 CROSS JOIN rt72 ON (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((t1.c67) IS TRUE))) LEFT OUTER JOIN vt0 ON CAST((((rt72.c2, rt72.c2, t1.c0))<((rt72.c1, vt0.c0, t1.c0))) AS NUMERIC) WHERE (CASE WHEN (((vt1.c0))<((rt72.c1))) THEN ((((rt72.c1)OR(rt72.c0)))OR(rt72.c1)) WHEN ((t1.c0) NOT NULL) THEN ((rt72.c2)>(rt72.c1)) WHEN CASE rt72.c1  WHEN t1.c0 THEN rt72.c1 END THEN ((rt72.c0)*(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0))<((rt72.c1))) THEN ((((rt72.c1)OR(rt72.c0)))OR(rt72.c1)) WHEN ((t1.c0) NOT NULL) THEN ((rt72.c2)>(rt72.c1)) WHEN CASE rt72.c1  WHEN t1.c0 THEN rt72.c1 END THEN ((rt72.c0)*(t1.c0)) END) IS TRUE)  as count FROM vt1, t1 CROSS JOIN rt72 ON (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((t1.c67) IS TRUE))) LEFT OUTER JOIN vt0 ON CAST((((rt72.c2, rt72.c2, t1.c0))<((rt72.c1, vt0.c0, t1.c0))) AS NUMERIC));
SELECT ALL * FROM vt1, t1 CROSS JOIN rt72 ON (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((t1.c67) IS TRUE))) LEFT OUTER JOIN vt0 ON CAST((((rt72.c2, rt72.c2, t1.c0))<((rt72.c1, vt0.c0, t1.c0))) AS NUMERIC) WHERE (CASE WHEN (((vt1.c0))<((rt72.c1))) THEN ((((rt72.c1)OR(rt72.c0)))OR(rt72.c1)) WHEN ((t1.c0) NOT NULL) THEN ((rt72.c2)>(rt72.c1)) WHEN CASE rt72.c1  WHEN t1.c0 THEN rt72.c1 END THEN ((rt72.c0)*(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0))<((rt72.c1))) THEN ((((rt72.c1)OR(rt72.c0)))OR(rt72.c1)) WHEN ((t1.c0) NOT NULL) THEN ((rt72.c2)>(rt72.c1)) WHEN CASE rt72.c1  WHEN t1.c0 THEN rt72.c1 END THEN ((rt72.c0)*(t1.c0)) END) IS TRUE)  as count FROM vt1, t1 CROSS JOIN rt72 ON (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((t1.c67) IS TRUE))) LEFT OUTER JOIN vt0 ON CAST((((rt72.c2, rt72.c2, t1.c0))<((rt72.c1, vt0.c0, t1.c0))) AS NUMERIC));
SELECT ALL * FROM vt1, t1 CROSS JOIN rt72 ON (((((t1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))||(((t1.c67) IS TRUE))) LEFT OUTER JOIN vt0 ON CAST((((rt72.c2, rt72.c2, t1.c0))<((rt72.c1, vt0.c0, t1.c0))) AS NUMERIC) WHERE (CASE WHEN (((vt1.c0))<((rt72.c1))) THEN ((((rt72.c1)OR(rt72.c0)))OR(rt72.c1)) WHEN ((t1.c0) NOT NULL) THEN ((rt72.c2)>(rt72.c1)) WHEN CASE rt72.c1  WHEN t1.c0 THEN rt72.c1 END THEN ((rt72.c0)*(t1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (NOT (LTRIM(t1.c0, t1.c0))) WHERE (((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c67)) AND ((t1.c0))))))OR((~ (t1.c0)))))AND(((t1.c67) NOT NULL))))OR(((t1.c67) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c67)) AND ((t1.c0))))))OR((~ (t1.c0)))))AND(((t1.c67) NOT NULL))))OR(((t1.c67) NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (NOT (LTRIM(t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (NOT (LTRIM(t1.c0, t1.c0))) WHERE (((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c67)) AND ((t1.c0))))))OR((~ (t1.c0)))))AND(((t1.c67) NOT NULL))))OR(((t1.c67) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c67)) AND ((t1.c0))))))OR((~ (t1.c0)))))AND(((t1.c67) NOT NULL))))OR(((t1.c67) NOT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON (NOT (LTRIM(t1.c0, t1.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON (NOT (LTRIM(t1.c0, t1.c0))) WHERE (((((((((((t1.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)))AND((((vt0.c0)) NOT BETWEEN ((t1.c67)) AND ((t1.c0))))))OR((~ (t1.c0)))))AND(((t1.c67) NOT NULL))))OR(((t1.c67) NOT NULL))));
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((vt0.c0 IN (vt0.c0)))<(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))<(vt1.c0))) IS TRUE)  as count FROM vt1, t1, vt0, rt72 NOT INDEXED);
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((vt0.c0 IN (vt0.c0)))<(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))<(vt1.c0))) IS TRUE)  as count FROM vt1, t1, vt0, rt72 NOT INDEXED);
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((vt0.c0 IN (vt0.c0)))<(vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, (('-988324411')&(vt0.c0)))) ORDER BY ((ABS(vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(9.75169633E8))) AND (IFNULL(vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, (('-988324411')&(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((ABS(vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(9.75169633E8))) AND (IFNULL(vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, (('-988324411')&(vt0.c0)))) ORDER BY ((ABS(vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(9.75169633E8))) AND (IFNULL(vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, (('-988324411')&(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((ABS(vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(9.75169633E8))) AND (IFNULL(vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, (('-988324411')&(vt0.c0)))) ORDER BY ((ABS(vt0.c0)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(9.75169633E8))) AND (IFNULL(vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))+(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM t1 WHERE ((((~ (t1.c67))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c67))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((~ (t1.c67))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t1.c67))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((~ (t1.c67))) ISNULL));
SELECT COUNT(*) FROM vt0, rt72 WHERE (LIKELIHOOD(CASE WHEN rt72.c1 THEN rt72.c2 END, 0.43161622503415187)) ORDER BY vt0.c0 ASC, CASE (('T#') ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN json_insert(0x2f4b6910, rt72.c2, rt72.c2) WHEN rt72.c2 THEN (NOT (rt72.c0)) WHEN CAST(rt72.c1 AS BLOB) THEN ((((rt72.c1)AND(rt72.c2)))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN rt72.c1 THEN rt72.c2 END, 0.43161622503415187)) IS TRUE)  as count FROM vt0, rt72 ORDER BY vt0.c0 ASC, CASE (('T#') ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN json_insert(0x2f4b6910, rt72.c2, rt72.c2) WHEN rt72.c2 THEN (NOT (rt72.c0)) WHEN CAST(rt72.c1 AS BLOB) THEN ((((rt72.c1)AND(rt72.c2)))AND(NULL)) END);
SELECT COUNT(*) FROM vt0, rt72 WHERE (LIKELIHOOD(CASE WHEN rt72.c1 THEN rt72.c2 END, 0.43161622503415187)) ORDER BY vt0.c0 ASC, CASE (('T#') ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN json_insert(0x2f4b6910, rt72.c2, rt72.c2) WHEN rt72.c2 THEN (NOT (rt72.c0)) WHEN CAST(rt72.c1 AS BLOB) THEN ((((rt72.c1)AND(rt72.c2)))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE WHEN rt72.c1 THEN rt72.c2 END, 0.43161622503415187)) IS TRUE)  as count FROM vt0, rt72 ORDER BY vt0.c0 ASC, CASE (('T#') ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN json_insert(0x2f4b6910, rt72.c2, rt72.c2) WHEN rt72.c2 THEN (NOT (rt72.c0)) WHEN CAST(rt72.c1 AS BLOB) THEN ((((rt72.c1)AND(rt72.c2)))AND(NULL)) END);
SELECT COUNT(*) FROM vt0, rt72 WHERE (LIKELIHOOD(CASE WHEN rt72.c1 THEN rt72.c2 END, 0.43161622503415187)) ORDER BY vt0.c0 ASC, CASE (('T#') ISNULL)  WHEN vt0.c0 COLLATE BINARY THEN json_insert(0x2f4b6910, rt72.c2, rt72.c2) WHEN rt72.c2 THEN (NOT (rt72.c0)) WHEN CAST(rt72.c1 AS BLOB) THEN ((((rt72.c1)AND(rt72.c2)))AND(NULL)) END;
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((((((((t1.c0)AND(t1.c0)))OR(vt1.c0)))AND(t1.c67)))OR(t1.c67)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c0)AND(t1.c0)))OR(vt1.c0)))AND(t1.c67)))OR(t1.c67)) AS BLOB)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((((((((t1.c0)AND(t1.c0)))OR(vt1.c0)))AND(t1.c67)))OR(t1.c67)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c0)AND(t1.c0)))OR(vt1.c0)))AND(t1.c67)))OR(t1.c67)) AS BLOB)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT COUNT(*) FROM vt1, t1, vt0 WHERE (CAST(((((((((t1.c0)AND(t1.c0)))OR(vt1.c0)))AND(t1.c67)))OR(t1.c67)) AS BLOB));
SELECT ALL COUNT(*) FROM t1, rt72, vt0, vt1 WHERE (((((rt72.c2)<(x'')))%(((t1.c0) NOTNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((rt72.c0)AND(t1.c67)))OR(vt0.c0))) AND (t1.c0 COLLATE NOCASE)) ASC, ((((t1.c0)-(rt72.c2))) NOTNULL), json_object(vt0.c0, (('0.47308434261627985') NOT BETWEEN (rt72.c2) AND (rt72.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2)<(x'')))%(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY ((vt0.c0) NOT BETWEEN (((((rt72.c0)AND(t1.c67)))OR(vt0.c0))) AND (t1.c0 COLLATE NOCASE)) ASC, ((((t1.c0)-(rt72.c2))) NOTNULL), json_object(vt0.c0, (('0.47308434261627985') NOT BETWEEN (rt72.c2) AND (rt72.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt72, vt0, vt1 WHERE (((((rt72.c2)<(x'')))%(((t1.c0) NOTNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((rt72.c0)AND(t1.c67)))OR(vt0.c0))) AND (t1.c0 COLLATE NOCASE)) ASC, ((((t1.c0)-(rt72.c2))) NOTNULL), json_object(vt0.c0, (('0.47308434261627985') NOT BETWEEN (rt72.c2) AND (rt72.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2)<(x'')))%(((t1.c0) NOTNULL)))) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY ((vt0.c0) NOT BETWEEN (((((rt72.c0)AND(t1.c67)))OR(vt0.c0))) AND (t1.c0 COLLATE NOCASE)) ASC, ((((t1.c0)-(rt72.c2))) NOTNULL), json_object(vt0.c0, (('0.47308434261627985') NOT BETWEEN (rt72.c2) AND (rt72.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt72, vt0, vt1 WHERE (((((rt72.c2)<(x'')))%(((t1.c0) NOTNULL)))) ORDER BY ((vt0.c0) NOT BETWEEN (((((rt72.c0)AND(t1.c67)))OR(vt0.c0))) AND (t1.c0 COLLATE NOCASE)) ASC, ((((t1.c0)-(rt72.c2))) NOTNULL), json_object(vt0.c0, (('0.47308434261627985') NOT BETWEEN (rt72.c2) AND (rt72.c1))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c0 AS REAL)) NOT BETWEEN (rt72.c1) AND (((rt72.c2) NOTNULL)))) ORDER BY (((- (rt72.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c0 AS REAL)) NOT BETWEEN (rt72.c1) AND (((rt72.c2) NOTNULL)))) IS TRUE)  as count FROM rt72 ORDER BY (((- (rt72.c2))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c0 AS REAL)) NOT BETWEEN (rt72.c1) AND (((rt72.c2) NOTNULL)))) ORDER BY (((- (rt72.c2))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c0 AS REAL)) NOT BETWEEN (rt72.c1) AND (((rt72.c2) NOTNULL)))) IS TRUE)  as count FROM rt72 ORDER BY (((- (rt72.c2))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c0 AS REAL)) NOT BETWEEN (rt72.c1) AND (((rt72.c2) NOTNULL)))) ORDER BY (((- (rt72.c2))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt72, vt0 WHERE (LIKELIHOOD(((rt72.c0) NOT NULL), 0.1824022320624068));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt72.c0) NOT NULL), 0.1824022320624068)) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL * FROM rt72, vt0 WHERE (LIKELIHOOD(((rt72.c0) NOT NULL), 0.1824022320624068));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt72.c0) NOT NULL), 0.1824022320624068)) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL * FROM rt72, vt0 WHERE (LIKELIHOOD(((rt72.c0) NOT NULL), 0.1824022320624068));
SELECT ALL * FROM vt1, vt0, rt72 WHERE (CASE WHEN SUBSTR(vt0.c0, rt72.c1) THEN rt72.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SUBSTR(vt0.c0, rt72.c1) THEN rt72.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0, rt72);
SELECT ALL * FROM vt1, vt0, rt72 WHERE (CASE WHEN SUBSTR(vt0.c0, rt72.c1) THEN rt72.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SUBSTR(vt0.c0, rt72.c1) THEN rt72.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt1, vt0, rt72);
SELECT ALL * FROM vt1, vt0, rt72 WHERE (CASE WHEN SUBSTR(vt0.c0, rt72.c1) THEN rt72.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t1, rt72 FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c67 THEN rt72.c1 ELSE rt72.c1 END) ISNULL) WHERE (((((rt72.c0) NOTNULL))*((t1.c67 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0) NOTNULL))*((t1.c67 IN ())))) IS TRUE)  as count FROM t1, rt72 FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c67 THEN rt72.c1 ELSE rt72.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM t1, rt72 FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c67 THEN rt72.c1 ELSE rt72.c1 END) ISNULL) WHERE (((((rt72.c0) NOTNULL))*((t1.c67 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0) NOTNULL))*((t1.c67 IN ())))) IS TRUE)  as count FROM t1, rt72 FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c67 THEN rt72.c1 ELSE rt72.c1 END) ISNULL));
SELECT ALL COUNT(*) FROM t1, rt72 FULL OUTER JOIN vt1 ON ((CASE WHEN t1.c67 THEN rt72.c1 ELSE rt72.c1 END) ISNULL) WHERE (((((rt72.c0) NOTNULL))*((t1.c67 IN ()))));
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c67 END THEN '-1558815228' WHEN (vt0.c0 IN ()) THEN (+ (t1.c0)) ELSE NULL END) ORDER BY ((+ (vt1.c0)) IN ((t1.c67 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c67 END THEN '-1558815228' WHEN (vt0.c0 IN ()) THEN (+ (t1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN vt1 ORDER BY ((+ (vt1.c0)) IN ((t1.c67 IN ()))) ASC);
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c67 END THEN '-1558815228' WHEN (vt0.c0 IN ()) THEN (+ (t1.c0)) ELSE NULL END) ORDER BY ((+ (vt1.c0)) IN ((t1.c67 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c67 END THEN '-1558815228' WHEN (vt0.c0 IN ()) THEN (+ (t1.c0)) ELSE NULL END) IS TRUE)  as count FROM vt0, t1 NATURAL JOIN vt1 ORDER BY ((+ (vt1.c0)) IN ((t1.c67 IN ()))) ASC);
SELECT * FROM vt0, t1 NATURAL JOIN vt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) THEN (~ (t1.c0)) WHEN CASE WHEN t1.c0 THEN vt0.c0 ELSE t1.c67 END THEN '-1558815228' WHEN (vt0.c0 IN ()) THEN (+ (t1.c0)) ELSE NULL END) ORDER BY ((+ (vt1.c0)) IN ((t1.c67 IN ()))) ASC;
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((((((rt72.c2)AND(rt72.c1)))OR(t1.c0)))-(((x'f8be') BETWEEN (rt72.c1) AND (rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c2)AND(rt72.c1)))OR(t1.c0)))-(((x'f8be') BETWEEN (rt72.c1) AND (rt72.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt72);
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((((((rt72.c2)AND(rt72.c1)))OR(t1.c0)))-(((x'f8be') BETWEEN (rt72.c1) AND (rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c2)AND(rt72.c1)))OR(t1.c0)))-(((x'f8be') BETWEEN (rt72.c1) AND (rt72.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt72);
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((((((rt72.c2)AND(rt72.c1)))OR(t1.c0)))-(((x'f8be') BETWEEN (rt72.c1) AND (rt72.c0)))));
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE ((((~ (rt72.c1))) NOT BETWEEN (((((rt72.c0)AND(rt72.c1)))OR(vt1.c0))) AND (((vt0.c0)||(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT NULL))OR((rt72.c0 IN ()))))OR(((rt72.c2) NOT BETWEEN (vt1.c0) AND (NULL)))))OR(CAST(vt0.c0 AS INTEGER))))AND(rt72.c0 COLLATE BINARY)))AND((- (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST, 1.612801361E9;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt72.c1))) NOT BETWEEN (((((rt72.c0)AND(rt72.c1)))OR(vt1.c0))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt72, vt1, vt0 ORDER BY ((((((((((((((vt0.c0) NOT NULL))OR((rt72.c0 IN ()))))OR(((rt72.c2) NOT BETWEEN (vt1.c0) AND (NULL)))))OR(CAST(vt0.c0 AS INTEGER))))AND(rt72.c0 COLLATE BINARY)))AND((- (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST, 1.612801361E9);
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE ((((~ (rt72.c1))) NOT BETWEEN (((((rt72.c0)AND(rt72.c1)))OR(vt1.c0))) AND (((vt0.c0)||(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT NULL))OR((rt72.c0 IN ()))))OR(((rt72.c2) NOT BETWEEN (vt1.c0) AND (NULL)))))OR(CAST(vt0.c0 AS INTEGER))))AND(rt72.c0 COLLATE BINARY)))AND((- (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST, 1.612801361E9;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt72.c1))) NOT BETWEEN (((((rt72.c0)AND(rt72.c1)))OR(vt1.c0))) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM rt72, vt1, vt0 ORDER BY ((((((((((((((vt0.c0) NOT NULL))OR((rt72.c0 IN ()))))OR(((rt72.c2) NOT BETWEEN (vt1.c0) AND (NULL)))))OR(CAST(vt0.c0 AS INTEGER))))AND(rt72.c0 COLLATE BINARY)))AND((- (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST, 1.612801361E9);
SELECT ALL COUNT(*) FROM rt72, vt1, vt0 WHERE ((((~ (rt72.c1))) NOT BETWEEN (((((rt72.c0)AND(rt72.c1)))OR(vt1.c0))) AND (((vt0.c0)||(vt0.c0))))) ORDER BY ((((((((((((((vt0.c0) NOT NULL))OR((rt72.c0 IN ()))))OR(((rt72.c2) NOT BETWEEN (vt1.c0) AND (NULL)))))OR(CAST(vt0.c0 AS INTEGER))))AND(rt72.c0 COLLATE BINARY)))AND((- (vt1.c0)))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))))  NULLS LAST, 1.612801361E9;
SELECT ALL * FROM rt72, vt0, t1 WHERE ((~ (rt72.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt72.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT ALL * FROM rt72, vt0, t1 WHERE ((~ (rt72.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt72.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT ALL * FROM rt72, vt0, t1 WHERE ((~ (rt72.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT CAST(t1.c0 AS NUMERIC), ((((((((vt1.c0)OR(t1.c67)))OR(rt72.c2)))AND(t1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(t1.c0 AS NUMERIC), ((((((((vt1.c0)OR(t1.c67)))OR(rt72.c2)))AND(t1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM rt72, vt0, vt1, t1);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT CAST(t1.c0 AS NUMERIC), ((((((((vt1.c0)OR(t1.c67)))OR(rt72.c2)))AND(t1.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CAST(t1.c0 AS NUMERIC), ((((((((vt1.c0)OR(t1.c67)))OR(rt72.c2)))AND(t1.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM rt72, vt0, vt1, t1);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT CAST(t1.c0 AS NUMERIC), ((((((((vt1.c0)OR(t1.c67)))OR(rt72.c2)))AND(t1.c0)))OR(vt0.c0))));
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN ((rt72.c1)&(vt1.c0)) THEN json_object(rt72.c1, '', vt1.c0, rt72.c0) END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)))OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC, CAST(CASE WHEN rt72.c2 THEN rt72.c0 ELSE NULL END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt72.c1)&(vt1.c0)) THEN json_object(rt72.c1, '', vt1.c0, rt72.c0) END) IS TRUE)  as count FROM vt0, rt72, vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)))OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC, CAST(CASE WHEN rt72.c2 THEN rt72.c0 ELSE NULL END AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN ((rt72.c1)&(vt1.c0)) THEN json_object(rt72.c1, '', vt1.c0, rt72.c0) END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)))OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC, CAST(CASE WHEN rt72.c2 THEN rt72.c0 ELSE NULL END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt72.c1)&(vt1.c0)) THEN json_object(rt72.c1, '', vt1.c0, rt72.c0) END) IS TRUE)  as count FROM vt0, rt72, vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)))OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC, CAST(CASE WHEN rt72.c2 THEN rt72.c0 ELSE NULL END AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN ((rt72.c1)&(vt1.c0)) THEN json_object(rt72.c1, '', vt1.c0, rt72.c0) END) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)))OR(x'')))AND(vt1.c0)) COLLATE BINARY ASC, CAST(CASE WHEN rt72.c2 THEN rt72.c0 ELSE NULL END AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM rt72, vt0 WHERE (((((((((vt0.c0)AND(rt72.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt72.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL * FROM rt72, vt0 WHERE (((((((((vt0.c0)AND(rt72.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt72.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL * FROM rt72, vt0 WHERE (((((((((vt0.c0)AND(rt72.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((rt72.c0) IS FALSE))))OR(((rt72.c2)-('')))) LEFT OUTER JOIN t1 ON ((rt72.c2) NOT BETWEEN (((((rt72.c1)OR(t1.c67)))OR(vt0.c0))) AND (((rt72.c0)%(t1.c0)))) INNER JOIN rt72 ON (UPPER(t1.c0) IN ()) WHERE ((('1~')*(((rt72.c0)/(rt72.c1))))) ORDER BY ((MAX(NULL, vt1.c0, rt72.c1, '')) NOT BETWEEN ((((rt72.c0)) BETWEEN ((t1.c67)) AND ((rt72.c0)))) AND (((((((((vt1.c0)OR('-1605938856')))OR(rt72.c2)))AND(t1.c0)))AND(rt72.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1~')*(((rt72.c0)/(rt72.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((rt72.c0) IS FALSE))))OR(((rt72.c2)-('')))) LEFT OUTER JOIN t1 ON ((rt72.c2) NOT BETWEEN (((((rt72.c1)OR(t1.c67)))OR(vt0.c0))) AND (((rt72.c0)%(t1.c0)))) INNER JOIN rt72 ON (UPPER(t1.c0) IN ()) ORDER BY ((MAX(NULL, vt1.c0, rt72.c1, '')) NOT BETWEEN ((((rt72.c0)) BETWEEN ((t1.c67)) AND ((rt72.c0)))) AND (((((((((vt1.c0)OR('-1605938856')))OR(rt72.c2)))AND(t1.c0)))AND(rt72.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((rt72.c0) IS FALSE))))OR(((rt72.c2)-('')))) LEFT OUTER JOIN t1 ON ((rt72.c2) NOT BETWEEN (((((rt72.c1)OR(t1.c67)))OR(vt0.c0))) AND (((rt72.c0)%(t1.c0)))) INNER JOIN rt72 ON (UPPER(t1.c0) IN ()) WHERE ((('1~')*(((rt72.c0)/(rt72.c1))))) ORDER BY ((MAX(NULL, vt1.c0, rt72.c1, '')) NOT BETWEEN ((((rt72.c0)) BETWEEN ((t1.c67)) AND ((rt72.c0)))) AND (((((((((vt1.c0)OR('-1605938856')))OR(rt72.c2)))AND(t1.c0)))AND(rt72.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('1~')*(((rt72.c0)/(rt72.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((rt72.c0) IS FALSE))))OR(((rt72.c2)-('')))) LEFT OUTER JOIN t1 ON ((rt72.c2) NOT BETWEEN (((((rt72.c1)OR(t1.c67)))OR(vt0.c0))) AND (((rt72.c0)%(t1.c0)))) INNER JOIN rt72 ON (UPPER(t1.c0) IN ()) ORDER BY ((MAX(NULL, vt1.c0, rt72.c1, '')) NOT BETWEEN ((((rt72.c0)) BETWEEN ((t1.c67)) AND ((rt72.c0)))) AND (((((((((vt1.c0)OR('-1605938856')))OR(rt72.c2)))AND(t1.c0)))AND(rt72.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((rt72.c0) IS FALSE))))OR(((rt72.c2)-('')))) LEFT OUTER JOIN t1 ON ((rt72.c2) NOT BETWEEN (((((rt72.c1)OR(t1.c67)))OR(vt0.c0))) AND (((rt72.c0)%(t1.c0)))) INNER JOIN rt72 ON (UPPER(t1.c0) IN ()) WHERE ((('1~')*(((rt72.c0)/(rt72.c1))))) ORDER BY ((MAX(NULL, vt1.c0, rt72.c1, '')) NOT BETWEEN ((((rt72.c0)) BETWEEN ((t1.c67)) AND ((rt72.c0)))) AND (((((((((vt1.c0)OR('-1605938856')))OR(rt72.c2)))AND(t1.c0)))AND(rt72.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE (((((rt72.c1) NOT BETWEEN (vt1.c0) AND ('1474270525'))) NOT BETWEEN ((((rt72.c0))>((NULL)))) AND (CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt72.c1) NOT BETWEEN (vt1.c0) AND ('1474270525'))) NOT BETWEEN ((((rt72.c0))>((NULL)))) AND (CAST('' AS NUMERIC)))) IS TRUE)  as count FROM rt72, vt1);
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE (((((rt72.c1) NOT BETWEEN (vt1.c0) AND ('1474270525'))) NOT BETWEEN ((((rt72.c0))>((NULL)))) AND (CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt72.c1) NOT BETWEEN (vt1.c0) AND ('1474270525'))) NOT BETWEEN ((((rt72.c0))>((NULL)))) AND (CAST('' AS NUMERIC)))) IS TRUE)  as count FROM rt72, vt1);
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE (((((rt72.c1) NOT BETWEEN (vt1.c0) AND ('1474270525'))) NOT BETWEEN ((((rt72.c0))>((NULL)))) AND (CAST('' AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, rt72, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c2)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(rt72.c0 AS TEXT))OR(((vt0.c0) BETWEEN (0.5287399535572324) AND (rt72.c2)))))AND(((vt1.c0)||(NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c2)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt72, vt0 ORDER BY ((((CAST(rt72.c0 AS TEXT))OR(((vt0.c0) BETWEEN (0.5287399535572324) AND (rt72.c2)))))AND(((vt1.c0)||(NULL)))));
SELECT ALL COUNT(*) FROM vt1, rt72, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c2)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(rt72.c0 AS TEXT))OR(((vt0.c0) BETWEEN (0.5287399535572324) AND (rt72.c2)))))AND(((vt1.c0)||(NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c2)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt72, vt0 ORDER BY ((((CAST(rt72.c0 AS TEXT))OR(((vt0.c0) BETWEEN (0.5287399535572324) AND (rt72.c2)))))AND(((vt1.c0)||(NULL)))));
SELECT ALL COUNT(*) FROM vt1, rt72, vt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c2)))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (((vt0.c0) NOT NULL)))) ORDER BY ((((CAST(rt72.c0 AS TEXT))OR(((vt0.c0) BETWEEN (0.5287399535572324) AND (rt72.c2)))))AND(((vt1.c0)||(NULL))));
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((~ (rt72.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt72.c0)) IN ())) IS TRUE)  as count FROM t1, vt1, rt72, vt0);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((~ (rt72.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt72.c0)) IN ())) IS TRUE)  as count FROM t1, vt1, rt72, vt0);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((~ (rt72.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL);
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((((((((vt0.c0)AND(vt1.c0)))AND(rt72.c1)))OR(rt72.c1)))OR(0.20451709460575773))) NOT NULL) FULL OUTER JOIN rt72 ON TRIM(DISTINCT (vt0.c0 IN ())) WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((((((((vt0.c0)AND(vt1.c0)))AND(rt72.c1)))OR(rt72.c1)))OR(0.20451709460575773))) NOT NULL) FULL OUTER JOIN rt72 ON TRIM(DISTINCT (vt0.c0 IN ())));
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((((((((vt0.c0)AND(vt1.c0)))AND(rt72.c1)))OR(rt72.c1)))OR(0.20451709460575773))) NOT NULL) FULL OUTER JOIN rt72 ON TRIM(DISTINCT (vt0.c0 IN ())) WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON ((((((((((vt0.c0)AND(vt1.c0)))AND(rt72.c1)))OR(rt72.c1)))OR(0.20451709460575773))) NOT NULL) FULL OUTER JOIN rt72 ON TRIM(DISTINCT (vt0.c0 IN ())));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (vt1.c0)) THEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)) ELSE ((vt0.c0)>=(vt1.c0)) END INNER JOIN rt72 ON LTRIM(CAST(rt72.c0 AS INTEGER)) WHERE ((NOT (CASE WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (((rt72.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((rt72.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (vt1.c0)) THEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)) ELSE ((vt0.c0)>=(vt1.c0)) END INNER JOIN rt72 ON LTRIM(CAST(rt72.c0 AS INTEGER)) ORDER BY (((rt72.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((rt72.c0)AND(vt1.c0)))AND(vt0.c0))))));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (vt1.c0)) THEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)) ELSE ((vt0.c0)>=(vt1.c0)) END INNER JOIN rt72 ON LTRIM(CAST(rt72.c0 AS INTEGER)) WHERE ((NOT (CASE WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (((rt72.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((rt72.c0)AND(vt1.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON CASE WHEN (~ (vt1.c0)) THEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)) ELSE ((vt0.c0)>=(vt1.c0)) END INNER JOIN rt72 ON LTRIM(CAST(rt72.c0 AS INTEGER)) ORDER BY (((rt72.c1)) NOT BETWEEN ((((vt0.c0) NOT NULL))) AND ((((((rt72.c0)AND(vt1.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN 0.9717650701318836 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN 0.9717650701318836 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN 0.9717650701318836 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN 0.9717650701318836 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c0)LIKE(vt0.c0))) AND (CASE vt0.c0  WHEN 0.9717650701318836 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM rt72 WHERE (((((rt72.c2)+(rt72.c1)))%((NOT (rt72.c1))))) ORDER BY ((rt72.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)+(rt72.c1)))%((NOT (rt72.c1))))) IS TRUE)  as count FROM rt72 ORDER BY ((rt72.c0 IN ()) IN ())  NULLS FIRST);
SELECT * FROM rt72 WHERE (((((rt72.c2)+(rt72.c1)))%((NOT (rt72.c1))))) ORDER BY ((rt72.c0 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)+(rt72.c1)))%((NOT (rt72.c1))))) IS TRUE)  as count FROM rt72 ORDER BY ((rt72.c0 IN ()) IN ())  NULLS FIRST);
SELECT * FROM rt72 WHERE (((((rt72.c2)+(rt72.c1)))%((NOT (rt72.c1))))) ORDER BY ((rt72.c0 IN ()) IN ())  NULLS FIRST;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((LIKELY(vt0.c0)) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(0x1fdda310))) AND (ABS(vt1.c0))) WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (((((((((~ (vt0.c0)))AND(load_extension(vt1.c0))))OR(((0.3410626192248565) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((LIKELY(vt0.c0)) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(0X1fdda310))) AND (ABS(vt1.c0))) ORDER BY (((((((((~ (vt0.c0)))AND(load_extension(vt1.c0))))OR(((0.3410626192248565) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((LIKELY(vt0.c0)) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(0x1fdda310))) AND (ABS(vt1.c0))) WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (((((((((~ (vt0.c0)))AND(load_extension(vt1.c0))))OR(((0.3410626192248565) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((LIKELY(vt0.c0)) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(0X1fdda310))) AND (ABS(vt1.c0))) ORDER BY (((((((((~ (vt0.c0)))AND(load_extension(vt1.c0))))OR(((0.3410626192248565) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((LIKELY(vt0.c0)) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(0x1fdda310))) AND (ABS(vt1.c0))) WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS REAL)) ORDER BY (((((((((~ (vt0.c0)))AND(load_extension(vt1.c0))))OR(((0.3410626192248565) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((+ (vt1.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (CASE (~ (vt0.c0))  WHEN json_remove(vt0.c0, rt72.c1) THEN (((rt72.c2))=((rt72.c1))) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((vt0.c0))) THEN ((rt72.c0)<=(rt72.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) ORDER BY 0Xffffffffe50b47cc ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN json_remove(vt0.c0, rt72.c1) THEN (((rt72.c2))=((rt72.c1))) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((vt0.c0))) THEN ((rt72.c0)<=(rt72.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72 ORDER BY 0Xffffffffe50b47cc ASC);
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (CASE (~ (vt0.c0))  WHEN json_remove(vt0.c0, rt72.c1) THEN (((rt72.c2))=((rt72.c1))) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((vt0.c0))) THEN ((rt72.c0)<=(rt72.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) ORDER BY 0Xffffffffe50b47cc ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN json_remove(vt0.c0, rt72.c1) THEN (((rt72.c2))=((rt72.c1))) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((vt0.c0))) THEN ((rt72.c0)<=(rt72.c0)) WHEN vt0.c0 COLLATE BINARY THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72 ORDER BY 0Xffffffffe50b47cc ASC);
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (0Xfffffffff0e33740);
SELECT SUM(count) FROM (SELECT ((0xfffffffff0e33740) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (0Xfffffffff0e33740);
SELECT SUM(count) FROM (SELECT ((0xfffffffff0e33740) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (0Xfffffffff0e33740);
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE), (((((vt1.c0)||(vt0.c0))))<(((((vt1.c0))>=((vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE), (((((vt1.c0)||(vt0.c0))))<(((((vt1.c0))>=((vt0.c0)))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE), (((((vt1.c0)||(vt0.c0))))<(((((vt1.c0))>=((vt0.c0)))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE), (((((vt1.c0)||(vt0.c0))))<(((((vt1.c0))>=((vt0.c0)))))) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB)) ORDER BY ((json_patch(vt1.c0, vt0.c0)) IS FALSE), (((((vt1.c0)||(vt0.c0))))<(((((vt1.c0))>=((vt0.c0)))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, rt72 WHERE (((((((0.7160028902175137)%(rt72.c0)))OR(((t1.c0)LIKE(t1.c0)))))OR(t1.c67)));
SELECT SUM(count) FROM (SELECT ((((((((0.7160028902175137)%(rt72.c0)))OR(((t1.c0)LIKE(t1.c0)))))OR(t1.c67))) IS TRUE)  as count FROM t1, rt72);
SELECT COUNT(*) FROM t1, rt72 WHERE (((((((0.7160028902175137)%(rt72.c0)))OR(((t1.c0)LIKE(t1.c0)))))OR(t1.c67)));
SELECT SUM(count) FROM (SELECT ((((((((0.7160028902175137)%(rt72.c0)))OR(((t1.c0)LIKE(t1.c0)))))OR(t1.c67))) IS TRUE)  as count FROM t1, rt72);
SELECT COUNT(*) FROM t1, rt72 WHERE (((((((0.7160028902175137)%(rt72.c0)))OR(((t1.c0)LIKE(t1.c0)))))OR(t1.c67)));
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((NULL) NOT NULL));
SELECT * FROM t1, rt72 WHERE ((LTRIM(rt72.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(rt72.c0) IN ())) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE ((LTRIM(rt72.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((LTRIM(rt72.c0) IN ())) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE ((LTRIM(rt72.c0) IN ()));
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON ((((TYPEOF(t1.c67))AND((~ (rt72.c0)))))AND(IFNULL(DISTINCT t1.c0, '-1440749979'))) WHERE ((((vt0.c0) BETWEEN (x'b0baacdc') AND (t1.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'b0baacdc') AND (t1.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt72, t1 LEFT OUTER JOIN vt0 ON ((((TYPEOF(t1.c67))AND((~ (rt72.c0)))))AND(IFNULL(DISTINCT t1.c0, '-1440749979'))));
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON ((((TYPEOF(t1.c67))AND((~ (rt72.c0)))))AND(IFNULL(DISTINCT t1.c0, '-1440749979'))) WHERE ((((vt0.c0) BETWEEN (x'b0baacdc') AND (t1.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (x'b0baacdc') AND (t1.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt72, t1 LEFT OUTER JOIN vt0 ON ((((TYPEOF(t1.c67))AND((~ (rt72.c0)))))AND(IFNULL(DISTINCT t1.c0, '-1440749979'))));
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON ((((TYPEOF(t1.c67))AND((~ (rt72.c0)))))AND(IFNULL(DISTINCT t1.c0, '-1440749979'))) WHERE ((((vt0.c0) BETWEEN (x'b0baacdc') AND (t1.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN vt0.c0 END)));
SELECT * FROM vt1 INNER JOIN rt72 ON (- (rt72.c0)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN rt72 ON (- (rt72.c0)));
SELECT * FROM vt1 INNER JOIN rt72 ON (- (rt72.c0)) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 INNER JOIN rt72 ON (- (rt72.c0)));
SELECT * FROM vt1 INNER JOIN rt72 ON (- (rt72.c0)) WHERE (vt1.c0);
SELECT ALL * FROM vt0, t1 WHERE ((((+ (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((+ (t1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((+ (t1.c0))) ISNULL));
SELECT * FROM vt0, rt72 WHERE (rt72.c0) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (rt72.c1)) IN ((rt72.c0 IN ()), CAST('1~' AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM vt0, rt72 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (rt72.c1)) IN ((rt72.c0 IN ()), CAST('1~' AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt0, rt72 WHERE (rt72.c0) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (rt72.c1)) IN ((rt72.c0 IN ()), CAST('1~' AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM vt0, rt72 ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (rt72.c1)) IN ((rt72.c0 IN ()), CAST('1~' AS NUMERIC))) DESC  NULLS LAST);
SELECT * FROM vt0, rt72 WHERE (rt72.c0) ORDER BY (((vt0.c0) BETWEEN (vt0.c0) AND (rt72.c1)) IN ((rt72.c0 IN ()), CAST('1~' AS NUMERIC))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)+(((vt1.c0)%(vt0.c0)))) RIGHT OUTER JOIN t1 ON (((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c67)))) ISNULL) WHERE ((~ ((+ (')B?}or32'))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((x''))==((vt0.c0)))) AND (((t1.c67)AND(-1596882345))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (')B?}or32'))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)+(((vt1.c0)%(vt0.c0)))) RIGHT OUTER JOIN t1 ON (((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c67)))) ISNULL) ORDER BY ((vt0.c0) NOT BETWEEN ((((x''))=((vt0.c0)))) AND (((t1.c67)AND(-1596882345)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)+(((vt1.c0)%(vt0.c0)))) RIGHT OUTER JOIN t1 ON (((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c67)))) ISNULL) WHERE ((~ ((+ (')B?}or32'))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((x''))==((vt0.c0)))) AND (((t1.c67)AND(-1596882345))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (')B?}or32'))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)+(((vt1.c0)%(vt0.c0)))) RIGHT OUTER JOIN t1 ON (((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c67)))) ISNULL) ORDER BY ((vt0.c0) NOT BETWEEN ((((x''))=((vt0.c0)))) AND (((t1.c67)AND(-1596882345)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((vt0.c0)+(((vt1.c0)%(vt0.c0)))) RIGHT OUTER JOIN t1 ON (((((NULL)) BETWEEN ((t1.c0)) AND ((t1.c67)))) ISNULL) WHERE ((~ ((+ (')B?}or32'))))) ORDER BY ((vt0.c0) NOT BETWEEN ((((x''))==((vt0.c0)))) AND (((t1.c67)AND(-1596882345))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt72 ON ((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.8947665947894209 WHERE (TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt72 ON ((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.8947665947894209);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt72 ON ((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.8947665947894209 WHERE (TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt72 ON ((vt1.c0)!=(vt0.c0)) COLLATE BINARY COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.8947665947894209);
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt72, vt1, t1);
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt72, vt1, t1);
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON 0Xffffffffc8eb6ea6 COLLATE BINARY WHERE ((rt72.c2 IN ())) ORDER BY (((((t1.c67)) NOT BETWEEN ((0xfffffffffad46de2)) AND ((vt0.c0))))<>(CAST(rt72.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt72.c2 IN ())) IS TRUE)  as count FROM rt72, t1 LEFT OUTER JOIN vt0 ON 0Xffffffffc8eb6ea6 COLLATE BINARY ORDER BY (((((t1.c67)) NOT BETWEEN ((0Xfffffffffad46de2)) AND ((vt0.c0))))<>(CAST(rt72.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON 0Xffffffffc8eb6ea6 COLLATE BINARY WHERE ((rt72.c2 IN ())) ORDER BY (((((t1.c67)) NOT BETWEEN ((0xfffffffffad46de2)) AND ((vt0.c0))))<>(CAST(rt72.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt72.c2 IN ())) IS TRUE)  as count FROM rt72, t1 LEFT OUTER JOIN vt0 ON 0Xffffffffc8eb6ea6 COLLATE BINARY ORDER BY (((((t1.c67)) NOT BETWEEN ((0Xfffffffffad46de2)) AND ((vt0.c0))))<>(CAST(rt72.c1 AS INTEGER)))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, t1 LEFT OUTER JOIN vt0 ON 0Xffffffffc8eb6ea6 COLLATE BINARY WHERE ((rt72.c2 IN ())) ORDER BY (((((t1.c67)) NOT BETWEEN ((0xfffffffffad46de2)) AND ((vt0.c0))))<>(CAST(rt72.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE LOWER(DISTINCT NULL) END) ORDER BY (NOT ((((('161482448')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, 0.9745595763531706, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE LOWER(DISTINCT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((('161482448')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, 0.9745595763531706, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE LOWER(DISTINCT NULL) END) ORDER BY (NOT ((((('161482448')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, 0.9745595763531706, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE LOWER(DISTINCT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((('161482448')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, 0.9745595763531706, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))) THEN CAST(vt0.c0 AS TEXT) ELSE LOWER(DISTINCT NULL) END) ORDER BY (NOT ((((('161482448')AND(vt0.c0)))AND(vt0.c0))))  NULLS FIRST, ((JULIANDAY(vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN (vt0.c0, 0.9745595763531706, vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT * FROM vt0, t1, vt1, rt72 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY RTRIM((((rt72.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1, rt72 ORDER BY RTRIM((((rt72.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, t1, vt1, rt72 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY RTRIM((((rt72.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0, t1, vt1, rt72 ORDER BY RTRIM((((rt72.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ASC);
SELECT * FROM vt0, t1, vt1, rt72 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY RTRIM((((rt72.c2)) BETWEEN ((vt1.c0)) AND ((vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((IFNULL(DISTINCT rt72.c2, rt72.c2)) BETWEEN (((rt72.c0) IS TRUE)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt72.c2, rt72.c2)) BETWEEN (((rt72.c0) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((IFNULL(DISTINCT rt72.c2, rt72.c2)) BETWEEN (((rt72.c0) IS TRUE)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt72.c2, rt72.c2)) BETWEEN (((rt72.c0) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((IFNULL(DISTINCT rt72.c2, rt72.c2)) BETWEEN (((rt72.c0) IS TRUE)) AND (vt0.c0)));
SELECT COUNT(*) FROM rt72, vt0 WHERE (CASE ((((((((rt72.c0)OR(0Xffffffff927a3bae)))AND(0.6168462598423253)))OR(rt72.c1)))AND(rt72.c1))  WHEN CAST(rt72.c1 AS NUMERIC) THEN rt72.c0 END) ORDER BY ((rt72.c2)%(((rt72.c0)>>(rt72.c0))))  NULLS FIRST, CASE 0.49777041265867505  WHEN rt72.c0 THEN (((rt72.c2))=((vt0.c0))) WHEN ((rt72.c0)>(rt72.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE 0.34491621095529823  WHEN rt72.c2 THEN vt0.c0 END THEN ((vt0.c0)||(rt72.c0)) ELSE CAST(rt72.c1 AS INTEGER) END ASC, CAST(CASE rt72.c2  WHEN rt72.c2 THEN rt72.c1 ELSE rt72.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt72.c0)OR(0Xffffffff927a3bae)))AND(0.6168462598423253)))OR(rt72.c1)))AND(rt72.c1))  WHEN CAST(rt72.c1 AS NUMERIC) THEN rt72.c0 END) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((rt72.c2)%(((rt72.c0)>>(rt72.c0))))  NULLS FIRST, CASE 0.49777041265867505  WHEN rt72.c0 THEN (((rt72.c2))==((vt0.c0))) WHEN ((rt72.c0)>(rt72.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE 0.34491621095529823  WHEN rt72.c2 THEN vt0.c0 END THEN ((vt0.c0)||(rt72.c0)) ELSE CAST(rt72.c1 AS INTEGER) END ASC, CAST(CASE rt72.c2  WHEN rt72.c2 THEN rt72.c1 ELSE rt72.c2 END AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt72, vt0 WHERE (CASE ((((((((rt72.c0)OR(0Xffffffff927a3bae)))AND(0.6168462598423253)))OR(rt72.c1)))AND(rt72.c1))  WHEN CAST(rt72.c1 AS NUMERIC) THEN rt72.c0 END) ORDER BY ((rt72.c2)%(((rt72.c0)>>(rt72.c0))))  NULLS FIRST, CASE 0.49777041265867505  WHEN rt72.c0 THEN (((rt72.c2))=((vt0.c0))) WHEN ((rt72.c0)>(rt72.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE 0.34491621095529823  WHEN rt72.c2 THEN vt0.c0 END THEN ((vt0.c0)||(rt72.c0)) ELSE CAST(rt72.c1 AS INTEGER) END ASC, CAST(CASE rt72.c2  WHEN rt72.c2 THEN rt72.c1 ELSE rt72.c2 END AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((rt72.c0)OR(0Xffffffff927a3bae)))AND(0.6168462598423253)))OR(rt72.c1)))AND(rt72.c1))  WHEN CAST(rt72.c1 AS NUMERIC) THEN rt72.c0 END) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((rt72.c2)%(((rt72.c0)>>(rt72.c0))))  NULLS FIRST, CASE 0.49777041265867505  WHEN rt72.c0 THEN (((rt72.c2))==((vt0.c0))) WHEN ((rt72.c0)>(rt72.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE 0.34491621095529823  WHEN rt72.c2 THEN vt0.c0 END THEN ((vt0.c0)||(rt72.c0)) ELSE CAST(rt72.c1 AS INTEGER) END ASC, CAST(CASE rt72.c2  WHEN rt72.c2 THEN rt72.c1 ELSE rt72.c2 END AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt72, vt0 WHERE (CASE ((((((((rt72.c0)OR(0Xffffffff927a3bae)))AND(0.6168462598423253)))OR(rt72.c1)))AND(rt72.c1))  WHEN CAST(rt72.c1 AS NUMERIC) THEN rt72.c0 END) ORDER BY ((rt72.c2)%(((rt72.c0)>>(rt72.c0))))  NULLS FIRST, CASE 0.49777041265867505  WHEN rt72.c0 THEN (((rt72.c2))=((vt0.c0))) WHEN ((rt72.c0)>(rt72.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE 0.34491621095529823  WHEN rt72.c2 THEN vt0.c0 END THEN ((vt0.c0)||(rt72.c0)) ELSE CAST(rt72.c1 AS INTEGER) END ASC, CAST(CASE rt72.c2  WHEN rt72.c2 THEN rt72.c1 ELSE rt72.c2 END AS BLOB) ASC  NULLS LAST;
SELECT * FROM t1, vt0, vt1, rt72 WHERE (json_quote((rt72.c2 IN ()))) ORDER BY ABS((~ (rt72.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((rt72.c2 IN ()))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ABS((~ (rt72.c2))) DESC  NULLS LAST);
SELECT * FROM t1, vt0, vt1, rt72 WHERE (json_quote((rt72.c2 IN ()))) ORDER BY ABS((~ (rt72.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((rt72.c2 IN ()))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ABS((~ (rt72.c2))) DESC  NULLS LAST);
SELECT * FROM t1, vt0, vt1, rt72 WHERE (json_quote((rt72.c2 IN ()))) ORDER BY ABS((~ (rt72.c2))) DESC  NULLS LAST;
SELECT * FROM vt0, rt72, vt1 WHERE (((((((((((((rt72.c2)AND(rt72.c1)))AND(rt72.c0)))AND(rt72.c1)))OR(rt72.c1)))AND(vt0.c0)))OR(0.4907436937638878)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt72.c2)AND(rt72.c1)))AND(rt72.c0)))AND(rt72.c1)))OR(rt72.c1)))AND(vt0.c0)))OR(0.4907436937638878)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT * FROM vt0, rt72, vt1 WHERE (((((((((((((rt72.c2)AND(rt72.c1)))AND(rt72.c0)))AND(rt72.c1)))OR(rt72.c1)))AND(vt0.c0)))OR(0.4907436937638878)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt72.c2)AND(rt72.c1)))AND(rt72.c0)))AND(rt72.c1)))OR(rt72.c1)))AND(vt0.c0)))OR(0.4907436937638878)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT * FROM vt0, rt72, vt1 WHERE (((((((((((((rt72.c2)AND(rt72.c1)))AND(rt72.c0)))AND(rt72.c1)))OR(rt72.c1)))AND(vt0.c0)))OR(0.4907436937638878)) COLLATE RTRIM);
SELECT * FROM t1, rt72 WHERE ((((rt72.c1, rt72.c2, rt72.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), x'')) AND ((CAST('S' AS NUMERIC), (rt72.c2 IN (rt72.c1)), (((rt72.c2, rt72.c0, rt72.c2)) BETWEEN ((rt72.c2, NULL, t1.c67)) AND ((rt72.c1, t1.c0, rt72.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, rt72.c2, rt72.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), x'')) AND ((CAST('S' AS NUMERIC), (rt72.c2 IN (rt72.c1)), (((rt72.c2, rt72.c0, rt72.c2)) BETWEEN ((rt72.c2, NULL, t1.c67)) AND ((rt72.c1, t1.c0, rt72.c1))))))) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE ((((rt72.c1, rt72.c2, rt72.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), x'')) AND ((CAST('S' AS NUMERIC), (rt72.c2 IN (rt72.c1)), (((rt72.c2, rt72.c0, rt72.c2)) BETWEEN ((rt72.c2, NULL, t1.c67)) AND ((rt72.c1, t1.c0, rt72.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, rt72.c2, rt72.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), x'')) AND ((CAST('S' AS NUMERIC), (rt72.c2 IN (rt72.c1)), (((rt72.c2, rt72.c0, rt72.c2)) BETWEEN ((rt72.c2, NULL, t1.c67)) AND ((rt72.c1, t1.c0, rt72.c1))))))) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE ((((rt72.c1, rt72.c2, rt72.c0)) NOT BETWEEN ((t1.c0 COLLATE NOCASE, CAST(t1.c0 AS TEXT), x'')) AND ((CAST('S' AS NUMERIC), (rt72.c2 IN (rt72.c1)), (((rt72.c2, rt72.c0, rt72.c2)) BETWEEN ((rt72.c2, NULL, t1.c67)) AND ((rt72.c1, t1.c0, rt72.c1)))))));
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CASE 0x1b027e1c  WHEN (((t1.c67)) BETWEEN ((t1.c67)) AND ((t1.c67))) THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE TYPEOF(DISTINCT t1.c0) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CASE 0X1b027e1c  WHEN (((t1.c67)) BETWEEN ((t1.c67)) AND ((t1.c67))) THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE TYPEOF(DISTINCT t1.c0) END);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CASE 0x1b027e1c  WHEN (((t1.c67)) BETWEEN ((t1.c67)) AND ((t1.c67))) THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE TYPEOF(DISTINCT t1.c0) END WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON CASE 0X1b027e1c  WHEN (((t1.c67)) BETWEEN ((t1.c67)) AND ((t1.c67))) THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE TYPEOF(DISTINCT t1.c0) END);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON CASE 0x1b027e1c  WHEN (((t1.c67)) BETWEEN ((t1.c67)) AND ((t1.c67))) THEN CASE t1.c0  WHEN t1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE TYPEOF(DISTINCT t1.c0) END WHERE (x'');
SELECT COUNT(*) FROM t1, rt72, vt0 WHERE ((rt72.c1 IN ()) COLLATE RTRIM) ORDER BY ((rt72.c1)GLOB(CAST(t1.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((rt72.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt72, vt0 ORDER BY ((rt72.c1)GLOB(CAST(t1.c0 AS REAL))) ASC);
SELECT COUNT(*) FROM t1, rt72, vt0 WHERE ((rt72.c1 IN ()) COLLATE RTRIM) ORDER BY ((rt72.c1)GLOB(CAST(t1.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT (((rt72.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt72, vt0 ORDER BY ((rt72.c1)GLOB(CAST(t1.c0 AS REAL))) ASC);
SELECT COUNT(*) FROM t1, rt72, vt0 WHERE ((rt72.c1 IN ()) COLLATE RTRIM) ORDER BY ((rt72.c1)GLOB(CAST(t1.c0 AS REAL))) ASC;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c67)OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c67)OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c67)OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t1.c67)OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c67)OR(vt0.c0))) IS FALSE));
SELECT COUNT(*) FROM t1, vt1 WHERE (((((t1.c67)<=(t1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5205489293001114))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c67)<=(t1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5205489293001114)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((t1.c67)<=(t1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5205489293001114))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c67)<=(t1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5205489293001114)))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (((((t1.c67)<=(t1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (LIKELIHOOD(DISTINCT vt1.c0, 0.5205489293001114))));
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t1, vt1, rt72);
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM t1, vt1, rt72);
SELECT COUNT(*) FROM t1, vt1, rt72 WHERE (((NULL) ISNULL));
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((t1.c0)+(vt0.c0)) THEN (~ (t1.c67)) END WHERE (((CAST(vt0.c0 AS REAL))<<((- (vt0.c0))))) ORDER BY (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((t1.c0)+(vt0.c0)) THEN (~ (t1.c67)) END ORDER BY (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((t1.c0)+(vt0.c0)) THEN (~ (t1.c67)) END WHERE (((CAST(vt0.c0 AS REAL))<<((- (vt0.c0))))) ORDER BY (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))<<((- (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((t1.c0)+(vt0.c0)) THEN (~ (t1.c67)) END ORDER BY (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CASE WHEN ((t1.c0)+(vt0.c0)) THEN (~ (t1.c67)) END WHERE (((CAST(vt0.c0 AS REAL))<<((- (vt0.c0))))) ORDER BY (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (0x460243eb COLLATE NOCASE) ORDER BY CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c67)) WHEN NULL THEN ((0.6951811423617837)-(t1.c67)) WHEN ((t1.c67)||(t1.c0)) THEN CASE WHEN x'' THEN t1.c67 ELSE t1.c0 END ELSE (((t1.c67, t1.c0, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, t1.c67, '838413056'))) END ASC;
SELECT SUM(count) FROM (SELECT ((0x460243eb COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c67)) WHEN NULL THEN ((0.6951811423617837)-(t1.c67)) WHEN ((t1.c67)||(t1.c0)) THEN CASE WHEN x'' THEN t1.c67 ELSE t1.c0 END ELSE (((t1.c67, t1.c0, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, t1.c67, '838413056'))) END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (0x460243eb COLLATE NOCASE) ORDER BY CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c67)) WHEN NULL THEN ((0.6951811423617837)-(t1.c67)) WHEN ((t1.c67)||(t1.c0)) THEN CASE WHEN x'' THEN t1.c67 ELSE t1.c0 END ELSE (((t1.c67, t1.c0, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, t1.c67, '838413056'))) END ASC;
SELECT SUM(count) FROM (SELECT ((0x460243eb COLLATE NOCASE) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c67)) WHEN NULL THEN ((0.6951811423617837)-(t1.c67)) WHEN ((t1.c67)||(t1.c0)) THEN CASE WHEN x'' THEN t1.c67 ELSE t1.c0 END ELSE (((t1.c67, t1.c0, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, t1.c67, '838413056'))) END ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (0x460243eb COLLATE NOCASE) ORDER BY CASE WHEN (t1.c0 IN ()) THEN (+ (t1.c67)) WHEN NULL THEN ((0.6951811423617837)-(t1.c67)) WHEN ((t1.c67)||(t1.c0)) THEN CASE WHEN x'' THEN t1.c67 ELSE t1.c0 END ELSE (((t1.c67, t1.c0, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, t1.c67, '838413056'))) END ASC;
SELECT * FROM vt1, rt72 RIGHT OUTER JOIN vt0 ON 0Xffffffff88fc9d1d WHERE ((((rt72.c1)) BETWEEN (((((rt72.c1))<>((rt72.c2))))) AND (('䬈N溦Gd!(/}'))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) BETWEEN (((((rt72.c1))!=((rt72.c2))))) AND (('䬈N溦Gd!(/}')))) IS TRUE)  as count FROM vt1, rt72 RIGHT OUTER JOIN vt0 ON 0Xffffffff88fc9d1d);
SELECT * FROM vt1, rt72 RIGHT OUTER JOIN vt0 ON 0Xffffffff88fc9d1d WHERE ((((rt72.c1)) BETWEEN (((((rt72.c1))<>((rt72.c2))))) AND (('䬈N溦Gd!(/}'))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) BETWEEN (((((rt72.c1))!=((rt72.c2))))) AND (('䬈N溦Gd!(/}')))) IS TRUE)  as count FROM vt1, rt72 RIGHT OUTER JOIN vt0 ON 0Xffffffff88fc9d1d);
SELECT * FROM vt1, rt72 RIGHT OUTER JOIN vt0 ON 0Xffffffff88fc9d1d WHERE ((((rt72.c1)) BETWEEN (((((rt72.c1))<>((rt72.c2))))) AND (('䬈N溦Gd!(/}'))));
SELECT COUNT(*) FROM vt1, t1, rt72 NOT INDEXED, vt0 INDEXED BY i60 WHERE ((- (CASE WHEN rt72.c1 THEN rt72.c1 ELSE rt72.c0 END))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (((+ (vt0.c0)))IS NOT(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c67 THEN t1.c67 WHEN x'ab83e76a' THEN rt72.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt72.c1 THEN rt72.c1 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt1, t1, rt72, vt0 INDEXED BY i60 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (((+ (vt0.c0)))IS NOT(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c67 THEN t1.c67 WHEN x'ab83e76a' THEN rt72.c1 END)) DESC);
SELECT COUNT(*) FROM vt1, t1, rt72 NOT INDEXED, vt0 INDEXED BY i60 WHERE ((- (CASE WHEN rt72.c1 THEN rt72.c1 ELSE rt72.c0 END))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (((+ (vt0.c0)))IS NOT(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c67 THEN t1.c67 WHEN x'ab83e76a' THEN rt72.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt72.c1 THEN rt72.c1 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt1, t1, rt72, vt0 INDEXED BY i60 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (((+ (vt0.c0)))IS NOT(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c67 THEN t1.c67 WHEN x'ab83e76a' THEN rt72.c1 END)) DESC);
SELECT COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (rt72.c0 COLLATE BINARY) AND (t1.c67)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL)) NOT BETWEEN (rt72.c0 COLLATE BINARY) AND (t1.c67))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (rt72.c0 COLLATE BINARY) AND (t1.c67)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c0 AS REAL)) NOT BETWEEN (rt72.c0 COLLATE BINARY) AND (t1.c67))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((CAST(t1.c0 AS REAL)) NOT BETWEEN (rt72.c0 COLLATE BINARY) AND (t1.c67)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<>(((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((CASE WHEN '?( h4B' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-1558815228' END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((CASE WHEN '?( h4B' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-1558815228' END) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<>(((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((CASE WHEN '?( h4B' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-1558815228' END) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<>(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((CASE WHEN '?( h4B' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-1558815228' END) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))))<>(((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0 COLLATE BINARY)) ASC  NULLS FIRST, ((CASE WHEN '?( h4B' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE '-1558815228' END) NOT NULL);
SELECT * FROM rt72, vt1 WHERE ((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END IN ())) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c1) NOTNULL))) AND ((((rt72.c2) NOT BETWEEN (rt72.c0) AND (rt72.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END IN ())) IS TRUE)  as count FROM rt72, vt1 ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c1) NOTNULL))) AND ((((rt72.c2) NOT BETWEEN (rt72.c0) AND (rt72.c1)))))  NULLS FIRST);
SELECT * FROM rt72, vt1 WHERE ((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END IN ())) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c1) NOTNULL))) AND ((((rt72.c2) NOT BETWEEN (rt72.c0) AND (rt72.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END IN ())) IS TRUE)  as count FROM rt72, vt1 ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c1) NOTNULL))) AND ((((rt72.c2) NOT BETWEEN (rt72.c0) AND (rt72.c1)))))  NULLS FIRST);
SELECT * FROM rt72, vt1 WHERE ((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END IN ())) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c1) NOTNULL))) AND ((((rt72.c2) NOT BETWEEN (rt72.c0) AND (rt72.c1)))))  NULLS FIRST;
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE ((((((- (vt0.c0)))AND(CAST(rt72.c0 AS NUMERIC))))AND(NULL))) ORDER BY (NOT (CAST(rt72.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(rt72.c0 AS NUMERIC))))AND(NULL))) IS TRUE)  as count FROM t1, vt1, vt0, rt72 ORDER BY (NOT (CAST(rt72.c2 AS INTEGER))) DESC);
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE ((((((- (vt0.c0)))AND(CAST(rt72.c0 AS NUMERIC))))AND(NULL))) ORDER BY (NOT (CAST(rt72.c2 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(CAST(rt72.c0 AS NUMERIC))))AND(NULL))) IS TRUE)  as count FROM t1, vt1, vt0, rt72 ORDER BY (NOT (CAST(rt72.c2 AS INTEGER))) DESC);
SELECT ALL * FROM t1, vt1, vt0, rt72 WHERE ((((((- (vt0.c0)))AND(CAST(rt72.c0 AS NUMERIC))))AND(NULL))) ORDER BY (NOT (CAST(rt72.c2 AS INTEGER))) DESC;
SELECT * FROM vt0, rt72 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt72.c0 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN rt72.c0 END IN ())) ORDER BY MIN(((('ap.cs#ie'))=((rt72.c0))), (((rt72.c2))<>((rt72.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt0.c0 THEN rt72.c0 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN rt72.c0 END IN ())) IS TRUE)  as count FROM vt0, rt72 ORDER BY MIN(((('ap.cs#ie'))==((rt72.c0))), (((rt72.c2))!=((rt72.c1)))) DESC);
SELECT * FROM vt0, rt72 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt72.c0 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN rt72.c0 END IN ())) ORDER BY MIN(((('ap.cs#ie'))=((rt72.c0))), (((rt72.c2))<>((rt72.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((CASE NULL  WHEN vt0.c0 THEN rt72.c0 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN rt72.c0 END IN ())) IS TRUE)  as count FROM vt0, rt72 ORDER BY MIN(((('ap.cs#ie'))==((rt72.c0))), (((rt72.c2))!=((rt72.c1)))) DESC);
SELECT * FROM vt0, rt72 WHERE ((CASE NULL  WHEN vt0.c0 THEN rt72.c0 WHEN rt72.c1 THEN vt0.c0 WHEN rt72.c1 THEN rt72.c0 END IN ())) ORDER BY MIN(((('ap.cs#ie'))=((rt72.c0))), (((rt72.c2))<>((rt72.c1)))) DESC;
SELECT COUNT(*) FROM vt0, rt72 WHERE ((- ((rt72.c2 IN ())))) ORDER BY rt72.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt72.c2 IN ())))) IS TRUE)  as count FROM vt0, rt72 ORDER BY rt72.c2 ASC);
SELECT COUNT(*) FROM vt0, rt72 WHERE ((- ((rt72.c2 IN ())))) ORDER BY rt72.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- ((rt72.c2 IN ())))) IS TRUE)  as count FROM vt0, rt72 ORDER BY rt72.c2 ASC);
SELECT COUNT(*) FROM vt0, rt72 WHERE ((- ((rt72.c2 IN ())))) ORDER BY rt72.c2 ASC;
SELECT ALL * FROM rt72, vt1, t1, vt0 WHERE (CASE CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END  WHEN ((((t1.c67)OR(rt72.c1)))OR(t1.c67)) THEN CASE WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c0 END WHEN ((rt72.c0)/(rt72.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((rt72.c0)>(t1.c67)) THEN ABS(rt72.c1) WHEN (NOT (vt1.c0)) THEN CASE WHEN NULL THEN rt72.c1 ELSE vt0.c0 END WHEN ((x'')&(vt1.c0)) THEN ((t1.c0)=(rt72.c0)) ELSE ((t1.c67)>=(rt72.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END  WHEN ((((t1.c67)OR(rt72.c1)))OR(t1.c67)) THEN CASE WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c0 END WHEN ((rt72.c0)/(rt72.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((rt72.c0)>(t1.c67)) THEN ABS(rt72.c1) WHEN (NOT (vt1.c0)) THEN CASE WHEN NULL THEN rt72.c1 ELSE vt0.c0 END WHEN ((x'')&(vt1.c0)) THEN ((t1.c0)=(rt72.c0)) ELSE ((t1.c67)>=(rt72.c0)) END) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT ALL * FROM rt72, vt1, t1, vt0 WHERE (CASE CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END  WHEN ((((t1.c67)OR(rt72.c1)))OR(t1.c67)) THEN CASE WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c0 END WHEN ((rt72.c0)/(rt72.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((rt72.c0)>(t1.c67)) THEN ABS(rt72.c1) WHEN (NOT (vt1.c0)) THEN CASE WHEN NULL THEN rt72.c1 ELSE vt0.c0 END WHEN ((x'')&(vt1.c0)) THEN ((t1.c0)=(rt72.c0)) ELSE ((t1.c67)>=(rt72.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END  WHEN ((((t1.c67)OR(rt72.c1)))OR(t1.c67)) THEN CASE WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c0 END WHEN ((rt72.c0)/(rt72.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((rt72.c0)>(t1.c67)) THEN ABS(rt72.c1) WHEN (NOT (vt1.c0)) THEN CASE WHEN NULL THEN rt72.c1 ELSE vt0.c0 END WHEN ((x'')&(vt1.c0)) THEN ((t1.c0)=(rt72.c0)) ELSE ((t1.c67)>=(rt72.c0)) END) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT ALL * FROM rt72, vt1, t1, vt0 WHERE (CASE CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END  WHEN ((((t1.c67)OR(rt72.c1)))OR(t1.c67)) THEN CASE WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c0 END WHEN ((rt72.c0)/(rt72.c1)) THEN t1.c0 COLLATE NOCASE WHEN ((rt72.c0)>(t1.c67)) THEN ABS(rt72.c1) WHEN (NOT (vt1.c0)) THEN CASE WHEN NULL THEN rt72.c1 ELSE vt0.c0 END WHEN ((x'')&(vt1.c0)) THEN ((t1.c0)=(rt72.c0)) ELSE ((t1.c67)>=(rt72.c0)) END);
SELECT ALL * FROM vt1, t1, rt72 WHERE (((((rt72.c1) NOT NULL))<=((((rt72.c1)) BETWEEN ((t1.c67)) AND ((t1.c0)))))) ORDER BY (('-1964666299')IS NOT(LIKELY(rt72.c2))) ASC, LIKELY(DISTINCT (t1.c67 IN ())) DESC, 0x1fdda310 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT NULL))<=((((rt72.c1)) BETWEEN ((t1.c67)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt1, t1, rt72 ORDER BY (('-1964666299')IS NOT(LIKELY(rt72.c2))) ASC, LIKELY(DISTINCT (t1.c67 IN ())) DESC, 0X1fdda310 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt72 WHERE (((((rt72.c1) NOT NULL))<=((((rt72.c1)) BETWEEN ((t1.c67)) AND ((t1.c0)))))) ORDER BY (('-1964666299')IS NOT(LIKELY(rt72.c2))) ASC, LIKELY(DISTINCT (t1.c67 IN ())) DESC, 0x1fdda310 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT NULL))<=((((rt72.c1)) BETWEEN ((t1.c67)) AND ((t1.c0)))))) IS TRUE)  as count FROM vt1, t1, rt72 ORDER BY (('-1964666299')IS NOT(LIKELY(rt72.c2))) ASC, LIKELY(DISTINCT (t1.c67 IN ())) DESC, 0X1fdda310 DESC  NULLS FIRST);
SELECT * FROM t1 RIGHT OUTER JOIN rt72 ON CAST(LOWER(DISTINCT rt72.c0) AS REAL) CROSS JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((rt72.c0, vt1.c0, vt1.c0))>((rt72.c1, NULL, t1.c0)))) AND (TIME(vt1.c0, rt72.c1, t1.c67))) WHERE (CAST(CAST(t1.c0 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN CAST(t1.c67 AS BLOB) THEN (((rt72.c2)) BETWEEN ((x'')) AND ((t1.c67))) END ASC, ((((rt72.c0)AND(t1.c67)))OR(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt72 ON CAST(LOWER(DISTINCT rt72.c0) AS REAL) CROSS JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((rt72.c0, vt1.c0, vt1.c0))>((rt72.c1, NULL, t1.c0)))) AND (TIME(vt1.c0, rt72.c1, t1.c67))) ORDER BY CASE WHEN CAST(t1.c67 AS BLOB) THEN (((rt72.c2)) BETWEEN ((x'')) AND ((t1.c67))) END ASC, ((((rt72.c0)AND(t1.c67)))OR(vt1.c0)) COLLATE BINARY);
SELECT * FROM t1 RIGHT OUTER JOIN rt72 ON CAST(LOWER(DISTINCT rt72.c0) AS REAL) CROSS JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((rt72.c0, vt1.c0, vt1.c0))>((rt72.c1, NULL, t1.c0)))) AND (TIME(vt1.c0, rt72.c1, t1.c67))) WHERE (CAST(CAST(t1.c0 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN CAST(t1.c67 AS BLOB) THEN (((rt72.c2)) BETWEEN ((x'')) AND ((t1.c67))) END ASC, ((((rt72.c0)AND(t1.c67)))OR(vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt72 ON CAST(LOWER(DISTINCT rt72.c0) AS REAL) CROSS JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((rt72.c0, vt1.c0, vt1.c0))>((rt72.c1, NULL, t1.c0)))) AND (TIME(vt1.c0, rt72.c1, t1.c67))) ORDER BY CASE WHEN CAST(t1.c67 AS BLOB) THEN (((rt72.c2)) BETWEEN ((x'')) AND ((t1.c67))) END ASC, ((((rt72.c0)AND(t1.c67)))OR(vt1.c0)) COLLATE BINARY);
SELECT * FROM t1 RIGHT OUTER JOIN rt72 ON CAST(LOWER(DISTINCT rt72.c0) AS REAL) CROSS JOIN vt1 ON (((vt1.c0 IN ())) NOT BETWEEN ((((rt72.c0, vt1.c0, vt1.c0))>((rt72.c1, NULL, t1.c0)))) AND (TIME(vt1.c0, rt72.c1, t1.c67))) WHERE (CAST(CAST(t1.c0 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN CAST(t1.c67 AS BLOB) THEN (((rt72.c2)) BETWEEN ((x'')) AND ((t1.c67))) END ASC, ((((rt72.c0)AND(t1.c67)))OR(vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1, rt72 LEFT OUTER JOIN vt0 ON ((0.37475387317062514)<(((rt72.c2)>(rt72.c1)))) WHERE (0X194ff6f3);
SELECT SUM(count) FROM (SELECT ALL ((0X194ff6f3) IS TRUE)  as count FROM vt1, rt72 LEFT OUTER JOIN vt0 ON ((0.37475387317062514)<(((rt72.c2)>(rt72.c1)))));
SELECT * FROM vt1, rt72 LEFT OUTER JOIN vt0 ON ((0.37475387317062514)<(((rt72.c2)>(rt72.c1)))) WHERE (0X194ff6f3);
SELECT SUM(count) FROM (SELECT ALL ((0X194ff6f3) IS TRUE)  as count FROM vt1, rt72 LEFT OUTER JOIN vt0 ON ((0.37475387317062514)<(((rt72.c2)>(rt72.c1)))));
SELECT * FROM vt1, rt72 LEFT OUTER JOIN vt0 ON ((0.37475387317062514)<(((rt72.c2)>(rt72.c1)))) WHERE (0X194ff6f3);
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY json_patch(UNLIKELY(DISTINCT rt72.c2), ((rt72.c2) BETWEEN (rt72.c2) AND (-1.596882345E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72 ORDER BY json_patch(UNLIKELY(DISTINCT rt72.c2), ((rt72.c2) BETWEEN (rt72.c2) AND (-1.596882345E9)))  NULLS FIRST);
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY json_patch(UNLIKELY(DISTINCT rt72.c2), ((rt72.c2) BETWEEN (rt72.c2) AND (-1.596882345E9)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72 ORDER BY json_patch(UNLIKELY(DISTINCT rt72.c2), ((rt72.c2) BETWEEN (rt72.c2) AND (-1.596882345E9)))  NULLS FIRST);
SELECT ALL * FROM rt72 WHERE (rt72.c0) ORDER BY json_patch(UNLIKELY(DISTINCT rt72.c2), ((rt72.c2) BETWEEN (rt72.c2) AND (-1.596882345E9)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE ((((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((rt72.c2))))=((NULL IN ())))) ORDER BY ((rt72.c2)IS(t1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((rt72.c2))))=((NULL IN ())))) IS TRUE)  as count FROM rt72, vt0, t1, vt1 ORDER BY ((rt72.c2)IS(t1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE ((((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((rt72.c2))))=((NULL IN ())))) ORDER BY ((rt72.c2)IS(t1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((rt72.c2))))=((NULL IN ())))) IS TRUE)  as count FROM rt72, vt0, t1, vt1 ORDER BY ((rt72.c2)IS(t1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE ((((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((rt72.c2))))=((NULL IN ())))) ORDER BY ((rt72.c2)IS(t1.c0)) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t1, rt72 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE (((((rt72.c2)-(vt1.c0)))/(rt72.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)-(vt1.c0)))/(rt72.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt72 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL));
SELECT ALL * FROM t1, rt72 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE (((((rt72.c2)-(vt1.c0)))/(rt72.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)-(vt1.c0)))/(rt72.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt72 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL));
SELECT ALL * FROM t1, rt72 LEFT OUTER JOIN vt1 ON (((vt1.c0 IN ())) NOT NULL) WHERE (((((rt72.c2)-(vt1.c0)))/(rt72.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE (((('t#'))<=((x'12c8'))));
SELECT SUM(count) FROM (SELECT ((((('t#'))<=((x'12c8')))) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE (((('t#'))<=((x'12c8'))));
SELECT SUM(count) FROM (SELECT ((((('t#'))<=((x'12c8')))) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE (((('t#'))<=((x'12c8'))));
SELECT * FROM vt0 CROSS JOIN rt72 ON rt72.c0 WHERE (((((((((rt72.c2 COLLATE RTRIM)OR((+ (rt72.c1)))))AND((+ ('-1380786241')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt72.c1)))AND(vt0.c0)))OR(rt72.c1)))))AND((rt72.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt72.c2 COLLATE RTRIM)OR((+ (rt72.c1)))))AND((+ ('-1380786241')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt72.c1)))AND(vt0.c0)))OR(rt72.c1)))))AND((rt72.c2 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt72 ON rt72.c0);
SELECT * FROM vt0 CROSS JOIN rt72 ON rt72.c0 WHERE (((((((((rt72.c2 COLLATE RTRIM)OR((+ (rt72.c1)))))AND((+ ('-1380786241')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt72.c1)))AND(vt0.c0)))OR(rt72.c1)))))AND((rt72.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt72.c2 COLLATE RTRIM)OR((+ (rt72.c1)))))AND((+ ('-1380786241')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt72.c1)))AND(vt0.c0)))OR(rt72.c1)))))AND((rt72.c2 IN ())))) IS TRUE)  as count FROM vt0 CROSS JOIN rt72 ON rt72.c0);
SELECT * FROM vt0 CROSS JOIN rt72 ON rt72.c0 WHERE (((((((((rt72.c2 COLLATE RTRIM)OR((+ (rt72.c1)))))AND((+ ('-1380786241')))))AND(((((((((vt0.c0)OR(vt0.c0)))OR(rt72.c1)))AND(vt0.c0)))OR(rt72.c1)))))AND((rt72.c2 IN ()))));
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN rt72.c1 COLLATE BINARY THEN NULL COLLATE NOCASE WHEN rt72.c2 THEN COALESCE(rt72.c1, rt72.c2) WHEN ((rt72.c2) NOT BETWEEN (vt0.c0) AND (rt72.c1)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((rt72.c0)OR(vt1.c0)))AND(x'')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt72.c1 COLLATE BINARY THEN NULL COLLATE NOCASE WHEN rt72.c2 THEN COALESCE(rt72.c1, rt72.c2) WHEN ((rt72.c2) NOT BETWEEN (vt0.c0) AND (rt72.c1)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72, vt1 ORDER BY ((((((rt72.c0)OR(vt1.c0)))AND(x'')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN rt72.c1 COLLATE BINARY THEN NULL COLLATE NOCASE WHEN rt72.c2 THEN COALESCE(rt72.c1, rt72.c2) WHEN ((rt72.c2) NOT BETWEEN (vt0.c0) AND (rt72.c1)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((rt72.c0)OR(vt1.c0)))AND(x'')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt72.c1 COLLATE BINARY THEN NULL COLLATE NOCASE WHEN rt72.c2 THEN COALESCE(rt72.c1, rt72.c2) WHEN ((rt72.c2) NOT BETWEEN (vt0.c0) AND (rt72.c1)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72, vt1 ORDER BY ((((((rt72.c0)OR(vt1.c0)))AND(x'')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM vt0, rt72, vt1 WHERE (CASE WHEN rt72.c1 COLLATE BINARY THEN NULL COLLATE NOCASE WHEN rt72.c2 THEN COALESCE(rt72.c1, rt72.c2) WHEN ((rt72.c2) NOT BETWEEN (vt0.c0) AND (rt72.c1)) THEN (vt0.c0 IN ()) END) ORDER BY ((((((rt72.c0)OR(vt1.c0)))AND(x'')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY NULL, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY NULL, (- ((vt0.c0 IN ()))));
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY NULL, (- ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (t1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY NULL, (- ((vt0.c0 IN ()))));
SELECT ALL * FROM vt1, vt0, t1 WHERE (CAST((NOT (t1.c0)) AS TEXT)) ORDER BY NULL, (- ((vt0.c0 IN ())));
SELECT ALL * FROM vt1, t1, rt72 FULL OUTER JOIN vt0 ON '-1823357064' WHERE (((((-178580147)&(rt72.c0))) BETWEEN (((rt72.c2) NOT NULL)) AND (vt1.c0))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((-178580147)&(rt72.c0))) BETWEEN (((rt72.c2) NOT NULL)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, t1, rt72 FULL OUTER JOIN vt0 ON '-1823357064' ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt72 FULL OUTER JOIN vt0 ON '-1823357064' WHERE (((((-178580147)&(rt72.c0))) BETWEEN (((rt72.c2) NOT NULL)) AND (vt1.c0))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((-178580147)&(rt72.c0))) BETWEEN (((rt72.c2) NOT NULL)) AND (vt1.c0))) IS TRUE)  as count FROM vt1, t1, rt72 FULL OUTER JOIN vt0 ON '-1823357064' ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt72 FULL OUTER JOIN vt0 ON '-1823357064' WHERE (((((-178580147)&(rt72.c0))) BETWEEN (((rt72.c2) NOT NULL)) AND (vt1.c0))) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM rt72, t1, vt0 WHERE ((~ ((+ (rt72.c1))))) ORDER BY ABS(DISTINCT ((t1.c0)AND(t1.c67)));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt72.c1))))) IS TRUE)  as count FROM rt72, t1, vt0 ORDER BY ABS(DISTINCT ((t1.c0)AND(t1.c67))));
SELECT * FROM rt72, t1, vt0 WHERE ((~ ((+ (rt72.c1))))) ORDER BY ABS(DISTINCT ((t1.c0)AND(t1.c67)));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt72.c1))))) IS TRUE)  as count FROM rt72, t1, vt0 ORDER BY ABS(DISTINCT ((t1.c0)AND(t1.c67))));
SELECT * FROM rt72, t1, vt0 WHERE ((~ ((+ (rt72.c1))))) ORDER BY ABS(DISTINCT ((t1.c0)AND(t1.c67)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt72 ON (vt1.c0 COLLATE RTRIM IN ('', ((vt0.c0) NOTNULL))) WHERE (TYPEOF(NULL)) ORDER BY (((((rt72.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c1)))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND (CASE WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt72 ON (vt1.c0 COLLATE RTRIM IN ('', ((vt0.c0) NOTNULL))) ORDER BY (((((rt72.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c1)))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND (CASE WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt72 ON (vt1.c0 COLLATE RTRIM IN ('', ((vt0.c0) NOTNULL))) WHERE (TYPEOF(NULL)) ORDER BY (((((rt72.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c1)))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND (CASE WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt72 ON (vt1.c0 COLLATE RTRIM IN ('', ((vt0.c0) NOTNULL))) ORDER BY (((((rt72.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c1)))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND (CASE WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt72 ON (vt1.c0 COLLATE RTRIM IN ('', ((vt0.c0) NOTNULL))) WHERE (TYPEOF(NULL)) ORDER BY (((((rt72.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c1)))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND (CASE WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (x'') AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (x'') AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (x'') AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (x'') AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (x'') AND (((vt1.c0) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ((vt1.c0 IN (vt1.c0)))) ASC, vt1.c0  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND ((~ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN (vt1.c0)))) ASC, vt1.c0  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND ((~ (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ((vt1.c0 IN (vt1.c0)))) ASC, vt1.c0  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND ((~ (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN (vt1.c0)))) ASC, vt1.c0  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND ((~ (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (- ((vt1.c0 IN (vt1.c0)))) ASC, vt1.c0  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)<<(vt1.c0))) AND ((~ (vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t1 RIGHT OUTER JOIN rt72 ON (((((rt72.c2, t1.c67, vt1.c0)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2)) AND ((rt72.c1, t1.c67, rt72.c2))))<<(t1.c67)) WHERE (CAST((t1.c67 IN ()) AS TEXT)) ORDER BY (- (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c67 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 RIGHT OUTER JOIN rt72 ON (((((rt72.c2, t1.c67, vt1.c0)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2)) AND ((rt72.c1, t1.c67, rt72.c2))))<<(t1.c67)) ORDER BY (- (NULL)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 RIGHT OUTER JOIN rt72 ON (((((rt72.c2, t1.c67, vt1.c0)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2)) AND ((rt72.c1, t1.c67, rt72.c2))))<<(t1.c67)) WHERE (CAST((t1.c67 IN ()) AS TEXT)) ORDER BY (- (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((t1.c67 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, vt0, t1 RIGHT OUTER JOIN rt72 ON (((((rt72.c2, t1.c67, vt1.c0)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2)) AND ((rt72.c1, t1.c67, rt72.c2))))<<(t1.c67)) ORDER BY (- (NULL)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, t1 RIGHT OUTER JOIN rt72 ON (((((rt72.c2, t1.c67, vt1.c0)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2)) AND ((rt72.c1, t1.c67, rt72.c2))))<<(t1.c67)) WHERE (CAST((t1.c67 IN ()) AS TEXT)) ORDER BY (- (NULL)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (((vt1.c0)AND((('-854007908') NOT BETWEEN (t1.c0) AND (rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND((('-854007908') NOT BETWEEN (t1.c0) AND (rt72.c0))))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (((vt1.c0)AND((('-854007908') NOT BETWEEN (t1.c0) AND (rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)AND((('-854007908') NOT BETWEEN (t1.c0) AND (rt72.c0))))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL * FROM vt0, vt1, rt72, t1 WHERE (((vt1.c0)AND((('-854007908') NOT BETWEEN (t1.c0) AND (rt72.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c67 AS INTEGER))/(CAST(t1.c67 AS NUMERIC)))) ORDER BY ((((t1.c67)>(t1.c0)))<('1346384443')) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c67 AS INTEGER))/(CAST(t1.c67 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c67)>(t1.c0)))<('1346384443')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c67 AS INTEGER))/(CAST(t1.c67 AS NUMERIC)))) ORDER BY ((((t1.c67)>(t1.c0)))<('1346384443')) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c67 AS INTEGER))/(CAST(t1.c67 AS NUMERIC)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c67)>(t1.c0)))<('1346384443')) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c67 AS INTEGER))/(CAST(t1.c67 AS NUMERIC)))) ORDER BY ((((t1.c67)>(t1.c0)))<('1346384443')) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY ((((vt1.c0) NOTNULL))AND(((vt1.c0)<(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))AND(((vt1.c0)<(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY ((((vt1.c0) NOTNULL))AND(((vt1.c0)<(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL))AND(((vt1.c0)<(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY ((((vt1.c0) NOTNULL))AND(((vt1.c0)<(vt1.c0)))) ASC;
SELECT ALL * FROM rt72, vt0, t1 NOT INDEXED NATURAL JOIN vt1 WHERE (NULLIF(((vt1.c0)<=(t1.c0)), CAST(rt72.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0)<=(t1.c0)), CAST(rt72.c1 AS INTEGER))) IS TRUE)  as count FROM rt72, vt0, t1 NATURAL JOIN vt1);
SELECT ALL * FROM rt72, vt0, t1 NOT INDEXED NATURAL JOIN vt1 WHERE (NULLIF(((vt1.c0)<=(t1.c0)), CAST(rt72.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0)<=(t1.c0)), CAST(rt72.c1 AS INTEGER))) IS TRUE)  as count FROM rt72, vt0, t1 NATURAL JOIN vt1);
SELECT ALL * FROM rt72, vt0, t1 NOT INDEXED NATURAL JOIN vt1 WHERE (NULLIF(((vt1.c0)<=(t1.c0)), CAST(rt72.c1 AS INTEGER)));
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (((((t1.c0) ISNULL))/('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) ISNULL))/(''))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (((((t1.c0) ISNULL))/('')));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) ISNULL))/(''))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (((((t1.c0) ISNULL))/('')));
SELECT ALL * FROM t1, vt0, vt1, rt72 WHERE (DATE((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN rt72.c2 WHEN '&' THEN rt72.c2 WHEN t1.c67 THEN rt72.c0 ELSE '''>' END, ((((((((x'31fc')OR(rt72.c2)))AND(rt72.c0)))AND(x'')))OR(rt72.c0)), rt72.c1 COLLATE NOCASE, ((vt0.c0)AND(rt72.c1)))) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(CASE WHEN vt1.c0 THEN t1.c67 WHEN rt72.c1 THEN 0.9492198474966894 WHEN rt72.c2 THEN '926754595' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN rt72.c2 WHEN '&' THEN rt72.c2 WHEN t1.c67 THEN rt72.c0 ELSE '''>' END, ((((((((x'31fc')OR(rt72.c2)))AND(rt72.c0)))AND(x'')))OR(rt72.c0)), rt72.c1 COLLATE NOCASE, ((vt0.c0)AND(rt72.c1)))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(CASE WHEN vt1.c0 THEN t1.c67 WHEN rt72.c1 THEN 0.9492198474966894 WHEN rt72.c2 THEN '926754595' END))  NULLS FIRST);
SELECT ALL * FROM t1, vt0, vt1, rt72 WHERE (DATE((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN rt72.c2 WHEN '&' THEN rt72.c2 WHEN t1.c67 THEN rt72.c0 ELSE '''>' END, ((((((((x'31fc')OR(rt72.c2)))AND(rt72.c0)))AND(x'')))OR(rt72.c0)), rt72.c1 COLLATE NOCASE, ((vt0.c0)AND(rt72.c1)))) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(CASE WHEN vt1.c0 THEN t1.c67 WHEN rt72.c1 THEN 0.9492198474966894 WHEN rt72.c2 THEN '926754595' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN rt72.c2 WHEN '&' THEN rt72.c2 WHEN t1.c67 THEN rt72.c0 ELSE '''>' END, ((((((((x'31fc')OR(rt72.c2)))AND(rt72.c0)))AND(x'')))OR(rt72.c0)), rt72.c1 COLLATE NOCASE, ((vt0.c0)AND(rt72.c1)))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(CASE WHEN vt1.c0 THEN t1.c67 WHEN rt72.c1 THEN 0.9492198474966894 WHEN rt72.c2 THEN '926754595' END))  NULLS FIRST);
SELECT ALL * FROM t1, vt0, vt1, rt72 WHERE (DATE((vt0.c0 IN ()), CASE WHEN vt1.c0 THEN rt72.c2 WHEN '&' THEN rt72.c2 WHEN t1.c67 THEN rt72.c0 ELSE '''>' END, ((((((((x'31fc')OR(rt72.c2)))AND(rt72.c0)))AND(x'')))OR(rt72.c0)), rt72.c1 COLLATE NOCASE, ((vt0.c0)AND(rt72.c1)))) ORDER BY ((CAST(vt0.c0 AS BLOB))GLOB(CASE WHEN vt1.c0 THEN t1.c67 WHEN rt72.c1 THEN 0.9492198474966894 WHEN rt72.c2 THEN '926754595' END))  NULLS FIRST;
SELECT COUNT(*) FROM rt72 INDEXED BY i3 WHERE (json_patch((NOT (rt72.c0)), x'7e72')) ORDER BY CAST((rt72.c2 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((NOT (rt72.c0)), x'7e72')) IS TRUE)  as count FROM rt72 INDEXED BY i3 ORDER BY CAST((rt72.c2 IN ()) AS REAL) DESC);
SELECT COUNT(*) FROM rt72 INDEXED BY i3 WHERE (json_patch((NOT (rt72.c0)), x'7e72')) ORDER BY CAST((rt72.c2 IN ()) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ((json_patch((NOT (rt72.c0)), x'7e72')) IS TRUE)  as count FROM rt72 INDEXED BY i3 ORDER BY CAST((rt72.c2 IN ()) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((CAST(t1.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt72.c2)) FULL OUTER JOIN rt72 ON ((((((((CASE rt72.c1  WHEN rt72.c0 THEN t1.c0 END)AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))))AND((((rt72.c2))<>((rt72.c1))))))AND((rt72.c2 IN ()))) WHERE (NULL) ORDER BY ((rt72.c2) BETWEEN (rt72.c2) AND (t1.c67)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((CAST(t1.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt72.c2)) FULL OUTER JOIN rt72 ON ((((((((CASE rt72.c1  WHEN rt72.c0 THEN t1.c0 END)AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))))AND((((rt72.c2))<>((rt72.c1))))))AND((rt72.c2 IN ()))) ORDER BY ((rt72.c2) BETWEEN (rt72.c2) AND (t1.c67)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t1 ON ((CAST(t1.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt72.c2)) FULL OUTER JOIN rt72 ON ((((((((CASE rt72.c1  WHEN rt72.c0 THEN t1.c0 END)AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))))AND((((rt72.c2))<>((rt72.c1))))))AND((rt72.c2 IN ()))) WHERE (NULL) ORDER BY ((rt72.c2) BETWEEN (rt72.c2) AND (t1.c67)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((CAST(t1.c0 AS REAL)) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (rt72.c2)) FULL OUTER JOIN rt72 ON ((((((((CASE rt72.c1  WHEN rt72.c0 THEN t1.c0 END)AND(((vt0.c0) IS TRUE))))OR(CAST(vt0.c0 AS INTEGER))))AND((((rt72.c2))<>((rt72.c1))))))AND((rt72.c2 IN ()))) ORDER BY ((rt72.c2) BETWEEN (rt72.c2) AND (t1.c67)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN t1.c67 WHEN rtreenode(t1.c0, t1.c67) THEN (((t1.c0))<=((t1.c67))) WHEN ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))AND(t1.c67)))AND(t1.c67)) THEN t1.c67 WHEN t1.c67 COLLATE NOCASE THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END WHEN (((t1.c67, t1.c0, t1.c0))<=((t1.c0, t1.c67, ''))) THEN (((t1.c67)) NOT BETWEEN ((t1.c0)) AND ((t1.c67))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN ()) THEN t1.c67 WHEN rtreenode(t1.c0, t1.c67) THEN (((t1.c0))<=((t1.c67))) WHEN ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))AND(t1.c67)))AND(t1.c67)) THEN t1.c67 WHEN t1.c67 COLLATE NOCASE THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END WHEN (((t1.c67, t1.c0, t1.c0))<=((t1.c0, t1.c67, ''))) THEN (((t1.c67)) NOT BETWEEN ((t1.c0)) AND ((t1.c67))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN t1.c67 WHEN rtreenode(t1.c0, t1.c67) THEN (((t1.c0))<=((t1.c67))) WHEN ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))AND(t1.c67)))AND(t1.c67)) THEN t1.c67 WHEN t1.c67 COLLATE NOCASE THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END WHEN (((t1.c67, t1.c0, t1.c0))<=((t1.c0, t1.c67, ''))) THEN (((t1.c67)) NOT BETWEEN ((t1.c0)) AND ((t1.c67))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN ()) THEN t1.c67 WHEN rtreenode(t1.c0, t1.c67) THEN (((t1.c0))<=((t1.c67))) WHEN ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))AND(t1.c67)))AND(t1.c67)) THEN t1.c67 WHEN t1.c67 COLLATE NOCASE THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END WHEN (((t1.c67, t1.c0, t1.c0))<=((t1.c0, t1.c67, ''))) THEN (((t1.c67)) NOT BETWEEN ((t1.c0)) AND ((t1.c67))) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c0 IN ()) THEN t1.c67 WHEN rtreenode(t1.c0, t1.c67) THEN (((t1.c0))<=((t1.c67))) WHEN ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))AND(t1.c67)))AND(t1.c67)) THEN t1.c67 WHEN t1.c67 COLLATE NOCASE THEN CASE t1.c0  WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END WHEN (((t1.c67, t1.c0, t1.c0))<=((t1.c0, t1.c67, ''))) THEN (((t1.c67)) NOT BETWEEN ((t1.c0)) AND ((t1.c67))) END);
SELECT ALL * FROM t1, rt72 WHERE (rt72.c2) ORDER BY ((((((((((t1.c0)>(rt72.c1)))AND(((rt72.c0)AND(0.3668136591852046)))))AND(((rt72.c2) ISNULL))))OR((rt72.c2 IN (rt72.c1, t1.c0)))))AND(((((rt72.c2)OR(t1.c0)))OR(t1.c0))))  NULLS LAST, (((((rt72.c1) NOT BETWEEN (t1.c0) AND (rt72.c0))))>((((t1.c67) NOT BETWEEN (t1.c0) AND (rt72.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM t1, rt72 ORDER BY ((((((((((t1.c0)>(rt72.c1)))AND(((rt72.c0)AND(0.3668136591852046)))))AND(((rt72.c2) ISNULL))))OR((rt72.c2 IN (rt72.c1, t1.c0)))))AND(((((rt72.c2)OR(t1.c0)))OR(t1.c0))))  NULLS LAST, (((((rt72.c1) NOT BETWEEN (t1.c0) AND (rt72.c0))))>((((t1.c67) NOT BETWEEN (t1.c0) AND (rt72.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt72 WHERE (rt72.c2) ORDER BY ((((((((((t1.c0)>(rt72.c1)))AND(((rt72.c0)AND(0.3668136591852046)))))AND(((rt72.c2) ISNULL))))OR((rt72.c2 IN (rt72.c1, t1.c0)))))AND(((((rt72.c2)OR(t1.c0)))OR(t1.c0))))  NULLS LAST, (((((rt72.c1) NOT BETWEEN (t1.c0) AND (rt72.c0))))>((((t1.c67) NOT BETWEEN (t1.c0) AND (rt72.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM t1, rt72 ORDER BY ((((((((((t1.c0)>(rt72.c1)))AND(((rt72.c0)AND(0.3668136591852046)))))AND(((rt72.c2) ISNULL))))OR((rt72.c2 IN (rt72.c1, t1.c0)))))AND(((((rt72.c2)OR(t1.c0)))OR(t1.c0))))  NULLS LAST, (((((rt72.c1) NOT BETWEEN (t1.c0) AND (rt72.c0))))>((((t1.c67) NOT BETWEEN (t1.c0) AND (rt72.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt72 WHERE (rt72.c2) ORDER BY ((((((((((t1.c0)>(rt72.c1)))AND(((rt72.c0)AND(0.3668136591852046)))))AND(((rt72.c2) ISNULL))))OR((rt72.c2 IN (rt72.c1, t1.c0)))))AND(((((rt72.c2)OR(t1.c0)))OR(t1.c0))))  NULLS LAST, (((((rt72.c1) NOT BETWEEN (t1.c0) AND (rt72.c0))))>((((t1.c67) NOT BETWEEN (t1.c0) AND (rt72.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0)<=(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0)))AND((+ (vt1.c0)))), (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)<=(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0)))AND((+ (vt1.c0)))), (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0)<=(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0)))AND((+ (vt1.c0)))), (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)<=(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0)))AND((+ (vt1.c0)))), (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY ((((((((((vt1.c0)<=(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))AND(vt1.c0)))AND((+ (vt1.c0)))), (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))<=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))!=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))!=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE BINARY);
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (rt72.c0) ORDER BY CASE WHEN ((rt72.c2)>(rt72.c0)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.c0))==((t1.c0))) WHEN (rt72.c1 IN (rt72.c2)) THEN ((((vt1.c0)AND(t1.c67)))OR(rt72.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY CASE WHEN ((rt72.c2)>(rt72.c0)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.c0))==((t1.c0))) WHEN (rt72.c1 IN (rt72.c2)) THEN ((((vt1.c0)AND(t1.c67)))OR(rt72.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (rt72.c0) ORDER BY CASE WHEN ((rt72.c2)>(rt72.c0)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.c0))==((t1.c0))) WHEN (rt72.c1 IN (rt72.c2)) THEN ((((vt1.c0)AND(t1.c67)))OR(rt72.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY CASE WHEN ((rt72.c2)>(rt72.c0)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.c0))==((t1.c0))) WHEN (rt72.c1 IN (rt72.c2)) THEN ((((vt1.c0)AND(t1.c67)))OR(rt72.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t1, rt72, vt0, vt1 WHERE (rt72.c0) ORDER BY CASE WHEN ((rt72.c2)>(rt72.c0)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.c0))==((t1.c0))) WHEN (rt72.c1 IN (rt72.c2)) THEN ((((vt1.c0)AND(t1.c67)))OR(rt72.c2)) END DESC  NULLS LAST;
SELECT * FROM vt1, rt72, t1 WHERE (((rt72.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt72.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT * FROM vt1, rt72, t1 WHERE (((rt72.c2 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt72.c2 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT * FROM vt1, rt72, t1 WHERE (((rt72.c2 COLLATE BINARY) ISNULL));
SELECT COUNT(*) FROM vt0, t1, rt72, vt1 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, rt72, vt1);
SELECT COUNT(*) FROM vt0, t1, rt72, vt1 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, rt72, vt1);
SELECT COUNT(*) FROM vt0, t1, rt72, vt1 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN NULL ELSE vt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)%(vt1.c0)), 0.8527468310331462)) AND ((((vt1.c0) IS FALSE), (~ (-1440749979)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'f5e7' WHEN vt1.c0 THEN x'a8a9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)%(vt1.c0)), 0.8527468310331462)) AND ((((vt1.c0) IS FALSE), (~ (-1440749979)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'f5e7' WHEN vt1.c0 THEN x'a8a9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)%(vt1.c0)), 0.8527468310331462)) AND ((((vt1.c0) IS FALSE), (~ (-1440749979)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'f5e7' WHEN vt1.c0 THEN x'a8a9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)<>(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)%(vt1.c0)), 0.8527468310331462)) AND ((((vt1.c0) IS FALSE), (~ (-1440749979)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'f5e7' WHEN vt1.c0 THEN x'a8a9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)<>(vt1.c0))))) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), ((vt1.c0)%(vt1.c0)), 0.8527468310331462)) AND ((((vt1.c0) IS FALSE), (~ (-1440749979)), CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'f5e7' WHEN vt1.c0 THEN x'a8a9' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT ALL * FROM t1, vt0 WHERE ((- (((t1.c67)IS(t1.c67)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c67)IS(t1.c67))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((- (((t1.c67)IS(t1.c67)))));
SELECT SUM(count) FROM (SELECT (((- (((t1.c67)IS(t1.c67))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((- (((t1.c67)IS(t1.c67)))));
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt72 ON ((CAST(rt72.c0 AS REAL))>=((((t1.c0, t1.c0, vt0.c0))>=((vt0.c0, vt0.c0, t1.c67))))) WHERE (((((rt72.c2) NOTNULL))GLOB(((rt72.c1) NOT BETWEEN (x'') AND (t1.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST, ((TOTAL_CHANGES())|((((vt0.c0))>((rt72.c1)))))  NULLS FIRST, 0Xffffffffdfc75f6e ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2) NOTNULL))GLOB(((rt72.c1) NOT BETWEEN (x'') AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt72 ON ((CAST(rt72.c0 AS REAL))>=((((t1.c0, t1.c0, vt0.c0))>=((vt0.c0, vt0.c0, t1.c67))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST, ((TOTAL_CHANGES())|((((vt0.c0))>((rt72.c1)))))  NULLS FIRST, 0Xffffffffdfc75f6e ASC);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt72 ON ((CAST(rt72.c0 AS REAL))>=((((t1.c0, t1.c0, vt0.c0))>=((vt0.c0, vt0.c0, t1.c67))))) WHERE (((((rt72.c2) NOTNULL))GLOB(((rt72.c1) NOT BETWEEN (x'') AND (t1.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST, ((TOTAL_CHANGES())|((((vt0.c0))>((rt72.c1)))))  NULLS FIRST, 0Xffffffffdfc75f6e ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2) NOTNULL))GLOB(((rt72.c1) NOT BETWEEN (x'') AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN rt72 ON ((CAST(rt72.c0 AS REAL))>=((((t1.c0, t1.c0, vt0.c0))>=((vt0.c0, vt0.c0, t1.c67))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST, ((TOTAL_CHANGES())|((((vt0.c0))>((rt72.c1)))))  NULLS FIRST, 0Xffffffffdfc75f6e ASC);
SELECT ALL COUNT(*) FROM vt0, t1 RIGHT OUTER JOIN rt72 ON ((CAST(rt72.c0 AS REAL))>=((((t1.c0, t1.c0, vt0.c0))>=((vt0.c0, vt0.c0, t1.c67))))) WHERE (((((rt72.c2) NOTNULL))GLOB(((rt72.c1) NOT BETWEEN (x'') AND (t1.c0))))) ORDER BY (+ (vt0.c0)) COLLATE RTRIM COLLATE NOCASE ASC  NULLS LAST, ((TOTAL_CHANGES())|((((vt0.c0))>((rt72.c1)))))  NULLS FIRST, 0Xffffffffdfc75f6e ASC;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt72 ON (((((t1.c0)AND(rt72.c2)))AND(t1.c67)) IN ()) FULL OUTER JOIN t1 ON t1.c0 WHERE (rt72.c2) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN t1.c67 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt72 ON (((((t1.c0)AND(rt72.c2)))AND(t1.c67)) IN ()) FULL OUTER JOIN t1 ON t1.c0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN t1.c67 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt72 ON (((((t1.c0)AND(rt72.c2)))AND(t1.c67)) IN ()) FULL OUTER JOIN t1 ON t1.c0 WHERE (rt72.c2) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN t1.c67 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt72 ON (((((t1.c0)AND(rt72.c2)))AND(t1.c67)) IN ()) FULL OUTER JOIN t1 ON t1.c0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN t1.c67 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt72 ON (((((t1.c0)AND(rt72.c2)))AND(t1.c67)) IN ()) FULL OUTER JOIN t1 ON t1.c0 WHERE (rt72.c2) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN t1.c67 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (rt72.c0) ORDER BY (~ (((vt1.c0)<=(x'208c2b45'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY (~ (((vt1.c0)<=(x'208c2b45'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (rt72.c0) ORDER BY (~ (((vt1.c0)<=(x'208c2b45'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY (~ (((vt1.c0)<=(x'208c2b45'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (rt72.c0) ORDER BY (~ (((vt1.c0)<=(x'208c2b45'))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB));
SELECT COUNT(*) FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0, rt72);
SELECT COUNT(*) FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0, rt72);
SELECT COUNT(*) FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))LIKE(((vt1.c0)==(NULL))))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND ('0.0')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0))LIKE(((vt1.c0)==(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND ('0.0')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))LIKE(((vt1.c0)==(NULL))))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND ('0.0')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TRIM(vt1.c0))LIKE(((vt1.c0)==(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND ('0.0')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((TRIM(vt1.c0))LIKE(((vt1.c0)==(NULL))))) ORDER BY (((vt1.c0) BETWEEN (vt1.c0) AND ('0.0')) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t1, rt72 INDEXED BY i60, vt0 WHERE (((CAST(rt72.c1 AS INTEGER))%(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt72.c1 AS INTEGER))%(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, rt72 INDEXED BY i60, vt0);
SELECT COUNT(*) FROM vt1, t1, rt72 INDEXED BY i60, vt0 WHERE (((CAST(rt72.c1 AS INTEGER))%(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt72.c1 AS INTEGER))%(NULL COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, rt72 INDEXED BY i60, vt0);
SELECT ALL COUNT(*) FROM rt72 RIGHT OUTER JOIN vt1 ON (NOT (((rt72.c2)<=(rt72.c2)))) WHERE ((('-1799089938')IS NOT(0.6883932140081309)));
SELECT SUM(count) FROM (SELECT (((('-1799089938')IS NOT(0.6883932140081309))) IS TRUE)  as count FROM rt72 RIGHT OUTER JOIN vt1 ON (NOT (((rt72.c2)<=(rt72.c2)))));
SELECT ALL COUNT(*) FROM rt72 RIGHT OUTER JOIN vt1 ON (NOT (((rt72.c2)<=(rt72.c2)))) WHERE ((('-1799089938')IS NOT(0.6883932140081309)));
SELECT SUM(count) FROM (SELECT (((('-1799089938')IS NOT(0.6883932140081309))) IS TRUE)  as count FROM rt72 RIGHT OUTER JOIN vt1 ON (NOT (((rt72.c2)<=(rt72.c2)))));
SELECT ALL COUNT(*) FROM rt72 RIGHT OUTER JOIN vt1 ON (NOT (((rt72.c2)<=(rt72.c2)))) WHERE ((('-1799089938')IS NOT(0.6883932140081309)));
SELECT ALL * FROM rt72 WHERE ((+ (((rt72.c1)IS('1146111974'))))) ORDER BY ((((rt72.c2)<(rt72.c0))) BETWEEN (TOTAL_CHANGES()) AND (((rt72.c0)-(rt72.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt72.c1)IS('1146111974'))))) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c2)<(rt72.c0))) BETWEEN (TOTAL_CHANGES()) AND (((rt72.c0)-(rt72.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt72 WHERE ((+ (((rt72.c1)IS('1146111974'))))) ORDER BY ((((rt72.c2)<(rt72.c0))) BETWEEN (TOTAL_CHANGES()) AND (((rt72.c0)-(rt72.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt72.c1)IS('1146111974'))))) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c2)<(rt72.c0))) BETWEEN (TOTAL_CHANGES()) AND (((rt72.c0)-(rt72.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM rt72 WHERE ((+ (((rt72.c1)IS('1146111974'))))) ORDER BY ((((rt72.c2)<(rt72.c0))) BETWEEN (TOTAL_CHANGES()) AND (((rt72.c0)-(rt72.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC) WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((+ (vt1.c0)), NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((+ (vt1.c0)), NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC) WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((+ (vt1.c0)), NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((+ (vt1.c0)), NULL COLLATE RTRIM))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON CAST(((vt1.c0)IS(vt1.c0)) AS NUMERIC) WHERE ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) IN ((+ (vt1.c0)), NULL COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t1 WHERE (x'df8d') ORDER BY ((((((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c67)OR(t1.c0)))OR(NULL)))))OR(t1.c0)))AND(((t1.c67) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c67)<=(t1.c0)))), t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'df8d') IS TRUE)  as count FROM t1 ORDER BY ((((((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c67)OR(t1.c0)))OR(NULL)))))OR(t1.c0)))AND(((t1.c67) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c67)<=(t1.c0)))), t1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'df8d') ORDER BY ((((((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c67)OR(t1.c0)))OR(NULL)))))OR(t1.c0)))AND(((t1.c67) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c67)<=(t1.c0)))), t1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'df8d') IS TRUE)  as count FROM t1 ORDER BY ((((((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c67)OR(t1.c0)))OR(NULL)))))OR(t1.c0)))AND(((t1.c67) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c67)<=(t1.c0)))), t1.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'df8d') ORDER BY ((((((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(((((t1.c67)OR(t1.c0)))OR(NULL)))))OR(t1.c0)))AND(((t1.c67) BETWEEN (t1.c0) AND (t1.c0)))))AND(((t1.c67)<=(t1.c0)))), t1.c0 ASC  NULLS LAST;
SELECT ALL * FROM t1, rt72 WHERE ((((t1.c0 IN ()))IS(rt72.c0))) ORDER BY ((CASE WHEN rt72.c1 THEN rt72.c1 WHEN t1.c67 THEN rt72.c0 WHEN rt72.c0 THEN t1.c0 END)IS(x'6884')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))IS(rt72.c0))) IS TRUE)  as count FROM t1, rt72 ORDER BY ((CASE WHEN rt72.c1 THEN rt72.c1 WHEN t1.c67 THEN rt72.c0 WHEN rt72.c0 THEN t1.c0 END)IS(x'6884')) DESC);
SELECT ALL * FROM t1, rt72 WHERE ((((t1.c0 IN ()))IS(rt72.c0))) ORDER BY ((CASE WHEN rt72.c1 THEN rt72.c1 WHEN t1.c67 THEN rt72.c0 WHEN rt72.c0 THEN t1.c0 END)IS(x'6884')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))IS(rt72.c0))) IS TRUE)  as count FROM t1, rt72 ORDER BY ((CASE WHEN rt72.c1 THEN rt72.c1 WHEN t1.c67 THEN rt72.c0 WHEN rt72.c0 THEN t1.c0 END)IS(x'6884')) DESC);
SELECT ALL * FROM t1, rt72 WHERE ((((t1.c0 IN ()))IS(rt72.c0))) ORDER BY ((CASE WHEN rt72.c1 THEN rt72.c1 WHEN t1.c67 THEN rt72.c0 WHEN rt72.c0 THEN t1.c0 END)IS(x'6884')) DESC;
SELECT ALL * FROM vt1, t1, rt72, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY (~ (((((((((rt72.c0)AND(vt1.c0)))AND(rt72.c0)))AND(rt72.c2)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, t1, rt72, vt0 ORDER BY (~ (((((((((rt72.c0)AND(vt1.c0)))AND(rt72.c0)))AND(rt72.c2)))AND(t1.c0)))));
SELECT ALL * FROM vt1, t1, rt72, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY (~ (((((((((rt72.c0)AND(vt1.c0)))AND(rt72.c0)))AND(rt72.c2)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt1, t1, rt72, vt0 ORDER BY (~ (((((((((rt72.c0)AND(vt1.c0)))AND(rt72.c0)))AND(rt72.c2)))AND(t1.c0)))));
SELECT ALL * FROM vt1, t1, rt72, vt0 WHERE (((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL)) ORDER BY (~ (((((((((rt72.c0)AND(vt1.c0)))AND(rt72.c0)))AND(rt72.c2)))AND(t1.c0))));
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((((rt72.c2)<(rt72.c0))) ISNULL)) ORDER BY (LOWER(1.017989516E9) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2)<(rt72.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY (LOWER(1.017989516E9) IN ())  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((((rt72.c2)<(rt72.c0))) ISNULL)) ORDER BY (LOWER(1.017989516E9) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2)<(rt72.c0))) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt72, t1 ORDER BY (LOWER(1.017989516E9) IN ())  NULLS LAST);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((((rt72.c2)<(rt72.c0))) ISNULL)) ORDER BY (LOWER(1.017989516E9) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i3, rt72, t1 WHERE (CAST(NULL AS NUMERIC)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i3, rt72, t1 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 INDEXED BY i3, rt72, t1 WHERE (CAST(NULL AS NUMERIC)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 INDEXED BY i3, rt72, t1 ORDER BY t1.c0);
SELECT * FROM vt0, rt72 WHERE (CAST(((((vt0.c0)AND(rt72.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY (TRIM(rt72.c1, rt72.c0) IN (CAST(rt72.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt72.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt72 ORDER BY (TRIM(rt72.c1, rt72.c0) IN (CAST(rt72.c2 AS REAL))));
SELECT * FROM vt0, rt72 WHERE (CAST(((((vt0.c0)AND(rt72.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY (TRIM(rt72.c1, rt72.c0) IN (CAST(rt72.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)AND(rt72.c0)))OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt72 ORDER BY (TRIM(rt72.c1, rt72.c0) IN (CAST(rt72.c2 AS REAL))));
SELECT * FROM vt0, rt72 WHERE (CAST(((((vt0.c0)AND(rt72.c0)))OR(vt0.c0)) AS INTEGER)) ORDER BY (TRIM(rt72.c1, rt72.c0) IN (CAST(rt72.c2 AS REAL)));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt72 ON ((((((((((vt0.c0)AND(0.7979655505785082)))AND(rt72.c1)))OR(rt72.c0)))AND(rt72.c0))) IS TRUE) INNER JOIN vt0 ON x'' RIGHT OUTER JOIN t1 ON ((((vt0.c0) BETWEEN (t1.c67) AND (vt0.c0))) NOT BETWEEN ((~ (rt72.c1))) AND ((((rt72.c0, vt0.c0, rt72.c0))<((vt1.c0, t1.c0, rt72.c2))))) WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt1 CROSS JOIN rt72 ON ((((((((((vt0.c0)AND(0.7979655505785082)))AND(rt72.c1)))OR(rt72.c0)))AND(rt72.c0))) IS TRUE) INNER JOIN vt0 ON x'' RIGHT OUTER JOIN t1 ON ((((vt0.c0) BETWEEN (t1.c67) AND (vt0.c0))) NOT BETWEEN ((~ (rt72.c1))) AND ((((rt72.c0, vt0.c0, rt72.c0))<((vt1.c0, t1.c0, rt72.c2))))));
SELECT COUNT(*) FROM vt1 CROSS JOIN rt72 ON ((((((((((vt0.c0)AND(0.7979655505785082)))AND(rt72.c1)))OR(rt72.c0)))AND(rt72.c0))) IS TRUE) INNER JOIN vt0 ON x'' RIGHT OUTER JOIN t1 ON ((((vt0.c0) BETWEEN (t1.c67) AND (vt0.c0))) NOT BETWEEN ((~ (rt72.c1))) AND ((((rt72.c0, vt0.c0, rt72.c0))<((vt1.c0, t1.c0, rt72.c2))))) WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt1 CROSS JOIN rt72 ON ((((((((((vt0.c0)AND(0.7979655505785082)))AND(rt72.c1)))OR(rt72.c0)))AND(rt72.c0))) IS TRUE) INNER JOIN vt0 ON x'' RIGHT OUTER JOIN t1 ON ((((vt0.c0) BETWEEN (t1.c67) AND (vt0.c0))) NOT BETWEEN ((~ (rt72.c1))) AND ((((rt72.c0, vt0.c0, rt72.c0))<((vt1.c0, t1.c0, rt72.c2))))));
SELECT * FROM rt72 WHERE (((rt72.c2) NOT BETWEEN (x'') AND (rt72.c0)) COLLATE RTRIM) ORDER BY ((((rt72.c0) BETWEEN (rt72.c2) AND (rt72.c1))) NOTNULL) ASC  NULLS LAST, (((0.32465423949900796))=(((rt72.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt72.c2) NOT BETWEEN (x'') AND (rt72.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c0) BETWEEN (rt72.c2) AND (rt72.c1))) NOTNULL) ASC  NULLS LAST, (((0.32465423949900796))=(((rt72.c0 IN ()))))  NULLS FIRST);
SELECT * FROM rt72 WHERE (((rt72.c2) NOT BETWEEN (x'') AND (rt72.c0)) COLLATE RTRIM) ORDER BY ((((rt72.c0) BETWEEN (rt72.c2) AND (rt72.c1))) NOTNULL) ASC  NULLS LAST, (((0.32465423949900796))=(((rt72.c0 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt72.c2) NOT BETWEEN (x'') AND (rt72.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c0) BETWEEN (rt72.c2) AND (rt72.c1))) NOTNULL) ASC  NULLS LAST, (((0.32465423949900796))=(((rt72.c0 IN ()))))  NULLS FIRST);
SELECT * FROM rt72 WHERE (((rt72.c2) NOT BETWEEN (x'') AND (rt72.c0)) COLLATE RTRIM) ORDER BY ((((rt72.c0) BETWEEN (rt72.c2) AND (rt72.c1))) NOTNULL) ASC  NULLS LAST, (((0.32465423949900796))=(((rt72.c0 IN ()))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE ((json_insert(vt0.c0, rt72.c2, rt72.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(vt0.c0, rt72.c2, rt72.c1) IN ())) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE ((json_insert(vt0.c0, rt72.c2, rt72.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_insert(vt0.c0, rt72.c2, rt72.c1) IN ())) IS TRUE)  as count FROM rt72, vt0);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE ((json_insert(vt0.c0, rt72.c2, rt72.c1) IN ()));
SELECT * FROM t1, vt1 RIGHT OUTER JOIN rt72 ON t1.c0 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN (x'35e6') AND (rt72.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOT BETWEEN (x'35e6') AND (rt72.c0))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN rt72 ON t1.c0);
SELECT * FROM t1, vt1 RIGHT OUTER JOIN rt72 ON t1.c0 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN (x'35e6') AND (rt72.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)>(t1.c0))) NOT BETWEEN (x'35e6') AND (rt72.c0))) IS TRUE)  as count FROM t1, vt1 RIGHT OUTER JOIN rt72 ON t1.c0);
SELECT * FROM t1, vt1 RIGHT OUTER JOIN rt72 ON t1.c0 WHERE (((((t1.c0)>(t1.c0))) NOT BETWEEN (x'35e6') AND (rt72.c0)));
SELECT COUNT(*) FROM rt72, t1 WHERE ((((rt72.c0))<((((rt72.c1)&(t1.c67))))));
SELECT SUM(count) FROM (SELECT (((((rt72.c0))<((((rt72.c1)&(t1.c67)))))) IS TRUE)  as count FROM rt72, t1);
SELECT COUNT(*) FROM rt72, t1 WHERE ((((rt72.c0))<((((rt72.c1)&(t1.c67))))));
SELECT SUM(count) FROM (SELECT (((((rt72.c0))<((((rt72.c1)&(t1.c67)))))) IS TRUE)  as count FROM rt72, t1);
SELECT COUNT(*) FROM rt72, t1 WHERE ((((rt72.c0))<((((rt72.c1)&(t1.c67))))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt72 ON (0.5249854400154335 IN ()) WHERE (((NULL)<=(NULL))) ORDER BY COALESCE((rt72.c1 IN ()), LIKELY(rt72.c1));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(NULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt72 ON (0.5249854400154335 IN ()) ORDER BY COALESCE((rt72.c1 IN ()), LIKELY(rt72.c1)));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt72 ON (0.5249854400154335 IN ()) WHERE (((NULL)<=(NULL))) ORDER BY COALESCE((rt72.c1 IN ()), LIKELY(rt72.c1));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<=(NULL))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt72 ON (0.5249854400154335 IN ()) ORDER BY COALESCE((rt72.c1 IN ()), LIKELY(rt72.c1)));
SELECT ALL * FROM t1 RIGHT OUTER JOIN rt72 ON (0.5249854400154335 IN ()) WHERE (((NULL)<=(NULL))) ORDER BY COALESCE((rt72.c1 IN ()), LIKELY(rt72.c1));
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c67) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c0)) ELSE t1.c67 END) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END)+((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c67)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c67) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c0)) ELSE t1.c67 END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END)+((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c67))))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c67) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c0)) ELSE t1.c67 END) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END)+((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c67)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c67) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c0)) ELSE t1.c67 END) IS TRUE)  as count FROM t1 ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END)+((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c67))))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN ((t1.c67) BETWEEN (t1.c0) AND (t1.c0)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c0)) ELSE t1.c67 END) ORDER BY ((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c67 END)+((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c67)))));
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (CAST(t1.c67 AS BLOB) COLLATE NOCASE) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c67 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1, rt72 ORDER BY t1.c0  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (CAST(t1.c67 AS BLOB) COLLATE NOCASE) ORDER BY t1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c67 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, t1, rt72 ORDER BY t1.c0  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t1, rt72 WHERE (CAST(t1.c67 AS BLOB) COLLATE NOCASE) ORDER BY t1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB)) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)IS(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)IS(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB)) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)IS(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)IS(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((NULL))) AS BLOB)) ORDER BY (((((vt0.c0 IN ()))OR(((vt0.c0)IS(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)) DESC;
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE (((CAST(t1.c0 AS NUMERIC))OR(((t1.c67) NOT BETWEEN (rt72.c0) AND (rt72.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))OR(((t1.c67) NOT BETWEEN (rt72.c0) AND (rt72.c2))))) IS TRUE)  as count FROM vt0, rt72, vt1, t1);
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE (((CAST(t1.c0 AS NUMERIC))OR(((t1.c67) NOT BETWEEN (rt72.c0) AND (rt72.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c0 AS NUMERIC))OR(((t1.c67) NOT BETWEEN (rt72.c0) AND (rt72.c2))))) IS TRUE)  as count FROM vt0, rt72, vt1, t1);
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE (((CAST(t1.c0 AS NUMERIC))OR(((t1.c67) NOT BETWEEN (rt72.c0) AND (rt72.c2)))));
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|((- (t1.c0))))) ORDER BY ((CASE WHEN rt72.c1 THEN vt0.c0 WHEN vt1.c0 THEN 906900193 WHEN t1.c0 THEN vt0.c0 END)||(rt72.c0 COLLATE BINARY)) ASC, TRIM(DISTINCT rt72.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))|((- (t1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt72 NATURAL JOIN t1 ORDER BY ((CASE WHEN rt72.c1 THEN vt0.c0 WHEN vt1.c0 THEN 906900193 WHEN t1.c0 THEN vt0.c0 END)||(rt72.c0 COLLATE BINARY)) ASC, TRIM(DISTINCT rt72.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|((- (t1.c0))))) ORDER BY ((CASE WHEN rt72.c1 THEN vt0.c0 WHEN vt1.c0 THEN 906900193 WHEN t1.c0 THEN vt0.c0 END)||(rt72.c0 COLLATE BINARY)) ASC, TRIM(DISTINCT rt72.c0) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c0)))|((- (t1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt72 NATURAL JOIN t1 ORDER BY ((CASE WHEN rt72.c1 THEN vt0.c0 WHEN vt1.c0 THEN 906900193 WHEN t1.c0 THEN vt0.c0 END)||(rt72.c0 COLLATE BINARY)) ASC, TRIM(DISTINCT rt72.c0) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((((vt0.c0)IS NOT(vt0.c0)))|((- (t1.c0))))) ORDER BY ((CASE WHEN rt72.c1 THEN vt0.c0 WHEN vt1.c0 THEN 906900193 WHEN t1.c0 THEN vt0.c0 END)||(rt72.c0 COLLATE BINARY)) ASC, TRIM(DISTINCT rt72.c0) ASC  NULLS FIRST;
SELECT * FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt72.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT * FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt72.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt1, rt72, t1);
SELECT * FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0)))AND(((vt0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0)))AND(((vt0.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0)))AND(((vt0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<<(vt1.c0)))AND(((vt0.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c0)<<(vt1.c0)))AND(((vt0.c0)+(vt1.c0)))));
SELECT * FROM t1, vt0, vt1, rt72 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt72.c1) BETWEEN (t1.c0) AND (t1.c67)))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((rt72.c1 IN ()))LIKE(CAST(t1.c67 AS REAL))), t1.c67 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((rt72.c1) BETWEEN (t1.c0) AND (t1.c67)))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY (((rt72.c1 IN ()))LIKE(CAST(t1.c67 AS REAL))), t1.c67 COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, vt0, vt1, rt72 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt72.c1) BETWEEN (t1.c0) AND (t1.c67)))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((rt72.c1 IN ()))LIKE(CAST(t1.c67 AS REAL))), t1.c67 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((rt72.c1) BETWEEN (t1.c0) AND (t1.c67)))) AND ((CAST(vt0.c0 AS REAL))))) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY (((rt72.c1 IN ()))LIKE(CAST(t1.c67 AS REAL))), t1.c67 COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, vt0, vt1, rt72 WHERE ((((vt1.c0)) NOT BETWEEN ((((rt72.c1) BETWEEN (t1.c0) AND (t1.c67)))) AND ((CAST(vt0.c0 AS REAL))))) ORDER BY (((rt72.c1 IN ()))LIKE(CAST(t1.c67 AS REAL))), t1.c67 COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC)) ORDER BY NULL;
SELECT COUNT(*) FROM rt72, vt0, t1 WHERE ((((rt72.c1)|(t1.c67)) IN ())) ORDER BY UPPER(CAST('-854007908' AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt72.c1)|(t1.c67)) IN ())) IS TRUE)  as count FROM rt72, vt0, t1 ORDER BY UPPER(CAST('-854007908' AS INTEGER))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, vt0, t1 WHERE ((((rt72.c1)|(t1.c67)) IN ())) ORDER BY UPPER(CAST('-854007908' AS INTEGER))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt72.c1)|(t1.c67)) IN ())) IS TRUE)  as count FROM rt72, vt0, t1 ORDER BY UPPER(CAST('-854007908' AS INTEGER))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, vt0, t1 WHERE ((((rt72.c1)|(t1.c67)) IN ())) ORDER BY UPPER(CAST('-854007908' AS INTEGER))  NULLS FIRST;
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ((((((rt72.c0, vt1.c0, t1.c67)) NOT BETWEEN ((rt72.c0, vt0.c0, rt72.c0)) AND ((rt72.c0, vt1.c0, t1.c67)))) IS FALSE)) ORDER BY CASE WHEN rt72.c0 COLLATE BINARY THEN ((((((((t1.c67)AND(NULL)))AND(x'')))OR(vt0.c0)))AND(t1.c67)) ELSE x'dd8c' END ASC, (- (rt72.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt72.c0, vt1.c0, t1.c67)) NOT BETWEEN ((rt72.c0, vt0.c0, rt72.c0)) AND ((rt72.c0, vt1.c0, t1.c67)))) IS FALSE)) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY CASE WHEN rt72.c0 COLLATE BINARY THEN ((((((((t1.c67)AND(NULL)))AND(x'')))OR(vt0.c0)))AND(t1.c67)) ELSE x'dd8c' END ASC, (- (rt72.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ((((((rt72.c0, vt1.c0, t1.c67)) NOT BETWEEN ((rt72.c0, vt0.c0, rt72.c0)) AND ((rt72.c0, vt1.c0, t1.c67)))) IS FALSE)) ORDER BY CASE WHEN rt72.c0 COLLATE BINARY THEN ((((((((t1.c67)AND(NULL)))AND(x'')))OR(vt0.c0)))AND(t1.c67)) ELSE x'dd8c' END ASC, (- (rt72.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt72.c0, vt1.c0, t1.c67)) NOT BETWEEN ((rt72.c0, vt0.c0, rt72.c0)) AND ((rt72.c0, vt1.c0, t1.c67)))) IS FALSE)) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY CASE WHEN rt72.c0 COLLATE BINARY THEN ((((((((t1.c67)AND(NULL)))AND(x'')))OR(vt0.c0)))AND(t1.c67)) ELSE x'dd8c' END ASC, (- (rt72.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ((((((rt72.c0, vt1.c0, t1.c67)) NOT BETWEEN ((rt72.c0, vt0.c0, rt72.c0)) AND ((rt72.c0, vt1.c0, t1.c67)))) IS FALSE)) ORDER BY CASE WHEN rt72.c0 COLLATE BINARY THEN ((((((((t1.c67)AND(NULL)))AND(x'')))OR(vt0.c0)))AND(t1.c67)) ELSE x'dd8c' END ASC, (- (rt72.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt72 WHERE ((((NULL))<(((NULL IN (rt72.c2)))))) ORDER BY (- (rt72.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))<(((NULL IN (rt72.c2)))))) IS TRUE)  as count FROM rt72 ORDER BY (- (rt72.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt72 WHERE ((((NULL))<(((NULL IN (rt72.c2)))))) ORDER BY (- (rt72.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL))<(((NULL IN (rt72.c2)))))) IS TRUE)  as count FROM rt72 ORDER BY (- (rt72.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM rt72 WHERE ((((NULL))<(((NULL IN (rt72.c2)))))) ORDER BY (- (rt72.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN rt72 ON (NOT ((((rt72.c2))<((vt1.c0))))) INNER JOIN vt1 ON ((CHANGES())>>(CAST(vt1.c0 AS BLOB))) WHERE ((+ (CASE t1.c0  WHEN vt1.c0 THEN rt72.c0 ELSE t1.c67 END))) ORDER BY CASE NULL  WHEN (~ (t1.c67)) THEN ((vt0.c0)<<(rt72.c1)) WHEN ((rt72.c0) BETWEEN (rt72.c1) AND (t1.c67)) THEN ((t1.c0)IS NOT(rt72.c2)) WHEN LIKELY(vt0.c0) THEN (- (0.5249854400154335)) ELSE (- (rt72.c1)) END, ((('-452245556', t1.c0, vt0.c0))==((rt72.c2, rt72.c0, vt0.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t1.c0  WHEN vt1.c0 THEN rt72.c0 ELSE t1.c67 END))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt72 ON (NOT ((((rt72.c2))<((vt1.c0))))) INNER JOIN vt1 ON ((CHANGES())>>(CAST(vt1.c0 AS BLOB))) ORDER BY CASE NULL  WHEN (~ (t1.c67)) THEN ((vt0.c0)<<(rt72.c1)) WHEN ((rt72.c0) BETWEEN (rt72.c1) AND (t1.c67)) THEN ((t1.c0)IS NOT(rt72.c2)) WHEN LIKELY(vt0.c0) THEN (- (0.5249854400154335)) ELSE (- (rt72.c1)) END, ((('-452245556', t1.c0, vt0.c0))==((rt72.c2, rt72.c0, vt0.c0))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN rt72 ON (NOT ((((rt72.c2))<((vt1.c0))))) INNER JOIN vt1 ON ((CHANGES())>>(CAST(vt1.c0 AS BLOB))) WHERE ((+ (CASE t1.c0  WHEN vt1.c0 THEN rt72.c0 ELSE t1.c67 END))) ORDER BY CASE NULL  WHEN (~ (t1.c67)) THEN ((vt0.c0)<<(rt72.c1)) WHEN ((rt72.c0) BETWEEN (rt72.c1) AND (t1.c67)) THEN ((t1.c0)IS NOT(rt72.c2)) WHEN LIKELY(vt0.c0) THEN (- (0.5249854400154335)) ELSE (- (rt72.c1)) END, ((('-452245556', t1.c0, vt0.c0))==((rt72.c2, rt72.c0, vt0.c0))) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE t1.c0  WHEN vt1.c0 THEN rt72.c0 ELSE t1.c67 END))) IS TRUE)  as count FROM vt0, t1 CROSS JOIN rt72 ON (NOT ((((rt72.c2))<((vt1.c0))))) INNER JOIN vt1 ON ((CHANGES())>>(CAST(vt1.c0 AS BLOB))) ORDER BY CASE NULL  WHEN (~ (t1.c67)) THEN ((vt0.c0)<<(rt72.c1)) WHEN ((rt72.c0) BETWEEN (rt72.c1) AND (t1.c67)) THEN ((t1.c0)IS NOT(rt72.c2)) WHEN LIKELY(vt0.c0) THEN (- (0.5249854400154335)) ELSE (- (rt72.c1)) END, ((('-452245556', t1.c0, vt0.c0))==((rt72.c2, rt72.c0, vt0.c0))) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, t1 CROSS JOIN rt72 ON (NOT ((((rt72.c2))<((vt1.c0))))) INNER JOIN vt1 ON ((CHANGES())>>(CAST(vt1.c0 AS BLOB))) WHERE ((+ (CASE t1.c0  WHEN vt1.c0 THEN rt72.c0 ELSE t1.c67 END))) ORDER BY CASE NULL  WHEN (~ (t1.c67)) THEN ((vt0.c0)<<(rt72.c1)) WHEN ((rt72.c0) BETWEEN (rt72.c1) AND (t1.c67)) THEN ((t1.c0)IS NOT(rt72.c2)) WHEN LIKELY(vt0.c0) THEN (- (0.5249854400154335)) ELSE (- (rt72.c1)) END, ((('-452245556', t1.c0, vt0.c0))==((rt72.c2, rt72.c0, vt0.c0))) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt72 ON ((rt72.c0 COLLATE BINARY)-(((rt72.c2) NOT NULL))) RIGHT OUTER JOIN t1 ON (((((((((~ (t1.c0)))AND(((((((((rt72.c0)OR(vt0.c0)))AND(rt72.c0)))AND(vt0.c0)))OR(t1.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(NULL)) WHERE ((((t1.c67, t1.c0, rt72.c2, t1.c0, rt72.c0)) NOT BETWEEN ((((rt72.c0) NOT NULL), (NOT (rt72.c2)), CASE NULL  WHEN rt72.c2 THEN rt72.c0 ELSE vt0.c0 END, ((x'')<=(t1.c67)), rt72.c0 COLLATE BINARY)) AND ((rt72.c1 COLLATE NOCASE, CAST(t1.c67 AS REAL), ((vt0.c0)/(vt0.c0)), ((t1.c0)>(t1.c0)), json_valid(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67, t1.c0, rt72.c2, t1.c0, rt72.c0)) NOT BETWEEN ((((rt72.c0) NOT NULL), (NOT (rt72.c2)), CASE NULL  WHEN rt72.c2 THEN rt72.c0 ELSE vt0.c0 END, ((x'')<=(t1.c67)), rt72.c0 COLLATE BINARY)) AND ((rt72.c1 COLLATE NOCASE, CAST(t1.c67 AS REAL), ((vt0.c0)/(vt0.c0)), ((t1.c0)>(t1.c0)), json_valid(t1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt72 ON ((rt72.c0 COLLATE BINARY)-(((rt72.c2) NOT NULL))) RIGHT OUTER JOIN t1 ON (((((((((~ (t1.c0)))AND(((((((((rt72.c0)OR(vt0.c0)))AND(rt72.c0)))AND(vt0.c0)))OR(t1.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt72 ON ((rt72.c0 COLLATE BINARY)-(((rt72.c2) NOT NULL))) RIGHT OUTER JOIN t1 ON (((((((((~ (t1.c0)))AND(((((((((rt72.c0)OR(vt0.c0)))AND(rt72.c0)))AND(vt0.c0)))OR(t1.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(NULL)) WHERE ((((t1.c67, t1.c0, rt72.c2, t1.c0, rt72.c0)) NOT BETWEEN ((((rt72.c0) NOT NULL), (NOT (rt72.c2)), CASE NULL  WHEN rt72.c2 THEN rt72.c0 ELSE vt0.c0 END, ((x'')<=(t1.c67)), rt72.c0 COLLATE BINARY)) AND ((rt72.c1 COLLATE NOCASE, CAST(t1.c67 AS REAL), ((vt0.c0)/(vt0.c0)), ((t1.c0)>(t1.c0)), json_valid(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67, t1.c0, rt72.c2, t1.c0, rt72.c0)) NOT BETWEEN ((((rt72.c0) NOT NULL), (NOT (rt72.c2)), CASE NULL  WHEN rt72.c2 THEN rt72.c0 ELSE vt0.c0 END, ((x'')<=(t1.c67)), rt72.c0 COLLATE BINARY)) AND ((rt72.c1 COLLATE NOCASE, CAST(t1.c67 AS REAL), ((vt0.c0)/(vt0.c0)), ((t1.c0)>(t1.c0)), json_valid(t1.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt72 ON ((rt72.c0 COLLATE BINARY)-(((rt72.c2) NOT NULL))) RIGHT OUTER JOIN t1 ON (((((((((~ (t1.c0)))AND(((((((((rt72.c0)OR(vt0.c0)))AND(rt72.c0)))AND(vt0.c0)))OR(t1.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(NULL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt72 ON ((rt72.c0 COLLATE BINARY)-(((rt72.c2) NOT NULL))) RIGHT OUTER JOIN t1 ON (((((((((~ (t1.c0)))AND(((((((((rt72.c0)OR(vt0.c0)))AND(rt72.c0)))AND(vt0.c0)))OR(t1.c0)))))OR(vt0.c0)))OR((~ (vt0.c0)))))AND(NULL)) WHERE ((((t1.c67, t1.c0, rt72.c2, t1.c0, rt72.c0)) NOT BETWEEN ((((rt72.c0) NOT NULL), (NOT (rt72.c2)), CASE NULL  WHEN rt72.c2 THEN rt72.c0 ELSE vt0.c0 END, ((x'')<=(t1.c67)), rt72.c0 COLLATE BINARY)) AND ((rt72.c1 COLLATE NOCASE, CAST(t1.c67 AS REAL), ((vt0.c0)/(vt0.c0)), ((t1.c0)>(t1.c0)), json_valid(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((x'') NOTNULL) FULL OUTER JOIN rt72 ON x'6d8da3a1' INNER JOIN vt1 ON (~ (((rt72.c2) BETWEEN (t1.c67) AND (rt72.c1)))) WHERE (t1.c67) ORDER BY (+ (((rt72.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) DESC, (('-1431012456') IS FALSE) ASC, CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c67) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((x'') NOTNULL) FULL OUTER JOIN rt72 ON x'6d8da3a1' INNER JOIN vt1 ON (~ (((rt72.c2) BETWEEN (t1.c67) AND (rt72.c1)))) ORDER BY (+ (((rt72.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) DESC, (('-1431012456') IS FALSE) ASC, CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((x'') NOTNULL) FULL OUTER JOIN rt72 ON x'6d8da3a1' INNER JOIN vt1 ON (~ (((rt72.c2) BETWEEN (t1.c67) AND (rt72.c1)))) WHERE (t1.c67) ORDER BY (+ (((rt72.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) DESC, (('-1431012456') IS FALSE) ASC, CHANGES() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c67) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((x'') NOTNULL) FULL OUTER JOIN rt72 ON x'6d8da3a1' INNER JOIN vt1 ON (~ (((rt72.c2) BETWEEN (t1.c67) AND (rt72.c1)))) ORDER BY (+ (((rt72.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) DESC, (('-1431012456') IS FALSE) ASC, CHANGES() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON ((x'') NOTNULL) FULL OUTER JOIN rt72 ON x'6d8da3a1' INNER JOIN vt1 ON (~ (((rt72.c2) BETWEEN (t1.c67) AND (rt72.c1)))) WHERE (t1.c67) ORDER BY (+ (((rt72.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)))) DESC, (('-1431012456') IS FALSE) ASC, CHANGES() ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE));
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (LOWER(t1.c67))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (LOWER(t1.c67)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (LOWER(t1.c67))));
SELECT SUM(count) FROM (SELECT (((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (LOWER(t1.c67)))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (LOWER(t1.c67))));
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t1 WHERE ((t1.c67 COLLATE RTRIM IN (((t1.c67)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t1.c67 COLLATE RTRIM IN (((t1.c67)<>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t1 WHERE ((t1.c67 COLLATE RTRIM IN (((t1.c67)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((t1.c67 COLLATE RTRIM IN (((t1.c67)<>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM vt0, vt1 NATURAL JOIN t1 WHERE ((t1.c67 COLLATE RTRIM IN (((t1.c67)!=(vt1.c0)))));
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT '-2125639474', NULL));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT '-2125639474', NULL)) IS TRUE)  as count FROM rt72, vt0, vt1, t1);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT '-2125639474', NULL));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT '-2125639474', NULL)) IS TRUE)  as count FROM rt72, vt0, vt1, t1);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE (NULLIF(DISTINCT '-2125639474', NULL));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON rt72.c1 CROSS JOIN vt0 ON (((t1.c67 IN (vt0.c0)))<>(rt72.c0 COLLATE RTRIM)) WHERE ((~ (((t1.c67) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c67) ISNULL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON rt72.c1 CROSS JOIN vt0 ON (((t1.c67 IN (vt0.c0)))!=(rt72.c0 COLLATE RTRIM)));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON rt72.c1 CROSS JOIN vt0 ON (((t1.c67 IN (vt0.c0)))<>(rt72.c0 COLLATE RTRIM)) WHERE ((~ (((t1.c67) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c67) ISNULL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON rt72.c1 CROSS JOIN vt0 ON (((t1.c67 IN (vt0.c0)))!=(rt72.c0 COLLATE RTRIM)));
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON rt72.c1 CROSS JOIN vt0 ON (((t1.c67 IN (vt0.c0)))<>(rt72.c0 COLLATE RTRIM)) WHERE ((~ (((t1.c67) ISNULL))));
SELECT * FROM rt72 FULL OUTER JOIN t1 ON ((rt72.c1 COLLATE NOCASE) IS FALSE) CROSS JOIN vt1 ON (((((((((~ (t1.c67)))OR(((vt1.c0)IS NOT(rt72.c2)))))OR(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c0 THEN t1.c0 WHEN x'df22' THEN x'ee50' END)))AND((rt72.c1 IN ()))))OR(STRFTIME(rt72.c0, rt72.c0, t1.c0))) WHERE (CAST(((rt72.c0) BETWEEN (rt72.c0) AND (rt72.c2)) AS INTEGER)) ORDER BY (NOT (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c0) BETWEEN (rt72.c0) AND (rt72.c2)) AS INTEGER)) IS TRUE)  as count FROM rt72 FULL OUTER JOIN t1 ON ((rt72.c1 COLLATE NOCASE) IS FALSE) CROSS JOIN vt1 ON (((((((((~ (t1.c67)))OR(((vt1.c0)IS NOT(rt72.c2)))))OR(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c0 THEN t1.c0 WHEN x'df22' THEN x'ee50' END)))AND((rt72.c1 IN ()))))OR(STRFTIME(rt72.c0, rt72.c0, t1.c0))) ORDER BY (NOT (NULL)) ASC  NULLS FIRST);
SELECT * FROM rt72 FULL OUTER JOIN t1 ON ((rt72.c1 COLLATE NOCASE) IS FALSE) CROSS JOIN vt1 ON (((((((((~ (t1.c67)))OR(((vt1.c0)IS NOT(rt72.c2)))))OR(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c0 THEN t1.c0 WHEN x'df22' THEN x'ee50' END)))AND((rt72.c1 IN ()))))OR(STRFTIME(rt72.c0, rt72.c0, t1.c0))) WHERE (CAST(((rt72.c0) BETWEEN (rt72.c0) AND (rt72.c2)) AS INTEGER)) ORDER BY (NOT (NULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c0) BETWEEN (rt72.c0) AND (rt72.c2)) AS INTEGER)) IS TRUE)  as count FROM rt72 FULL OUTER JOIN t1 ON ((rt72.c1 COLLATE NOCASE) IS FALSE) CROSS JOIN vt1 ON (((((((((~ (t1.c67)))OR(((vt1.c0)IS NOT(rt72.c2)))))OR(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c0 THEN t1.c0 WHEN x'df22' THEN x'ee50' END)))AND((rt72.c1 IN ()))))OR(STRFTIME(rt72.c0, rt72.c0, t1.c0))) ORDER BY (NOT (NULL)) ASC  NULLS FIRST);
SELECT * FROM rt72 FULL OUTER JOIN t1 ON ((rt72.c1 COLLATE NOCASE) IS FALSE) CROSS JOIN vt1 ON (((((((((~ (t1.c67)))OR(((vt1.c0)IS NOT(rt72.c2)))))OR(CASE rt72.c0  WHEN rt72.c2 THEN rt72.c0 WHEN t1.c0 THEN t1.c0 WHEN x'df22' THEN x'ee50' END)))AND((rt72.c1 IN ()))))OR(STRFTIME(rt72.c0, rt72.c0, t1.c0))) WHERE (CAST(((rt72.c0) BETWEEN (rt72.c0) AND (rt72.c2)) AS INTEGER)) ORDER BY (NOT (NULL)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0)|(vt1.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN TOTAL_CHANGES() END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN TOTAL_CHANGES() END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0)|(vt1.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN TOTAL_CHANGES() END;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN TOTAL_CHANGES() END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)%(((vt1.c0)|(vt1.c0))))) ORDER BY CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)!=(vt1.c0)) THEN TOTAL_CHANGES() END;
SELECT COUNT(*) FROM rt72 WHERE ((((rt72.c2)>(x'ef8f')) IN ())) ORDER BY ((((rt72.c1)>(rt72.c0)))-('ap.cs#ie')) ASC  NULLS FIRST, 0xffffffff927a3bae;
SELECT SUM(count) FROM (SELECT (((((rt72.c2)>(x'ef8f')) IN ())) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c1)>(rt72.c0)))-('ap.cs#ie')) ASC  NULLS FIRST, 0Xffffffff927a3bae);
SELECT COUNT(*) FROM rt72 WHERE ((((rt72.c2)>(x'ef8f')) IN ())) ORDER BY ((((rt72.c1)>(rt72.c0)))-('ap.cs#ie')) ASC  NULLS FIRST, 0xffffffff927a3bae;
SELECT SUM(count) FROM (SELECT (((((rt72.c2)>(x'ef8f')) IN ())) IS TRUE)  as count FROM rt72 ORDER BY ((((rt72.c1)>(rt72.c0)))-('ap.cs#ie')) ASC  NULLS FIRST, 0Xffffffff927a3bae);
SELECT COUNT(*) FROM rt72 WHERE ((((rt72.c2)>(x'ef8f')) IN ())) ORDER BY ((((rt72.c1)>(rt72.c0)))-('ap.cs#ie')) ASC  NULLS FIRST, 0xffffffff927a3bae;
SELECT * FROM rt72 WHERE (((((((((((((rt72.c2)AND(rt72.c0)))OR('-105393235')))AND(rt72.c0)))AND(rt72.c2)))OR(((((((((rt72.c2)AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))))OR(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt72.c2)AND(rt72.c0)))OR('-105393235')))AND(rt72.c0)))AND(rt72.c2)))OR(((((((((rt72.c2)AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))))OR(((x'') ISNULL)))) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE (((((((((((((rt72.c2)AND(rt72.c0)))OR('-105393235')))AND(rt72.c0)))AND(rt72.c2)))OR(((((((((rt72.c2)AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))))OR(((x'') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((((rt72.c2)AND(rt72.c0)))OR('-105393235')))AND(rt72.c0)))AND(rt72.c2)))OR(((((((((rt72.c2)AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))))OR(((x'') ISNULL)))) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE (((((((((((((rt72.c2)AND(rt72.c0)))OR('-105393235')))AND(rt72.c0)))AND(rt72.c2)))OR(((((((((rt72.c2)AND(rt72.c0)))OR(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))))OR(((x'') ISNULL))));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((vt1.c0) NOT NULL))*(((((vt0.c0)OR(1656497938)))OR(rt72.c1))))) ORDER BY (((((vt0.c0)) BETWEEN ((rt72.c1)) AND ((vt1.c0))))LIKE((((vt1.c0, vt1.c0, vt0.c0, rt72.c0, rt72.c2)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2, rt72.c2, rt72.c1)) AND ((vt1.c0, rt72.c0, vt0.c0, vt0.c0, rt72.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))*(((((vt0.c0)OR(1656497938)))OR(rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, rt72 ORDER BY (((((vt0.c0)) BETWEEN ((rt72.c1)) AND ((vt1.c0))))LIKE((((vt1.c0, vt1.c0, vt0.c0, rt72.c0, rt72.c2)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2, rt72.c2, rt72.c1)) AND ((vt1.c0, rt72.c0, vt0.c0, vt0.c0, rt72.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((vt1.c0) NOT NULL))*(((((vt0.c0)OR(1656497938)))OR(rt72.c1))))) ORDER BY (((((vt0.c0)) BETWEEN ((rt72.c1)) AND ((vt1.c0))))LIKE((((vt1.c0, vt1.c0, vt0.c0, rt72.c0, rt72.c2)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2, rt72.c2, rt72.c1)) AND ((vt1.c0, rt72.c0, vt0.c0, vt0.c0, rt72.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL))*(((((vt0.c0)OR(1656497938)))OR(rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, rt72 ORDER BY (((((vt0.c0)) BETWEEN ((rt72.c1)) AND ((vt1.c0))))LIKE((((vt1.c0, vt1.c0, vt0.c0, rt72.c0, rt72.c2)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2, rt72.c2, rt72.c1)) AND ((vt1.c0, rt72.c0, vt0.c0, vt0.c0, rt72.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((vt1.c0) NOT NULL))*(((((vt0.c0)OR(1656497938)))OR(rt72.c1))))) ORDER BY (((((vt0.c0)) BETWEEN ((rt72.c1)) AND ((vt1.c0))))LIKE((((vt1.c0, vt1.c0, vt0.c0, rt72.c0, rt72.c2)) BETWEEN ((vt0.c0, rt72.c1, rt72.c2, rt72.c2, rt72.c1)) AND ((vt1.c0, rt72.c0, vt0.c0, vt0.c0, rt72.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE WHEN t1.c67 THEN t1.c0 ELSE t1.c0 END IN (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c67 THEN t1.c0 ELSE t1.c0 END IN (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE WHEN t1.c67 THEN t1.c0 ELSE t1.c0 END IN (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c67 THEN t1.c0 ELSE t1.c0 END IN (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((CASE WHEN t1.c67 THEN t1.c0 ELSE t1.c0 END IN (t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (((vt0.c0) ISNULL)))) ORDER BY ((IFNULL(t1.c67, 0.045617092737361475)) NOT BETWEEN (((t1.c67) NOT NULL)) AND (0.8106351172606824));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((IFNULL(t1.c67, 0.045617092737361475)) NOT BETWEEN (((t1.c67) NOT NULL)) AND (0.8106351172606824)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (((vt0.c0) ISNULL)))) ORDER BY ((IFNULL(t1.c67, 0.045617092737361475)) NOT BETWEEN (((t1.c67) NOT NULL)) AND (0.8106351172606824));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) ISNULL)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((IFNULL(t1.c67, 0.045617092737361475)) NOT BETWEEN (((t1.c67) NOT NULL)) AND (0.8106351172606824)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((- (((vt0.c0) ISNULL)))) ORDER BY ((IFNULL(t1.c67, 0.045617092737361475)) NOT BETWEEN (((t1.c67) NOT NULL)) AND (0.8106351172606824));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY ((LOWER(vt1.c0)) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)) ASC, (((vt1.c0))<((((vt1.c0)AND(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((LOWER(vt1.c0)) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)) ASC, (((vt1.c0))<((((vt1.c0)AND(vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY ((LOWER(vt1.c0)) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)) ASC, (((vt1.c0))<((((vt1.c0)AND(vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((LOWER(vt1.c0)) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)) ASC, (((vt1.c0))<((((vt1.c0)AND(vt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) ISNULL)) ORDER BY ((LOWER(vt1.c0)) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)) ASC, (((vt1.c0))<((((vt1.c0)AND(vt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON STRFTIME(CAST(t1.c67 AS NUMERIC), 'Rn~>ub4{', CAST(t1.c0 AS BLOB)) WHERE (((((LOWER(vt1.c0))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))) ORDER BY (((((vt1.c0)<>(vt1.c0)), (((vt1.c0))>=((t1.c67))), CAST(t1.c67 AS INTEGER)))<>((((vt1.c0)>>(vt1.c0)), ((((vt1.c0)AND(t1.c0)))AND(t1.c0)), ((((-1069897490)AND(vt1.c0)))OR(t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(vt1.c0))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON STRFTIME(CAST(t1.c67 AS NUMERIC), 'Rn~>ub4{', CAST(t1.c0 AS BLOB)) ORDER BY (((((vt1.c0)!=(vt1.c0)), (((vt1.c0))>=((t1.c67))), CAST(t1.c67 AS INTEGER)))<>((((vt1.c0)>>(vt1.c0)), ((((vt1.c0)AND(t1.c0)))AND(t1.c0)), ((((-1069897490)AND(vt1.c0)))OR(t1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON STRFTIME(CAST(t1.c67 AS NUMERIC), 'Rn~>ub4{', CAST(t1.c0 AS BLOB)) WHERE (((((LOWER(vt1.c0))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))) ORDER BY (((((vt1.c0)<>(vt1.c0)), (((vt1.c0))>=((t1.c67))), CAST(t1.c67 AS INTEGER)))<>((((vt1.c0)>>(vt1.c0)), ((((vt1.c0)AND(t1.c0)))AND(t1.c0)), ((((-1069897490)AND(vt1.c0)))OR(t1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((LOWER(vt1.c0))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON STRFTIME(CAST(t1.c67 AS NUMERIC), 'Rn~>ub4{', CAST(t1.c0 AS BLOB)) ORDER BY (((((vt1.c0)!=(vt1.c0)), (((vt1.c0))>=((t1.c67))), CAST(t1.c67 AS INTEGER)))<>((((vt1.c0)>>(vt1.c0)), ((((vt1.c0)AND(t1.c0)))AND(t1.c0)), ((((-1069897490)AND(vt1.c0)))OR(t1.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON STRFTIME(CAST(t1.c67 AS NUMERIC), 'Rn~>ub4{', CAST(t1.c0 AS BLOB)) WHERE (((((LOWER(vt1.c0))AND(t1.c0 COLLATE NOCASE)))OR(((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))) ORDER BY (((((vt1.c0)<>(vt1.c0)), (((vt1.c0))>=((t1.c67))), CAST(t1.c67 AS INTEGER)))<>((((vt1.c0)>>(vt1.c0)), ((((vt1.c0)AND(t1.c0)))AND(t1.c0)), ((((-1069897490)AND(vt1.c0)))OR(t1.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (CAST(((rt72.c2)<(t1.c67)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c2)<(t1.c67)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt72, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (CAST(((rt72.c2)<(t1.c67)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c2)<(t1.c67)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt72, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (CAST(((rt72.c2)<(t1.c67)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)OR(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)OR(vt0.c0)));
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE ((rt72.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((rt72.c0)<<(CAST('1970917299' AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt72.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY ((rt72.c0)<<(CAST('1970917299' AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE ((rt72.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((rt72.c0)<<(CAST('1970917299' AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt72.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY ((rt72.c0)<<(CAST('1970917299' AS TEXT))) DESC  NULLS FIRST);
SELECT ALL * FROM rt72, vt0, vt1, t1 WHERE ((rt72.c0 IN ()) COLLATE NOCASE COLLATE NOCASE) ORDER BY ((rt72.c0)<<(CAST('1970917299' AS TEXT))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt72 WHERE ((((rt72.c2)) BETWEEN (((rt72.c0 IN ()))) AND ((rt72.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c2)) BETWEEN (((rt72.c0 IN ()))) AND ((rt72.c2)))) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE ((((rt72.c2)) BETWEEN (((rt72.c0 IN ()))) AND ((rt72.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c2)) BETWEEN (((rt72.c0 IN ()))) AND ((rt72.c2)))) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE ((((rt72.c2)) BETWEEN (((rt72.c0 IN ()))) AND ((rt72.c2))));
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((CAST(rt72.c1 AS TEXT) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN ((t1.c67 IN ())) AND (rt72.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt72.c1 AS TEXT) IN ())) IS TRUE)  as count FROM t1, rt72 ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN ((t1.c67 IN ())) AND (rt72.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((CAST(rt72.c1 AS TEXT) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN ((t1.c67 IN ())) AND (rt72.c2)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt72.c1 AS TEXT) IN ())) IS TRUE)  as count FROM t1, rt72 ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN ((t1.c67 IN ())) AND (rt72.c2)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((CAST(rt72.c1 AS TEXT) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN ((t1.c67 IN ())) AND (rt72.c2)) DESC  NULLS FIRST;
SELECT * FROM vt1, rt72, t1 WHERE (((('-557420788')) BETWEEN ((((vt1.c0)||(t1.c0)))) AND ((rt72.c1 COLLATE RTRIM)))) ORDER BY ((((((((((((((t1.c0)>=(rt72.c2)))AND(((rt72.c0)>(t1.c0)))))OR((~ (rt72.c1)))))OR((((vt1.c0))==((vt1.c0))))))AND(((t1.c67)%(vt1.c0)))))OR(CAST(rt72.c1 AS BLOB))))OR(((((rt72.c2)OR(vt1.c0)))OR(rt72.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-557420788')) BETWEEN ((((vt1.c0)||(t1.c0)))) AND ((rt72.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt72, t1 ORDER BY ((((((((((((((t1.c0)>=(rt72.c2)))AND(((rt72.c0)>(t1.c0)))))OR((~ (rt72.c1)))))OR((((vt1.c0))==((vt1.c0))))))AND(((t1.c67)%(vt1.c0)))))OR(CAST(rt72.c1 AS BLOB))))OR(((((rt72.c2)OR(vt1.c0)))OR(rt72.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt72, t1 WHERE (((('-557420788')) BETWEEN ((((vt1.c0)||(t1.c0)))) AND ((rt72.c1 COLLATE RTRIM)))) ORDER BY ((((((((((((((t1.c0)>=(rt72.c2)))AND(((rt72.c0)>(t1.c0)))))OR((~ (rt72.c1)))))OR((((vt1.c0))==((vt1.c0))))))AND(((t1.c67)%(vt1.c0)))))OR(CAST(rt72.c1 AS BLOB))))OR(((((rt72.c2)OR(vt1.c0)))OR(rt72.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((('-557420788')) BETWEEN ((((vt1.c0)||(t1.c0)))) AND ((rt72.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt72, t1 ORDER BY ((((((((((((((t1.c0)>=(rt72.c2)))AND(((rt72.c0)>(t1.c0)))))OR((~ (rt72.c1)))))OR((((vt1.c0))==((vt1.c0))))))AND(((t1.c67)%(vt1.c0)))))OR(CAST(rt72.c1 AS BLOB))))OR(((((rt72.c2)OR(vt1.c0)))OR(rt72.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt72, t1 WHERE (((('-557420788')) BETWEEN ((((vt1.c0)||(t1.c0)))) AND ((rt72.c1 COLLATE RTRIM)))) ORDER BY ((((((((((((((t1.c0)>=(rt72.c2)))AND(((rt72.c0)>(t1.c0)))))OR((~ (rt72.c1)))))OR((((vt1.c0))==((vt1.c0))))))AND(((t1.c67)%(vt1.c0)))))OR(CAST(rt72.c1 AS BLOB))))OR(((((rt72.c2)OR(vt1.c0)))OR(rt72.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (json_patch((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((rt72.c2))), ((vt0.c0) BETWEEN (rt72.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((rt72.c2))), ((vt0.c0) BETWEEN (rt72.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (json_patch((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((rt72.c2))), ((vt0.c0) BETWEEN (rt72.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((rt72.c2))), ((vt0.c0) BETWEEN (rt72.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (json_patch((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((rt72.c2))), ((vt0.c0) BETWEEN (rt72.c1) AND (vt0.c0))));
SELECT ALL * FROM vt0, rt72, t1 NATURAL JOIN vt1 WHERE (-1245162735);
SELECT SUM(count) FROM (SELECT ((-1245162735) IS TRUE)  as count FROM vt0, rt72, t1 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt72, t1 NATURAL JOIN vt1 WHERE (-1245162735);
SELECT SUM(count) FROM (SELECT ((-1245162735) IS TRUE)  as count FROM vt0, rt72, t1 NATURAL JOIN vt1);
SELECT ALL * FROM vt0, rt72, t1 NATURAL JOIN vt1 WHERE (-1245162735);
SELECT ALL * FROM rt72, t1, vt0 WHERE (((((((0.6726246623754428)<=(rt72.c2)))OR((- (t1.c67)))))AND(CASE rt72.c1  WHEN t1.c67 THEN rt72.c2 ELSE rt72.c2 END))) ORDER BY ((t1.c67)|(rt72.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6726246623754428)<=(rt72.c2)))OR((- (t1.c67)))))AND(CASE rt72.c1  WHEN t1.c67 THEN rt72.c2 ELSE rt72.c2 END))) IS TRUE)  as count FROM rt72, t1, vt0 ORDER BY ((t1.c67)|(rt72.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt72, t1, vt0 WHERE (((((((0.6726246623754428)<=(rt72.c2)))OR((- (t1.c67)))))AND(CASE rt72.c1  WHEN t1.c67 THEN rt72.c2 ELSE rt72.c2 END))) ORDER BY ((t1.c67)|(rt72.c1)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.6726246623754428)<=(rt72.c2)))OR((- (t1.c67)))))AND(CASE rt72.c1  WHEN t1.c67 THEN rt72.c2 ELSE rt72.c2 END))) IS TRUE)  as count FROM rt72, t1, vt0 ORDER BY ((t1.c67)|(rt72.c1)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt72, t1, vt0 WHERE (((((((0.6726246623754428)<=(rt72.c2)))OR((- (t1.c67)))))AND(CASE rt72.c1  WHEN t1.c67 THEN rt72.c2 ELSE rt72.c2 END))) ORDER BY ((t1.c67)|(rt72.c1)) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt1, vt0, t1, rt72 WHERE ((((- (rt72.c1))) BETWEEN (NULL) AND (LIKELY(vt1.c0)))) ORDER BY TRIM(CASE rt72.c1  WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END), ((NULL COLLATE NOCASE) BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt72.c1))) BETWEEN (NULL) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1, rt72 ORDER BY TRIM(CASE rt72.c1  WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END), ((NULL COLLATE NOCASE) BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, vt0, t1, rt72 WHERE ((((- (rt72.c1))) BETWEEN (NULL) AND (LIKELY(vt1.c0)))) ORDER BY TRIM(CASE rt72.c1  WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END), ((NULL COLLATE NOCASE) BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (rt72.c1))) BETWEEN (NULL) AND (LIKELY(vt1.c0)))) IS TRUE)  as count FROM vt1, vt0, t1, rt72 ORDER BY TRIM(CASE rt72.c1  WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END), ((NULL COLLATE NOCASE) BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt1, vt0, t1, rt72 WHERE ((((- (rt72.c1))) BETWEEN (NULL) AND (LIKELY(vt1.c0)))) ORDER BY TRIM(CASE rt72.c1  WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END), ((NULL COLLATE NOCASE) BETWEEN (NULL) AND (vt1.c0 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE (((CASE rt72.c0  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END)||(t1.c67 COLLATE BINARY))) ORDER BY ((((LIKELY(vt0.c0))OR(t1.c67 COLLATE NOCASE)))OR((- (rt72.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c0  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END)||(t1.c67 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY ((((LIKELY(vt0.c0))OR(t1.c67 COLLATE NOCASE)))OR((- (rt72.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE (((CASE rt72.c0  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END)||(t1.c67 COLLATE BINARY))) ORDER BY ((((LIKELY(vt0.c0))OR(t1.c67 COLLATE NOCASE)))OR((- (rt72.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c0  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END)||(t1.c67 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY ((((LIKELY(vt0.c0))OR(t1.c67 COLLATE NOCASE)))OR((- (rt72.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE (((CASE rt72.c0  WHEN rt72.c1 THEN rt72.c1 ELSE vt0.c0 END)||(t1.c67 COLLATE BINARY))) ORDER BY ((((LIKELY(vt0.c0))OR(t1.c67 COLLATE NOCASE)))OR((- (rt72.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt72 INDEXED BY i3 WHERE (CASE WHEN (((rt72.c2, rt72.c2, rt72.c0, 0.4797721524056676, rt72.c0))<((rt72.c2, rt72.c2, '-1638527688', 0.7490344667560692, rt72.c2))) THEN CAST(rt72.c1 AS INTEGER) ELSE rt72.c2 END) ORDER BY (((((((0xffffffff927a3bae))=((rt72.c2))))OR(((rt72.c2)*(rt72.c1)))))AND(CASE WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c0 THEN rt72.c2 WHEN '-1413233984' THEN rt72.c0 WHEN rt72.c2 THEN '-1805177039' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt72.c2, rt72.c2, rt72.c0, 0.4797721524056676, rt72.c0))<((rt72.c2, rt72.c2, '-1638527688', 0.7490344667560692, rt72.c2))) THEN CAST(rt72.c1 AS INTEGER) ELSE rt72.c2 END) IS TRUE)  as count FROM rt72 INDEXED BY i3 ORDER BY (((((((0xffffffff927a3bae))==((rt72.c2))))OR(((rt72.c2)*(rt72.c1)))))AND(CASE WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c0 THEN rt72.c2 WHEN '-1413233984' THEN rt72.c0 WHEN rt72.c2 THEN '-1805177039' END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72 INDEXED BY i3 WHERE (CASE WHEN (((rt72.c2, rt72.c2, rt72.c0, 0.4797721524056676, rt72.c0))<((rt72.c2, rt72.c2, '-1638527688', 0.7490344667560692, rt72.c2))) THEN CAST(rt72.c1 AS INTEGER) ELSE rt72.c2 END) ORDER BY (((((((0xffffffff927a3bae))=((rt72.c2))))OR(((rt72.c2)*(rt72.c1)))))AND(CASE WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c0 THEN rt72.c2 WHEN '-1413233984' THEN rt72.c0 WHEN rt72.c2 THEN '-1805177039' END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt72.c2, rt72.c2, rt72.c0, 0.4797721524056676, rt72.c0))<((rt72.c2, rt72.c2, '-1638527688', 0.7490344667560692, rt72.c2))) THEN CAST(rt72.c1 AS INTEGER) ELSE rt72.c2 END) IS TRUE)  as count FROM rt72 INDEXED BY i3 ORDER BY (((((((0xffffffff927a3bae))==((rt72.c2))))OR(((rt72.c2)*(rt72.c1)))))AND(CASE WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 WHEN rt72.c2 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c0 THEN rt72.c2 WHEN '-1413233984' THEN rt72.c0 WHEN rt72.c2 THEN '-1805177039' END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, '') COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, '') COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, '') COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c0, '') COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c0, '') COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1)) NOT BETWEEN ((((rt72.c1)<<(rt72.c1)))) AND ((((rt72.c2) BETWEEN (rt72.c0) AND (rt72.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) NOT BETWEEN ((((rt72.c1)<<(rt72.c1)))) AND ((((rt72.c2) BETWEEN (rt72.c0) AND (rt72.c0)))))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1)) NOT BETWEEN ((((rt72.c1)<<(rt72.c1)))) AND ((((rt72.c2) BETWEEN (rt72.c0) AND (rt72.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) NOT BETWEEN ((((rt72.c1)<<(rt72.c1)))) AND ((((rt72.c2) BETWEEN (rt72.c0) AND (rt72.c0)))))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE ((((rt72.c1)) NOT BETWEEN ((((rt72.c1)<<(rt72.c1)))) AND ((((rt72.c2) BETWEEN (rt72.c0) AND (rt72.c0))))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ALL ((t1.c67) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ALL ((t1.c67) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (t1.c67);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('293098322')AND((vt0.c0 IN ()))))OR(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((((('293098322')AND((vt0.c0 IN ()))))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('293098322')AND((vt0.c0 IN ()))))OR(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((((('293098322')AND((vt0.c0 IN ()))))OR(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((('293098322')AND((vt0.c0 IN ()))))OR(SQLITE_VERSION())));
SELECT * FROM vt0 INNER JOIN vt1 ON (((- (rt72.c1))) NOT NULL) RIGHT OUTER JOIN rt72 ON (((- (rt72.c2))) NOT NULL) WHERE ((((rt72.c1, vt1.c0, vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt72.c1 THEN vt1.c0 ELSE rt72.c1 END, (NOT (rt72.c0)), ((rt72.c2)+(vt1.c0)))) AND ((((vt0.c0) NOTNULL), TOTAL_CHANGES(), rt72.c0 COLLATE BINARY)))) ORDER BY 0.6299884374569275;
SELECT SUM(count) FROM (SELECT (((((rt72.c1, vt1.c0, vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt72.c1 THEN vt1.c0 ELSE rt72.c1 END, (NOT (rt72.c0)), ((rt72.c2)+(vt1.c0)))) AND ((((vt0.c0) NOTNULL), TOTAL_CHANGES(), rt72.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((- (rt72.c1))) NOT NULL) RIGHT OUTER JOIN rt72 ON (((- (rt72.c2))) NOT NULL) ORDER BY 0.6299884374569275);
SELECT * FROM vt0 INNER JOIN vt1 ON (((- (rt72.c1))) NOT NULL) RIGHT OUTER JOIN rt72 ON (((- (rt72.c2))) NOT NULL) WHERE ((((rt72.c1, vt1.c0, vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt72.c1 THEN vt1.c0 ELSE rt72.c1 END, (NOT (rt72.c0)), ((rt72.c2)+(vt1.c0)))) AND ((((vt0.c0) NOTNULL), TOTAL_CHANGES(), rt72.c0 COLLATE BINARY)))) ORDER BY 0.6299884374569275;
SELECT SUM(count) FROM (SELECT (((((rt72.c1, vt1.c0, vt0.c0)) BETWEEN ((CASE vt1.c0  WHEN rt72.c1 THEN vt1.c0 ELSE rt72.c1 END, (NOT (rt72.c0)), ((rt72.c2)+(vt1.c0)))) AND ((((vt0.c0) NOTNULL), TOTAL_CHANGES(), rt72.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((- (rt72.c1))) NOT NULL) RIGHT OUTER JOIN rt72 ON (((- (rt72.c2))) NOT NULL) ORDER BY 0.6299884374569275);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (x'') AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY '-1732458497';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) BETWEEN (x'') AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY '-1732458497');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (x'') AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY '-1732458497';
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0))) BETWEEN (x'') AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 ORDER BY '-1732458497');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0))) BETWEEN (x'') AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY '-1732458497';
SELECT ALL * FROM rt72 WHERE (((CASE rt72.c1  WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c2 END)<=(((rt72.c0)&(rt72.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c1  WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c2 END)<=(((rt72.c0)&(rt72.c2))))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (((CASE rt72.c1  WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c2 END)<=(((rt72.c0)&(rt72.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c1  WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c2 END)<=(((rt72.c0)&(rt72.c2))))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (((CASE rt72.c1  WHEN rt72.c0 THEN rt72.c1 ELSE rt72.c2 END)<=(((rt72.c0)&(rt72.c2)))));
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)OR(CASE WHEN rt72.c0 THEN t1.c67 WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c1 THEN t1.c67 END))) ORDER BY (- ((~ (vt0.c0)))) ASC, (((+ (x'')))==(((rt72.c0) NOT BETWEEN (vt1.c0) AND (rt72.c2)))), CAST(((t1.c67)>>(rt72.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)OR(CASE WHEN rt72.c0 THEN t1.c67 WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c1 THEN t1.c67 END))) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY (- ((~ (vt0.c0)))) ASC, (((+ (x'')))==(((rt72.c0) NOT BETWEEN (vt1.c0) AND (rt72.c2)))), CAST(((t1.c67)>>(rt72.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)OR(CASE WHEN rt72.c0 THEN t1.c67 WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c1 THEN t1.c67 END))) ORDER BY (- ((~ (vt0.c0)))) ASC, (((+ (x'')))==(((rt72.c0) NOT BETWEEN (vt1.c0) AND (rt72.c2)))), CAST(((t1.c67)>>(rt72.c2)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)OR(CASE WHEN rt72.c0 THEN t1.c67 WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c1 THEN t1.c67 END))) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY (- ((~ (vt0.c0)))) ASC, (((+ (x'')))==(((rt72.c0) NOT BETWEEN (vt1.c0) AND (rt72.c2)))), CAST(((t1.c67)>>(rt72.c2)) AS BLOB));
SELECT COUNT(*) FROM vt0, rt72, vt1, t1 WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 WHEN t1.c0 THEN vt1.c0 WHEN x'' THEN vt1.c0 END)OR(CASE WHEN rt72.c0 THEN t1.c67 WHEN rt72.c1 THEN rt72.c2 WHEN rt72.c1 THEN t1.c67 END))) ORDER BY (- ((~ (vt0.c0)))) ASC, (((+ (x'')))==(((rt72.c0) NOT BETWEEN (vt1.c0) AND (rt72.c2)))), CAST(((t1.c67)>>(rt72.c2)) AS BLOB);
SELECT COUNT(*) FROM rt72 CROSS JOIN t1 ON (((((- (rt72.c2)))OR(((rt72.c0) NOTNULL))))AND(((vt1.c0) NOTNULL))) FULL OUTER JOIN vt1 ON rt72.c1 COLLATE RTRIM WHERE ((((CASE WHEN rt72.c2 THEN rt72.c2 END))>=((LOWER(DISTINCT t1.c67))))) ORDER BY json_array(0.4425508479403838, (- (rt72.c2)), ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)), (t1.c67 IN ()), rt72.c1 COLLATE RTRIM, (vt1.c0 IN (t1.c67))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt72.c2 THEN rt72.c2 END))>=((LOWER(DISTINCT t1.c67))))) IS TRUE)  as count FROM rt72 CROSS JOIN t1 ON (((((- (rt72.c2)))OR(((rt72.c0) NOTNULL))))AND(((vt1.c0) NOTNULL))) FULL OUTER JOIN vt1 ON rt72.c1 COLLATE RTRIM ORDER BY json_array(0.4425508479403838, (- (rt72.c2)), ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)), (t1.c67 IN ()), rt72.c1 COLLATE RTRIM, (vt1.c0 IN (t1.c67))) DESC);
SELECT COUNT(*) FROM rt72 CROSS JOIN t1 ON (((((- (rt72.c2)))OR(((rt72.c0) NOTNULL))))AND(((vt1.c0) NOTNULL))) FULL OUTER JOIN vt1 ON rt72.c1 COLLATE RTRIM WHERE ((((CASE WHEN rt72.c2 THEN rt72.c2 END))>=((LOWER(DISTINCT t1.c67))))) ORDER BY json_array(0.4425508479403838, (- (rt72.c2)), ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)), (t1.c67 IN ()), rt72.c1 COLLATE RTRIM, (vt1.c0 IN (t1.c67))) DESC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt72.c2 THEN rt72.c2 END))>=((LOWER(DISTINCT t1.c67))))) IS TRUE)  as count FROM rt72 CROSS JOIN t1 ON (((((- (rt72.c2)))OR(((rt72.c0) NOTNULL))))AND(((vt1.c0) NOTNULL))) FULL OUTER JOIN vt1 ON rt72.c1 COLLATE RTRIM ORDER BY json_array(0.4425508479403838, (- (rt72.c2)), ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c1)), (t1.c67 IN ()), rt72.c1 COLLATE RTRIM, (vt1.c0 IN (t1.c67))) DESC);
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE WHEN ((rt72.c2)IS NOT(rt72.c2)) THEN (NOT (rt72.c2)) ELSE (('-1209382136')>=(rt72.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt72.c2)IS NOT(rt72.c2)) THEN (NOT (rt72.c2)) ELSE (('-1209382136')>=(rt72.c2)) END) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE WHEN ((rt72.c2)IS NOT(rt72.c2)) THEN (NOT (rt72.c2)) ELSE (('-1209382136')>=(rt72.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt72.c2)IS NOT(rt72.c2)) THEN (NOT (rt72.c2)) ELSE (('-1209382136')>=(rt72.c2)) END) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE WHEN ((rt72.c2)IS NOT(rt72.c2)) THEN (NOT (rt72.c2)) ELSE (('-1209382136')>=(rt72.c2)) END);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 WHERE ((((+ (x''))) ISNULL)) ORDER BY (NOT (((rt72.c2) BETWEEN (rt72.c0) AND (t1.c67)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM vt0, t1, rt72 ORDER BY (NOT (((rt72.c2) BETWEEN (rt72.c0) AND (t1.c67)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 WHERE ((((+ (x''))) ISNULL)) ORDER BY (NOT (((rt72.c2) BETWEEN (rt72.c0) AND (t1.c67)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (x''))) ISNULL)) IS TRUE)  as count FROM vt0, t1, rt72 ORDER BY (NOT (((rt72.c2) BETWEEN (rt72.c0) AND (t1.c67)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, rt72 WHERE ((((+ (x''))) ISNULL)) ORDER BY (NOT (((rt72.c2) BETWEEN (rt72.c0) AND (t1.c67)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt72 WHERE (vt0.c0) ORDER BY CAST((((x'3c0b'))>((rt72.c2))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt72 ORDER BY CAST((((x'3c0b'))>((rt72.c2))) AS NUMERIC));
SELECT ALL * FROM vt0, rt72 WHERE (vt0.c0) ORDER BY CAST((((x'3c0b'))>((rt72.c2))) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt72 ORDER BY CAST((((x'3c0b'))>((rt72.c2))) AS NUMERIC));
SELECT ALL * FROM vt0, rt72 WHERE (vt0.c0) ORDER BY CAST((((x'3c0b'))>((rt72.c2))) AS NUMERIC);
SELECT ALL * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((t1.c0) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), CAST(vt0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((- (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((- (vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))>((CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), CAST(vt0.c0 AS INTEGER)))));
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c0, t1.c67)) NOT BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)), (~ (vt0.c0)), UPPER(DISTINCT t1.c67))) AND ((((t1.c67) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c67) ISNULL), t1.c0 COLLATE RTRIM)))) ORDER BY ((UPPER(t1.c0))|((((t1.c67))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t1.c67)) NOT BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)), (~ (vt0.c0)), UPPER(DISTINCT t1.c67))) AND ((((t1.c67) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c67) ISNULL), t1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((UPPER(t1.c0))|((((t1.c67))>=((vt0.c0))))));
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c0, t1.c67)) NOT BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)), (~ (vt0.c0)), UPPER(DISTINCT t1.c67))) AND ((((t1.c67) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c67) ISNULL), t1.c0 COLLATE RTRIM)))) ORDER BY ((UPPER(t1.c0))|((((t1.c67))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t1.c67)) NOT BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)), (~ (vt0.c0)), UPPER(DISTINCT t1.c67))) AND ((((t1.c67) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c67) ISNULL), t1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((UPPER(t1.c0))|((((t1.c67))>=((vt0.c0))))));
SELECT ALL * FROM t1, vt0 WHERE ((((vt0.c0, vt0.c0, t1.c67)) NOT BETWEEN ((((((((((vt0.c0)AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))OR(vt0.c0)), (~ (vt0.c0)), UPPER(DISTINCT t1.c67))) AND ((((t1.c67) BETWEEN (t1.c0) AND (t1.c0)), ((t1.c67) ISNULL), t1.c0 COLLATE RTRIM)))) ORDER BY ((UPPER(t1.c0))|((((t1.c67))>=((vt0.c0)))));
SELECT ALL * FROM t1, vt1, rt72 WHERE (((((rt72.c1) IS FALSE))<((+ (rt72.c1))))) ORDER BY CAST(((vt1.c0)AND(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) IS FALSE))<((+ (rt72.c1))))) IS TRUE)  as count FROM t1, vt1, rt72 ORDER BY CAST(((vt1.c0)AND(t1.c0)) AS NUMERIC));
SELECT ALL * FROM t1, vt1, rt72 WHERE (((((rt72.c1) IS FALSE))<((+ (rt72.c1))))) ORDER BY CAST(((vt1.c0)AND(t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) IS FALSE))<((+ (rt72.c1))))) IS TRUE)  as count FROM t1, vt1, rt72 ORDER BY CAST(((vt1.c0)AND(t1.c0)) AS NUMERIC));
SELECT ALL * FROM t1, vt1, rt72 WHERE (((((rt72.c1) IS FALSE))<((+ (rt72.c1))))) ORDER BY CAST(((vt1.c0)AND(t1.c0)) AS NUMERIC);
SELECT COUNT(*) FROM rt72 WHERE (((((((((((rt72.c2)AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c2)))AND(rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE RTRIM) AND (x'' COLLATE BINARY))) ORDER BY '1390595867';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt72.c2)AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c2)))AND(rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE RTRIM) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt72 ORDER BY '1390595867');
SELECT COUNT(*) FROM rt72 WHERE (((((((((((rt72.c2)AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c2)))AND(rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE RTRIM) AND (x'' COLLATE BINARY))) ORDER BY '1390595867';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt72.c2)AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c2)))AND(rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE RTRIM) AND (x'' COLLATE BINARY))) IS TRUE)  as count FROM rt72 ORDER BY '1390595867');
SELECT COUNT(*) FROM rt72 WHERE (((((((((((rt72.c2)AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c2)))AND(rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE RTRIM) AND (x'' COLLATE BINARY))) ORDER BY '1390595867';
SELECT COUNT(*) FROM rt72 WHERE (NULL) ORDER BY (((+ (rt72.c1)))=(CAST(rt72.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt72 ORDER BY (((+ (rt72.c1)))=(CAST(rt72.c1 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt72 WHERE (NULL) ORDER BY (((+ (rt72.c1)))=(CAST(rt72.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt72 ORDER BY (((+ (rt72.c1)))=(CAST(rt72.c1 AS INTEGER))) DESC);
SELECT COUNT(*) FROM rt72 WHERE (NULL) ORDER BY (((+ (rt72.c1)))=(CAST(rt72.c1 AS INTEGER))) DESC;
SELECT * FROM t1 WHERE ((('-86856007') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-86856007') ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((('-86856007') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-86856007') ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((('-86856007') ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))||(((vt0.c0)AND(vt0.c0))))) ORDER BY '53832830' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY '53832830' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))||(((vt0.c0)AND(vt0.c0))))) ORDER BY '53832830' ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY '53832830' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))||(((vt0.c0)AND(vt0.c0))))) ORDER BY '53832830' ASC;
SELECT * FROM t1, rt72 WHERE (CASE CAST(rt72.c2 AS REAL)  WHEN ((rt72.c1) BETWEEN (0.2033442529455428) AND (rt72.c1)) THEN ((rt72.c2)|(rt72.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt72.c2 AS REAL)  WHEN ((rt72.c1) BETWEEN (0.2033442529455428) AND (rt72.c1)) THEN ((rt72.c2)|(rt72.c2)) END) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE (CASE CAST(rt72.c2 AS REAL)  WHEN ((rt72.c1) BETWEEN (0.2033442529455428) AND (rt72.c1)) THEN ((rt72.c2)|(rt72.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt72.c2 AS REAL)  WHEN ((rt72.c1) BETWEEN (0.2033442529455428) AND (rt72.c1)) THEN ((rt72.c2)|(rt72.c2)) END) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE (CASE CAST(rt72.c2 AS REAL)  WHEN ((rt72.c1) BETWEEN (0.2033442529455428) AND (rt72.c1)) THEN ((rt72.c2)|(rt72.c2)) END);
SELECT * FROM t1 WHERE (((COALESCE(x'fde7', t1.c0))&(t1.c67 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(x'fde7', t1.c0))&(t1.c67 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((COALESCE(x'fde7', t1.c0))&(t1.c67 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((COALESCE(x'fde7', t1.c0))&(t1.c67 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((COALESCE(x'fde7', t1.c0))&(t1.c67 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt72, vt0, vt1, t1 WHERE (CAST(((rt72.c2) BETWEEN (rt72.c2) AND (rt72.c2)) AS BLOB)) ORDER BY (((t1.c67))<(('465370885'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2) BETWEEN (rt72.c2) AND (rt72.c2)) AS BLOB)) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((t1.c67))<(('465370885'))) ASC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1, t1 WHERE (CAST(((rt72.c2) BETWEEN (rt72.c2) AND (rt72.c2)) AS BLOB)) ORDER BY (((t1.c67))<(('465370885'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2) BETWEEN (rt72.c2) AND (rt72.c2)) AS BLOB)) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((t1.c67))<(('465370885'))) ASC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1, t1 WHERE (CAST(((rt72.c2) BETWEEN (rt72.c2) AND (rt72.c2)) AS BLOB)) ORDER BY (((t1.c67))<(('465370885'))) ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0)AND(t1.c67)))AND(t1.c67)))<(0x4919492b))) ORDER BY ((((t1.c0)AND(t1.c0)))AND((t1.c67 IN ())))  NULLS FIRST, ((t1.c0) IS TRUE) ASC  NULLS LAST, ((((t1.c0) BETWEEN (0.00845717960537773) AND (t1.c0)))LIKE(((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(t1.c67)))AND(t1.c67)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))<(0x4919492b))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)AND(t1.c0)))AND((t1.c67 IN ())))  NULLS FIRST, ((t1.c0) IS TRUE) ASC  NULLS LAST, ((((t1.c0) BETWEEN (0.00845717960537773) AND (t1.c0)))LIKE(((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(t1.c67)))AND(t1.c67)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0)AND(t1.c67)))AND(t1.c67)))<(0x4919492b))) ORDER BY ((((t1.c0)AND(t1.c0)))AND((t1.c67 IN ())))  NULLS FIRST, ((t1.c0) IS TRUE) ASC  NULLS LAST, ((((t1.c0) BETWEEN (0.00845717960537773) AND (t1.c0)))LIKE(((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(t1.c67)))AND(t1.c67)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)AND(t1.c67)))AND(t1.c67)))<(0x4919492b))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)AND(t1.c0)))AND((t1.c67 IN ())))  NULLS FIRST, ((t1.c0) IS TRUE) ASC  NULLS LAST, ((((t1.c0) BETWEEN (0.00845717960537773) AND (t1.c0)))LIKE(((((((((t1.c67)AND(t1.c0)))AND(t1.c0)))OR(t1.c67)))AND(t1.c67)))) ASC);
SELECT * FROM t1 WHERE ((NOT ((((t1.c0))<>((t1.c0)))))) ORDER BY 0Xffffffffe544f24f ASC, CAST(((t1.c67)AND(t1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c0))!=((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY 0Xffffffffe544f24f ASC, CAST(((t1.c67)AND(t1.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM t1 WHERE ((NOT ((((t1.c0))<>((t1.c0)))))) ORDER BY 0Xffffffffe544f24f ASC, CAST(((t1.c67)AND(t1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t1.c0))!=((t1.c0)))))) IS TRUE)  as count FROM t1 ORDER BY 0Xffffffffe544f24f ASC, CAST(((t1.c67)AND(t1.c0)) AS REAL)  NULLS FIRST);
SELECT * FROM t1 WHERE ((NOT ((((t1.c0))<>((t1.c0)))))) ORDER BY 0Xffffffffe544f24f ASC, CAST(((t1.c67)AND(t1.c0)) AS REAL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt72 WHERE (((CASE WHEN rt72.c0 THEN vt0.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c2 THEN '1257027319' WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN NULL ELSE rt72.c0 END) BETWEEN (((((rt72.c0)AND(vt0.c0)))AND(rt72.c1))) AND (TRIM(DISTINCT vt0.c0, rt72.c1)))) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt72.c0 THEN vt0.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c2 THEN '1257027319' WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN NULL ELSE rt72.c0 END) BETWEEN (((((rt72.c0)AND(vt0.c0)))AND(rt72.c1))) AND (TRIM(DISTINCT vt0.c0, rt72.c1)))) IS TRUE)  as count FROM vt1, vt0, rt72 ORDER BY (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1, vt0, rt72 WHERE (((CASE WHEN rt72.c0 THEN vt0.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c2 THEN '1257027319' WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN NULL ELSE rt72.c0 END) BETWEEN (((((rt72.c0)AND(vt0.c0)))AND(rt72.c1))) AND (TRIM(DISTINCT vt0.c0, rt72.c1)))) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt72.c0 THEN vt0.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c2 THEN '1257027319' WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN NULL ELSE rt72.c0 END) BETWEEN (((((rt72.c0)AND(vt0.c0)))AND(rt72.c1))) AND (TRIM(DISTINCT vt0.c0, rt72.c1)))) IS TRUE)  as count FROM vt1, vt0, rt72 ORDER BY (((vt1.c0) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1, vt0, rt72 WHERE (((CASE WHEN rt72.c0 THEN vt0.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c2 THEN '1257027319' WHEN vt0.c0 THEN rt72.c1 WHEN vt1.c0 THEN NULL ELSE rt72.c0 END) BETWEEN (((((rt72.c0)AND(vt0.c0)))AND(rt72.c1))) AND (TRIM(DISTINCT vt0.c0, rt72.c1)))) ORDER BY (((vt1.c0) IS FALSE) IN ());
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN rt72 ON CASE WHEN rt72.c1 THEN (((rt72.c1))<((t1.c0))) WHEN '' THEN ((t1.c67)/(rt72.c1)) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c0))) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN rt72.c0 END END WHERE ((((- (t1.c67))) NOT BETWEEN (HEX(rt72.c1)) AND (((rt72.c2) BETWEEN (rt72.c1) AND (t1.c67))))) ORDER BY ((((rt72.c1) NOT BETWEEN (t1.c67) AND (t1.c67)))>=(((t1.c67) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((- (t1.c67))) NOT BETWEEN (HEX(rt72.c1)) AND (((rt72.c2) BETWEEN (rt72.c1) AND (t1.c67))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt72 ON CASE WHEN rt72.c1 THEN (((rt72.c1))<((t1.c0))) WHEN '' THEN ((t1.c67)/(rt72.c1)) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c0))) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN rt72.c0 END END ORDER BY ((((rt72.c1) NOT BETWEEN (t1.c67) AND (t1.c67)))>=(((t1.c67) NOTNULL))));
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN rt72 ON CASE WHEN rt72.c1 THEN (((rt72.c1))<((t1.c0))) WHEN '' THEN ((t1.c67)/(rt72.c1)) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c0))) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN rt72.c0 END END WHERE ((((- (t1.c67))) NOT BETWEEN (HEX(rt72.c1)) AND (((rt72.c2) BETWEEN (rt72.c1) AND (t1.c67))))) ORDER BY ((((rt72.c1) NOT BETWEEN (t1.c67) AND (t1.c67)))>=(((t1.c67) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((((- (t1.c67))) NOT BETWEEN (HEX(rt72.c1)) AND (((rt72.c2) BETWEEN (rt72.c1) AND (t1.c67))))) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN rt72 ON CASE WHEN rt72.c1 THEN (((rt72.c1))<((t1.c0))) WHEN '' THEN ((t1.c67)/(rt72.c1)) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c0))) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN rt72.c0 END END ORDER BY ((((rt72.c1) NOT BETWEEN (t1.c67) AND (t1.c67)))>=(((t1.c67) NOTNULL))));
SELECT ALL * FROM t1, vt0 RIGHT OUTER JOIN rt72 ON CASE WHEN rt72.c1 THEN (((rt72.c1))<((t1.c0))) WHEN '' THEN ((t1.c67)/(rt72.c1)) WHEN (((rt72.c2)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c0))) THEN t1.c0 COLLATE BINARY ELSE CASE WHEN t1.c0 THEN rt72.c0 END END WHERE ((((- (t1.c67))) NOT BETWEEN (HEX(rt72.c1)) AND (((rt72.c2) BETWEEN (rt72.c1) AND (t1.c67))))) ORDER BY ((((rt72.c1) NOT BETWEEN (t1.c67) AND (t1.c67)))>=(((t1.c67) NOTNULL)));
SELECT * FROM vt0, rt72 INNER JOIN vt1 ON (((rt72.c0 IN (rt72.c1, rt72.c1, vt0.c0))) BETWEEN (CAST(rt72.c2 AS TEXT)) AND ((((rt72.c2)) NOT BETWEEN ((rt72.c2)) AND ((0))))) WHERE (CAST((- (rt72.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt72.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt72 INNER JOIN vt1 ON (((rt72.c0 IN (rt72.c1, rt72.c1, vt0.c0))) BETWEEN (CAST(rt72.c2 AS TEXT)) AND ((((rt72.c2)) NOT BETWEEN ((rt72.c2)) AND ((0))))));
SELECT * FROM vt0, rt72 INNER JOIN vt1 ON (((rt72.c0 IN (rt72.c1, rt72.c1, vt0.c0))) BETWEEN (CAST(rt72.c2 AS TEXT)) AND ((((rt72.c2)) NOT BETWEEN ((rt72.c2)) AND ((0))))) WHERE (CAST((- (rt72.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((- (rt72.c1)) AS REAL)) IS TRUE)  as count FROM vt0, rt72 INNER JOIN vt1 ON (((rt72.c0 IN (rt72.c1, rt72.c1, vt0.c0))) BETWEEN (CAST(rt72.c2 AS TEXT)) AND ((((rt72.c2)) NOT BETWEEN ((rt72.c2)) AND ((0))))));
SELECT * FROM vt0, rt72 INNER JOIN vt1 ON (((rt72.c0 IN (rt72.c1, rt72.c1, vt0.c0))) BETWEEN (CAST(rt72.c2 AS TEXT)) AND ((((rt72.c2)) NOT BETWEEN ((rt72.c2)) AND ((0))))) WHERE (CAST((- (rt72.c1)) AS REAL));
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt72 ON ((vt0.c0)&(rt72.c1)) COLLATE NOCASE WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt72 ON ((vt0.c0)&(rt72.c1)) COLLATE NOCASE ORDER BY (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt72 ON ((vt0.c0)&(rt72.c1)) COLLATE NOCASE WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt1 CROSS JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt72 ON ((vt0.c0)&(rt72.c1)) COLLATE NOCASE ORDER BY (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM t1, vt1 CROSS JOIN vt0 ON vt1.c0 RIGHT OUTER JOIN rt72 ON ((vt0.c0)&(rt72.c1)) COLLATE NOCASE WHERE (CAST(t1.c0 AS TEXT) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ())) IS FALSE) ASC  NULLS FIRST;
SELECT ALL * FROM rt72 WHERE (0Xffffffffd5ed0278);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd5ed0278) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (0Xffffffffd5ed0278);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffd5ed0278) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (0Xffffffffd5ed0278);
SELECT ALL * FROM rt72, vt0 WHERE (((((((((rt72.c1 COLLATE BINARY)OR(((rt72.c0)IS NOT(rt72.c2)))))AND(rt72.c2)))OR((((''))>=((rt72.c2))))))OR(rt72.c2 COLLATE NOCASE))) ORDER BY CAST(((rt72.c2) IS TRUE) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt72.c1 COLLATE BINARY)OR(((rt72.c0)IS NOT(rt72.c2)))))AND(rt72.c2)))OR((((''))>=((rt72.c2))))))OR(rt72.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, vt0 ORDER BY CAST(((rt72.c2) IS TRUE) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM rt72, vt0 WHERE (((((((((rt72.c1 COLLATE BINARY)OR(((rt72.c0)IS NOT(rt72.c2)))))AND(rt72.c2)))OR((((''))>=((rt72.c2))))))OR(rt72.c2 COLLATE NOCASE))) ORDER BY CAST(((rt72.c2) IS TRUE) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt72.c1 COLLATE BINARY)OR(((rt72.c0)IS NOT(rt72.c2)))))AND(rt72.c2)))OR((((''))>=((rt72.c2))))))OR(rt72.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, vt0 ORDER BY CAST(((rt72.c2) IS TRUE) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM rt72, vt0 WHERE (((((((((rt72.c1 COLLATE BINARY)OR(((rt72.c0)IS NOT(rt72.c2)))))AND(rt72.c2)))OR((((''))>=((rt72.c2))))))OR(rt72.c2 COLLATE NOCASE))) ORDER BY CAST(((rt72.c2) IS TRUE) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<(((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<(((vt0.c0)<<(vt0.c0)))));
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c67)IS NOT(t1.c67)))) AND ((((0.4937431154395543)IS NOT(-1837483090)))))) ORDER BY (CASE t1.c67  WHEN 0.15173625052063555 THEN t1.c67 END IN ()), ((((((((((((t1.c67)AND(t1.c67 COLLATE RTRIM)))AND((((t1.c67, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, NULL, t1.c0))))))AND((((t1.c0, t1.c67, t1.c0))>=((NULL, t1.c67, NULL))))))AND(CAST(x'd563' AS REAL))))AND(((t1.c0)GLOB(t1.c0)))))AND(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((t1.c67)IS NOT(t1.c67)))) AND ((((0.4937431154395543)IS NOT(-1837483090)))))) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c67  WHEN 0.15173625052063555 THEN t1.c67 END IN ()), ((((((((((((t1.c67)AND(t1.c67 COLLATE RTRIM)))AND((((t1.c67, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, NULL, t1.c0))))))AND((((t1.c0, t1.c67, t1.c0))>=((NULL, t1.c67, NULL))))))AND(CAST(x'd563' AS REAL))))AND(((t1.c0)GLOB(t1.c0)))))AND(''))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c67)IS NOT(t1.c67)))) AND ((((0.4937431154395543)IS NOT(-1837483090)))))) ORDER BY (CASE t1.c67  WHEN 0.15173625052063555 THEN t1.c67 END IN ()), ((((((((((((t1.c67)AND(t1.c67 COLLATE RTRIM)))AND((((t1.c67, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, NULL, t1.c0))))))AND((((t1.c0, t1.c67, t1.c0))>=((NULL, t1.c67, NULL))))))AND(CAST(x'd563' AS REAL))))AND(((t1.c0)GLOB(t1.c0)))))AND(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((t1.c67)IS NOT(t1.c67)))) AND ((((0.4937431154395543)IS NOT(-1837483090)))))) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c67  WHEN 0.15173625052063555 THEN t1.c67 END IN ()), ((((((((((((t1.c67)AND(t1.c67 COLLATE RTRIM)))AND((((t1.c67, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, NULL, t1.c0))))))AND((((t1.c0, t1.c67, t1.c0))>=((NULL, t1.c67, NULL))))))AND(CAST(x'd563' AS REAL))))AND(((t1.c0)GLOB(t1.c0)))))AND(''))  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c67)IS NOT(t1.c67)))) AND ((((0.4937431154395543)IS NOT(-1837483090)))))) ORDER BY (CASE t1.c67  WHEN 0.15173625052063555 THEN t1.c67 END IN ()), ((((((((((((t1.c67)AND(t1.c67 COLLATE RTRIM)))AND((((t1.c67, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, t1.c67, t1.c67)) AND ((t1.c0, NULL, t1.c0))))))AND((((t1.c0, t1.c67, t1.c0))>=((NULL, t1.c67, NULL))))))AND(CAST(x'd563' AS REAL))))AND(((t1.c0)GLOB(t1.c0)))))AND(''))  NULLS FIRST;
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c67)LIKE(t1.c67)))>=(1970917299)) CROSS JOIN vt1 ON '-2087786814' WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c67)LIKE(t1.c67)))>=(1970917299)) CROSS JOIN vt1 ON '-2087786814');
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c67)LIKE(t1.c67)))>=(1970917299)) CROSS JOIN vt1 ON '-2087786814' WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL)) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON ((((t1.c67)LIKE(t1.c67)))>=(1970917299)) CROSS JOIN vt1 ON '-2087786814');
SELECT ALL * FROM t1 CROSS JOIN vt0 ON ((((t1.c67)LIKE(t1.c67)))>=(1970917299)) CROSS JOIN vt1 ON '-2087786814' WHERE (((((vt0.c0) NOT BETWEEN (x'') AND (t1.c0))) NOT NULL));
SELECT * FROM rt72, t1, vt1, vt0 WHERE (((((t1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (rt72.c1 COLLATE NOCASE))) ORDER BY 'TPh#' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (rt72.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, t1, vt1, vt0 ORDER BY 'TPh#' ASC  NULLS LAST);
SELECT * FROM rt72, t1, vt1, vt0 WHERE (((((t1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (rt72.c1 COLLATE NOCASE))) ORDER BY 'TPh#' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (rt72.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt72, t1, vt1, vt0 ORDER BY 'TPh#' ASC  NULLS LAST);
SELECT * FROM rt72, t1, vt1, vt0 WHERE (((((t1.c0) IS FALSE)) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (rt72.c1 COLLATE NOCASE))) ORDER BY 'TPh#' ASC  NULLS LAST;
SELECT * FROM t1, rt72 WHERE (UPPER(DISTINCT CASE rt72.c1  WHEN rt72.c2 THEN t1.c0 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c0 ELSE rt72.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE rt72.c1  WHEN rt72.c2 THEN t1.c0 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c0 ELSE rt72.c1 END)) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE (UPPER(DISTINCT CASE rt72.c1  WHEN rt72.c2 THEN t1.c0 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c0 ELSE rt72.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CASE rt72.c1  WHEN rt72.c2 THEN t1.c0 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c0 ELSE rt72.c1 END)) IS TRUE)  as count FROM t1, rt72);
SELECT * FROM t1, rt72 WHERE (UPPER(DISTINCT CASE rt72.c1  WHEN rt72.c2 THEN t1.c0 WHEN rt72.c1 THEN rt72.c0 WHEN rt72.c2 THEN rt72.c0 ELSE rt72.c1 END));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON ((json_insert(t1.c0, rt72.c1, 0Xffffffffd788b9f3)) IS TRUE) INNER JOIN vt0 ON (((((rt72.c1)|(t1.c0)), ((rt72.c2) IS TRUE), vt0.c0 COLLATE RTRIM))!=((rt72.c2, (+ (rt72.c2)), ((t1.c67)%(vt1.c0))))) WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM vt1, rt72 NOT INDEXED FULL OUTER JOIN t1 ON ((json_insert(t1.c0, rt72.c1, 0Xffffffffd788b9f3)) IS TRUE) INNER JOIN vt0 ON (((((rt72.c1)|(t1.c0)), ((rt72.c2) IS TRUE), vt0.c0 COLLATE RTRIM))!=((rt72.c2, (+ (rt72.c2)), ((t1.c67)%(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON ((json_insert(t1.c0, rt72.c1, 0Xffffffffd788b9f3)) IS TRUE) INNER JOIN vt0 ON (((((rt72.c1)|(t1.c0)), ((rt72.c2) IS TRUE), vt0.c0 COLLATE RTRIM))!=((rt72.c2, (+ (rt72.c2)), ((t1.c67)%(vt1.c0))))) WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM vt1, rt72 NOT INDEXED FULL OUTER JOIN t1 ON ((json_insert(t1.c0, rt72.c1, 0Xffffffffd788b9f3)) IS TRUE) INNER JOIN vt0 ON (((((rt72.c1)|(t1.c0)), ((rt72.c2) IS TRUE), vt0.c0 COLLATE RTRIM))!=((rt72.c2, (+ (rt72.c2)), ((t1.c67)%(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, rt72 FULL OUTER JOIN t1 ON ((json_insert(t1.c0, rt72.c1, 0Xffffffffd788b9f3)) IS TRUE) INNER JOIN vt0 ON (((((rt72.c1)|(t1.c0)), ((rt72.c2) IS TRUE), vt0.c0 COLLATE RTRIM))!=((rt72.c2, (+ (rt72.c2)), ((t1.c67)%(vt1.c0))))) WHERE ((('') NOT NULL));
SELECT COUNT(*) FROM rt72 FULL OUTER JOIN vt1 ON (((((rt72.c2, vt1.c0, rt72.c1, x'', rt72.c1)) BETWEEN ((rt72.c1, rt72.c2, rt72.c2, 'Vs2*4R', rt72.c1)) AND ((rt72.c1, rt72.c2, vt1.c0, rt72.c1, rt72.c2))))<=((((rt72.c1, rt72.c2, vt1.c0, vt1.c0, rt72.c0))>((vt1.c0, rt72.c1, x'', rt72.c0, rt72.c1))))) WHERE (((rt72.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0) NOTNULL)) IS TRUE)  as count FROM rt72 FULL OUTER JOIN vt1 ON (((((rt72.c2, vt1.c0, rt72.c1, x'', rt72.c1)) BETWEEN ((rt72.c1, rt72.c2, rt72.c2, 'Vs2*4R', rt72.c1)) AND ((rt72.c1, rt72.c2, vt1.c0, rt72.c1, rt72.c2))))<=((((rt72.c1, rt72.c2, vt1.c0, vt1.c0, rt72.c0))>((vt1.c0, rt72.c1, x'', rt72.c0, rt72.c1))))));
SELECT COUNT(*) FROM rt72 FULL OUTER JOIN vt1 ON (((((rt72.c2, vt1.c0, rt72.c1, x'', rt72.c1)) BETWEEN ((rt72.c1, rt72.c2, rt72.c2, 'Vs2*4R', rt72.c1)) AND ((rt72.c1, rt72.c2, vt1.c0, rt72.c1, rt72.c2))))<=((((rt72.c1, rt72.c2, vt1.c0, vt1.c0, rt72.c0))>((vt1.c0, rt72.c1, x'', rt72.c0, rt72.c1))))) WHERE (((rt72.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0) NOTNULL)) IS TRUE)  as count FROM rt72 FULL OUTER JOIN vt1 ON (((((rt72.c2, vt1.c0, rt72.c1, x'', rt72.c1)) BETWEEN ((rt72.c1, rt72.c2, rt72.c2, 'Vs2*4R', rt72.c1)) AND ((rt72.c1, rt72.c2, vt1.c0, rt72.c1, rt72.c2))))<=((((rt72.c1, rt72.c2, vt1.c0, vt1.c0, rt72.c0))>((vt1.c0, rt72.c1, x'', rt72.c0, rt72.c1))))));
SELECT COUNT(*) FROM rt72 FULL OUTER JOIN vt1 ON (((((rt72.c2, vt1.c0, rt72.c1, x'', rt72.c1)) BETWEEN ((rt72.c1, rt72.c2, rt72.c2, 'Vs2*4R', rt72.c1)) AND ((rt72.c1, rt72.c2, vt1.c0, rt72.c1, rt72.c2))))<=((((rt72.c1, rt72.c2, vt1.c0, vt1.c0, rt72.c0))>((vt1.c0, rt72.c1, x'', rt72.c0, rt72.c1))))) WHERE (((rt72.c0) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt72 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY 's3' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, rt72 ORDER BY 's3' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt72 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY 's3' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, rt72 ORDER BY 's3' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt72 WHERE ((((vt1.c0 IN ())) IS FALSE)) ORDER BY 's3' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt72 INNER JOIN vt0 ON ((((((((vt0.c0)OR(rt72.c1)))AND(rt72.c0)))OR(((rt72.c1)=(rt72.c2)))))OR(((rt72.c1)>>(rt72.c0)))) WHERE ((((rt72.c1 IN ()))<<(((((rt72.c2)OR(rt72.c0)))AND(vt1.c0))))) ORDER BY ('' IN (NULL)), CAST(((vt0.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0)<=(rt72.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1 IN ()))<<(((((rt72.c2)OR(rt72.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt72 INNER JOIN vt0 ON ((((((((vt0.c0)OR(rt72.c1)))AND(rt72.c0)))OR(((rt72.c1)==(rt72.c2)))))OR(((rt72.c1)>>(rt72.c0)))) ORDER BY ('' IN (NULL)), CAST(((vt0.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0)<=(rt72.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, rt72 INNER JOIN vt0 ON ((((((((vt0.c0)OR(rt72.c1)))AND(rt72.c0)))OR(((rt72.c1)=(rt72.c2)))))OR(((rt72.c1)>>(rt72.c0)))) WHERE ((((rt72.c1 IN ()))<<(((((rt72.c2)OR(rt72.c0)))AND(vt1.c0))))) ORDER BY ('' IN (NULL)), CAST(((vt0.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0)<=(rt72.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1 IN ()))<<(((((rt72.c2)OR(rt72.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, rt72 INNER JOIN vt0 ON ((((((((vt0.c0)OR(rt72.c1)))AND(rt72.c0)))OR(((rt72.c1)==(rt72.c2)))))OR(((rt72.c1)>>(rt72.c0)))) ORDER BY ('' IN (NULL)), CAST(((vt0.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0)<=(rt72.c0)) AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM vt1, rt72 INNER JOIN vt0 ON ((((((((vt0.c0)OR(rt72.c1)))AND(rt72.c0)))OR(((rt72.c1)=(rt72.c2)))))OR(((rt72.c1)>>(rt72.c0)))) WHERE ((((rt72.c1 IN ()))<<(((((rt72.c2)OR(rt72.c0)))AND(vt1.c0))))) ORDER BY ('' IN (NULL)), CAST(((vt0.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS BLOB) DESC  NULLS LAST, CAST(((vt1.c0)<=(rt72.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM rt72 FULL OUTER JOIN t1 ON rt72.c1 WHERE (((((CASE WHEN t1.c67 THEN t1.c0 WHEN rt72.c0 THEN rt72.c1 WHEN t1.c0 THEN t1.c0 END)AND(((rt72.c1) IS FALSE))))OR(HEX(rt72.c2)))) ORDER BY '%(';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c67 THEN t1.c0 WHEN rt72.c0 THEN rt72.c1 WHEN t1.c0 THEN t1.c0 END)AND(((rt72.c1) IS FALSE))))OR(HEX(rt72.c2)))) IS TRUE)  as count FROM rt72 FULL OUTER JOIN t1 ON rt72.c1 ORDER BY '%(');
SELECT ALL * FROM rt72 FULL OUTER JOIN t1 ON rt72.c1 WHERE (((((CASE WHEN t1.c67 THEN t1.c0 WHEN rt72.c0 THEN rt72.c1 WHEN t1.c0 THEN t1.c0 END)AND(((rt72.c1) IS FALSE))))OR(HEX(rt72.c2)))) ORDER BY '%(';
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN t1.c67 THEN t1.c0 WHEN rt72.c0 THEN rt72.c1 WHEN t1.c0 THEN t1.c0 END)AND(((rt72.c1) IS FALSE))))OR(HEX(rt72.c2)))) IS TRUE)  as count FROM rt72 FULL OUTER JOIN t1 ON rt72.c1 ORDER BY '%(');
SELECT ALL * FROM rt72 FULL OUTER JOIN t1 ON rt72.c1 WHERE (((((CASE WHEN t1.c67 THEN t1.c0 WHEN rt72.c0 THEN rt72.c1 WHEN t1.c0 THEN t1.c0 END)AND(((rt72.c1) IS FALSE))))OR(HEX(rt72.c2)))) ORDER BY '%(';
SELECT * FROM rt72, t1, vt1 WHERE ((- ((t1.c67 IN ())))) ORDER BY 1.591446055E9 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c67 IN ())))) IS TRUE)  as count FROM rt72, t1, vt1 ORDER BY 1.591446055E9 DESC  NULLS FIRST);
SELECT * FROM rt72, t1, vt1 WHERE ((- ((t1.c67 IN ())))) ORDER BY 1.591446055E9 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t1.c67 IN ())))) IS TRUE)  as count FROM rt72, t1, vt1 ORDER BY 1.591446055E9 DESC  NULLS FIRST);
SELECT * FROM rt72, t1, vt1 WHERE ((- ((t1.c67 IN ())))) ORDER BY 1.591446055E9 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), x'3784')) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), x'3784')) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), x'3784')) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), x'3784')) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), x'3784')) ORDER BY vt1.c0 DESC;
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (CAST((NOT (rt72.c2)) AS NUMERIC)) ORDER BY ((((vt0.c0))>=((rt72.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt72.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt72 ORDER BY ((((vt0.c0))>=((rt72.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (CAST((NOT (rt72.c2)) AS NUMERIC)) ORDER BY ((((vt0.c0))>=((rt72.c0))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt72.c2)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt72 ORDER BY ((((vt0.c0))>=((rt72.c0))) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt72 WHERE (CAST((NOT (rt72.c2)) AS NUMERIC)) ORDER BY ((((vt0.c0))>=((rt72.c0))) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (CAST(rt72.c1 COLLATE RTRIM AS BLOB));
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))|(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)+(t1.c0)))|(t1.c0))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))|(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)+(t1.c0)))|(t1.c0))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c0)+(t1.c0)))|(t1.c0)));
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((((rt72.c0)) BETWEEN ((((((((((rt72.c0)AND(vt0.c0)))AND(t1.c67)))AND(vt0.c0)))OR(t1.c0)))) AND ((537810384 COLLATE NOCASE)))) ORDER BY (((NOT (t1.c67)))<>(CASE '80E*X훻I9'  WHEN vt0.c0 THEN rt72.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0)) BETWEEN ((((((((((rt72.c0)AND(vt0.c0)))AND(t1.c67)))AND(vt0.c0)))OR(t1.c0)))) AND ((537810384 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY (((NOT (t1.c67)))<>(CASE '80E*X훻I9'  WHEN vt0.c0 THEN rt72.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((((rt72.c0)) BETWEEN ((((((((((rt72.c0)AND(vt0.c0)))AND(t1.c67)))AND(vt0.c0)))OR(t1.c0)))) AND ((537810384 COLLATE NOCASE)))) ORDER BY (((NOT (t1.c67)))<>(CASE '80E*X훻I9'  WHEN vt0.c0 THEN rt72.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0)) BETWEEN ((((((((((rt72.c0)AND(vt0.c0)))AND(t1.c67)))AND(vt0.c0)))OR(t1.c0)))) AND ((537810384 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY (((NOT (t1.c67)))<>(CASE '80E*X훻I9'  WHEN vt0.c0 THEN rt72.c0 ELSE vt0.c0 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((((rt72.c0)) BETWEEN ((((((((((rt72.c0)AND(vt0.c0)))AND(t1.c67)))AND(vt0.c0)))OR(t1.c0)))) AND ((537810384 COLLATE NOCASE)))) ORDER BY (((NOT (t1.c67)))<>(CASE '80E*X훻I9'  WHEN vt0.c0 THEN rt72.c0 ELSE vt0.c0 END)) DESC  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE ((((0.8168196778453596, rt72.c0, NULL)) NOT BETWEEN (((rt72.c0 IN ()), (+ (0.7373353197704969)), ((((t1.c67)AND(vt0.c0)))OR(t1.c67)))) AND ((((((t1.c67)AND(rt72.c0)))OR('bJ0')), rt72.c1, '1727727158' COLLATE RTRIM)))) ORDER BY t1.c0, (((9.26754595E8)) BETWEEN (((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))) AND (((((t1.c67))>=((vt0.c0)))))) ASC  NULLS LAST, (+ (CAST('0.6168462598423253' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((0.8168196778453596, rt72.c0, NULL)) NOT BETWEEN (((rt72.c0 IN ()), (+ (0.7373353197704969)), ((((t1.c67)AND(vt0.c0)))OR(t1.c67)))) AND ((((((t1.c67)AND(rt72.c0)))OR('bJ0')), rt72.c1, '1727727158' COLLATE RTRIM)))) IS TRUE)  as count FROM rt72, t1 NOT INDEXED, vt0 ORDER BY t1.c0, (((9.26754595E8)) BETWEEN (((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))) AND (((((t1.c67))>=((vt0.c0)))))) ASC  NULLS LAST, (+ (CAST('0.6168462598423253' AS TEXT))));
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE ((((0.8168196778453596, rt72.c0, NULL)) NOT BETWEEN (((rt72.c0 IN ()), (+ (0.7373353197704969)), ((((t1.c67)AND(vt0.c0)))OR(t1.c67)))) AND ((((((t1.c67)AND(rt72.c0)))OR('bJ0')), rt72.c1, '1727727158' COLLATE RTRIM)))) ORDER BY t1.c0, (((9.26754595E8)) BETWEEN (((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))) AND (((((t1.c67))>=((vt0.c0)))))) ASC  NULLS LAST, (+ (CAST('0.6168462598423253' AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((((0.8168196778453596, rt72.c0, NULL)) NOT BETWEEN (((rt72.c0 IN ()), (+ (0.7373353197704969)), ((((t1.c67)AND(vt0.c0)))OR(t1.c67)))) AND ((((((t1.c67)AND(rt72.c0)))OR('bJ0')), rt72.c1, '1727727158' COLLATE RTRIM)))) IS TRUE)  as count FROM rt72, t1 NOT INDEXED, vt0 ORDER BY t1.c0, (((9.26754595E8)) BETWEEN (((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))) AND (((((t1.c67))>=((vt0.c0)))))) ASC  NULLS LAST, (+ (CAST('0.6168462598423253' AS TEXT))));
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE ((((0.8168196778453596, rt72.c0, NULL)) NOT BETWEEN (((rt72.c0 IN ()), (+ (0.7373353197704969)), ((((t1.c67)AND(vt0.c0)))OR(t1.c67)))) AND ((((((t1.c67)AND(rt72.c0)))OR('bJ0')), rt72.c1, '1727727158' COLLATE RTRIM)))) ORDER BY t1.c0, (((9.26754595E8)) BETWEEN (((((rt72.c2)) BETWEEN ((rt72.c0)) AND ((rt72.c2))))) AND (((((t1.c67))>=((vt0.c0)))))) ASC  NULLS LAST, (+ (CAST('0.6168462598423253' AS TEXT)));
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (CAST(rt72.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (CAST(rt72.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT COUNT(*) FROM vt0, rt72, vt1 WHERE (CAST(rt72.c2 AS TEXT) COLLATE NOCASE);
SELECT COUNT(*) FROM rt72 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ('-2125639474' COLLATE RTRIM) AND (GLOB(rt72.c1, rt72.c2)))) ORDER BY PRINTF(((NULL) NOT BETWEEN (rt72.c0) AND (rt72.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ('-2125639474' COLLATE RTRIM) AND (GLOB(rt72.c1, rt72.c2)))) IS TRUE)  as count FROM rt72 NATURAL JOIN vt0 ORDER BY PRINTF(((NULL) NOT BETWEEN (rt72.c0) AND (rt72.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt72 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ('-2125639474' COLLATE RTRIM) AND (GLOB(rt72.c1, rt72.c2)))) ORDER BY PRINTF(((NULL) NOT BETWEEN (rt72.c0) AND (rt72.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN ('-2125639474' COLLATE RTRIM) AND (GLOB(rt72.c1, rt72.c2)))) IS TRUE)  as count FROM rt72 NATURAL JOIN vt0 ORDER BY PRINTF(((NULL) NOT BETWEEN (rt72.c0) AND (rt72.c2))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt72 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN ('-2125639474' COLLATE RTRIM) AND (GLOB(rt72.c1, rt72.c2)))) ORDER BY PRINTF(((NULL) NOT BETWEEN (rt72.c0) AND (rt72.c2))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c67)AND(t1.c0)))AND(0.34491621095529823)))AND(t1.c0)))AND(t1.c67)))||((t1.c67 IN ()))) FULL OUTER JOIN vt1 ON ((vt0.c0)*(t1.c67)) COLLATE RTRIM WHERE (((((NULL)%(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c67)AND(t1.c0)))AND(0.34491621095529823)))AND(t1.c0)))AND(t1.c67)))||((t1.c67 IN ()))) FULL OUTER JOIN vt1 ON ((vt0.c0)*(t1.c67)) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c67)AND(t1.c0)))AND(0.34491621095529823)))AND(t1.c0)))AND(t1.c67)))||((t1.c67 IN ()))) FULL OUTER JOIN vt1 ON ((vt0.c0)*(t1.c67)) COLLATE RTRIM WHERE (((((NULL)%(vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)%(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c67)AND(t1.c0)))AND(0.34491621095529823)))AND(t1.c0)))AND(t1.c67)))||((t1.c67 IN ()))) FULL OUTER JOIN vt1 ON ((vt0.c0)*(t1.c67)) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON ((((((((((t1.c67)AND(t1.c0)))AND(0.34491621095529823)))AND(t1.c0)))AND(t1.c67)))||((t1.c67 IN ()))) FULL OUTER JOIN vt1 ON ((vt0.c0)*(t1.c67)) COLLATE RTRIM WHERE (((((NULL)%(vt1.c0))) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c67)GLOB(t1.c67)) IN ())) ORDER BY (CAST(t1.c67 AS REAL) IN ()) ASC, (((- (t1.c0))) BETWEEN (((((t1.c0)AND(t1.c0)))AND(NULL))) AND (((t1.c67) BETWEEN (t1.c67) AND (t1.c67))));
SELECT SUM(count) FROM (SELECT (((((t1.c67)GLOB(t1.c67)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c67 AS REAL) IN ()) ASC, (((- (t1.c0))) BETWEEN (((((t1.c0)AND(t1.c0)))AND(NULL))) AND (((t1.c67) BETWEEN (t1.c67) AND (t1.c67)))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c67)GLOB(t1.c67)) IN ())) ORDER BY (CAST(t1.c67 AS REAL) IN ()) ASC, (((- (t1.c0))) BETWEEN (((((t1.c0)AND(t1.c0)))AND(NULL))) AND (((t1.c67) BETWEEN (t1.c67) AND (t1.c67))));
SELECT SUM(count) FROM (SELECT (((((t1.c67)GLOB(t1.c67)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (CAST(t1.c67 AS REAL) IN ()) ASC, (((- (t1.c0))) BETWEEN (((((t1.c0)AND(t1.c0)))AND(NULL))) AND (((t1.c67) BETWEEN (t1.c67) AND (t1.c67)))));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c67)GLOB(t1.c67)) IN ())) ORDER BY (CAST(t1.c67 AS REAL) IN ()) ASC, (((- (t1.c0))) BETWEEN (((((t1.c0)AND(t1.c0)))AND(NULL))) AND (((t1.c67) BETWEEN (t1.c67) AND (t1.c67))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON CAST(((t1.c67)>(t1.c0)) AS BLOB) FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (~ (0.3668136591852046)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CAST(((t1.c67)>(t1.c0)) AS BLOB) FULL OUTER JOIN vt0 ON vt1.c0 ORDER BY (~ (0.3668136591852046)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON CAST(((t1.c67)>(t1.c0)) AS BLOB) FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (~ (0.3668136591852046)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN t1 ON CAST(((t1.c67)>(t1.c0)) AS BLOB) FULL OUTER JOIN vt0 ON vt1.c0 ORDER BY (~ (0.3668136591852046)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN t1 ON CAST(((t1.c67)>(t1.c0)) AS BLOB) FULL OUTER JOIN vt0 ON vt1.c0 WHERE (CAST(vt1.c0 AS INTEGER) COLLATE RTRIM) ORDER BY (~ (0.3668136591852046)) DESC  NULLS FIRST;
SELECT * FROM rt72, vt0 FULL OUTER JOIN t1 ON ((t1.c0)GLOB(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON INSTR((((rt72.c1))<=((vt0.c0))), 0Xffffffff922fabac) WHERE ((((((('-358690389') IS FALSE))AND(CASE WHEN t1.c67 THEN vt0.c0 END)))OR(CAST(t1.c67 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((('-358690389') IS FALSE))AND(CASE WHEN t1.c67 THEN vt0.c0 END)))OR(CAST(t1.c67 AS BLOB)))) IS TRUE)  as count FROM rt72, vt0 FULL OUTER JOIN t1 ON ((t1.c0)GLOB(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON INSTR((((rt72.c1))<=((vt0.c0))), 0xffffffff922fabac));
SELECT * FROM rt72, vt0 FULL OUTER JOIN t1 ON ((t1.c0)GLOB(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON INSTR((((rt72.c1))<=((vt0.c0))), 0Xffffffff922fabac) WHERE ((((((('-358690389') IS FALSE))AND(CASE WHEN t1.c67 THEN vt0.c0 END)))OR(CAST(t1.c67 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((('-358690389') IS FALSE))AND(CASE WHEN t1.c67 THEN vt0.c0 END)))OR(CAST(t1.c67 AS BLOB)))) IS TRUE)  as count FROM rt72, vt0 FULL OUTER JOIN t1 ON ((t1.c0)GLOB(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON INSTR((((rt72.c1))<=((vt0.c0))), 0xffffffff922fabac));
SELECT * FROM rt72, vt0 FULL OUTER JOIN t1 ON ((t1.c0)GLOB(vt0.c0 COLLATE RTRIM)) LEFT OUTER JOIN vt1 ON INSTR((((rt72.c1))<=((vt0.c0))), 0Xffffffff922fabac) WHERE ((((((('-358690389') IS FALSE))AND(CASE WHEN t1.c67 THEN vt0.c0 END)))OR(CAST(t1.c67 AS BLOB))));
SELECT * FROM vt1, t1, rt72 WHERE ((+ (NULL))) ORDER BY ((json_type(rt72.c1))OR('-2125639474')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1, t1, rt72 ORDER BY ((json_type(rt72.c1))OR('-2125639474')) ASC  NULLS LAST);
SELECT * FROM vt1, t1, rt72 WHERE ((+ (NULL))) ORDER BY ((json_type(rt72.c1))OR('-2125639474')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt1, t1, rt72 ORDER BY ((json_type(rt72.c1))OR('-2125639474')) ASC  NULLS LAST);
SELECT * FROM vt1, t1, rt72 WHERE ((+ (NULL))) ORDER BY ((json_type(rt72.c1))OR('-2125639474')) ASC  NULLS LAST;
SELECT * FROM rt72 WHERE ((((rt72.c0, rt72.c0, rt72.c0))>=((rt72.c0, rt72.c1, rt72.c0))) COLLATE NOCASE) ORDER BY (+ ((rt72.c1 IN (rt72.c2, rt72.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0, rt72.c0, rt72.c0))>=((rt72.c0, rt72.c1, rt72.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt72 ORDER BY (+ ((rt72.c1 IN (rt72.c2, rt72.c1)))) DESC);
SELECT * FROM rt72 WHERE ((((rt72.c0, rt72.c0, rt72.c0))>=((rt72.c0, rt72.c1, rt72.c0))) COLLATE NOCASE) ORDER BY (+ ((rt72.c1 IN (rt72.c2, rt72.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0, rt72.c0, rt72.c0))>=((rt72.c0, rt72.c1, rt72.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt72 ORDER BY (+ ((rt72.c1 IN (rt72.c2, rt72.c1)))) DESC);
SELECT * FROM rt72 WHERE ((((rt72.c0, rt72.c0, rt72.c0))>=((rt72.c0, rt72.c1, rt72.c0))) COLLATE NOCASE) ORDER BY (+ ((rt72.c1 IN (rt72.c2, rt72.c1)))) DESC;
SELECT * FROM t1, vt0, rt72, vt1 WHERE (((t1.c67 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt72.c1 THEN t1.c0 WHEN rt72.c2 THEN t1.c67 WHEN rt72.c1 THEN rt72.c0 END) AND (CASE WHEN rt72.c2 THEN rt72.c0 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c1 THEN t1.c67 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c67 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt72.c1 THEN t1.c0 WHEN rt72.c2 THEN t1.c67 WHEN rt72.c1 THEN rt72.c0 END) AND (CASE WHEN rt72.c2 THEN rt72.c0 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c1 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT * FROM t1, vt0, rt72, vt1 WHERE (((t1.c67 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt72.c1 THEN t1.c0 WHEN rt72.c2 THEN t1.c67 WHEN rt72.c1 THEN rt72.c0 END) AND (CASE WHEN rt72.c2 THEN rt72.c0 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c1 THEN t1.c67 END)));
SELECT SUM(count) FROM (SELECT ((((t1.c67 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt72.c1 THEN t1.c0 WHEN rt72.c2 THEN t1.c67 WHEN rt72.c1 THEN rt72.c0 END) AND (CASE WHEN rt72.c2 THEN rt72.c0 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c1 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT * FROM t1, vt0, rt72, vt1 WHERE (((t1.c67 COLLATE RTRIM) NOT BETWEEN (CASE WHEN rt72.c1 THEN t1.c0 WHEN rt72.c2 THEN t1.c67 WHEN rt72.c1 THEN rt72.c0 END) AND (CASE WHEN rt72.c2 THEN rt72.c0 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c1 THEN t1.c67 END)));
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN (t1.c0 IN ()) THEN LIKELIHOOD(DISTINCT t1.c67, 0.30507288169550617) WHEN NULL THEN CASE WHEN t1.c67 THEN t1.c0 END WHEN (t1.c67 IN (vt1.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN LIKELIHOOD(DISTINCT t1.c67, 0.30507288169550617) WHEN NULL THEN CASE WHEN t1.c67 THEN t1.c0 END WHEN (t1.c67 IN (vt1.c0)) THEN NULL END) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN (t1.c0 IN ()) THEN LIKELIHOOD(DISTINCT t1.c67, 0.30507288169550617) WHEN NULL THEN CASE WHEN t1.c67 THEN t1.c0 END WHEN (t1.c67 IN (vt1.c0)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c0 IN ()) THEN LIKELIHOOD(DISTINCT t1.c67, 0.30507288169550617) WHEN NULL THEN CASE WHEN t1.c67 THEN t1.c0 END WHEN (t1.c67 IN (vt1.c0)) THEN NULL END) IS TRUE)  as count FROM t1, vt1);
SELECT ALL * FROM t1, vt1 WHERE (CASE WHEN (t1.c0 IN ()) THEN LIKELIHOOD(DISTINCT t1.c67, 0.30507288169550617) WHEN NULL THEN CASE WHEN t1.c67 THEN t1.c0 END WHEN (t1.c67 IN (vt1.c0)) THEN NULL END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c67)))  WHEN ((vt1.c0) NOT NULL) THEN ((((rt72.c1)OR(rt72.c0)))AND(rt72.c0)) END CROSS JOIN rt72 ON (((vt1.c0) NOT BETWEEN (rt72.c2) AND (vt0.c0)) IN ()) CROSS JOIN t1 ON (NOT ((((rt72.c2, rt72.c1, rt72.c1)) BETWEEN ((t1.c0, t1.c0, t1.c67)) AND ((rt72.c2, vt0.c0, t1.c0))))) WHERE (CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS REAL)) ORDER BY (- (((rt72.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c67)))  WHEN ((vt1.c0) NOT NULL) THEN ((((rt72.c1)OR(rt72.c0)))AND(rt72.c0)) END CROSS JOIN rt72 ON (((vt1.c0) NOT BETWEEN (rt72.c2) AND (vt0.c0)) IN ()) CROSS JOIN t1 ON (NOT ((((rt72.c2, rt72.c1, rt72.c1)) BETWEEN ((t1.c0, t1.c0, t1.c67)) AND ((rt72.c2, vt0.c0, t1.c0))))) ORDER BY (- (((rt72.c1) NOT NULL))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c67)))  WHEN ((vt1.c0) NOT NULL) THEN ((((rt72.c1)OR(rt72.c0)))AND(rt72.c0)) END CROSS JOIN rt72 ON (((vt1.c0) NOT BETWEEN (rt72.c2) AND (vt0.c0)) IN ()) CROSS JOIN t1 ON (NOT ((((rt72.c2, rt72.c1, rt72.c1)) BETWEEN ((t1.c0, t1.c0, t1.c67)) AND ((rt72.c2, vt0.c0, t1.c0))))) WHERE (CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS REAL)) ORDER BY (- (((rt72.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c67)))  WHEN ((vt1.c0) NOT NULL) THEN ((((rt72.c1)OR(rt72.c0)))AND(rt72.c0)) END CROSS JOIN rt72 ON (((vt1.c0) NOT BETWEEN (rt72.c2) AND (vt0.c0)) IN ()) CROSS JOIN t1 ON (NOT ((((rt72.c2, rt72.c1, rt72.c1)) BETWEEN ((t1.c0, t1.c0, t1.c67)) AND ((rt72.c2, vt0.c0, t1.c0))))) ORDER BY (- (((rt72.c1) NOT NULL))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON CASE (((t1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t1.c67)))  WHEN ((vt1.c0) NOT NULL) THEN ((((rt72.c1)OR(rt72.c0)))AND(rt72.c0)) END CROSS JOIN rt72 ON (((vt1.c0) NOT BETWEEN (rt72.c2) AND (vt0.c0)) IN ()) CROSS JOIN t1 ON (NOT ((((rt72.c2, rt72.c1, rt72.c1)) BETWEEN ((t1.c0, t1.c0, t1.c67)) AND ((rt72.c2, vt0.c0, t1.c0))))) WHERE (CAST(CASE WHEN vt1.c0 THEN t1.c0 END AS REAL)) ORDER BY (- (((rt72.c1) NOT NULL)));
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((0.172121363277849 IN ()))+(rt72.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((0.172121363277849 IN ()))+(rt72.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, vt0, rt72);
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((0.172121363277849 IN ()))+(rt72.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((0.172121363277849 IN ()))+(rt72.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt1, t1, vt0, rt72);
SELECT * FROM vt1, t1, vt0, rt72 WHERE ((((0.172121363277849 IN ()))+(rt72.c2 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, t1, rt72 CROSS JOIN vt0 ON CAST(((rt72.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS INTEGER) WHERE (((CASE rt72.c0  WHEN t1.c67 THEN 'DZ(\9*' ELSE rt72.c2 END)IS(CAST(vt0.c0 AS TEXT)))) ORDER BY NULL DESC, '575546699' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c0  WHEN t1.c67 THEN 'DZ(\9*' ELSE rt72.c2 END)IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t1, rt72 CROSS JOIN vt0 ON CAST(((rt72.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS INTEGER) ORDER BY NULL DESC, '575546699' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, rt72 CROSS JOIN vt0 ON CAST(((rt72.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS INTEGER) WHERE (((CASE rt72.c0  WHEN t1.c67 THEN 'DZ(\9*' ELSE rt72.c2 END)IS(CAST(vt0.c0 AS TEXT)))) ORDER BY NULL DESC, '575546699' COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt72.c0  WHEN t1.c67 THEN 'DZ(\9*' ELSE rt72.c2 END)IS(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, t1, rt72 CROSS JOIN vt0 ON CAST(((rt72.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS INTEGER) ORDER BY NULL DESC, '575546699' COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1, rt72 CROSS JOIN vt0 ON CAST(((rt72.c0) NOT BETWEEN (rt72.c2) AND (rt72.c0)) AS INTEGER) WHERE (((CASE rt72.c0  WHEN t1.c67 THEN 'DZ(\9*' ELSE rt72.c2 END)IS(CAST(vt0.c0 AS TEXT)))) ORDER BY NULL DESC, '575546699' COLLATE NOCASE  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON 0.22895752289979177 WHERE (CASE WHEN JULIANDAY(t1.c0, t1.c67, t1.c0) THEN (((vt1.c0))>((t1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN JULIANDAY(t1.c0, t1.c67, t1.c0) THEN (((vt1.c0))>((t1.c0))) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON 0.22895752289979177);
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON 0.22895752289979177 WHERE (CASE WHEN JULIANDAY(t1.c0, t1.c67, t1.c0) THEN (((vt1.c0))>((t1.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN JULIANDAY(t1.c0, t1.c67, t1.c0) THEN (((vt1.c0))>((t1.c0))) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t1 ON 0.22895752289979177);
SELECT * FROM vt1 RIGHT OUTER JOIN t1 ON 0.22895752289979177 WHERE (CASE WHEN JULIANDAY(t1.c0, t1.c67, t1.c0) THEN (((vt1.c0))>((t1.c0))) END);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0) ISNULL))));
SELECT COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((t1.c67, vt1.c0, '-1605938856')) BETWEEN ((((rt72.c1)==(t1.c0)), rt72.c0, ((rt72.c1)AND(rt72.c1)))) AND ((CAST(rt72.c2 AS NUMERIC), ((((((((rt72.c2)AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(rt72.c2)), TRIM(t1.c0, rt72.c1)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67, vt1.c0, '-1605938856')) BETWEEN ((((rt72.c1)=(t1.c0)), rt72.c0, ((rt72.c1)AND(rt72.c1)))) AND ((CAST(rt72.c2 AS NUMERIC), ((((((((rt72.c2)AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(rt72.c2)), TRIM(t1.c0, rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((t1.c67, vt1.c0, '-1605938856')) BETWEEN ((((rt72.c1)==(t1.c0)), rt72.c0, ((rt72.c1)AND(rt72.c1)))) AND ((CAST(rt72.c2 AS NUMERIC), ((((((((rt72.c2)AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(rt72.c2)), TRIM(t1.c0, rt72.c1)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67, vt1.c0, '-1605938856')) BETWEEN ((((rt72.c1)=(t1.c0)), rt72.c0, ((rt72.c1)AND(rt72.c1)))) AND ((CAST(rt72.c2 AS NUMERIC), ((((((((rt72.c2)AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(rt72.c2)), TRIM(t1.c0, rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((t1.c67, vt1.c0, '-1605938856')) BETWEEN ((((rt72.c1)==(t1.c0)), rt72.c0, ((rt72.c1)AND(rt72.c1)))) AND ((CAST(rt72.c2 AS NUMERIC), ((((((((rt72.c2)AND(t1.c0)))OR(vt1.c0)))OR(t1.c0)))AND(rt72.c2)), TRIM(t1.c0, rt72.c1)))));
SELECT ALL * FROM t1 WHERE ((((((t1.c67)>=(t1.c0))))<((ABS(t1.c67))))) ORDER BY t1.c67;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67)>=(t1.c0))))<((ABS(t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY t1.c67);
SELECT ALL * FROM t1 WHERE ((((((t1.c67)>=(t1.c0))))<((ABS(t1.c67))))) ORDER BY t1.c67;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67)>=(t1.c0))))<((ABS(t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY t1.c67);
SELECT ALL * FROM t1 WHERE ((((((t1.c67)>=(t1.c0))))<((ABS(t1.c67))))) ORDER BY t1.c67;
SELECT ALL COUNT(*) FROM vt1, t1, rt72, vt0 INDEXED BY i60 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN t1.c67 WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN 0.021796429101914816 ELSE t1.c67 END) NOTNULL)) ORDER BY ((((vt0.c0)OR(x'')))AND(((t1.c0) BETWEEN (rt72.c1) AND (rt72.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c0 THEN t1.c67 WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN 0.021796429101914816 ELSE t1.c67 END) NOTNULL)) IS TRUE)  as count FROM vt1, t1, rt72, vt0 INDEXED BY i60 ORDER BY ((((vt0.c0)OR(x'')))AND(((t1.c0) BETWEEN (rt72.c1) AND (rt72.c2)))) DESC);
SELECT ALL COUNT(*) FROM vt1, t1, rt72, vt0 INDEXED BY i60 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN t1.c67 WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN 0.021796429101914816 ELSE t1.c67 END) NOTNULL)) ORDER BY ((((vt0.c0)OR(x'')))AND(((t1.c0) BETWEEN (rt72.c1) AND (rt72.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c0 THEN t1.c67 WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN 0.021796429101914816 ELSE t1.c67 END) NOTNULL)) IS TRUE)  as count FROM vt1, t1, rt72, vt0 INDEXED BY i60 ORDER BY ((((vt0.c0)OR(x'')))AND(((t1.c0) BETWEEN (rt72.c1) AND (rt72.c2)))) DESC);
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt72 ON (((~ (rt72.c2))) BETWEEN (((((t1.c0)AND(t1.c67)))AND(NULL))) AND (CAST(rt72.c2 AS TEXT))) WHERE ((((vt0.c0, vt0.c0, x'')) BETWEEN ((CASE WHEN t1.c0 THEN rt72.c1 ELSE t1.c0 END, ((((t1.c67)AND(rt72.c1)))AND(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c67 COLLATE NOCASE, (~ (rt72.c2)), ((rt72.c1)||(rt72.c1)))))) ORDER BY t1.c0  NULLS FIRST, TYPEOF(((vt0.c0) ISNULL))  NULLS FIRST, (0.6172583646785359 IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, x'')) BETWEEN ((CASE WHEN t1.c0 THEN rt72.c1 ELSE t1.c0 END, ((((t1.c67)AND(rt72.c1)))AND(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c67 COLLATE NOCASE, (~ (rt72.c2)), ((rt72.c1)||(rt72.c1)))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt72 ON (((~ (rt72.c2))) BETWEEN (((((t1.c0)AND(t1.c67)))AND(NULL))) AND (CAST(rt72.c2 AS TEXT))) ORDER BY t1.c0  NULLS FIRST, TYPEOF(((vt0.c0) ISNULL))  NULLS FIRST, (0.6172583646785359 IN ()));
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt72 ON (((~ (rt72.c2))) BETWEEN (((((t1.c0)AND(t1.c67)))AND(NULL))) AND (CAST(rt72.c2 AS TEXT))) WHERE ((((vt0.c0, vt0.c0, x'')) BETWEEN ((CASE WHEN t1.c0 THEN rt72.c1 ELSE t1.c0 END, ((((t1.c67)AND(rt72.c1)))AND(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c67 COLLATE NOCASE, (~ (rt72.c2)), ((rt72.c1)||(rt72.c1)))))) ORDER BY t1.c0  NULLS FIRST, TYPEOF(((vt0.c0) ISNULL))  NULLS FIRST, (0.6172583646785359 IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, x'')) BETWEEN ((CASE WHEN t1.c0 THEN rt72.c1 ELSE t1.c0 END, ((((t1.c67)AND(rt72.c1)))AND(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c67 COLLATE NOCASE, (~ (rt72.c2)), ((rt72.c1)||(rt72.c1)))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt72 ON (((~ (rt72.c2))) BETWEEN (((((t1.c0)AND(t1.c67)))AND(NULL))) AND (CAST(rt72.c2 AS TEXT))) ORDER BY t1.c0  NULLS FIRST, TYPEOF(((vt0.c0) ISNULL))  NULLS FIRST, (0.6172583646785359 IN ()));
SELECT COUNT(*) FROM t1, vt0 LEFT OUTER JOIN rt72 ON (((~ (rt72.c2))) BETWEEN (((((t1.c0)AND(t1.c67)))AND(NULL))) AND (CAST(rt72.c2 AS TEXT))) WHERE ((((vt0.c0, vt0.c0, x'')) BETWEEN ((CASE WHEN t1.c0 THEN rt72.c1 ELSE t1.c0 END, ((((t1.c67)AND(rt72.c1)))AND(vt0.c0)), CAST(t1.c0 AS NUMERIC))) AND ((t1.c67 COLLATE NOCASE, (~ (rt72.c2)), ((rt72.c1)||(rt72.c1)))))) ORDER BY t1.c0  NULLS FIRST, TYPEOF(((vt0.c0) ISNULL))  NULLS FIRST, (0.6172583646785359 IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN '' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((((vt0.c0)==(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN '' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN '' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0))<=((((vt0.c0)==(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN '' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0))<=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE BINARY)&(CASE vt0.c0  WHEN '' THEN vt0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c0)AND(NULL)))IS NOT(CASE WHEN rt72.c1 THEN rt72.c0 WHEN t1.c67 THEN rt72.c1 WHEN rt72.c2 THEN rt72.c1 WHEN vt0.c0 THEN rt72.c0 WHEN t1.c0 THEN rt72.c0 ELSE t1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0, rt72 ORDER BY ((((t1.c0)AND(NULL)))IS NOT(CASE WHEN rt72.c1 THEN rt72.c0 WHEN t1.c67 THEN rt72.c1 WHEN rt72.c2 THEN rt72.c1 WHEN vt0.c0 THEN rt72.c0 WHEN t1.c0 THEN rt72.c0 ELSE t1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c0)AND(NULL)))IS NOT(CASE WHEN rt72.c1 THEN rt72.c0 WHEN t1.c67 THEN rt72.c1 WHEN rt72.c2 THEN rt72.c1 WHEN vt0.c0 THEN rt72.c0 WHEN t1.c0 THEN rt72.c0 ELSE t1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, vt0, rt72 ORDER BY ((((t1.c0)AND(NULL)))IS NOT(CASE WHEN rt72.c1 THEN rt72.c0 WHEN t1.c67 THEN rt72.c1 WHEN rt72.c2 THEN rt72.c1 WHEN vt0.c0 THEN rt72.c0 WHEN t1.c0 THEN rt72.c0 ELSE t1.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (vt0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY ((((t1.c0)AND(NULL)))IS NOT(CASE WHEN rt72.c1 THEN rt72.c0 WHEN t1.c67 THEN rt72.c1 WHEN rt72.c2 THEN rt72.c1 WHEN vt0.c0 THEN rt72.c0 WHEN t1.c0 THEN rt72.c0 ELSE t1.c0 END)) DESC;
SELECT * FROM vt1, vt0, t1 NATURAL JOIN rt72 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT CAST(rt72.c1 AS NUMERIC), ((t1.c67) BETWEEN (rt72.c0) AND (rt72.c2)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, t1 NATURAL JOIN rt72 ORDER BY NULLIF(DISTINCT CAST(rt72.c1 AS NUMERIC), ((t1.c67) BETWEEN (rt72.c0) AND (rt72.c2))));
SELECT * FROM vt1, vt0, t1 NATURAL JOIN rt72 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT CAST(rt72.c1 AS NUMERIC), ((t1.c67) BETWEEN (rt72.c0) AND (rt72.c2)));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, vt0, t1 NATURAL JOIN rt72 ORDER BY NULLIF(DISTINCT CAST(rt72.c1 AS NUMERIC), ((t1.c67) BETWEEN (rt72.c0) AND (rt72.c2))));
SELECT * FROM vt1, vt0, t1 NATURAL JOIN rt72 WHERE ((+ (CAST(vt1.c0 AS NUMERIC)))) ORDER BY NULLIF(DISTINCT CAST(rt72.c1 AS NUMERIC), ((t1.c67) BETWEEN (rt72.c0) AND (rt72.c2)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt72 ON (((((t1.c0))>((rt72.c1)))) BETWEEN (rt72.c1 COLLATE RTRIM) AND (((vt0.c0)>(rt72.c0)))) FULL OUTER JOIN t1 ON (((+ (t1.c0)))<=(-8.6856007E7)) FULL OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE ((((- (NULL)))/(((vt0.c0) BETWEEN (rt72.c0) AND (t1.c0))))) ORDER BY rt72.c1, (((t1.c0 IN ()))IS NOT(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt72.c1)OR(((vt0.c0)LIKE(t1.c0)))))OR(-1437591777));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))/(((vt0.c0) BETWEEN (rt72.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt72 ON (((((t1.c0))>((rt72.c1)))) BETWEEN (rt72.c1 COLLATE RTRIM) AND (((vt0.c0)>(rt72.c0)))) FULL OUTER JOIN t1 ON (((+ (t1.c0)))<=(-8.6856007E7)) FULL OUTER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY rt72.c1, (((t1.c0 IN ()))IS NOT(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt72.c1)OR(((vt0.c0)LIKE(t1.c0)))))OR(-1437591777)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt72 ON (((((t1.c0))>((rt72.c1)))) BETWEEN (rt72.c1 COLLATE RTRIM) AND (((vt0.c0)>(rt72.c0)))) FULL OUTER JOIN t1 ON (((+ (t1.c0)))<=(-8.6856007E7)) FULL OUTER JOIN vt0 ON SQLITE_SOURCE_ID() WHERE ((((- (NULL)))/(((vt0.c0) BETWEEN (rt72.c0) AND (t1.c0))))) ORDER BY rt72.c1, (((t1.c0 IN ()))IS NOT(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt72.c1)OR(((vt0.c0)LIKE(t1.c0)))))OR(-1437591777));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))/(((vt0.c0) BETWEEN (rt72.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt72 ON (((((t1.c0))>((rt72.c1)))) BETWEEN (rt72.c1 COLLATE RTRIM) AND (((vt0.c0)>(rt72.c0)))) FULL OUTER JOIN t1 ON (((+ (t1.c0)))<=(-8.6856007E7)) FULL OUTER JOIN vt0 ON SQLITE_SOURCE_ID() ORDER BY rt72.c1, (((t1.c0 IN ()))IS NOT(vt0.c0 COLLATE RTRIM)) DESC  NULLS LAST, ((((rt72.c1)OR(((vt0.c0)LIKE(t1.c0)))))OR(-1437591777)));
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY('PUc?ꑖ^'))GLOB((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((LIKELY('PUc?ꑖ^'))GLOB((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY('PUc?ꑖ^'))GLOB((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((LIKELY('PUc?ꑖ^'))GLOB((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY('PUc?ꑖ^'))GLOB((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM rt72 LEFT OUTER JOIN vt0 ON (((rt72.c0) NOT BETWEEN (rt72.c0) AND (rt72.c2)) IN ()) WHERE (((((((rt72.c0)OR(rt72.c2)))AND('1260225267'))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_array(vt0.c0, rt72.c1)))) ORDER BY ((((rt72.c1)/(rt72.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c0)OR(rt72.c2)))AND('1260225267'))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_array(vt0.c0, rt72.c1)))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt0 ON (((rt72.c0) NOT BETWEEN (rt72.c0) AND (rt72.c2)) IN ()) ORDER BY ((((rt72.c1)/(rt72.c2))) NOT NULL));
SELECT ALL * FROM rt72 LEFT OUTER JOIN vt0 ON (((rt72.c0) NOT BETWEEN (rt72.c0) AND (rt72.c2)) IN ()) WHERE (((((((rt72.c0)OR(rt72.c2)))AND('1260225267'))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_array(vt0.c0, rt72.c1)))) ORDER BY ((((rt72.c1)/(rt72.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((rt72.c0)OR(rt72.c2)))AND('1260225267'))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_array(vt0.c0, rt72.c1)))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt0 ON (((rt72.c0) NOT BETWEEN (rt72.c0) AND (rt72.c2)) IN ()) ORDER BY ((((rt72.c1)/(rt72.c2))) NOT NULL));
SELECT ALL * FROM rt72 LEFT OUTER JOIN vt0 ON (((rt72.c0) NOT BETWEEN (rt72.c0) AND (rt72.c2)) IN ()) WHERE (((((((rt72.c0)OR(rt72.c2)))AND('1260225267'))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (json_array(vt0.c0, rt72.c1)))) ORDER BY ((((rt72.c1)/(rt72.c2))) NOT NULL);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LOWER(DISTINCT CASE WHEN t1.c67 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE WHEN t1.c67 THEN t1.c0 END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (- ((- (vt0.c0)))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LOWER(DISTINCT CASE WHEN t1.c67 THEN t1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT CASE WHEN t1.c67 THEN t1.c0 END)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (- ((- (vt0.c0)))));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (- ((- (vt0.c0)))) WHERE (LOWER(DISTINCT CASE WHEN t1.c67 THEN t1.c0 END));
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((- (vt1.c0))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (LIKELY(vt1.c0) IN ()), (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((- (vt1.c0))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (LIKELY(vt1.c0) IN ()), (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((- (vt1.c0))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (LIKELY(vt1.c0) IN ()), (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((- (vt1.c0))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (LIKELY(vt1.c0) IN ()), (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((- (vt1.c0))))>=((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))), (LIKELY(vt1.c0) IN ()), (+ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt72, vt0 INDEXED BY i60 WHERE (((x'2372')GLOB(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt72.c1 THEN NULL WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'2372')GLOB(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt72.c1 THEN NULL WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt1, rt72, vt0 INDEXED BY i60);
SELECT ALL COUNT(*) FROM vt1, rt72, vt0 INDEXED BY i60 WHERE (((x'2372')GLOB(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt72.c1 THEN NULL WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'2372')GLOB(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt72.c1 THEN NULL WHEN rt72.c2 THEN vt1.c0 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt1, rt72, vt0 INDEXED BY i60);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c67)*(t1.c0)) IN ())) ORDER BY ((((t1.c67)+(vt0.c0))) BETWEEN ((- (vt0.c0))) AND (((((t1.c0)AND(NULL)))OR(t1.c67))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)*(t1.c0)) IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c67)+(vt0.c0))) BETWEEN ((- (vt0.c0))) AND (((((t1.c0)AND(NULL)))OR(t1.c67))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c67)*(t1.c0)) IN ())) ORDER BY ((((t1.c67)+(vt0.c0))) BETWEEN ((- (vt0.c0))) AND (((((t1.c0)AND(NULL)))OR(t1.c67))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)*(t1.c0)) IN ())) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c67)+(vt0.c0))) BETWEEN ((- (vt0.c0))) AND (((((t1.c0)AND(NULL)))OR(t1.c67))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((t1.c67)*(t1.c0)) IN ())) ORDER BY ((((t1.c67)+(vt0.c0))) BETWEEN ((- (vt0.c0))) AND (((((t1.c0)AND(NULL)))OR(t1.c67))))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON 0.8168196778453596 CROSS JOIN rt72 ON CAST((vt1.c0 IN ()) AS BLOB) CROSS JOIN vt1 ON ((vt0.c0)%(x'')) COLLATE RTRIM WHERE (((INSTR('', vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((INSTR('', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON 0.8168196778453596 CROSS JOIN rt72 ON CAST((vt1.c0 IN ()) AS BLOB) CROSS JOIN vt1 ON ((vt0.c0)%(x'')) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON 0.8168196778453596 CROSS JOIN rt72 ON CAST((vt1.c0 IN ()) AS BLOB) CROSS JOIN vt1 ON ((vt0.c0)%(x'')) COLLATE RTRIM WHERE (((INSTR('', vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((INSTR('', vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON 0.8168196778453596 CROSS JOIN rt72 ON CAST((vt1.c0 IN ()) AS BLOB) CROSS JOIN vt1 ON ((vt0.c0)%(x'')) COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t1 ON 0.8168196778453596 CROSS JOIN rt72 ON CAST((vt1.c0 IN ()) AS BLOB) CROSS JOIN vt1 ON ((vt0.c0)%(x'')) COLLATE RTRIM WHERE (((INSTR('', vt0.c0)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((((((((0.3765650850316008)OR(CASE rt72.c2  WHEN rt72.c0 THEN t1.c0 ELSE rt72.c0 END)))AND(NULL)))OR(CAST(vt1.c0 AS REAL))))AND((NOT (rt72.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.3765650850316008)OR(CASE rt72.c2  WHEN rt72.c0 THEN t1.c0 ELSE rt72.c0 END)))AND(NULL)))OR(CAST(vt1.c0 AS REAL))))AND((NOT (rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((((((((0.3765650850316008)OR(CASE rt72.c2  WHEN rt72.c0 THEN t1.c0 ELSE rt72.c0 END)))AND(NULL)))OR(CAST(vt1.c0 AS REAL))))AND((NOT (rt72.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0.3765650850316008)OR(CASE rt72.c2  WHEN rt72.c0 THEN t1.c0 ELSE rt72.c0 END)))AND(NULL)))OR(CAST(vt1.c0 AS REAL))))AND((NOT (rt72.c1))))) IS TRUE)  as count FROM vt0, vt1, rt72, t1);
SELECT ALL COUNT(*) FROM vt0, vt1, rt72, t1 WHERE (((((((((0.3765650850316008)OR(CASE rt72.c2  WHEN rt72.c0 THEN t1.c0 ELSE rt72.c0 END)))AND(NULL)))OR(CAST(vt1.c0 AS REAL))))AND((NOT (rt72.c1)))));
SELECT * FROM rt72 WHERE ((CAST(rt72.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt72.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE ((CAST(rt72.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt72.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE ((CAST(rt72.c2 AS BLOB) IN ()));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (rt72.c1 IN (rt72.c1)) COLLATE BINARY COLLATE RTRIM CROSS JOIN rt72 ON (CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 WHEN 0.9711947899210488 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 ELSE rt72.c0 END IN (((vt1.c0)GLOB(rt72.c1)), CAST(rt72.c1 AS INTEGER))) WHERE ((((rt72.c2, rt72.c0, rt72.c0)) BETWEEN ((CAST(rt72.c0 AS TEXT), rt72.c2, CAST(-1645423346 AS BLOB))) AND (((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((vt1.c0))), CASE rt72.c2  WHEN rt72.c0 THEN x'10dc' ELSE rt72.c2 END, (((rt72.c0))>=((rt72.c1))))))) ORDER BY (((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((rt72.c2)))) BETWEEN (rt72.c2 COLLATE RTRIM) AND (((((rt72.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt72.c2, rt72.c0, rt72.c0)) BETWEEN ((CAST(rt72.c0 AS TEXT), rt72.c2, CAST(-1645423346 AS BLOB))) AND (((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((vt1.c0))), CASE rt72.c2  WHEN rt72.c0 THEN x'10dc' ELSE rt72.c2 END, (((rt72.c0))>=((rt72.c1))))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (rt72.c1 IN (rt72.c1)) COLLATE BINARY COLLATE RTRIM CROSS JOIN rt72 ON (CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 WHEN 0.9711947899210488 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 ELSE rt72.c0 END IN (((vt1.c0)GLOB(rt72.c1)), CAST(rt72.c1 AS INTEGER))) ORDER BY (((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((rt72.c2)))) BETWEEN (rt72.c2 COLLATE RTRIM) AND (((((rt72.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON (rt72.c1 IN (rt72.c1)) COLLATE BINARY COLLATE RTRIM CROSS JOIN rt72 ON (CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 WHEN 0.9711947899210488 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 ELSE rt72.c0 END IN (((vt1.c0)GLOB(rt72.c1)), CAST(rt72.c1 AS INTEGER))) WHERE ((((rt72.c2, rt72.c0, rt72.c0)) BETWEEN ((CAST(rt72.c0 AS TEXT), rt72.c2, CAST(-1645423346 AS BLOB))) AND (((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((vt1.c0))), CASE rt72.c2  WHEN rt72.c0 THEN x'10dc' ELSE rt72.c2 END, (((rt72.c0))>=((rt72.c1))))))) ORDER BY (((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((rt72.c2)))) BETWEEN (rt72.c2 COLLATE RTRIM) AND (((((rt72.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt72.c2, rt72.c0, rt72.c0)) BETWEEN ((CAST(rt72.c0 AS TEXT), rt72.c2, CAST(-1645423346 AS BLOB))) AND (((((vt0.c0)) BETWEEN ((rt72.c2)) AND ((vt1.c0))), CASE rt72.c2  WHEN rt72.c0 THEN x'10dc' ELSE rt72.c2 END, (((rt72.c0))>=((rt72.c1))))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (rt72.c1 IN (rt72.c1)) COLLATE BINARY COLLATE RTRIM CROSS JOIN rt72 ON (CASE rt72.c1  WHEN rt72.c1 THEN rt72.c1 WHEN 0.9711947899210488 THEN rt72.c1 WHEN rt72.c0 THEN rt72.c2 ELSE rt72.c0 END IN (((vt1.c0)GLOB(rt72.c1)), CAST(rt72.c1 AS INTEGER))) ORDER BY (((((vt1.c0)) BETWEEN ((rt72.c0)) AND ((rt72.c2)))) BETWEEN (rt72.c2 COLLATE RTRIM) AND (((((rt72.c0)OR(vt1.c0)))AND(vt1.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((vt0.c0 IN (vt0.c0)))OR(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))OR(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((vt0.c0 IN (vt0.c0)))OR(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))OR(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE BINARY) ORDER BY (((vt0.c0 IN (vt0.c0)))OR(TIME(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0)<>(0.9157191523732178))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)==(vt1.c0))) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0)<>(0.9157191523732178))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)==(vt1.c0))) AND ((+ (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0)<>(0.9157191523732178))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)==(vt1.c0))) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0)<>(0.9157191523732178))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)==(vt1.c0))) AND ((+ (vt1.c0)))) ASC);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>=(((vt1.c0)<>(0.9157191523732178))))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0)==(vt1.c0))) AND ((+ (vt1.c0)))) ASC;
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c67)))AND(t1.c67)))AND(x'')))OR(x'98ce'))) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((('-178580147') IS TRUE)))) ORDER BY (((t1.c67 IN (t1.c0)))<(t1.c67)) DESC, (((((t1.c67)OR(t1.c0)))AND(0.49777041265867505)) IN ()) DESC  NULLS FIRST, ((t1.c67 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(t1.c67)))AND(t1.c67)))AND(x'')))OR(x'98ce'))) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((('-178580147') IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c67 IN (t1.c0)))<(t1.c67)) DESC, (((((t1.c67)OR(t1.c0)))AND(0.49777041265867505)) IN ()) DESC  NULLS FIRST, ((t1.c67 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c67)))AND(t1.c67)))AND(x'')))OR(x'98ce'))) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((('-178580147') IS TRUE)))) ORDER BY (((t1.c67 IN (t1.c0)))<(t1.c67)) DESC, (((((t1.c67)OR(t1.c0)))AND(0.49777041265867505)) IN ()) DESC  NULLS FIRST, ((t1.c67 COLLATE NOCASE) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c0)OR(t1.c67)))AND(t1.c67)))AND(x'')))OR(x'98ce'))) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((('-178580147') IS TRUE)))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c67 IN (t1.c0)))<(t1.c67)) DESC, (((((t1.c67)OR(t1.c0)))AND(0.49777041265867505)) IN ()) DESC  NULLS FIRST, ((t1.c67 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM t1 WHERE (((((((((((t1.c0)OR(t1.c67)))AND(t1.c67)))AND(x'')))OR(x'98ce'))) NOT BETWEEN (((t1.c0) IS TRUE)) AND ((('-178580147') IS TRUE)))) ORDER BY (((t1.c67 IN (t1.c0)))<(t1.c67)) DESC, (((((t1.c67)OR(t1.c0)))AND(0.49777041265867505)) IN ()) DESC  NULLS FIRST, ((t1.c67 COLLATE NOCASE) NOTNULL);
SELECT * FROM vt0, t1, vt1 RIGHT OUTER JOIN rt72 ON CASE CAST(rt72.c0 AS INTEGER)  WHEN t1.c0 THEN CASE WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END WHERE (((0.021796429101914816) NOT BETWEEN (((rt72.c1) ISNULL)) AND (-3.40030349E8 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((0.021796429101914816) NOT BETWEEN (((rt72.c1) ISNULL)) AND (-3.40030349E8 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, vt1 RIGHT OUTER JOIN rt72 ON CASE CAST(rt72.c0 AS INTEGER)  WHEN t1.c0 THEN CASE WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END);
SELECT * FROM vt0, t1, vt1 RIGHT OUTER JOIN rt72 ON CASE CAST(rt72.c0 AS INTEGER)  WHEN t1.c0 THEN CASE WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END WHERE (((0.021796429101914816) NOT BETWEEN (((rt72.c1) ISNULL)) AND (-3.40030349E8 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((0.021796429101914816) NOT BETWEEN (((rt72.c1) ISNULL)) AND (-3.40030349E8 COLLATE BINARY))) IS TRUE)  as count FROM vt0, t1, vt1 RIGHT OUTER JOIN rt72 ON CASE CAST(rt72.c0 AS INTEGER)  WHEN t1.c0 THEN CASE WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END);
SELECT * FROM vt0, t1, vt1 RIGHT OUTER JOIN rt72 ON CASE CAST(rt72.c0 AS INTEGER)  WHEN t1.c0 THEN CASE WHEN rt72.c2 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0) NOT NULL) END WHERE (((0.021796429101914816) NOT BETWEEN (((rt72.c1) ISNULL)) AND (-3.40030349E8 COLLATE BINARY)));
SELECT * FROM rt72 WHERE (((((((rt72.c0))=((rt72.c2))), CAST(rt72.c2 AS NUMERIC), ((rt72.c2)!=(rt72.c0))))<=((((rt72.c2)>=(rt72.c1)), (rt72.c2 IN ()), json_insert(rt72.c2, rt72.c2, rt72.c1, rt72.c2, rt72.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt72.c0))==((rt72.c2))), CAST(rt72.c2 AS NUMERIC), ((rt72.c2)<>(rt72.c0))))<=((((rt72.c2)>=(rt72.c1)), (rt72.c2 IN ()), json_insert(rt72.c2, rt72.c2, rt72.c1, rt72.c2, rt72.c0))))) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE (((((((rt72.c0))=((rt72.c2))), CAST(rt72.c2 AS NUMERIC), ((rt72.c2)!=(rt72.c0))))<=((((rt72.c2)>=(rt72.c1)), (rt72.c2 IN ()), json_insert(rt72.c2, rt72.c2, rt72.c1, rt72.c2, rt72.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt72.c0))==((rt72.c2))), CAST(rt72.c2 AS NUMERIC), ((rt72.c2)<>(rt72.c0))))<=((((rt72.c2)>=(rt72.c1)), (rt72.c2 IN ()), json_insert(rt72.c2, rt72.c2, rt72.c1, rt72.c2, rt72.c0))))) IS TRUE)  as count FROM rt72);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c67) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((t1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t1.c0 THEN t1.c67 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c67) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t1.c0 THEN t1.c67 END))  NULLS LAST);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c67) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((t1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t1.c0 THEN t1.c67 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t1.c67) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt1, t1, vt0 ORDER BY ((((t1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t1.c0 THEN t1.c67 END))  NULLS LAST);
SELECT * FROM vt1, t1, vt0 WHERE (CASE WHEN ((t1.c67) NOT BETWEEN (t1.c0) AND (vt0.c0)) THEN (vt0.c0 IN ()) END) ORDER BY ((((t1.c0) ISNULL)) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE WHEN t1.c0 THEN t1.c67 END))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c67 IN (t1.c67, t1.c0)) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c67 IN (t1.c67, t1.c0)) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c67 IN (t1.c67, t1.c0)) THEN (t1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t1.c67 IN (t1.c67, t1.c0)) THEN (t1.c0 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (t1.c67 IN (t1.c67, t1.c0)) THEN (t1.c0 IN ()) END);
SELECT * FROM t1 WHERE (((((t1.c0)<<(t1.c0))) BETWEEN (((((t1.c67)OR(t1.c67)))OR(t1.c0))) AND ((- (t1.c67))))) ORDER BY ((((t1.c0)>(t1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<(t1.c0))) BETWEEN (((((t1.c67)OR(t1.c67)))OR(t1.c0))) AND ((- (t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)>(t1.c0))) NOT NULL) ASC);
SELECT * FROM t1 WHERE (((((t1.c0)<<(t1.c0))) BETWEEN (((((t1.c67)OR(t1.c67)))OR(t1.c0))) AND ((- (t1.c67))))) ORDER BY ((((t1.c0)>(t1.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)<<(t1.c0))) BETWEEN (((((t1.c67)OR(t1.c67)))OR(t1.c0))) AND ((- (t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)>(t1.c0))) NOT NULL) ASC);
SELECT * FROM t1 WHERE (((((t1.c0)<<(t1.c0))) BETWEEN (((((t1.c67)OR(t1.c67)))OR(t1.c0))) AND ((- (t1.c67))))) ORDER BY ((((t1.c0)>(t1.c0))) NOT NULL) ASC;
SELECT COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<(UPPER(DISTINCT vt0.c0)))) ORDER BY UPPER(DISTINCT ((t1.c0)+(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt72, t1, vt0, vt1 ORDER BY UPPER(DISTINCT ((t1.c0)+(NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<(UPPER(DISTINCT vt0.c0)))) ORDER BY UPPER(DISTINCT ((t1.c0)+(NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM rt72, t1, vt0, vt1 ORDER BY UPPER(DISTINCT ((t1.c0)+(NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt72, t1, vt0, vt1 WHERE (((vt0.c0 COLLATE BINARY)<(UPPER(DISTINCT vt0.c0)))) ORDER BY UPPER(DISTINCT ((t1.c0)+(NULL)))  NULLS FIRST;
SELECT ALL * FROM rt72 INNER JOIN vt1 ON CASE ((rt72.c0) ISNULL)  WHEN (vt1.c0 IN (rt72.c0)) THEN ((NULL)OR(rt72.c2)) ELSE vt1.c0 END WHERE (CAST(((rt72.c0) BETWEEN (rt72.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c0) BETWEEN (rt72.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt72 INNER JOIN vt1 ON CASE ((rt72.c0) ISNULL)  WHEN (vt1.c0 IN (rt72.c0)) THEN ((NULL)OR(rt72.c2)) ELSE vt1.c0 END);
SELECT ALL * FROM rt72 INNER JOIN vt1 ON CASE ((rt72.c0) ISNULL)  WHEN (vt1.c0 IN (rt72.c0)) THEN ((NULL)OR(rt72.c2)) ELSE vt1.c0 END WHERE (CAST(((rt72.c0) BETWEEN (rt72.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt72.c0) BETWEEN (rt72.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt72 INNER JOIN vt1 ON CASE ((rt72.c0) ISNULL)  WHEN (vt1.c0 IN (rt72.c0)) THEN ((NULL)OR(rt72.c2)) ELSE vt1.c0 END);
SELECT ALL * FROM rt72 INNER JOIN vt1 ON CASE ((rt72.c0) ISNULL)  WHEN (vt1.c0 IN (rt72.c0)) THEN ((NULL)OR(rt72.c2)) ELSE vt1.c0 END WHERE (CAST(((rt72.c0) BETWEEN (rt72.c1) AND (vt1.c0)) AS NUMERIC));
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt72 ON CAST(((rt72.c2)|(rt72.c2)) AS NUMERIC) CROSS JOIN vt1 ON (~ (CAST(t1.c67 AS REAL))) WHERE ((((((rt72.c1)AND(vt1.c0)))AND(rt72.c2)) IN ())) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ABS(DISTINCT '1112274157') ELSE 'n‟' END ASC, ((rt72.c1) ISNULL) DESC  NULLS LAST, 4.65370885E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c1)AND(vt1.c0)))AND(rt72.c2)) IN ())) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt72 ON CAST(((rt72.c2)|(rt72.c2)) AS NUMERIC) CROSS JOIN vt1 ON (~ (CAST(t1.c67 AS REAL))) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ABS(DISTINCT '1112274157') ELSE 'n‟' END ASC, ((rt72.c1) ISNULL) DESC  NULLS LAST, 4.65370885E8  NULLS FIRST);
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt72 ON CAST(((rt72.c2)|(rt72.c2)) AS NUMERIC) CROSS JOIN vt1 ON (~ (CAST(t1.c67 AS REAL))) WHERE ((((((rt72.c1)AND(vt1.c0)))AND(rt72.c2)) IN ())) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ABS(DISTINCT '1112274157') ELSE 'n‟' END ASC, ((rt72.c1) ISNULL) DESC  NULLS LAST, 4.65370885E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c1)AND(vt1.c0)))AND(rt72.c2)) IN ())) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN rt72 ON CAST(((rt72.c2)|(rt72.c2)) AS NUMERIC) CROSS JOIN vt1 ON (~ (CAST(t1.c67 AS REAL))) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ABS(DISTINCT '1112274157') ELSE 'n‟' END ASC, ((rt72.c1) ISNULL) DESC  NULLS LAST, 4.65370885E8  NULLS FIRST);
SELECT * FROM t1, vt0 LEFT OUTER JOIN rt72 ON CAST(((rt72.c2)|(rt72.c2)) AS NUMERIC) CROSS JOIN vt1 ON (~ (CAST(t1.c67 AS REAL))) WHERE ((((((rt72.c1)AND(vt1.c0)))AND(rt72.c2)) IN ())) ORDER BY CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ABS(DISTINCT '1112274157') ELSE 'n‟' END ASC, ((rt72.c1) ISNULL) DESC  NULLS LAST, 4.65370885E8  NULLS FIRST;
SELECT * FROM t1, vt0, rt72 WHERE ((((t1.c67)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (-2.087786814E9) AND (rt72.c2)))) AND ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (-2.087786814E9) AND (rt72.c2)))) AND ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END)))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT * FROM t1, vt0, rt72 WHERE ((((t1.c67)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (-2.087786814E9) AND (rt72.c2)))) AND ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (-2.087786814E9) AND (rt72.c2)))) AND ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END)))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT * FROM t1, vt0, rt72 WHERE ((((t1.c67)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (-2.087786814E9) AND (rt72.c2)))) AND ((CASE WHEN t1.c0 THEN rt72.c1 ELSE rt72.c0 END))));
SELECT * FROM vt0, vt1, t1, rt72 WHERE (((((((((((((((t1.c0)OR(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(rt72.c2)))AND(t1.c0)))/(CAST(rt72.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c0)OR(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(rt72.c2)))AND(t1.c0)))/(CAST(rt72.c2 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT * FROM vt0, vt1, t1, rt72 WHERE (((((((((((((((t1.c0)OR(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(rt72.c2)))AND(t1.c0)))/(CAST(rt72.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c0)OR(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(rt72.c2)))AND(t1.c0)))/(CAST(rt72.c2 AS REAL)))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT * FROM vt0, vt1, t1, rt72 WHERE (((((((((((((((t1.c0)OR(x'')))OR(vt0.c0)))OR(t1.c0)))AND(vt1.c0)))AND(rt72.c2)))AND(t1.c0)))/(CAST(rt72.c2 AS REAL))));
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL)) ORDER BY vt1.c0 DESC;
SELECT * FROM t1, vt0 FULL OUTER JOIN rt72 ON ((((t1.c0) ISNULL))<=(((t1.c67)/(rt72.c2)))) FULL OUTER JOIN vt1 ON ((CAST(t1.c0 AS REAL))+(((((((((t1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'')))) WHERE ((((((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))<=((((rt72.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))<=((((rt72.c0) IS TRUE))))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt72 ON ((((t1.c0) ISNULL))<=(((t1.c67)/(rt72.c2)))) FULL OUTER JOIN vt1 ON ((CAST(t1.c0 AS REAL))+(((((((((t1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'')))));
SELECT * FROM t1, vt0 FULL OUTER JOIN rt72 ON ((((t1.c0) ISNULL))<=(((t1.c67)/(rt72.c2)))) FULL OUTER JOIN vt1 ON ((CAST(t1.c0 AS REAL))+(((((((((t1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'')))) WHERE ((((((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))<=((((rt72.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))<=((((rt72.c0) IS TRUE))))) IS TRUE)  as count FROM t1, vt0 FULL OUTER JOIN rt72 ON ((((t1.c0) ISNULL))<=(((t1.c67)/(rt72.c2)))) FULL OUTER JOIN vt1 ON ((CAST(t1.c0 AS REAL))+(((((((((t1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'')))));
SELECT * FROM t1, vt0 FULL OUTER JOIN rt72 ON ((((t1.c0) ISNULL))<=(((t1.c67)/(rt72.c2)))) FULL OUTER JOIN vt1 ON ((CAST(t1.c0 AS REAL))+(((((((((t1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(x'')))) WHERE ((((((t1.c67) BETWEEN (vt1.c0) AND (t1.c67))))<=((((rt72.c0) IS TRUE)))));
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t1 NATURAL JOIN vt1);
SELECT ALL * FROM t1 NATURAL JOIN vt1 WHERE (((t1.c0) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((vt1.c0) IS TRUE) COLLATE BINARY INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(t1.c67)))OR(t1.c0)))AND(0xffffffffe90dd56c)))AND(t1.c67)))OR(((t1.c0)+(rt72.c0)))))AND(((t1.c67)==(t1.c0)))) RIGHT OUTER JOIN rt72 ON (((t1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN 0.4797721524056676 WHEN vt0.c0 THEN t1.c0 WHEN rt72.c2 THEN vt1.c0 END)) AND (((- (x'c882'))))) WHERE (((0xffffffff920181b4) NOTNULL)) ORDER BY (((((rt72.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c2)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffff920181b4) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((vt1.c0) IS TRUE) COLLATE BINARY INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(t1.c67)))OR(t1.c0)))AND(0xffffffffe90dd56c)))AND(t1.c67)))OR(((t1.c0)+(rt72.c0)))))AND(((t1.c67)=(t1.c0)))) RIGHT OUTER JOIN rt72 ON (((t1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN 0.4797721524056676 WHEN vt0.c0 THEN t1.c0 WHEN rt72.c2 THEN vt1.c0 END)) AND (((- (x'c882'))))) ORDER BY (((((rt72.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c2)))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t1 ON ((vt1.c0) IS TRUE) COLLATE BINARY INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(t1.c67)))OR(t1.c0)))AND(0xffffffffe90dd56c)))AND(t1.c67)))OR(((t1.c0)+(rt72.c0)))))AND(((t1.c67)==(t1.c0)))) RIGHT OUTER JOIN rt72 ON (((t1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN 0.4797721524056676 WHEN vt0.c0 THEN t1.c0 WHEN rt72.c2 THEN vt1.c0 END)) AND (((- (x'c882'))))) WHERE (((0xffffffff920181b4) NOTNULL)) ORDER BY (((((rt72.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c2)))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((0xffffffff920181b4) NOTNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON ((vt1.c0) IS TRUE) COLLATE BINARY INNER JOIN vt1 ON ((((((((((((vt1.c0)OR(t1.c67)))OR(t1.c0)))AND(0xffffffffe90dd56c)))AND(t1.c67)))OR(((t1.c0)+(rt72.c0)))))AND(((t1.c67)=(t1.c0)))) RIGHT OUTER JOIN rt72 ON (((t1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN 0.4797721524056676 WHEN vt0.c0 THEN t1.c0 WHEN rt72.c2 THEN vt1.c0 END)) AND (((- (x'c882'))))) ORDER BY (((((rt72.c0)) NOT BETWEEN ((rt72.c0)) AND ((rt72.c2)))) IS TRUE) ASC);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((NULL) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt72, t1);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((NULL) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt72, t1);
SELECT ALL * FROM vt1, vt0, rt72, t1 WHERE (((NULL) NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt72, vt0 INNER JOIN t1 ON ((x'')GLOB(((rt72.c1)OR(rt72.c2)))) RIGHT OUTER JOIN vt1 ON (((((NOT (rt72.c0)))OR(vt1.c0)))AND(((((rt72.c2)AND(vt1.c0)))AND(rt72.c0)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt72, vt0 INNER JOIN t1 ON ((x'')GLOB(((rt72.c1)OR(rt72.c2)))) RIGHT OUTER JOIN vt1 ON (((((NOT (rt72.c0)))OR(vt1.c0)))AND(((((rt72.c2)AND(vt1.c0)))AND(rt72.c0)))));
SELECT ALL COUNT(*) FROM rt72, vt0 INNER JOIN t1 ON ((x'')GLOB(((rt72.c1)OR(rt72.c2)))) RIGHT OUTER JOIN vt1 ON (((((NOT (rt72.c0)))OR(vt1.c0)))AND(((((rt72.c2)AND(vt1.c0)))AND(rt72.c0)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt72, vt0 INNER JOIN t1 ON ((x'')GLOB(((rt72.c1)OR(rt72.c2)))) RIGHT OUTER JOIN vt1 ON (((((NOT (rt72.c0)))OR(vt1.c0)))AND(((((rt72.c2)AND(vt1.c0)))AND(rt72.c0)))));
SELECT ALL COUNT(*) FROM rt72, vt0 INNER JOIN t1 ON ((x'')GLOB(((rt72.c1)OR(rt72.c2)))) RIGHT OUTER JOIN vt1 ON (((((NOT (rt72.c0)))OR(vt1.c0)))AND(((((rt72.c2)AND(vt1.c0)))AND(rt72.c0)))) WHERE (CAST(((vt1.c0) NOT BETWEEN (t1.c0) AND (vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>>(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 4.65370885E8 THEN vt0.c0 WHEN 0.7067423943178657 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)AND(TRIM(vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 4.65370885E8 THEN vt0.c0 WHEN 0.7067423943178657 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)AND(TRIM(vt0.c0, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>>(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 4.65370885E8 THEN vt0.c0 WHEN 0.7067423943178657 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)AND(TRIM(vt0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 4.65370885E8 THEN vt0.c0 WHEN 0.7067423943178657 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)AND(TRIM(vt0.c0, vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>>(vt0.c0))))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN CAST(vt0.c0 AS BLOB) THEN highlight(vt0.c0, vt0.c0, vt0.c0, vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 4.65370885E8 THEN vt0.c0 WHEN 0.7067423943178657 THEN vt0.c0 WHEN vt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 END)AND(TRIM(vt0.c0, vt0.c0))) ASC;
SELECT * FROM t1, vt0 WHERE (CASE WHEN '-455299775' THEN CASE WHEN t1.c0 THEN x'' WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c0 ELSE '' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-455299775' THEN CASE WHEN t1.c0 THEN x'' WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c0 ELSE '' END END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN '-455299775' THEN CASE WHEN t1.c0 THEN x'' WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c0 ELSE '' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '-455299775' THEN CASE WHEN t1.c0 THEN x'' WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c0 ELSE '' END END) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (CASE WHEN '-455299775' THEN CASE WHEN t1.c0 THEN x'' WHEN t1.c67 THEN vt0.c0 WHEN t1.c67 THEN t1.c0 ELSE '' END END);
SELECT COUNT(*) FROM rt72, vt1, vt0 WHERE (((CAST(rt72.c1 AS NUMERIC))|(CASE WHEN x'' THEN vt1.c0 ELSE rt72.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c1 AS NUMERIC))|(CASE WHEN x'' THEN vt1.c0 ELSE rt72.c2 END))) IS TRUE)  as count FROM rt72, vt1, vt0);
SELECT COUNT(*) FROM rt72, vt1, vt0 WHERE (((CAST(rt72.c1 AS NUMERIC))|(CASE WHEN x'' THEN vt1.c0 ELSE rt72.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt72.c1 AS NUMERIC))|(CASE WHEN x'' THEN vt1.c0 ELSE rt72.c2 END))) IS TRUE)  as count FROM rt72, vt1, vt0);
SELECT COUNT(*) FROM rt72, vt1, vt0 WHERE (((CAST(rt72.c1 AS NUMERIC))|(CASE WHEN x'' THEN vt1.c0 ELSE rt72.c2 END)));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((TYPEOF(t1.c67))IS(7.93471248E8))) ORDER BY (((((t1.c67)IS(vt1.c0))))<=((CAST(vt1.c0 AS TEXT)))) ASC, ((((((vt0.c0)AND(vt1.c0)))AND(t1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t1.c67))IS(7.93471248E8))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((t1.c67)IS(vt1.c0))))<=((CAST(vt1.c0 AS TEXT)))) ASC, ((((((vt0.c0)AND(vt1.c0)))AND(t1.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((TYPEOF(t1.c67))IS(7.93471248E8))) ORDER BY (((((t1.c67)IS(vt1.c0))))<=((CAST(vt1.c0 AS TEXT)))) ASC, ((((((vt0.c0)AND(vt1.c0)))AND(t1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(t1.c67))IS(7.93471248E8))) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY (((((t1.c67)IS(vt1.c0))))<=((CAST(vt1.c0 AS TEXT)))) ASC, ((((((vt0.c0)AND(vt1.c0)))AND(t1.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, t1 WHERE (((TYPEOF(t1.c67))IS(7.93471248E8))) ORDER BY (((((t1.c67)IS(vt1.c0))))<=((CAST(vt1.c0 AS TEXT)))) ASC, ((((((vt0.c0)AND(vt1.c0)))AND(t1.c0))) IS FALSE);
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE ((((~ (rt72.c1))) BETWEEN (((t1.c67) BETWEEN (rt72.c2) AND (rt72.c1))) AND (COALESCE(DISTINCT rt72.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (rt72.c1))) BETWEEN (((t1.c67) BETWEEN (rt72.c2) AND (rt72.c1))) AND (COALESCE(DISTINCT rt72.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, t1, rt72);
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE ((((~ (rt72.c1))) BETWEEN (((t1.c67) BETWEEN (rt72.c2) AND (rt72.c1))) AND (COALESCE(DISTINCT rt72.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (rt72.c1))) BETWEEN (((t1.c67) BETWEEN (rt72.c2) AND (rt72.c1))) AND (COALESCE(DISTINCT rt72.c1, vt0.c0)))) IS TRUE)  as count FROM vt0, t1, rt72);
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE ((((~ (rt72.c1))) BETWEEN (((t1.c67) BETWEEN (rt72.c2) AND (rt72.c1))) AND (COALESCE(DISTINCT rt72.c1, vt0.c0))));
SELECT * FROM vt0, vt1, t1, rt72 WHERE (SQLITE_COMPILEOPTION_USED((+ (rt72.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (rt72.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT * FROM vt0, vt1, t1, rt72 WHERE (SQLITE_COMPILEOPTION_USED((+ (rt72.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((+ (rt72.c0)))) IS TRUE)  as count FROM vt0, vt1, t1, rt72);
SELECT * FROM vt0, vt1, t1, rt72 WHERE (SQLITE_COMPILEOPTION_USED((+ (rt72.c0))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt72 ON (((NOT (rt72.c0))) NOT NULL) WHERE ((CASE WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c2 THEN rt72.c2 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c0 THEN rt72.c0 WHEN vt0.c0 THEN ',' END IN (rt72.c0))) ORDER BY CASE WHEN ((rt72.c2)+(rt72.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (rt72.c0)) END DESC, CAST(vt0.c0 COLLATE NOCASE AS TEXT), ((((((x'')>>(rt72.c1)))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)>>(rt72.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c2 THEN rt72.c2 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c0 THEN rt72.c0 WHEN vt0.c0 THEN ',' END IN (rt72.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt72 ON (((NOT (rt72.c0))) NOT NULL) ORDER BY CASE WHEN ((rt72.c2)+(rt72.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (rt72.c0)) END DESC, CAST(vt0.c0 COLLATE NOCASE AS TEXT), ((((((x'')>>(rt72.c1)))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)>>(rt72.c2)))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt72 ON (((NOT (rt72.c0))) NOT NULL) WHERE ((CASE WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c2 THEN rt72.c2 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c0 THEN rt72.c0 WHEN vt0.c0 THEN ',' END IN (rt72.c0))) ORDER BY CASE WHEN ((rt72.c2)+(rt72.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (rt72.c0)) END DESC, CAST(vt0.c0 COLLATE NOCASE AS TEXT), ((((((x'')>>(rt72.c1)))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)>>(rt72.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c2 THEN rt72.c2 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c0 THEN rt72.c0 WHEN vt0.c0 THEN ',' END IN (rt72.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt72 ON (((NOT (rt72.c0))) NOT NULL) ORDER BY CASE WHEN ((rt72.c2)+(rt72.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (rt72.c0)) END DESC, CAST(vt0.c0 COLLATE NOCASE AS TEXT), ((((((x'')>>(rt72.c1)))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)>>(rt72.c2)))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt72 ON (((NOT (rt72.c0))) NOT NULL) WHERE ((CASE WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c2 THEN rt72.c2 WHEN rt72.c2 THEN vt0.c0 WHEN rt72.c0 THEN rt72.c0 WHEN vt0.c0 THEN ',' END IN (rt72.c0))) ORDER BY CASE WHEN ((rt72.c2)+(rt72.c1)) THEN vt0.c0 COLLATE RTRIM ELSE (NOT (rt72.c0)) END DESC, CAST(vt0.c0 COLLATE NOCASE AS TEXT), ((((((x'')>>(rt72.c1)))AND(((vt0.c0)<<(vt0.c0)))))OR(((vt0.c0)>>(rt72.c2)))) ASC;
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0))<=(('H5UV{'))) IN ())) ORDER BY ((vt0.c0) IS FALSE) DESC, ((vt1.c0) IS TRUE) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<=(('H5UV{'))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) IS FALSE) DESC, ((vt1.c0) IS TRUE) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0))<=(('H5UV{'))) IN ())) ORDER BY ((vt0.c0) IS FALSE) DESC, ((vt1.c0) IS TRUE) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0))<=(('H5UV{'))) IN ())) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) IS FALSE) DESC, ((vt1.c0) IS TRUE) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB))));
SELECT * FROM vt0, vt1 WHERE (((((vt1.c0))<=(('H5UV{'))) IN ())) ORDER BY ((vt0.c0) IS FALSE) DESC, ((vt1.c0) IS TRUE) DESC  NULLS LAST, (~ (CAST(vt1.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM rt72 WHERE (QUOTE('-1638527688'));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('-1638527688')) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (QUOTE('-1638527688'));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE('-1638527688')) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (QUOTE('-1638527688'));
SELECT * FROM t1, rt72 NOT INDEXED, vt1 WHERE ((((((vt1.c0)OR(rt72.c2)))OR(t1.c0)) IN (t1.c0 COLLATE RTRIM))) ORDER BY (((rt72.c2))>=((rt72.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(rt72.c2)))OR(t1.c0)) IN (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY (((rt72.c2))>=((rt72.c2))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t1, rt72 NOT INDEXED, vt1 WHERE ((((((vt1.c0)OR(rt72.c2)))OR(t1.c0)) IN (t1.c0 COLLATE RTRIM))) ORDER BY (((rt72.c2))>=((rt72.c2))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)OR(rt72.c2)))OR(t1.c0)) IN (t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt72, vt1 ORDER BY (((rt72.c2))>=((rt72.c2))) COLLATE NOCASE  NULLS LAST);
SELECT * FROM t1, rt72 NOT INDEXED, vt1 WHERE ((((((vt1.c0)OR(rt72.c2)))OR(t1.c0)) IN (t1.c0 COLLATE RTRIM))) ORDER BY (((rt72.c2))>=((rt72.c2))) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON (NOT ((+ (vt1.c0)))) LEFT OUTER JOIN rt72 ON CAST('|^' AS REAL) WHERE ((((((t1.c0) NOT BETWEEN (t1.c67) AND (t1.c67))))<((CASE WHEN rt72.c1 THEN rt72.c1 ELSE x'' END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) NOT BETWEEN (t1.c67) AND (t1.c67))))<((CASE WHEN rt72.c1 THEN rt72.c1 ELSE x'' END)))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON (NOT ((+ (vt1.c0)))) LEFT OUTER JOIN rt72 ON CAST('|^' AS REAL));
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON (NOT ((+ (vt1.c0)))) LEFT OUTER JOIN rt72 ON CAST('|^' AS REAL) WHERE ((((((t1.c0) NOT BETWEEN (t1.c67) AND (t1.c67))))<((CASE WHEN rt72.c1 THEN rt72.c1 ELSE x'' END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) NOT BETWEEN (t1.c67) AND (t1.c67))))<((CASE WHEN rt72.c1 THEN rt72.c1 ELSE x'' END)))) IS TRUE)  as count FROM t1, vt0 INNER JOIN vt1 ON (NOT ((+ (vt1.c0)))) LEFT OUTER JOIN rt72 ON CAST('|^' AS REAL));
SELECT ALL COUNT(*) FROM t1, vt0 INNER JOIN vt1 ON (NOT ((+ (vt1.c0)))) LEFT OUTER JOIN rt72 ON CAST('|^' AS REAL) WHERE ((((((t1.c0) NOT BETWEEN (t1.c67) AND (t1.c67))))<((CASE WHEN rt72.c1 THEN rt72.c1 ELSE x'' END))));
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c67))>((t1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c67))>((t1.c0))) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c67))>((t1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c67))>((t1.c0))) AS TEXT)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c67))>((t1.c0))) AS TEXT));
SELECT * FROM vt1, rt72 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM vt1, rt72);
SELECT * FROM vt1, rt72 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM vt1, rt72);
SELECT * FROM vt1, rt72 WHERE (rt72.c1);
SELECT * FROM rt72, vt0 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM rt72, vt0);
SELECT * FROM rt72, vt0 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ((rt72.c1) IS TRUE)  as count FROM rt72, vt0);
SELECT * FROM rt72, vt0 WHERE (rt72.c1);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((CAST(t1.c67 AS TEXT)) IS FALSE)) ORDER BY ((((t1.c67)AND(rt72.c1)))>=(((rt72.c0) NOT BETWEEN (rt72.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c67 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY ((((t1.c67)AND(rt72.c1)))>=(((rt72.c0) NOT BETWEEN (rt72.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((CAST(t1.c67 AS TEXT)) IS FALSE)) ORDER BY ((((t1.c67)AND(rt72.c1)))>=(((rt72.c0) NOT BETWEEN (rt72.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c67 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY ((((t1.c67)AND(rt72.c1)))>=(((rt72.c0) NOT BETWEEN (rt72.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((CAST(t1.c67 AS TEXT)) IS FALSE)) ORDER BY ((((t1.c67)AND(rt72.c1)))>=(((rt72.c0) NOT BETWEEN (rt72.c0) AND (t1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt72 WHERE (((rt72.c2 IN ()) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN (((rt72.c1) IS FALSE)) AND (UNLIKELY(DISTINCT 0.49787203197484053))) ASC  NULLS FIRST, ((((rt72.c0) IS FALSE))<=((rt72.c0 IN (rt72.c0, rt72.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2 IN ()) IN ())) IS TRUE)  as count FROM rt72 ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN (((rt72.c1) IS FALSE)) AND (UNLIKELY(DISTINCT 0.49787203197484053))) ASC  NULLS FIRST, ((((rt72.c0) IS FALSE))<=((rt72.c0 IN (rt72.c0, rt72.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72 WHERE (((rt72.c2 IN ()) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN (((rt72.c1) IS FALSE)) AND (UNLIKELY(DISTINCT 0.49787203197484053))) ASC  NULLS FIRST, ((((rt72.c0) IS FALSE))<=((rt72.c0 IN (rt72.c0, rt72.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2 IN ()) IN ())) IS TRUE)  as count FROM rt72 ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN (((rt72.c1) IS FALSE)) AND (UNLIKELY(DISTINCT 0.49787203197484053))) ASC  NULLS FIRST, ((((rt72.c0) IS FALSE))<=((rt72.c0 IN (rt72.c0, rt72.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72 WHERE (((rt72.c2 IN ()) IN ())) ORDER BY ((CAST(rt72.c2 AS REAL)) BETWEEN (((rt72.c1) IS FALSE)) AND (UNLIKELY(DISTINCT 0.49787203197484053))) ASC  NULLS FIRST, ((((rt72.c0) IS FALSE))<=((rt72.c0 IN (rt72.c0, rt72.c1)))) ASC  NULLS LAST;
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c67)AND(t1.c67)))AND(t1.c67)) IN (x'')) WHERE ((((((t1.c0)AND(t1.c67)))AND(t1.c0)) IN ())) ORDER BY t1.c67 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)AND(t1.c67)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c67)AND(t1.c67)))AND(t1.c67)) IN (x'')) ORDER BY t1.c67 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c67)AND(t1.c67)))AND(t1.c67)) IN (x'')) WHERE ((((((t1.c0)AND(t1.c67)))AND(t1.c0)) IN ())) ORDER BY t1.c67 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)AND(t1.c67)))AND(t1.c0)) IN ())) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c67)AND(t1.c67)))AND(t1.c67)) IN (x'')) ORDER BY t1.c67 COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt1 ON (((((t1.c67)AND(t1.c67)))AND(t1.c67)) IN (x'')) WHERE ((((((t1.c0)AND(t1.c67)))AND(t1.c0)) IN ())) ORDER BY t1.c67 COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((t1.c67)AND(t1.c67)))AND(vt0.c0)))AND(t1.c67)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c67)AND(t1.c67)))AND(vt0.c0)))AND(t1.c67)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((t1.c67)AND(t1.c67)))AND(vt0.c0)))AND(t1.c67)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t1.c67)AND(t1.c67)))AND(vt0.c0)))AND(t1.c67)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t1, vt1 NATURAL JOIN vt0 WHERE (((((((((t1.c67)AND(t1.c67)))AND(vt0.c0)))AND(t1.c67)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c67)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c67)))))OR(NULL))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c67)))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE RTRIM)OR(((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c67)))))OR(NULL))) IS TRUE)  as count FROM t1, vt0, rt72);
SELECT COUNT(*) FROM t1, vt0, rt72 WHERE (((((vt0.c0 COLLATE RTRIM)OR(((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c67)))))OR(NULL)));
SELECT * FROM rt72, vt0, vt1, t1 WHERE (CASE CASE rt72.c1  WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN vt0.c0 WHEN 'iWbf\rB8Md' THEN 0.2776700933533319 END  WHEN UPPER(DISTINCT rt72.c1) THEN ((rt72.c0) BETWEEN (t1.c67) AND (vt0.c0)) ELSE (((rt72.c1, t1.c67, rt72.c2)) BETWEEN ((rt72.c0, vt0.c0, rt72.c1)) AND ((t1.c0, rt72.c1, vt1.c0))) END) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c2) ISNULL))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt72.c1  WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN vt0.c0 WHEN 'iWbf\rB8Md' THEN 0.2776700933533319 END  WHEN UPPER(DISTINCT rt72.c1) THEN ((rt72.c0) BETWEEN (t1.c67) AND (vt0.c0)) ELSE (((rt72.c1, t1.c67, rt72.c2)) BETWEEN ((rt72.c0, vt0.c0, rt72.c1)) AND ((t1.c0, rt72.c1, vt1.c0))) END) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c2) ISNULL))) AND (((+ (vt0.c0)))))  NULLS LAST);
SELECT * FROM rt72, vt0, vt1, t1 WHERE (CASE CASE rt72.c1  WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN vt0.c0 WHEN 'iWbf\rB8Md' THEN 0.2776700933533319 END  WHEN UPPER(DISTINCT rt72.c1) THEN ((rt72.c0) BETWEEN (t1.c67) AND (vt0.c0)) ELSE (((rt72.c1, t1.c67, rt72.c2)) BETWEEN ((rt72.c0, vt0.c0, rt72.c1)) AND ((t1.c0, rt72.c1, vt1.c0))) END) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c2) ISNULL))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE rt72.c1  WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN vt0.c0 WHEN 'iWbf\rB8Md' THEN 0.2776700933533319 END  WHEN UPPER(DISTINCT rt72.c1) THEN ((rt72.c0) BETWEEN (t1.c67) AND (vt0.c0)) ELSE (((rt72.c1, t1.c67, rt72.c2)) BETWEEN ((rt72.c0, vt0.c0, rt72.c1)) AND ((t1.c0, rt72.c1, vt1.c0))) END) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c2) ISNULL))) AND (((+ (vt0.c0)))))  NULLS LAST);
SELECT * FROM rt72, vt0, vt1, t1 WHERE (CASE CASE rt72.c1  WHEN t1.c0 THEN t1.c0 WHEN rt72.c2 THEN vt0.c0 WHEN 'iWbf\rB8Md' THEN 0.2776700933533319 END  WHEN UPPER(DISTINCT rt72.c1) THEN ((rt72.c0) BETWEEN (t1.c67) AND (vt0.c0)) ELSE (((rt72.c1, t1.c67, rt72.c2)) BETWEEN ((rt72.c0, vt0.c0, rt72.c1)) AND ((t1.c0, rt72.c1, vt1.c0))) END) ORDER BY (((rt72.c1)) BETWEEN ((((rt72.c2) ISNULL))) AND (((+ (vt0.c0)))))  NULLS LAST;
SELECT * FROM t1, vt1 CROSS JOIN rt72 ON CASE t1.c67  WHEN ((rt72.c2)<>(t1.c67)) THEN CASE WHEN rt72.c2 THEN rt72.c0 END ELSE ((t1.c0) NOT BETWEEN (rt72.c2) AND (rt72.c1)) END CROSS JOIN vt0 ON (((t1.c67 IN ()))>(((rt72.c2)>=(t1.c67)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt72 ON CASE t1.c67  WHEN ((rt72.c2)!=(t1.c67)) THEN CASE WHEN rt72.c2 THEN rt72.c0 END ELSE ((t1.c0) NOT BETWEEN (rt72.c2) AND (rt72.c1)) END CROSS JOIN vt0 ON (((t1.c67 IN ()))>(((rt72.c2)>=(t1.c67)))));
SELECT * FROM t1, vt1 CROSS JOIN rt72 ON CASE t1.c67  WHEN ((rt72.c2)<>(t1.c67)) THEN CASE WHEN rt72.c2 THEN rt72.c0 END ELSE ((t1.c0) NOT BETWEEN (rt72.c2) AND (rt72.c1)) END CROSS JOIN vt0 ON (((t1.c67 IN ()))>(((rt72.c2)>=(t1.c67)))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt72 ON CASE t1.c67  WHEN ((rt72.c2)!=(t1.c67)) THEN CASE WHEN rt72.c2 THEN rt72.c0 END ELSE ((t1.c0) NOT BETWEEN (rt72.c2) AND (rt72.c1)) END CROSS JOIN vt0 ON (((t1.c67 IN ()))>(((rt72.c2)>=(t1.c67)))));
SELECT * FROM t1, vt1 CROSS JOIN rt72 ON CASE t1.c67  WHEN ((rt72.c2)<>(t1.c67)) THEN CASE WHEN rt72.c2 THEN rt72.c0 END ELSE ((t1.c0) NOT BETWEEN (rt72.c2) AND (rt72.c1)) END CROSS JOIN vt0 ON (((t1.c67 IN ()))>(((rt72.c2)>=(t1.c67)))) WHERE (x'');
SELECT ALL * FROM rt72 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE ('');
SELECT ALL * FROM rt72, vt0, t1 WHERE (rt72.c2) ORDER BY ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.4868648789902147 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM rt72, vt0, t1 ORDER BY ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.4868648789902147 AS INTEGER))));
SELECT ALL * FROM rt72, vt0, t1 WHERE (rt72.c2) ORDER BY ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.4868648789902147 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((rt72.c2) IS TRUE)  as count FROM rt72, vt0, t1 ORDER BY ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.4868648789902147 AS INTEGER))));
SELECT ALL * FROM rt72, vt0, t1 WHERE (rt72.c2) ORDER BY ((((((vt0.c0)+(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))OR(CAST(0.4868648789902147 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ('') ORDER BY (((x'' IN (t1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY (((x'' IN (t1.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ('') ORDER BY (((x'' IN (t1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt72, vt1, t1, vt0 ORDER BY (((x'' IN (t1.c0))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72, vt1, t1, vt0 WHERE ('') ORDER BY (((x'' IN (t1.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (TYPEOF(DISTINCT ((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t1.c0) IS FALSE))) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (TYPEOF(DISTINCT ((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((t1.c0) IS FALSE))) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (TYPEOF(DISTINCT ((t1.c0) IS FALSE)));
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (LOWER(DISTINCT CAST(NULL AS REAL))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(NULL AS REAL))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (LOWER(DISTINCT CAST(NULL AS REAL))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(NULL AS REAL))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY NULL);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (LOWER(DISTINCT CAST(NULL AS REAL))) ORDER BY NULL;
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE ((+ (CASE rt72.c2  WHEN rt72.c2 THEN t1.c67 WHEN NULL THEN '697588667' WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END))) ORDER BY rt72.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt72.c2  WHEN rt72.c2 THEN t1.c67 WHEN NULL THEN '697588667' WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY rt72.c1  NULLS FIRST);
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE ((+ (CASE rt72.c2  WHEN rt72.c2 THEN t1.c67 WHEN NULL THEN '697588667' WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END))) ORDER BY rt72.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt72.c2  WHEN rt72.c2 THEN t1.c67 WHEN NULL THEN '697588667' WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END))) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY rt72.c1  NULLS FIRST);
SELECT ALL * FROM vt0, rt72, vt1, t1 WHERE ((+ (CASE rt72.c2  WHEN rt72.c2 THEN t1.c67 WHEN NULL THEN '697588667' WHEN t1.c67 THEN rt72.c1 ELSE rt72.c0 END))) ORDER BY rt72.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (rt72.c1))) AND (((0.08760844350730523)-(rt72.c0)))) RIGHT OUTER JOIN rt72 ON NULL WHERE ((((((-274537420))>((vt1.c0))))<<(((x'')&(rt72.c2))))) ORDER BY CAST((NOT (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((-274537420))>((vt1.c0))))<<(((x'')&(rt72.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (rt72.c1))) AND (((0.08760844350730523)-(rt72.c0)))) RIGHT OUTER JOIN rt72 ON NULL ORDER BY CAST((NOT (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (rt72.c1))) AND (((0.08760844350730523)-(rt72.c0)))) RIGHT OUTER JOIN rt72 ON NULL WHERE ((((((-274537420))>((vt1.c0))))<<(((x'')&(rt72.c2))))) ORDER BY CAST((NOT (vt0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((-274537420))>((vt1.c0))))<<(((x'')&(rt72.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN ((+ (rt72.c1))) AND (((0.08760844350730523)-(rt72.c0)))) RIGHT OUTER JOIN rt72 ON NULL ORDER BY CAST((NOT (vt0.c0)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt72, vt0 WHERE (((((rt72.c2)%(rt72.c1))) IS TRUE)) ORDER BY ((((rt72.c1)%(vt1.c0))) BETWEEN (CASE WHEN NULL THEN rt72.c2 END) AND (rt72.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)%(rt72.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt72, vt0 ORDER BY ((((rt72.c1)%(vt1.c0))) BETWEEN (CASE WHEN NULL THEN rt72.c2 END) AND (rt72.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt72, vt0 WHERE (((((rt72.c2)%(rt72.c1))) IS TRUE)) ORDER BY ((((rt72.c1)%(vt1.c0))) BETWEEN (CASE WHEN NULL THEN rt72.c2 END) AND (rt72.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c2)%(rt72.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt72, vt0 ORDER BY ((((rt72.c1)%(vt1.c0))) BETWEEN (CASE WHEN NULL THEN rt72.c2 END) AND (rt72.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt72, vt0 WHERE (((((rt72.c2)%(rt72.c1))) IS TRUE)) ORDER BY ((((rt72.c1)%(vt1.c0))) BETWEEN (CASE WHEN NULL THEN rt72.c2 END) AND (rt72.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c0 WHERE (CAST(((((rt72.c2)OR(rt72.c0)))OR(t1.c0)) AS BLOB)) ORDER BY CASE (rt72.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CAST(rt72.c0 AS REAL) WHEN ((((t1.c0)OR(t1.c67)))OR(rt72.c0)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 ELSE rt72.c2 END THEN (~ (t1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt72.c2)OR(rt72.c0)))OR(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON rt72.c0 ORDER BY CASE (rt72.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CAST(rt72.c0 AS REAL) WHEN ((((t1.c0)OR(t1.c67)))OR(rt72.c0)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 ELSE rt72.c2 END THEN (~ (t1.c0)) END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c0 WHERE (CAST(((((rt72.c2)OR(rt72.c0)))OR(t1.c0)) AS BLOB)) ORDER BY CASE (rt72.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CAST(rt72.c0 AS REAL) WHEN ((((t1.c0)OR(t1.c67)))OR(rt72.c0)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 ELSE rt72.c2 END THEN (~ (t1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt72.c2)OR(rt72.c0)))OR(t1.c0)) AS BLOB)) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON rt72.c0 ORDER BY CASE (rt72.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CAST(rt72.c0 AS REAL) WHEN ((((t1.c0)OR(t1.c67)))OR(rt72.c0)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 ELSE rt72.c2 END THEN (~ (t1.c0)) END);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c0 WHERE (CAST(((((rt72.c2)OR(rt72.c0)))OR(t1.c0)) AS BLOB)) ORDER BY CASE (rt72.c0 IN ())  WHEN t1.c0 COLLATE NOCASE THEN CAST(rt72.c0 AS REAL) WHEN ((((t1.c0)OR(t1.c67)))OR(rt72.c0)) THEN ((t1.c0) ISNULL) WHEN CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt72.c1 WHEN rt72.c1 THEN rt72.c0 ELSE rt72.c2 END THEN (~ (t1.c0)) END;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt72 WHERE (rt72.c2) ORDER BY CASE rt72.c0 COLLATE BINARY  WHEN (((rt72.c0, rt72.c1, rt72.c0))!=((rt72.c2, vt0.c0, rt72.c2))) THEN (NOT (rt72.c1)) ELSE TRIM(vt0.c0, rt72.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt72 ORDER BY CASE rt72.c0 COLLATE BINARY  WHEN (((rt72.c0, rt72.c1, rt72.c0))<>((rt72.c2, vt0.c0, rt72.c2))) THEN (NOT (rt72.c1)) ELSE TRIM(vt0.c0, rt72.c2) END DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt72 WHERE (rt72.c2) ORDER BY CASE rt72.c0 COLLATE BINARY  WHEN (((rt72.c0, rt72.c1, rt72.c0))!=((rt72.c2, vt0.c0, rt72.c2))) THEN (NOT (rt72.c1)) ELSE TRIM(vt0.c0, rt72.c2) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt72 ORDER BY CASE rt72.c0 COLLATE BINARY  WHEN (((rt72.c0, rt72.c1, rt72.c0))<>((rt72.c2, vt0.c0, rt72.c2))) THEN (NOT (rt72.c1)) ELSE TRIM(vt0.c0, rt72.c2) END DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt72 WHERE (rt72.c2) ORDER BY CASE rt72.c0 COLLATE BINARY  WHEN (((rt72.c0, rt72.c1, rt72.c0))!=((rt72.c2, vt0.c0, rt72.c2))) THEN (NOT (rt72.c1)) ELSE TRIM(vt0.c0, rt72.c2) END DESC;
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (CASE WHEN NULL THEN ((rt72.c1) NOT BETWEEN (vt1.c0) AND (rt72.c1)) END) ORDER BY ((((']I~''9.') BETWEEN (NULL) AND (t1.c0))) BETWEEN ((0X29945bbb IN ())) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt72.c1) NOT BETWEEN (vt1.c0) AND (rt72.c1)) END) IS TRUE)  as count FROM vt1, t1, rt72, vt0 ORDER BY ((((']I~''9.') BETWEEN (NULL) AND (t1.c0))) BETWEEN ((0x29945bbb IN ())) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (CASE WHEN NULL THEN ((rt72.c1) NOT BETWEEN (vt1.c0) AND (rt72.c1)) END) ORDER BY ((((']I~''9.') BETWEEN (NULL) AND (t1.c0))) BETWEEN ((0X29945bbb IN ())) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt72.c1) NOT BETWEEN (vt1.c0) AND (rt72.c1)) END) IS TRUE)  as count FROM vt1, t1, rt72, vt0 ORDER BY ((((']I~''9.') BETWEEN (NULL) AND (t1.c0))) BETWEEN ((0x29945bbb IN ())) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (CASE WHEN NULL THEN ((rt72.c1) NOT BETWEEN (vt1.c0) AND (rt72.c1)) END) ORDER BY ((((']I~''9.') BETWEEN (NULL) AND (t1.c0))) BETWEEN ((0X29945bbb IN ())) AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt1, t1 NATURAL JOIN rt72 WHERE (((- (t1.c67)) IN ())) ORDER BY NULLIF(((rt72.c0) IS FALSE), (rt72.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t1.c67)) IN ())) IS TRUE)  as count FROM vt1, t1 NATURAL JOIN rt72 ORDER BY NULLIF(((rt72.c0) IS FALSE), (rt72.c1 IN ())));
SELECT * FROM vt1, t1 NATURAL JOIN rt72 WHERE (((- (t1.c67)) IN ())) ORDER BY NULLIF(((rt72.c0) IS FALSE), (rt72.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (t1.c67)) IN ())) IS TRUE)  as count FROM vt1, t1 NATURAL JOIN rt72 ORDER BY NULLIF(((rt72.c0) IS FALSE), (rt72.c1 IN ())));
SELECT * FROM vt1, t1 NATURAL JOIN rt72 WHERE (((- (t1.c67)) IN ())) ORDER BY NULLIF(((rt72.c0) IS FALSE), (rt72.c1 IN ()));
SELECT COUNT(*) FROM vt0, rt72 INDEXED BY i61 WHERE (((((rt72.c0)AND(rt72.c2)))AND(rt72.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)AND(rt72.c2)))AND(rt72.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt72 INDEXED BY i61);
SELECT COUNT(*) FROM vt0, rt72 INDEXED BY i61 WHERE (((((rt72.c0)AND(rt72.c2)))AND(rt72.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)AND(rt72.c2)))AND(rt72.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt72 INDEXED BY i61);
SELECT COUNT(*) FROM t1, rt72, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(rt72.c0)))AND(((((rt72.c2)OR(t1.c67)))OR(t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(rt72.c0)))AND(((((rt72.c2)OR(t1.c67)))OR(t1.c67))))) IS TRUE)  as count FROM t1, rt72, vt1);
SELECT COUNT(*) FROM t1, rt72, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(rt72.c0)))AND(((((rt72.c2)OR(t1.c67)))OR(t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(vt1.c0)))AND(rt72.c0)))AND(((((rt72.c2)OR(t1.c67)))OR(t1.c67))))) IS TRUE)  as count FROM t1, rt72, vt1);
SELECT COUNT(*) FROM t1, rt72, vt1 WHERE (((((((vt1.c0)OR(vt1.c0)))AND(rt72.c0)))AND(((((rt72.c2)OR(t1.c67)))OR(t1.c67)))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))AND(t1.c67)))<((t1.c67 IN ()))) WHERE ((NOT (CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))AND(t1.c67)))<((t1.c67 IN ()))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))AND(t1.c67)))<((t1.c67 IN ()))) WHERE ((NOT (CAST(t1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))AND(t1.c67)))<((t1.c67 IN ()))));
SELECT COUNT(*) FROM t1, vt0 CROSS JOIN vt1 ON ((((((vt0.c0)OR(vt0.c0)))AND(t1.c67)))<((t1.c67 IN ()))) WHERE ((NOT (CAST(t1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c1) IS TRUE)  as count FROM rt72, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (rt72.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c1) IS TRUE)  as count FROM rt72, vt0, t1, vt1);
SELECT ALL COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (rt72.c1);
SELECT COUNT(*) FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE)>=(CASE WHEN vt0.c0 THEN t1.c67 END))) ORDER BY (((vt0.c0) NOT NULL) IN ()) ASC  NULLS FIRST, (((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c0))))>(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)>=(CASE WHEN vt0.c0 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY (((vt0.c0) NOT NULL) IN ()) ASC  NULLS FIRST, (((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c0))))>(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE)>=(CASE WHEN vt0.c0 THEN t1.c67 END))) ORDER BY (((vt0.c0) NOT NULL) IN ()) ASC  NULLS FIRST, (((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c0))))>(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)>=(CASE WHEN vt0.c0 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN vt1 ORDER BY (((vt0.c0) NOT NULL) IN ()) ASC  NULLS FIRST, (((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c0))))>(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT COUNT(*) FROM t1, vt0 NATURAL JOIN vt1 WHERE (((vt1.c0 COLLATE NOCASE)>=(CASE WHEN vt0.c0 THEN t1.c67 END))) ORDER BY (((vt0.c0) NOT NULL) IN ()) ASC  NULLS FIRST, (((((t1.c0, t1.c67, t1.c67)) NOT BETWEEN ((t1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, t1.c0, t1.c0))))>(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM t1, rt72 WHERE (rt72.c0) ORDER BY CAST(((rt72.c0)<=(t1.c67)) AS REAL) ASC, ((t1.c0 COLLATE RTRIM)LIKE(((rt72.c1) NOT NULL))) ASC, LTRIM((((t1.c0, t1.c0, rt72.c1))>((rt72.c0, rt72.c0, t1.c67)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM t1, rt72 ORDER BY CAST(((rt72.c0)<=(t1.c67)) AS REAL) ASC, ((t1.c0 COLLATE RTRIM)LIKE(((rt72.c1) NOT NULL))) ASC, LTRIM((((t1.c0, t1.c0, rt72.c1))>((rt72.c0, rt72.c0, t1.c67)))) ASC);
SELECT ALL * FROM t1, rt72 WHERE (rt72.c0) ORDER BY CAST(((rt72.c0)<=(t1.c67)) AS REAL) ASC, ((t1.c0 COLLATE RTRIM)LIKE(((rt72.c1) NOT NULL))) ASC, LTRIM((((t1.c0, t1.c0, rt72.c1))>((rt72.c0, rt72.c0, t1.c67)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt72.c0) IS TRUE)  as count FROM t1, rt72 ORDER BY CAST(((rt72.c0)<=(t1.c67)) AS REAL) ASC, ((t1.c0 COLLATE RTRIM)LIKE(((rt72.c1) NOT NULL))) ASC, LTRIM((((t1.c0, t1.c0, rt72.c1))>((rt72.c0, rt72.c0, t1.c67)))) ASC);
SELECT ALL * FROM t1, rt72 WHERE (rt72.c0) ORDER BY CAST(((rt72.c0)<=(t1.c67)) AS REAL) ASC, ((t1.c0 COLLATE RTRIM)LIKE(((rt72.c1) NOT NULL))) ASC, LTRIM((((t1.c0, t1.c0, rt72.c1))>((rt72.c0, rt72.c0, t1.c67)))) ASC;
SELECT COUNT(*) FROM t1, vt0 WHERE (((((0X1f5c5254)<=(vt0.c0))) NOT BETWEEN ((t1.c67 IN ())) AND ((((t1.c0)) NOT BETWEEN ((t1.c67)) AND (('-963678860'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X1f5c5254)<=(vt0.c0))) NOT BETWEEN ((t1.c67 IN ())) AND ((((t1.c0)) NOT BETWEEN ((t1.c67)) AND (('-963678860')))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((0X1f5c5254)<=(vt0.c0))) NOT BETWEEN ((t1.c67 IN ())) AND ((((t1.c0)) NOT BETWEEN ((t1.c67)) AND (('-963678860'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X1f5c5254)<=(vt0.c0))) NOT BETWEEN ((t1.c67 IN ())) AND ((((t1.c0)) NOT BETWEEN ((t1.c67)) AND (('-963678860')))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((0X1f5c5254)<=(vt0.c0))) NOT BETWEEN ((t1.c67 IN ())) AND ((((t1.c0)) NOT BETWEEN ((t1.c67)) AND (('-963678860'))))));
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((((rt72.c0)) BETWEEN ((rt72.c2 COLLATE BINARY)) AND ((LIKELY(t1.c0))))) ORDER BY (((rt72.c1 IN ())) BETWEEN (((rt72.c0)*(t1.c67))) AND (((((rt72.c0)AND(t1.c67)))AND(rt72.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0)) BETWEEN ((rt72.c2 COLLATE BINARY)) AND ((LIKELY(t1.c0))))) IS TRUE)  as count FROM t1, rt72 ORDER BY (((rt72.c1 IN ())) BETWEEN (((rt72.c0)*(t1.c67))) AND (((((rt72.c0)AND(t1.c67)))AND(rt72.c2)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((((rt72.c0)) BETWEEN ((rt72.c2 COLLATE BINARY)) AND ((LIKELY(t1.c0))))) ORDER BY (((rt72.c1 IN ())) BETWEEN (((rt72.c0)*(t1.c67))) AND (((((rt72.c0)AND(t1.c67)))AND(rt72.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0)) BETWEEN ((rt72.c2 COLLATE BINARY)) AND ((LIKELY(t1.c0))))) IS TRUE)  as count FROM t1, rt72 ORDER BY (((rt72.c1 IN ())) BETWEEN (((rt72.c0)*(t1.c67))) AND (((((rt72.c0)AND(t1.c67)))AND(rt72.c2)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt72 WHERE ((((rt72.c0)) BETWEEN ((rt72.c2 COLLATE BINARY)) AND ((LIKELY(t1.c0))))) ORDER BY (((rt72.c1 IN ())) BETWEEN (((rt72.c0)*(t1.c67))) AND (((((rt72.c0)AND(t1.c67)))AND(rt72.c2)))) DESC;
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c67)))<=(CASE t1.c0  WHEN t1.c67 THEN t1.c67 ELSE t1.c67 END))) ORDER BY ((((((((t1.c0)OR(t1.c0)))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS INTEGER))))AND(t1.c67)), LENGTH(((((t1.c0)OR(t1.c0)))OR(0.32907944295418)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c67)))<=(CASE t1.c0  WHEN t1.c67 THEN t1.c67 ELSE t1.c67 END))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0)OR(t1.c0)))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS INTEGER))))AND(t1.c67)), LENGTH(((((t1.c0)OR(t1.c0)))OR(0.32907944295418)))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c67)))<=(CASE t1.c0  WHEN t1.c67 THEN t1.c67 ELSE t1.c67 END))) ORDER BY ((((((((t1.c0)OR(t1.c0)))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS INTEGER))))AND(t1.c67)), LENGTH(((((t1.c0)OR(t1.c0)))OR(0.32907944295418)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c67)))<=(CASE t1.c0  WHEN t1.c67 THEN t1.c67 ELSE t1.c67 END))) IS TRUE)  as count FROM t1 ORDER BY ((((((((t1.c0)OR(t1.c0)))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS INTEGER))))AND(t1.c67)), LENGTH(((((t1.c0)OR(t1.c0)))OR(0.32907944295418)))  NULLS FIRST);
SELECT * FROM t1 WHERE (((((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c67)))<=(CASE t1.c0  WHEN t1.c67 THEN t1.c67 ELSE t1.c67 END))) ORDER BY ((((((((t1.c0)OR(t1.c0)))AND(CAST(t1.c0 AS REAL))))OR(CAST(t1.c0 AS INTEGER))))AND(t1.c67)), LENGTH(((((t1.c0)OR(t1.c0)))OR(0.32907944295418)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE ((((((((((((rt72.c0)AND(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c1))  WHEN rt72.c1 COLLATE NOCASE THEN CAST(rt72.c0 AS INTEGER) ELSE (((rt72.c1)) BETWEEN ((rt72.c1)) AND ((rt72.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((rt72.c0)AND(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c1))  WHEN rt72.c1 COLLATE NOCASE THEN CAST(rt72.c0 AS INTEGER) ELSE (((rt72.c1)) BETWEEN ((rt72.c1)) AND ((rt72.c1))) END) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE ((((((((((((rt72.c0)AND(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c1))  WHEN rt72.c1 COLLATE NOCASE THEN CAST(rt72.c0 AS INTEGER) ELSE (((rt72.c1)) BETWEEN ((rt72.c1)) AND ((rt72.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((rt72.c0)AND(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c1))  WHEN rt72.c1 COLLATE NOCASE THEN CAST(rt72.c0 AS INTEGER) ELSE (((rt72.c1)) BETWEEN ((rt72.c1)) AND ((rt72.c1))) END) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (CASE ((((((((((((rt72.c0)AND(rt72.c2)))OR(rt72.c0)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c1))  WHEN rt72.c1 COLLATE NOCASE THEN CAST(rt72.c0 AS INTEGER) ELSE (((rt72.c1)) BETWEEN ((rt72.c1)) AND ((rt72.c1))) END);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((((rt72.c0) NOT NULL)))!=((((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c0)))))) ORDER BY (NULLIF(vt1.c0, rt72.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0) NOT NULL)))<>((((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1, rt72 ORDER BY (NULLIF(vt1.c0, rt72.c1) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((((rt72.c0) NOT NULL)))!=((((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c0)))))) ORDER BY (NULLIF(vt1.c0, rt72.c1) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0) NOT NULL)))<>((((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t1, rt72 ORDER BY (NULLIF(vt1.c0, rt72.c1) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t1, rt72 WHERE ((((((rt72.c0) NOT NULL)))!=((((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c0)))))) ORDER BY (NULLIF(vt1.c0, rt72.c1) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN NULL THEN LAST_INSERT_ROWID() WHEN ((x'') BETWEEN (t1.c0) AND (t1.c67)) THEN -1 WHEN ((((t1.c0)OR(t1.c67)))OR(t1.c67)) THEN (((t1.c0, t1.c0, t1.c67, t1.c0, t1.c67)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c67, t1.c0)) AND ((t1.c67, t1.c0, t1.c0, t1.c67, t1.c0))) END) ORDER BY (+ ((t1.c67 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t1.c0))  WHEN NULL THEN LAST_INSERT_ROWID() WHEN ((x'') BETWEEN (t1.c0) AND (t1.c67)) THEN -1 WHEN ((((t1.c0)OR(t1.c67)))OR(t1.c67)) THEN (((t1.c0, t1.c0, t1.c67, t1.c0, t1.c67)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c67, t1.c0)) AND ((t1.c67, t1.c0, t1.c0, t1.c67, t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY (+ ((t1.c67 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN NULL THEN LAST_INSERT_ROWID() WHEN ((x'') BETWEEN (t1.c0) AND (t1.c67)) THEN -1 WHEN ((((t1.c0)OR(t1.c67)))OR(t1.c67)) THEN (((t1.c0, t1.c0, t1.c67, t1.c0, t1.c67)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c67, t1.c0)) AND ((t1.c67, t1.c0, t1.c0, t1.c67, t1.c0))) END) ORDER BY (+ ((t1.c67 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t1.c0))  WHEN NULL THEN LAST_INSERT_ROWID() WHEN ((x'') BETWEEN (t1.c0) AND (t1.c67)) THEN -1 WHEN ((((t1.c0)OR(t1.c67)))OR(t1.c67)) THEN (((t1.c0, t1.c0, t1.c67, t1.c0, t1.c67)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c67, t1.c0)) AND ((t1.c67, t1.c0, t1.c0, t1.c67, t1.c0))) END) IS TRUE)  as count FROM t1 ORDER BY (+ ((t1.c67 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE (NOT (t1.c0))  WHEN NULL THEN LAST_INSERT_ROWID() WHEN ((x'') BETWEEN (t1.c0) AND (t1.c67)) THEN -1 WHEN ((((t1.c0)OR(t1.c67)))OR(t1.c67)) THEN (((t1.c0, t1.c0, t1.c67, t1.c0, t1.c67)) BETWEEN ((t1.c0, t1.c0, t1.c0, t1.c67, t1.c0)) AND ((t1.c67, t1.c0, t1.c0, t1.c67, t1.c0))) END) ORDER BY (+ ((t1.c67 IN ()))) ASC  NULLS FIRST;
SELECT * FROM rt72, vt0 WHERE (CAST(((rt72.c2)AND(vt0.c0)) AS INTEGER)) ORDER BY ((((rt72.c0) NOT BETWEEN (vt0.c0) AND (rt72.c0)))!=((+ (rt72.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((((rt72.c0) NOT BETWEEN (vt0.c0) AND (rt72.c0)))<>((+ (rt72.c1))))  NULLS FIRST);
SELECT * FROM rt72, vt0 WHERE (CAST(((rt72.c2)AND(vt0.c0)) AS INTEGER)) ORDER BY ((((rt72.c0) NOT BETWEEN (vt0.c0) AND (rt72.c0)))!=((+ (rt72.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2)AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((((rt72.c0) NOT BETWEEN (vt0.c0) AND (rt72.c0)))<>((+ (rt72.c1))))  NULLS FIRST);
SELECT * FROM rt72, vt0 WHERE (CAST(((rt72.c2)AND(vt0.c0)) AS INTEGER)) ORDER BY ((((rt72.c0) NOT BETWEEN (vt0.c0) AND (rt72.c0)))!=((+ (rt72.c1))))  NULLS FIRST;
SELECT * FROM rt72 INNER JOIN vt0 ON (rt72.c0 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt1 ON CASE WHEN (rt72.c2 IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END WHERE ((((rt72.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (rt72.c2))) AND (((vt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, (((((rt72.c2))>=((vt1.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (rt72.c2))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt72 INNER JOIN vt0 ON (rt72.c0 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt1 ON CASE WHEN (rt72.c2 IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, (((((rt72.c2))>=((vt1.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt72 INNER JOIN vt0 ON (rt72.c0 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt1 ON CASE WHEN (rt72.c2 IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END WHERE ((((rt72.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (rt72.c2))) AND (((vt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, (((((rt72.c2))>=((vt1.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (rt72.c2))) AND (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt72 INNER JOIN vt0 ON (rt72.c0 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt1 ON CASE WHEN (rt72.c2 IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, (((((rt72.c2))>=((vt1.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt72 INNER JOIN vt0 ON (rt72.c0 COLLATE NOCASE IN ()) LEFT OUTER JOIN vt1 ON CASE WHEN (rt72.c2 IN (vt0.c0, vt1.c0)) THEN (~ (vt1.c0)) END WHERE ((((rt72.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (rt72.c2))) AND (((vt1.c0) ISNULL)))) ORDER BY (vt0.c0 IN ()) COLLATE NOCASE  NULLS FIRST, (((((rt72.c2))>=((vt1.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(1.656497938E9))) AND (',JTz&S\r' COLLATE RTRIM)) WHERE ((((((((('-1732458497')OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c67))))))AND(CASE WHEN vt1.c0 THEN t1.c67 END)))AND('-748485564' COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1732458497')OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c67))))))AND(CASE WHEN vt1.c0 THEN t1.c67 END)))AND('-748485564' COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(1.656497938E9))) AND (',JTz&S\r' COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(1.656497938E9))) AND (',JTz&S\r' COLLATE RTRIM)) WHERE ((((((((('-1732458497')OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c67))))))AND(CASE WHEN vt1.c0 THEN t1.c67 END)))AND('-748485564' COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-1732458497')OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c67))))))AND(CASE WHEN vt1.c0 THEN t1.c67 END)))AND('-748485564' COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(1.656497938E9))) AND (',JTz&S\r' COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t1 ON ((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt1.c0)IS NOT(1.656497938E9))) AND (',JTz&S\r' COLLATE RTRIM)) WHERE ((((((((('-1732458497')OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((t1.c67))))))AND(CASE WHEN vt1.c0 THEN t1.c67 END)))AND('-748485564' COLLATE RTRIM)))AND(CAST(t1.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (0.4311284194129954) ORDER BY (vt0.c0 IN (UPPER(-924094810)));
SELECT SUM(count) FROM (SELECT ALL ((0.4311284194129954) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (UPPER(-924094810))));
SELECT ALL * FROM vt0 WHERE (0.4311284194129954) ORDER BY (vt0.c0 IN (UPPER(-924094810)));
SELECT SUM(count) FROM (SELECT ALL ((0.4311284194129954) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (UPPER(-924094810))));
SELECT ALL * FROM vt0 WHERE (0.4311284194129954) ORDER BY (vt0.c0 IN (UPPER(-924094810)));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((~ (t1.c0)) AS REAL)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((~ (t1.c0)) AS REAL)) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c0)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY t1.c0);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST((~ (t1.c0)) AS REAL)) ORDER BY t1.c0;
SELECT * FROM vt1, vt0, t1 LEFT OUTER JOIN rt72 ON (t1.c0 IN ()) WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END)GLOB(((t1.c0) BETWEEN (vt1.c0) AND (rt72.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END)GLOB(((t1.c0) BETWEEN (vt1.c0) AND (rt72.c1))))) IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN rt72 ON (t1.c0 IN ()));
SELECT * FROM vt1, vt0, t1 LEFT OUTER JOIN rt72 ON (t1.c0 IN ()) WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END)GLOB(((t1.c0) BETWEEN (vt1.c0) AND (rt72.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END)GLOB(((t1.c0) BETWEEN (vt1.c0) AND (rt72.c1))))) IS TRUE)  as count FROM vt1, vt0, t1 LEFT OUTER JOIN rt72 ON (t1.c0 IN ()));
SELECT * FROM vt1, vt0, t1 LEFT OUTER JOIN rt72 ON (t1.c0 IN ()) WHERE (((CASE WHEN rt72.c0 THEN vt1.c0 ELSE rt72.c0 END)GLOB(((t1.c0) BETWEEN (vt1.c0) AND (rt72.c1)))));
SELECT COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (NULL) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0, rt72, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (NULL) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, vt0, rt72, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (NULL) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((CASE WHEN rt72.c1 THEN vt0.c0 ELSE vt0.c0 END)LIKE(HEX(rt72.c0)))) ORDER BY (CAST(rt72.c2 AS REAL) IN ()), json_array_length(((rt72.c1)<=(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c1 THEN vt0.c0 ELSE vt0.c0 END)LIKE(HEX(rt72.c0)))) IS TRUE)  as count FROM rt72, vt0 ORDER BY (CAST(rt72.c2 AS REAL) IN ()), json_array_length(((rt72.c1)<=(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((CASE WHEN rt72.c1 THEN vt0.c0 ELSE vt0.c0 END)LIKE(HEX(rt72.c0)))) ORDER BY (CAST(rt72.c2 AS REAL) IN ()), json_array_length(((rt72.c1)<=(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt72.c1 THEN vt0.c0 ELSE vt0.c0 END)LIKE(HEX(rt72.c0)))) IS TRUE)  as count FROM rt72, vt0 ORDER BY (CAST(rt72.c2 AS REAL) IN ()), json_array_length(((rt72.c1)<=(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72, vt0 WHERE (((CASE WHEN rt72.c1 THEN vt0.c0 ELSE vt0.c0 END)LIKE(HEX(rt72.c0)))) ORDER BY (CAST(rt72.c2 AS REAL) IN ()), json_array_length(((rt72.c1)<=(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t1 WHERE (t1.c0) ORDER BY 'hEK{FZ';
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY 'hEK{FZ');
SELECT ALL * FROM vt1, vt0, t1 WHERE (t1.c0) ORDER BY 'hEK{FZ';
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt1, vt0, t1 ORDER BY 'hEK{FZ');
SELECT ALL * FROM vt1, vt0, t1 WHERE (t1.c0) ORDER BY 'hEK{FZ';
SELECT * FROM t1, rt72, vt0, vt1 INDEXED BY i89 WHERE ('' COLLATE RTRIM) ORDER BY CASE ((vt1.c0)IS(''))  WHEN ((x'')LIKE(vt0.c0)) THEN LTRIM(rt72.c2, rt72.c1) ELSE CAST(rt72.c2 AS NUMERIC) END DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)-((('612610388') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM t1, rt72, vt0, vt1 INDEXED BY i89 ORDER BY CASE ((vt1.c0)IS(''))  WHEN ((x'')LIKE(vt0.c0)) THEN LTRIM(rt72.c2, rt72.c1) ELSE CAST(rt72.c2 AS NUMERIC) END DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)-((('612610388') NOT NULL))) ASC);
SELECT * FROM t1, rt72, vt0, vt1 INDEXED BY i89 WHERE ('' COLLATE RTRIM) ORDER BY CASE ((vt1.c0)IS(''))  WHEN ((x'')LIKE(vt0.c0)) THEN LTRIM(rt72.c2, rt72.c1) ELSE CAST(rt72.c2 AS NUMERIC) END DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)-((('612610388') NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (('' COLLATE RTRIM) IS TRUE)  as count FROM t1, rt72, vt0, vt1 INDEXED BY i89 ORDER BY CASE ((vt1.c0)IS(''))  WHEN ((x'')LIKE(vt0.c0)) THEN LTRIM(rt72.c2, rt72.c1) ELSE CAST(rt72.c2 AS NUMERIC) END DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)-((('612610388') NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT NULL)) ORDER BY ((((t1.c67) NOT NULL))IS(TRIM(DISTINCT t1.c0, t1.c67)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c67) NOT NULL))IS(TRIM(DISTINCT t1.c0, t1.c67)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT NULL)) ORDER BY ((((t1.c67) NOT NULL))IS(TRIM(DISTINCT t1.c0, t1.c67)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c67) NOT NULL))IS(TRIM(DISTINCT t1.c0, t1.c67)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c0 IN ())) NOT NULL)) ORDER BY ((((t1.c67) NOT NULL))IS(TRIM(DISTINCT t1.c0, t1.c67)))  NULLS FIRST;
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON (((rt72.c1) NOT NULL) IN ((((rt72.c2))<((t1.c67))))) WHERE ((((((rt72.c0)>>(rt72.c0))))=(((rt72.c0 IN ()))))) ORDER BY (~ (((NULL)+(rt72.c0))))  NULLS FIRST, (CASE WHEN rt72.c0 THEN rt72.c1 END IN ((+ (rt72.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0)>>(rt72.c0))))==(((rt72.c0 IN ()))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON (((rt72.c1) NOT NULL) IN ((((rt72.c2))<((t1.c67))))) ORDER BY (~ (((NULL)+(rt72.c0))))  NULLS FIRST, (CASE WHEN rt72.c0 THEN rt72.c1 END IN ((+ (rt72.c2))))  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON (((rt72.c1) NOT NULL) IN ((((rt72.c2))<((t1.c67))))) WHERE ((((((rt72.c0)>>(rt72.c0))))=(((rt72.c0 IN ()))))) ORDER BY (~ (((NULL)+(rt72.c0))))  NULLS FIRST, (CASE WHEN rt72.c0 THEN rt72.c1 END IN ((+ (rt72.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0)>>(rt72.c0))))==(((rt72.c0 IN ()))))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON (((rt72.c1) NOT NULL) IN ((((rt72.c2))<((t1.c67))))) ORDER BY (~ (((NULL)+(rt72.c0))))  NULLS FIRST, (CASE WHEN rt72.c0 THEN rt72.c1 END IN ((+ (rt72.c2))))  NULLS FIRST);
SELECT ALL * FROM t1 LEFT OUTER JOIN rt72 ON (((rt72.c1) NOT NULL) IN ((((rt72.c2))<((t1.c67))))) WHERE ((((((rt72.c0)>>(rt72.c0))))=(((rt72.c0 IN ()))))) ORDER BY (~ (((NULL)+(rt72.c0))))  NULLS FIRST, (CASE WHEN rt72.c0 THEN rt72.c1 END IN ((+ (rt72.c2))))  NULLS FIRST;
SELECT ALL * FROM rt72 WHERE (((((rt72.c0)<=(rt72.c2)))|(rt72.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)<=(rt72.c2)))|(rt72.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (((((rt72.c0)<=(rt72.c2)))|(rt72.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)<=(rt72.c2)))|(rt72.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt72);
SELECT ALL * FROM rt72 WHERE (((((rt72.c0)<=(rt72.c2)))|(rt72.c2 COLLATE RTRIM)));
SELECT ALL * FROM t1, vt1, vt0 WHERE (GLOB(x'', (((t1.c67, t1.c0, vt1.c0))=((t1.c0, t1.c0, t1.c67))))) ORDER BY ((t1.c67) BETWEEN (t1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN (((t1.c67))<((vt1.c0))) THEN ((t1.c67) NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN (- (vt1.c0)) THEN ((t1.c67)=(x'')) WHEN ((t1.c67) BETWEEN (vt1.c0) AND (t1.c67)) THEN (vt0.c0 IN (vt1.c0, vt0.c0)) ELSE (t1.c67 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(x'', (((t1.c67, t1.c0, vt1.c0))==((t1.c0, t1.c0, t1.c67))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((t1.c67) BETWEEN (t1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN (((t1.c67))<((vt1.c0))) THEN ((t1.c67) NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN (- (vt1.c0)) THEN ((t1.c67)=(x'')) WHEN ((t1.c67) BETWEEN (vt1.c0) AND (t1.c67)) THEN (vt0.c0 IN (vt1.c0, vt0.c0)) ELSE (t1.c67 IN (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (GLOB(x'', (((t1.c67, t1.c0, vt1.c0))=((t1.c0, t1.c0, t1.c67))))) ORDER BY ((t1.c67) BETWEEN (t1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN (((t1.c67))<((vt1.c0))) THEN ((t1.c67) NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN (- (vt1.c0)) THEN ((t1.c67)=(x'')) WHEN ((t1.c67) BETWEEN (vt1.c0) AND (t1.c67)) THEN (vt0.c0 IN (vt1.c0, vt0.c0)) ELSE (t1.c67 IN (vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((GLOB(x'', (((t1.c67, t1.c0, vt1.c0))==((t1.c0, t1.c0, t1.c67))))) IS TRUE)  as count FROM t1, vt1, vt0 ORDER BY ((t1.c67) BETWEEN (t1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN (((t1.c67))<((vt1.c0))) THEN ((t1.c67) NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN (- (vt1.c0)) THEN ((t1.c67)=(x'')) WHEN ((t1.c67) BETWEEN (vt1.c0) AND (t1.c67)) THEN (vt0.c0 IN (vt1.c0, vt0.c0)) ELSE (t1.c67 IN (vt0.c0)) END  NULLS FIRST);
SELECT ALL * FROM t1, vt1, vt0 WHERE (GLOB(x'', (((t1.c67, t1.c0, vt1.c0))=((t1.c0, t1.c0, t1.c67))))) ORDER BY ((t1.c67) BETWEEN (t1.c0) AND (vt1.c0)) COLLATE BINARY ASC  NULLS FIRST, CASE WHEN (((t1.c67))<((vt1.c0))) THEN ((t1.c67) NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN (- (vt1.c0)) THEN ((t1.c67)=(x'')) WHEN ((t1.c67) BETWEEN (vt1.c0) AND (t1.c67)) THEN (vt0.c0 IN (vt1.c0, vt0.c0)) ELSE (t1.c67 IN (vt0.c0)) END  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0) IS TRUE)  WHEN 0xffffffffc5574093 THEN CAST(vt0.c0 AS TEXT) ELSE (+ (vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN 0xffffffffc5574093 THEN CAST(vt0.c0 AS TEXT) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0) IS TRUE)  WHEN 0xffffffffc5574093 THEN CAST(vt0.c0 AS TEXT) ELSE (+ (vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN 0xffffffffc5574093 THEN CAST(vt0.c0 AS TEXT) ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (CASE ((vt0.c0) IS TRUE)  WHEN 0xffffffffc5574093 THEN CAST(vt0.c0 AS TEXT) ELSE (+ (vt0.c0)) END) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)|(0.2593894230693441)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)|(0.2593894230693441)) IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)|(0.2593894230693441)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)|(0.2593894230693441)) IN ())) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE ((((t1.c0)|(0.2593894230693441)) IN ()));
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt1);
SELECT ALL COUNT(*) FROM t1, vt1 WHERE (vt1.c0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt0.c0)AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)AND(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((~ (CAST(vt0.c0 AS TEXT)))) ORDER BY ((((vt0.c0)AND(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))))AND(((vt1.c0)AND(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((t1.c0)IS NOT(((((((((vt0.c0)OR(t1.c67)))OR(rt72.c0)))OR(rt72.c0)))AND(t1.c0)))) FULL OUTER JOIN t1 ON (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((rt72.c1)OR(NULL))) AND (rt72.c2 COLLATE NOCASE)) LEFT OUTER JOIN rt72 ON CASE WHEN UPPER(DISTINCT t1.c67) THEN ((NULL)%(t1.c67)) WHEN ((t1.c67)IS(rt72.c1)) THEN ((rt72.c1)GLOB(t1.c0)) WHEN CASE WHEN t1.c67 THEN vt1.c0 END THEN (NULL IN ()) END WHERE ((((((((rt72.c1, t1.c0, rt72.c1)) BETWEEN ((t1.c0, x'81a7301d', rt72.c0)) AND ((rt72.c0, rt72.c2, rt72.c2))))OR(TRIM(DISTINCT rt72.c1))))OR(x''))) ORDER BY (((t1.c0)) BETWEEN (((NOT (0.8538784578270348)))) AND ((((rt72.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt72.c1, t1.c0, rt72.c1)) BETWEEN ((t1.c0, x'81a7301d', rt72.c0)) AND ((rt72.c0, rt72.c2, rt72.c2))))OR(TRIM(DISTINCT rt72.c1))))OR(x''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((t1.c0)IS NOT(((((((((vt0.c0)OR(t1.c67)))OR(rt72.c0)))OR(rt72.c0)))AND(t1.c0)))) FULL OUTER JOIN t1 ON (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((rt72.c1)OR(NULL))) AND (rt72.c2 COLLATE NOCASE)) LEFT OUTER JOIN rt72 ON CASE WHEN UPPER(DISTINCT t1.c67) THEN ((NULL)%(t1.c67)) WHEN ((t1.c67)IS(rt72.c1)) THEN ((rt72.c1)GLOB(t1.c0)) WHEN CASE WHEN t1.c67 THEN vt1.c0 END THEN (NULL IN ()) END ORDER BY (((t1.c0)) BETWEEN (((NOT (0.8538784578270348)))) AND ((((rt72.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON ((t1.c0)IS NOT(((((((((vt0.c0)OR(t1.c67)))OR(rt72.c0)))OR(rt72.c0)))AND(t1.c0)))) FULL OUTER JOIN t1 ON (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((rt72.c1)OR(NULL))) AND (rt72.c2 COLLATE NOCASE)) LEFT OUTER JOIN rt72 ON CASE WHEN UPPER(DISTINCT t1.c67) THEN ((NULL)%(t1.c67)) WHEN ((t1.c67)IS(rt72.c1)) THEN ((rt72.c1)GLOB(t1.c0)) WHEN CASE WHEN t1.c67 THEN vt1.c0 END THEN (NULL IN ()) END WHERE ((((((((rt72.c1, t1.c0, rt72.c1)) BETWEEN ((t1.c0, x'81a7301d', rt72.c0)) AND ((rt72.c0, rt72.c2, rt72.c2))))OR(TRIM(DISTINCT rt72.c1))))OR(x''))) ORDER BY (((t1.c0)) BETWEEN (((NOT (0.8538784578270348)))) AND ((((rt72.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt72.c1, t1.c0, rt72.c1)) BETWEEN ((t1.c0, x'81a7301d', rt72.c0)) AND ((rt72.c0, rt72.c2, rt72.c2))))OR(TRIM(DISTINCT rt72.c1))))OR(x''))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((t1.c0)IS NOT(((((((((vt0.c0)OR(t1.c67)))OR(rt72.c0)))OR(rt72.c0)))AND(t1.c0)))) FULL OUTER JOIN t1 ON (((((vt1.c0))>=((vt0.c0)))) BETWEEN (((rt72.c1)OR(NULL))) AND (rt72.c2 COLLATE NOCASE)) LEFT OUTER JOIN rt72 ON CASE WHEN UPPER(DISTINCT t1.c67) THEN ((NULL)%(t1.c67)) WHEN ((t1.c67)IS(rt72.c1)) THEN ((rt72.c1)GLOB(t1.c0)) WHEN CASE WHEN t1.c67 THEN vt1.c0 END THEN (NULL IN ()) END ORDER BY (((t1.c0)) BETWEEN (((NOT (0.8538784578270348)))) AND ((((rt72.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))));
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON (((t1.c67)AND(rt72.c2)) IN ()) CROSS JOIN t1 ON (((rt72.c1 IN (x'73a0', t1.c67)))GLOB((vt1.c0 IN (rt72.c1)))) WHERE (((((((((((rt72.c0)OR(t1.c67)))AND(t1.c67)))AND(rt72.c2)))AND(rt72.c1)))/(((rt72.c1)IS('')))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt72.c0)OR(t1.c67)))AND(t1.c67)))AND(rt72.c2)))AND(rt72.c1)))/(((rt72.c1)IS(''))))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt1 ON (((t1.c67)AND(rt72.c2)) IN ()) CROSS JOIN t1 ON (((rt72.c1 IN (x'73a0', t1.c67)))GLOB((vt1.c0 IN (rt72.c1)))));
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON (((t1.c67)AND(rt72.c2)) IN ()) CROSS JOIN t1 ON (((rt72.c1 IN (x'73a0', t1.c67)))GLOB((vt1.c0 IN (rt72.c1)))) WHERE (((((((((((rt72.c0)OR(t1.c67)))AND(t1.c67)))AND(rt72.c2)))AND(rt72.c1)))/(((rt72.c1)IS('')))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt72.c0)OR(t1.c67)))AND(t1.c67)))AND(rt72.c2)))AND(rt72.c1)))/(((rt72.c1)IS(''))))) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt1 ON (((t1.c67)AND(rt72.c2)) IN ()) CROSS JOIN t1 ON (((rt72.c1 IN (x'73a0', t1.c67)))GLOB((vt1.c0 IN (rt72.c1)))));
SELECT COUNT(*) FROM rt72 LEFT OUTER JOIN vt1 ON (((t1.c67)AND(rt72.c2)) IN ()) CROSS JOIN t1 ON (((rt72.c1 IN (x'73a0', t1.c67)))GLOB((vt1.c0 IN (rt72.c1)))) WHERE (((((((((((rt72.c0)OR(t1.c67)))AND(t1.c67)))AND(rt72.c2)))AND(rt72.c1)))/(((rt72.c1)IS('')))));
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (((t1.c0)&(rt72.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0)&(rt72.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (((t1.c0)&(rt72.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t1.c0)&(rt72.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt72, t1, vt0);
SELECT ALL COUNT(*) FROM rt72, t1, vt0 WHERE (((t1.c0)&(rt72.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE ((((rt72.c1)) BETWEEN ((((rt72.c0) NOT BETWEEN (rt72.c1) AND (rt72.c2)))) AND ((((rt72.c2) IS TRUE))))) ORDER BY vt0.c0 ASC, CAST(CAST('-1723164349' AS BLOB) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) BETWEEN ((((rt72.c0) NOT BETWEEN (rt72.c1) AND (rt72.c2)))) AND ((((rt72.c2) IS TRUE))))) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY vt0.c0 ASC, CAST(CAST('-1723164349' AS BLOB) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE ((((rt72.c1)) BETWEEN ((((rt72.c0) NOT BETWEEN (rt72.c1) AND (rt72.c2)))) AND ((((rt72.c2) IS TRUE))))) ORDER BY vt0.c0 ASC, CAST(CAST('-1723164349' AS BLOB) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt72.c1)) BETWEEN ((((rt72.c0) NOT BETWEEN (rt72.c1) AND (rt72.c2)))) AND ((((rt72.c2) IS TRUE))))) IS TRUE)  as count FROM vt0, rt72, t1 ORDER BY vt0.c0 ASC, CAST(CAST('-1723164349' AS BLOB) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt72, t1 WHERE ((((rt72.c1)) BETWEEN ((((rt72.c0) NOT BETWEEN (rt72.c1) AND (rt72.c2)))) AND ((((rt72.c2) IS TRUE))))) ORDER BY vt0.c0 ASC, CAST(CAST('-1723164349' AS BLOB) AS TEXT)  NULLS FIRST;
SELECT * FROM rt72 WHERE ((((rt72.c1, rt72.c0, rt72.c0)) NOT BETWEEN (((NOT (rt72.c1)), (((rt72.c2))!=((rt72.c0))), ((rt72.c0)||(NULL)))) AND ((rt72.c0, (((rt72.c1)) NOT BETWEEN ((rt72.c0)) AND ((x''))), ((rt72.c0)AND(rt72.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, rt72.c0, rt72.c0)) NOT BETWEEN (((NOT (rt72.c1)), (((rt72.c2))!=((rt72.c0))), ((rt72.c0)||(NULL)))) AND ((rt72.c0, (((rt72.c1)) NOT BETWEEN ((rt72.c0)) AND ((x''))), ((rt72.c0)AND(rt72.c0)))))) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE ((((rt72.c1, rt72.c0, rt72.c0)) NOT BETWEEN (((NOT (rt72.c1)), (((rt72.c2))!=((rt72.c0))), ((rt72.c0)||(NULL)))) AND ((rt72.c0, (((rt72.c1)) NOT BETWEEN ((rt72.c0)) AND ((x''))), ((rt72.c0)AND(rt72.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c1, rt72.c0, rt72.c0)) NOT BETWEEN (((NOT (rt72.c1)), (((rt72.c2))!=((rt72.c0))), ((rt72.c0)||(NULL)))) AND ((rt72.c0, (((rt72.c1)) NOT BETWEEN ((rt72.c0)) AND ((x''))), ((rt72.c0)AND(rt72.c0)))))) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE ((((rt72.c1, rt72.c0, rt72.c0)) NOT BETWEEN (((NOT (rt72.c1)), (((rt72.c2))!=((rt72.c0))), ((rt72.c0)||(NULL)))) AND ((rt72.c0, (((rt72.c1)) NOT BETWEEN ((rt72.c0)) AND ((x''))), ((rt72.c0)AND(rt72.c0))))));
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(((((((((t1.c67)AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c67)AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(((((((((t1.c67)AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t1.c67)AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CAST(((((((((t1.c67)AND(t1.c0)))AND(t1.c67)))OR(t1.c0)))AND(t1.c67)) AS NUMERIC));
SELECT ALL * FROM vt0, rt72, t1, vt1 WHERE (((x'')<=(((vt0.c0) IS FALSE)))) ORDER BY (rt72.c0 IN (rt72.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((x'')<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY (rt72.c0 IN (rt72.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, rt72, t1, vt1 WHERE (((x'')<=(((vt0.c0) IS FALSE)))) ORDER BY (rt72.c0 IN (rt72.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((x'')<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY (rt72.c0 IN (rt72.c0)) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0, rt72, t1, vt1 WHERE (((x'')<=(((vt0.c0) IS FALSE)))) ORDER BY (rt72.c0 IN (rt72.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((((CASE t1.c67  WHEN x'' THEN 0.4139166481011852 ELSE t1.c67 END)AND((NOT (vt0.c0)))))AND(CAST(x'' AS TEXT))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((247740189)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t1.c67  WHEN x'' THEN 0.4139166481011852 ELSE t1.c67 END)AND((NOT (vt0.c0)))))AND(CAST(x'' AS TEXT))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((247740189)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((((CASE t1.c67  WHEN x'' THEN 0.4139166481011852 ELSE t1.c67 END)AND((NOT (vt0.c0)))))AND(CAST(x'' AS TEXT))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((247740189)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t1.c67  WHEN x'' THEN 0.4139166481011852 ELSE t1.c67 END)AND((NOT (vt0.c0)))))AND(CAST(x'' AS TEXT))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((247740189)) AND ((vt1.c0)))))) IS TRUE)  as count FROM t1, vt1, vt0);
SELECT COUNT(*) FROM t1, vt1, vt0 WHERE (((((((((CASE t1.c67  WHEN x'' THEN 0.4139166481011852 ELSE t1.c67 END)AND((NOT (vt0.c0)))))AND(CAST(x'' AS TEXT))))AND(vt1.c0 COLLATE NOCASE)))OR((((vt1.c0)) NOT BETWEEN ((247740189)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM t1 WHERE (((CAST(NULL AS INTEGER))>=(((((t1.c0)AND(-1370628696)))OR(t1.c67))))) ORDER BY t1.c67 ASC, '1378762719' DESC  NULLS LAST, ((t1.c67) NOT BETWEEN (((t1.c0) IS FALSE)) AND (t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))>=(((((t1.c0)AND(-1370628696)))OR(t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY t1.c67 ASC, '1378762719' DESC  NULLS LAST, ((t1.c67) NOT BETWEEN (((t1.c0) IS FALSE)) AND (t1.c0)) DESC);
SELECT COUNT(*) FROM t1 WHERE (((CAST(NULL AS INTEGER))>=(((((t1.c0)AND(-1370628696)))OR(t1.c67))))) ORDER BY t1.c67 ASC, '1378762719' DESC  NULLS LAST, ((t1.c67) NOT BETWEEN (((t1.c0) IS FALSE)) AND (t1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER))>=(((((t1.c0)AND(-1370628696)))OR(t1.c67))))) IS TRUE)  as count FROM t1 ORDER BY t1.c67 ASC, '1378762719' DESC  NULLS LAST, ((t1.c67) NOT BETWEEN (((t1.c0) IS FALSE)) AND (t1.c0)) DESC);
SELECT COUNT(*) FROM t1 WHERE (((CAST(NULL AS INTEGER))>=(((((t1.c0)AND(-1370628696)))OR(t1.c67))))) ORDER BY t1.c67 ASC, '1378762719' DESC  NULLS LAST, ((t1.c67) NOT BETWEEN (((t1.c0) IS FALSE)) AND (t1.c0)) DESC;
SELECT COUNT(*) FROM vt1, t1 WHERE (COALESCE(((t1.c0)||(t1.c0)), t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((t1.c0)||(t1.c0)), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (COALESCE(((t1.c0)||(t1.c0)), t1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((t1.c0)||(t1.c0)), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, t1);
SELECT COUNT(*) FROM vt1, t1 WHERE (COALESCE(((t1.c0)||(t1.c0)), t1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' WHEN ((((x'9679fd77')AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) ELSE (((vt0.c0, vt0.c0, '200586999', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 'H')) AND ((vt0.c0, vt0.c0, 0x2483b154, vt0.c0, vt0.c0))) END) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' WHEN ((((x'9679fd77')AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) ELSE (((vt0.c0, vt0.c0, '200586999', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 'H')) AND ((vt0.c0, vt0.c0, 0X2483b154, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' WHEN ((((x'9679fd77')AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) ELSE (((vt0.c0, vt0.c0, '200586999', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 'H')) AND ((vt0.c0, vt0.c0, 0x2483b154, vt0.c0, vt0.c0))) END) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' WHEN ((((x'9679fd77')AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) ELSE (((vt0.c0, vt0.c0, '200586999', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 'H')) AND ((vt0.c0, vt0.c0, 0X2483b154, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c0)) THEN x'' WHEN ((((x'9679fd77')AND(vt0.c0)))OR(vt0.c0)) THEN vt0.c0 WHEN QUOTE(vt0.c0) THEN ((vt0.c0) NOT NULL) ELSE (((vt0.c0, vt0.c0, '200586999', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, 'H')) AND ((vt0.c0, vt0.c0, 0x2483b154, vt0.c0, vt0.c0))) END) ORDER BY (((vt0.c0))>=((vt0.c0))) COLLATE BINARY;
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST((((t1.c67)) BETWEEN ((rt72.c1)) AND ((t1.c67))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY CAST((((t1.c67)) BETWEEN ((rt72.c1)) AND ((t1.c67))) AS BLOB) DESC);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST((((t1.c67)) BETWEEN ((rt72.c1)) AND ((t1.c67))) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c0 AS REAL)))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY CAST((((t1.c67)) BETWEEN ((rt72.c1)) AND ((t1.c67))) AS BLOB) DESC);
SELECT COUNT(*) FROM t1, vt1, rt72, vt0 WHERE ((- (CAST(t1.c0 AS REAL)))) ORDER BY CAST((((t1.c67)) BETWEEN ((rt72.c1)) AND ((t1.c67))) AS BLOB) DESC;
SELECT * FROM vt0, rt72 WHERE (TRIM(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT x'')) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (TRIM(DISTINCT x''));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT x'')) IS TRUE)  as count FROM vt0, rt72);
SELECT * FROM vt0, rt72 WHERE (TRIM(DISTINCT x''));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) NOT NULL))AND((t1.c0 IN (t1.c0, t1.c67)))))AND(t1.c67 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOT NULL))AND((t1.c0 IN (t1.c0, t1.c67)))))AND(t1.c67 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) NOT NULL))AND((t1.c0 IN (t1.c0, t1.c67)))))AND(t1.c67 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((t1.c0) NOT NULL))AND((t1.c0 IN (t1.c0, t1.c67)))))AND(t1.c67 COLLATE RTRIM))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((t1.c0) NOT NULL))AND((t1.c0 IN (t1.c0, t1.c67)))))AND(t1.c67 COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0, t1 INNER JOIN rt72 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt1.c0)OR(rt72.c0)))OR(rt72.c0)) WHEN (NOT (t1.c67)) THEN ((t1.c67) NOT BETWEEN (t1.c67) AND (vt0.c0)) WHEN (NOT (t1.c67)) THEN (((t1.c0, rt72.c0, '*&', rt72.c0, rt72.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, NULL, rt72.c0)) AND ((rt72.c2, t1.c67, vt0.c0, t1.c0, t1.c0))) WHEN ((t1.c67) NOT NULL) THEN rt72.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN t1.c0 END WHERE ((((((rt72.c0, rt72.c0, t1.c67)) NOT BETWEEN ((vt1.c0, vt0.c0, rt72.c1)) AND ((rt72.c2, '-963678860', rt72.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0, rt72.c0, t1.c67)) NOT BETWEEN ((vt1.c0, vt0.c0, rt72.c1)) AND ((rt72.c2, '-963678860', rt72.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t1 INNER JOIN rt72 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt1.c0)OR(rt72.c0)))OR(rt72.c0)) WHEN (NOT (t1.c67)) THEN ((t1.c67) NOT BETWEEN (t1.c67) AND (vt0.c0)) WHEN (NOT (t1.c67)) THEN (((t1.c0, rt72.c0, '*&', rt72.c0, rt72.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, NULL, rt72.c0)) AND ((rt72.c2, t1.c67, vt0.c0, t1.c0, t1.c0))) WHEN ((t1.c67) NOT NULL) THEN rt72.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN t1.c0 END);
SELECT ALL * FROM vt1, vt0, t1 INNER JOIN rt72 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt1.c0)OR(rt72.c0)))OR(rt72.c0)) WHEN (NOT (t1.c67)) THEN ((t1.c67) NOT BETWEEN (t1.c67) AND (vt0.c0)) WHEN (NOT (t1.c67)) THEN (((t1.c0, rt72.c0, '*&', rt72.c0, rt72.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, NULL, rt72.c0)) AND ((rt72.c2, t1.c67, vt0.c0, t1.c0, t1.c0))) WHEN ((t1.c67) NOT NULL) THEN rt72.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN t1.c0 END WHERE ((((((rt72.c0, rt72.c0, t1.c67)) NOT BETWEEN ((vt1.c0, vt0.c0, rt72.c1)) AND ((rt72.c2, '-963678860', rt72.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c0, rt72.c0, t1.c67)) NOT BETWEEN ((vt1.c0, vt0.c0, rt72.c1)) AND ((rt72.c2, '-963678860', rt72.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, t1 INNER JOIN rt72 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt1.c0)OR(rt72.c0)))OR(rt72.c0)) WHEN (NOT (t1.c67)) THEN ((t1.c67) NOT BETWEEN (t1.c67) AND (vt0.c0)) WHEN (NOT (t1.c67)) THEN (((t1.c0, rt72.c0, '*&', rt72.c0, rt72.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, NULL, rt72.c0)) AND ((rt72.c2, t1.c67, vt0.c0, t1.c0, t1.c0))) WHEN ((t1.c67) NOT NULL) THEN rt72.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN t1.c0 END);
SELECT ALL * FROM vt1, vt0, t1 INNER JOIN rt72 ON CASE WHEN ((vt0.c0) NOTNULL) THEN ((((vt1.c0)OR(rt72.c0)))OR(rt72.c0)) WHEN (NOT (t1.c67)) THEN ((t1.c67) NOT BETWEEN (t1.c67) AND (vt0.c0)) WHEN (NOT (t1.c67)) THEN (((t1.c0, rt72.c0, '*&', rt72.c0, rt72.c0)) BETWEEN ((t1.c0, t1.c0, t1.c0, NULL, rt72.c0)) AND ((rt72.c2, t1.c67, vt0.c0, t1.c0, t1.c0))) WHEN ((t1.c67) NOT NULL) THEN rt72.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS INTEGER) THEN t1.c0 END WHERE ((((((rt72.c0, rt72.c0, t1.c67)) NOT BETWEEN ((vt1.c0, vt0.c0, rt72.c1)) AND ((rt72.c2, '-963678860', rt72.c0)))) NOT NULL));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)/(NULL)), CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)/(NULL)), CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)/(NULL)), CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0)/(NULL)), CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0)/(NULL)), CAST(vt0.c0 AS BLOB))));
SELECT * FROM rt72 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((rt72.c0)<=(rt72.c1)) COLLATE BINARY) ORDER BY (((((((((- (rt72.c0)))OR(rt72.c0 COLLATE BINARY)))AND((((vt0.c0))==((rt72.c2))))))AND(rt72.c1 COLLATE RTRIM)))AND(CAST(rt72.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0)<=(rt72.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt72 NOT INDEXED LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY (((((((((- (rt72.c0)))OR(rt72.c0 COLLATE BINARY)))AND((((vt0.c0))=((rt72.c2))))))AND(rt72.c1 COLLATE RTRIM)))AND(CAST(rt72.c1 AS BLOB))));
SELECT * FROM rt72 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((rt72.c0)<=(rt72.c1)) COLLATE BINARY) ORDER BY (((((((((- (rt72.c0)))OR(rt72.c0 COLLATE BINARY)))AND((((vt0.c0))==((rt72.c2))))))AND(rt72.c1 COLLATE RTRIM)))AND(CAST(rt72.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0)<=(rt72.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt72 NOT INDEXED LEFT OUTER JOIN vt0 ON vt0.c0 ORDER BY (((((((((- (rt72.c0)))OR(rt72.c0 COLLATE BINARY)))AND((((vt0.c0))=((rt72.c2))))))AND(rt72.c1 COLLATE RTRIM)))AND(CAST(rt72.c1 AS BLOB))));
SELECT * FROM rt72 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((rt72.c0)<=(rt72.c1)) COLLATE BINARY) ORDER BY (((((((((- (rt72.c0)))OR(rt72.c0 COLLATE BINARY)))AND((((vt0.c0))==((rt72.c2))))))AND(rt72.c1 COLLATE RTRIM)))AND(CAST(rt72.c1 AS BLOB)));
SELECT ALL COUNT(*) FROM rt72 WHERE (((((((((((rt72.c0)OR(x'4f17')))AND(rt72.c0)))AND(rt72.c2)))AND(NULL)))<>(rt72.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt72.c0)OR(x'4f17')))AND(rt72.c0)))AND(rt72.c2)))AND(NULL)))!=(rt72.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (((((((((((rt72.c0)OR(x'4f17')))AND(rt72.c0)))AND(rt72.c2)))AND(NULL)))<>(rt72.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt72.c0)OR(x'4f17')))AND(rt72.c0)))AND(rt72.c2)))AND(NULL)))!=(rt72.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt72);
SELECT ALL COUNT(*) FROM rt72 WHERE (((((((((((rt72.c0)OR(x'4f17')))AND(rt72.c0)))AND(rt72.c2)))AND(NULL)))<>(rt72.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c67))) NOT BETWEEN (vt1.c0) AND (((((t1.c67)OR(t1.c67)))OR(t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c67))) NOT BETWEEN (vt1.c0) AND (((((t1.c67)OR(t1.c67)))OR(t1.c67))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c67))) NOT BETWEEN (vt1.c0) AND (((((t1.c67)OR(t1.c67)))OR(t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c67))) NOT BETWEEN (vt1.c0) AND (((((t1.c67)OR(t1.c67)))OR(t1.c67))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))OR(CAST(vt1.c0 AS TEXT))) WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c67))) NOT BETWEEN (vt1.c0) AND (((((t1.c67)OR(t1.c67)))OR(t1.c67)))));
SELECT COUNT(*) FROM vt1, rt72 CROSS JOIN vt0 ON ((((t1.c67) IS TRUE)) ISNULL) CROSS JOIN t1 ON PRINTF(rt72.c1, t1.c0, rt72.c1) COLLATE RTRIM WHERE ((((CASE WHEN t1.c0 THEN rt72.c1 END))>((CAST(t1.c67 AS REAL))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) ELSE ((t1.c67) BETWEEN ('0.00845717960537773') AND (rt72.c2)) END  NULLS FIRST, ((CASE WHEN rt72.c1 THEN rt72.c1 ELSE t1.c67 END) BETWEEN (((rt72.c2) BETWEEN (t1.c67) AND (vt0.c0))) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (rt72.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN rt72.c1 END))>((CAST(t1.c67 AS REAL))))) IS TRUE)  as count FROM vt1, rt72 CROSS JOIN vt0 ON ((((t1.c67) IS TRUE)) ISNULL) CROSS JOIN t1 ON PRINTF(rt72.c1, t1.c0, rt72.c1) COLLATE RTRIM ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) ELSE ((t1.c67) BETWEEN ('0.00845717960537773') AND (rt72.c2)) END  NULLS FIRST, ((CASE WHEN rt72.c1 THEN rt72.c1 ELSE t1.c67 END) BETWEEN (((rt72.c2) BETWEEN (t1.c67) AND (vt0.c0))) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (rt72.c0)))));
SELECT COUNT(*) FROM vt1, rt72 CROSS JOIN vt0 ON ((((t1.c67) IS TRUE)) ISNULL) CROSS JOIN t1 ON PRINTF(rt72.c1, t1.c0, rt72.c1) COLLATE RTRIM WHERE ((((CASE WHEN t1.c0 THEN rt72.c1 END))>((CAST(t1.c67 AS REAL))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) ELSE ((t1.c67) BETWEEN ('0.00845717960537773') AND (rt72.c2)) END  NULLS FIRST, ((CASE WHEN rt72.c1 THEN rt72.c1 ELSE t1.c67 END) BETWEEN (((rt72.c2) BETWEEN (t1.c67) AND (vt0.c0))) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (rt72.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c0 THEN rt72.c1 END))>((CAST(t1.c67 AS REAL))))) IS TRUE)  as count FROM vt1, rt72 CROSS JOIN vt0 ON ((((t1.c67) IS TRUE)) ISNULL) CROSS JOIN t1 ON PRINTF(rt72.c1, t1.c0, rt72.c1) COLLATE RTRIM ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) ELSE ((t1.c67) BETWEEN ('0.00845717960537773') AND (rt72.c2)) END  NULLS FIRST, ((CASE WHEN rt72.c1 THEN rt72.c1 ELSE t1.c67 END) BETWEEN (((rt72.c2) BETWEEN (t1.c67) AND (vt0.c0))) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (rt72.c0)))));
SELECT COUNT(*) FROM vt1, rt72 CROSS JOIN vt0 ON ((((t1.c67) IS TRUE)) ISNULL) CROSS JOIN t1 ON PRINTF(rt72.c1, t1.c0, rt72.c1) COLLATE RTRIM WHERE ((((CASE WHEN t1.c0 THEN rt72.c1 END))>((CAST(t1.c67 AS REAL))))) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN ((rt72.c0) NOT BETWEEN (vt0.c0) AND (t1.c0)) ELSE ((t1.c67) BETWEEN ('0.00845717960537773') AND (rt72.c2)) END  NULLS FIRST, ((CASE WHEN rt72.c1 THEN rt72.c1 ELSE t1.c67 END) BETWEEN (((rt72.c2) BETWEEN (t1.c67) AND (vt0.c0))) AND (((rt72.c0) NOT BETWEEN (t1.c67) AND (rt72.c0))));
SELECT ALL COUNT(*) FROM rt72 WHERE ((+ ((rt72.c0 IN ())))) ORDER BY ((rt72.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt72.c0 IN ())))) IS TRUE)  as count FROM rt72 ORDER BY ((rt72.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt72 WHERE ((+ ((rt72.c0 IN ())))) ORDER BY ((rt72.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((+ ((rt72.c0 IN ())))) IS TRUE)  as count FROM rt72 ORDER BY ((rt72.c2) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt72 WHERE ((+ ((rt72.c0 IN ())))) ORDER BY ((rt72.c2) NOT NULL) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((- (vt0.c0)), (((vt0.c0, '-1596882345', vt0.c0, vt0.c0, x'c30d')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((- (vt0.c0)), (((vt0.c0, '-1596882345', vt0.c0, vt0.c0, x'c30d')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((- (vt0.c0)), (((vt0.c0, '-1596882345', vt0.c0, vt0.c0, x'c30d')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ((- (vt0.c0)), (((vt0.c0, '-1596882345', vt0.c0, vt0.c0, x'c30d')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ((- (vt0.c0)), (((vt0.c0, '-1596882345', vt0.c0, vt0.c0, x'c30d')) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM t1 CROSS JOIN vt1 ON 0.3824799039879776 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0)<=(rt72.c2)))) RIGHT OUTER JOIN rt72 ON (NOT ((+ (t1.c0)))) WHERE ((CAST(rt72.c2 AS REAL) IN (CAST(rt72.c1 AS REAL), ((vt1.c0)IS(rt72.c1)), ((((0.15320348834523256)AND(0.11717087636451484)))AND(vt1.c0))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN ((rt72.c1)<>(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt72.c2 AS REAL) IN (CAST(rt72.c1 AS REAL), ((vt1.c0)IS(rt72.c1)), ((((0.15320348834523256)AND(0.11717087636451484)))AND(vt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON 0.3824799039879776 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0)<=(rt72.c2)))) RIGHT OUTER JOIN rt72 ON (NOT ((+ (t1.c0)))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN ((rt72.c1)<>(t1.c0)) END DESC);
SELECT * FROM t1 CROSS JOIN vt1 ON 0.3824799039879776 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0)<=(rt72.c2)))) RIGHT OUTER JOIN rt72 ON (NOT ((+ (t1.c0)))) WHERE ((CAST(rt72.c2 AS REAL) IN (CAST(rt72.c1 AS REAL), ((vt1.c0)IS(rt72.c1)), ((((0.15320348834523256)AND(0.11717087636451484)))AND(vt1.c0))))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN ((rt72.c1)<>(t1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt72.c2 AS REAL) IN (CAST(rt72.c1 AS REAL), ((vt1.c0)IS(rt72.c1)), ((((0.15320348834523256)AND(0.11717087636451484)))AND(vt1.c0))))) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON 0.3824799039879776 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (NOT (((vt0.c0)<=(rt72.c2)))) RIGHT OUTER JOIN rt72 ON (NOT ((+ (t1.c0)))) ORDER BY CASE WHEN (t1.c0 IN ()) THEN ((rt72.c1)<>(t1.c0)) END DESC);
SELECT COUNT(*) FROM vt1, rt72 WHERE (CASE WHEN ((rt72.c2) NOT BETWEEN (rt72.c0) AND (vt1.c0)) THEN (rt72.c0 IN ()) WHEN CAST(rt72.c2 AS INTEGER) THEN CASE WHEN rt72.c0 THEN NULL END WHEN CASE WHEN 0.608772752398284 THEN rt72.c2 ELSE rt72.c1 END THEN rt72.c1 ELSE ((((((((rt72.c0)AND(rt72.c1)))AND(rt72.c2)))OR(vt1.c0)))AND(rt72.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt72.c2) NOT BETWEEN (rt72.c0) AND (vt1.c0)) THEN (rt72.c0 IN ()) WHEN CAST(rt72.c2 AS INTEGER) THEN CASE WHEN rt72.c0 THEN NULL END WHEN CASE WHEN 0.608772752398284 THEN rt72.c2 ELSE rt72.c1 END THEN rt72.c1 ELSE ((((((((rt72.c0)AND(rt72.c1)))AND(rt72.c2)))OR(vt1.c0)))AND(rt72.c1)) END) IS TRUE)  as count FROM vt1, rt72);
SELECT COUNT(*) FROM vt1, rt72 WHERE (CASE WHEN ((rt72.c2) NOT BETWEEN (rt72.c0) AND (vt1.c0)) THEN (rt72.c0 IN ()) WHEN CAST(rt72.c2 AS INTEGER) THEN CASE WHEN rt72.c0 THEN NULL END WHEN CASE WHEN 0.608772752398284 THEN rt72.c2 ELSE rt72.c1 END THEN rt72.c1 ELSE ((((((((rt72.c0)AND(rt72.c1)))AND(rt72.c2)))OR(vt1.c0)))AND(rt72.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt72.c2) NOT BETWEEN (rt72.c0) AND (vt1.c0)) THEN (rt72.c0 IN ()) WHEN CAST(rt72.c2 AS INTEGER) THEN CASE WHEN rt72.c0 THEN NULL END WHEN CASE WHEN 0.608772752398284 THEN rt72.c2 ELSE rt72.c1 END THEN rt72.c1 ELSE ((((((((rt72.c0)AND(rt72.c1)))AND(rt72.c2)))OR(vt1.c0)))AND(rt72.c1)) END) IS TRUE)  as count FROM vt1, rt72);
SELECT COUNT(*) FROM vt1, rt72 WHERE (CASE WHEN ((rt72.c2) NOT BETWEEN (rt72.c0) AND (vt1.c0)) THEN (rt72.c0 IN ()) WHEN CAST(rt72.c2 AS INTEGER) THEN CASE WHEN rt72.c0 THEN NULL END WHEN CASE WHEN 0.608772752398284 THEN rt72.c2 ELSE rt72.c1 END THEN rt72.c1 ELSE ((((((((rt72.c0)AND(rt72.c1)))AND(rt72.c2)))OR(vt1.c0)))AND(rt72.c1)) END);
SELECT * FROM t1, rt72 WHERE (0.7328354076575807) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((0.7328354076575807) IS TRUE)  as count FROM t1, rt72 ORDER BY t1.c0);
SELECT * FROM t1, rt72 WHERE (0.7328354076575807) ORDER BY t1.c0;
SELECT SUM(count) FROM (SELECT ((0.7328354076575807) IS TRUE)  as count FROM t1, rt72 ORDER BY t1.c0);
SELECT * FROM t1, rt72 WHERE (0.7328354076575807) ORDER BY t1.c0;
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY TIME('u6', ((('<ID&X}'))>((vt1.c0))), (('nF') NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY TIME('u6', ((('<ID&X}'))>((vt1.c0))), (('nF') NOT NULL)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY TIME('u6', ((('<ID&X}'))>((vt1.c0))), (('nF') NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY TIME('u6', ((('<ID&X}'))>((vt1.c0))), (('nF') NOT NULL)) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 END IN ())) ORDER BY TIME('u6', ((('<ID&X}'))>((vt1.c0))), (('nF') NOT NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE (rt72.c2 IN ()) END INNER JOIN vt0 ON x'' FULL OUTER JOIN rt72 ON (((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)) IN ()) WHERE (((((vt1.c0)<=(t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE (rt72.c2 IN ()) END INNER JOIN vt0 ON x'' FULL OUTER JOIN rt72 ON (((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)) IN ()));
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE (rt72.c2 IN ()) END INNER JOIN vt0 ON x'' FULL OUTER JOIN rt72 ON (((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)) IN ()) WHERE (((((vt1.c0)<=(t1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(t1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN CAST(t1.c0 AS NUMERIC) ELSE (rt72.c2 IN ()) END INNER JOIN vt0 ON x'' FULL OUTER JOIN rt72 ON (((((vt1.c0)AND(vt1.c0)))AND(rt72.c1)) IN ()));
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM rt72 LEFT OUTER JOIN vt0 ON rt72.c0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((rt72.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt0 ON rt72.c0 ORDER BY ((rt72.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72 LEFT OUTER JOIN vt0 ON rt72.c0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((rt72.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt72 LEFT OUTER JOIN vt0 ON rt72.c0 ORDER BY ((rt72.c0) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt72 LEFT OUTER JOIN vt0 ON rt72.c0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS INTEGER)) ORDER BY ((rt72.c0) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt72, t1, vt1 WHERE ((CASE rt72.c1  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN rt72.c0 THEN t1.c67 END IN ())) ORDER BY ((((NULL)AND(rt72.c1 COLLATE RTRIM)))OR(NULL COLLATE NOCASE)) DESC, ((((((((((vt1.c0)|(t1.c0)))AND(rt72.c0)))OR(CAST(rt72.c2 AS REAL))))AND(CASE vt0.c0  WHEN rt72.c0 THEN vt1.c0 ELSE t1.c67 END)))AND(GLOB(x'', rt72.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt72.c1  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN rt72.c0 THEN t1.c67 END IN ())) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY ((((NULL)AND(rt72.c1 COLLATE RTRIM)))OR(NULL COLLATE NOCASE)) DESC, ((((((((((vt1.c0)|(t1.c0)))AND(rt72.c0)))OR(CAST(rt72.c2 AS REAL))))AND(CASE vt0.c0  WHEN rt72.c0 THEN vt1.c0 ELSE t1.c67 END)))AND(GLOB(x'', rt72.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt72, t1, vt1 WHERE ((CASE rt72.c1  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN rt72.c0 THEN t1.c67 END IN ())) ORDER BY ((((NULL)AND(rt72.c1 COLLATE RTRIM)))OR(NULL COLLATE NOCASE)) DESC, ((((((((((vt1.c0)|(t1.c0)))AND(rt72.c0)))OR(CAST(rt72.c2 AS REAL))))AND(CASE vt0.c0  WHEN rt72.c0 THEN vt1.c0 ELSE t1.c67 END)))AND(GLOB(x'', rt72.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt72.c1  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN rt72.c0 THEN t1.c67 END IN ())) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY ((((NULL)AND(rt72.c1 COLLATE RTRIM)))OR(NULL COLLATE NOCASE)) DESC, ((((((((((vt1.c0)|(t1.c0)))AND(rt72.c0)))OR(CAST(rt72.c2 AS REAL))))AND(CASE vt0.c0  WHEN rt72.c0 THEN vt1.c0 ELSE t1.c67 END)))AND(GLOB(x'', rt72.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt72, t1, vt1 WHERE ((CASE rt72.c1  WHEN vt0.c0 THEN rt72.c2 WHEN rt72.c2 THEN NULL WHEN rt72.c0 THEN t1.c67 END IN ())) ORDER BY ((((NULL)AND(rt72.c1 COLLATE RTRIM)))OR(NULL COLLATE NOCASE)) DESC, ((((((((((vt1.c0)|(t1.c0)))AND(rt72.c0)))OR(CAST(rt72.c2 AS REAL))))AND(CASE vt0.c0  WHEN rt72.c0 THEN vt1.c0 ELSE t1.c67 END)))AND(GLOB(x'', rt72.c2)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ('0.4736113845237697') ORDER BY vt1.c0 ASC, (vt1.c0 COLLATE RTRIM IN (-340030349)), ((((((((((((((vt1.c0) IS TRUE))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(CAST('0.3668136591852046' AS INTEGER))))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.4736113845237697') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (vt1.c0 COLLATE RTRIM IN (-340030349)), ((((((((((((((vt1.c0) IS TRUE))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(CAST('0.3668136591852046' AS INTEGER))))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ('0.4736113845237697') ORDER BY vt1.c0 ASC, (vt1.c0 COLLATE RTRIM IN (-340030349)), ((((((((((((((vt1.c0) IS TRUE))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(CAST('0.3668136591852046' AS INTEGER))))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.4736113845237697') IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC, (vt1.c0 COLLATE RTRIM IN (-340030349)), ((((((((((((((vt1.c0) IS TRUE))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((vt1.c0 IN ()))))AND(CAST('0.3668136591852046' AS INTEGER))))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt72, vt0, vt1, t1 WHERE ((((+ (vt0.c0))) BETWEEN (CASE rt72.c2  WHEN vt0.c0 THEN t1.c67 END) AND ((((rt72.c2))>=((rt72.c1)))))) ORDER BY (((+ (t1.c0))) NOT NULL)  NULLS LAST, ((rt72.c0)>>(((((((((rt72.c1)AND(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (CASE rt72.c2  WHEN vt0.c0 THEN t1.c67 END) AND ((((rt72.c2))>=((rt72.c1)))))) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((+ (t1.c0))) NOT NULL)  NULLS LAST, ((rt72.c0)>>(((((((((rt72.c1)AND(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c0)))) DESC);
SELECT COUNT(*) FROM rt72, vt0, vt1, t1 WHERE ((((+ (vt0.c0))) BETWEEN (CASE rt72.c2  WHEN vt0.c0 THEN t1.c67 END) AND ((((rt72.c2))>=((rt72.c1)))))) ORDER BY (((+ (t1.c0))) NOT NULL)  NULLS LAST, ((rt72.c0)>>(((((((((rt72.c1)AND(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) BETWEEN (CASE rt72.c2  WHEN vt0.c0 THEN t1.c67 END) AND ((((rt72.c2))>=((rt72.c1)))))) IS TRUE)  as count FROM rt72, vt0, vt1, t1 ORDER BY (((+ (t1.c0))) NOT NULL)  NULLS LAST, ((rt72.c0)>>(((((((((rt72.c1)AND(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c0)))) DESC);
SELECT COUNT(*) FROM rt72, vt0, vt1, t1 WHERE ((((+ (vt0.c0))) BETWEEN (CASE rt72.c2  WHEN vt0.c0 THEN t1.c67 END) AND ((((rt72.c2))>=((rt72.c1)))))) ORDER BY (((+ (t1.c0))) NOT NULL)  NULLS LAST, ((rt72.c0)>>(((((((((rt72.c1)AND(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))OR(rt72.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY QUOTE(((rt72.c1) IS TRUE))  NULLS FIRST, rt72.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt72, vt0, vt1 ORDER BY QUOTE(((rt72.c1) IS TRUE))  NULLS FIRST, rt72.c1 DESC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY QUOTE(((rt72.c1) IS TRUE))  NULLS FIRST, rt72.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt72, vt0, vt1 ORDER BY QUOTE(((rt72.c1) IS TRUE))  NULLS FIRST, rt72.c1 DESC);
SELECT ALL COUNT(*) FROM rt72, vt0, vt1 WHERE ((vt1.c0 IN ()) COLLATE BINARY) ORDER BY QUOTE(((rt72.c1) IS TRUE))  NULLS FIRST, rt72.c1 DESC;
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((rt72.c0 COLLATE RTRIM)|(rt72.c1))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0 COLLATE RTRIM)|(rt72.c1))) IS TRUE)  as count FROM vt0, vt1, rt72 NATURAL JOIN t1 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((rt72.c0 COLLATE RTRIM)|(rt72.c1))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c0 COLLATE RTRIM)|(rt72.c1))) IS TRUE)  as count FROM vt0, vt1, rt72 NATURAL JOIN t1 ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt72 NATURAL JOIN t1 WHERE (((rt72.c0 COLLATE RTRIM)|(rt72.c1))) ORDER BY '' DESC  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL)) ORDER BY (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c0)-(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)-(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c0)-(t1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)-(t1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t1);
SELECT ALL COUNT(*) FROM vt1, t1 WHERE (CAST(((vt1.c0)-(t1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c67)) NOT BETWEEN ((((t1.c67)>>(NULL)))) AND ((((vt0.c0)OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)) NOT BETWEEN ((((t1.c67)>>(NULL)))) AND ((((vt0.c0)OR(NULL)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c67)) NOT BETWEEN ((((t1.c67)>>(NULL)))) AND ((((vt0.c0)OR(NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c67)) NOT BETWEEN ((((t1.c67)>>(NULL)))) AND ((((vt0.c0)OR(NULL)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE ((((t1.c67)) NOT BETWEEN ((((t1.c67)>>(NULL)))) AND ((((vt0.c0)OR(NULL))))));
SELECT ALL * FROM rt72 RIGHT OUTER JOIN t1 ON ((LIKE(t1.c0, rt72.c0))|(((vt0.c0) NOTNULL))) INNER JOIN vt1 ON ((vt0.c0)IS(t1.c67 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM WHERE (((((0.9905320794376036) IS TRUE)) BETWEEN (CASE rt72.c1  WHEN t1.c67 THEN vt0.c0 END) AND (((rt72.c2)GLOB(rt72.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.9905320794376036) IS TRUE)) BETWEEN (CASE rt72.c1  WHEN t1.c67 THEN vt0.c0 END) AND (((rt72.c2)GLOB(rt72.c2))))) IS TRUE)  as count FROM rt72 RIGHT OUTER JOIN t1 ON ((LIKE(t1.c0, rt72.c0))|(((vt0.c0) NOTNULL))) INNER JOIN vt1 ON ((vt0.c0)IS(t1.c67 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL * FROM rt72 RIGHT OUTER JOIN t1 ON ((LIKE(t1.c0, rt72.c0))|(((vt0.c0) NOTNULL))) INNER JOIN vt1 ON ((vt0.c0)IS(t1.c67 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM WHERE (((((0.9905320794376036) IS TRUE)) BETWEEN (CASE rt72.c1  WHEN t1.c67 THEN vt0.c0 END) AND (((rt72.c2)GLOB(rt72.c2)))));
SELECT SUM(count) FROM (SELECT ((((((0.9905320794376036) IS TRUE)) BETWEEN (CASE rt72.c1  WHEN t1.c67 THEN vt0.c0 END) AND (((rt72.c2)GLOB(rt72.c2))))) IS TRUE)  as count FROM rt72 RIGHT OUTER JOIN t1 ON ((LIKE(t1.c0, rt72.c0))|(((vt0.c0) NOTNULL))) INNER JOIN vt1 ON ((vt0.c0)IS(t1.c67 COLLATE BINARY)) RIGHT OUTER JOIN vt0 ON ((vt1.c0) NOT NULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt72 ON CASE WHEN ((rt72.c0) ISNULL) THEN ((rt72.c2)>(NULL)) WHEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c2)) THEN ((((((((rt72.c1)AND(t1.c0)))AND(t1.c0)))OR(rt72.c2)))OR(t1.c67)) WHEN ((rt72.c1) IS TRUE) THEN rt72.c2 WHEN vt0.c0 THEN (- (rt72.c2)) WHEN ((NULL) BETWEEN (rt72.c2) AND (vt0.c0)) THEN ((((((((t1.c67)AND(rt72.c1)))AND(rt72.c1)))AND(t1.c67)))OR(rt72.c0)) ELSE (rt72.c0 IN (t1.c67)) END WHERE (((LIKELY(DISTINCT rt72.c2)) IS FALSE)) ORDER BY (((((t1.c0))>=((vt0.c0)))) BETWEEN (((((((((rt72.c2)OR(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))AND(x''))) AND (((t1.c67)<(rt72.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt72.c2)) IS FALSE)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt72 ON CASE WHEN ((rt72.c0) ISNULL) THEN ((rt72.c2)>(NULL)) WHEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c2)) THEN ((((((((rt72.c1)AND(t1.c0)))AND(t1.c0)))OR(rt72.c2)))OR(t1.c67)) WHEN ((rt72.c1) IS TRUE) THEN rt72.c2 WHEN vt0.c0 THEN (- (rt72.c2)) WHEN ((NULL) BETWEEN (rt72.c2) AND (vt0.c0)) THEN ((((((((t1.c67)AND(rt72.c1)))AND(rt72.c1)))AND(t1.c67)))OR(rt72.c0)) ELSE (rt72.c0 IN (t1.c67)) END ORDER BY (((((t1.c0))>=((vt0.c0)))) BETWEEN (((((((((rt72.c2)OR(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))AND(x''))) AND (((t1.c67)<(rt72.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt72 ON CASE WHEN ((rt72.c0) ISNULL) THEN ((rt72.c2)>(NULL)) WHEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c2)) THEN ((((((((rt72.c1)AND(t1.c0)))AND(t1.c0)))OR(rt72.c2)))OR(t1.c67)) WHEN ((rt72.c1) IS TRUE) THEN rt72.c2 WHEN vt0.c0 THEN (- (rt72.c2)) WHEN ((NULL) BETWEEN (rt72.c2) AND (vt0.c0)) THEN ((((((((t1.c67)AND(rt72.c1)))AND(rt72.c1)))AND(t1.c67)))OR(rt72.c0)) ELSE (rt72.c0 IN (t1.c67)) END WHERE (((LIKELY(DISTINCT rt72.c2)) IS FALSE)) ORDER BY (((((t1.c0))>=((vt0.c0)))) BETWEEN (((((((((rt72.c2)OR(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))AND(x''))) AND (((t1.c67)<(rt72.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt72.c2)) IS FALSE)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt72 ON CASE WHEN ((rt72.c0) ISNULL) THEN ((rt72.c2)>(NULL)) WHEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c2)) THEN ((((((((rt72.c1)AND(t1.c0)))AND(t1.c0)))OR(rt72.c2)))OR(t1.c67)) WHEN ((rt72.c1) IS TRUE) THEN rt72.c2 WHEN vt0.c0 THEN (- (rt72.c2)) WHEN ((NULL) BETWEEN (rt72.c2) AND (vt0.c0)) THEN ((((((((t1.c67)AND(rt72.c1)))AND(rt72.c1)))AND(t1.c67)))OR(rt72.c0)) ELSE (rt72.c0 IN (t1.c67)) END ORDER BY (((((t1.c0))>=((vt0.c0)))) BETWEEN (((((((((rt72.c2)OR(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))AND(x''))) AND (((t1.c67)<(rt72.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON vt0.c0 LEFT OUTER JOIN rt72 ON CASE WHEN ((rt72.c0) ISNULL) THEN ((rt72.c2)>(NULL)) WHEN ((rt72.c2) BETWEEN (rt72.c1) AND (rt72.c2)) THEN ((((((((rt72.c1)AND(t1.c0)))AND(t1.c0)))OR(rt72.c2)))OR(t1.c67)) WHEN ((rt72.c1) IS TRUE) THEN rt72.c2 WHEN vt0.c0 THEN (- (rt72.c2)) WHEN ((NULL) BETWEEN (rt72.c2) AND (vt0.c0)) THEN ((((((((t1.c67)AND(rt72.c1)))AND(rt72.c1)))AND(t1.c67)))OR(rt72.c0)) ELSE (rt72.c0 IN (t1.c67)) END WHERE (((LIKELY(DISTINCT rt72.c2)) IS FALSE)) ORDER BY (((((t1.c0))>=((vt0.c0)))) BETWEEN (((((((((rt72.c2)OR(rt72.c2)))AND(rt72.c2)))AND(rt72.c0)))AND(x''))) AND (((t1.c67)<(rt72.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt72 FULL OUTER JOIN vt0 ON -1431012456 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, rt72 FULL OUTER JOIN vt0 ON -1431012456);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt72 FULL OUTER JOIN vt0 ON -1431012456 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, rt72 FULL OUTER JOIN vt0 ON -1431012456);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt72 FULL OUTER JOIN vt0 ON -1431012456 WHERE (CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c1) AND (t1.c0)))/((((rt72.c2, x'', rt72.c0, rt72.c2, t1.c67))<((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0)))))) ORDER BY ((((0.06794532655896013) BETWEEN (rt72.c1) AND (rt72.c2))) NOT NULL), CAST(((vt0.c0)OR(rt72.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT BETWEEN (rt72.c1) AND (t1.c0)))/((((rt72.c2, x'', rt72.c0, rt72.c2, t1.c67))<((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0)))))) IS TRUE)  as count FROM rt72, vt0, t1, vt1 ORDER BY ((((0.06794532655896013) BETWEEN (rt72.c1) AND (rt72.c2))) NOT NULL), CAST(((vt0.c0)OR(rt72.c2)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c1) AND (t1.c0)))/((((rt72.c2, x'', rt72.c0, rt72.c2, t1.c67))<((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0)))))) ORDER BY ((((0.06794532655896013) BETWEEN (rt72.c1) AND (rt72.c2))) NOT NULL), CAST(((vt0.c0)OR(rt72.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT BETWEEN (rt72.c1) AND (t1.c0)))/((((rt72.c2, x'', rt72.c0, rt72.c2, t1.c67))<((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0)))))) IS TRUE)  as count FROM rt72, vt0, t1, vt1 ORDER BY ((((0.06794532655896013) BETWEEN (rt72.c1) AND (rt72.c2))) NOT NULL), CAST(((vt0.c0)OR(rt72.c2)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM rt72, vt0, t1, vt1 WHERE (((((rt72.c1) NOT BETWEEN (rt72.c1) AND (t1.c0)))/((((rt72.c2, x'', rt72.c0, rt72.c2, t1.c67))<((vt0.c0, vt0.c0, vt0.c0, t1.c0, t1.c0)))))) ORDER BY ((((0.06794532655896013) BETWEEN (rt72.c1) AND (rt72.c2))) NOT NULL), CAST(((vt0.c0)OR(rt72.c2)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((x'1020')OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))||(vt1.c0))) ORDER BY ((NULL) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((x'1020')OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))||(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((x'1020')OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))||(vt1.c0))) ORDER BY ((NULL) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((x'1020')OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))||(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((x'1020')OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))||(vt1.c0))) ORDER BY ((NULL) BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt72, t1, vt1, vt0 WHERE (CASE ((rt72.c2) IS FALSE)  WHEN (vt1.c0 IN (793471248)) THEN INSTR(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt72.c2) IS FALSE)  WHEN (vt1.c0 IN (793471248)) THEN INSTR(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT ALL * FROM rt72, t1, vt1, vt0 WHERE (CASE ((rt72.c2) IS FALSE)  WHEN (vt1.c0 IN (793471248)) THEN INSTR(vt1.c0, vt1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt72.c2) IS FALSE)  WHEN (vt1.c0 IN (793471248)) THEN INSTR(vt1.c0, vt1.c0) END) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT ALL * FROM rt72, t1, vt1, vt0 WHERE (CASE ((rt72.c2) IS FALSE)  WHEN (vt1.c0 IN (793471248)) THEN INSTR(vt1.c0, vt1.c0) END);
SELECT * FROM t1 LEFT OUTER JOIN rt72 ON (((t1.c67)) BETWEEN ((rt72.c2)) AND (((0.6262718746143954 IN (rt72.c1, rt72.c1))))) WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) ORDER BY (- ((~ (rt72.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON (((t1.c67)) BETWEEN ((rt72.c2)) AND (((0.6262718746143954 IN (rt72.c1, rt72.c1))))) ORDER BY (- ((~ (rt72.c1))))  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt72 ON (((t1.c67)) BETWEEN ((rt72.c2)) AND (((0.6262718746143954 IN (rt72.c1, rt72.c1))))) WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) ORDER BY (- ((~ (rt72.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt72 ON (((t1.c67)) BETWEEN ((rt72.c2)) AND (((0.6262718746143954 IN (rt72.c1, rt72.c1))))) ORDER BY (- ((~ (rt72.c1))))  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN rt72 ON (((t1.c67)) BETWEEN ((rt72.c2)) AND (((0.6262718746143954 IN (rt72.c1, rt72.c1))))) WHERE (CAST(rt72.c1 COLLATE NOCASE AS INTEGER)) ORDER BY (- ((~ (rt72.c1))))  NULLS FIRST;
SELECT * FROM vt1, t1 WHERE ((((t1.c67 IN ()))|((t1.c67 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67 IN ()))|((t1.c67 IN (t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c67 IN ()))|((t1.c67 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT (((((t1.c67 IN ()))|((t1.c67 IN (t1.c0))))) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE ((((t1.c67 IN ()))|((t1.c67 IN (t1.c0)))));
SELECT ALL COUNT(*) FROM rt72, vt0, t1 WHERE (rt72.c0);
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT ALL COUNT(*) FROM rt72, vt0, t1 WHERE (rt72.c0);
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM rt72, vt0, t1);
SELECT ALL COUNT(*) FROM rt72, vt0, t1 WHERE (rt72.c0);
SELECT COUNT(*) FROM rt72, t1 WHERE (((rt72.c2 COLLATE NOCASE)||(rt72.c0))) ORDER BY ((((t1.c0)&(t1.c67)))>>(t1.c67 COLLATE BINARY)) ASC  NULLS FIRST, (CAST(rt72.c1 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2 COLLATE NOCASE)||(rt72.c0))) IS TRUE)  as count FROM rt72, t1 ORDER BY ((((t1.c0)&(t1.c67)))>>(t1.c67 COLLATE BINARY)) ASC  NULLS FIRST, (CAST(rt72.c1 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt72, t1 WHERE (((rt72.c2 COLLATE NOCASE)||(rt72.c0))) ORDER BY ((((t1.c0)&(t1.c67)))>>(t1.c67 COLLATE BINARY)) ASC  NULLS FIRST, (CAST(rt72.c1 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2 COLLATE NOCASE)||(rt72.c0))) IS TRUE)  as count FROM rt72, t1 ORDER BY ((((t1.c0)&(t1.c67)))>>(t1.c67 COLLATE BINARY)) ASC  NULLS FIRST, (CAST(rt72.c1 AS BLOB) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt72, t1 WHERE (((rt72.c2 COLLATE NOCASE)||(rt72.c0))) ORDER BY ((((t1.c0)&(t1.c67)))>>(t1.c67 COLLATE BINARY)) ASC  NULLS FIRST, (CAST(rt72.c1 AS BLOB) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt72, vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((0X35a97535)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0)) NOT BETWEEN ((0x35a97535)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT ALL * FROM vt0, rt72, vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((0X35a97535)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt1.c0)) NOT BETWEEN ((0x35a97535)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT ALL * FROM vt0, rt72, vt1 WHERE ((+ ((((vt1.c0)) NOT BETWEEN ((0X35a97535)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((((t1.c0)AND(t1.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON (((((t1.c67, t1.c67, 0.7848361629664788))<((t1.c0, '(%煟!}g[1X', vt0.c0)))) NOT NULL) WHERE (((((t1.c67)AND(t1.c67)))AND(t1.c67)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c67)AND(t1.c67)))AND(t1.c67)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((((t1.c67, t1.c67, 0.7848361629664788))<((t1.c0, '(%煟!}g[1X', vt0.c0)))) NOT NULL));
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON (((((t1.c67, t1.c67, 0.7848361629664788))<((t1.c0, '(%煟!}g[1X', vt0.c0)))) NOT NULL) WHERE (((((t1.c67)AND(t1.c67)))AND(t1.c67)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((t1.c67)AND(t1.c67)))AND(t1.c67)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN t1 ON (((((t1.c67, t1.c67, 0.7848361629664788))<((t1.c0, '(%煟!}g[1X', vt0.c0)))) NOT NULL));
SELECT * FROM vt1, vt0 FULL OUTER JOIN t1 ON (((((t1.c67, t1.c67, 0.7848361629664788))<((t1.c0, '(%煟!}g[1X', vt0.c0)))) NOT NULL) WHERE (((((t1.c67)AND(t1.c67)))AND(t1.c67)) COLLATE NOCASE COLLATE RTRIM);
SELECT ALL * FROM vt0, rt72 WHERE (((('*k{Tlh')>(rt72.c2)) IN (rt72.c0)));
SELECT SUM(count) FROM (SELECT ((((('*k{Tlh')>(rt72.c2)) IN (rt72.c0))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL * FROM vt0, rt72 WHERE (((('*k{Tlh')>(rt72.c2)) IN (rt72.c0)));
SELECT SUM(count) FROM (SELECT ((((('*k{Tlh')>(rt72.c2)) IN (rt72.c0))) IS TRUE)  as count FROM vt0, rt72);
SELECT ALL * FROM vt0, rt72 WHERE (((('*k{Tlh')>(rt72.c2)) IN (rt72.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1296962532' COLLATE BINARY) NOTNULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((('1296962532' COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1296962532' COLLATE BINARY) NOTNULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT (((('1296962532' COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('1296962532' COLLATE BINARY) NOTNULL)) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, vt1 ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, vt1 WHERE (vt1.c0) ORDER BY (CAST(vt0.c0 AS BLOB) IN ()) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL) WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL) WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON (((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt0.c0))>((x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) ISNULL) WHERE (((+ (vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM t1, rt72, vt0 WHERE (((rt72.c2)IS NOT(rt72.c2)) COLLATE BINARY) ORDER BY TRIM(((rt72.c0)=(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt72.c2)IS NOT(rt72.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt72, vt0 ORDER BY TRIM(((rt72.c0)=(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt72, vt0 WHERE (((rt72.c2)IS NOT(rt72.c2)) COLLATE BINARY) ORDER BY TRIM(((rt72.c0)=(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt72.c2)IS NOT(rt72.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1, rt72, vt0 ORDER BY TRIM(((rt72.c0)=(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt72, vt0 WHERE (((rt72.c2)IS NOT(rt72.c2)) COLLATE BINARY) ORDER BY TRIM(((rt72.c0)=(vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt72 ON (((t1.c0, NULL, rt72.c0)) NOT BETWEEN ((CAST(rt72.c2 AS REAL), (((t1.c67, t1.c0, rt72.c2)) NOT BETWEEN ((rt72.c1, t1.c67, rt72.c2)) AND ((rt72.c2, NULL, rt72.c0))), ((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c67)))) AND ((((t1.c0)+(rt72.c0)), json_patch(rt72.c2, rt72.c2), CASE rt72.c2  WHEN t1.c0 THEN x'' END))) WHERE (((LOWER(DISTINCT rt72.c0)) NOT BETWEEN (('-924094810' IN ())) AND (((t1.c67)*(x'')))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt72.c0)) NOT BETWEEN (('-924094810' IN ())) AND (((t1.c67)*(x''))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt72 ON (((t1.c0, NULL, rt72.c0)) NOT BETWEEN ((CAST(rt72.c2 AS REAL), (((t1.c67, t1.c0, rt72.c2)) NOT BETWEEN ((rt72.c1, t1.c67, rt72.c2)) AND ((rt72.c2, NULL, rt72.c0))), ((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c67)))) AND ((((t1.c0)+(rt72.c0)), json_patch(rt72.c2, rt72.c2), CASE rt72.c2  WHEN t1.c0 THEN x'' END))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt72 ON (((t1.c0, NULL, rt72.c0)) NOT BETWEEN ((CAST(rt72.c2 AS REAL), (((t1.c67, t1.c0, rt72.c2)) NOT BETWEEN ((rt72.c1, t1.c67, rt72.c2)) AND ((rt72.c2, NULL, rt72.c0))), ((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c67)))) AND ((((t1.c0)+(rt72.c0)), json_patch(rt72.c2, rt72.c2), CASE rt72.c2  WHEN t1.c0 THEN x'' END))) WHERE (((LOWER(DISTINCT rt72.c0)) NOT BETWEEN (('-924094810' IN ())) AND (((t1.c67)*(x'')))));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT rt72.c0)) NOT BETWEEN (('-924094810' IN ())) AND (((t1.c67)*(x''))))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt72 ON (((t1.c0, NULL, rt72.c0)) NOT BETWEEN ((CAST(rt72.c2 AS REAL), (((t1.c67, t1.c0, rt72.c2)) NOT BETWEEN ((rt72.c1, t1.c67, rt72.c2)) AND ((rt72.c2, NULL, rt72.c0))), ((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c67)))) AND ((((t1.c0)+(rt72.c0)), json_patch(rt72.c2, rt72.c2), CASE rt72.c2  WHEN t1.c0 THEN x'' END))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt72 ON (((t1.c0, NULL, rt72.c0)) NOT BETWEEN ((CAST(rt72.c2 AS REAL), (((t1.c67, t1.c0, rt72.c2)) NOT BETWEEN ((rt72.c1, t1.c67, rt72.c2)) AND ((rt72.c2, NULL, rt72.c0))), ((rt72.c2) NOT BETWEEN (rt72.c2) AND (t1.c67)))) AND ((((t1.c0)+(rt72.c0)), json_patch(rt72.c2, rt72.c2), CASE rt72.c2  WHEN t1.c0 THEN x'' END))) WHERE (((LOWER(DISTINCT rt72.c0)) NOT BETWEEN (('-924094810' IN ())) AND (((t1.c67)*(x'')))));
SELECT * FROM vt0, rt72, vt1 WHERE (((((vt0.c0)AND(rt72.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt72.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT * FROM vt0, rt72, vt1 WHERE (((((vt0.c0)AND(rt72.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt72.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt72, vt1);
SELECT * FROM vt0, rt72, vt1 WHERE (((((vt0.c0)AND(rt72.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((((rt72.c0) ISNULL))>(CASE rt72.c1  WHEN t1.c0 THEN rt72.c0 WHEN rt72.c2 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END))) ORDER BY CASE (rt72.c0 IN (t1.c67))  WHEN '838413056' THEN TRIM(rt72.c1, '5') ELSE CASE rt72.c0  WHEN t1.c0 THEN t1.c67 ELSE NULL END END, CAST(((x'5be8')LIKE(0.5989705771325271)) AS BLOB)  NULLS FIRST, ((rt72.c2) NOT BETWEEN (t1.c67) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c0) ISNULL))>(CASE rt72.c1  WHEN t1.c0 THEN rt72.c0 WHEN rt72.c2 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY CASE (rt72.c0 IN (t1.c67))  WHEN '838413056' THEN TRIM(rt72.c1, '5') ELSE CASE rt72.c0  WHEN t1.c0 THEN t1.c67 ELSE NULL END END, CAST(((x'5be8')LIKE(0.5989705771325271)) AS BLOB)  NULLS FIRST, ((rt72.c2) NOT BETWEEN (t1.c67) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((((rt72.c0) ISNULL))>(CASE rt72.c1  WHEN t1.c0 THEN rt72.c0 WHEN rt72.c2 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END))) ORDER BY CASE (rt72.c0 IN (t1.c67))  WHEN '838413056' THEN TRIM(rt72.c1, '5') ELSE CASE rt72.c0  WHEN t1.c0 THEN t1.c67 ELSE NULL END END, CAST(((x'5be8')LIKE(0.5989705771325271)) AS BLOB)  NULLS FIRST, ((rt72.c2) NOT BETWEEN (t1.c67) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt72.c0) ISNULL))>(CASE rt72.c1  WHEN t1.c0 THEN rt72.c0 WHEN rt72.c2 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END))) IS TRUE)  as count FROM t1, vt1, rt72, vt0 ORDER BY CASE (rt72.c0 IN (t1.c67))  WHEN '838413056' THEN TRIM(rt72.c1, '5') ELSE CASE rt72.c0  WHEN t1.c0 THEN t1.c67 ELSE NULL END END, CAST(((x'5be8')LIKE(0.5989705771325271)) AS BLOB)  NULLS FIRST, ((rt72.c2) NOT BETWEEN (t1.c67) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, rt72, vt0 WHERE (((((rt72.c0) ISNULL))>(CASE rt72.c1  WHEN t1.c0 THEN rt72.c0 WHEN rt72.c2 THEN vt1.c0 WHEN t1.c67 THEN t1.c67 END))) ORDER BY CASE (rt72.c0 IN (t1.c67))  WHEN '838413056' THEN TRIM(rt72.c1, '5') ELSE CASE rt72.c0  WHEN t1.c0 THEN t1.c67 ELSE NULL END END, CAST(((x'5be8')LIKE(0.5989705771325271)) AS BLOB)  NULLS FIRST, ((rt72.c2) NOT BETWEEN (t1.c67) AND (vt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0, rt72 WHERE (CASE WHEN CASE WHEN rt72.c0 THEN rt72.c0 END THEN (rt72.c2 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY ((rt72.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt72.c0 THEN rt72.c0 END THEN (rt72.c2 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72 ORDER BY ((rt72.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt72 WHERE (CASE WHEN CASE WHEN rt72.c0 THEN rt72.c0 END THEN (rt72.c2 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY ((rt72.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt72.c0 THEN rt72.c0 END THEN (rt72.c2 IN ()) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0, rt72 ORDER BY ((rt72.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt0, rt72 WHERE (CASE WHEN CASE WHEN rt72.c0 THEN rt72.c0 END THEN (rt72.c2 IN ()) ELSE (vt0.c0 IN ()) END) ORDER BY ((rt72.c0)|(vt0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt0, t1, vt1 WHERE (((((~ (NULL)), (NOT (t1.c67)), vt0.c0 COLLATE RTRIM))==((((vt0.c0) BETWEEN (t1.c0) AND (t1.c67)), QUOTE(vt0.c0), t1.c67 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((~ (NULL)), (NOT (t1.c67)), vt0.c0 COLLATE RTRIM))=((((vt0.c0) BETWEEN (t1.c0) AND (t1.c67)), QUOTE(vt0.c0), t1.c67 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((~ (NULL)), (NOT (t1.c67)), vt0.c0 COLLATE RTRIM))==((((vt0.c0) BETWEEN (t1.c0) AND (t1.c67)), QUOTE(vt0.c0), t1.c67 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((~ (NULL)), (NOT (t1.c67)), vt0.c0 COLLATE RTRIM))=((((vt0.c0) BETWEEN (t1.c0) AND (t1.c67)), QUOTE(vt0.c0), t1.c67 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, t1, vt1);
SELECT * FROM vt0, t1, vt1 WHERE (((((~ (NULL)), (NOT (t1.c67)), vt0.c0 COLLATE RTRIM))==((((vt0.c0) BETWEEN (t1.c0) AND (t1.c67)), QUOTE(vt0.c0), t1.c67 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt72 CROSS JOIN vt0 ON (~ (CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN t1 ON ((NULL)IS NOT(t1.c67)) RIGHT OUTER JOIN vt1 ON (NOT (((t1.c67) BETWEEN (rt72.c1) AND (rt72.c2)))) WHERE (CAST(((rt72.c2)AND(vt1.c0)) AS TEXT)) ORDER BY (((vt1.c0))==((t1.c67))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2)AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt72 CROSS JOIN vt0 ON (~ (CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN t1 ON ((NULL)IS NOT(t1.c67)) RIGHT OUTER JOIN vt1 ON (NOT (((t1.c67) BETWEEN (rt72.c1) AND (rt72.c2)))) ORDER BY (((vt1.c0))==((t1.c67))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt72 CROSS JOIN vt0 ON (~ (CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN t1 ON ((NULL)IS NOT(t1.c67)) RIGHT OUTER JOIN vt1 ON (NOT (((t1.c67) BETWEEN (rt72.c1) AND (rt72.c2)))) WHERE (CAST(((rt72.c2)AND(vt1.c0)) AS TEXT)) ORDER BY (((vt1.c0))==((t1.c67))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c2)AND(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt72 CROSS JOIN vt0 ON (~ (CAST(vt1.c0 AS TEXT))) LEFT OUTER JOIN t1 ON ((NULL)IS NOT(t1.c67)) RIGHT OUTER JOIN vt1 ON (NOT (((t1.c67) BETWEEN (rt72.c1) AND (rt72.c2)))) ORDER BY (((vt1.c0))==((t1.c67))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))IS NOT((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))IS NOT((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))IS NOT((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt1.c0)))IS NOT((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)>(vt1.c0)))IS NOT((vt1.c0 IN (vt1.c0))))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL * FROM vt1, vt0, rt72 WHERE (((('寠e''')GLOB(rt72.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('寠e''')GLOB(rt72.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt72 NOT INDEXED);
SELECT ALL * FROM vt1, vt0, rt72 WHERE (((('寠e''')GLOB(rt72.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('寠e''')GLOB(rt72.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt72 NOT INDEXED);
SELECT ALL * FROM vt1, vt0, rt72 WHERE (((('寠e''')GLOB(rt72.c0)) IN ()));
SELECT * FROM rt72, t1, vt1, vt0 WHERE (LOWER(rt72.c1));
SELECT SUM(count) FROM (SELECT ((LOWER(rt72.c1)) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT * FROM rt72, t1, vt1, vt0 WHERE (LOWER(rt72.c1));
SELECT SUM(count) FROM (SELECT ((LOWER(rt72.c1)) IS TRUE)  as count FROM rt72, t1, vt1, vt0);
SELECT * FROM rt72, t1, vt1, vt0 WHERE (LOWER(rt72.c1));
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((- ('-1909241504'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('-1909241504'))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((- ('-1909241504'))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((- ('-1909241504'))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT COUNT(*) FROM vt0, vt1, t1 WHERE ((((- ('-1909241504'))) IS FALSE));
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE ((((((rt72.c1))<((rt72.c0)))) BETWEEN (CAST(rt72.c1 AS REAL)) AND (((rt72.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c1))<((rt72.c0)))) BETWEEN (CAST(rt72.c1 AS REAL)) AND (((rt72.c0) IS TRUE)))) IS TRUE)  as count FROM rt72, vt1);
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE ((((((rt72.c1))<((rt72.c0)))) BETWEEN (CAST(rt72.c1 AS REAL)) AND (((rt72.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt72.c1))<((rt72.c0)))) BETWEEN (CAST(rt72.c1 AS REAL)) AND (((rt72.c0) IS TRUE)))) IS TRUE)  as count FROM rt72, vt1);
SELECT ALL COUNT(*) FROM rt72, vt1 WHERE ((((((rt72.c1))<((rt72.c0)))) BETWEEN (CAST(rt72.c1 AS REAL)) AND (((rt72.c0) IS TRUE))));
SELECT COUNT(*) FROM vt1, t1, rt72 WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt1, t1, rt72);
SELECT COUNT(*) FROM vt1, t1, rt72 WHERE (rt72.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt72.c2) IS TRUE)  as count FROM vt1, t1, rt72);
SELECT COUNT(*) FROM vt1, t1, rt72 WHERE (rt72.c2);
SELECT * FROM t1 CROSS JOIN rt72 ON ((((rt72.c2) NOT BETWEEN (t1.c0) AND (rt72.c2)))LIKE((+ (rt72.c2)))) WHERE (((((t1.c0) NOT BETWEEN ('1347143238') AND (t1.c0)))LIKE((((t1.c0, rt72.c2, t1.c67)) BETWEEN ((rt72.c0, t1.c67, t1.c67)) AND ((rt72.c1, rt72.c2, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN ('1347143238') AND (t1.c0)))LIKE((((t1.c0, rt72.c2, t1.c67)) BETWEEN ((rt72.c0, t1.c67, t1.c67)) AND ((rt72.c1, rt72.c2, t1.c0)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON ((((rt72.c2) NOT BETWEEN (t1.c0) AND (rt72.c2)))LIKE((+ (rt72.c2)))));
SELECT * FROM t1 CROSS JOIN rt72 ON ((((rt72.c2) NOT BETWEEN (t1.c0) AND (rt72.c2)))LIKE((+ (rt72.c2)))) WHERE (((((t1.c0) NOT BETWEEN ('1347143238') AND (t1.c0)))LIKE((((t1.c0, rt72.c2, t1.c67)) BETWEEN ((rt72.c0, t1.c67, t1.c67)) AND ((rt72.c1, rt72.c2, t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN ('1347143238') AND (t1.c0)))LIKE((((t1.c0, rt72.c2, t1.c67)) BETWEEN ((rt72.c0, t1.c67, t1.c67)) AND ((rt72.c1, rt72.c2, t1.c0)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON ((((rt72.c2) NOT BETWEEN (t1.c0) AND (rt72.c2)))LIKE((+ (rt72.c2)))));
SELECT * FROM t1 CROSS JOIN rt72 ON ((((rt72.c2) NOT BETWEEN (t1.c0) AND (rt72.c2)))LIKE((+ (rt72.c2)))) WHERE (((((t1.c0) NOT BETWEEN ('1347143238') AND (t1.c0)))LIKE((((t1.c0, rt72.c2, t1.c67)) BETWEEN ((rt72.c0, t1.c67, t1.c67)) AND ((rt72.c1, rt72.c2, t1.c0))))));
SELECT * FROM vt0, rt72, vt1, t1 WHERE ((((((t1.c67)) NOT BETWEEN ((vt1.c0)) AND ((rt72.c1)))) NOTNULL)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((t1.c67)))) NOT NULL) DESC  NULLS FIRST, CASE rt72.c0 COLLATE BINARY  WHEN ((t1.c0)-(vt1.c0)) THEN ((((((((((((t1.c0)OR(rt72.c1)))OR(rt72.c1)))OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(t1.c67)) WHEN (((vt1.c0)) BETWEEN ((rt72.c2)) AND ((t1.c67))) THEN 0.4958878199302845 WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt72.c0 AS NUMERIC) WHEN (rt72.c0 IN ()) THEN CASE WHEN rt72.c1 THEN t1.c0 END WHEN (+ (t1.c0)) THEN (NOT (rt72.c2)) END ASC  NULLS LAST, (CASE t1.c67  WHEN t1.c0 THEN rt72.c1 END IN (((rt72.c2)&(rt72.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67)) NOT BETWEEN ((vt1.c0)) AND ((rt72.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((t1.c67)))) NOT NULL) DESC  NULLS FIRST, CASE rt72.c0 COLLATE BINARY  WHEN ((t1.c0)-(vt1.c0)) THEN ((((((((((((t1.c0)OR(rt72.c1)))OR(rt72.c1)))OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(t1.c67)) WHEN (((vt1.c0)) BETWEEN ((rt72.c2)) AND ((t1.c67))) THEN 0.4958878199302845 WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt72.c0 AS NUMERIC) WHEN (rt72.c0 IN ()) THEN CASE WHEN rt72.c1 THEN t1.c0 END WHEN (+ (t1.c0)) THEN (NOT (rt72.c2)) END ASC  NULLS LAST, (CASE t1.c67  WHEN t1.c0 THEN rt72.c1 END IN (((rt72.c2)&(rt72.c2)))) ASC);
SELECT * FROM vt0, rt72, vt1, t1 WHERE ((((((t1.c67)) NOT BETWEEN ((vt1.c0)) AND ((rt72.c1)))) NOTNULL)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((t1.c67)))) NOT NULL) DESC  NULLS FIRST, CASE rt72.c0 COLLATE BINARY  WHEN ((t1.c0)-(vt1.c0)) THEN ((((((((((((t1.c0)OR(rt72.c1)))OR(rt72.c1)))OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(t1.c67)) WHEN (((vt1.c0)) BETWEEN ((rt72.c2)) AND ((t1.c67))) THEN 0.4958878199302845 WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt72.c0 AS NUMERIC) WHEN (rt72.c0 IN ()) THEN CASE WHEN rt72.c1 THEN t1.c0 END WHEN (+ (t1.c0)) THEN (NOT (rt72.c2)) END ASC  NULLS LAST, (CASE t1.c67  WHEN t1.c0 THEN rt72.c1 END IN (((rt72.c2)&(rt72.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c67)) NOT BETWEEN ((vt1.c0)) AND ((rt72.c1)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt72, vt1, t1 ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((t1.c67)))) NOT NULL) DESC  NULLS FIRST, CASE rt72.c0 COLLATE BINARY  WHEN ((t1.c0)-(vt1.c0)) THEN ((((((((((((t1.c0)OR(rt72.c1)))OR(rt72.c1)))OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(t1.c67)) WHEN (((vt1.c0)) BETWEEN ((rt72.c2)) AND ((t1.c67))) THEN 0.4958878199302845 WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt72.c0 AS NUMERIC) WHEN (rt72.c0 IN ()) THEN CASE WHEN rt72.c1 THEN t1.c0 END WHEN (+ (t1.c0)) THEN (NOT (rt72.c2)) END ASC  NULLS LAST, (CASE t1.c67  WHEN t1.c0 THEN rt72.c1 END IN (((rt72.c2)&(rt72.c2)))) ASC);
SELECT * FROM vt0, rt72, vt1, t1 WHERE ((((((t1.c67)) NOT BETWEEN ((vt1.c0)) AND ((rt72.c1)))) NOTNULL)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((rt72.c0)) AND ((t1.c67)))) NOT NULL) DESC  NULLS FIRST, CASE rt72.c0 COLLATE BINARY  WHEN ((t1.c0)-(vt1.c0)) THEN ((((((((((((t1.c0)OR(rt72.c1)))OR(rt72.c1)))OR(t1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(t1.c67)) WHEN (((vt1.c0)) BETWEEN ((rt72.c2)) AND ((t1.c67))) THEN 0.4958878199302845 WHEN CAST(vt1.c0 AS NUMERIC) THEN CAST(rt72.c0 AS NUMERIC) WHEN (rt72.c0 IN ()) THEN CASE WHEN rt72.c1 THEN t1.c0 END WHEN (+ (t1.c0)) THEN (NOT (rt72.c2)) END ASC  NULLS LAST, (CASE t1.c67  WHEN t1.c0 THEN rt72.c1 END IN (((rt72.c2)&(rt72.c2)))) ASC;
SELECT * FROM t1, vt0, rt72, vt1 WHERE (rt72.c0);
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT * FROM t1, vt0, rt72, vt1 WHERE (rt72.c0);
SELECT SUM(count) FROM (SELECT ((rt72.c0) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT * FROM t1, vt0, rt72, vt1 WHERE (rt72.c0);
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON ((HEX(t1.c67)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))) WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON ((HEX(t1.c67)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ()));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON ((HEX(t1.c67)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))) WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN vt1 ON ((HEX(t1.c67)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ()));
SELECT ALL * FROM vt0, t1 LEFT OUTER JOIN vt1 ON ((HEX(t1.c67)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0) NOT NULL))) WHERE (CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS INTEGER)) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM rt72, vt1, t1 WHERE ((NOT (t1.c67))) ORDER BY (+ (((((rt72.c0)OR(x'')))AND(t1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)-((+ (rt72.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c67))) IS TRUE)  as count FROM rt72, vt1, t1 ORDER BY (+ (((((rt72.c0)OR(x'')))AND(t1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)-((+ (rt72.c2)))));
SELECT ALL COUNT(*) FROM rt72, vt1, t1 WHERE ((NOT (t1.c67))) ORDER BY (+ (((((rt72.c0)OR(x'')))AND(t1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)-((+ (rt72.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c67))) IS TRUE)  as count FROM rt72, vt1, t1 ORDER BY (+ (((((rt72.c0)OR(x'')))AND(t1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)-((+ (rt72.c2)))));
SELECT ALL COUNT(*) FROM rt72, vt1, t1 WHERE ((NOT (t1.c67))) ORDER BY (+ (((((rt72.c0)OR(x'')))AND(t1.c0))))  NULLS LAST, ((vt1.c0 COLLATE RTRIM)-((+ (rt72.c2))));
SELECT * FROM rt72, vt1 INNER JOIN t1 ON t1.c67 CROSS JOIN vt0 ON vt0.c0 WHERE (((((rt72.c0)*(rt72.c1)))%(((((((((vt0.c0)OR(vt1.c0)))AND(t1.c67)))AND(rt72.c1)))OR(t1.c67))))) ORDER BY ((((vt1.c0) NOT NULL))/(HEX(DISTINCT rt72.c2)))  NULLS FIRST, ((vt1.c0) IS FALSE)  NULLS FIRST, CAST((NOT (rt72.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)*(rt72.c1)))%(((((((((vt0.c0)OR(vt1.c0)))AND(t1.c67)))AND(rt72.c1)))OR(t1.c67))))) IS TRUE)  as count FROM rt72, vt1 INNER JOIN t1 ON t1.c67 CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt1.c0) NOT NULL))/(HEX(DISTINCT rt72.c2)))  NULLS FIRST, ((vt1.c0) IS FALSE)  NULLS FIRST, CAST((NOT (rt72.c0)) AS REAL));
SELECT * FROM rt72, vt1 INNER JOIN t1 ON t1.c67 CROSS JOIN vt0 ON vt0.c0 WHERE (((((rt72.c0)*(rt72.c1)))%(((((((((vt0.c0)OR(vt1.c0)))AND(t1.c67)))AND(rt72.c1)))OR(t1.c67))))) ORDER BY ((((vt1.c0) NOT NULL))/(HEX(DISTINCT rt72.c2)))  NULLS FIRST, ((vt1.c0) IS FALSE)  NULLS FIRST, CAST((NOT (rt72.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0)*(rt72.c1)))%(((((((((vt0.c0)OR(vt1.c0)))AND(t1.c67)))AND(rt72.c1)))OR(t1.c67))))) IS TRUE)  as count FROM rt72, vt1 INNER JOIN t1 ON t1.c67 CROSS JOIN vt0 ON vt0.c0 ORDER BY ((((vt1.c0) NOT NULL))/(HEX(DISTINCT rt72.c2)))  NULLS FIRST, ((vt1.c0) IS FALSE)  NULLS FIRST, CAST((NOT (rt72.c0)) AS REAL));
SELECT * FROM rt72, vt1 INNER JOIN t1 ON t1.c67 CROSS JOIN vt0 ON vt0.c0 WHERE (((((rt72.c0)*(rt72.c1)))%(((((((((vt0.c0)OR(vt1.c0)))AND(t1.c67)))AND(rt72.c1)))OR(t1.c67))))) ORDER BY ((((vt1.c0) NOT NULL))/(HEX(DISTINCT rt72.c2)))  NULLS FIRST, ((vt1.c0) IS FALSE)  NULLS FIRST, CAST((NOT (rt72.c0)) AS REAL);
SELECT COUNT(*) FROM t1, rt72, vt0, vt1 WHERE ((((+ (x''))) BETWEEN ((((t1.c0)) BETWEEN ((rt72.c0)) AND ((0.172121363277849)))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((+ (x''))) BETWEEN ((((t1.c0)) BETWEEN ((rt72.c0)) AND ((0.172121363277849)))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY x'' ASC);
SELECT COUNT(*) FROM t1, rt72, vt0, vt1 WHERE ((((+ (x''))) BETWEEN ((((t1.c0)) BETWEEN ((rt72.c0)) AND ((0.172121363277849)))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((+ (x''))) BETWEEN ((((t1.c0)) BETWEEN ((rt72.c0)) AND ((0.172121363277849)))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt72, vt0, vt1 ORDER BY x'' ASC);
SELECT COUNT(*) FROM t1, rt72, vt0, vt1 WHERE ((((+ (x''))) BETWEEN ((((t1.c0)) BETWEEN ((rt72.c0)) AND ((0.172121363277849)))) AND (vt1.c0 COLLATE RTRIM))) ORDER BY x'' ASC;
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.608772752398284 THEN (- (vt1.c0)) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT NULL)  WHEN 0.608772752398284 THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.608772752398284 THEN (- (vt1.c0)) END) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT NULL)  WHEN 0.608772752398284 THEN (- (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL);
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0) NOT NULL)  WHEN 0.608772752398284 THEN (- (vt1.c0)) END) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0, rt72 RIGHT OUTER JOIN vt1 ON ((CAST(rt72.c0 AS REAL)) NOT BETWEEN (((rt72.c1)>=(vt0.c0))) AND ((((vt1.c0))!=((vt0.c0))))) WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((NULL)%(rt72.c2)))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt72 RIGHT OUTER JOIN vt1 ON ((CAST(rt72.c0 AS REAL)) NOT BETWEEN (((rt72.c1)>=(vt0.c0))) AND ((((vt1.c0))!=((vt0.c0))))) ORDER BY ((((NULL)%(rt72.c2)))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt72 RIGHT OUTER JOIN vt1 ON ((CAST(rt72.c0 AS REAL)) NOT BETWEEN (((rt72.c1)>=(vt0.c0))) AND ((((vt1.c0))!=((vt0.c0))))) WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((NULL)%(rt72.c2)))OR(NULL));
SELECT SUM(count) FROM (SELECT ALL (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, rt72 RIGHT OUTER JOIN vt1 ON ((CAST(rt72.c0 AS REAL)) NOT BETWEEN (((rt72.c1)>=(vt0.c0))) AND ((((vt1.c0))!=((vt0.c0))))) ORDER BY ((((NULL)%(rt72.c2)))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0, rt72 RIGHT OUTER JOIN vt1 ON ((CAST(rt72.c0 AS REAL)) NOT BETWEEN (((rt72.c1)>=(vt0.c0))) AND ((((vt1.c0))!=((vt0.c0))))) WHERE ((+ ((- (vt0.c0))))) ORDER BY ((((NULL)%(rt72.c2)))OR(NULL));
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (((((rt72.c2) NOTNULL)) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(((t1.c0) IS FALSE))  NULLS LAST, CASE CAST(rt72.c1 AS TEXT)  WHEN ((vt0.c0) IS TRUE) THEN (rt72.c2 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt72.c2))) THEN ((t1.c67) BETWEEN (NULL) AND (rt72.c0)) WHEN ((t1.c0) IS TRUE) THEN ((rt72.c1)>=(rt72.c1)) WHEN rt72.c0 THEN ((vt0.c0)OR(-1362031643)) WHEN '-425817636' THEN CAST(rt72.c2 AS INTEGER) WHEN rt72.c2 THEN t1.c0 COLLATE BINARY WHEN rt72.c1 COLLATE RTRIM THEN t1.c67 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((t1.c0) IS FALSE))  NULLS LAST, CASE CAST(rt72.c1 AS TEXT)  WHEN ((vt0.c0) IS TRUE) THEN (rt72.c2 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt72.c2))) THEN ((t1.c67) BETWEEN (NULL) AND (rt72.c0)) WHEN ((t1.c0) IS TRUE) THEN ((rt72.c1)>=(rt72.c1)) WHEN rt72.c0 THEN ((vt0.c0)OR(-1362031643)) WHEN '-425817636' THEN CAST(rt72.c2 AS INTEGER) WHEN rt72.c2 THEN t1.c0 COLLATE BINARY WHEN rt72.c1 COLLATE RTRIM THEN t1.c67 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (((((rt72.c2) NOTNULL)) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(((t1.c0) IS FALSE))  NULLS LAST, CASE CAST(rt72.c1 AS TEXT)  WHEN ((vt0.c0) IS TRUE) THEN (rt72.c2 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt72.c2))) THEN ((t1.c67) BETWEEN (NULL) AND (rt72.c0)) WHEN ((t1.c0) IS TRUE) THEN ((rt72.c1)>=(rt72.c1)) WHEN rt72.c0 THEN ((vt0.c0)OR(-1362031643)) WHEN '-425817636' THEN CAST(rt72.c2 AS INTEGER) WHEN rt72.c2 THEN t1.c0 COLLATE BINARY WHEN rt72.c1 COLLATE RTRIM THEN t1.c67 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c2) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt72, t1, vt1 ORDER BY SQLITE_COMPILEOPTION_GET(((t1.c0) IS FALSE))  NULLS LAST, CASE CAST(rt72.c1 AS TEXT)  WHEN ((vt0.c0) IS TRUE) THEN (rt72.c2 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt72.c2))) THEN ((t1.c67) BETWEEN (NULL) AND (rt72.c0)) WHEN ((t1.c0) IS TRUE) THEN ((rt72.c1)>=(rt72.c1)) WHEN rt72.c0 THEN ((vt0.c0)OR(-1362031643)) WHEN '-425817636' THEN CAST(rt72.c2 AS INTEGER) WHEN rt72.c2 THEN t1.c0 COLLATE BINARY WHEN rt72.c1 COLLATE RTRIM THEN t1.c67 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0, rt72, t1, vt1 WHERE (((((rt72.c2) NOTNULL)) IS TRUE)) ORDER BY SQLITE_COMPILEOPTION_GET(((t1.c0) IS FALSE))  NULLS LAST, CASE CAST(rt72.c1 AS TEXT)  WHEN ((vt0.c0) IS TRUE) THEN (rt72.c2 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((t1.c0)) AND ((rt72.c2))) THEN ((t1.c67) BETWEEN (NULL) AND (rt72.c0)) WHEN ((t1.c0) IS TRUE) THEN ((rt72.c1)>=(rt72.c1)) WHEN rt72.c0 THEN ((vt0.c0)OR(-1362031643)) WHEN '-425817636' THEN CAST(rt72.c2 AS INTEGER) WHEN rt72.c2 THEN t1.c0 COLLATE BINARY WHEN rt72.c1 COLLATE RTRIM THEN t1.c67 COLLATE NOCASE END;
SELECT * FROM rt72, t1 WHERE ('-1069913868') ORDER BY ((((('1765521053') BETWEEN (0X5b41f0dc) AND (t1.c67))))>=((((rt72.c0) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1069913868') IS TRUE)  as count FROM rt72, t1 ORDER BY ((((('1765521053') BETWEEN (0x5b41f0dc) AND (t1.c67))))>=((((rt72.c0) ISNULL))))  NULLS FIRST);
SELECT * FROM rt72, t1 WHERE ('-1069913868') ORDER BY ((((('1765521053') BETWEEN (0X5b41f0dc) AND (t1.c67))))>=((((rt72.c0) ISNULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1069913868') IS TRUE)  as count FROM rt72, t1 ORDER BY ((((('1765521053') BETWEEN (0x5b41f0dc) AND (t1.c67))))>=((((rt72.c0) ISNULL))))  NULLS FIRST);
SELECT * FROM rt72, t1 WHERE ('-1069913868') ORDER BY ((((('1765521053') BETWEEN (0X5b41f0dc) AND (t1.c67))))>=((((rt72.c0) ISNULL))))  NULLS FIRST;
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE ('-1431012456');
SELECT SUM(count) FROM (SELECT (('-1431012456') IS TRUE)  as count FROM rt72, t1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE ('-1431012456');
SELECT SUM(count) FROM (SELECT (('-1431012456') IS TRUE)  as count FROM rt72, t1, vt0);
SELECT COUNT(*) FROM rt72, t1, vt0 WHERE ('-1431012456');
SELECT ALL * FROM rt72, vt1 WHERE ((((- (rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND ((rt72.c0 IN (vt1.c0))))) ORDER BY ((UPPER(vt1.c0))=(((rt72.c1) NOT BETWEEN (rt72.c2) AND (rt72.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND ((rt72.c0 IN (vt1.c0))))) IS TRUE)  as count FROM rt72, vt1 ORDER BY ((UPPER(vt1.c0))==(((rt72.c1) NOT BETWEEN (rt72.c2) AND (rt72.c1)))));
SELECT ALL * FROM rt72, vt1 WHERE ((((- (rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND ((rt72.c0 IN (vt1.c0))))) ORDER BY ((UPPER(vt1.c0))=(((rt72.c1) NOT BETWEEN (rt72.c2) AND (rt72.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND ((rt72.c0 IN (vt1.c0))))) IS TRUE)  as count FROM rt72, vt1 ORDER BY ((UPPER(vt1.c0))==(((rt72.c1) NOT BETWEEN (rt72.c2) AND (rt72.c1)))));
SELECT ALL * FROM rt72, vt1 WHERE ((((- (rt72.c1))) NOT BETWEEN (rt72.c1 COLLATE BINARY) AND ((rt72.c0 IN (vt1.c0))))) ORDER BY ((UPPER(vt1.c0))=(((rt72.c1) NOT BETWEEN (rt72.c2) AND (rt72.c1))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c2 WHERE (TIME((t1.c0 IN (t1.c67)), CAST('0.5989705771325271' AS TEXT), ((rt72.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TIME((t1.c0 IN (t1.c67)), CAST('0.5989705771325271' AS TEXT), ((rt72.c1) IS TRUE))) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON rt72.c2);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c2 WHERE (TIME((t1.c0 IN (t1.c67)), CAST('0.5989705771325271' AS TEXT), ((rt72.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((TIME((t1.c0 IN (t1.c67)), CAST('0.5989705771325271' AS TEXT), ((rt72.c1) IS TRUE))) IS TRUE)  as count FROM t1 CROSS JOIN rt72 ON rt72.c2);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt72 ON rt72.c2 WHERE (TIME((t1.c0 IN (t1.c67)), CAST('0.5989705771325271' AS TEXT), ((rt72.c1) IS TRUE)));
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN (x'' IN ()) THEN vt0.c0 END) ORDER BY ((')1E8<z[h' COLLATE NOCASE) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((')1E8<z[h' COLLATE NOCASE) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN (x'' IN ()) THEN vt0.c0 END) ORDER BY ((')1E8<z[h' COLLATE NOCASE) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (x'' IN ()) THEN vt0.c0 END) IS TRUE)  as count FROM vt0, t1, vt1 ORDER BY ((')1E8<z[h' COLLATE NOCASE) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, vt1 WHERE (CASE WHEN (x'' IN ()) THEN vt0.c0 END) ORDER BY ((')1E8<z[h' COLLATE NOCASE) NOT BETWEEN ((+ (vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((((t1.c0)IS(rt72.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)IS(rt72.c1)) IN ())) IS TRUE)  as count FROM t1 NATURAL JOIN rt72);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((((t1.c0)IS(rt72.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c0)IS(rt72.c1)) IN ())) IS TRUE)  as count FROM t1 NATURAL JOIN rt72);
SELECT COUNT(*) FROM t1 NATURAL JOIN rt72 WHERE ((((t1.c0)IS(rt72.c1)) IN ()));
SELECT * FROM rt72, vt1, vt0, t1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(rt72.c2)))>>(PRINTF('J[?w셕'))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt1.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(rt72.c2)))>>(PRINTF('J[?w셕')))) IS TRUE)  as count FROM rt72, vt1, vt0, t1);
SELECT * FROM rt72, vt1, vt0, t1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(rt72.c2)))>>(PRINTF('J[?w셕'))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt1.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(rt72.c2)))>>(PRINTF('J[?w셕')))) IS TRUE)  as count FROM rt72, vt1, vt0, t1);
SELECT * FROM rt72, vt1, vt0, t1 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(rt72.c2)))>>(PRINTF('J[?w셕'))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((x'') BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((x'2051', vt0.c0, vt0.c0))=((x'4d06', vt1.c0, vt0.c0))))) WHERE (-2005692012);
SELECT SUM(count) FROM (SELECT ALL ((-2005692012) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((x'') BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((x'2051', vt0.c0, vt0.c0))==((x'4d06', vt1.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((x'') BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((x'2051', vt0.c0, vt0.c0))=((x'4d06', vt1.c0, vt0.c0))))) WHERE (-2005692012);
SELECT SUM(count) FROM (SELECT ALL ((-2005692012) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((x'') BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((x'2051', vt0.c0, vt0.c0))==((x'4d06', vt1.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((x'') BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((((x'2051', vt0.c0, vt0.c0))=((x'4d06', vt1.c0, vt0.c0))))) WHERE (-2005692012);
SELECT ALL COUNT(*) FROM rt72 WHERE (((((rt72.c1) NOT NULL)) BETWEEN (CASE 1.390595867E9  WHEN rt72.c0 THEN rt72.c0 END) AND ('(%煟!}g[1X'))) ORDER BY SQLITE_VERSION() COLLATE BINARY DESC  NULLS FIRST, (((rt72.c2 IN ('ex'))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT NULL)) BETWEEN (CASE 1.390595867E9  WHEN rt72.c0 THEN rt72.c0 END) AND ('(%煟!}g[1X'))) IS TRUE)  as count FROM rt72 ORDER BY SQLITE_VERSION() COLLATE BINARY DESC  NULLS FIRST, (((rt72.c2 IN ('ex'))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72 WHERE (((((rt72.c1) NOT NULL)) BETWEEN (CASE 1.390595867E9  WHEN rt72.c0 THEN rt72.c0 END) AND ('(%煟!}g[1X'))) ORDER BY SQLITE_VERSION() COLLATE BINARY DESC  NULLS FIRST, (((rt72.c2 IN ('ex'))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c1) NOT NULL)) BETWEEN (CASE 1.390595867E9  WHEN rt72.c0 THEN rt72.c0 END) AND ('(%煟!}g[1X'))) IS TRUE)  as count FROM rt72 ORDER BY SQLITE_VERSION() COLLATE BINARY DESC  NULLS FIRST, (((rt72.c2 IN ('ex'))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt72 WHERE (((((rt72.c1) NOT NULL)) BETWEEN (CASE 1.390595867E9  WHEN rt72.c0 THEN rt72.c0 END) AND ('(%煟!}g[1X'))) ORDER BY SQLITE_VERSION() COLLATE BINARY DESC  NULLS FIRST, (((rt72.c2 IN ('ex'))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c67  WHEN vt1.c0 THEN t1.c67 END)*((t1.c0 IN ()))) INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, t1.c67 COLLATE BINARY, vt0.c0 COLLATE BINARY))>((t1.c0, 751692060, ((t1.c0)LIKE(t1.c0))))) WHERE (((vt0.c0)>(NULLIF(DISTINCT vt0.c0, t1.c67)))) ORDER BY CAST(((NULL)/(vt1.c0)) AS REAL), 0.9014213538846307 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(NULLIF(DISTINCT vt0.c0, t1.c67)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c67  WHEN vt1.c0 THEN t1.c67 END)*((t1.c0 IN ()))) INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, t1.c67 COLLATE BINARY, vt0.c0 COLLATE BINARY))>((t1.c0, 751692060, ((t1.c0)LIKE(t1.c0))))) ORDER BY CAST(((NULL)/(vt1.c0)) AS REAL), 0.9014213538846307 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c67  WHEN vt1.c0 THEN t1.c67 END)*((t1.c0 IN ()))) INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, t1.c67 COLLATE BINARY, vt0.c0 COLLATE BINARY))>((t1.c0, 751692060, ((t1.c0)LIKE(t1.c0))))) WHERE (((vt0.c0)>(NULLIF(DISTINCT vt0.c0, t1.c67)))) ORDER BY CAST(((NULL)/(vt1.c0)) AS REAL), 0.9014213538846307 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(NULLIF(DISTINCT vt0.c0, t1.c67)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c67  WHEN vt1.c0 THEN t1.c67 END)*((t1.c0 IN ()))) INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, t1.c67 COLLATE BINARY, vt0.c0 COLLATE BINARY))>((t1.c0, 751692060, ((t1.c0)LIKE(t1.c0))))) ORDER BY CAST(((NULL)/(vt1.c0)) AS REAL), 0.9014213538846307 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t1 ON ((CASE t1.c67  WHEN vt1.c0 THEN t1.c67 END)*((t1.c0 IN ()))) INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, t1.c67 COLLATE BINARY, vt0.c0 COLLATE BINARY))>((t1.c0, 751692060, ((t1.c0)LIKE(t1.c0))))) WHERE (((vt0.c0)>(NULLIF(DISTINCT vt0.c0, t1.c67)))) ORDER BY CAST(((NULL)/(vt1.c0)) AS REAL), 0.9014213538846307 ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '926754595' DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY '926754595' DESC, NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '926754595' DESC, NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY '926754595' DESC, NULL DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY '926754595' DESC, NULL DESC  NULLS LAST;
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt72.c1 AS BLOB)) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt72.c1 AS BLOB)) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt72);
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt72.c1 AS BLOB)) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt72.c1 AS BLOB)) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, vt1, rt72);
SELECT ALL * FROM vt0, t1, vt1, rt72 WHERE (((t1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt72.c1 AS BLOB)) AND ((~ (vt1.c0)))));
SELECT ALL * FROM rt72 INNER JOIN t1 ON CASE WHEN CAST(t1.c67 AS BLOB) THEN (((vt1.c0))=((rt72.c0))) END INNER JOIN vt1 ON 'rࡽd]Wp[*~' WHERE (((((((rt72.c2)OR(rt72.c1)))OR(CASE WHEN rt72.c2 THEN t1.c67 ELSE rt72.c1 END)))AND(UPPER(rt72.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt72.c2)OR(rt72.c1)))OR(CASE WHEN rt72.c2 THEN t1.c67 ELSE rt72.c1 END)))AND(UPPER(rt72.c0)))) IS TRUE)  as count FROM rt72 INNER JOIN t1 ON CASE WHEN CAST(t1.c67 AS BLOB) THEN (((vt1.c0))==((rt72.c0))) END INNER JOIN vt1 ON 'rࡽd]Wp[*~');
SELECT ALL * FROM rt72 INNER JOIN t1 ON CASE WHEN CAST(t1.c67 AS BLOB) THEN (((vt1.c0))=((rt72.c0))) END INNER JOIN vt1 ON 'rࡽd]Wp[*~' WHERE (((((((rt72.c2)OR(rt72.c1)))OR(CASE WHEN rt72.c2 THEN t1.c67 ELSE rt72.c1 END)))AND(UPPER(rt72.c0))));
SELECT SUM(count) FROM (SELECT ((((((((rt72.c2)OR(rt72.c1)))OR(CASE WHEN rt72.c2 THEN t1.c67 ELSE rt72.c1 END)))AND(UPPER(rt72.c0)))) IS TRUE)  as count FROM rt72 INNER JOIN t1 ON CASE WHEN CAST(t1.c67 AS BLOB) THEN (((vt1.c0))==((rt72.c0))) END INNER JOIN vt1 ON 'rࡽd]Wp[*~');
SELECT ALL * FROM rt72 INNER JOIN t1 ON CASE WHEN CAST(t1.c67 AS BLOB) THEN (((vt1.c0))=((rt72.c0))) END INNER JOIN vt1 ON 'rࡽd]Wp[*~' WHERE (((((((rt72.c2)OR(rt72.c1)))OR(CASE WHEN rt72.c2 THEN t1.c67 ELSE rt72.c1 END)))AND(UPPER(rt72.c0))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(t1.c67)))<(CASE WHEN 0x62b91655 THEN NULL END)) WHERE (CASE ((t1.c67) NOT BETWEEN (t1.c67) AND (t1.c67))  WHEN CAST('' AS BLOB) THEN ABS(DISTINCT t1.c0) END) ORDER BY CASE (+ (x''))  WHEN ((((x'4b31e029')AND(vt1.c0)))OR(t1.c67)) THEN t1.c0 WHEN ((vt1.c0)IS NOT(t1.c67)) THEN (t1.c0 IN ('1795007266', t1.c67)) WHEN ((t1.c67)AND(vt1.c0)) THEN ((t1.c67)<=(t1.c67)) ELSE CAST(t1.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c67) NOT BETWEEN (t1.c67) AND (t1.c67))  WHEN CAST('' AS BLOB) THEN ABS(DISTINCT t1.c0) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(t1.c67)))<(CASE WHEN 0X62b91655 THEN NULL END)) ORDER BY CASE (+ (x''))  WHEN ((((x'4b31e029')AND(vt1.c0)))OR(t1.c67)) THEN t1.c0 WHEN ((vt1.c0)IS NOT(t1.c67)) THEN (t1.c0 IN ('1795007266', t1.c67)) WHEN ((t1.c67)AND(vt1.c0)) THEN ((t1.c67)<=(t1.c67)) ELSE CAST(t1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(t1.c67)))<(CASE WHEN 0x62b91655 THEN NULL END)) WHERE (CASE ((t1.c67) NOT BETWEEN (t1.c67) AND (t1.c67))  WHEN CAST('' AS BLOB) THEN ABS(DISTINCT t1.c0) END) ORDER BY CASE (+ (x''))  WHEN ((((x'4b31e029')AND(vt1.c0)))OR(t1.c67)) THEN t1.c0 WHEN ((vt1.c0)IS NOT(t1.c67)) THEN (t1.c0 IN ('1795007266', t1.c67)) WHEN ((t1.c67)AND(vt1.c0)) THEN ((t1.c67)<=(t1.c67)) ELSE CAST(t1.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c67) NOT BETWEEN (t1.c67) AND (t1.c67))  WHEN CAST('' AS BLOB) THEN ABS(DISTINCT t1.c0) END) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(t1.c67)))<(CASE WHEN 0X62b91655 THEN NULL END)) ORDER BY CASE (+ (x''))  WHEN ((((x'4b31e029')AND(vt1.c0)))OR(t1.c67)) THEN t1.c0 WHEN ((vt1.c0)IS NOT(t1.c67)) THEN (t1.c0 IN ('1795007266', t1.c67)) WHEN ((t1.c67)AND(vt1.c0)) THEN ((t1.c67)<=(t1.c67)) ELSE CAST(t1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt1 ON ((((vt1.c0)IS NOT(t1.c67)))<(CASE WHEN 0x62b91655 THEN NULL END)) WHERE (CASE ((t1.c67) NOT BETWEEN (t1.c67) AND (t1.c67))  WHEN CAST('' AS BLOB) THEN ABS(DISTINCT t1.c0) END) ORDER BY CASE (+ (x''))  WHEN ((((x'4b31e029')AND(vt1.c0)))OR(t1.c67)) THEN t1.c0 WHEN ((vt1.c0)IS NOT(t1.c67)) THEN (t1.c0 IN ('1795007266', t1.c67)) WHEN ((t1.c67)AND(vt1.c0)) THEN ((t1.c67)<=(t1.c67)) ELSE CAST(t1.c0 AS TEXT) END;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.3803857687489359))) AND (((vt1.c0)+(0Xffffffff8e3b687a)))) WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.3803857687489359))) AND (((vt1.c0)+(0Xffffffff8e3b687a)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.3803857687489359))) AND (((vt1.c0)+(0Xffffffff8e3b687a)))) WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)IS NOT(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.3803857687489359))) AND (((vt1.c0)+(0Xffffffff8e3b687a)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.3803857687489359))) AND (((vt1.c0)+(0Xffffffff8e3b687a)))) WHERE (CAST(((vt1.c0)IS NOT(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN (rt72.c2))) ISNULL)) ORDER BY ((rt72.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0 IN (rt72.c2))) ISNULL)) IS TRUE)  as count FROM vt1, rt72, t1 ORDER BY ((rt72.c1 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN (rt72.c2))) ISNULL)) ORDER BY ((rt72.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt72.c0 IN (rt72.c2))) ISNULL)) IS TRUE)  as count FROM vt1, rt72, t1 ORDER BY ((rt72.c1 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt1, rt72, t1 WHERE ((((rt72.c0 IN (rt72.c2))) ISNULL)) ORDER BY ((rt72.c1 COLLATE RTRIM) ISNULL) DESC;
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE (((((((((((((((((rt72.c0)AND(t1.c0)))AND(vt0.c0)))OR(rt72.c0)))AND(1.390595867E9)))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(NULL)))OR(((rt72.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt72.c0)AND(t1.c0)))AND(vt0.c0)))OR(rt72.c0)))AND(1.390595867E9)))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(NULL)))OR(((rt72.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt72);
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE (((((((((((((((((rt72.c0)AND(t1.c0)))AND(vt0.c0)))OR(rt72.c0)))AND(1.390595867E9)))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(NULL)))OR(((rt72.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt72.c0)AND(t1.c0)))AND(vt0.c0)))OR(rt72.c0)))AND(1.390595867E9)))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(NULL)))OR(((rt72.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt72);
SELECT COUNT(*) FROM vt0, t1, rt72 WHERE (((((((((((((((((rt72.c0)AND(t1.c0)))AND(vt0.c0)))OR(rt72.c0)))AND(1.390595867E9)))OR(vt0.c0 COLLATE RTRIM)))AND(vt0.c0)))OR(NULL)))OR(((rt72.c1)<<(vt0.c0)))));
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)IS(vt1.c0)))>>(0.49777041265867505)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))>>(0.49777041265867505))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)IS(vt1.c0)))>>(0.49777041265867505)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))>>(0.49777041265867505))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((((vt1.c0)IS(vt1.c0)))>>(0.49777041265867505)));
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((rt72.c0) NOT NULL) COLLATE RTRIM) ORDER BY 0.5244984198116744;
SELECT SUM(count) FROM (SELECT ((((rt72.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY 0.5244984198116744);
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((rt72.c0) NOT NULL) COLLATE RTRIM) ORDER BY 0.5244984198116744;
SELECT SUM(count) FROM (SELECT ((((rt72.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0, vt1, rt72 ORDER BY 0.5244984198116744);
SELECT COUNT(*) FROM t1, vt0, vt1, rt72 WHERE (((rt72.c0) NOT NULL) COLLATE RTRIM) ORDER BY 0.5244984198116744;
SELECT * FROM rt72, vt0 WHERE ((((((((((vt0.c0)OR(rt72.c0)))AND(vt0.c0)))AND(rt72.c1)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(rt72.c0)))AND(vt0.c0)))AND(rt72.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt72, vt0 WHERE ((((((((((vt0.c0)OR(rt72.c0)))AND(vt0.c0)))AND(rt72.c1)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0)OR(rt72.c0)))AND(vt0.c0)))AND(rt72.c1)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM rt72, vt0 ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC);
SELECT * FROM rt72, vt0 WHERE ((((((((((vt0.c0)OR(rt72.c0)))AND(vt0.c0)))AND(rt72.c1)))AND(vt0.c0)) IN ())) ORDER BY ((vt0.c0)=(vt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))<>((1e500 COLLATE NOCASE, LIKE(vt0.c0, '-1380786241', '0'), ((vt0.c0)*(vt0.c0)))))) ORDER BY ((((x'a2e2')AND((((vt0.c0))<((vt0.c0))))))AND(CAST(0xffffffffc97b5857 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c0)), ((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))!=((1e500 COLLATE NOCASE, LIKE(vt0.c0, '-1380786241', '0'), ((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'a2e2')AND((((vt0.c0))<((vt0.c0))))))AND(CAST(0xffffffffc97b5857 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))<>((1e500 COLLATE NOCASE, LIKE(vt0.c0, '-1380786241', '0'), ((vt0.c0)*(vt0.c0)))))) ORDER BY ((((x'a2e2')AND((((vt0.c0))<((vt0.c0))))))AND(CAST(0xffffffffc97b5857 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN (vt0.c0)), ((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))!=((1e500 COLLATE NOCASE, LIKE(vt0.c0, '-1380786241', '0'), ((vt0.c0)*(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'a2e2')AND((((vt0.c0))<((vt0.c0))))))AND(CAST(0xffffffffc97b5857 AS INTEGER))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0 IN (vt0.c0)), ((vt0.c0)&(vt0.c0)), CAST(vt0.c0 AS NUMERIC)))<>((1e500 COLLATE NOCASE, LIKE(vt0.c0, '-1380786241', '0'), ((vt0.c0)*(vt0.c0)))))) ORDER BY ((((x'a2e2')AND((((vt0.c0))<((vt0.c0))))))AND(CAST(0xffffffffc97b5857 AS INTEGER)));
SELECT COUNT(*) FROM rt72, t1 WHERE (TYPEOF((rt72.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((rt72.c2 IN ()))) IS TRUE)  as count FROM rt72, t1);
SELECT COUNT(*) FROM rt72, t1 WHERE (TYPEOF((rt72.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((rt72.c2 IN ()))) IS TRUE)  as count FROM rt72, t1);
SELECT COUNT(*) FROM rt72, t1 WHERE (TYPEOF((rt72.c2 IN ())));
SELECT * FROM vt1 WHERE ((((+ (-1.245162735E9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (-1.245162735E9))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (-1.245162735E9))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (-1.245162735E9))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (-1.245162735E9))) ISNULL));
SELECT ALL * FROM rt72, vt0, vt1 WHERE (((ABS(DISTINCT 0x6e3769d2)) IS FALSE)) ORDER BY ((((((rt72.c0)) BETWEEN ((vt1.c0)) AND ((rt72.c1)))))==((((vt1.c0)AND(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT 0X6e3769d2)) IS FALSE)) IS TRUE)  as count FROM rt72, vt0, vt1 ORDER BY ((((((rt72.c0)) BETWEEN ((vt1.c0)) AND ((rt72.c1)))))==((((vt1.c0)AND(rt72.c0))))));
SELECT ALL * FROM rt72, vt0, vt1 WHERE (((ABS(DISTINCT 0x6e3769d2)) IS FALSE)) ORDER BY ((((((rt72.c0)) BETWEEN ((vt1.c0)) AND ((rt72.c1)))))==((((vt1.c0)AND(rt72.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT 0X6e3769d2)) IS FALSE)) IS TRUE)  as count FROM rt72, vt0, vt1 ORDER BY ((((((rt72.c0)) BETWEEN ((vt1.c0)) AND ((rt72.c1)))))==((((vt1.c0)AND(rt72.c0))))));
SELECT ALL * FROM rt72, vt0, vt1 WHERE (((ABS(DISTINCT 0x6e3769d2)) IS FALSE)) ORDER BY ((((((rt72.c0)) BETWEEN ((vt1.c0)) AND ((rt72.c1)))))==((((vt1.c0)AND(rt72.c0)))));
SELECT COUNT(*) FROM t1, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ALL ((t1.c67) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (t1.c67);
SELECT SUM(count) FROM (SELECT ALL ((t1.c67) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE (t1.c67);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt72 ON (~ (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c67 WHEN rt72.c0 THEN t1.c0 ELSE t1.c0 END)) LEFT OUTER JOIN t1 ON ((((((((((rt72.c0)AND(rt72.c2)))OR(vt0.c0)))AND(')B?}or32')))OR(rt72.c2))) NOT BETWEEN ((((t1.c0, rt72.c0, rt72.c1, vt1.c0, t1.c67))=((vt0.c0, rt72.c1, vt1.c0, t1.c67, vt1.c0)))) AND ('-1423428474')) INNER JOIN vt1 ON INSTR(CAST(rt72.c0 AS REAL), CAST(vt1.c0 AS INTEGER)) WHERE (((vt1.c0 COLLATE NOCASE)%((((vt1.c0)) BETWEEN ((rt72.c1)) AND ((vt0.c0)))))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((t1.c67)) AND ((rt72.c1)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)%((((vt1.c0)) BETWEEN ((rt72.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt72 ON (~ (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c67 WHEN rt72.c0 THEN t1.c0 ELSE t1.c0 END)) LEFT OUTER JOIN t1 ON ((((((((((rt72.c0)AND(rt72.c2)))OR(vt0.c0)))AND(')B?}or32')))OR(rt72.c2))) NOT BETWEEN ((((t1.c0, rt72.c0, rt72.c1, vt1.c0, t1.c67))=((vt0.c0, rt72.c1, vt1.c0, t1.c67, vt1.c0)))) AND ('-1423428474')) INNER JOIN vt1 ON INSTR(CAST(rt72.c0 AS REAL), CAST(vt1.c0 AS INTEGER)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((t1.c67)) AND ((rt72.c1)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS INTEGER))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt72 ON (~ (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c67 WHEN rt72.c0 THEN t1.c0 ELSE t1.c0 END)) LEFT OUTER JOIN t1 ON ((((((((((rt72.c0)AND(rt72.c2)))OR(vt0.c0)))AND(')B?}or32')))OR(rt72.c2))) NOT BETWEEN ((((t1.c0, rt72.c0, rt72.c1, vt1.c0, t1.c67))=((vt0.c0, rt72.c1, vt1.c0, t1.c67, vt1.c0)))) AND ('-1423428474')) INNER JOIN vt1 ON INSTR(CAST(rt72.c0 AS REAL), CAST(vt1.c0 AS INTEGER)) WHERE (((vt1.c0 COLLATE NOCASE)%((((vt1.c0)) BETWEEN ((rt72.c1)) AND ((vt0.c0)))))) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((t1.c67)) AND ((rt72.c1)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE)%((((vt1.c0)) BETWEEN ((rt72.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt72 ON (~ (CASE WHEN t1.c0 THEN vt0.c0 WHEN vt1.c0 THEN t1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t1.c0 THEN t1.c67 WHEN rt72.c0 THEN t1.c0 ELSE t1.c0 END)) LEFT OUTER JOIN t1 ON ((((((((((rt72.c0)AND(rt72.c2)))OR(vt0.c0)))AND(')B?}or32')))OR(rt72.c2))) NOT BETWEEN ((((t1.c0, rt72.c0, rt72.c1, vt1.c0, t1.c67))=((vt0.c0, rt72.c1, vt1.c0, t1.c67, vt1.c0)))) AND ('-1423428474')) INNER JOIN vt1 ON INSTR(CAST(rt72.c0 AS REAL), CAST(vt1.c0 AS INTEGER)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c0) AND (vt0.c0)) IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((t1.c67)) AND ((rt72.c1)))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS INTEGER))));
SELECT * FROM vt1 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION()) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((SQLITE_VERSION()) ISNULL));
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((((((((vt0.c0)OR(rt72.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY ((((((((CAST(rt72.c0 AS REAL))AND((~ (vt0.c0)))))OR(((((((((rt72.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt72.c2)))AND(rt72.c1)))))OR(((rt72.c1)OR(rt72.c1)))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c0))))) DESC  NULLS LAST, vt1.c0 ASC, ((CASE WHEN vt1.c0 THEN rt72.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c0 THEN rt72.c0 ELSE vt1.c0 END)/(CAST(rt72.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(rt72.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(vt1.c0)))IS(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt72 ORDER BY ((((((((CAST(rt72.c0 AS REAL))AND((~ (vt0.c0)))))OR(((((((((rt72.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt72.c2)))AND(rt72.c1)))))OR(((rt72.c1)OR(rt72.c1)))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c0))))) DESC  NULLS LAST, vt1.c0 ASC, ((CASE WHEN vt1.c0 THEN rt72.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c0 THEN rt72.c0 ELSE vt1.c0 END)/(CAST(rt72.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((((((((vt0.c0)OR(rt72.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY ((((((((CAST(rt72.c0 AS REAL))AND((~ (vt0.c0)))))OR(((((((((rt72.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt72.c2)))AND(rt72.c1)))))OR(((rt72.c1)OR(rt72.c1)))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c0))))) DESC  NULLS LAST, vt1.c0 ASC, ((CASE WHEN vt1.c0 THEN rt72.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c0 THEN rt72.c0 ELSE vt1.c0 END)/(CAST(rt72.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(rt72.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(vt1.c0)))IS(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt72 ORDER BY ((((((((CAST(rt72.c0 AS REAL))AND((~ (vt0.c0)))))OR(((((((((rt72.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt72.c2)))AND(rt72.c1)))))OR(((rt72.c1)OR(rt72.c1)))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c0))))) DESC  NULLS LAST, vt1.c0 ASC, ((CASE WHEN vt1.c0 THEN rt72.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c0 THEN rt72.c0 ELSE vt1.c0 END)/(CAST(rt72.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt72 WHERE (((((((((((vt0.c0)OR(rt72.c0)))OR(rt72.c2)))AND(rt72.c1)))AND(vt1.c0)))IS(((vt1.c0) NOT NULL)))) ORDER BY ((((((((CAST(rt72.c0 AS REAL))AND((~ (vt0.c0)))))OR(((((((((rt72.c1)AND(vt0.c0)))OR(vt0.c0)))AND(rt72.c2)))AND(rt72.c1)))))OR(((rt72.c1)OR(rt72.c1)))))OR((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt72.c0))))) DESC  NULLS LAST, vt1.c0 ASC, ((CASE WHEN vt1.c0 THEN rt72.c0 WHEN rt72.c0 THEN vt1.c0 WHEN rt72.c0 THEN rt72.c0 ELSE vt1.c0 END)/(CAST(rt72.c1 AS REAL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (((((rt72.c0) NOTNULL))|(((rt72.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0) NOTNULL))|(((rt72.c2) IS TRUE)))) IS TRUE)  as count FROM vt1, t1, rt72, vt0);
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (((((rt72.c0) NOTNULL))|(((rt72.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt72.c0) NOTNULL))|(((rt72.c2) IS TRUE)))) IS TRUE)  as count FROM vt1, t1, rt72, vt0);
SELECT COUNT(*) FROM vt1, t1, rt72, vt0 WHERE (((((rt72.c0) NOTNULL))|(((rt72.c2) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))<(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))<(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))<(((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0)))<(((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))<(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((COALESCE(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))>=((NULL, vt0.c0, vt1.c0))))))AND(((vt0.c0)%(vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))>=((NULL, vt0.c0, vt1.c0))))))AND(((vt0.c0)%(vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((COALESCE(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))>=((NULL, vt0.c0, vt1.c0))))))AND(((vt0.c0)%(vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((COALESCE(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))>=((NULL, vt0.c0, vt1.c0))))))AND(((vt0.c0)%(vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((COALESCE(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))>=((NULL, vt0.c0, vt1.c0))))))AND(((vt0.c0)%(vt1.c0)))))OR(vt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1, t1 WHERE ((- (CAST(t1.c67 AS TEXT)))) ORDER BY ((((((vt1.c0)OR(t1.c0)))AND('P'))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c67 AS TEXT)))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((vt1.c0)OR(t1.c0)))AND('P'))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((- (CAST(t1.c67 AS TEXT)))) ORDER BY ((((((vt1.c0)OR(t1.c0)))AND('P'))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CAST(t1.c67 AS TEXT)))) IS TRUE)  as count FROM vt1, t1 ORDER BY ((((((vt1.c0)OR(t1.c0)))AND('P'))) NOT NULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t1 WHERE ((- (CAST(t1.c67 AS TEXT)))) ORDER BY ((((((vt1.c0)OR(t1.c0)))AND('P'))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM rt72 WHERE (0.42658142545976196);
SELECT SUM(count) FROM (SELECT ALL ((0.42658142545976196) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE (0.42658142545976196);
SELECT SUM(count) FROM (SELECT ALL ((0.42658142545976196) IS TRUE)  as count FROM rt72);
SELECT * FROM rt72 WHERE (0.42658142545976196);
SELECT ALL * FROM rt72 INDEXED BY i89 WHERE (CAST(((rt72.c0) IS TRUE) AS BLOB)) ORDER BY CAST(load_extension(rt72.c0, rt72.c2) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt72 INDEXED BY i89 ORDER BY CAST(load_extension(rt72.c0, rt72.c2) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt72 INDEXED BY i89 WHERE (CAST(((rt72.c0) IS TRUE) AS BLOB)) ORDER BY CAST(load_extension(rt72.c0, rt72.c2) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt72.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt72 INDEXED BY i89 ORDER BY CAST(load_extension(rt72.c0, rt72.c2) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1 WHERE (((((0.6473620007840288) BETWEEN (t1.c67) AND (t1.c67))) NOTNULL)) ORDER BY ((((((t1.c0)OR(NULL)))OR((((t1.c67, t1.c67, t1.c67, t1.c0, x''))<=((t1.c0, t1.c67, t1.c0, t1.c67, t1.c0))))))OR(((NULL) NOT BETWEEN (t1.c67) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6473620007840288) BETWEEN (t1.c67) AND (t1.c67))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)OR(NULL)))OR((((t1.c67, t1.c67, t1.c67, t1.c0, x''))<=((t1.c0, t1.c67, t1.c0, t1.c67, t1.c0))))))OR(((NULL) NOT BETWEEN (t1.c67) AND (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((0.6473620007840288) BETWEEN (t1.c67) AND (t1.c67))) NOTNULL)) ORDER BY ((((((t1.c0)OR(NULL)))OR((((t1.c67, t1.c67, t1.c67, t1.c0, x''))<=((t1.c0, t1.c67, t1.c0, t1.c67, t1.c0))))))OR(((NULL) NOT BETWEEN (t1.c67) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.6473620007840288) BETWEEN (t1.c67) AND (t1.c67))) NOTNULL)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c0)OR(NULL)))OR((((t1.c67, t1.c67, t1.c67, t1.c0, x''))<=((t1.c0, t1.c67, t1.c0, t1.c67, t1.c0))))))OR(((NULL) NOT BETWEEN (t1.c67) AND (t1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (((((0.6473620007840288) BETWEEN (t1.c67) AND (t1.c67))) NOTNULL)) ORDER BY ((((((t1.c0)OR(NULL)))OR((((t1.c67, t1.c67, t1.c67, t1.c0, x''))<=((t1.c0, t1.c67, t1.c0, t1.c67, t1.c0))))))OR(((NULL) NOT BETWEEN (t1.c67) AND (t1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (((((((((NULL)AND(((((rt72.c2)OR(t1.c67)))AND(-1.732458497E9)))))OR(rt72.c1)))AND(((t1.c67) NOT BETWEEN (vt1.c0) AND (rt72.c1)))))AND(CAST(NULL AS INTEGER)))) ORDER BY (~ ((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((((rt72.c2)OR(t1.c67)))AND(-1.732458497E9)))))OR(rt72.c1)))AND(((t1.c67) NOT BETWEEN (vt1.c0) AND (rt72.c1)))))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, vt0, rt72 ORDER BY (~ ((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((t1.c67))))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (((((((((NULL)AND(((((rt72.c2)OR(t1.c67)))AND(-1.732458497E9)))))OR(rt72.c1)))AND(((t1.c67) NOT BETWEEN (vt1.c0) AND (rt72.c1)))))AND(CAST(NULL AS INTEGER)))) ORDER BY (~ ((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((t1.c67)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((((rt72.c2)OR(t1.c67)))AND(-1.732458497E9)))))OR(rt72.c1)))AND(((t1.c67) NOT BETWEEN (vt1.c0) AND (rt72.c1)))))AND(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1, t1, vt0, rt72 ORDER BY (~ ((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((t1.c67))))));
SELECT ALL COUNT(*) FROM vt1, t1, vt0, rt72 WHERE (((((((((NULL)AND(((((rt72.c2)OR(t1.c67)))AND(-1.732458497E9)))))OR(rt72.c1)))AND(((t1.c67) NOT BETWEEN (vt1.c0) AND (rt72.c1)))))AND(CAST(NULL AS INTEGER)))) ORDER BY (~ ((((rt72.c1)) BETWEEN ((rt72.c2)) AND ((t1.c67)))));
SELECT * FROM rt72, vt1, vt0 WHERE (CAST((((rt72.c2))=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt72.c2))==((vt0.c0))) AS REAL)) IS TRUE)  as count FROM rt72, vt1, vt0);
SELECT * FROM rt72, vt1, vt0 WHERE (CAST((((rt72.c2))=((vt0.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt72.c2))==((vt0.c0))) AS REAL)) IS TRUE)  as count FROM rt72, vt1, vt0);
SELECT * FROM rt72, vt1, vt0 WHERE (CAST((((rt72.c2))=((vt0.c0))) AS REAL));
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c2 AS INTEGER)) IS TRUE)) ORDER BY (- ((rt72.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt72.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt72 ORDER BY (- ((rt72.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c2 AS INTEGER)) IS TRUE)) ORDER BY (- ((rt72.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt72.c2 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt72 ORDER BY (- ((rt72.c2 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt72 WHERE (((CAST(rt72.c2 AS INTEGER)) IS TRUE)) ORDER BY (- ((rt72.c2 IN ())))  NULLS LAST;
SELECT ALL * FROM t1 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((((((rt72.c1)OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c0)))AND(t1.c67)) THEN ((rt72.c1)OR(vt1.c0)) WHEN CAST(vt0.c0 AS REAL) THEN (t1.c0 IN ()) WHEN ((rt72.c2)>=(t1.c67)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN t1.c0 THEN t1.c0 END END RIGHT OUTER JOIN rt72 ON ((rt72.c0)-(t1.c67)) COLLATE RTRIM INNER JOIN vt0 ON TYPEOF(DISTINCT (~ (t1.c67))) WHERE (((NULL)IS(TYPEOF(DISTINCT t1.c67))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(TYPEOF(DISTINCT t1.c67)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((((((rt72.c1)OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c0)))AND(t1.c67)) THEN ((rt72.c1)OR(vt1.c0)) WHEN CAST(vt0.c0 AS REAL) THEN (t1.c0 IN ()) WHEN ((rt72.c2)>=(t1.c67)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN t1.c0 THEN t1.c0 END END RIGHT OUTER JOIN rt72 ON ((rt72.c0)-(t1.c67)) COLLATE RTRIM INNER JOIN vt0 ON TYPEOF(DISTINCT (~ (t1.c67))));
SELECT ALL * FROM t1 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((((((rt72.c1)OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c0)))AND(t1.c67)) THEN ((rt72.c1)OR(vt1.c0)) WHEN CAST(vt0.c0 AS REAL) THEN (t1.c0 IN ()) WHEN ((rt72.c2)>=(t1.c67)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN t1.c0 THEN t1.c0 END END RIGHT OUTER JOIN rt72 ON ((rt72.c0)-(t1.c67)) COLLATE RTRIM INNER JOIN vt0 ON TYPEOF(DISTINCT (~ (t1.c67))) WHERE (((NULL)IS(TYPEOF(DISTINCT t1.c67))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS(TYPEOF(DISTINCT t1.c67)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt1 ON CASE WHEN ((((((((((((rt72.c1)OR(rt72.c2)))OR(rt72.c1)))OR(rt72.c2)))OR(rt72.c2)))OR(rt72.c0)))AND(t1.c67)) THEN ((rt72.c1)OR(vt1.c0)) WHEN CAST(vt0.c0 AS REAL) THEN (t1.c0 IN ()) WHEN ((rt72.c2)>=(t1.c67)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE WHEN t1.c0 THEN t1.c0 END END RIGHT OUTER JOIN rt72 ON ((rt72.c0)-(t1.c67)) COLLATE RTRIM INNER JOIN vt0 ON TYPEOF(DISTINCT (~ (t1.c67))));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c67))==((t1.c0, vt0.c0, vt0.c0))))) ORDER BY (((vt0.c0 IN ()))IS NOT(((t1.c67)+(t1.c0)))), (((- (t1.c67)))<=(((t1.c67)/(t1.c67))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0, t1.c0, t1.c67))=((t1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0 IN ()))IS NOT(((t1.c67)+(t1.c0)))), (((- (t1.c67)))<=(((t1.c67)/(t1.c67))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c67))==((t1.c0, vt0.c0, vt0.c0))))) ORDER BY (((vt0.c0 IN ()))IS NOT(((t1.c67)+(t1.c0)))), (((- (t1.c67)))<=(((t1.c67)/(t1.c67))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((vt0.c0, t1.c0, t1.c67))=((t1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, t1 ORDER BY (((vt0.c0 IN ()))IS NOT(((t1.c67)+(t1.c0)))), (((- (t1.c67)))<=(((t1.c67)/(t1.c67))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (TRIM((((vt0.c0, t1.c0, t1.c67))==((t1.c0, vt0.c0, vt0.c0))))) ORDER BY (((vt0.c0 IN ()))IS NOT(((t1.c67)+(t1.c0)))), (((- (t1.c67)))<=(((t1.c67)/(t1.c67))))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((NULL)AND(vt1.c0)))AND(vt0.c0)))>>(vt0.c0)) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((NULL)AND(vt1.c0)))AND(vt0.c0)))>>(vt0.c0)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((NULL)AND(vt1.c0)))AND(vt0.c0)))>>(vt0.c0)) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((NULL)AND(vt1.c0)))AND(vt0.c0)))>>(vt0.c0)));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((((((NULL)AND(vt1.c0)))AND(vt0.c0)))>>(vt0.c0)) WHERE (CAST(vt0.c0 COLLATE RTRIM AS REAL));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))) NOT NULL)) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE (((((-1732458497)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'a247' THEN '2092328240' WHEN x'' THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0, ((((vt1.c0) IS FALSE))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((-1732458497)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'a247' THEN '2092328240' WHEN x'' THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c0) IS FALSE))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((-1732458497)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'a247' THEN '2092328240' WHEN x'' THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0, ((((vt1.c0) IS FALSE))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((-1732458497)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'a247' THEN '2092328240' WHEN x'' THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0, ((((vt1.c0) IS FALSE))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((((-1732458497)OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN x'a247' THEN '2092328240' WHEN x'' THEN vt1.c0 END)))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY vt1.c0, ((((vt1.c0) IS FALSE))LIKE(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT COUNT(*) FROM vt0, rt72, vt1 RIGHT OUTER JOIN t1 ON rt72.c0 WHERE ((((rt72.c1, vt0.c0, rt72.c0)) BETWEEN (((rt72.c0 IN ()), vt0.c0 COLLATE BINARY, t1.c0)) AND ((((x'5e97')!=(t1.c67)), ((vt1.c0)>(rt72.c0)), CASE 'puc?ꑖ^'  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1, vt0.c0, rt72.c0)) BETWEEN (((rt72.c0 IN ()), vt0.c0 COLLATE BINARY, t1.c0)) AND ((((x'5e97')<>(t1.c67)), ((vt1.c0)>(rt72.c0)), CASE 'puc?ꑖ^'  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0, rt72, vt1 RIGHT OUTER JOIN t1 ON rt72.c0);
SELECT COUNT(*) FROM vt0, rt72, vt1 RIGHT OUTER JOIN t1 ON rt72.c0 WHERE ((((rt72.c1, vt0.c0, rt72.c0)) BETWEEN (((rt72.c0 IN ()), vt0.c0 COLLATE BINARY, t1.c0)) AND ((((x'5e97')!=(t1.c67)), ((vt1.c0)>(rt72.c0)), CASE 'puc?ꑖ^'  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt72.c1, vt0.c0, rt72.c0)) BETWEEN (((rt72.c0 IN ()), vt0.c0 COLLATE BINARY, t1.c0)) AND ((((x'5e97')<>(t1.c67)), ((vt1.c0)>(rt72.c0)), CASE 'puc?ꑖ^'  WHEN vt1.c0 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt0, rt72, vt1 RIGHT OUTER JOIN t1 ON rt72.c0);
SELECT COUNT(*) FROM vt0, rt72, vt1 RIGHT OUTER JOIN t1 ON rt72.c0 WHERE ((((rt72.c1, vt0.c0, rt72.c0)) BETWEEN (((rt72.c0 IN ()), vt0.c0 COLLATE BINARY, t1.c0)) AND ((((x'5e97')!=(t1.c67)), ((vt1.c0)>(rt72.c0)), CASE 'puc?ꑖ^'  WHEN vt1.c0 THEN vt1.c0 END))));
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((rt72.c2)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2)+((vt0.c0 IN ())))) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((rt72.c2)+((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt72.c2)+((vt0.c0 IN ())))) IS TRUE)  as count FROM rt72, vt1, t1, vt0);
SELECT COUNT(*) FROM rt72, vt1, t1, vt0 WHERE (((rt72.c2)+((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array_length(x'5a32', ((vt0.c0)AND(vt0.c0)))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(x'5a32', ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_array_length(x'5a32', ((vt0.c0)AND(vt0.c0)))) ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(x'5a32', ((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN ()))AND(((vt0.c0) ISNULL))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t1, vt0, rt72, vt1);
SELECT ALL COUNT(*) FROM t1, vt0, rt72, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.24115166643449926)) ORDER BY ((((((((((vt0.c0)=(vt0.c0)))AND(UNLIKELY(vt0.c0))))OR((+ (vt0.c0)))))AND((('PeXT	n䴗<澫') NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.24115166643449926)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)=(vt0.c0)))AND(UNLIKELY(vt0.c0))))OR((+ (vt0.c0)))))AND((('PeXT	n䴗<澫') NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.24115166643449926)) ORDER BY ((((((((((vt0.c0)=(vt0.c0)))AND(UNLIKELY(vt0.c0))))OR((+ (vt0.c0)))))AND((('PeXT	n䴗<澫') NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.24115166643449926)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)=(vt0.c0)))AND(UNLIKELY(vt0.c0))))OR((+ (vt0.c0)))))AND((('PeXT	n䴗<澫') NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELIHOOD(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), 0.24115166643449926)) ORDER BY ((((((((((vt0.c0)=(vt0.c0)))AND(UNLIKELY(vt0.c0))))OR((+ (vt0.c0)))))AND((('PeXT	n䴗<澫') NOT BETWEEN (NULL) AND (vt0.c0)))))OR(vt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS TRUE)))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffff847eec8d WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) IS FALSE), ((1.017989516E9)==(x'')))), (- (((vt1.c0)IS(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)-(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0xffffffff847eec8d WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) IS FALSE), ((1.017989516E9)==(x'')))), (- (((vt1.c0)IS(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS TRUE)))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffff847eec8d WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) IS FALSE), ((1.017989516E9)==(x'')))), (- (((vt1.c0)IS(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)-(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0xffffffff847eec8d WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) IS FALSE), ((1.017989516E9)==(x'')))), (- (((vt1.c0)IS(vt1.c0)))) DESC);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS TRUE)))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0Xffffffff847eec8d WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) IS FALSE), ((1.017989516E9)==(x'')))), (- (((vt1.c0)IS(vt1.c0)))) DESC;
