-- Time: 2024/06/09 22:12:29
-- Database: database24
-- Database version: 3.40.0
-- seed value: 3804910024
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, detail=none); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c4, c3) VALUES (0.5119361726114722, NULL, '0.5119361726114722'), (0Xffffffffdc0db992, 0.9692930006155702, 0.7391189356229446), ('-603080302', 0.5121141322995696, 0x53f845b9); -- 1ms;
PRAGMA main.short_column_names; -- 1ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0, c0)=(NULL, x'', 0.12446364440568769); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c2) VALUES (x'765d', NULL, x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR REPLACE INTO rt0 VALUES (x'', NULL, -603080302, NULL, '1408779705'), (NULL, 0.3307970088103872, '', x'cb18', x''), ('{cU_5Jeo', -6.03080302E8, x'd3e90b38', '', '340743936'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c1) VALUES ('340743936', 0.7598154334339371), (NULL, 0.4515863259136643), (0.6711045640419963, x''), (x'', '\)'), ('1', 'f,DD'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INT ); -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(0.5119361726114722); -- 0ms;
UPDATE t0 SET c0=x'' WHERE ((x'') IS TRUE); -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = false; -- 0ms;
ANALYZE; -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('') WHERE ((((x'')OR('-603080302')))OR(NULL)); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr2 AFTER UPDATE OF c0, c0 ON t0 FOR EACH ROW  BEGIN UPDATE rt0 SET c4=0.12446364440568769 WHERE rt0.c4;END; -- 0ms;
UPDATE rt0 SET c2=0.034203432605655504, c4=NULL; -- 2ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 2ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('340743936'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=('') WHERE ((rt0.c1 COLLATE NOCASE) BETWEEN (NULL) AND (((rt0.c0)LIKE(rt0.c2)))); -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
REINDEX  rt0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 4ms;
ANALYZE; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c4='-809365600'; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=NULL, c4=x''; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END)IS(TRIM(rt0.c3))); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('95049527', NULL) WHERE CAST(((vt0.c1)>=(vt0.c1)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt1(vt1) VALUES('merge=-1568778620,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1783723457); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 95049527);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'vt0', '-603080302 0 unordered'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET c0='0.5119361726114722'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((- (rt0.c1)))AND((('243101875') BETWEEN (vt0.c0) AND (rt0.c1)))))AND('{CU_5JEO'))) ORDER BY (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c1))))>=((CAST(t0.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c1)))AND((('243101875') BETWEEN (vt0.c0) AND (rt0.c1)))))AND('{CU_5JEO'))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c1))))>=((CAST(t0.c0 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((- (rt0.c1)))AND((('243101875') BETWEEN (vt0.c0) AND (rt0.c1)))))AND('{CU_5JEO'))) ORDER BY (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c1))))>=((CAST(t0.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c1)))AND((('243101875') BETWEEN (vt0.c0) AND (rt0.c1)))))AND('{CU_5JEO'))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c1))))>=((CAST(t0.c0 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((((((- (rt0.c1)))AND((('243101875') BETWEEN (vt0.c0) AND (rt0.c1)))))AND('{CU_5JEO'))) ORDER BY (((((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt0.c1))))>=((CAST(t0.c0 AS INTEGER)))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) IS TRUE) WHERE ((((rt0.c1)%(rt0.c1)) IN (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)%(rt0.c1)) IN (rt0.c4))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) IS TRUE) WHERE ((((rt0.c1)%(rt0.c1)) IN (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)%(rt0.c1)) IN (rt0.c4))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON (((rt0.c3 IN ())) IS TRUE) WHERE ((((rt0.c1)%(rt0.c1)) IN (rt0.c4)));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE(0.9921824089958362, vt1.c0)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.9921824089958362, vt1.c0)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE(0.9921824089958362, vt1.c0)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(0.9921824089958362, vt1.c0)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE(0.9921824089958362, vt1.c0)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((rt0.c2) NOT NULL), CAST(rt0.c1 AS NUMERIC), (((x'b248'))>((rt0.c0)))))<((((x'')<=(rt0.c4)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN 0.3520178291055003 THEN rt0.c0 END))) CROSS JOIN rt0 ON rt0.c4 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0)/(rt0.c4)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((rt0.c2) NOT NULL), CAST(rt0.c1 AS NUMERIC), (((x'b248'))>((rt0.c0)))))<((((x'')<=(rt0.c4)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN 0.3520178291055003 THEN rt0.c0 END))) CROSS JOIN rt0 ON rt0.c4 ORDER BY CAST(((vt0.c0)/(rt0.c4)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((rt0.c2) NOT NULL), CAST(rt0.c1 AS NUMERIC), (((x'b248'))>((rt0.c0)))))<((((x'')<=(rt0.c4)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN 0.3520178291055003 THEN rt0.c0 END))) CROSS JOIN rt0 ON rt0.c4 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0)/(rt0.c4)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((((rt0.c2) NOT NULL), CAST(rt0.c1 AS NUMERIC), (((x'b248'))>((rt0.c0)))))<((((x'')<=(rt0.c4)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN 0.3520178291055003 THEN rt0.c0 END))) CROSS JOIN rt0 ON rt0.c4 ORDER BY CAST(((vt0.c0)/(rt0.c4)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON (((((rt0.c2) NOT NULL), CAST(rt0.c1 AS NUMERIC), (((x'b248'))>((rt0.c0)))))<((((x'')<=(rt0.c4)), (rt0.c1 IN ()), CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN 0.3520178291055003 THEN rt0.c0 END))) CROSS JOIN rt0 ON rt0.c4 WHERE (vt1.c0) ORDER BY CAST(((vt0.c0)/(rt0.c4)) AS NUMERIC);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))==(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))==(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))==(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))==(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0)))==(((vt1.c0) ISNULL))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (~ ((((vt0.c1))>=((rt0.c0))))) WHERE (((((0.9799528958257759)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9799528958257759)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (~ ((((vt0.c1))>=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (~ ((((vt0.c1))>=((rt0.c0))))) WHERE (((((0.9799528958257759)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0.9799528958257759)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (~ ((((vt0.c1))>=((rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON (~ ((((vt0.c1))>=((rt0.c0))))) WHERE (((((0.9799528958257759)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((('')GLOB(rt0.c0)) IN (((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))OR(NULL)))OR(t0.c0)), ((((((((rt0.c3)AND('jS{࿿Q%6Z')))AND(vt0.c1)))AND(rt0.c4)))AND(vt1.c0)))) CROSS JOIN vt1 ON ((CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(t0.c0 AS REAL))) RIGHT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c4, vt1.c0)) BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c3, rt0.c3, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END) AND ('')) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('')GLOB(rt0.c0)) IN (((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))OR(NULL)))OR(t0.c0)), ((((((((rt0.c3)AND('jS{࿿Q%6Z')))AND(vt0.c1)))AND(rt0.c4)))AND(vt1.c0)))) CROSS JOIN vt1 ON ((CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(t0.c0 AS REAL))) RIGHT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c4, vt1.c0)) BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c3, rt0.c3, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END) AND ('')));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((('')GLOB(rt0.c0)) IN (((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))OR(NULL)))OR(t0.c0)), ((((((((rt0.c3)AND('jS{࿿Q%6Z')))AND(vt0.c1)))AND(rt0.c4)))AND(vt1.c0)))) CROSS JOIN vt1 ON ((CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(t0.c0 AS REAL))) RIGHT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c4, vt1.c0)) BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c3, rt0.c3, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END) AND ('')) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((('')GLOB(rt0.c0)) IN (((((((((rt0.c0)OR(vt0.c1)))OR(rt0.c2)))OR(NULL)))OR(t0.c0)), ((((((((rt0.c3)AND('jS{࿿Q%6Z')))AND(vt0.c1)))AND(rt0.c4)))AND(vt1.c0)))) CROSS JOIN vt1 ON ((CASE rt0.c4  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)GLOB(CAST(t0.c0 AS REAL))) RIGHT OUTER JOIN rt0 ON (((((vt0.c0, rt0.c4, vt1.c0)) BETWEEN ((rt0.c2, rt0.c3, t0.c0)) AND ((rt0.c3, rt0.c3, vt0.c1)))) NOT BETWEEN (CASE WHEN rt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c0 END) AND ('')));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((t0.c0) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((((vt0.c0)-(rt0.c2)))AND(((vt0.c1)+(rt0.c2)))))AND((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((((vt0.c0)-(rt0.c2)))AND(((vt0.c1)+(rt0.c2)))))AND((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((t0.c0) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((((vt0.c0)-(rt0.c2)))AND(((vt0.c1)+(rt0.c2)))))AND((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((((vt0.c0)-(rt0.c2)))AND(((vt0.c1)+(rt0.c2)))))AND((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (((((t0.c0) NOT NULL))OR(CAST(vt0.c1 AS NUMERIC)))) ORDER BY ((((((vt0.c0)-(rt0.c2)))AND(((vt0.c1)+(rt0.c2)))))AND((((vt1.c0)) BETWEEN (('')) AND ((vt1.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY x''  NULLS FIRST;
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT ('0.9921824089958362' IN (rt0.c1, '')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ('0.9921824089958362' IN (rt0.c1, '')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT ('0.9921824089958362' IN (rt0.c1, '')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ('0.9921824089958362' IN (rt0.c1, '')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT ('0.9921824089958362' IN (rt0.c1, '')), ((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((('-1136269076') BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)GLOB(vt1.c0)))))OR('\rwFX-o')))AND((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('-1136269076') BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)GLOB(vt1.c0)))))OR('\rwFX-o')))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((('-1136269076') BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)GLOB(vt1.c0)))))OR('\rwFX-o')))AND((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((('-1136269076') BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)GLOB(vt1.c0)))))OR('\rwFX-o')))AND((~ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((('-1136269076') BETWEEN (vt1.c0) AND (vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)GLOB(vt1.c0)))))OR('\rwFX-o')))AND((~ (vt1.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('ezb릒F38_')))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(-1.56877862E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('ezb릒F38_')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(-1.56877862E9))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('ezb릒F38_')))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(-1.56877862E9))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('ezb릒F38_')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(-1.56877862E9))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('ezb릒F38_')))) ORDER BY ((((((((((((vt0.c1)OR(vt0.c0)))AND(rt0.c2)))OR(rt0.c3)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(-1.56877862E9))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (((rt0.c3) IS TRUE)) AND ((rt0.c3 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER)) BETWEEN (((rt0.c3) IS TRUE)) AND ((rt0.c3 IN (NULL))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (((rt0.c3) IS TRUE)) AND ((rt0.c3 IN (NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS INTEGER)) BETWEEN (((rt0.c3) IS TRUE)) AND ((rt0.c3 IN (NULL))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((CAST(NULL AS INTEGER)) BETWEEN (((rt0.c3) IS TRUE)) AND ((rt0.c3 IN (NULL)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3 COLLATE NOCASE))<=((((rt0.c2)*(rt0.c4)))))) ORDER BY ((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE NOCASE))<=((((rt0.c2)*(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3 COLLATE NOCASE))<=((((rt0.c2)*(rt0.c4)))))) ORDER BY ((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE NOCASE))<=((((rt0.c2)*(rt0.c4)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c3 COLLATE NOCASE))<=((((rt0.c2)*(rt0.c4)))))) ORDER BY ((CAST(rt0.c3 AS BLOB)) BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND (((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND ((((vt0.c1))<((x'')))))) ORDER BY ((((vt1.c0)||('1276807731')))IS(((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND ((((vt0.c1))<((x'')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)||('1276807731')))IS(((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND ((((vt0.c1))<((x'')))))) ORDER BY ((((vt1.c0)||('1276807731')))IS(((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND ((((vt0.c1))<((x'')))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)||('1276807731')))IS(((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND ((((vt0.c1))<((x'')))))) ORDER BY ((((vt1.c0)||('1276807731')))IS(((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL IN (vt0.c1, vt0.c0))) NOT BETWEEN (((rt0.c3)>(rt0.c1))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c1, vt0.c0))) NOT BETWEEN (((rt0.c3)>(rt0.c1))) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL IN (vt0.c1, vt0.c0))) NOT BETWEEN (((rt0.c3)>(rt0.c1))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((((NULL IN (vt0.c1, vt0.c0))) NOT BETWEEN (((rt0.c3)>(rt0.c1))) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((NULL IN (vt0.c1, vt0.c0))) NOT BETWEEN (((rt0.c3)>(rt0.c1))) AND (rt0.c3)));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (ABS((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (ABS((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((ABS((rt0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (ABS((rt0.c2 IN ())));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)!=(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)!=(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)!=(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)!=(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)!=(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('1574644041')))))AND(((t0.c0)<<(t0.c0))))) ORDER BY ((((t0.c0)||(t0.c0))) BETWEEN ((~ (t0.c0))) AND ((- (t0.c0)))) DESC, ((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((x''))))))OR((('읜|') NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('1574644041')))))AND(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c0))) BETWEEN ((~ (t0.c0))) AND ((- (t0.c0)))) DESC, ((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((x''))))))OR((('읜|') NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('1574644041')))))AND(((t0.c0)<<(t0.c0))))) ORDER BY ((((t0.c0)||(t0.c0))) BETWEEN ((~ (t0.c0))) AND ((- (t0.c0)))) DESC, ((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((x''))))))OR((('읜|') NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('1574644041')))))AND(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)||(t0.c0))) BETWEEN ((~ (t0.c0))) AND ((- (t0.c0)))) DESC, ((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((x''))))))OR((('읜|') NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(((((t0.c0)AND(t0.c0)))OR('1574644041')))))AND(((t0.c0)<<(t0.c0))))) ORDER BY ((((t0.c0)||(t0.c0))) BETWEEN ((~ (t0.c0))) AND ((- (t0.c0)))) DESC, ((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((x''))))))OR((('읜|') NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 END) ISNULL) INNER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN vt0 ON (~ (UNLIKELY(DISTINCT rt0.c4))) WHERE (IFNULL(DISTINCT HEX(vt1.c0), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT HEX(vt1.c0), NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 END) ISNULL) INNER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN vt0 ON (~ (UNLIKELY(DISTINCT rt0.c4))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 END) ISNULL) INNER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN vt0 ON (~ (UNLIKELY(DISTINCT rt0.c4))) WHERE (IFNULL(DISTINCT HEX(vt1.c0), NULL));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT HEX(vt1.c0), NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 END) ISNULL) INNER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN vt0 ON (~ (UNLIKELY(DISTINCT rt0.c4))));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c3 END) ISNULL) INNER JOIN rt0 ON (CASE rt0.c2  WHEN t0.c0 THEN rt0.c4 ELSE rt0.c3 END IN ()) RIGHT OUTER JOIN vt0 ON (~ (UNLIKELY(DISTINCT rt0.c4))) WHERE (IFNULL(DISTINCT HEX(vt1.c0), NULL));
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) ORDER BY (((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))) NOT NULL) DESC, ((((LIKELIHOOD(t0.c0, 0.8196767911478314))OR(t0.c0)))OR(((t0.c0)>(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))) NOT NULL) DESC, ((((LIKELIHOOD(t0.c0, 0.8196767911478314))OR(t0.c0)))OR(((t0.c0)>(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) ORDER BY (((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))) NOT NULL) DESC, ((((LIKELIHOOD(t0.c0, 0.8196767911478314))OR(t0.c0)))OR(((t0.c0)>(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))) NOT NULL) DESC, ((((LIKELIHOOD(t0.c0, 0.8196767911478314))OR(t0.c0)))OR(((t0.c0)>(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC)) ORDER BY (((((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0)))) NOT NULL) DESC, ((((LIKELIHOOD(t0.c0, 0.8196767911478314))OR(t0.c0)))OR(((t0.c0)>(t0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'') ORDER BY (+ (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) NOT NULL))) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (+ (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1) NOT NULL))) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (+ (((vt0.c1) NOT NULL))) DESC;
SELECT ALL * FROM rt0 WHERE (((NOT (rt0.c2)) IN (IFNULL(rt0.c3, rt0.c1)))) ORDER BY 919582576 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN (IFNULL(rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY 919582576 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((NOT (rt0.c2)) IN (IFNULL(rt0.c3, rt0.c1)))) ORDER BY 919582576 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN (IFNULL(rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY 919582576 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END) NOTNULL) RIGHT OUTER JOIN vt1 ON (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END) NOTNULL) RIGHT OUTER JOIN vt1 ON (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END) NOTNULL) RIGHT OUTER JOIN vt1 ON (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END) NOTNULL) RIGHT OUTER JOIN vt1 ON (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END) NOTNULL) RIGHT OUTER JOIN vt1 ON (- (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END)) WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LIKELY(1711275245))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND((('1446790478') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LIKELY(1711275245))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)AND((('1446790478') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LIKELY(1711275245))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND((('1446790478') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LIKELY(1711275245))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 COLLATE RTRIM)AND((('1446790478') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(LIKELY(1711275245))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND((('1446790478') NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((- (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 0Xffffffff854a5998 CROSS JOIN t0 ON (((((rt0.c0)+(vt0.c1))))!=((((((((((vt1.c0)OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))))) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS REAL)) ORDER BY HEX(DISTINCT x'') DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<((rt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON 0Xffffffff854a5998 CROSS JOIN t0 ON (((((rt0.c0)+(vt0.c1))))<>((((((((((vt1.c0)OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))))) ORDER BY HEX(DISTINCT x'') DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 0Xffffffff854a5998 CROSS JOIN t0 ON (((((rt0.c0)+(vt0.c1))))!=((((((((((vt1.c0)OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))))) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS REAL)) ORDER BY HEX(DISTINCT x'') DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0))<((rt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON 0Xffffffff854a5998 CROSS JOIN t0 ON (((((rt0.c0)+(vt0.c1))))<>((((((((((vt1.c0)OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))))) ORDER BY HEX(DISTINCT x'') DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON 0Xffffffff854a5998 CROSS JOIN t0 ON (((((rt0.c0)+(vt0.c1))))!=((((((((((vt1.c0)OR(rt0.c0)))AND(vt0.c1)))OR(rt0.c4)))OR(vt0.c1))))) WHERE (CAST((((rt0.c0))<((rt0.c0))) AS REAL)) ORDER BY HEX(DISTINCT x'') DESC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((x'd4b8')+(NULL)) AS BLOB) WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE 0.5213652961716498  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE t0.c0 END)) AND ((x''))) DESC  NULLS FIRST, (((0.1018541384672561)) NOT BETWEEN ((((t0.c0)=(vt1.c0)))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((x'd4b8')+(NULL)) AS BLOB) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE 0.5213652961716498  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE t0.c0 END)) AND ((x''))) DESC  NULLS FIRST, (((0.1018541384672561)) NOT BETWEEN ((((t0.c0)==(vt1.c0)))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((x'd4b8')+(NULL)) AS BLOB) WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE 0.5213652961716498  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE t0.c0 END)) AND ((x''))) DESC  NULLS FIRST, (((0.1018541384672561)) NOT BETWEEN ((((t0.c0)=(vt1.c0)))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((x'd4b8')+(NULL)) AS BLOB) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE 0.5213652961716498  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE t0.c0 END)) AND ((x''))) DESC  NULLS FIRST, (((0.1018541384672561)) NOT BETWEEN ((((t0.c0)==(vt1.c0)))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt1 ON CAST(((x'd4b8')+(NULL)) AS BLOB) WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY (((t0.c0)) NOT BETWEEN ((CASE 0.5213652961716498  WHEN t0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN NULL ELSE t0.c0 END)) AND ((x''))) DESC  NULLS FIRST, (((0.1018541384672561)) NOT BETWEEN ((((t0.c0)=(vt1.c0)))) AND (((vt1.c0 IN (vt1.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<<(0.6343263829604752)) CROSS JOIN rt0 ON ((((TOTAL_CHANGES())OR(((vt1.c0) NOT NULL))))AND((rt0.c1 IN ()))) WHERE (((((rt0.c1)>=(rt0.c0)))*(((((rt0.c0)OR('-603080302')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0)))*(((((rt0.c0)OR('-603080302')))OR(rt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<<(0.6343263829604752)) CROSS JOIN rt0 ON ((((TOTAL_CHANGES())OR(((vt1.c0) NOT NULL))))AND((rt0.c1 IN ()))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<<(0.6343263829604752)) CROSS JOIN rt0 ON ((((TOTAL_CHANGES())OR(((vt1.c0) NOT NULL))))AND((rt0.c1 IN ()))) WHERE (((((rt0.c1)>=(rt0.c0)))*(((((rt0.c0)OR('-603080302')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>=(rt0.c0)))*(((((rt0.c0)OR('-603080302')))OR(rt0.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<<(0.6343263829604752)) CROSS JOIN rt0 ON ((((TOTAL_CHANGES())OR(((vt1.c0) NOT NULL))))AND((rt0.c1 IN ()))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON (rt0.c0 IN ()) COLLATE BINARY LEFT OUTER JOIN vt0 ON ((vt0.c0 COLLATE BINARY)<<(0.6343263829604752)) CROSS JOIN rt0 ON ((((TOTAL_CHANGES())OR(((vt1.c0) NOT NULL))))AND((rt0.c1 IN ()))) WHERE (((((rt0.c1)>=(rt0.c0)))*(((((rt0.c0)OR('-603080302')))OR(rt0.c0)))));
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ORDER BY CAST(LIKELIHOOD(t0.c0, 0.45042387728924804) AS BLOB), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(LIKELIHOOD(t0.c0, 0.45042387728924804) AS BLOB), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ORDER BY CAST(LIKELIHOOD(t0.c0, 0.45042387728924804) AS BLOB), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY CAST(LIKELIHOOD(t0.c0, 0.45042387728924804) AS BLOB), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS REAL)) ORDER BY CAST(LIKELIHOOD(t0.c0, 0.45042387728924804) AS BLOB), ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((t0.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c3 END) NOT NULL) WHERE (919582576) ORDER BY 1.711275245E9 COLLATE BINARY ASC  NULLS FIRST, rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((919582576) IS TRUE)  as count FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c3 END) NOT NULL) ORDER BY 1.711275245E9 COLLATE BINARY ASC  NULLS FIRST, rt0.c3 DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c3 END) NOT NULL) WHERE (919582576) ORDER BY 1.711275245E9 COLLATE BINARY ASC  NULLS FIRST, rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL ((919582576) IS TRUE)  as count FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c3 END) NOT NULL) ORDER BY 1.711275245E9 COLLATE BINARY ASC  NULLS FIRST, rt0.c3 DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 FULL OUTER JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c3 END) NOT NULL) WHERE (919582576) ORDER BY 1.711275245E9 COLLATE BINARY ASC  NULLS FIRST, rt0.c3 DESC;
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((rt0.c0)%(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((rt0.c0)%(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)%(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((rt0.c0)%(rt0.c2))) NOT BETWEEN ((NOT (rt0.c2))) AND (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((NOT (vt0.c1)));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((~ (rt0.c4)) IN ()) INNER JOIN vt1 ON NULL WHERE ((((CASE WHEN rt0.c2 THEN rt0.c4 END))!=((((vt0.c0)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c4 END))!=((((vt0.c0)IS(vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((~ (rt0.c4)) IN ()) INNER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((~ (rt0.c4)) IN ()) INNER JOIN vt1 ON NULL WHERE ((((CASE WHEN rt0.c2 THEN rt0.c4 END))!=((((vt0.c0)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c4 END))!=((((vt0.c0)IS(vt0.c1)))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN rt0 ON ((~ (rt0.c4)) IN ()) INNER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN rt0 ON ((~ (rt0.c4)) IN ()) INNER JOIN vt1 ON NULL WHERE ((((CASE WHEN rt0.c2 THEN rt0.c4 END))!=((((vt0.c0)IS(vt0.c1))))));
SELECT * FROM vt1 WHERE ((STRFTIME(vt1.c0, vt1.c0, vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(vt1.c0, vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((STRFTIME(vt1.c0, vt1.c0, vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((STRFTIME(vt1.c0, vt1.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((STRFTIME(vt1.c0, vt1.c0, vt1.c0) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1)) IS TRUE)) ORDER BY (CAST(vt0.c0 AS REAL) IN ()), (((+ (vt0.c0)))*(vt0.c1));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ()), (((+ (vt0.c0)))*(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1)) IS TRUE)) ORDER BY (CAST(vt0.c0 AS REAL) IN ()), (((+ (vt0.c0)))*(vt0.c1));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS REAL) IN ()), (((+ (vt0.c0)))*(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1)) IS TRUE)) ORDER BY (CAST(vt0.c0 AS REAL) IN ()), (((+ (vt0.c0)))*(vt0.c1));
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<=((HEX(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE RTRIM))<=((HEX(rt0.c2))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<=((HEX(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE RTRIM))<=((HEX(rt0.c2))))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((((rt0.c3 COLLATE RTRIM))<=((HEX(rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((('-809365600')>(((rt0.c4) NOTNULL)))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-809365600')>(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((('-809365600')>(((rt0.c4) NOTNULL)))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('-809365600')>(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((('-809365600')>(((rt0.c4) NOTNULL)))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (0.4869361073261744 COLLATE BINARY) ORDER BY (CASE t0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((rt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4869361073261744 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (CASE t0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((rt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (0.4869361073261744 COLLATE BINARY) ORDER BY (CASE t0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((rt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4869361073261744 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (CASE t0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((rt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (0.4869361073261744 COLLATE BINARY) ORDER BY (CASE t0.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((rt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(0.24724125543747966 AS NUMERIC)) AND ((NOT (vt0.c1)))) WHERE (0x53f845b9) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X53f845b9) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(0.24724125543747966 AS NUMERIC)) AND ((NOT (vt0.c1)))) ORDER BY vt0.c1 DESC);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(0.24724125543747966 AS NUMERIC)) AND ((NOT (vt0.c1)))) WHERE (0x53f845b9) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((0X53f845b9) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(0.24724125543747966 AS NUMERIC)) AND ((NOT (vt0.c1)))) ORDER BY vt0.c1 DESC);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) NOT BETWEEN (CAST(0.24724125543747966 AS NUMERIC)) AND ((NOT (vt0.c1)))) WHERE (0x53f845b9) ORDER BY vt0.c1 DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (JULIANDAY(vt0.c1, (~ (vt0.c1)), json_insert(rt0.c3, rt0.c0, rt0.c0, rt0.c4, 'v_ub*5W(', rt0.c1, rt0.c3))) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(vt0.c1, (~ (vt0.c1)), json_insert(rt0.c3, rt0.c0, rt0.c0, rt0.c4, 'v_ub*5W(', rt0.c1, rt0.c3))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (rt0.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (JULIANDAY(vt0.c1, (~ (vt0.c1)), json_insert(rt0.c3, rt0.c0, rt0.c0, rt0.c4, 'v_ub*5W(', rt0.c1, rt0.c3))) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(vt0.c1, (~ (vt0.c1)), json_insert(rt0.c3, rt0.c0, rt0.c0, rt0.c4, 'v_ub*5W(', rt0.c1, rt0.c3))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (- (rt0.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (JULIANDAY(vt0.c1, (~ (vt0.c1)), json_insert(rt0.c3, rt0.c0, rt0.c0, rt0.c4, 'v_ub*5W(', rt0.c1, rt0.c3))) ORDER BY (- (rt0.c3)) COLLATE NOCASE;
SELECT * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c4 COLLATE NOCASE AS TEXT));
SELECT ALL * FROM t0 INNER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c0)&(t0.c0)))OR(vt0.c1)))OR(NULL)))AND(((vt0.c1)<<(t0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY json(((t0.c0)||(NULL))) DESC  NULLS LAST, (((vt0.c1 COLLATE NOCASE))==((((vt0.c0)%(vt0.c0)))))  NULLS LAST, '/o7]';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)&(t0.c0)))OR(vt0.c1)))OR(NULL)))AND(((vt0.c1)<<(t0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) ORDER BY json(((t0.c0)||(NULL))) DESC  NULLS LAST, (((vt0.c1 COLLATE NOCASE))==((((vt0.c0)%(vt0.c0)))))  NULLS LAST, '/o7]');
SELECT ALL * FROM t0 INNER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c0)&(t0.c0)))OR(vt0.c1)))OR(NULL)))AND(((vt0.c1)<<(t0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY json(((t0.c0)||(NULL))) DESC  NULLS LAST, (((vt0.c1 COLLATE NOCASE))==((((vt0.c0)%(vt0.c0)))))  NULLS LAST, '/o7]';
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)&(t0.c0)))OR(vt0.c1)))OR(NULL)))AND(((vt0.c1)<<(t0.c0)))))OR(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) ORDER BY json(((t0.c0)||(NULL))) DESC  NULLS LAST, (((vt0.c1 COLLATE NOCASE))==((((vt0.c0)%(vt0.c0)))))  NULLS LAST, '/o7]');
SELECT ALL * FROM t0 INNER JOIN vt0 ON (NOT (CAST(vt0.c1 AS NUMERIC))) WHERE (((((((((((vt0.c0)&(t0.c0)))OR(vt0.c1)))OR(NULL)))AND(((vt0.c1)<<(t0.c0)))))OR(((vt0.c0) NOT NULL)))) ORDER BY json(((t0.c0)||(NULL))) DESC  NULLS LAST, (((vt0.c1 COLLATE NOCASE))==((((vt0.c0)%(vt0.c0)))))  NULLS LAST, '/o7]';
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(LIKELIHOOD(vt0.c0, 0.8312303289840607))))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((vt0.c1 IN ())))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(LIKELIHOOD(vt0.c0, 0.8312303289840607))))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(LIKELIHOOD(vt0.c0, 0.8312303289840607))))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((vt0.c1 IN ())))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(LIKELIHOOD(vt0.c0, 0.8312303289840607))))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c0)OR(vt0.c0)))AND(t0.c0)))OR(LIKELIHOOD(vt0.c0, 0.8312303289840607))))OR(vt0.c0)))AND(((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((vt0.c1 IN ())))) ORDER BY (((t0.c0)) BETWEEN (((- (t0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>((+ (1016242958)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)>((+ (1016242958))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>((+ (1016242958)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)>((+ (1016242958))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE RTRIM)>((+ (1016242958)))));
SELECT COUNT(*) FROM rt0 WHERE (('EsQ(#*)uE' IN ()));
SELECT SUM(count) FROM (SELECT ((('EsQ(#*)uE' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('EsQ(#*)uE' IN ()));
SELECT SUM(count) FROM (SELECT ((('EsQ(#*)uE' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('EsQ(#*)uE' IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS REAL))))AND(NULL)))OR((((vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((x'')AND(vt0.c1)))))OR((((vt0.c1))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS REAL))))AND(NULL)))OR((((vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((x'')AND(vt0.c1)))))OR((((vt0.c1))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS REAL))))AND(NULL)))OR((((vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((x'')AND(vt0.c1)))))OR((((vt0.c1))<=((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS REAL))))AND(NULL)))OR((((vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((x'')AND(vt0.c1)))))OR((((vt0.c1))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((((((vt0.c1) NOT BETWEEN (x'') AND (vt0.c1)))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS REAL))))AND(NULL)))OR((((vt0.c1, vt0.c1, NULL))<=((vt0.c0, vt0.c0, vt0.c0))))))AND(((x'')AND(vt0.c1)))))OR((((vt0.c1))<=((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))GLOB(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))GLOB(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))GLOB(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))GLOB(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (CASE ''  WHEN vt1.c0 COLLATE NOCASE THEN TRIM(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((('esq(#*)ue')AND(vt1.c0)))OR(NULL)) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((('1446790478', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, ''))) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) END) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ()) ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN vt1.c0 COLLATE NOCASE THEN TRIM(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((('esq(#*)ue')AND(vt1.c0)))OR(NULL)) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((('1446790478', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, ''))) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ()) ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE ''  WHEN vt1.c0 COLLATE NOCASE THEN TRIM(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((('esq(#*)ue')AND(vt1.c0)))OR(NULL)) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((('1446790478', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, ''))) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) END) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ()) ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ''  WHEN vt1.c0 COLLATE NOCASE THEN TRIM(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((('esq(#*)ue')AND(vt1.c0)))OR(NULL)) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((('1446790478', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, ''))) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ()) ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CASE ''  WHEN vt1.c0 COLLATE NOCASE THEN TRIM(vt1.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE NOCASE WHEN (((('esq(#*)ue')AND(vt1.c0)))OR(NULL)) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((('1446790478', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, ''))) WHEN (vt1.c0 IN ()) THEN (~ (vt1.c0)) END) ORDER BY (CAST(vt1.c0 AS NUMERIC) IN ()) ASC, ((CASE WHEN vt1.c0 THEN vt1.c0 END) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(0.37856901332624293 AS NUMERIC) IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '-1905842283' THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT NULL) THEN ((NULL)AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.37856901332624293 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '-1905842283' THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT NULL) THEN ((NULL)AND(vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(0.37856901332624293 AS NUMERIC) IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '-1905842283' THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT NULL) THEN ((NULL)AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.37856901332624293 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '-1905842283' THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT NULL) THEN ((NULL)AND(vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((CAST(0.37856901332624293 AS NUMERIC) IN ())) ORDER BY CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (vt1.c0 IN ()) WHEN '-1905842283' THEN ((vt1.c0) NOTNULL) WHEN ((vt1.c0) NOT NULL) THEN ((NULL)AND(vt1.c0)) END ASC;
SELECT * FROM t0 INNER JOIN vt0 ON 9.5049527E7 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)<(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) END WHERE (((LTRIM(rt0.c1, rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1, rt0.c1)) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON 9.5049527E7 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)<(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT * FROM t0 INNER JOIN vt0 ON 9.5049527E7 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)<(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) END WHERE (((LTRIM(rt0.c1, rt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1, rt0.c1)) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON 9.5049527E7 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)<(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) END);
SELECT * FROM t0 INNER JOIN vt0 ON 9.5049527E7 LEFT OUTER JOIN rt0 ON CASE WHEN ((rt0.c0)<(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) END WHERE (((LTRIM(rt0.c1, rt0.c1)) IS FALSE));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9136917337042083 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c1))) IN ()) DESC, ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)==(((rt0.c3)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9136917337042083 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c1))) IN ()) DESC, ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)=(((rt0.c3)*(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9136917337042083 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c1))) IN ()) DESC, ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)==(((rt0.c3)*(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9136917337042083 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c1))) IN ()) DESC, ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)=(((rt0.c3)*(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN 0.9136917337042083 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c4 END))<((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY ((((vt0.c0, vt1.c0, vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0, vt0.c1, rt0.c1)) AND ((vt0.c0, vt0.c0, rt0.c4, rt0.c1, rt0.c1))) IN ()) DESC, ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 END)==(((rt0.c3)*(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (((('1239375511')AND(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY TRIM(NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN (((('1239375511')AND(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY TRIM(NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (((('1239375511')AND(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY TRIM(NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN ())  WHEN (((('1239375511')AND(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY TRIM(NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (((('1239375511')AND(t0.c0)))AND(t0.c0)) THEN ((((t0.c0)AND(t0.c0)))AND(t0.c0)) END) ORDER BY TRIM(NULL, ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((t0.c0)/(rt0.c0)) IN (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY vt1.c0 ASC, ((((CAST(rt0.c2 AS REAL))OR(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c0)))))AND((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)/(rt0.c0)) IN (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY vt1.c0 ASC, ((((CAST(rt0.c2 AS REAL))OR(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c0)))))AND((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((t0.c0)/(rt0.c0)) IN (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY vt1.c0 ASC, ((((CAST(rt0.c2 AS REAL))OR(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c0)))))AND((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)/(rt0.c0)) IN (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY vt1.c0 ASC, ((((CAST(rt0.c2 AS REAL))OR(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c0)))))AND((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((t0.c0)/(rt0.c0)) IN (((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c4))))) ORDER BY vt1.c0 ASC, ((((CAST(rt0.c2 AS REAL))OR(((rt0.c3) BETWEEN (rt0.c4) AND (t0.c0)))))AND((((rt0.c3, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c4, rt0.c4)) AND ((rt0.c2, rt0.c0, rt0.c3)))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (-1136269076) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (-1136269076) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (-1136269076) AND (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (-1136269076) AND (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (-1136269076) AND (t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, ((NULL)<<(vt0.c1)), ABS(DISTINCT t0.c0))) AND ((((t0.c0) IS FALSE), CAST(NULL AS NUMERIC), (((vt0.c1, vt0.c1, vt0.c0))<((t0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, ((NULL)<<(vt0.c1)), ABS(DISTINCT t0.c0))) AND ((((t0.c0) IS FALSE), CAST(NULL AS NUMERIC), (((vt0.c1, vt0.c1, vt0.c0))<((t0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, ((NULL)<<(vt0.c1)), ABS(DISTINCT t0.c0))) AND ((((t0.c0) IS FALSE), CAST(NULL AS NUMERIC), (((vt0.c1, vt0.c1, vt0.c0))<((t0.c0, vt0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, ((NULL)<<(vt0.c1)), ABS(DISTINCT t0.c0))) AND ((((t0.c0) IS FALSE), CAST(NULL AS NUMERIC), (((vt0.c1, vt0.c1, vt0.c0))<((t0.c0, vt0.c0, vt0.c0))))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0, vt0.c1, t0.c0)) NOT BETWEEN ((NULL, ((NULL)<<(vt0.c1)), ABS(DISTINCT t0.c0))) AND ((((t0.c0) IS FALSE), CAST(NULL AS NUMERIC), (((vt0.c1, vt0.c1, vt0.c0))<((t0.c0, vt0.c0, vt0.c0)))))));
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((('')) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((NOT (rt0.c1)))))) ORDER BY (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((NOT (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((('')) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((NOT (rt0.c1)))))) ORDER BY (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((NOT (rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (((('')) BETWEEN ((LIKELY(DISTINCT rt0.c2))) AND (((NOT (rt0.c1)))))) ORDER BY (((((rt0.c3)AND(rt0.c2)))AND(rt0.c3)) IN ())  NULLS LAST;
SELECT * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) ELSE (rt0.c1 IN ()) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))/(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) ELSE (rt0.c1 IN ()) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))/(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)));
SELECT * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) ELSE (rt0.c1 IN ()) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))/(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) ELSE (rt0.c1 IN ()) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))/(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)));
SELECT * FROM vt1, t0 RIGHT OUTER JOIN rt0 ON CASE WHEN CAST(rt0.c3 AS INTEGER) THEN ((rt0.c2) NOT NULL) ELSE (rt0.c1 IN ()) END INNER JOIN vt0 ON ((CAST(rt0.c1 AS NUMERIC))/(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 END)) WHERE ((~ (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c4 COLLATE NOCASE WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (9.5049527E7 COLLATE NOCASE) AND (((rt0.c1)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (9.5049527E7 COLLATE NOCASE) AND (((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c4 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c4 COLLATE NOCASE WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (9.5049527E7 COLLATE NOCASE) AND (((rt0.c1)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (9.5049527E7 COLLATE NOCASE) AND (((rt0.c1)+(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c4 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON rt0.c4 COLLATE NOCASE WHERE ((((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (9.5049527E7 COLLATE NOCASE) AND (((rt0.c1)+(rt0.c3)))));
SELECT * FROM vt0, rt0 WHERE (json_array((- (rt0.c3)), ((rt0.c1)>=(rt0.c2)))) ORDER BY TIME((((rt0.c2))<>((rt0.c1))), ((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array((- (rt0.c3)), ((rt0.c1)>=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TIME((((rt0.c2))!=((rt0.c1))), ((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE (json_array((- (rt0.c3)), ((rt0.c1)>=(rt0.c2)))) ORDER BY TIME((((rt0.c2))<>((rt0.c1))), ((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((json_array((- (rt0.c3)), ((rt0.c1)>=(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TIME((((rt0.c2))!=((rt0.c1))), ((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE (json_array((- (rt0.c3)), ((rt0.c1)>=(rt0.c2)))) ORDER BY TIME((((rt0.c2))<>((rt0.c1))), ((((((((vt0.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c3)), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1))) ASC;
SELECT * FROM vt1 WHERE ((((((vt1.c0)*(vt1.c0))))<>(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0X11b7554b)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)*(vt1.c0))))!=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x11b7554b))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)*(vt1.c0))))<>(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0X11b7554b)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)*(vt1.c0))))!=(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0x11b7554b))))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0)*(vt1.c0))))<>(((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((0X11b7554b)))))));
SELECT ALL * FROM t0, rt0 WHERE ((NOT (((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((NOT (((rt0.c0)%(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)%(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((NOT (((rt0.c0)%(rt0.c2)))));
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c0)))<(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE 0.11901410071671015  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c0)*(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (+ (vt1.c0)) THEN t0.c0 END DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE NOCASE, (- ((((vt1.c0, vt1.c0, vt1.c0))<=((t0.c0, t0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))<(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE 0.11901410071671015  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c0)*(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (+ (vt1.c0)) THEN t0.c0 END DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE NOCASE, (- ((((vt1.c0, vt1.c0, vt1.c0))<=((t0.c0, t0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c0)))<(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE 0.11901410071671015  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c0)*(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (+ (vt1.c0)) THEN t0.c0 END DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE NOCASE, (- ((((vt1.c0, vt1.c0, vt1.c0))<=((t0.c0, t0.c0, vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))<(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE 0.11901410071671015  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c0)*(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (+ (vt1.c0)) THEN t0.c0 END DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE NOCASE, (- ((((vt1.c0, vt1.c0, vt1.c0))<=((t0.c0, t0.c0, vt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((((- (t0.c0)))<(((((t0.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CASE 0.11901410071671015  WHEN ((t0.c0) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c0)*(t0.c0)) WHEN CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) WHEN (+ (vt1.c0)) THEN t0.c0 END DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c0))) COLLATE NOCASE, (- ((((vt1.c0, vt1.c0, vt1.c0))<=((t0.c0, t0.c0, vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((0.5990679084301617) IS FALSE)  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST('' AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.5990679084301617) IS FALSE)  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST('' AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((0.5990679084301617) IS FALSE)  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST('' AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0.5990679084301617) IS FALSE)  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST('' AS REAL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((0.5990679084301617) IS FALSE)  WHEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) THEN CAST('' AS REAL) END);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (rt0.c1);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c0)>>(t0.c0)))IS(NULL))) ORDER BY LIKELIHOOD(((vt1.c0)/(vt1.c0)), 0.11066330777643008), ((((t0.c0) NOTNULL))-(((vt0.c0)&(vt1.c0)))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((LOWER(DISTINCT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(t0.c0)))IS(NULL))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELIHOOD(((vt1.c0)/(vt1.c0)), 0.11066330777643008), ((((t0.c0) NOTNULL))-(((vt0.c0)&(vt1.c0)))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((LOWER(DISTINCT NULL))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c0)>>(t0.c0)))IS(NULL))) ORDER BY LIKELIHOOD(((vt1.c0)/(vt1.c0)), 0.11066330777643008), ((((t0.c0) NOTNULL))-(((vt0.c0)&(vt1.c0)))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((LOWER(DISTINCT NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(t0.c0)))IS(NULL))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELIHOOD(((vt1.c0)/(vt1.c0)), 0.11066330777643008), ((((t0.c0) NOTNULL))-(((vt0.c0)&(vt1.c0)))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((LOWER(DISTINCT NULL))))  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c0)>>(t0.c0)))IS(NULL))) ORDER BY LIKELIHOOD(((vt1.c0)/(vt1.c0)), 0.11066330777643008), ((((t0.c0) NOTNULL))-(((vt0.c0)&(vt1.c0)))), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((LOWER(DISTINCT NULL))))  NULLS LAST;
SELECT * FROM vt0, vt1, t0 WHERE ((~ (((vt0.c0)OR(t0.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (vt1.c0 COLLATE RTRIM IN ()));
SELECT * FROM vt0, vt1, t0 WHERE ((~ (((vt0.c0)OR(t0.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (vt1.c0 COLLATE RTRIM IN ()));
SELECT * FROM vt0, vt1, t0 WHERE ((~ (((vt0.c0)OR(t0.c0))))) ORDER BY (vt1.c0 COLLATE RTRIM IN ());
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c4)+(rt0.c2)))AND(rt0.c4))  NULLS FIRST, (((- (rt0.c3))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c2)))AND(rt0.c4))  NULLS FIRST, (((- (rt0.c3))) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c4)+(rt0.c2)))AND(rt0.c4))  NULLS FIRST, (((- (rt0.c3))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c2)))AND(rt0.c4))  NULLS FIRST, (((- (rt0.c3))) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c1))) NOTNULL)) ORDER BY ((((rt0.c4)+(rt0.c2)))AND(rt0.c4))  NULLS FIRST, (((- (rt0.c3))) NOTNULL) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) ORDER BY (('-248960459')AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('-248960459')AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) ISNULL)) ORDER BY (('-248960459')AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY (('-248960459')AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL * FROM vt0, rt0, t0 WHERE ((t0.c0 IN ()));
SELECT ALL * FROM rt0, t0 WHERE ((NULLIF(DISTINCT '-24796602', rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT '-24796602', rt0.c2) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NULLIF(DISTINCT '-24796602', rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULLIF(DISTINCT '-24796602', rt0.c2) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((NULLIF(DISTINCT '-24796602', rt0.c2) IN ()));
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((('1401397531') NOT NULL)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((('1401397531') NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((('1401397531') NOT NULL)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) BETWEEN ((('1401397531') NOT NULL)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c1))) BETWEEN ((('1401397531') NOT NULL)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN LIKELIHOOD(1276807731, 0.372252310016725) THEN rt0.c4 COLLATE BINARY END CROSS JOIN t0 ON CASE WHEN CAST(NULL AS TEXT) THEN (((t0.c0, rt0.c0, t0.c0))!=((rt0.c0, rt0.c0, t0.c0))) WHEN '[WEmo7?lR' THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'b48c')) THEN (((x''))<=((t0.c0))) END WHERE ((((((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c1)) AND ((vt0.c0, t0.c0, rt0.c2))))/(((vt0.c0)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c1)) AND ((vt0.c0, t0.c0, rt0.c2))))/(((vt0.c0)>>(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN LIKELIHOOD(1276807731, 0.372252310016725) THEN rt0.c4 COLLATE BINARY END CROSS JOIN t0 ON CASE WHEN CAST(NULL AS TEXT) THEN (((t0.c0, rt0.c0, t0.c0))<>((rt0.c0, rt0.c0, t0.c0))) WHEN '[WEmo7?lR' THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'b48c')) THEN (((x''))<=((t0.c0))) END);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN LIKELIHOOD(1276807731, 0.372252310016725) THEN rt0.c4 COLLATE BINARY END CROSS JOIN t0 ON CASE WHEN CAST(NULL AS TEXT) THEN (((t0.c0, rt0.c0, t0.c0))!=((rt0.c0, rt0.c0, t0.c0))) WHEN '[WEmo7?lR' THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'b48c')) THEN (((x''))<=((t0.c0))) END WHERE ((((((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c1)) AND ((vt0.c0, t0.c0, rt0.c2))))/(((vt0.c0)>>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c1)) AND ((vt0.c0, t0.c0, rt0.c2))))/(((vt0.c0)>>(rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN LIKELIHOOD(1276807731, 0.372252310016725) THEN rt0.c4 COLLATE BINARY END CROSS JOIN t0 ON CASE WHEN CAST(NULL AS TEXT) THEN (((t0.c0, rt0.c0, t0.c0))<>((rt0.c0, rt0.c0, t0.c0))) WHEN '[WEmo7?lR' THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'b48c')) THEN (((x''))<=((t0.c0))) END);
SELECT ALL COUNT(*) FROM vt1, rt0 FULL OUTER JOIN vt0 ON CASE WHEN LIKELIHOOD(1276807731, 0.372252310016725) THEN rt0.c4 COLLATE BINARY END CROSS JOIN t0 ON CASE WHEN CAST(NULL AS TEXT) THEN (((t0.c0, rt0.c0, t0.c0))!=((rt0.c0, rt0.c0, t0.c0))) WHEN '[WEmo7?lR' THEN TRIM(DISTINCT t0.c0, t0.c0) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'b48c')) THEN (((x''))<=((t0.c0))) END WHERE ((((((t0.c0, t0.c0, rt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, rt0.c1)) AND ((vt0.c0, t0.c0, rt0.c2))))/(((vt0.c0)>>(rt0.c3)))));
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c1) ISNULL))/(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c1) ISNULL))/(vt0.c0)) ASC);
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c1) ISNULL))/(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((((vt0.c1) ISNULL))/(vt0.c0)) ASC);
SELECT * FROM vt0, rt0, t0 WHERE (vt0.c0) ORDER BY ((((vt0.c1) ISNULL))/(vt0.c0)) ASC;
SELECT ALL * FROM vt0, t0 WHERE (DATE((NOT (vt0.c1)), ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND('')))AND(t0.c0)), ((vt0.c1)=(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN '919582576' THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((vt0.c1)>(vt0.c1)))) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((NOT (vt0.c1)), ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND('')))AND(t0.c0)), ((vt0.c1)==(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN '919582576' THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((vt0.c1)>(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (DATE((NOT (vt0.c1)), ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND('')))AND(t0.c0)), ((vt0.c1)=(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN '919582576' THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((vt0.c1)>(vt0.c1)))) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((NOT (vt0.c1)), ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND('')))AND(t0.c0)), ((vt0.c1)==(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN '919582576' THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((vt0.c1)>(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (DATE((NOT (vt0.c1)), ((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))AND('')))AND(t0.c0)), ((vt0.c1)=(t0.c0)), CASE WHEN vt0.c0 THEN t0.c0 WHEN '919582576' THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((vt0.c1)>(vt0.c1)))) ORDER BY CAST(CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)LIKE(rt0.c2))))<(((((rt0.c3, vt0.c1, rt0.c2)) BETWEEN ((rt0.c1, 0Xffffffffdbe9edb0, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))))) ORDER BY ((CAST(rt0.c4 AS BLOB))<=(TRIM(DISTINCT vt0.c0))) ASC  NULLS FIRST, CASE (NOT (0Xffffffff8e672795))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((rt0.c4)/(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c0)%(vt0.c1)) WHEN (((NULL))==((vt0.c1))) THEN (rt0.c4 IN ()) END DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c4 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)LIKE(rt0.c2))))<(((((rt0.c3, vt0.c1, rt0.c2)) BETWEEN ((rt0.c1, 0xffffffffdbe9edb0, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c4 AS BLOB))<=(TRIM(DISTINCT vt0.c0))) ASC  NULLS FIRST, CASE (NOT (0Xffffffff8e672795))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((rt0.c4)/(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c0)%(vt0.c1)) WHEN (((NULL))==((vt0.c1))) THEN (rt0.c4 IN ()) END DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c4 IN ())))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)LIKE(rt0.c2))))<(((((rt0.c3, vt0.c1, rt0.c2)) BETWEEN ((rt0.c1, 0Xffffffffdbe9edb0, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))))) ORDER BY ((CAST(rt0.c4 AS BLOB))<=(TRIM(DISTINCT vt0.c0))) ASC  NULLS FIRST, CASE (NOT (0Xffffffff8e672795))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((rt0.c4)/(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c0)%(vt0.c1)) WHEN (((NULL))==((vt0.c1))) THEN (rt0.c4 IN ()) END DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c4 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)LIKE(rt0.c2))))<(((((rt0.c3, vt0.c1, rt0.c2)) BETWEEN ((rt0.c1, 0xffffffffdbe9edb0, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(rt0.c4 AS BLOB))<=(TRIM(DISTINCT vt0.c0))) ASC  NULLS FIRST, CASE (NOT (0Xffffffff8e672795))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((rt0.c4)/(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c0)%(vt0.c1)) WHEN (((NULL))==((vt0.c1))) THEN (rt0.c4 IN ()) END DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c4 IN ())))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)LIKE(rt0.c2))))<(((((rt0.c3, vt0.c1, rt0.c2)) BETWEEN ((rt0.c1, 0Xffffffffdbe9edb0, vt0.c1)) AND ((rt0.c1, vt0.c0, vt0.c1))))))) ORDER BY ((CAST(rt0.c4 AS BLOB))<=(TRIM(DISTINCT vt0.c0))) ASC  NULLS FIRST, CASE (NOT (0Xffffffff8e672795))  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c4)) THEN ((rt0.c4)/(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((rt0.c0)%(vt0.c1)) WHEN (((NULL))==((vt0.c1))) THEN (rt0.c4 IN ()) END DESC  NULLS FIRST, (((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND (((rt0.c4 IN ())))) DESC  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (IFNULL(vt0.c1 COLLATE NOCASE, highlight(vt1.c0, rt0.c4, rt0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1 COLLATE NOCASE, highlight(vt1.c0, rt0.c4, rt0.c1, vt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (IFNULL(vt0.c1 COLLATE NOCASE, highlight(vt1.c0, rt0.c4, rt0.c1, vt1.c0)));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1 COLLATE NOCASE, highlight(vt1.c0, rt0.c4, rt0.c1, vt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1 NOT INDEXED, vt0, rt0 WHERE (IFNULL(vt0.c1 COLLATE NOCASE, highlight(vt1.c0, rt0.c4, rt0.c1, vt1.c0)));
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 IN ()))IS NOT(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))IS NOT(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 IN ()))IS NOT(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))IS NOT(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((t0.c0 IN ()))IS NOT(((vt0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ('~S') AND ((t0.c0 IN (rt0.c3)))) CROSS JOIN t0 ON (((vt0.c0)IS(rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((CASE WHEN '95049527' THEN vt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((vt1.c0 IN ()))) WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE rt0.c3 END)<>(((vt0.c1)%(vt0.c1))))  NULLS LAST, 0.11632522127986245 COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) ISNULL) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ('~S') AND ((t0.c0 IN (rt0.c3)))) CROSS JOIN t0 ON (((vt0.c0)IS(rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((CASE WHEN '95049527' THEN vt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((vt1.c0 IN ()))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE rt0.c3 END)<>(((vt0.c1)%(vt0.c1))))  NULLS LAST, 0.11632522127986245 COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ('~S') AND ((t0.c0 IN (rt0.c3)))) CROSS JOIN t0 ON (((vt0.c0)IS(rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((CASE WHEN '95049527' THEN vt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((vt1.c0 IN ()))) WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE rt0.c3 END)<>(((vt0.c1)%(vt0.c1))))  NULLS LAST, 0.11632522127986245 COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) ISNULL) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ('~S') AND ((t0.c0 IN (rt0.c3)))) CROSS JOIN t0 ON (((vt0.c0)IS(rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((CASE WHEN '95049527' THEN vt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((vt1.c0 IN ()))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE rt0.c3 END)<>(((vt0.c1)%(vt0.c1))))  NULLS LAST, 0.11632522127986245 COLLATE BINARY COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN ('~S') AND ((t0.c0 IN (rt0.c3)))) CROSS JOIN t0 ON (((vt0.c0)IS(rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON ((CASE WHEN '95049527' THEN vt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 ELSE vt0.c1 END) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c0))) AND ((vt1.c0 IN ()))) WHERE (CASE WHEN ((rt0.c0) ISNULL) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE NOCASE DESC  NULLS LAST, ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE rt0.c3 END)<>(((vt0.c1)%(vt0.c1))))  NULLS LAST, 0.11632522127986245 COLLATE BINARY COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)<>(rt0.c4 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((('_xV''axE')) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND (((((1842706928))>=((vt0.c0)))))) WHERE ('ErTs>V.W');
SELECT SUM(count) FROM (SELECT (('ErTs>V.W') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)!=(rt0.c4 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((('_xV''axE')) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND (((((1842706928))>=((vt0.c0)))))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)<>(rt0.c4 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((('_xV''axE')) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND (((((1842706928))>=((vt0.c0)))))) WHERE ('ErTs>V.W');
SELECT SUM(count) FROM (SELECT (('ErTs>V.W') IS TRUE)  as count FROM t0, rt0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)!=(rt0.c4 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((('_xV''axE')) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND (((((1842706928))>=((vt0.c0)))))));
SELECT ALL COUNT(*) FROM t0, rt0 INNER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)<>(rt0.c4 COLLATE RTRIM)) RIGHT OUTER JOIN vt0 ON ((('_xV''axE')) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND (((((1842706928))>=((vt0.c0)))))) WHERE ('ErTs>V.W');
SELECT ALL * FROM vt0, t0, vt1 RIGHT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE WHERE (((((rt0.c3)/(1.408779705E9))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)/(1.408779705E9))) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1 RIGHT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 RIGHT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE WHERE (((((rt0.c3)/(1.408779705E9))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)/(1.408779705E9))) ISNULL)) IS TRUE)  as count FROM vt0, t0, vt1 RIGHT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 RIGHT OUTER JOIN rt0 ON vt0.c0 COLLATE NOCASE WHERE (((((rt0.c3)/(1.408779705E9))) ISNULL)) ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE 0.5137163471943249 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE 0.5137163471943249 END)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE 0.5137163471943249 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE 0.5137163471943249 END)))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 END)) AND ((CASE t0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE 0.5137163471943249 END))));
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS((rt0.c4 IN ())))) ORDER BY ((((rt0.c1)*(rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)*(rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS((rt0.c4 IN ())))) ORDER BY ((((rt0.c1)*(rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)*(rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS((rt0.c4 IN ())))) ORDER BY ((((rt0.c1)*(rt0.c0))) BETWEEN (((rt0.c0)AND(rt0.c1))) AND (((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(t0.c0)) AS INTEGER)) ORDER BY CASE LIKELY(DISTINCT rt0.c4)  WHEN (('-1905842283') IS TRUE) THEN (((rt0.c4, rt0.c2, rt0.c3))>=((vt0.c0, '-1952954838', rt0.c3))) END  NULLS FIRST, CAST(rt0.c4 AS REAL) COLLATE BINARY  NULLS LAST, (('') NOT BETWEEN (((t0.c0)>>(x''))) AND (rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE LIKELY(DISTINCT rt0.c4)  WHEN (('-1905842283') IS TRUE) THEN (((rt0.c4, rt0.c2, rt0.c3))>=((vt0.c0, '-1952954838', rt0.c3))) END  NULLS FIRST, CAST(rt0.c4 AS REAL) COLLATE BINARY  NULLS LAST, (('') NOT BETWEEN (((t0.c0)>>(x''))) AND (rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0 ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(t0.c0)) AS INTEGER)) ORDER BY CASE LIKELY(DISTINCT rt0.c4)  WHEN (('-1905842283') IS TRUE) THEN (((rt0.c4, rt0.c2, rt0.c3))>=((vt0.c0, '-1952954838', rt0.c3))) END  NULLS FIRST, CAST(rt0.c4 AS REAL) COLLATE BINARY  NULLS LAST, (('') NOT BETWEEN (((t0.c0)>>(x''))) AND (rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CASE LIKELY(DISTINCT rt0.c4)  WHEN (('-1905842283') IS TRUE) THEN (((rt0.c4, rt0.c2, rt0.c3))>=((vt0.c0, '-1952954838', rt0.c3))) END  NULLS FIRST, CAST(rt0.c4 AS REAL) COLLATE BINARY  NULLS LAST, (('') NOT BETWEEN (((t0.c0)>>(x''))) AND (rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0 ASC);
SELECT ALL * FROM vt0, rt0, t0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(t0.c0)) AS INTEGER)) ORDER BY CASE LIKELY(DISTINCT rt0.c4)  WHEN (('-1905842283') IS TRUE) THEN (((rt0.c4, rt0.c2, rt0.c3))>=((vt0.c0, '-1952954838', rt0.c3))) END  NULLS FIRST, CAST(rt0.c4 AS REAL) COLLATE BINARY  NULLS LAST, (('') NOT BETWEEN (((t0.c0)>>(x''))) AND (rt0.c2 COLLATE RTRIM)) ASC  NULLS FIRST, rt0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(((((t0.c0)OR(vt0.c1)))OR(rt0.c3)))) WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(((((t0.c0)OR(vt0.c1)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(((((t0.c0)OR(vt0.c1)))OR(rt0.c3)))) WHERE ((NULL COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((NULL COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(((((t0.c0)OR(vt0.c1)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c3)))<=(((((t0.c0)OR(vt0.c1)))OR(rt0.c3)))) WHERE ((NULL COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '' COLLATE NOCASE WHERE (((vt0.c1)||(vt1.c0 COLLATE RTRIM))) ORDER BY (~ ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '' COLLATE NOCASE ORDER BY (~ ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '' COLLATE NOCASE WHERE (((vt0.c1)||(vt1.c0 COLLATE RTRIM))) ORDER BY (~ ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)||(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON '' COLLATE NOCASE ORDER BY (~ ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON '' COLLATE NOCASE WHERE (((vt0.c1)||(vt1.c0 COLLATE RTRIM))) ORDER BY (~ ((~ (vt0.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(rt0.c1)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)GLOB(rt0.c1)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)GLOB(rt0.c1)))OR(rt0.c1 COLLATE BINARY)))OR(((rt0.c0)>=(rt0.c2)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) ELSE (((rt0.c3, rt0.c4, vt1.c0))<=((rt0.c0, vt0.c1, vt0.c1))) END) ORDER BY 2.43101875E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) ELSE (((rt0.c3, rt0.c4, vt1.c0))<=((rt0.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 2.43101875E8  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) ELSE (((rt0.c3, rt0.c4, vt1.c0))<=((rt0.c0, vt0.c1, vt0.c1))) END) ORDER BY 2.43101875E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) ELSE (((rt0.c3, rt0.c4, vt1.c0))<=((rt0.c0, vt0.c1, vt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY 2.43101875E8  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c0)) THEN ((vt0.c0)IS NOT(vt1.c0)) ELSE (((rt0.c3, rt0.c4, vt1.c0))<=((rt0.c0, vt0.c1, vt0.c1))) END) ORDER BY 2.43101875E8  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (((((((((((((vt0.c0 IN (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0))<=((vt0.c1))))))AND(TRIM(vt0.c1, x''))))AND(((t0.c0) NOTNULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END)))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((((((vt0.c0 IN (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0))<=((vt0.c1))))))AND(TRIM(vt0.c1, x''))))AND(((t0.c0) NOTNULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END)))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (((((((((((((vt0.c0 IN (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0))<=((vt0.c1))))))AND(TRIM(vt0.c1, x''))))AND(((t0.c0) NOTNULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END)))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((((((vt0.c0 IN (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0))<=((vt0.c1))))))AND(TRIM(vt0.c1, x''))))AND(((t0.c0) NOTNULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END)))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (((((((((((((vt0.c0 IN (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR((((vt0.c0))<=((vt0.c1))))))AND(TRIM(vt0.c1, x''))))AND(((t0.c0) NOTNULL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 END)))OR(NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (t0.c0) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN (t0.c0) AND ((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (t0.c0) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN (t0.c0) AND ((~ (t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (t0.c0) AND ((~ (t0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)<=(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)<=(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(t0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((vt1.c0)<=(t0.c0))) ISNULL));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE ((((t0.c0)AND(rt0.c2)))OR(vt1.c0))  WHEN vt1.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN LIKE(NULL, rt0.c3) THEN NULL WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(rt0.c2)))OR(vt1.c0))  WHEN vt1.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN LIKE(NULL, rt0.c3) THEN NULL WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE ((((t0.c0)AND(rt0.c2)))OR(vt1.c0))  WHEN vt1.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN LIKE(NULL, rt0.c3) THEN NULL WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)AND(rt0.c2)))OR(vt1.c0))  WHEN vt1.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN LIKE(NULL, rt0.c3) THEN NULL WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (CASE ((((t0.c0)AND(rt0.c2)))OR(vt1.c0))  WHEN vt1.c0 THEN CAST(rt0.c0 AS INTEGER) WHEN LIKE(NULL, rt0.c3) THEN NULL WHEN rt0.c0 THEN rt0.c1 COLLATE BINARY END);
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((('95049527')<=(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, CASE WHEN CASE 3.40743936E8  WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))<((t0.c0))) WHEN ((NULL) NOT NULL) THEN t0.c0 WHEN (+ (t0.c0)) THEN json_type(t0.c0) ELSE CAST(t0.c0 AS REAL) END ASC, (TYPEOF('Vge') IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((('95049527')<=(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, CASE WHEN CASE 3.40743936E8  WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))<((t0.c0))) WHEN ((NULL) NOT NULL) THEN t0.c0 WHEN (+ (t0.c0)) THEN json_type(t0.c0) ELSE CAST(t0.c0 AS REAL) END ASC, (TYPEOF('Vge') IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((('95049527')<=(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, CASE WHEN CASE 3.40743936E8  WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))<((t0.c0))) WHEN ((NULL) NOT NULL) THEN t0.c0 WHEN (+ (t0.c0)) THEN json_type(t0.c0) ELSE CAST(t0.c0 AS REAL) END ASC, (TYPEOF('Vge') IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((('95049527')<=(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, CASE WHEN CASE 3.40743936E8  WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))<((t0.c0))) WHEN ((NULL) NOT NULL) THEN t0.c0 WHEN (+ (t0.c0)) THEN json_type(t0.c0) ELSE CAST(t0.c0 AS REAL) END ASC, (TYPEOF('Vge') IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((NULL) NOTNULL)) ORDER BY ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)OR((('95049527')<=(t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))) ASC  NULLS LAST, CASE WHEN CASE 3.40743936E8  WHEN t0.c0 THEN t0.c0 END THEN (((t0.c0))<((t0.c0))) WHEN ((NULL) NOT NULL) THEN t0.c0 WHEN (+ (t0.c0)) THEN json_type(t0.c0) ELSE CAST(t0.c0 AS REAL) END ASC, (TYPEOF('Vge') IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (((((x'') BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c2))))) ORDER BY (((((vt1.c0))>=((vt1.c0))))OR((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((vt1.c0))>=((vt1.c0))))OR((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((x'') BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c2))))) ORDER BY (((((vt1.c0))>=((vt1.c0))))OR((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((x'') BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((vt1.c0))>=((vt1.c0))))OR((NOT (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((x'') BETWEEN (rt0.c3) AND (rt0.c3)))AND((~ (rt0.c2))))) ORDER BY (((((vt1.c0))>=((vt1.c0))))OR((NOT (rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')) AS REAL)) ORDER BY (((((t0.c0))<=((t0.c0))))*(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c0))<=((t0.c0))))*(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')) AS REAL)) ORDER BY (((((t0.c0))<=((t0.c0))))*(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')) AS REAL)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((t0.c0))<=((t0.c0))))*(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((((((((rt0.c3)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')) AS REAL)) ORDER BY (((((t0.c0))<=((t0.c0))))*(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((0.5700243938402855)=(vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) BETWEEN (((0.5700243938402855)==(vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((0.5700243938402855)=(vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0))) BETWEEN (((0.5700243938402855)==(vt1.c0))) AND (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN (((0.5700243938402855)=(vt1.c0))) AND (LOWER(vt1.c0)))) ORDER BY ((vt1.c0 IN ()) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c3)>>(vt0.c1)) IN (rt0.c3 COLLATE BINARY)) WHERE ((((((((t0.c0))<((vt0.c0))))AND(rt0.c0)))OR(LOWER(NULL)))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((rt0.c3) IS TRUE) THEN (((rt0.c0))<=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))) END  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))<((vt0.c0))))AND(rt0.c0)))OR(LOWER(NULL)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c3)>>(vt0.c1)) IN (rt0.c3 COLLATE BINARY)) ORDER BY CASE (vt0.c0 IN ())  WHEN ((rt0.c3) IS TRUE) THEN (((rt0.c0))<=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))) END  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c3)>>(vt0.c1)) IN (rt0.c3 COLLATE BINARY)) WHERE ((((((((t0.c0))<((vt0.c0))))AND(rt0.c0)))OR(LOWER(NULL)))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((rt0.c3) IS TRUE) THEN (((rt0.c0))<=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))) END  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((((((((t0.c0))<((vt0.c0))))AND(rt0.c0)))OR(LOWER(NULL)))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c3)>>(vt0.c1)) IN (rt0.c3 COLLATE BINARY)) ORDER BY CASE (vt0.c0 IN ())  WHEN ((rt0.c3) IS TRUE) THEN (((rt0.c0))<=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))) END  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT COUNT(*) FROM vt0, rt0 INNER JOIN t0 ON (((rt0.c3)>>(vt0.c1)) IN (rt0.c3 COLLATE BINARY)) WHERE ((((((((t0.c0))<((vt0.c0))))AND(rt0.c0)))OR(LOWER(NULL)))) ORDER BY CASE (vt0.c0 IN ())  WHEN ((rt0.c3) IS TRUE) THEN (((rt0.c0))<=((rt0.c2))) ELSE (((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((t0.c0))) END  NULLS FIRST, ((t0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((+ (((vt0.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)))) AND ((((0.9389664339851255) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((((rt0.c1)=(rt0.c2)))) AND ((((0.9389664339851255) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)))) AND ((((0.9389664339851255) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((((rt0.c1)=(rt0.c2)))) AND ((((0.9389664339851255) NOT NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)==(rt0.c2)))) AND ((((0.9389664339851255) NOT NULL)))));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (vt0.c1) ORDER BY ((json(t0.c0))||((vt1.c0 IN ())))  NULLS LAST, ((load_extension(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (((vt0.c1) NOTNULL)))  NULLS LAST, (((+ (vt1.c0)))%((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((t0.c0 IN ()) AS INTEGER) ORDER BY ((json(t0.c0))||((vt1.c0 IN ())))  NULLS LAST, ((load_extension(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (((vt0.c1) NOTNULL)))  NULLS LAST, (((+ (vt1.c0)))%((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (vt0.c1) ORDER BY ((json(t0.c0))||((vt1.c0 IN ())))  NULLS LAST, ((load_extension(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (((vt0.c1) NOTNULL)))  NULLS LAST, (((+ (vt1.c0)))%((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((t0.c0 IN ()) AS INTEGER) ORDER BY ((json(t0.c0))||((vt1.c0 IN ())))  NULLS LAST, ((load_extension(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (((vt0.c1) NOTNULL)))  NULLS LAST, (((+ (vt1.c0)))%((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((t0.c0 IN ()) AS INTEGER) WHERE (vt0.c1) ORDER BY ((json(t0.c0))||((vt1.c0 IN ())))  NULLS LAST, ((load_extension(vt0.c0)) NOT BETWEEN ((NULL IN ())) AND (((vt0.c1) NOTNULL)))  NULLS LAST, (((+ (vt1.c0)))%((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((CAST(NULL AS TEXT))IS(((vt1.c0)>(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(NULL AS TEXT))IS(((vt1.c0)>(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((CAST(NULL AS TEXT))IS(((vt1.c0)>(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(NULL AS TEXT))IS(((vt1.c0)>(vt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS NUMERIC)))) ORDER BY ((CAST(NULL AS TEXT))IS(((vt1.c0)>(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1)<=(rt0.c3)))<(((rt0.c3)|(rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c3 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CAST(rt0.c3 AS TEXT) THEN CASE WHEN x'' THEN vt1.c0 ELSE x'' END WHEN '183891898' THEN 'z8N-}y)' WHEN '688181342' THEN CASE WHEN '' THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END ELSE rt0.c2 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c3 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1)<=(rt0.c3)))<(((rt0.c3)|(rt0.c3)))) ORDER BY CASE (~ (rt0.c0))  WHEN CAST(rt0.c3 AS TEXT) THEN CASE WHEN x'' THEN vt1.c0 ELSE x'' END WHEN '183891898' THEN 'z8N-}y)' WHEN '688181342' THEN CASE WHEN '' THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END ELSE rt0.c2 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1)<=(rt0.c3)))<(((rt0.c3)|(rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c3 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CAST(rt0.c3 AS TEXT) THEN CASE WHEN x'' THEN vt1.c0 ELSE x'' END WHEN '183891898' THEN 'z8N-}y)' WHEN '688181342' THEN CASE WHEN '' THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END ELSE rt0.c2 COLLATE NOCASE END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c3 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1)<=(rt0.c3)))<(((rt0.c3)|(rt0.c3)))) ORDER BY CASE (~ (rt0.c0))  WHEN CAST(rt0.c3 AS TEXT) THEN CASE WHEN x'' THEN vt1.c0 ELSE x'' END WHEN '183891898' THEN 'z8N-}y)' WHEN '688181342' THEN CASE WHEN '' THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END ELSE rt0.c2 COLLATE NOCASE END ASC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((((rt0.c1)<=(rt0.c3)))<(((rt0.c3)|(rt0.c3)))) WHERE (((((vt1.c0)OR(rt0.c3 COLLATE BINARY)))OR(vt1.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CAST(rt0.c3 AS TEXT) THEN CASE WHEN x'' THEN vt1.c0 ELSE x'' END WHEN '183891898' THEN 'z8N-}y)' WHEN '688181342' THEN CASE WHEN '' THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END ELSE rt0.c2 COLLATE NOCASE END ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CHANGES());
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))>=((t0.c0 IN ()))) WHERE (CASE ((rt0.c4) IS FALSE)  WHEN '105573677' THEN 0.6711045640419963 WHEN rt0.c4 COLLATE NOCASE THEN LOWER(rt0.c0) WHEN ((rt0.c2)<(t0.c0)) THEN PRINTF('jS{࿿Q%6Z') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) IS FALSE)  WHEN '105573677' THEN 0.6711045640419963 WHEN rt0.c4 COLLATE NOCASE THEN LOWER(rt0.c0) WHEN ((rt0.c2)<(t0.c0)) THEN PRINTF('jS{࿿Q%6Z') END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))>=((t0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))>=((t0.c0 IN ()))) WHERE (CASE ((rt0.c4) IS FALSE)  WHEN '105573677' THEN 0.6711045640419963 WHEN rt0.c4 COLLATE NOCASE THEN LOWER(rt0.c0) WHEN ((rt0.c2)<(t0.c0)) THEN PRINTF('jS{࿿Q%6Z') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c4) IS FALSE)  WHEN '105573677' THEN 0.6711045640419963 WHEN rt0.c4 COLLATE NOCASE THEN LOWER(rt0.c0) WHEN ((rt0.c2)<(t0.c0)) THEN PRINTF('jS{࿿Q%6Z') END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))>=((t0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c0 IN ()))>=((t0.c0 IN ()))) WHERE (CASE ((rt0.c4) IS FALSE)  WHEN '105573677' THEN 0.6711045640419963 WHEN rt0.c4 COLLATE NOCASE THEN LOWER(rt0.c0) WHEN ((rt0.c2)<(t0.c0)) THEN PRINTF('jS{࿿Q%6Z') END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1)OR((((rt0.c4))=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)OR((((rt0.c4))=((rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1)OR((((rt0.c4))=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)OR((((rt0.c4))=((rt0.c4)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1)OR((((rt0.c4))=((rt0.c4))))));
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (LOWER(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (LOWER(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (LOWER(((vt0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN ((('', rt0.c0, rt0.c1)) BETWEEN ((t0.c0, '-1183090950', t0.c0)) AND ((vt0.c0, t0.c0, rt0.c1))) THEN CAST(vt0.c1 AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CASE WHEN ((('', rt0.c0, rt0.c1)) BETWEEN ((t0.c0, '-1183090950', t0.c0)) AND ((vt0.c0, t0.c0, rt0.c1))) THEN CAST(vt0.c1 AS INTEGER) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN ((('', rt0.c0, rt0.c1)) BETWEEN ((t0.c0, '-1183090950', t0.c0)) AND ((vt0.c0, t0.c0, rt0.c1))) THEN CAST(vt0.c1 AS INTEGER) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY CASE WHEN ((('', rt0.c0, rt0.c1)) BETWEEN ((t0.c0, '-1183090950', t0.c0)) AND ((vt0.c0, t0.c0, rt0.c1))) THEN CAST(vt0.c1 AS INTEGER) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((CASE WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c1 END IN ())) ORDER BY CASE WHEN ((('', rt0.c0, rt0.c1)) BETWEEN ((t0.c0, '-1183090950', t0.c0)) AND ((vt0.c0, t0.c0, rt0.c1))) THEN CAST(vt0.c1 AS INTEGER) END  NULLS FIRST;
SELECT * FROM rt0, t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c4)) IS FALSE)) ORDER BY ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY ASC  NULLS LAST, ('1067700022' COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY ASC  NULLS LAST, ('1067700022' COLLATE BINARY IN ()) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c4)) IS FALSE)) ORDER BY ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY ASC  NULLS LAST, ('1067700022' COLLATE BINARY IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_GET(rt0.c4)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY ASC  NULLS LAST, ('1067700022' COLLATE BINARY IN ()) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((SQLITE_COMPILEOPTION_GET(rt0.c4)) IS FALSE)) ORDER BY ((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY ASC  NULLS LAST, ('1067700022' COLLATE BINARY IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((0.46732443965967063)IS NOT(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0.46732443965967063)IS NOT(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((0.46732443965967063)IS NOT(rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((0.46732443965967063)IS NOT(rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((0.46732443965967063)IS NOT(rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON TRIM(((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2))) LEFT OUTER JOIN rt0 ON (((((rt0.c4, vt0.c0, vt1.c0))!=((t0.c0, rt0.c4, vt1.c0))))>(((((((((((((vt1.c0)AND(vt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(x'9cb6')))OR(vt0.c0)))OR(t0.c0)))) WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE) ORDER BY ((((t0.c0) IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON TRIM(((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2))) LEFT OUTER JOIN rt0 ON (((((rt0.c4, vt0.c0, vt1.c0))<>((t0.c0, rt0.c4, vt1.c0))))>(((((((((((((vt1.c0)AND(vt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(x'9cb6')))OR(vt0.c0)))OR(t0.c0)))) ORDER BY ((((t0.c0) IS FALSE)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON TRIM(((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2))) LEFT OUTER JOIN rt0 ON (((((rt0.c4, vt0.c0, vt1.c0))!=((t0.c0, rt0.c4, vt1.c0))))>(((((((((((((vt1.c0)AND(vt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(x'9cb6')))OR(vt0.c0)))OR(t0.c0)))) WHERE (((vt0.c1) NOT NULL) COLLATE NOCASE) ORDER BY ((((t0.c0) IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON TRIM(((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2))) LEFT OUTER JOIN rt0 ON (((((rt0.c4, vt0.c0, vt1.c0))<>((t0.c0, rt0.c4, vt1.c0))))>(((((((((((((vt1.c0)AND(vt0.c1)))OR(t0.c0)))OR(t0.c0)))OR(x'9cb6')))OR(vt0.c0)))OR(t0.c0)))) ORDER BY ((((t0.c0) IS FALSE)) ISNULL) DESC);
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c0 COLLATE RTRIM COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY ((t0.c0)/(((t0.c0)%(t0.c0))))  NULLS FIRST, (~ ((+ (t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(PRINTF(t0.c0, t0.c0, t0.c0))))OR(IFNULL(DISTINCT NULL, t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)/(((t0.c0)%(t0.c0))))  NULLS FIRST, (~ ((+ (t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(PRINTF(t0.c0, t0.c0, t0.c0))))OR(IFNULL(DISTINCT NULL, t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY ((t0.c0)/(((t0.c0)%(t0.c0))))  NULLS FIRST, (~ ((+ (t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(PRINTF(t0.c0, t0.c0, t0.c0))))OR(IFNULL(DISTINCT NULL, t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c0 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)/(((t0.c0)%(t0.c0))))  NULLS FIRST, (~ ((+ (t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(PRINTF(t0.c0, t0.c0, t0.c0))))OR(IFNULL(DISTINCT NULL, t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CASE CAST(t0.c0 AS BLOB)  WHEN t0.c0 COLLATE NOCASE THEN (t0.c0 IN ()) END) ORDER BY ((t0.c0)/(((t0.c0)%(t0.c0))))  NULLS FIRST, (~ ((+ (t0.c0)))) ASC  NULLS FIRST, ((((t0.c0)AND(PRINTF(t0.c0, t0.c0, t0.c0))))OR(IFNULL(DISTINCT NULL, t0.c0)));
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN ('p䡖*#') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN ('p䡖*#') AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN ('p䡖*#') AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN ('p䡖*#') AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c4 END) BETWEEN (vt1.c0) AND (((rt0.c1) NOT BETWEEN ('p䡖*#') AND (rt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt1.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((~ ((((vt1.c0))<((vt0.c1))))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((t0.c0, t0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((t0.c0, t0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((t0.c0, t0.c0, vt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((t0.c0, t0.c0, vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((vt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((t0.c0, t0.c0, vt0.c0)))) IS FALSE));
SELECT * FROM rt0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((LAST_INSERT_ROWID()) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LAST_INSERT_ROWID()) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((LAST_INSERT_ROWID()) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LAST_INSERT_ROWID()) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY ((LAST_INSERT_ROWID()) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN (vt0.c1 IN ()) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt1.c0)+(vt0.c1)) WHEN (-679008940 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ('0?p㓻OmM')) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN vt1.c0 COLLATE BINARY ELSE x'f350' END) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN '~<]' THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END ELSE (NOT (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt1.c0)+(vt0.c1)) WHEN (-679008940 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ('0?p㓻OmM')) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN vt1.c0 COLLATE BINARY ELSE x'f350' END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN '~<]' THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END ELSE (NOT (vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN (vt0.c1 IN ()) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt1.c0)+(vt0.c1)) WHEN (-679008940 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ('0?p㓻OmM')) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN vt1.c0 COLLATE BINARY ELSE x'f350' END) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN '~<]' THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END ELSE (NOT (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c1 IN ()) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt1.c0)+(vt0.c1)) WHEN (-679008940 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ('0?p㓻OmM')) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN vt1.c0 COLLATE BINARY ELSE x'f350' END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN '~<]' THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END ELSE (NOT (vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CASE WHEN (vt0.c1 IN ()) THEN NULL WHEN (vt0.c1 IN ()) THEN ((vt1.c0)+(vt0.c1)) WHEN (-679008940 IN ()) THEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) WHEN (((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt1.c0, vt0.c1, vt0.c0))) THEN (vt0.c0 IN ('0?p㓻OmM')) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)) THEN vt1.c0 COLLATE BINARY ELSE x'f350' END) ORDER BY CASE CAST(t0.c0 AS NUMERIC)  WHEN '~<]' THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END ELSE (NOT (vt0.c1)) END  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((rt0.c0 IN (0.09043384485937878))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0 IN (0.09043384485937878))) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((rt0.c0 IN (0.09043384485937878))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0 IN (0.09043384485937878))) IS TRUE)  NULLS LAST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS INTEGER)) ORDER BY (((rt0.c0 IN (0.09043384485937878))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) NOT NULL));
SELECT * FROM rt0 WHERE (((((((rt0.c3) NOTNULL))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c0))) ORDER BY UNLIKELY(DISTINCT CAST('wc6#Z' AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST('wc6#Z' AS NUMERIC))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c3) NOTNULL))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c0))) ORDER BY UNLIKELY(DISTINCT CAST('wc6#Z' AS NUMERIC))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) NOTNULL))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT CAST('wc6#Z' AS NUMERIC))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c3) NOTNULL))OR(rt0.c0 COLLATE BINARY)))OR(rt0.c0))) ORDER BY UNLIKELY(DISTINCT CAST('wc6#Z' AS NUMERIC))  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON LIKE(CAST(rt0.c2 AS NUMERIC), ((rt0.c1)IS NOT(rt0.c4)), '鸺') WHERE (CASE (((rt0.c4))<=((rt0.c3)))  WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c3)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4))<=((rt0.c3)))  WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c3)>(vt1.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON LIKE(CAST(rt0.c2 AS NUMERIC), ((rt0.c1)IS NOT(rt0.c4)), '鸺'));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON LIKE(CAST(rt0.c2 AS NUMERIC), ((rt0.c1)IS NOT(rt0.c4)), '鸺') WHERE (CASE (((rt0.c4))<=((rt0.c3)))  WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c3)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c4))<=((rt0.c3)))  WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c3)>(vt1.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON LIKE(CAST(rt0.c2 AS NUMERIC), ((rt0.c1)IS NOT(rt0.c4)), '鸺'));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON LIKE(CAST(rt0.c2 AS NUMERIC), ((rt0.c1)IS NOT(rt0.c4)), '鸺') WHERE (CASE (((rt0.c4))<=((rt0.c3)))  WHEN CASE WHEN rt0.c3 THEN vt1.c0 END THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c3)>(vt1.c0)) END);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c0, vt1.c0))==((vt0.c1, vt0.c0, '-1118061180')))) AND (((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, '-1118061180')))) AND (((vt0.c1) IS TRUE))) DESC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c0, vt1.c0))==((vt0.c1, vt0.c0, '-1118061180')))) AND (((vt0.c1) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, '-1118061180')))) AND (((vt0.c1) IS TRUE))) DESC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) ISNULL)) ISNULL)) ORDER BY ((CAST(vt0.c0 AS TEXT)) BETWEEN ((((vt0.c1, vt0.c0, vt1.c0))==((vt0.c1, vt0.c0, '-1118061180')))) AND (((vt0.c1) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(NULL AS NUMERIC));
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((+ ((((rt0.c3))>((rt0.c3)))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))==(CASE WHEN '450070181' THEN 0.13469788888993328 ELSE rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY ((CAST(rt0.c1 AS NUMERIC))==(CASE WHEN '450070181' THEN 0.13469788888993328 ELSE rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((+ ((((rt0.c3))>((rt0.c3)))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))==(CASE WHEN '450070181' THEN 0.13469788888993328 ELSE rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON t0.c0 ORDER BY ((CAST(rt0.c1 AS NUMERIC))==(CASE WHEN '450070181' THEN 0.13469788888993328 ELSE rt0.c3 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON t0.c0 WHERE ((+ ((((rt0.c3))>((rt0.c3)))))) ORDER BY ((CAST(rt0.c1 AS NUMERIC))==(CASE WHEN '450070181' THEN 0.13469788888993328 ELSE rt0.c3 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((LTRIM(rt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((LTRIM(rt0.c1)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c1)) ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((LTRIM(rt0.c1)) ISNULL));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ('');
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON '-24796602' WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON '-24796602');
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON '-24796602' WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON '-24796602');
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN t0 ON '-24796602' WHERE (((((t0.c0) IS FALSE)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN t0 ON ((rt0.c0 COLLATE RTRIM)<(((rt0.c3)LIKE(rt0.c0)))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON ((rt0.c0 COLLATE RTRIM)<(((rt0.c3)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN t0 ON ((rt0.c0 COLLATE RTRIM)<(((rt0.c3)LIKE(rt0.c0)))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON ((rt0.c0 COLLATE RTRIM)<(((rt0.c3)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 INNER JOIN t0 ON ((rt0.c0 COLLATE RTRIM)<(((rt0.c3)LIKE(rt0.c0)))) WHERE (rt0.c4);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))));
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4) IS FALSE) ELSE ((vt0.c0) IS TRUE) END LEFT OUTER JOIN t0 ON CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN IFNULL(rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c0) ISNULL) END CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(x'')))*((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))))) WHERE (((IFNULL(rt0.c0, rt0.c3))+(((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, 0.6721765323672814  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, rt0.c3))+(((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4) IS FALSE) ELSE ((vt0.c0) IS TRUE) END LEFT OUTER JOIN t0 ON CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN IFNULL(rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c0) ISNULL) END CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(x'')))*((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, 0.6721765323672814  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4) IS FALSE) ELSE ((vt0.c0) IS TRUE) END LEFT OUTER JOIN t0 ON CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN IFNULL(rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c0) ISNULL) END CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(x'')))*((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))))) WHERE (((IFNULL(rt0.c0, rt0.c3))+(((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, 0.6721765323672814  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c0, rt0.c3))+(((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4) IS FALSE) ELSE ((vt0.c0) IS TRUE) END LEFT OUTER JOIN t0 ON CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN IFNULL(rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c0) ISNULL) END CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(x'')))*((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, 0.6721765323672814  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON CASE WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c4) IS FALSE) ELSE ((vt0.c0) IS TRUE) END LEFT OUTER JOIN t0 ON CASE (NOT (vt0.c0))  WHEN (- (vt0.c0)) THEN IFNULL(rt0.c1, rt0.c0) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c2 WHEN CASE WHEN rt0.c1 THEN t0.c0 END THEN ((rt0.c0) ISNULL) END CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(x'')))*((((rt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((vt1.c0))))) WHERE (((IFNULL(rt0.c0, rt0.c3))+(((vt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2))))) ORDER BY (NOT (vt0.c0)) DESC  NULLS FIRST, 0.6721765323672814  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))) IN ()));
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))))) ORDER BY ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN 'MY' END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((((((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN 'MY' END) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))))) ORDER BY ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN 'MY' END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((((((((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))))) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN 'MY' END) NOT NULL) DESC  NULLS LAST);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))OR(rt0.c3)))AND(t0.c0)))) AND ((((((vt1.c0)AND(vt1.c0)))AND(rt0.c2)))))) ORDER BY ((t0.c0)IS(vt0.c1)) COLLATE BINARY DESC  NULLS LAST, ((CASE rt0.c3  WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN 'MY' END) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('') IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((('') IS FALSE));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((x'')<>(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((((NULL)<>(vt0.c0))) BETWEEN (TYPEOF(vt0.c1)) AND ((vt1.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c1)))|(((rt0.c3)<=(rt0.c3)))), (((rt0.c0 IN ()))-(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN 0.8483476526363106 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')!=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((NULL)!=(vt0.c0))) BETWEEN (TYPEOF(vt0.c1)) AND ((vt1.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c1)))|(((rt0.c3)<=(rt0.c3)))), (((rt0.c0 IN ()))-(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN 0.8483476526363106 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END)) DESC);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((x'')<>(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((((NULL)<>(vt0.c0))) BETWEEN (TYPEOF(vt0.c1)) AND ((vt1.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c1)))|(((rt0.c3)<=(rt0.c3)))), (((rt0.c0 IN ()))-(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN 0.8483476526363106 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'')!=(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((((NULL)!=(vt0.c0))) BETWEEN (TYPEOF(vt0.c1)) AND ((vt1.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c1)))|(((rt0.c3)<=(rt0.c3)))), (((rt0.c0 IN ()))-(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN 0.8483476526363106 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END)) DESC);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((x'')<>(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY ((((NULL)<>(vt0.c0))) BETWEEN (TYPEOF(vt0.c1)) AND ((vt1.c0 IN (vt0.c1)))) ASC  NULLS FIRST, ((((((((((vt0.c1)AND(vt0.c1)))AND(rt0.c4)))AND(t0.c0)))OR(rt0.c1)))|(((rt0.c3)<=(rt0.c3)))), (((rt0.c0 IN ()))-(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 WHEN 0.8483476526363106 THEN vt0.c0 WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE (((t0.c0, vt1.c0, 4.50070181E8)) BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, t0.c0))) END WHERE (LIKELY(((t0.c0) IS TRUE))) ORDER BY ((t0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE (((t0.c0, vt1.c0, 4.50070181E8)) BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, t0.c0))) END ORDER BY ((t0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE (((t0.c0, vt1.c0, 4.50070181E8)) BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, t0.c0))) END WHERE (LIKELY(((t0.c0) IS TRUE))) ORDER BY ((t0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t0.c0) IS TRUE))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE (((t0.c0, vt1.c0, 4.50070181E8)) BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, t0.c0))) END ORDER BY ((t0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CASE WHEN (vt1.c0 IN ()) THEN SQLITE_COMPILEOPTION_USED(t0.c0) ELSE (((t0.c0, vt1.c0, 4.50070181E8)) BETWEEN ((t0.c0, vt1.c0, t0.c0)) AND ((vt1.c0, t0.c0, t0.c0))) END WHERE (LIKELY(((t0.c0) IS TRUE))) ORDER BY ((t0.c0)IS(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((NOT (t0.c0)))AND((~ (rt0.c4)))))AND(rt0.c0)) LEFT OUTER JOIN vt0 ON (((((((((((((rt0.c0 IN (NULL)))AND(((((rt0.c4)OR(vt1.c0)))OR(rt0.c0)))))AND(json_array(vt0.c0, vt1.c0))))AND(((vt0.c0)*(vt0.c1)))))AND(CAST(rt0.c4 AS REAL))))OR(((((((((rt0.c4)OR(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))OR(x'')))))AND(((rt0.c0)OR(vt1.c0)))) LEFT OUTER JOIN t0 ON CAST('' AS BLOB) WHERE ((- ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((NOT (t0.c0)))AND((~ (rt0.c4)))))AND(rt0.c0)) LEFT OUTER JOIN vt0 ON (((((((((((((rt0.c0 IN (NULL)))AND(((((rt0.c4)OR(vt1.c0)))OR(rt0.c0)))))AND(json_array(vt0.c0, vt1.c0))))AND(((vt0.c0)*(vt0.c1)))))AND(CAST(rt0.c4 AS REAL))))OR(((((((((rt0.c4)OR(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))OR(x'')))))AND(((rt0.c0)OR(vt1.c0)))) LEFT OUTER JOIN t0 ON CAST('' AS BLOB));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((((NOT (t0.c0)))AND((~ (rt0.c4)))))AND(rt0.c0)) LEFT OUTER JOIN vt0 ON (((((((((((((rt0.c0 IN (NULL)))AND(((((rt0.c4)OR(vt1.c0)))OR(rt0.c0)))))AND(json_array(vt0.c0, vt1.c0))))AND(((vt0.c0)*(vt0.c1)))))AND(CAST(rt0.c4 AS REAL))))OR(((((((((rt0.c4)OR(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))OR(x'')))))AND(((rt0.c0)OR(vt1.c0)))) LEFT OUTER JOIN t0 ON CAST('' AS BLOB) WHERE ((- ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt0.c3))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((NOT (t0.c0)))AND((~ (rt0.c4)))))AND(rt0.c0)) LEFT OUTER JOIN vt0 ON (((((((((((((rt0.c0 IN (NULL)))AND(((((rt0.c4)OR(vt1.c0)))OR(rt0.c0)))))AND(json_array(vt0.c0, vt1.c0))))AND(((vt0.c0)*(vt0.c1)))))AND(CAST(rt0.c4 AS REAL))))OR(((((((((rt0.c4)OR(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))OR(x'')))))AND(((rt0.c0)OR(vt1.c0)))) LEFT OUTER JOIN t0 ON CAST('' AS BLOB));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ORDER BY x'', ((('-488273061')!=(t0.c0)) IN (((((vt1.c0)OR(t0.c0)))OR(x'')))) DESC, ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN ((('183891898')<<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND('gUr7k65牣b')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'', ((('-488273061')<>(t0.c0)) IN (((((vt1.c0)OR(t0.c0)))OR(x'')))) DESC, ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN ((('183891898')<<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND('gUr7k65牣b')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ORDER BY x'', ((('-488273061')!=(t0.c0)) IN (((((vt1.c0)OR(t0.c0)))OR(x'')))) DESC, ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN ((('183891898')<<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND('gUr7k65牣b')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'', ((('-488273061')<>(t0.c0)) IN (((((vt1.c0)OR(t0.c0)))OR(x'')))) DESC, ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN ((('183891898')<<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND('gUr7k65牣b')))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0)))/(CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) ORDER BY x'', ((('-488273061')!=(t0.c0)) IN (((((vt1.c0)OR(t0.c0)))OR(x'')))) DESC, ((((((vt1.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN ((('183891898')<<(t0.c0))) AND (((((vt1.c0)OR(vt1.c0)))AND('gUr7k65牣b')))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (RTRIM(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (RTRIM(vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (RTRIM(vt1.c0) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.401397531E9) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (1.401397531E9) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.401397531E9) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (1.401397531E9) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2) BETWEEN (1.401397531E9) AND (rt0.c2)) IN ()));
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(UPPER(DISTINCT vt0.c1))), (((vt0.c1))>=((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(UPPER(DISTINCT vt0.c1))), (((vt0.c1))>=((vt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(UPPER(DISTINCT vt0.c1))), (((vt0.c1))>=((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(UPPER(DISTINCT vt0.c1))), (((vt0.c1))>=((vt0.c0))) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))<=(UPPER(DISTINCT vt0.c1))), (((vt0.c1))>=((vt0.c0))) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (rt0.c3);
SELECT ALL * FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY (((CAST(vt0.c0 AS TEXT)))<>((vt0.c0))) ASC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS TEXT)))!=((vt0.c0))) ASC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY (((CAST(vt0.c0 AS TEXT)))<>((vt0.c0))) ASC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS TEXT)))!=((vt0.c0))) ASC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0 WHERE (NULL COLLATE BINARY) ORDER BY (((CAST(vt0.c0 AS TEXT)))<>((vt0.c0))) ASC  NULLS LAST, (vt0.c0 COLLATE RTRIM IN ());
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 END) AND (0.5422690676548512))) ORDER BY CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c4)) AS BLOB) ASC, 0.41148670882152294 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 END) AND (0.5422690676548512))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c4)) AS BLOB) ASC, 0.41148670882152294 COLLATE RTRIM);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 END) AND (0.5422690676548512))) ORDER BY CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c4)) AS BLOB) ASC, 0.41148670882152294 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 END) AND (0.5422690676548512))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c4)) AS BLOB) ASC, 0.41148670882152294 COLLATE RTRIM);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((((+ (vt0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 WHEN rt0.c0 THEN vt0.c1 END) AND (0.5422690676548512))) ORDER BY CAST(((((vt0.c0)AND(rt0.c2)))AND(rt0.c4)) AS BLOB) ASC, 0.41148670882152294 COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('') ORDER BY (+ (rt0.c2))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))<=(TYPEOF(rt0.c4)));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (+ (rt0.c2))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))<=(TYPEOF(rt0.c4))));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('') ORDER BY (+ (rt0.c2))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))<=(TYPEOF(rt0.c4)));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0, vt1, vt0, t0 ORDER BY (+ (rt0.c2))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))<=(TYPEOF(rt0.c4))));
SELECT COUNT(*) FROM rt0, vt1, vt0, t0 WHERE ('') ORDER BY (+ (rt0.c2))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)))<=(TYPEOF(rt0.c4)));
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULLIF(vt0.c0, vt0.c1))) ORDER BY ((x'a268') NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULLIF(vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((x'a268') NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULLIF(vt0.c0, vt0.c1))) ORDER BY ((x'a268') NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULLIF(vt0.c0, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY ((x'a268') NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (TYPEOF(NULLIF(vt0.c0, vt0.c1))) ORDER BY ((x'a268') NOT NULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN ()))AND(NULL)))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(NULL)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN ()))AND(NULL)))OR(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(NULL)))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((vt0.c1 IN ()))AND(NULL)))OR(((vt0.c0) NOTNULL))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CAST((((rt0.c1))>=((vt0.c1))) AS INTEGER) FULL OUTER JOIN vt0 ON (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c1)), (rt0.c0 IN (vt0.c1)), UNLIKELY(DISTINCT vt0.c0))) AND ((((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c4  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, 0.2328932690035046 COLLATE RTRIM))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST((((rt0.c1))>=((vt0.c1))) AS INTEGER) FULL OUTER JOIN vt0 ON (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c1)), (rt0.c0 IN (vt0.c1)), UNLIKELY(DISTINCT vt0.c0))) AND ((((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c4  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, 0.2328932690035046 COLLATE RTRIM))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON CAST((((rt0.c1))>=((vt0.c1))) AS INTEGER) FULL OUTER JOIN vt0 ON (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c1)), (rt0.c0 IN (vt0.c1)), UNLIKELY(DISTINCT vt0.c0))) AND ((((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c4  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, 0.2328932690035046 COLLATE RTRIM))) WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)IS NOT((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN vt0.c1 ELSE rt0.c3 END)IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON CAST((((rt0.c1))>=((vt0.c1))) AS INTEGER) FULL OUTER JOIN vt0 ON (((rt0.c3, vt0.c1, vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c1)), (rt0.c0 IN (vt0.c1)), UNLIKELY(DISTINCT vt0.c0))) AND ((((((((((vt0.c1)OR(rt0.c2)))AND(vt0.c1)))AND(rt0.c1)))OR(rt0.c0)), CASE rt0.c4  WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END, 0.2328932690035046 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (INSTR(rt0.c1, vt0.c0))) INNER JOIN t0 ON ((rt0.c0)<>(t0.c0)) COLLATE RTRIM WHERE (((((rt0.c4)*(rt0.c2))) NOT NULL)) ORDER BY CASE t0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c4 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)*(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (INSTR(rt0.c1, vt0.c0))) INNER JOIN t0 ON ((rt0.c0)<>(t0.c0)) COLLATE RTRIM ORDER BY CASE t0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c4 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (INSTR(rt0.c1, vt0.c0))) INNER JOIN t0 ON ((rt0.c0)<>(t0.c0)) COLLATE RTRIM WHERE (((((rt0.c4)*(rt0.c2))) NOT NULL)) ORDER BY CASE t0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c4 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)*(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (+ (INSTR(rt0.c1, vt0.c0))) INNER JOIN t0 ON ((rt0.c0)<>(t0.c0)) COLLATE RTRIM ORDER BY CASE t0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c4 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (+ (INSTR(rt0.c1, vt0.c0))) INNER JOIN t0 ON ((rt0.c0)<>(t0.c0)) COLLATE RTRIM WHERE (((((rt0.c4)*(rt0.c2))) NOT NULL)) ORDER BY CASE t0.c0  WHEN rt0.c3 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN vt0.c1 THEN rt0.c4 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c2)OR(t0.c0)))AND('{Md'))) NOTNULL)) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)) THEN t0.c0 END, UPPER(rt0.c2);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(t0.c0)))AND('{Md'))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)) THEN t0.c0 END, UPPER(rt0.c2));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c2)OR(t0.c0)))AND('{Md'))) NOTNULL)) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)) THEN t0.c0 END, UPPER(rt0.c2);
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(t0.c0)))AND('{Md'))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)) THEN t0.c0 END, UPPER(rt0.c2));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (((((((rt0.c2)OR(t0.c0)))AND('{Md'))) NOTNULL)) ORDER BY CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(rt0.c4)) THEN t0.c0 END, UPPER(rt0.c2);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c4)GLOB(rt0.c1))) AND (rt0.c2))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c4)GLOB(rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c4)GLOB(rt0.c1))) AND (rt0.c2))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c4)GLOB(rt0.c1))) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c4)GLOB(rt0.c1))) AND (rt0.c2))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('\rxAqBl.j⢫')-((((rt0.c1, rt0.c2, 'K'))==((rt0.c3, rt0.c3, rt0.c3)))))) ORDER BY rt0.c0 DESC, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) BETWEEN ((((('-488273061')AND(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) DESC  NULLS LAST, CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((('\rxAqBl.j⢫')-((((rt0.c1, rt0.c2, 'K'))=((rt0.c3, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) BETWEEN ((((('-488273061')AND(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) DESC  NULLS LAST, CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('\rxAqBl.j⢫')-((((rt0.c1, rt0.c2, 'K'))==((rt0.c3, rt0.c3, rt0.c3)))))) ORDER BY rt0.c0 DESC, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) BETWEEN ((((('-488273061')AND(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) DESC  NULLS LAST, CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((('\rxAqBl.j⢫')-((((rt0.c1, rt0.c2, 'K'))=((rt0.c3, rt0.c3, rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) BETWEEN ((((('-488273061')AND(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) DESC  NULLS LAST, CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('\rxAqBl.j⢫')-((((rt0.c1, rt0.c2, 'K'))==((rt0.c3, rt0.c3, rt0.c3)))))) ORDER BY rt0.c0 DESC, ((((((rt0.c2)AND(rt0.c3)))AND(rt0.c2))) BETWEEN ((((('-488273061')AND(rt0.c0)))OR(rt0.c0))) AND (CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)) DESC  NULLS LAST, CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END AS NUMERIC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((+ (vt0.c1)) IN (0.8336225527777301, rt0.c4)) CROSS JOIN vt1 ON ((NOT (rt0.c4)) IN ()) WHERE (((vt1.c0 COLLATE NOCASE)AND((((rt0.c1))<=((rt0.c4)))))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)AND((((rt0.c1))<=((rt0.c4)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((+ (vt0.c1)) IN (0.8336225527777301, rt0.c4)) CROSS JOIN vt1 ON ((NOT (rt0.c4)) IN ()) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((+ (vt0.c1)) IN (0.8336225527777301, rt0.c4)) CROSS JOIN vt1 ON ((NOT (rt0.c4)) IN ()) WHERE (((vt1.c0 COLLATE NOCASE)AND((((rt0.c1))<=((rt0.c4)))))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)AND((((rt0.c1))<=((rt0.c4)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((+ (vt0.c1)) IN (0.8336225527777301, rt0.c4)) CROSS JOIN vt1 ON ((NOT (rt0.c4)) IN ()) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0) NOT NULL))) ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((+ (vt0.c1)) IN (0.8336225527777301, rt0.c4)) CROSS JOIN vt1 ON ((NOT (rt0.c4)) IN ()) WHERE (((vt1.c0 COLLATE NOCASE)AND((((rt0.c1))<=((rt0.c4)))))) ORDER BY ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (((rt0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(t0.c0 AS TEXT) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((t0.c0)IS NOT(x'')) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(x'')) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((t0.c0)IS NOT(x'')) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(x'')) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((t0.c0)IS NOT(x'')) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (LIKELY(rt0.c3) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (LIKELY(rt0.c3) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(rt0.c3) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (LIKELY(rt0.c3) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)-('[oG Db!h]Z')) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY ((((((((vt0.c1)OR(((vt0.c1)=(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c1) ISNULL))))OR('1~盺嚄gWP'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-('[oG Db!h]Z')) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(((vt0.c1)==(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c1) ISNULL))))OR('1~盺嚄gWP')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)-('[oG Db!h]Z')) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY ((((((((vt0.c1)OR(((vt0.c1)=(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c1) ISNULL))))OR('1~盺嚄gWP'));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)-('[oG Db!h]Z')) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(((vt0.c1)==(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c1) ISNULL))))OR('1~盺嚄gWP')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0)-('[oG Db!h]Z')) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0)GLOB(vt0.c1)) END) ORDER BY ((((((((vt0.c1)OR(((vt0.c1)=(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c1) ISNULL))))OR('1~盺嚄gWP'));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c1)) IN ((rt0.c0 IN ()), (x'' IN ()))) WHERE (PRINTF(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c1)) IN ((rt0.c0 IN ()), (x'' IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c1)) IN ((rt0.c0 IN ()), (x'' IN ()))) WHERE (PRINTF(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c1)) IN ((rt0.c0 IN ()), (x'' IN ()))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 IN (vt0.c1)) IN ((rt0.c0 IN ()), (x'' IN ()))) WHERE (PRINTF(((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1))));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (UPPER(x'')) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((vt0.c1 IN ()) IN ()) DESC);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (UPPER(x'')) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(x'')) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((vt0.c1 IN ()) IN ()) DESC);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (UPPER(x'')) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT * FROM rt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (-2054597768) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) BETWEEN (-2054597768) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (-2054597768) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) BETWEEN (-2054597768) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((NOT (vt1.c0))) BETWEEN (-2054597768) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((LIKELY(vt0.c1))>>(CASE t0.c0  WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c1))>>(CASE t0.c0  WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((LIKELY(vt0.c1))>>(CASE t0.c0  WHEN vt0.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c1))>>(CASE t0.c0  WHEN vt0.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((LIKELY(vt0.c1))>>(CASE t0.c0  WHEN vt0.c1 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (json_array(((vt0.c1) NOT NULL), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY CASE ((vt1.c0)||(rt0.c3))  WHEN CAST('w![m' AS TEXT) THEN CASE 0.13628276288561758  WHEN x'' THEN vt0.c0 ELSE rt0.c3 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR('')))OR(0.9474959494646769)) WHEN rt0.c2 THEN (('1092184334')>>(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((vt0.c1) NOT NULL), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE ((vt1.c0)||(rt0.c3))  WHEN CAST('w![m' AS TEXT) THEN CASE 0.13628276288561758  WHEN x'' THEN vt0.c0 ELSE rt0.c3 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR('')))OR(0.9474959494646769)) WHEN rt0.c2 THEN (('1092184334')>>(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (json_array(((vt0.c1) NOT NULL), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY CASE ((vt1.c0)||(rt0.c3))  WHEN CAST('w![m' AS TEXT) THEN CASE 0.13628276288561758  WHEN x'' THEN vt0.c0 ELSE rt0.c3 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR('')))OR(0.9474959494646769)) WHEN rt0.c2 THEN (('1092184334')>>(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array(((vt0.c1) NOT NULL), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CASE ((vt1.c0)||(rt0.c3))  WHEN CAST('w![m' AS TEXT) THEN CASE 0.13628276288561758  WHEN x'' THEN vt0.c0 ELSE rt0.c3 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR('')))OR(0.9474959494646769)) WHEN rt0.c2 THEN (('1092184334')>>(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (json_array(((vt0.c1) NOT NULL), CASE rt0.c0  WHEN rt0.c1 THEN vt0.c0 END)) ORDER BY CASE ((vt1.c0)||(rt0.c3))  WHEN CAST('w![m' AS TEXT) THEN CASE 0.13628276288561758  WHEN x'' THEN vt0.c0 ELSE rt0.c3 END WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))OR('')))OR(0.9474959494646769)) WHEN rt0.c2 THEN (('1092184334')>>(vt0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((TYPEOF(rt0.c2)) NOT BETWEEN ((((rt0.c3, vt0.c1, rt0.c4)) BETWEEN ((rt0.c1, 0.16327589898398753, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))) AND (((vt1.c0)&(rt0.c2))))) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2)) NOT BETWEEN ((((rt0.c3, vt0.c1, rt0.c4)) BETWEEN ((rt0.c1, 0.16327589898398753, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))) AND (((vt1.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (NOT (x'')) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((TYPEOF(rt0.c2)) NOT BETWEEN ((((rt0.c3, vt0.c1, rt0.c4)) BETWEEN ((rt0.c1, 0.16327589898398753, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))) AND (((vt1.c0)&(rt0.c2))))) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(rt0.c2)) NOT BETWEEN ((((rt0.c3, vt0.c1, rt0.c4)) BETWEEN ((rt0.c1, 0.16327589898398753, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))) AND (((vt1.c0)&(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (NOT (x'')) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE (((TYPEOF(rt0.c2)) NOT BETWEEN ((((rt0.c3, vt0.c1, rt0.c4)) BETWEEN ((rt0.c1, 0.16327589898398753, vt0.c0)) AND ((rt0.c0, vt0.c1, rt0.c1)))) AND (((vt1.c0)&(rt0.c2))))) ORDER BY (NOT (x'')) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT json_object(rt0.c0, rt0.c2), rt0.c3));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT json_object(rt0.c0, rt0.c2), rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (IFNULL(DISTINCT json_object(rt0.c0, rt0.c2), rt0.c3));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT json_object(rt0.c0, rt0.c2), rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM t0 WHERE (IFNULL(t0.c0 COLLATE NOCASE, CASE WHEN 'qM5' THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY 'K'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t0.c0 COLLATE NOCASE, CASE WHEN 'qM5' THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 ORDER BY 'K'  NULLS LAST);
SELECT ALL * FROM t0 WHERE (IFNULL(t0.c0 COLLATE NOCASE, CASE WHEN 'qM5' THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY 'K'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(t0.c0 COLLATE NOCASE, CASE WHEN 'qM5' THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0 ORDER BY 'K'  NULLS LAST);
SELECT ALL * FROM t0 WHERE (IFNULL(t0.c0 COLLATE NOCASE, CASE WHEN 'qM5' THEN NULL WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) ORDER BY 'K'  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (t0.c0);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) IS TRUE))AND((rt0.c3 IN (rt0.c2, rt0.c0, rt0.c1)))))OR((rt0.c4 IN ())))) ORDER BY (((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c1)GLOB(vt1.c0)), CAST(rt0.c4 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, '0.8336225527777301' COLLATE NOCASE, (rt0.c0 IN ())))) DESC, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND((rt0.c3 IN (rt0.c2, rt0.c0, rt0.c1)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c1)GLOB(vt1.c0)), CAST(rt0.c4 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, '0.8336225527777301' COLLATE NOCASE, (rt0.c0 IN ())))) DESC, rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) IS TRUE))AND((rt0.c3 IN (rt0.c2, rt0.c0, rt0.c1)))))OR((rt0.c4 IN ())))) ORDER BY (((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c1)GLOB(vt1.c0)), CAST(rt0.c4 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, '0.8336225527777301' COLLATE NOCASE, (rt0.c0 IN ())))) DESC, rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND((rt0.c3 IN (rt0.c2, rt0.c0, rt0.c1)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c1)GLOB(vt1.c0)), CAST(rt0.c4 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, '0.8336225527777301' COLLATE NOCASE, (rt0.c0 IN ())))) DESC, rt0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2) IS TRUE))AND((rt0.c3 IN (rt0.c2, rt0.c0, rt0.c1)))))OR((rt0.c4 IN ())))) ORDER BY (((rt0.c3, rt0.c4, vt1.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)), ((rt0.c1)GLOB(vt1.c0)), CAST(rt0.c4 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, '0.8336225527777301' COLLATE NOCASE, (rt0.c0 IN ())))) DESC, rt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (x''))) IS FALSE)) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (x''))) IS FALSE)) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (x'') AND (x''))) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (((((rt0.c1) BETWEEN (x'') AND (x''))) IS FALSE)) ORDER BY CAST(NULL AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((json_array(vt0.c0, t0.c0)) NOT NULL) RIGHT OUTER JOIN rt0 ON highlight(rt0.c1 COLLATE NOCASE, ((rt0.c3)&(rt0.c1)), HEX(NULL), rt0.c0) WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))))) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))<=((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((json_array(vt0.c0, t0.c0)) NOT NULL) RIGHT OUTER JOIN rt0 ON highlight(rt0.c1 COLLATE NOCASE, ((rt0.c3)&(rt0.c1)), HEX(NULL), rt0.c0) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((json_array(vt0.c0, t0.c0)) NOT NULL) RIGHT OUTER JOIN rt0 ON highlight(rt0.c1 COLLATE NOCASE, ((rt0.c3)&(rt0.c1)), HEX(NULL), rt0.c0) WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))))) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))<=((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((json_array(vt0.c0, t0.c0)) NOT NULL) RIGHT OUTER JOIN rt0 ON highlight(rt0.c1 COLLATE NOCASE, ((rt0.c3)&(rt0.c1)), HEX(NULL), rt0.c0) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON ((json_array(vt0.c0, t0.c0)) NOT NULL) RIGHT OUTER JOIN rt0 ON highlight(rt0.c1 COLLATE NOCASE, ((rt0.c3)&(rt0.c1)), HEX(NULL), rt0.c0) WHERE ((((CAST(rt0.c0 AS BLOB)))<=((((((rt0.c0)OR(rt0.c3)))AND(vt0.c0)))))) ORDER BY NULL COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c3  WHEN NULL THEN rt0.c0 ELSE rt0.c3 END))!=((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))) ORDER BY (('') BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c3  WHEN NULL THEN rt0.c0 ELSE rt0.c3 END))!=((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY (('') BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c4) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c3  WHEN NULL THEN rt0.c0 ELSE rt0.c3 END))!=((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))) ORDER BY (('') BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c3  WHEN NULL THEN rt0.c0 ELSE rt0.c3 END))!=((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY (('') BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c4) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((CASE rt0.c3  WHEN NULL THEN rt0.c0 ELSE rt0.c3 END))!=((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))) ORDER BY (('') BETWEEN (TYPEOF(rt0.c0)) AND (((rt0.c4) IS TRUE))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((9.5049527E7)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((9.5049527E7)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((9.5049527E7)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((9.5049527E7)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(CAST(vt1.c0 AS NUMERIC))))OR(SQLITE_COMPILEOPTION_USED(vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((9.5049527E7)))  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (UPPER(t0.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) NOT BETWEEN (UPPER(t0.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (UPPER(t0.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) NOT BETWEEN (UPPER(t0.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOT BETWEEN (UPPER(t0.c0)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))))==((1952341563 COLLATE BINARY))) LEFT OUTER JOIN rt0 ON CAST((((t0.c0))<>((rt0.c0))) AS TEXT) WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) ISNULL)) ORDER BY TRIM(DISTINCT (~ (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) ISNULL)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))))==((1952341563 COLLATE BINARY))) LEFT OUTER JOIN rt0 ON CAST((((t0.c0))!=((rt0.c0))) AS TEXT) ORDER BY TRIM(DISTINCT (~ (t0.c0)))  NULLS LAST);
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))))==((1952341563 COLLATE BINARY))) LEFT OUTER JOIN rt0 ON CAST((((t0.c0))<>((rt0.c0))) AS TEXT) WHERE (((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) ISNULL)) ORDER BY TRIM(DISTINCT (~ (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c1) AND (rt0.c4))) ISNULL)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0))))==((1952341563 COLLATE BINARY))) LEFT OUTER JOIN rt0 ON CAST((((t0.c0))!=((rt0.c0))) AS TEXT) ORDER BY TRIM(DISTINCT (~ (t0.c0)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)==(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)==(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)=(CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST(((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE (CASE ((t0.c0)LIKE(vt0.c0))  WHEN LOWER(rt0.c1) THEN rt0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)LIKE(vt0.c0))  WHEN LOWER(rt0.c1) THEN rt0.c3 END) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE (CASE ((t0.c0)LIKE(vt0.c0))  WHEN LOWER(rt0.c1) THEN rt0.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)LIKE(vt0.c0))  WHEN LOWER(rt0.c1) THEN rt0.c3 END) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE (CASE ((t0.c0)LIKE(vt0.c0))  WHEN LOWER(rt0.c1) THEN rt0.c3 END);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((t0.c0) BETWEEN (rt0.c2) AND (0.30883376552525055)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((t0.c0) BETWEEN (rt0.c2) AND (0.30883376552525055)) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((t0.c0) BETWEEN (rt0.c2) AND (0.30883376552525055)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((t0.c0) BETWEEN (rt0.c2) AND (0.30883376552525055)) END) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt1 WHERE (CASE WHEN rt0.c2 THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END ELSE ((t0.c0) BETWEEN (rt0.c2) AND (0.30883376552525055)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE RTRIM WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND ((vt1.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND ((vt1.c0 IN (x''))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND ((vt1.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND ((vt1.c0 IN (x''))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON rt0.c2);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE (((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND ((vt1.c0 IN (x'')))));
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((rt0.c4 IN ()))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('297227595')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('297227595'))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((rt0.c4 IN ()))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('297227595')))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('297227595'))))) IS TRUE)  as count FROM t0, vt0, vt1, rt0);
SELECT ALL * FROM t0, vt0, vt1, rt0 WHERE ((((rt0.c4 IN ()))>>(((rt0.c2) NOT BETWEEN (rt0.c1) AND ('297227595')))));
SELECT * FROM rt0 WHERE (((((JULIANDAY(rt0.c2, 0.4061281750172485, rt0.c0, 1.067700022E9, rt0.c2))AND((((rt0.c1, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c0))))))AND(((NULL) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY IFNULL(DISTINCT (+ (rt0.c0)), ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0xe7d70b3)));
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(rt0.c2, 0.4061281750172485, rt0.c0, 1.067700022E9, rt0.c2))AND((((rt0.c1, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c0))))))AND(((NULL) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT (+ (rt0.c0)), ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0Xe7d70b3))));
SELECT * FROM rt0 WHERE (((((JULIANDAY(rt0.c2, 0.4061281750172485, rt0.c0, 1.067700022E9, rt0.c2))AND((((rt0.c1, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c0))))))AND(((NULL) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY IFNULL(DISTINCT (+ (rt0.c0)), ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0xe7d70b3)));
SELECT SUM(count) FROM (SELECT ALL ((((((JULIANDAY(rt0.c2, 0.4061281750172485, rt0.c0, 1.067700022E9, rt0.c2))AND((((rt0.c1, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c0))))))AND(((NULL) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT (+ (rt0.c0)), ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0Xe7d70b3))));
SELECT * FROM rt0 WHERE (((((JULIANDAY(rt0.c2, 0.4061281750172485, rt0.c0, 1.067700022E9, rt0.c2))AND((((rt0.c1, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, rt0.c0))))))AND(((NULL) BETWEEN (rt0.c3) AND (rt0.c2))))) ORDER BY IFNULL(DISTINCT (+ (rt0.c0)), ((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(0xe7d70b3)));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY (+ (((rt0.c3)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)IS(rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY (+ (((rt0.c3)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)IS(rt0.c3)))));
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT NULL)) ORDER BY (+ (((rt0.c3)IS(rt0.c3))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0 IN ()))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN '0.5121141322995696' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)>=(0xffffffff813ded69)))))OR(((('0.09043384485937878', rt0.c4, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c0, '0.5121141322995696')) AND (('365297883', rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))OR(((vt1.c0)LIKE(vt1.c0)))) WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0 IN ()))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN '0.5121141322995696' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)>=(0xffffffff813ded69)))))OR(((('0.09043384485937878', rt0.c4, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c0, '0.5121141322995696')) AND (('365297883', rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))OR(((vt1.c0)LIKE(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0 IN ()))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN '0.5121141322995696' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)>=(0xffffffff813ded69)))))OR(((('0.09043384485937878', rt0.c4, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c0, '0.5121141322995696')) AND (('365297883', rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))OR(((vt1.c0)LIKE(vt1.c0)))) WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0 IN ()))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN '0.5121141322995696' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)>=(0xffffffff813ded69)))))OR(((('0.09043384485937878', rt0.c4, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c0, '0.5121141322995696')) AND (('365297883', rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))OR(((vt1.c0)LIKE(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((((((((vt1.c0 IN ()))OR(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN '0.5121141322995696' THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)>=(0xffffffff813ded69)))))OR(((('0.09043384485937878', rt0.c4, NULL, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2, rt0.c0, '0.5121141322995696')) AND (('365297883', rt0.c3, rt0.c3, rt0.c2, rt0.c1))))))OR(((vt1.c0)LIKE(vt1.c0)))) WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c1, 0.4354165702545242, vt1.c0)) BETWEEN ((((rt0.c4)&(rt0.c4)), rt0.c3, ((NULL) ISNULL))) AND ((((1.408779705E9)<=(rt0.c3)), ((rt0.c4)<=(rt0.c4)), (vt1.c0 IN ())))) WHERE (((json_quote('ـ}'))+(load_extension('yi94', rt0.c3)))) ORDER BY ((x'') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote('ـ}'))+(load_extension('yi94', rt0.c3)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c1, 0.4354165702545242, vt1.c0)) BETWEEN ((((rt0.c4)&(rt0.c4)), rt0.c3, ((NULL) ISNULL))) AND ((((1.408779705E9)<=(rt0.c3)), ((rt0.c4)<=(rt0.c4)), (vt1.c0 IN ())))) ORDER BY ((x'') NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON (((rt0.c1, 0.4354165702545242, vt1.c0)) BETWEEN ((((rt0.c4)&(rt0.c4)), rt0.c3, ((NULL) ISNULL))) AND ((((1.408779705E9)<=(rt0.c3)), ((rt0.c4)<=(rt0.c4)), (vt1.c0 IN ())))) WHERE (((json_quote('ـ}'))+(load_extension('yi94', rt0.c3)))) ORDER BY ((x'') NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote('ـ}'))+(load_extension('yi94', rt0.c3)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c1, 0.4354165702545242, vt1.c0)) BETWEEN ((((rt0.c4)&(rt0.c4)), rt0.c3, ((NULL) ISNULL))) AND ((((1.408779705E9)<=(rt0.c3)), ((rt0.c4)<=(rt0.c4)), (vt1.c0 IN ())))) ORDER BY ((x'') NOT NULL)  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((0.3461259270172947 IN (rt0.c2)))>>(((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.3461259270172947 IN (rt0.c2)))>>(((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c0))))));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((0.3461259270172947 IN (rt0.c2)))>>(((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((0.3461259270172947 IN (rt0.c2)))>>(((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c0))))));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((0.3461259270172947 IN (rt0.c2)))>>(((rt0.c4) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((rt0.c0)) BETWEEN ((CAST(rt0.c3 AS INTEGER))) AND ((((vt0.c1)>=(vt0.c0)))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS REAL) LEFT OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))||(CAST(rt0.c0 AS INTEGER))) WHERE (((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS REAL) LEFT OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))||(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS REAL) LEFT OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))||(CAST(rt0.c0 AS INTEGER))) WHERE (((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS REAL) LEFT OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))||(CAST(rt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CAST((- (vt0.c0)) AS REAL) LEFT OUTER JOIN vt1 ON ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))||(CAST(rt0.c0 AS INTEGER))) WHERE (((((vt0.c0)OR(vt0.c1 COLLATE BINARY)))OR(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (((('')AND(rt0.c3)))AND(vt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (- ((+ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (((('')AND(rt0.c3)))AND(vt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) ORDER BY (- ((+ (NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (((('')AND(rt0.c3)))AND(vt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (- ((+ (NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (((('')AND(rt0.c3)))AND(vt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) ORDER BY (- ((+ (NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON (rt0.c0 IN ()) WHERE (CASE ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3))  WHEN (((('')AND(rt0.c3)))AND(vt1.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c0)) ELSE ((rt0.c0)/(rt0.c4)) END) ORDER BY (- ((+ (NULL))))  NULLS LAST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c4, NULL, '365297883')))) ISNULL) WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((rt0.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt0.c0 IN ()), ((rt0.c4) NOTNULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c4, NULL, '365297883')))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c4, NULL, '365297883')))) ISNULL) WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((rt0.c4) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT (vt0.c0 IN ()), ((rt0.c4) NOTNULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c4, NULL, '365297883')))) ISNULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((((rt0.c1, rt0.c2, rt0.c0))>=((rt0.c4, NULL, '365297883')))) ISNULL) WHERE (IFNULL(DISTINCT (vt0.c0 IN ()), ((rt0.c4) NOTNULL)));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (x'' IN ()) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (x'' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (x'' IN ()) END) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))  WHEN (rt0.c3 IN (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE (x'' IN ()) END);
SELECT * FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS(rt0.c1)))<<(rt0.c0)) WHERE (LOWER(DISTINCT ((vt0.c1)+(rt0.c4)))) ORDER BY CAST(((vt1.c0)+(rt0.c2)) AS BLOB), CAST(rt0.c3 AS BLOB) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1)+(rt0.c4)))) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS(rt0.c1)))<<(rt0.c0)) ORDER BY CAST(((vt1.c0)+(rt0.c2)) AS BLOB), CAST(rt0.c3 AS BLOB) COLLATE RTRIM DESC);
SELECT * FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS(rt0.c1)))<<(rt0.c0)) WHERE (LOWER(DISTINCT ((vt0.c1)+(rt0.c4)))) ORDER BY CAST(((vt1.c0)+(rt0.c2)) AS BLOB), CAST(rt0.c3 AS BLOB) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1)+(rt0.c4)))) IS TRUE)  as count FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS(rt0.c1)))<<(rt0.c0)) ORDER BY CAST(((vt1.c0)+(rt0.c2)) AS BLOB), CAST(rt0.c3 AS BLOB) COLLATE RTRIM DESC);
SELECT * FROM t0, vt1, vt0 RIGHT OUTER JOIN rt0 ON ((((vt1.c0)IS(rt0.c1)))<<(rt0.c0)) WHERE (LOWER(DISTINCT ((vt0.c1)+(rt0.c4)))) ORDER BY CAST(((vt1.c0)+(rt0.c2)) AS BLOB), CAST(rt0.c3 AS BLOB) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((IFNULL(DISTINCT rt0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (rt0.c0)) WHERE ((NULL IN ())) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((IFNULL(DISTINCT rt0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (rt0.c0)) ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((IFNULL(DISTINCT rt0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (rt0.c0)) WHERE ((NULL IN ())) ORDER BY rt0.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((IFNULL(DISTINCT rt0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (rt0.c0)) ORDER BY rt0.c3 ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((IFNULL(DISTINCT rt0.c0, t0.c0)) NOT BETWEEN (((t0.c0) NOT NULL)) AND (rt0.c0)) WHERE ((NULL IN ())) ORDER BY rt0.c3 ASC;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR((NOT (vt1.c0)))))OR(vt1.c0))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))OR((NOT (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR((NOT (vt1.c0)))))OR(vt1.c0))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))OR((NOT (vt1.c0)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))OR((NOT (vt1.c0)))))OR(vt1.c0))) ORDER BY (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c3)>(rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c4 END WHEN json_array(t0.c0, rt0.c3) THEN rt0.c1 COLLATE NOCASE ELSE ((t0.c0)!=(NULL)) END) ORDER BY ((TRIM(DISTINCT rt0.c4, rt0.c0))==(rt0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN ((rt0.c3)>(rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c4 END WHEN json_array(t0.c0, rt0.c3) THEN rt0.c1 COLLATE NOCASE ELSE ((t0.c0)<>(NULL)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((TRIM(DISTINCT rt0.c4, rt0.c0))=(rt0.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c3)>(rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c4 END WHEN json_array(t0.c0, rt0.c3) THEN rt0.c1 COLLATE NOCASE ELSE ((t0.c0)!=(NULL)) END) ORDER BY ((TRIM(DISTINCT rt0.c4, rt0.c0))==(rt0.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c2))  WHEN ((rt0.c3)>(rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c4 END WHEN json_array(t0.c0, rt0.c3) THEN rt0.c1 COLLATE NOCASE ELSE ((t0.c0)<>(NULL)) END) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY ((TRIM(DISTINCT rt0.c4, rt0.c0))=(rt0.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CASE (NOT (rt0.c2))  WHEN ((rt0.c3)>(rt0.c2)) THEN CAST(rt0.c0 AS NUMERIC) WHEN ((vt1.c0) NOTNULL) THEN CASE WHEN rt0.c3 THEN t0.c0 ELSE rt0.c4 END WHEN json_array(t0.c0, rt0.c3) THEN rt0.c1 COLLATE NOCASE ELSE ((t0.c0)!=(NULL)) END) ORDER BY ((TRIM(DISTINCT rt0.c4, rt0.c0))==(rt0.c2 COLLATE RTRIM)) DESC;
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((0.8478674471825491)) AND ((vt0.c1))))) AND (('H4g!9G精#')))) ORDER BY (- (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST, ((rtreenode(vt0.c1, vt1.c0))+(((((NULL)AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((0.8478674471825491)) AND ((vt0.c1))))) AND (('H4g!9G精#')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST, ((rtreenode(vt0.c1, vt1.c0))+(((((NULL)AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((0.8478674471825491)) AND ((vt0.c1))))) AND (('H4g!9G精#')))) ORDER BY (- (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST, ((rtreenode(vt0.c1, vt1.c0))+(((((NULL)AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((0.8478674471825491)) AND ((vt0.c1))))) AND (('H4g!9G精#')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (- (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST, ((rtreenode(vt0.c1, vt1.c0))+(((((NULL)AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((0.8478674471825491)) AND ((vt0.c1))))) AND (('H4g!9G精#')))) ORDER BY (- (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))) DESC  NULLS FIRST, ((rtreenode(vt0.c1, vt1.c0))+(((((NULL)AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c4))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c4))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((~ (rt0.c4))) IS TRUE));
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (',yC7_\nQA') ORDER BY CASE WHEN (NOT (vt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((0xffffffffebd9e3dd) NOTNULL) END DESC, rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((',yC7_\nQA') IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((0Xffffffffebd9e3dd) NOTNULL) END DESC, rt0.c4 ASC);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (',yC7_\nQA') ORDER BY CASE WHEN (NOT (vt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((0xffffffffebd9e3dd) NOTNULL) END DESC, rt0.c4 ASC;
SELECT SUM(count) FROM (SELECT ((',yC7_\nQA') IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY CASE WHEN (NOT (vt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((0Xffffffffebd9e3dd) NOTNULL) END DESC, rt0.c4 ASC);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (',yC7_\nQA') ORDER BY CASE WHEN (NOT (vt0.c1)) THEN CASE WHEN rt0.c1 THEN rt0.c1 END ELSE ((0xffffffffebd9e3dd) NOTNULL) END DESC, rt0.c4 ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((((((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))))OR(CAST(rt0.c2 AS TEXT))))AND(vt1.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))))OR(CAST(rt0.c2 AS TEXT))))AND(vt1.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((((((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))))OR(CAST(rt0.c2 AS TEXT))))AND(vt1.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))))OR(CAST(rt0.c2 AS TEXT))))AND(vt1.c0)))AND(vt0.c0))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((((((((((((((((vt1.c0)AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)))AND(((((rt0.c2)AND(vt0.c0)))OR(rt0.c1)))))OR(CAST(rt0.c2 AS TEXT))))AND(vt1.c0)))AND(vt0.c0)));
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1)))=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1)))=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1)))=((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1)))=((t0.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c1)))AND(vt0.c1)))=((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c1 COLLATE RTRIM)AND('/o7]')))OR(((x'ff77')GLOB(vt0.c0))))) ORDER BY LOWER(((t0.c0)<>(vt0.c0)))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (-8.093656E8) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)AND('/o7]')))OR(((x'ff77')GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(((t0.c0)!=(vt0.c0)))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (-8.093656E8) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c1 COLLATE RTRIM)AND('/o7]')))OR(((x'ff77')GLOB(vt0.c0))))) ORDER BY LOWER(((t0.c0)<>(vt0.c0)))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (-8.093656E8) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE RTRIM)AND('/o7]')))OR(((x'ff77')GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(((t0.c0)!=(vt0.c0)))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (-8.093656E8) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt0.c1 COLLATE RTRIM)AND('/o7]')))OR(((x'ff77')GLOB(vt0.c0))))) ORDER BY LOWER(((t0.c0)<>(vt0.c0)))  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (-8.093656E8) AND (vt1.c0))) ISNULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c3, '{>'))>=((vt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN ((~ (rt0.c3))) AND ((rt0.c4 IN ())))) ORDER BY CAST((x'' IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt0.c3, '{>'))>=((vt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN ((~ (rt0.c3))) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((x'' IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c3, '{>'))>=((vt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN ((~ (rt0.c3))) AND ((rt0.c4 IN ())))) ORDER BY CAST((x'' IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt0.c3, '{>'))>=((vt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN ((~ (rt0.c3))) AND ((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((x'' IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((rt0.c4, rt0.c3, '{>'))>=((vt0.c0, vt0.c0, rt0.c1)))) NOT BETWEEN ((~ (rt0.c3))) AND ((rt0.c4 IN ())))) ORDER BY CAST((x'' IN ()) AS INTEGER);
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.8243957004283418) ORDER BY ((((((((rt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(((x'e4c5')&(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8243957004283418) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((rt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(((x'e4c5')&(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.8243957004283418) ORDER BY ((((((((rt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(((x'e4c5')&(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8243957004283418) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((rt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(((x'e4c5')&(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt0 WHERE (0.8243957004283418) ORDER BY ((((((((rt0.c0)OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(((x'e4c5')&(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c3)+(vt0.c0))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE NULL END, x'03cb', ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(x'')))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (rt0.c0 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE NULL END, x'03cb', ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(x'')))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c3)+(vt0.c0))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE NULL END, x'03cb', ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(x'')))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)+(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (rt0.c0 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE NULL END, x'03cb', ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(x'')))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((- (((rt0.c3)+(vt0.c0))))) ORDER BY (rt0.c0 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c3 THEN vt0.c1 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE NULL END, x'03cb', ((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(x'')))AND(vt0.c1))))  NULLS LAST;
SELECT * FROM vt1, t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2)<<(vt1.c0)))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2)<<(vt1.c0)))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2)<<(vt1.c0)))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2)<<(vt1.c0)))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((CAST(rt0.c0 AS TEXT))OR(((rt0.c2)<<(vt1.c0)))))AND(((rt0.c3) BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) ELSE 0.4775454742164337 END, (~ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) ELSE 0.4775454742164337 END, (~ (vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) ELSE 0.4775454742164337 END, (~ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) ELSE 0.4775454742164337 END, (~ (vt1.c0)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (NULL) ORDER BY CASE WHEN vt1.c0 THEN ((vt1.c0) IS TRUE) ELSE 0.4775454742164337 END, (~ (vt1.c0)) DESC;
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ('-488273061');
SELECT SUM(count) FROM (SELECT (('-488273061') IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ('-488273061');
SELECT SUM(count) FROM (SELECT (('-488273061') IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN t0);
SELECT * FROM vt0, rt0 NATURAL JOIN t0 WHERE ('-488273061');
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (LIKELY(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) ISNULL))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (LIKELY(((vt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt0.c1) ISNULL))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (LIKELY(((vt0.c1) ISNULL)));
SELECT ALL * FROM rt0 NOT INDEXED, t0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER));
SELECT ALL * FROM rt0 NOT INDEXED, t0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER));
SELECT ALL * FROM rt0 NOT INDEXED, t0 WHERE (CAST(rt0.c1 AS INTEGER)) ORDER BY CAST(((rt0.c1) NOT NULL) AS INTEGER);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((3.40743936E8)<=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((3.40743936E8)<=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((3.40743936E8)<=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ((((3.40743936E8)<=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((3.40743936E8)<=((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (CAST(t0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((TIME(rt0.c1, rt0.c1, rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TIME(rt0.c1, rt0.c1, rt0.c3) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((TIME(rt0.c1, rt0.c1, rt0.c3) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((TIME(rt0.c1, rt0.c1, rt0.c3) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((TIME(rt0.c1, rt0.c1, rt0.c3) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c3);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c2 IN ()))OR(((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))))OR(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))))OR(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c2 IN ()))OR(((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))))OR(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))OR(((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))))OR(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE ((((((rt0.c2 IN ()))OR(((((((((((((rt0.c0)OR(t0.c0)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c3)))))OR(CASE t0.c0  WHEN rt0.c0 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (LIKELY(340743936));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(340743936)) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (LIKELY(340743936));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(340743936)) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (LIKELY(340743936));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (~ (((((vt0.c0)OR(rt0.c1)))AND(NULL)))) LEFT OUTER JOIN vt0 ON json_array(rt0.c2, ((((rt0.c3)AND('-971521541')))AND(vt1.c0))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (~ (((((vt0.c0)OR(rt0.c1)))AND(NULL)))) LEFT OUTER JOIN vt0 ON json_array(rt0.c2, ((((rt0.c3)AND('-971521541')))AND(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (~ (((((vt0.c0)OR(rt0.c1)))AND(NULL)))) LEFT OUTER JOIN vt0 ON json_array(rt0.c2, ((((rt0.c3)AND('-971521541')))AND(vt1.c0))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (~ (((((vt0.c0)OR(rt0.c1)))AND(NULL)))) LEFT OUTER JOIN vt0 ON json_array(rt0.c2, ((((rt0.c3)AND('-971521541')))AND(vt1.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON (~ (((((vt0.c0)OR(rt0.c1)))AND(NULL)))) LEFT OUTER JOIN vt0 ON json_array(rt0.c2, ((((rt0.c3)AND('-971521541')))AND(vt1.c0))) WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.6124446342204689)OR(rt0.c0)))AND(1271388185)) IN ())) ORDER BY (((rt0.c1 IN ()))%(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.6124446342204689)OR(rt0.c0)))AND(1271388185)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN ()))%(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.6124446342204689)OR(rt0.c0)))AND(1271388185)) IN ())) ORDER BY (((rt0.c1 IN ()))%(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.6124446342204689)OR(rt0.c0)))AND(1271388185)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN ()))%(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((0.6124446342204689)OR(rt0.c0)))AND(1271388185)) IN ())) ORDER BY (((rt0.c1 IN ()))%(CAST(vt0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1))) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((- (rt0.c1))) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE (NOT (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE (NOT (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY CASE (NOT (vt0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END THEN (NOT (vt0.c0)) ELSE vt0.c1 COLLATE BINARY END  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((x'')*(rt0.c1)) COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((t0.c0 IN (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')*(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((NULL) BETWEEN ((t0.c0 IN (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)))));
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((x'')*(rt0.c1)) COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((t0.c0 IN (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')*(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((NULL) BETWEEN ((t0.c0 IN (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0)))));
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((x'')*(rt0.c1)) COLLATE NOCASE) ORDER BY ((NULL) BETWEEN ((t0.c0 IN (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c0))));
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (CASE WHEN IFNULL(rt0.c1, rt0.c2) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((rt0.c3, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c0)) AND ((rt0.c3, rt0.c3, vt1.c0))) THEN ((t0.c0)>(rt0.c1)) WHEN CASE WHEN vt0.c1 THEN 0xf809e3a END THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(rt0.c1, rt0.c2) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((rt0.c3, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c0)) AND ((rt0.c3, rt0.c3, vt1.c0))) THEN ((t0.c0)>(rt0.c1)) WHEN CASE WHEN vt0.c1 THEN 0Xf809e3a END THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (CASE WHEN IFNULL(rt0.c1, rt0.c2) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((rt0.c3, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c0)) AND ((rt0.c3, rt0.c3, vt1.c0))) THEN ((t0.c0)>(rt0.c1)) WHEN CASE WHEN vt0.c1 THEN 0xf809e3a END THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN IFNULL(rt0.c1, rt0.c2) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((rt0.c3, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c0)) AND ((rt0.c3, rt0.c3, vt1.c0))) THEN ((t0.c0)>(rt0.c1)) WHEN CASE WHEN vt0.c1 THEN 0Xf809e3a END THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0 WHERE (CASE WHEN IFNULL(rt0.c1, rt0.c2) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN (((rt0.c3, rt0.c2, t0.c0)) NOT BETWEEN ((rt0.c4, rt0.c2, t0.c0)) AND ((rt0.c3, rt0.c3, vt1.c0))) THEN ((t0.c0)>(rt0.c1)) WHEN CASE WHEN vt0.c1 THEN 0xf809e3a END THEN vt0.c0 COLLATE RTRIM END) ORDER BY (- (CAST(rt0.c3 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((x'') NOT NULL))!=('-774377995')));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))!=('-774377995'))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((x'') NOT NULL))!=('-774377995')));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT NULL))!=('-774377995'))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((((x'') NOT NULL))!=('-774377995')));
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE ((((t0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c3)>>(rt0.c4)), CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (NOT (vt1.c0)), ((rt0.c2)+(rt0.c1)), (rt0.c1 IN (t0.c0)))) AND ((((((rt0.c3)AND('0.7598154334339371')))OR(rt0.c1)), (rt0.c1 IN ()), ((((vt0.c1)AND(rt0.c2)))AND(vt1.c0)), rt0.c3, (rt0.c1 IN ()))))) ORDER BY (((- (rt0.c0))) NOTNULL), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (NULLIF(DISTINCT '243101875', rt0.c2)) AND (load_extension(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c3)>>(rt0.c4)), CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (NOT (vt1.c0)), ((rt0.c2)+(rt0.c1)), (rt0.c1 IN (t0.c0)))) AND ((((((rt0.c3)AND('0.7598154334339371')))OR(rt0.c1)), (rt0.c1 IN ()), ((((vt0.c1)AND(rt0.c2)))AND(vt1.c0)), rt0.c3, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t0 ORDER BY (((- (rt0.c0))) NOTNULL), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (NULLIF(DISTINCT '243101875', rt0.c2)) AND (load_extension(vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE ((((t0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c3)>>(rt0.c4)), CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (NOT (vt1.c0)), ((rt0.c2)+(rt0.c1)), (rt0.c1 IN (t0.c0)))) AND ((((((rt0.c3)AND('0.7598154334339371')))OR(rt0.c1)), (rt0.c1 IN ()), ((((vt0.c1)AND(rt0.c2)))AND(vt1.c0)), rt0.c3, (rt0.c1 IN ()))))) ORDER BY (((- (rt0.c0))) NOTNULL), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (NULLIF(DISTINCT '243101875', rt0.c2)) AND (load_extension(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c3)>>(rt0.c4)), CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (NOT (vt1.c0)), ((rt0.c2)+(rt0.c1)), (rt0.c1 IN (t0.c0)))) AND ((((((rt0.c3)AND('0.7598154334339371')))OR(rt0.c1)), (rt0.c1 IN ()), ((((vt0.c1)AND(rt0.c2)))AND(vt1.c0)), rt0.c3, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt0, rt0, vt1 NATURAL JOIN t0 ORDER BY (((- (rt0.c0))) NOTNULL), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (NULLIF(DISTINCT '243101875', rt0.c2)) AND (load_extension(vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 NATURAL JOIN t0 WHERE ((((t0.c0, rt0.c1, rt0.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((((rt0.c3)>>(rt0.c4)), CASE vt0.c1  WHEN rt0.c0 THEN rt0.c0 END, (NOT (vt1.c0)), ((rt0.c2)+(rt0.c1)), (rt0.c1 IN (t0.c0)))) AND ((((((rt0.c3)AND('0.7598154334339371')))OR(rt0.c1)), (rt0.c1 IN ()), ((((vt0.c1)AND(rt0.c2)))AND(vt1.c0)), rt0.c3, (rt0.c1 IN ()))))) ORDER BY (((- (rt0.c0))) NOTNULL), ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c0 THEN rt0.c3 END) NOT BETWEEN (NULLIF(DISTINCT '243101875', rt0.c2)) AND (load_extension(vt0.c1))) DESC;
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE ((((+ (rt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(rt0.c3)))OR(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(rt0.c3)))OR(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(rt0.c3)))OR(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(rt0.c3)))OR(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY t0.c0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))OR(((vt0.c1) BETWEEN (vt0.c1) AND (rt0.c3)))))AND(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END)))OR(rt0.c3)))OR(((((rt0.c3)AND(rt0.c1)))OR(vt0.c0))))) ORDER BY t0.c0;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE 0.7352726635085091  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c1) IS TRUE) WHEN vt1.c0 THEN ((vt0.c0)*(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0.7352726635085091  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c1) IS TRUE) WHEN vt1.c0 THEN ((vt0.c0)*(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE 0.7352726635085091  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c1) IS TRUE) WHEN vt1.c0 THEN ((vt0.c0)*(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE 0.7352726635085091  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c1) IS TRUE) WHEN vt1.c0 THEN ((vt0.c0)*(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt1.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE 0.7352726635085091  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END THEN ((vt0.c1) IS TRUE) WHEN vt1.c0 THEN ((vt0.c0)*(vt0.c1)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END)OR(((vt0.c1)IS NOT(vt0.c0)))))OR(((vt1.c0) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (vt1.c0);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)/(rt0.c4)) LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))==((((rt0.c3, rt0.c0, t0.c0, rt0.c3, vt0.c1))<((vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1))))) WHERE ((((((rt0.c2)IS(vt0.c1))))<>((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)IS(vt0.c1))))!=((rt0.c3)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)/(rt0.c4)) LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))=((((rt0.c3, rt0.c0, t0.c0, rt0.c3, vt0.c1))<((vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1))))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)/(rt0.c4)) LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))==((((rt0.c3, rt0.c0, t0.c0, rt0.c3, vt0.c1))<((vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1))))) WHERE ((((((rt0.c2)IS(vt0.c1))))<>((rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)IS(vt0.c1))))!=((rt0.c3)))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)/(rt0.c4)) LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))=((((rt0.c3, rt0.c0, t0.c0, rt0.c3, vt0.c1))<((vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1))))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ((t0.c0 COLLATE NOCASE)/(rt0.c4)) LEFT OUTER JOIN rt0 ON (((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))==((((rt0.c3, rt0.c0, t0.c0, rt0.c3, vt0.c1))<((vt0.c0, rt0.c4, rt0.c3, rt0.c2, rt0.c1))))) WHERE ((((((rt0.c2)IS(vt0.c1))))<>((rt0.c3))));
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c1, vt0.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), ((((vt1.c0)AND(vt0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, t0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c1, vt0.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), ((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c1, vt0.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), ((((vt1.c0)AND(vt0.c0)))OR(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, rt0.c2, t0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c1, vt0.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), ((((vt1.c0)AND(vt0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE ((((t0.c0, rt0.c2, t0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC), rt0.c1, vt0.c1 COLLATE BINARY)) AND ((t0.c0 COLLATE BINARY, (((rt0.c2)) NOT BETWEEN (('')) AND ((rt0.c4))), ((((vt1.c0)AND(vt0.c0)))OR(t0.c0))))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c0)<<(rt0.c2)))AND(vt0.c0)))AND((((vt0.c0))>((vt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (((((x'c9c2') BETWEEN (rt0.c3) AND (x'')))!=(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'c9c2') BETWEEN (rt0.c3) AND (x'')))!=(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c0)<<(rt0.c2)))AND(vt0.c0)))AND((((vt0.c0))>((vt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c0)<<(rt0.c2)))AND(vt0.c0)))AND((((vt0.c0))>((vt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (((((x'c9c2') BETWEEN (rt0.c3) AND (x'')))!=(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((x'c9c2') BETWEEN (rt0.c3) AND (x'')))!=(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c0)<<(rt0.c2)))AND(vt0.c0)))AND((((vt0.c0))>((vt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c0)<<(rt0.c2)))AND(vt0.c0)))AND((((vt0.c0))>((vt0.c1))))))OR(CAST(rt0.c0 AS TEXT))))OR(CAST(rt0.c1 AS INTEGER))) WHERE (((((x'c9c2') BETWEEN (rt0.c3) AND (x'')))!=(((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY CASE WHEN (- (rt0.c1)) THEN ((rt0.c4)<(rt0.c2)) ELSE 0.8483476526363106 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c1)) THEN ((rt0.c4)<(rt0.c2)) ELSE 0.8483476526363106 END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY CASE WHEN (- (rt0.c1)) THEN ((rt0.c4)<(rt0.c2)) ELSE 0.8483476526363106 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (rt0.c1)) THEN ((rt0.c4)<(rt0.c2)) ELSE 0.8483476526363106 END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC)) ORDER BY CASE WHEN (- (rt0.c1)) THEN ((rt0.c4)<(rt0.c2)) ELSE 0.8483476526363106 END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (((rt0.c2, rt0.c4, rt0.c3))<((vt1.c0, rt0.c2, rt0.c4))) COLLATE RTRIM WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED INNER JOIN vt0 ON (((rt0.c2, rt0.c4, rt0.c3))<((vt1.c0, rt0.c2, rt0.c4))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (((rt0.c2, rt0.c4, rt0.c3))<((vt1.c0, rt0.c2, rt0.c4))) COLLATE RTRIM WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED INNER JOIN vt0 ON (((rt0.c2, rt0.c4, rt0.c3))<((vt1.c0, rt0.c2, rt0.c4))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN vt0 ON (((rt0.c2, rt0.c4, rt0.c3))<((vt1.c0, rt0.c2, rt0.c4))) COLLATE RTRIM WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((((((rt0.c4, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, t0.c0, vt0.c1)) AND ((x'', rt0.c0, rt0.c4)))))>=((CAST(rt0.c4 AS NUMERIC)))) WHERE (rt0.c2) ORDER BY ((TRIM(vt0.c0, 0.24724125543747966))OR((~ (rt0.c4)))), CASE WHEN 0.14097016099402992 THEN (((rt0.c4, rt0.c0, rt0.c0))>=((x'828d', rt0.c0, rt0.c2))) ELSE vt0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((((((rt0.c4, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, t0.c0, vt0.c1)) AND ((x'', rt0.c0, rt0.c4)))))>=((CAST(rt0.c4 AS NUMERIC)))) ORDER BY ((TRIM(vt0.c0, 0.24724125543747966))OR((~ (rt0.c4)))), CASE WHEN 0.14097016099402992 THEN (((rt0.c4, rt0.c0, rt0.c0))>=((x'828d', rt0.c0, rt0.c2))) ELSE vt0.c1 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((((((rt0.c4, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, t0.c0, vt0.c1)) AND ((x'', rt0.c0, rt0.c4)))))>=((CAST(rt0.c4 AS NUMERIC)))) WHERE (rt0.c2) ORDER BY ((TRIM(vt0.c0, 0.24724125543747966))OR((~ (rt0.c4)))), CASE WHEN 0.14097016099402992 THEN (((rt0.c4, rt0.c0, rt0.c0))>=((x'828d', rt0.c0, rt0.c2))) ELSE vt0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((((((rt0.c4, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, t0.c0, vt0.c1)) AND ((x'', rt0.c0, rt0.c4)))))>=((CAST(rt0.c4 AS NUMERIC)))) ORDER BY ((TRIM(vt0.c0, 0.24724125543747966))OR((~ (rt0.c4)))), CASE WHEN 0.14097016099402992 THEN (((rt0.c4, rt0.c0, rt0.c0))>=((x'828d', rt0.c0, rt0.c2))) ELSE vt0.c1 COLLATE BINARY END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt0 ON ((((((rt0.c4, vt1.c0, rt0.c0)) BETWEEN ((rt0.c3, t0.c0, vt0.c1)) AND ((x'', rt0.c0, rt0.c4)))))>=((CAST(rt0.c4 AS NUMERIC)))) WHERE (rt0.c2) ORDER BY ((TRIM(vt0.c0, 0.24724125543747966))OR((~ (rt0.c4)))), CASE WHEN 0.14097016099402992 THEN (((rt0.c4, rt0.c0, rt0.c0))>=((x'828d', rt0.c0, rt0.c2))) ELSE vt0.c1 COLLATE BINARY END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (x'') ORDER BY ((((TRIM(rt0.c2))OR(COALESCE(DISTINCT vt0.c1, rt0.c2))))AND(((vt1.c0)*(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((((TRIM(rt0.c2))OR(COALESCE(DISTINCT vt0.c1, rt0.c2))))AND(((vt1.c0)*(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (x'') ORDER BY ((((TRIM(rt0.c2))OR(COALESCE(DISTINCT vt0.c1, rt0.c2))))AND(((vt1.c0)*(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((((TRIM(rt0.c2))OR(COALESCE(DISTINCT vt0.c1, rt0.c2))))AND(((vt1.c0)*(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (x'') ORDER BY ((((TRIM(rt0.c2))OR(COALESCE(DISTINCT vt0.c1, rt0.c2))))AND(((vt1.c0)*(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), 'GUR7K65牣B', (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), 'GUR7K65牣B', (vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), 'GUR7K65牣B', (vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), 'GUR7K65牣B', (vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)), 'GUR7K65牣B', (vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((x'' IN (rt0.c1))) BETWEEN (((vt0.c1)%(vt1.c0))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c1))) BETWEEN (((vt0.c1)%(vt1.c0))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((x'' IN (rt0.c1))) BETWEEN (((vt0.c1)%(vt1.c0))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((x'' IN (rt0.c1))) BETWEEN (((vt0.c1)%(vt1.c0))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((x'' IN (rt0.c1))) BETWEEN (((vt0.c1)%(vt1.c0))) AND (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE (TIME(rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TIME(rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((TIME(rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (TIME(rt0.c0 COLLATE RTRIM, ((rt0.c2)GLOB(rt0.c2)), rt0.c0 COLLATE NOCASE));
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((NULL) IS TRUE))OR(((t0.c0) ISNULL))))OR(((vt1.c0)||(t0.c0)))) WHERE (vt1.c0) ORDER BY ((0.7760487163536972)|((((t0.c0))<((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((NULL) IS TRUE))OR(((t0.c0) ISNULL))))OR(((vt1.c0)||(t0.c0)))) ORDER BY ((0.7760487163536972)|((((t0.c0))<((t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((NULL) IS TRUE))OR(((t0.c0) ISNULL))))OR(((vt1.c0)||(t0.c0)))) WHERE (vt1.c0) ORDER BY ((0.7760487163536972)|((((t0.c0))<((t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON ((((((NULL) IS TRUE))OR(((t0.c0) ISNULL))))OR(((vt1.c0)||(t0.c0)))) ORDER BY ((0.7760487163536972)|((((t0.c0))<((t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM t0 LEFT OUTER JOIN vt1 ON ((((((NULL) IS TRUE))OR(((t0.c0) ISNULL))))OR(((vt1.c0)||(t0.c0)))) WHERE (vt1.c0) ORDER BY ((0.7760487163536972)|((((t0.c0))<((t0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt1, t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt0 ON 'Q''i%俹d' WHERE (((t0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((rt0.c4 COLLATE BINARY)LIKE((((rt0.c0, t0.c0, vt1.c0))>((vt1.c0, rt0.c3, rt0.c1))))), (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt0 ON 'Q''i%俹d' ORDER BY ((rt0.c4 COLLATE BINARY)LIKE((((rt0.c0, t0.c0, vt1.c0))>((vt1.c0, rt0.c3, rt0.c1))))), (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1, t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt0 ON 'Q''i%俹d' WHERE (((t0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((rt0.c4 COLLATE BINARY)LIKE((((rt0.c0, t0.c0, vt1.c0))>((vt1.c0, rt0.c3, rt0.c1))))), (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)>=(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt0 ON 'Q''i%俹d' ORDER BY ((rt0.c4 COLLATE BINARY)LIKE((((rt0.c0, t0.c0, vt1.c0))>((vt1.c0, rt0.c3, rt0.c1))))), (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1, t0 FULL OUTER JOIN rt0 ON rt0.c3 FULL OUTER JOIN vt0 ON 'Q''i%俹d' WHERE (((t0.c0)>=(rt0.c2)) COLLATE RTRIM) ORDER BY ((rt0.c4 COLLATE BINARY)LIKE((((rt0.c0, t0.c0, vt1.c0))>((vt1.c0, rt0.c3, rt0.c1))))), (((rt0.c1 IN ())) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY CAST(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))OR(NULL)))AND(vt1.c0)) AS TEXT) ASC  NULLS FIRST, (('{>') NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY CAST(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))OR(NULL)))AND(vt1.c0)) AS TEXT) ASC  NULLS FIRST, (('{>') NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY CAST(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))OR(NULL)))AND(vt1.c0)) AS TEXT) ASC  NULLS FIRST, (('{>') NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY CAST(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))OR(NULL)))AND(vt1.c0)) AS TEXT) ASC  NULLS FIRST, (('{>') NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ())) ORDER BY CAST(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c1)))OR(NULL)))AND(vt1.c0)) AS TEXT) ASC  NULLS FIRST, (('{>') NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.728627542491402) ORDER BY json(((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((0.728627542491402) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json(((vt0.c1) IS TRUE)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.728627542491402) ORDER BY json(((vt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((0.728627542491402) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json(((vt0.c1) IS TRUE)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (0.728627542491402) ORDER BY json(((vt0.c1) IS TRUE));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))|(UNLIKELY(rt0.c4))) WHERE (CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN '-1648622756' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY) ORDER BY LIKELY(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN '-1648622756' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))|(UNLIKELY(rt0.c4))) ORDER BY LIKELY(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))|(UNLIKELY(rt0.c4))) WHERE (CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN '-1648622756' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY) ORDER BY LIKELY(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN '-1648622756' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))|(UNLIKELY(rt0.c4))) ORDER BY LIKELY(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END) ASC);
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN rt0 ON ((((((((((vt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))|(UNLIKELY(rt0.c4))) WHERE (CASE rt0.c4  WHEN t0.c0 THEN rt0.c1 WHEN '-1648622756' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END COLLATE BINARY) ORDER BY LIKELY(DISTINCT CASE vt0.c0  WHEN t0.c0 THEN rt0.c3 ELSE rt0.c0 END) ASC;
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (rt0.c1);
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN vt1.c0 THEN rt0.c3 END THEN (((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, vt0.c1))) END RIGHT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1)))LIKE((rt0.c3 IN ()))) WHERE (CAST(((rt0.c3) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN vt1.c0 THEN rt0.c3 END THEN (((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, vt0.c1))) END RIGHT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1)))LIKE((rt0.c3 IN ()))));
SELECT * FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN vt1.c0 THEN rt0.c3 END THEN (((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, vt0.c1))) END RIGHT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1)))LIKE((rt0.c3 IN ()))) WHERE (CAST(((rt0.c3) ISNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) ISNULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CASE WHEN CASE WHEN vt1.c0 THEN rt0.c3 END THEN (((vt0.c0, rt0.c2, rt0.c2)) BETWEEN ((vt0.c1, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c2, vt0.c1))) END RIGHT OUTER JOIN rt0 ON ((((rt0.c2)%(rt0.c1)))LIKE((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x77464bc3 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x77464bc3 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x77464bc3 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x77464bc3 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN x'' THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0x77464bc3 END)||(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((((x'71fa'))>=((rt0.c0))))!=(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((x'71fa'))>=((rt0.c0))))<>(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((((x'71fa'))>=((rt0.c0))))!=(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((x'71fa'))>=((rt0.c0))))<>(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE ((((((x'71fa'))>=((rt0.c0))))!=(CAST(rt0.c0 AS BLOB))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((vt0.c0))<=((rt0.c0))))<>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST, SQLITE_VERSION() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0))<=((rt0.c0))))<>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST, SQLITE_VERSION() DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((vt0.c0))<=((rt0.c0))))<>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST, SQLITE_VERSION() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0))<=((rt0.c0))))<>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST, SQLITE_VERSION() DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY (((((vt0.c0))<=((rt0.c0))))<>(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST, SQLITE_VERSION() DESC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND ('-354415450')))) AND ((CAST(vt0.c1 AS TEXT)))) WHERE (((((t0.c0)||(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(vt0.c0)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND ('-354415450')))) AND ((CAST(vt0.c1 AS TEXT)))));
SELECT * FROM vt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND ('-354415450')))) AND ((CAST(vt0.c1 AS TEXT)))) WHERE (((((t0.c0)||(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(vt0.c0)))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND ('-354415450')))) AND ((CAST(vt0.c1 AS TEXT)))));
SELECT * FROM vt1 CROSS JOIN t0 ON ((CAST(t0.c0 AS INTEGER)) NOTNULL) RIGHT OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((t0.c0) BETWEEN (vt0.c0) AND ('-354415450')))) AND ((CAST(vt0.c1 AS TEXT)))) WHERE (((((t0.c0)||(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((0.25002903637564056) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.25002903637564056) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((0.25002903637564056) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((0.25002903637564056) NOT NULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CHANGES()) ORDER BY ((0.25002903637564056) NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c0 AS NUMERIC)))) WHERE (NULL) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c0 AS NUMERIC)))) WHERE (NULL) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c0 AS NUMERIC)))) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC  NULLS FIRST, NULL);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON (((t0.c0 COLLATE NOCASE))<=((CAST(t0.c0 AS NUMERIC)))) WHERE (NULL) ORDER BY CAST((vt0.c1 IN ()) AS BLOB) DESC  NULLS FIRST, NULL;
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN rt0.c3 THEN (vt0.c0 IN ()) WHEN ((NULL)>=(NULL)) THEN ((vt0.c1)IS(vt1.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (('')IS NOT(rt0.c4)) END) ORDER BY CASE WHEN x'b30f' THEN rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN (vt0.c0 IN ()) WHEN ((NULL)>=(NULL)) THEN ((vt0.c1)IS(vt1.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (('')IS NOT(rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CASE WHEN x'b30f' THEN rt0.c2 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN rt0.c3 THEN (vt0.c0 IN ()) WHEN ((NULL)>=(NULL)) THEN ((vt0.c1)IS(vt1.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (('')IS NOT(rt0.c4)) END) ORDER BY CASE WHEN x'b30f' THEN rt0.c2 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c3 THEN (vt0.c0 IN ()) WHEN ((NULL)>=(NULL)) THEN ((vt0.c1)IS(vt1.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (('')IS NOT(rt0.c4)) END) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CASE WHEN x'b30f' THEN rt0.c2 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (CASE WHEN rt0.c3 THEN (vt0.c0 IN ()) WHEN ((NULL)>=(NULL)) THEN ((vt0.c1)IS(vt1.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) ELSE (('')IS NOT(rt0.c4)) END) ORDER BY CASE WHEN x'b30f' THEN rt0.c2 END COLLATE BINARY;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))=((1.239375511E9)))) IS FALSE)) ORDER BY ((((((vt1.c0)&(t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.6989820082491244))))OR((- (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((1.239375511E9)))) IS FALSE)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c0)&(t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.6989820082491244))))OR((- (x''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))=((1.239375511E9)))) IS FALSE)) ORDER BY ((((((vt1.c0)&(t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.6989820082491244))))OR((- (x''))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))==((1.239375511E9)))) IS FALSE)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((((vt1.c0)&(t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.6989820082491244))))OR((- (x''))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0))=((1.239375511E9)))) IS FALSE)) ORDER BY ((((((vt1.c0)&(t0.c0)))OR(LIKELIHOOD(DISTINCT t0.c0, 0.6989820082491244))))OR((- (x''))))  NULLS FIRST;
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (0.8243957004283418)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (0.8243957004283418)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (0.8243957004283418)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (0.8243957004283418)) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (0.8243957004283418)) AS REAL));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(COALESCE(vt1.c0, vt1.c0, t0.c0, vt0.c0) AS REAL) INNER JOIN t0 ON ((((t0.c0 IN (t0.c0))))==((vt1.c0))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(COALESCE(vt1.c0, vt1.c0, t0.c0, vt0.c0) AS REAL) INNER JOIN t0 ON ((((t0.c0 IN (t0.c0))))=((vt1.c0))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(COALESCE(vt1.c0, vt1.c0, t0.c0, vt0.c0) AS REAL) INNER JOIN t0 ON ((((t0.c0 IN (t0.c0))))==((vt1.c0))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(COALESCE(vt1.c0, vt1.c0, t0.c0, vt0.c0) AS REAL) INNER JOIN t0 ON ((((t0.c0 IN (t0.c0))))=((vt1.c0))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(COALESCE(vt1.c0, vt1.c0, t0.c0, vt0.c0) AS REAL) INNER JOIN t0 ON ((((t0.c0 IN (t0.c0))))==((vt1.c0))) WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(rt0.c0)))<=(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(rt0.c0)))<=(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN t0 ON rt0.c3);
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(rt0.c0)))<=(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(rt0.c0)))<=(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN t0 ON rt0.c3);
SELECT ALL * FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((rt0.c1)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))AND(rt0.c0)))<=(rt0.c1 COLLATE NOCASE)) LEFT OUTER JOIN t0 ON rt0.c3 WHERE ((rt0.c3 IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)AND(vt0.c1)))AND('1802967445')))OR(vt0.c0)))OR(rt0.c0)))>=(((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))))  NULLS LAST, (NOT (0.43057023403721395)), CASE WHEN ABS(rt0.c1) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c2)AND(vt0.c1)))AND('1802967445')))OR(vt0.c0)))OR(rt0.c0)))>=(((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))))  NULLS LAST, (NOT (0.43057023403721395)), CASE WHEN ABS(rt0.c1) THEN (rt0.c2 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)AND(vt0.c1)))AND('1802967445')))OR(vt0.c0)))OR(rt0.c0)))>=(((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))))  NULLS LAST, (NOT (0.43057023403721395)), CASE WHEN ABS(rt0.c1) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c2)AND(vt0.c1)))AND('1802967445')))OR(vt0.c0)))OR(rt0.c0)))>=(((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))))  NULLS LAST, (NOT (0.43057023403721395)), CASE WHEN ABS(rt0.c1) THEN (rt0.c2 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (NULL) ORDER BY ((((((((((rt0.c2)AND(vt0.c1)))AND('1802967445')))OR(vt0.c0)))OR(rt0.c0)))>=(((((rt0.c1)AND(rt0.c1)))OR(vt0.c1))))  NULLS LAST, (NOT (0.43057023403721395)), CASE WHEN ABS(rt0.c1) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(((t0.c0)>=(0.19376203944823778)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)>=(0.19376203944823778)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0)>=(0.19376203944823778)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)>=(0.19376203944823778)) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0)>=(0.19376203944823778)) AS TEXT));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.08234195178643289) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.08234195178643289) NOTNULL));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.08234195178643289) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((0.08234195178643289) NOTNULL));
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((0.08234195178643289) NOTNULL);
SELECT COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (ABS((NOT (rt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (- (t0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (- (t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (- (t0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN (- (t0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c0 THEN (- (t0.c0)) ELSE t0.c0 END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))OR(((((vt1.c0)OR(NULL)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0)))OR(((((vt1.c0)OR(NULL)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))OR(((((vt1.c0)OR(NULL)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)/(vt1.c0)))OR(((((vt1.c0)OR(NULL)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)/(vt1.c0)))OR(((((vt1.c0)OR(NULL)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (CASE WHEN ('-593737642' IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((((((((((x'')AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)) END) ORDER BY CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('-593737642' IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((((((((((x'')AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (CASE WHEN ('-593737642' IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((((((((((x'')AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)) END) ORDER BY CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ('-593737642' IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((((((((((x'')AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)) END) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM rt0, vt1 NOT INDEXED, t0, vt0 WHERE (CASE WHEN ('-593737642' IN ()) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)) ELSE ((((((((((((x'')AND(vt0.c1)))AND(vt0.c1)))AND(rt0.c1)))AND(t0.c0)))OR(rt0.c2)))AND(t0.c0)) END) ORDER BY CASE WHEN ((rt0.c2)IS(rt0.c1)) THEN (vt0.c0 IN ()) ELSE CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END END;
SELECT COUNT(*) FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) ISNULL) AS NUMERIC) WHERE (0xffffffffc6276b2e);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc6276b2e) IS TRUE)  as count FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) ISNULL) AS NUMERIC) WHERE (0xffffffffc6276b2e);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffc6276b2e) IS TRUE)  as count FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) ISNULL) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt1, t0 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) ISNULL) AS NUMERIC) WHERE (0xffffffffc6276b2e);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((6.88181342E8) NOTNULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c1) AND (0.2551843777083753))))) ORDER BY CAST((((vt1.c0))>((vt0.c0))) AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.c0, vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0, 0.8243957004283418)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((6.88181342E8) NOTNULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c1) AND (0.2551843777083753))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST((((vt1.c0))>((vt0.c0))) AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.c0, vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0, 0.8243957004283418)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((6.88181342E8) NOTNULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c1) AND (0.2551843777083753))))) ORDER BY CAST((((vt1.c0))>((vt0.c0))) AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.c0, vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0, 0.8243957004283418)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((6.88181342E8) NOTNULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c1) AND (0.2551843777083753))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST((((vt1.c0))>((vt0.c0))) AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.c0, vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0, 0.8243957004283418)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((6.88181342E8) NOTNULL)) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((vt1.c0) BETWEEN (vt0.c1) AND (0.2551843777083753))))) ORDER BY CAST((((vt1.c0))>((vt0.c0))) AS TEXT), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 END) BETWEEN (((vt0.c0) NOT NULL)) AND ((((vt0.c0, vt1.c0, vt1.c0))>=((vt0.c0, vt0.c0, 0.8243957004283418)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4))))>=('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4))))>=(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4))))>=('')));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4))))>=(''))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4))))>=('')));
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(NULL)))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(NULL)))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(NULL)))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c1)AND(NULL)))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(NULL)))AND((+ (vt0.c0)))))OR(vt0.c1 COLLATE RTRIM)))OR((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST((((rt0.c1, t0.c0, rt0.c0))>((vt0.c1, rt0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, t0.c0, rt0.c0))>((vt0.c1, rt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST((((rt0.c1, t0.c0, rt0.c0))>((vt0.c1, rt0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, t0.c0, rt0.c0))>((vt0.c1, rt0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0, rt0 WHERE (CAST((((rt0.c1, t0.c0, rt0.c0))>((vt0.c1, rt0.c0, vt0.c0))) AS BLOB));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN ((rt0.c2)&(rt0.c4)) THEN json_type(rt0.c0) END FULL OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (((CAST(363742502 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND ((((vt0.c1))<=((vt0.c1)))))) ORDER BY ((((((((((((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c0 IN ()))))OR((((rt0.c1))<=((rt0.c3))))))AND(COALESCE(vt1.c0, rt0.c1, rt0.c0, vt1.c0))))AND(((((rt0.c3)AND('1239019399')))AND(rt0.c0)))))AND((('-5')AND(rt0.c1))))  NULLS LAST, (((- (rt0.c0)))AND(json_insert(rt0.c2, vt0.c1, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(363742502 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND ((((vt0.c1))<=((vt0.c1)))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN ((rt0.c2)&(rt0.c4)) THEN json_type(rt0.c0) END FULL OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) ORDER BY ((((((((((((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c0 IN ()))))OR((((rt0.c1))<=((rt0.c3))))))AND(COALESCE(vt1.c0, rt0.c1, rt0.c0, vt1.c0))))AND(((((rt0.c3)AND('1239019399')))AND(rt0.c0)))))AND((('-5')AND(rt0.c1))))  NULLS LAST, (((- (rt0.c0)))AND(json_insert(rt0.c2, vt0.c1, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN ((rt0.c2)&(rt0.c4)) THEN json_type(rt0.c0) END FULL OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (((CAST(363742502 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND ((((vt0.c1))<=((vt0.c1)))))) ORDER BY ((((((((((((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c0 IN ()))))OR((((rt0.c1))<=((rt0.c3))))))AND(COALESCE(vt1.c0, rt0.c1, rt0.c0, vt1.c0))))AND(((((rt0.c3)AND('1239019399')))AND(rt0.c0)))))AND((('-5')AND(rt0.c1))))  NULLS LAST, (((- (rt0.c0)))AND(json_insert(rt0.c2, vt0.c1, vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(363742502 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND ((((vt0.c1))<=((vt0.c1)))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN ((rt0.c2)&(rt0.c4)) THEN json_type(rt0.c0) END FULL OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) ORDER BY ((((((((((((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c0 IN ()))))OR((((rt0.c1))<=((rt0.c3))))))AND(COALESCE(vt1.c0, rt0.c1, rt0.c0, vt1.c0))))AND(((((rt0.c3)AND('1239019399')))AND(rt0.c0)))))AND((('-5')AND(rt0.c1))))  NULLS LAST, (((- (rt0.c0)))AND(json_insert(rt0.c2, vt0.c1, vt0.c1)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt1 ON CASE (rt0.c1 IN ())  WHEN ((rt0.c2)&(rt0.c4)) THEN json_type(rt0.c0) END FULL OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS REAL) WHERE (((CAST(363742502 AS TEXT)) BETWEEN ((NOT (vt1.c0))) AND ((((vt0.c1))<=((vt0.c1)))))) ORDER BY ((((((((((((CASE WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2)))))AND((rt0.c0 IN ()))))OR((((rt0.c1))<=((rt0.c3))))))AND(COALESCE(vt1.c0, rt0.c1, rt0.c0, vt1.c0))))AND(((((rt0.c3)AND('1239019399')))AND(rt0.c0)))))AND((('-5')AND(rt0.c1))))  NULLS LAST, (((- (rt0.c0)))AND(json_insert(rt0.c2, vt0.c1, vt0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0)!=(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt0.c0)!=(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((rt0.c2 IN (vt0.c0)))))) ORDER BY ((((vt0.c0)!=(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ABS(t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ABS(t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ABS(t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ABS(t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE NOCASE) ORDER BY ABS(t0.c0);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN ((((vt0.c1))>=((rt0.c4)))) AND ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) WHERE (rt0.c0) ORDER BY ((((vt1.c0)LIKE(rt0.c3))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((rt0.c0)|(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN ((((vt0.c1))>=((rt0.c4)))) AND ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) ORDER BY ((((vt1.c0)LIKE(rt0.c3))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((rt0.c0)|(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN ((((vt0.c1))>=((rt0.c4)))) AND ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) WHERE (rt0.c0) ORDER BY ((((vt1.c0)LIKE(rt0.c3))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((rt0.c0)|(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN ((((vt0.c1))>=((rt0.c4)))) AND ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) ORDER BY ((((vt1.c0)LIKE(rt0.c3))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((rt0.c0)|(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) NOT BETWEEN ((((vt0.c1))>=((rt0.c4)))) AND ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c4))))) WHERE (rt0.c0) ORDER BY ((((vt1.c0)LIKE(rt0.c3))) BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((rt0.c0)|(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS BLOB) WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS BLOB));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS BLOB) WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS NOT(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS BLOB));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(IFNULL(DISTINCT vt0.c0, vt0.c0) AS BLOB) WHERE ((((vt0.c1)IS NOT(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c1))))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c1))))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c1))))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))<((vt0.c1))))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<((vt0.c1))))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)!=(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c1)!=(vt0.c0)) IN ()));
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))>((((vt0.c1))!=((vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))>((((vt0.c1))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))>((((vt0.c1))!=((vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))>((((vt0.c1))!=((vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))>((((vt0.c1))!=((vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((HEX(t0.c0)))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY ((((NULL)&(vt1.c0))) BETWEEN (x'') AND ((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(t0.c0)))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((NULL)&(vt1.c0))) BETWEEN (x'') AND ((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((HEX(t0.c0)))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY ((((NULL)&(vt1.c0))) BETWEEN (x'') AND ((+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(t0.c0)))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((NULL)&(vt1.c0))) BETWEEN (x'') AND ((+ (vt0.c1)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((HEX(t0.c0)))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)))))) ORDER BY ((((NULL)&(vt1.c0))) BETWEEN (x'') AND ((+ (vt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (x'5cb6');
SELECT SUM(count) FROM (SELECT ((x'5cb6') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'5cb6');
SELECT SUM(count) FROM (SELECT ((x'5cb6') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'5cb6');
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE ((+ (CAST(rt0.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE ((+ (CAST(rt0.c4 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c4 AS REAL)))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT ALL * FROM vt0, rt0, t0, vt1 WHERE ((+ (CAST(rt0.c4 AS REAL))));
SELECT COUNT(*) FROM t0 WHERE ('1727095596') ORDER BY (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST, 0x6dd579f0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('1727095596') IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST, 0X6dd579f0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE ('1727095596') ORDER BY (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST, 0x6dd579f0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('1727095596') IS TRUE)  as count FROM t0 ORDER BY (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())  NULLS FIRST, 0X6dd579f0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((((vt1.c0))=((vt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0))==((vt0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((((vt1.c0))=((vt0.c1)))) ISNULL);
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0))==((vt0.c1)))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY (((((vt1.c0))=((vt0.c1)))) ISNULL);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((json_array_length(rt0.c3), (NOT (vt0.c1)), CAST(t0.c0 AS TEXT)))!=((((rt0.c3)||(vt0.c1)), (- (t0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((json_array_length(rt0.c3), (NOT (vt0.c1)), CAST(t0.c0 AS TEXT)))<>((((rt0.c3)||(vt0.c1)), (- (t0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((json_array_length(rt0.c3), (NOT (vt0.c1)), CAST(t0.c0 AS TEXT)))!=((((rt0.c3)||(vt0.c1)), (- (t0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((json_array_length(rt0.c3), (NOT (vt0.c1)), CAST(t0.c0 AS TEXT)))<>((((rt0.c3)||(vt0.c1)), (- (t0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE ((((json_array_length(rt0.c3), (NOT (vt0.c1)), CAST(t0.c0 AS TEXT)))!=((((rt0.c3)||(vt0.c1)), (- (t0.c0)), ((((vt0.c0)AND(vt0.c0)))AND(rt0.c0)))))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (((rt0.c3))>((rt0.c3)))  WHEN CAST(NULL AS NUMERIC) THEN rt0.c1 COLLATE NOCASE WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((rt0.c3) NOT NULL) THEN ((((rt0.c3)AND('-2058724968')))OR(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN (((vt1.c0, vt1.c0, rt0.c0))<=((rt0.c1, rt0.c4, t0.c0))) WHEN ((rt0.c4)>=(rt0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c1 END ELSE (~ (vt0.c0)) END LEFT OUTER JOIN t0 ON ((((t0.c0)AND(vt1.c0)))AND(vt0.c1)) COLLATE BINARY WHERE ((NOT (((t0.c0)!=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)!=(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (((rt0.c3))>((rt0.c3)))  WHEN CAST(NULL AS NUMERIC) THEN rt0.c1 COLLATE NOCASE WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((rt0.c3) NOT NULL) THEN ((((rt0.c3)AND('-2058724968')))OR(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN (((vt1.c0, vt1.c0, rt0.c0))<=((rt0.c1, rt0.c4, t0.c0))) WHEN ((rt0.c4)>=(rt0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c1 END ELSE (~ (vt0.c0)) END LEFT OUTER JOIN t0 ON ((((t0.c0)AND(vt1.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (((rt0.c3))>((rt0.c3)))  WHEN CAST(NULL AS NUMERIC) THEN rt0.c1 COLLATE NOCASE WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((rt0.c3) NOT NULL) THEN ((((rt0.c3)AND('-2058724968')))OR(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN (((vt1.c0, vt1.c0, rt0.c0))<=((rt0.c1, rt0.c4, t0.c0))) WHEN ((rt0.c4)>=(rt0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c1 END ELSE (~ (vt0.c0)) END LEFT OUTER JOIN t0 ON ((((t0.c0)AND(vt1.c0)))AND(vt0.c1)) COLLATE BINARY WHERE ((NOT (((t0.c0)!=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t0.c0)!=(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (((rt0.c3))>((rt0.c3)))  WHEN CAST(NULL AS NUMERIC) THEN rt0.c1 COLLATE NOCASE WHEN vt1.c0 COLLATE NOCASE THEN x'' WHEN ((rt0.c3) NOT NULL) THEN ((((rt0.c3)AND('-2058724968')))OR(rt0.c3)) WHEN rt0.c3 COLLATE RTRIM THEN (((vt1.c0, vt1.c0, rt0.c0))<=((rt0.c1, rt0.c4, t0.c0))) WHEN ((rt0.c4)>=(rt0.c3)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c1 END ELSE (~ (vt0.c0)) END LEFT OUTER JOIN t0 ON ((((t0.c0)AND(vt1.c0)))AND(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)-(((NULL)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)-(((NULL)+(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)-(((NULL)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)-(((NULL)+(vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (((t0.c0 COLLATE NOCASE)-(((NULL)+(vt1.c0)))));
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) WHEN (((vt0.c1))>((vt0.c1))) THEN (NOT (vt1.c0)) ELSE ((t0.c0)-(x'4368')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) WHEN (((vt0.c1))>((vt0.c1))) THEN (NOT (vt1.c0)) ELSE ((t0.c0)-(x'4368')) END) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) WHEN (((vt0.c1))>((vt0.c1))) THEN (NOT (vt1.c0)) ELSE ((t0.c0)-(x'4368')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) WHEN (((vt0.c1))>((vt0.c1))) THEN (NOT (vt1.c0)) ELSE ((t0.c0)-(x'4368')) END) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL * FROM t0, rt0, vt0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN (- (t0.c0)) WHEN CAST(rt0.c3 AS INTEGER) THEN UPPER(DISTINCT vt0.c1) WHEN (((vt0.c1))>((vt0.c1))) THEN (NOT (vt1.c0)) ELSE ((t0.c0)-(x'4368')) END);
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON x'' WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t0 ON x'');
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON x'' WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 INNER JOIN t0 ON x'');
SELECT * FROM rt0, vt1, vt0 INNER JOIN t0 ON x'' WHERE ((t0.c0 IN ()));
SELECT * FROM vt0 WHERE (((((((((x'')OR(((vt0.c0)-(-7264085)))))OR(((vt0.c1) NOTNULL))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((vt0.c0)-(-7264085)))))OR(((vt0.c1) NOTNULL))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((x'')OR(((vt0.c0)-(-7264085)))))OR(((vt0.c1) NOTNULL))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((vt0.c0)-(-7264085)))))OR(((vt0.c1) NOTNULL))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((x'')OR(((vt0.c0)-(-7264085)))))OR(((vt0.c1) NOTNULL))))AND(((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)<>(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)<>(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<>(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)<>(rt0.c4)) IN ()));
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT (vt0.c0)))))OR(vt0.c1))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND ((((((((((((('⶗pS')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((NOT (vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND ((((((((((((('⶗pS')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT (vt0.c0)))))OR(vt0.c1))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND ((((((((((((('⶗pS')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((NOT (vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND ((((((((((((('⶗pS')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT (vt0.c0)))))OR(vt0.c1))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) AND ((((((((((((('⶗pS')AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'4f8b') IS FALSE) FULL OUTER JOIN t0 ON ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS(((rt0.c0)||(rt0.c1)))) WHERE ((((((t0.c0)AND(rt0.c4)))OR(NULL)) IN ())) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (1.401397531E9) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(rt0.c4)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((x'4f8b') IS FALSE) FULL OUTER JOIN t0 ON ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS(((rt0.c0)||(rt0.c1)))) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (1.401397531E9) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'4f8b') IS FALSE) FULL OUTER JOIN t0 ON ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS(((rt0.c0)||(rt0.c1)))) WHERE ((((((t0.c0)AND(rt0.c4)))OR(NULL)) IN ())) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (1.401397531E9) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(rt0.c4)))OR(NULL)) IN ())) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((x'4f8b') IS FALSE) FULL OUTER JOIN t0 ON ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS(((rt0.c0)||(rt0.c1)))) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (1.401397531E9) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON ((x'4f8b') IS FALSE) FULL OUTER JOIN t0 ON ((((vt1.c0) BETWEEN (t0.c0) AND (vt1.c0)))IS(((rt0.c0)||(rt0.c1)))) WHERE ((((((t0.c0)AND(rt0.c4)))OR(NULL)) IN ())) ORDER BY ((CAST(rt0.c3 AS INTEGER)) BETWEEN (1.401397531E9) AND (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE (LIKELY(DISTINCT ABS(t0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ABS(t0.c0))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (LIKELY(DISTINCT ABS(t0.c0)));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ABS(t0.c0))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (LIKELY(DISTINCT ABS(t0.c0)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c0 WHERE (((CAST(vt0.c0 AS BLOB)) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c4 COLLATE NOCASE))>=(((t0.c0 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))>=(((t0.c0 IN (rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c4 COLLATE NOCASE))>=(((t0.c0 IN (rt0.c4))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 COLLATE NOCASE))>=(((t0.c0 IN (rt0.c4)))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((rt0.c4 COLLATE NOCASE))>=(((t0.c0 IN (rt0.c4))))));
SELECT COUNT(*) FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((((vt0.c1)GLOB(vt0.c1)), vt0.c1, ((vt0.c1)/(vt0.c1)), ((vt0.c1) IS FALSE), (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, '-981998261'))))) AND ((CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))=((vt0.c1))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, 1220206552))), ((vt0.c0 COLLATE NOCASE)GLOB(x'')) ASC, ((((vt0.c0) NOT NULL))|((0.6527073681941344 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((((vt0.c1)GLOB(vt0.c1)), vt0.c1, ((vt0.c1)/(vt0.c1)), ((vt0.c1) IS FALSE), (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, '-981998261'))))) AND ((CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c1))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, 1220206552))), ((vt0.c0 COLLATE NOCASE)GLOB(x'')) ASC, ((((vt0.c0) NOT NULL))|((0.6527073681941344 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((((vt0.c1)GLOB(vt0.c1)), vt0.c1, ((vt0.c1)/(vt0.c1)), ((vt0.c1) IS FALSE), (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, '-981998261'))))) AND ((CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))=((vt0.c1))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, 1220206552))), ((vt0.c0 COLLATE NOCASE)GLOB(x'')) ASC, ((((vt0.c0) NOT NULL))|((0.6527073681941344 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((((vt0.c1)GLOB(vt0.c1)), vt0.c1, ((vt0.c1)/(vt0.c1)), ((vt0.c1) IS FALSE), (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, '-981998261'))))) AND ((CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))==((vt0.c1))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, 1220206552))), ((vt0.c0 COLLATE NOCASE)GLOB(x'')) ASC, ((((vt0.c0) NOT NULL))|((0.6527073681941344 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0, vt0.c0, vt0.c1, NULL, vt0.c1)) NOT BETWEEN ((((vt0.c1)GLOB(vt0.c1)), vt0.c1, ((vt0.c1)/(vt0.c1)), ((vt0.c1) IS FALSE), (((vt0.c1, NULL, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, '-981998261'))))) AND ((CAST(vt0.c0 AS BLOB), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), (((vt0.c0))=((vt0.c1))), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END, 1220206552))), ((vt0.c0 COLLATE NOCASE)GLOB(x'')) ASC, ((((vt0.c0) NOT NULL))|((0.6527073681941344 IN ())));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL)>=(vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>=(vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL)>=(vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)>=(vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NULL)>=(vt1.c0)) IN (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0)<<(t0.c0)) AS INTEGER) WHERE ((((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((((((((vt1.c0)OR(vt0.c1)))AND(0.8394733911286067)))OR(vt1.c0)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0)<<(t0.c0)) AS INTEGER) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((((((((vt1.c0)OR(vt0.c1)))AND(0.8394733911286067)))OR(vt1.c0)))OR(t0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0)<<(t0.c0)) AS INTEGER) WHERE ((((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((((((((vt1.c0)OR(vt0.c1)))AND(0.8394733911286067)))OR(vt1.c0)))OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0)<<(t0.c0)) AS INTEGER) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((((((((vt1.c0)OR(vt0.c1)))AND(0.8394733911286067)))OR(vt1.c0)))OR(t0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON CAST(((t0.c0)<<(t0.c0)) AS INTEGER) WHERE ((((((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0)))) NOT BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((((((((vt1.c0)OR(vt0.c1)))AND(0.8394733911286067)))OR(vt1.c0)))OR(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT (((rt0.c3))>((x''))), CAST(vt1.c0 AS REAL)) FULL OUTER JOIN vt1 ON rt0.c2 WHERE ('-1855179787');
SELECT SUM(count) FROM (SELECT ALL (('-1855179787') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT (((rt0.c3))>((x''))), CAST(vt1.c0 AS REAL)) FULL OUTER JOIN vt1 ON rt0.c2);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT (((rt0.c3))>((x''))), CAST(vt1.c0 AS REAL)) FULL OUTER JOIN vt1 ON rt0.c2 WHERE ('-1855179787');
SELECT SUM(count) FROM (SELECT ALL (('-1855179787') IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON NULLIF(DISTINCT (((rt0.c3))>((x''))), CAST(vt1.c0 AS REAL)) FULL OUTER JOIN vt1 ON rt0.c2);
SELECT ALL * FROM vt1, t0 WHERE ((((((NULL)+(t0.c0))))>=((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)+(t0.c0))))>=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((NULL)+(t0.c0))))>=((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)+(t0.c0))))>=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((((NULL)+(t0.c0))))>=((vt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((NULLIF(DISTINCT vt1.c0, '?%')) BETWEEN (TRIM(DISTINCT rt0.c3)) AND ((((vt1.c0, rt0.c1, rt0.c4))>=(('1802967445', rt0.c3, NULL))))) WHERE (0.9921824089958362) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)) THEN x'e024' ELSE SUBSTR(rt0.c0, rt0.c3) END;
SELECT SUM(count) FROM (SELECT ((0.9921824089958362) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((NULLIF(DISTINCT vt1.c0, '?%')) BETWEEN (TRIM(DISTINCT rt0.c3)) AND ((((vt1.c0, rt0.c1, rt0.c4))>=(('1802967445', rt0.c3, NULL))))) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)) THEN x'e024' ELSE SUBSTR(rt0.c0, rt0.c3) END);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((NULLIF(DISTINCT vt1.c0, '?%')) BETWEEN (TRIM(DISTINCT rt0.c3)) AND ((((vt1.c0, rt0.c1, rt0.c4))>=(('1802967445', rt0.c3, NULL))))) WHERE (0.9921824089958362) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)) THEN x'e024' ELSE SUBSTR(rt0.c0, rt0.c3) END;
SELECT SUM(count) FROM (SELECT ((0.9921824089958362) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((NULLIF(DISTINCT vt1.c0, '?%')) BETWEEN (TRIM(DISTINCT rt0.c3)) AND ((((vt1.c0, rt0.c1, rt0.c4))>=(('1802967445', rt0.c3, NULL))))) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)) THEN x'e024' ELSE SUBSTR(rt0.c0, rt0.c3) END);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN vt1 ON ((NULLIF(DISTINCT vt1.c0, '?%')) BETWEEN (TRIM(DISTINCT rt0.c3)) AND ((((vt1.c0, rt0.c1, rt0.c4))>=(('1802967445', rt0.c3, NULL))))) WHERE (0.9921824089958362) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)))OR(rt0.c4)) THEN x'e024' ELSE SUBSTR(rt0.c0, rt0.c3) END;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((vt1.c0)|(vt1.c0)))/((~ (vt0.c1))))) ORDER BY (NOT (((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0)))/((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (NOT (((rt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((vt1.c0)|(vt1.c0)))/((~ (vt0.c1))))) ORDER BY (NOT (((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)|(vt1.c0)))/((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (NOT (((rt0.c1) NOT NULL))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (((((vt1.c0)|(vt1.c0)))/((~ (vt0.c1))))) ORDER BY (NOT (((rt0.c1) NOT NULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ ('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ ('')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ ('')) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS INTEGER) THEN (+ ('')) END);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (((~ (t0.c0))) NOT NULL) WHERE ((((((t0.c0) NOT NULL)))>=(((0.022004550308495796 IN (vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0 IN ())) BETWEEN ('1773806210') AND (CASE WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))>=(((0.022004550308495796 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((~ (t0.c0))) NOT NULL) ORDER BY (((vt1.c0 IN ())) BETWEEN ('1773806210') AND (CASE WHEN vt1.c0 THEN t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (((~ (t0.c0))) NOT NULL) WHERE ((((((t0.c0) NOT NULL)))>=(((0.022004550308495796 IN (vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0 IN ())) BETWEEN ('1773806210') AND (CASE WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT NULL)))>=(((0.022004550308495796 IN (vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON (((~ (t0.c0))) NOT NULL) ORDER BY (((vt1.c0 IN ())) BETWEEN ('1773806210') AND (CASE WHEN vt1.c0 THEN t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON (((~ (t0.c0))) NOT NULL) WHERE ((((((t0.c0) NOT NULL)))>=(((0.022004550308495796 IN (vt1.c0, vt1.c0)))))) ORDER BY (((vt1.c0 IN ())) BETWEEN ('1773806210') AND (CASE WHEN vt1.c0 THEN t0.c0 END)) DESC;
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(json_type(vt1.c0) AS INTEGER)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c0)AND(rt0.c0))) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(vt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c0)AND(rt0.c0))) AND ((t0.c0 IN ()))) ASC);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(json_type(vt1.c0) AS INTEGER)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c0)AND(rt0.c0))) AND ((t0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(vt1.c0) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c0)AND(rt0.c0))) AND ((t0.c0 IN ()))) ASC);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(json_type(vt1.c0) AS INTEGER)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (((vt0.c0)AND(rt0.c0))) AND ((t0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)%(rt0.c0)))%((((rt0.c0))<=(('[p8wOA3*')))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c0)))%((((rt0.c0))<=(('[p8wOA3*')))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)) AS REAL) ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)%(rt0.c0)))%((((rt0.c0))<=(('[p8wOA3*')))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(rt0.c0)))%((((rt0.c0))<=(('[p8wOA3*')))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)) AS REAL) ASC);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((vt0.c0)%(rt0.c0)))%((((rt0.c0))<=(('[p8wOA3*')))))) ORDER BY CAST(((((vt0.c0)OR(vt0.c0)))OR(rt0.c3)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'')>=(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'')>=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'')>=(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'')>=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((x'')>=(t0.c0))) NOT NULL));
SELECT * FROM rt0, vt1 WHERE ((+ (x''))) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()));
SELECT * FROM rt0, vt1 WHERE ((+ (x''))) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (CAST(rt0.c2 AS INTEGER) IN ()));
SELECT * FROM rt0, vt1 WHERE ((+ (x''))) ORDER BY (CAST(rt0.c2 AS INTEGER) IN ());
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c3) BETWEEN (NULL) AND (vt1.c0)))AND(((x'')GLOB(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (vt0.c0)))) INNER JOIN vt0 ON TRIM((~ (NULL))) WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR('1220206552')))AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c3)) ELSE ((x'') BETWEEN (rt0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR('1220206552')))AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c3)) ELSE ((x'') BETWEEN (rt0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c3) BETWEEN (NULL) AND (vt1.c0)))AND(((x'')GLOB(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (vt0.c0)))) INNER JOIN vt0 ON TRIM((~ (NULL))));
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c3) BETWEEN (NULL) AND (vt1.c0)))AND(((x'')GLOB(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (vt0.c0)))) INNER JOIN vt0 ON TRIM((~ (NULL))) WHERE (CASE ((vt0.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR('1220206552')))AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c3)) ELSE ((x'') BETWEEN (rt0.c1) AND (t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS FALSE)  WHEN (((vt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))) THEN ((((((((((((t0.c0)OR(rt0.c3)))OR(t0.c0)))OR('1220206552')))AND(vt0.c1)))OR(rt0.c1)))AND(rt0.c3)) ELSE ((x'') BETWEEN (rt0.c1) AND (t0.c0)) END) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt1 ON ((((((rt0.c3) BETWEEN (NULL) AND (vt1.c0)))AND(((x'')GLOB(vt1.c0)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (vt0.c0)))) INNER JOIN vt0 ON TRIM((~ (NULL))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) ORDER BY 'Q' COLLATE RTRIM DESC  NULLS LAST, ((((NOT (t0.c0)), TRIM(DISTINCT t0.c0, t0.c0), ((t0.c0) IS FALSE)))!=(((- (t0.c0)), (((t0.c0, NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 'Q' COLLATE RTRIM DESC  NULLS LAST, ((((NOT (t0.c0)), TRIM(DISTINCT t0.c0, t0.c0), ((t0.c0) IS FALSE)))!=(((- (t0.c0)), (((t0.c0, NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) ORDER BY 'Q' COLLATE RTRIM DESC  NULLS LAST, ((((NOT (t0.c0)), TRIM(DISTINCT t0.c0, t0.c0), ((t0.c0) IS FALSE)))!=(((- (t0.c0)), (((t0.c0, NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY 'Q' COLLATE RTRIM DESC  NULLS LAST, ((((NOT (t0.c0)), TRIM(DISTINCT t0.c0, t0.c0), ((t0.c0) IS FALSE)))!=(((- (t0.c0)), (((t0.c0, NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)AND(t0.c0)))AND(t0.c0)) COLLATE BINARY) ORDER BY 'Q' COLLATE RTRIM DESC  NULLS LAST, ((((NOT (t0.c0)), TRIM(DISTINCT t0.c0, t0.c0), ((t0.c0) IS FALSE)))!=(((- (t0.c0)), (((t0.c0, NULL, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), t0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((vt0.c1)<<((vt1.c0 IN (vt0.c0)))) WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((vt0.c1)<<((vt1.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((vt0.c1)<<((vt1.c0 IN (vt0.c0)))) WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((vt0.c1)<<((vt1.c0 IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((vt0.c1)<<((vt1.c0 IN (vt0.c0)))) WHERE (((t0.c0 COLLATE BINARY) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN (CAST(x'' AS NUMERIC)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN (CAST(x'' AS NUMERIC)))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED ORDER BY vt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) IN (CAST(x'' AS NUMERIC)))) ORDER BY vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('-2129092373') ORDER BY ((('95049527', ((vt0.c1) NOTNULL), LAST_INSERT_ROWID()))>=((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '%!泲' END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c4 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-2129092373') IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((('95049527', ((vt0.c1) NOTNULL), LAST_INSERT_ROWID()))>=((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '%!泲' END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c4 AS REAL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('-2129092373') ORDER BY ((('95049527', ((vt0.c1) NOTNULL), LAST_INSERT_ROWID()))>=((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '%!泲' END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c4 AS REAL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-2129092373') IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((('95049527', ((vt0.c1) NOTNULL), LAST_INSERT_ROWID()))>=((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '%!泲' END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c4 AS REAL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('-2129092373') ORDER BY ((('95049527', ((vt0.c1) NOTNULL), LAST_INSERT_ROWID()))>=((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE '%!泲' END, CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c2 END, CAST(rt0.c4 AS REAL))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (rt0.c3)) COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (rt0.c3)) COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((~ (rt0.c3)) COLLATE NOCASE) ORDER BY CAST(rt0.c0 AS NUMERIC) ASC;
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0)<=(vt1.c0))) IS TRUE) INNER JOIN vt1 ON CASE WHEN ((vt1.c0)<<(rt0.c4)) THEN (NOT (rt0.c4)) ELSE rt0.c3 COLLATE BINARY END WHERE ((((rt0.c4))<((((rt0.c3) NOTNULL))))) ORDER BY vt1.c0 DESC, (((NOT (rt0.c3)))/((('ErTs>V.W') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4))<((((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c0)<=(vt1.c0))) IS TRUE) INNER JOIN vt1 ON CASE WHEN ((vt1.c0)<<(rt0.c4)) THEN (NOT (rt0.c4)) ELSE rt0.c3 COLLATE BINARY END ORDER BY vt1.c0 DESC, (((NOT (rt0.c3)))/((('ErTs>V.W') IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0)<=(vt1.c0))) IS TRUE) INNER JOIN vt1 ON CASE WHEN ((vt1.c0)<<(rt0.c4)) THEN (NOT (rt0.c4)) ELSE rt0.c3 COLLATE BINARY END WHERE ((((rt0.c4))<((((rt0.c3) NOTNULL))))) ORDER BY vt1.c0 DESC, (((NOT (rt0.c3)))/((('ErTs>V.W') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c4))<((((rt0.c3) NOTNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c0)<=(vt1.c0))) IS TRUE) INNER JOIN vt1 ON CASE WHEN ((vt1.c0)<<(rt0.c4)) THEN (NOT (rt0.c4)) ELSE rt0.c3 COLLATE BINARY END ORDER BY vt1.c0 DESC, (((NOT (rt0.c3)))/((('ErTs>V.W') IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0)<=(vt1.c0))) IS TRUE) INNER JOIN vt1 ON CASE WHEN ((vt1.c0)<<(rt0.c4)) THEN (NOT (rt0.c4)) ELSE rt0.c3 COLLATE BINARY END WHERE ((((rt0.c4))<((((rt0.c3) NOTNULL))))) ORDER BY vt1.c0 DESC, (((NOT (rt0.c3)))/((('ErTs>V.W') IS TRUE)))  NULLS LAST;
SELECT * FROM vt1, rt0 NOT INDEXED WHERE (((((((rt0.c2)LIKE(vt1.c0)))AND((NOT (rt0.c3)))))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(vt1.c0)))AND((NOT (rt0.c3)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 NOT INDEXED WHERE (((((((rt0.c2)LIKE(vt1.c0)))AND((NOT (rt0.c3)))))OR((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)LIKE(vt1.c0)))AND((NOT (rt0.c3)))))OR((- (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 NOT INDEXED WHERE (((((((rt0.c2)LIKE(vt1.c0)))AND((NOT (rt0.c3)))))OR((- (vt1.c0)))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE (-1183090950) ORDER BY (0.2933977443529451 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1183090950) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) ORDER BY (0.2933977443529451 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE (-1183090950) ORDER BY (0.2933977443529451 IN ()) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((-1183090950) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) ORDER BY (0.2933977443529451 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON (vt1.c0 COLLATE RTRIM IN ()) WHERE (-1183090950) ORDER BY (0.2933977443529451 IN ()) COLLATE RTRIM;
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT COUNT(*) FROM rt0, vt0, t0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0) ORDER BY CAST(t0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND((~ (vt1.c0)))))OR(LOWER(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND((~ (vt1.c0)))))OR(LOWER(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0) ORDER BY CAST(t0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND((~ (vt1.c0)))))OR(LOWER(vt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(t0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND((~ (vt1.c0)))))OR(LOWER(vt0.c1))) ASC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (t0.c0) ORDER BY CAST(t0.c0 COLLATE RTRIM AS INTEGER) DESC  NULLS LAST, ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))AND((~ (vt1.c0)))))OR(LOWER(vt0.c1))) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((ROUND(t0.c0, vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(t0.c0, vt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((ROUND(t0.c0, vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(t0.c0, vt0.c1)) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((ROUND(t0.c0, vt0.c1)) IS TRUE));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ('e')) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN x'' ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ('e')) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN x'' ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ('e')) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN x'' ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ('e')) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN x'' ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (rt0.c1 IN ()) THEN CAST(vt1.c0 AS INTEGER) WHEN (vt1.c0 IN ('e')) THEN vt1.c0 COLLATE NOCASE WHEN vt1.c0 THEN x'' ELSE ((((rt0.c2)AND(rt0.c3)))AND(rt0.c3)) END);
SELECT * FROM vt1, rt0, t0 WHERE ((+ ((((rt0.c2, rt0.c1, -1855179787))>((x'', t0.c0, x''))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2, rt0.c1, -1855179787))>((x'', t0.c0, x'')))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((+ ((((rt0.c2, rt0.c1, -1855179787))>((x'', t0.c0, x''))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c2, rt0.c1, -1855179787))>((x'', t0.c0, x'')))))) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT * FROM vt1, rt0, t0 WHERE ((+ ((((rt0.c2, rt0.c1, -1855179787))>((x'', t0.c0, x''))))));
SELECT * FROM rt0, vt1 NOT INDEXED CROSS JOIN vt0 ON ((((((((((((rt0.c2)OR(t0.c0)))OR('-1418993520')))OR(((vt0.c0)<>(rt0.c0)))))OR('')))OR((rt0.c3 IN ()))))OR(((((rt0.c3)AND(t0.c0)))OR(rt0.c0)))) RIGHT OUTER JOIN t0 ON (('171605860')&(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN '95049527' WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)AND(((-1.7976931348623157E308) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)AND(((-1.7976931348623157E308) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((((rt0.c2)OR(t0.c0)))OR('-1418993520')))OR(((vt0.c0)!=(rt0.c0)))))OR('')))OR((rt0.c3 IN ()))))OR(((((rt0.c3)AND(t0.c0)))OR(rt0.c0)))) RIGHT OUTER JOIN t0 ON (('171605860')&(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN '95049527' WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM rt0, vt1 NOT INDEXED CROSS JOIN vt0 ON ((((((((((((rt0.c2)OR(t0.c0)))OR('-1418993520')))OR(((vt0.c0)<>(rt0.c0)))))OR('')))OR((rt0.c3 IN ()))))OR(((((rt0.c3)AND(t0.c0)))OR(rt0.c0)))) RIGHT OUTER JOIN t0 ON (('171605860')&(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN '95049527' WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)AND(((-1.7976931348623157E308) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN NULL END)AND(((-1.7976931348623157E308) BETWEEN (rt0.c2) AND (vt0.c0)))))AND(((t0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((((((((((((rt0.c2)OR(t0.c0)))OR('-1418993520')))OR(((vt0.c0)!=(rt0.c0)))))OR('')))OR((rt0.c3 IN ()))))OR(((((rt0.c3)AND(t0.c0)))OR(rt0.c0)))) RIGHT OUTER JOIN t0 ON (('171605860')&(CASE WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN '95049527' WHEN vt0.c1 THEN vt1.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT * FROM vt1, vt0 WHERE (DATE(((vt1.c0) IS TRUE), ((vt1.c0) IS TRUE), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((DATE(((vt1.c0) IS TRUE), ((vt1.c0) IS TRUE), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (DATE(((vt1.c0) IS TRUE), ((vt1.c0) IS TRUE), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((DATE(((vt1.c0) IS TRUE), ((vt1.c0) IS TRUE), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (DATE(((vt1.c0) IS TRUE), ((vt1.c0) IS TRUE), (vt1.c0 IN ())));
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED, vt1 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c4 END)))OR(x'f88e')))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 WHEN 0.1018541384672561 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c4 END)))OR(x'f88e')))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 WHEN 0.1018541384672561 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED, vt1 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c4 END)))OR(x'f88e')))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 WHEN 0.1018541384672561 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c4 END)))OR(x'f88e')))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 WHEN 0.1018541384672561 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END))) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0 NOT INDEXED, vt1 WHERE (((((((((CAST(vt0.c0 AS INTEGER))AND(CASE WHEN t0.c0 THEN vt1.c0 ELSE rt0.c4 END)))OR(x'f88e')))OR((~ (rt0.c2)))))OR(CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 WHEN 0.1018541384672561 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE (x'349b9801');
SELECT SUM(count) FROM (SELECT ALL ((x'349b9801') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'349b9801');
SELECT SUM(count) FROM (SELECT ALL ((x'349b9801') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'349b9801');
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)))OR(((t0.c0) IS FALSE))));
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR((((rt0.c3))<>((rt0.c2))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c3)))OR(((rt0.c1) NOT NULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE)=(((rt0.c1)<(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR((((rt0.c3))<>((rt0.c2))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c3)))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)==(((rt0.c1)<(rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR((((rt0.c3))<>((rt0.c2))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c3)))OR(((rt0.c1) NOT NULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE)=(((rt0.c1)<(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)OR((((rt0.c3))<>((rt0.c2))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c3)))OR(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE)==(((rt0.c1)<(rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((rt0.c1)OR((((rt0.c3))<>((rt0.c2))))))OR(CASE WHEN rt0.c1 THEN rt0.c3 END)))OR(rt0.c3)))OR(((rt0.c1) NOT NULL)))) ORDER BY ((rt0.c0 COLLATE NOCASE)=(((rt0.c1)<(rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (+ (vt0.c1)) WHERE (vt0.c1) ORDER BY ((vt1.c0 COLLATE BINARY)>>(vt1.c0)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC, (((vt0.c1)==(vt0.c1)) IN ((((0.4981740055595113))<((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (+ (vt0.c1)) ORDER BY ((vt1.c0 COLLATE BINARY)>>(vt1.c0)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC, (((vt0.c1)==(vt0.c1)) IN ((((0.4981740055595113))<((vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (+ (vt0.c1)) WHERE (vt0.c1) ORDER BY ((vt1.c0 COLLATE BINARY)>>(vt1.c0)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC, (((vt0.c1)==(vt0.c1)) IN ((((0.4981740055595113))<((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (+ (vt0.c1)) ORDER BY ((vt1.c0 COLLATE BINARY)>>(vt1.c0)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC, (((vt0.c1)==(vt0.c1)) IN ((((0.4981740055595113))<((vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN vt0 ON (+ (vt0.c1)) WHERE (vt0.c1) ORDER BY ((vt1.c0 COLLATE BINARY)>>(vt1.c0)) DESC  NULLS FIRST, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY DESC, (((vt0.c1)==(vt0.c1)) IN ((((0.4981740055595113))<((vt0.c1))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE ((((rt0.c3 IN ())) IS FALSE));
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((rt0.c0, rt0.c0, 0.2833810085078766)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c3))) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, 0.2833810085078766)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((rt0.c0, rt0.c0, 0.2833810085078766)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c3))) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c0, 0.2833810085078766)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c3))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY rt0.c3  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1, t0 WHERE ((((rt0.c0, rt0.c0, 0.2833810085078766)) NOT BETWEEN ((vt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c2, t0.c0, rt0.c3))) COLLATE NOCASE) ORDER BY rt0.c3  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 224172542 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 224172542 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 224172542 WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 224172542 WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0 IN ()))|(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 224172542 WHEN t0.c0 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((t0.c0)LIKE(t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)LIKE(t0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((t0.c0)LIKE(t0.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)LIKE(t0.c0))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (NULL) ORDER BY ((((t0.c0)LIKE(t0.c0))) IS TRUE) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)GLOB(rt0.c2)) IN (((rt0.c1) IS FALSE), ((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)GLOB(rt0.c2)) IN (((rt0.c1) IS FALSE), ((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)GLOB(rt0.c2)) IN (((rt0.c1) IS FALSE), ((rt0.c2)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)GLOB(rt0.c2)) IN (((rt0.c1) IS FALSE), ((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4)GLOB(rt0.c2)) IN (((rt0.c1) IS FALSE), ((rt0.c2)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN -1183090950 THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((t0.c0)OR(rt0.c0))) AND (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN -1183090950 THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((t0.c0)OR(rt0.c0))) AND (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN -1183090950 THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((t0.c0)OR(rt0.c0))) AND (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED, t0 ORDER BY TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN -1183090950 THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((t0.c0)OR(rt0.c0))) AND (rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 WHEN -1183090950 THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) DESC  NULLS FIRST, ((((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (((t0.c0)OR(rt0.c0))) AND (rt0.c1))  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt0.c0)==(rt0.c1))) AND (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c4)IS(rt0.c0)) IN (rt0.c0)) ASC  NULLS FIRST, ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN (((vt0.c0)=(rt0.c1))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c4)IS(rt0.c0)) IN (rt0.c0)) ASC  NULLS FIRST, ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt0.c0)==(rt0.c1))) AND (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c4)IS(rt0.c0)) IN (rt0.c0)) ASC  NULLS FIRST, ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) BETWEEN (((vt0.c0)=(rt0.c1))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((rt0.c4)IS(rt0.c0)) IN (rt0.c0)) ASC  NULLS FIRST, ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((vt1.c0) NOTNULL)) BETWEEN (((vt0.c0)==(rt0.c1))) AND (((rt0.c2) IS FALSE)))) ORDER BY (((rt0.c4)IS(rt0.c0)) IN (rt0.c0)) ASC  NULLS FIRST, ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (('709675849' IN ('v왗')));
SELECT SUM(count) FROM (SELECT ((('709675849' IN ('v왗'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (('709675849' IN ('v왗')));
SELECT SUM(count) FROM (SELECT ((('709675849' IN ('v왗'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (('709675849' IN ('v왗')));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((rt0.c2))<>((NULL)))))<((LIKELY(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))!=((NULL)))))<((LIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((rt0.c2))<>((NULL)))))<((LIKELY(DISTINCT vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))!=((NULL)))))<((LIKELY(DISTINCT vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (((((((rt0.c2))<>((NULL)))))<((LIKELY(DISTINCT vt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ('95049527');
SELECT SUM(count) FROM (SELECT ALL (('95049527') IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ('95049527');
SELECT SUM(count) FROM (SELECT ALL (('95049527') IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT ALL * FROM vt0, vt1, rt0, t0 WHERE ('95049527');
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON t0.c0 WHERE (CASE (('-1118061180')%(rt0.c4))  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN LOWER(rt0.c0) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) WHEN ((rt0.c2)=(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN CAST('V ' AS INTEGER) THEN ((rt0.c2) BETWEEN (0.20488870563014028) AND (vt1.c0)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(vt0.c0)) THEN ((((rt0.c3)AND(t0.c0)))AND(vt0.c1)) END) ORDER BY (((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c0)) IN ((((t0.c0))>((vt1.c0))))) ASC  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('-1118061180')%(rt0.c4))  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN LOWER(rt0.c0) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) WHEN ((rt0.c2)==(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN CAST('V ' AS INTEGER) THEN ((rt0.c2) BETWEEN (0.20488870563014028) AND (vt1.c0)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(vt0.c0)) THEN ((((rt0.c3)AND(t0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON t0.c0 ORDER BY (((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c0)) IN ((((t0.c0))>((vt1.c0))))) ASC  NULLS LAST, vt0.c1);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON t0.c0 WHERE (CASE (('-1118061180')%(rt0.c4))  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN LOWER(rt0.c0) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) WHEN ((rt0.c2)=(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN CAST('V ' AS INTEGER) THEN ((rt0.c2) BETWEEN (0.20488870563014028) AND (vt1.c0)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(vt0.c0)) THEN ((((rt0.c3)AND(t0.c0)))AND(vt0.c1)) END) ORDER BY (((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c0)) IN ((((t0.c0))>((vt1.c0))))) ASC  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CASE (('-1118061180')%(rt0.c4))  WHEN CASE WHEN vt1.c0 THEN t0.c0 END THEN ((((t0.c0)OR(vt0.c0)))OR(vt1.c0)) WHEN LOWER(rt0.c0) THEN ((t0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) WHEN ((rt0.c2)==(rt0.c0)) THEN CAST(rt0.c1 AS REAL) WHEN CAST('V ' AS INTEGER) THEN ((rt0.c2) BETWEEN (0.20488870563014028) AND (vt1.c0)) WHEN ((((rt0.c4)OR(rt0.c0)))AND(vt0.c0)) THEN ((((rt0.c3)AND(t0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON x'' LEFT OUTER JOIN t0 ON (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END))) FULL OUTER JOIN rt0 ON t0.c0 ORDER BY (((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c0)) IN ((((t0.c0))>((vt1.c0))))) ASC  NULLS LAST, vt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(0x34f0c41d)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)AND(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(0X34f0c41d)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(0x34f0c41d)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)AND(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(0X34f0c41d)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)AND(t0.c0)) THEN ((((((((t0.c0)OR(t0.c0)))AND(NULL)))OR(t0.c0)))AND(0x34f0c41d)) END);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN (((((rt0.c2))<((vt0.c1))), LOWER(rt0.c0), ((x'8845') BETWEEN (vt0.c1) AND (rt0.c4)), ((vt0.c0)<=(rt0.c0)), CAST(x'' AS NUMERIC))) AND ((((rt0.c3)IS('273552178')), (+ (NULL)), ((t0.c0) BETWEEN (x'') AND (rt0.c1)), vt0.c0, CAST(rt0.c1 AS NUMERIC)))) FULL OUTER JOIN vt0 ON NULL WHERE (((CASE WHEN t0.c0 THEN rt0.c3 END)%((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c3 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN (((((rt0.c2))<((vt0.c1))), LOWER(rt0.c0), ((x'8845') BETWEEN (vt0.c1) AND (rt0.c4)), ((vt0.c0)<=(rt0.c0)), CAST(x'' AS NUMERIC))) AND ((((rt0.c3)IS('273552178')), (+ (NULL)), ((t0.c0) BETWEEN (x'') AND (rt0.c1)), vt0.c0, CAST(rt0.c1 AS NUMERIC)))) FULL OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN (((((rt0.c2))<((vt0.c1))), LOWER(rt0.c0), ((x'8845') BETWEEN (vt0.c1) AND (rt0.c4)), ((vt0.c0)<=(rt0.c0)), CAST(x'' AS NUMERIC))) AND ((((rt0.c3)IS('273552178')), (+ (NULL)), ((t0.c0) BETWEEN (x'') AND (rt0.c1)), vt0.c0, CAST(rt0.c1 AS NUMERIC)))) FULL OUTER JOIN vt0 ON NULL WHERE (((CASE WHEN t0.c0 THEN rt0.c3 END)%((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c3 END)%((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON (((rt0.c4, rt0.c3, rt0.c1, rt0.c4, rt0.c2)) NOT BETWEEN (((((rt0.c2))<((vt0.c1))), LOWER(rt0.c0), ((x'8845') BETWEEN (vt0.c1) AND (rt0.c4)), ((vt0.c0)<=(rt0.c0)), CAST(x'' AS NUMERIC))) AND ((((rt0.c3)IS('273552178')), (+ (NULL)), ((t0.c0) BETWEEN (x'') AND (rt0.c1)), vt0.c0, CAST(rt0.c1 AS NUMERIC)))) FULL OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))AND('-1136269076')))AND(1446790478)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))AND('-1136269076')))AND(1446790478))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))AND('-1136269076')))AND(1446790478)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))AND('-1136269076')))AND(1446790478))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (((((((((t0.c0)OR(rt0.c0)))OR(rt0.c1)))AND('-1136269076')))AND(1446790478)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))AND(vt0.c0)), ((((((((rt0.c2)OR('1~盺嚄gWP')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c2 AS REAL))) AND (((x'' IN ()), ((rt0.c1)>(rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))AND(vt0.c0)), ((((((((rt0.c2)OR('1~盺嚄gWP')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c2 AS REAL))) AND (((x'' IN ()), ((rt0.c1)>(rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))AND(vt0.c0)), ((((((((rt0.c2)OR('1~盺嚄gWP')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c2 AS REAL))) AND (((x'' IN ()), ((rt0.c1)>(rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))AND(vt0.c0)), ((((((((rt0.c2)OR('1~盺嚄gWP')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c2 AS REAL))) AND (((x'' IN ()), ((rt0.c1)>(rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((((((((((rt0.c0)AND(vt0.c0)))AND(vt0.c1)))OR(rt0.c4)))AND(vt0.c0)), ((((((((rt0.c2)OR('1~盺嚄gWP')))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)), CAST(rt0.c2 AS REAL))) AND (((x'' IN ()), ((rt0.c1)>(rt0.c3)), (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))));
SELECT ALL * FROM t0, rt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL * FROM t0, rt0, vt1 WHERE (LOWER(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c3) AND (NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((rt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (0.4515863259136643) AND (NULL COLLATE NOCASE))) ORDER BY CASE (('O<')!=(''))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((('^C')) BETWEEN (('')) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (0.4515863259136643) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((rt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) INNER JOIN vt1 ON '' ORDER BY CASE (('O<')<>(''))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((('^C')) BETWEEN (('')) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((rt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (0.4515863259136643) AND (NULL COLLATE NOCASE))) ORDER BY CASE (('O<')!=(''))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((('^C')) BETWEEN (('')) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (0.4515863259136643) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON ((rt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) INNER JOIN vt1 ON '' ORDER BY CASE (('O<')<>(''))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((('^C')) BETWEEN (('')) AND ((vt0.c0))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON ((rt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) INNER JOIN vt1 ON '' WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (0.4515863259136643) AND (NULL COLLATE NOCASE))) ORDER BY CASE (('O<')!=(''))  WHEN ((vt1.c0)-(vt1.c0)) THEN ((('^C')) BETWEEN (('')) AND ((vt0.c0))) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)/(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)/(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)/(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY)/(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)/(t0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((CAST(vt0.c0 AS REAL)) NOT NULL));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (ABS(DISTINCT rt0.c4)) ORDER BY json_valid(((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c4)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY json_valid(((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (ABS(DISTINCT rt0.c4)) ORDER BY json_valid(((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT rt0.c4)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY json_valid(((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (ABS(DISTINCT rt0.c4)) ORDER BY json_valid(((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)));
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt1 WHERE ((- (((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c1)>>(vt0.c1))))) ORDER BY COALESCE(DISTINCT ((vt0.c1)LIKE(-1.952954838E9)), vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY COALESCE(DISTINCT ((vt0.c1)LIKE(-1.952954838E9)), vt1.c0) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c1)>>(vt0.c1))))) ORDER BY COALESCE(DISTINCT ((vt0.c1)LIKE(-1.952954838E9)), vt1.c0) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)+(((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY COALESCE(DISTINCT ((vt0.c1)LIKE(-1.952954838E9)), vt1.c0) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE)+(((vt0.c1)>>(vt0.c1))))) ORDER BY COALESCE(DISTINCT ((vt0.c1)LIKE(-1.952954838E9)), vt1.c0) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((0.2833810085078766) IS TRUE)  WHEN NULL THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.2833810085078766) IS TRUE)  WHEN NULL THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((0.2833810085078766) IS TRUE)  WHEN NULL THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.2833810085078766) IS TRUE)  WHEN NULL THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE ((0.2833810085078766) IS TRUE)  WHEN NULL THEN ((rt0.c0)*(rt0.c1)) ELSE ((rt0.c0) ISNULL) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT * FROM t0 WHERE (TRIM(((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TRIM(((t0.c0) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (TRIM(((t0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((vt1.c0)AND(0.4354165702545242)))AND(t0.c0)))LIKE(((vt0.c0) ISNULL))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(((vt0.c0)|(vt1.c0)))))OR((vt0.c1 IN (vt0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((((vt1.c0)AND(0.4354165702545242)))AND(t0.c0)))LIKE(((vt0.c0) ISNULL))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(((vt0.c0)|(vt1.c0)))))OR((vt0.c1 IN (vt0.c0, t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((vt1.c0)AND(0.4354165702545242)))AND(t0.c0)))LIKE(((vt0.c0) ISNULL))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(((vt0.c0)|(vt1.c0)))))OR((vt0.c1 IN (vt0.c0, t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((((((vt1.c0)AND(0.4354165702545242)))AND(t0.c0)))LIKE(((vt0.c0) ISNULL))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(((vt0.c0)|(vt1.c0)))))OR((vt0.c1 IN (vt0.c0, t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((((((vt1.c0)AND(0.4354165702545242)))AND(t0.c0)))LIKE(((vt0.c0) ISNULL))) WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)))AND(((((((((vt1.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt1.c0)))OR(t0.c0)))))AND(((vt0.c0)|(vt1.c0)))))OR((vt0.c1 IN (vt0.c0, t0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CAST(('183891898' IN ()) AS NUMERIC) WHERE (CAST(((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CAST(('183891898' IN ()) AS NUMERIC));
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CAST(('183891898' IN ()) AS NUMERIC) WHERE (CAST(((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 INNER JOIN t0 ON CAST(('183891898' IN ()) AS NUMERIC));
SELECT ALL * FROM rt0, vt1 INNER JOIN t0 ON CAST(('183891898' IN ()) AS NUMERIC) WHERE (CAST(((((rt0.c1)AND(vt1.c0)))OR(rt0.c3)) AS REAL));
SELECT * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)&(COALESCE(t0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)&(COALESCE(t0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)&(COALESCE(t0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)&(COALESCE(t0.c0, vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)&(COALESCE(t0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c0))>((t0.c0))) COLLATE NOCASE WHERE ((((GLOB(vt1.c0, x'')))>=((CASE WHEN 0x3c92a30e THEN vt1.c0 WHEN t0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((GLOB(vt1.c0, x'')))>=((CASE WHEN 0x3c92a30e THEN vt1.c0 WHEN t0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c0))>((t0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c0))>((t0.c0))) COLLATE NOCASE WHERE ((((GLOB(vt1.c0, x'')))>=((CASE WHEN 0x3c92a30e THEN vt1.c0 WHEN t0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((GLOB(vt1.c0, x'')))>=((CASE WHEN 0x3c92a30e THEN vt1.c0 WHEN t0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c0))>((t0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((t0.c0))>((t0.c0))) COLLATE NOCASE WHERE ((((GLOB(vt1.c0, x'')))>=((CASE WHEN 0x3c92a30e THEN vt1.c0 WHEN t0.c0 THEN '' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))));
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC));
SELECT * FROM vt0, rt0 WHERE (((((0.7826555358266528)AND(((rt0.c1)<(vt0.c1)))))OR(((x'2193b827') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.7826555358266528)AND(((rt0.c1)<(vt0.c1)))))OR(((x'2193b827') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.7826555358266528)AND(((rt0.c1)<(vt0.c1)))))OR(((x'2193b827') IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.7826555358266528)AND(((rt0.c1)<(vt0.c1)))))OR(((x'2193b827') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((0.7826555358266528)AND(((rt0.c1)<(vt0.c1)))))OR(((x'2193b827') IS FALSE))));
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (TRIM(DISTINCT rt0.c1)) AND (rt0.c3 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST, rt0.c1 ASC;
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))GLOB(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))) INNER JOIN vt0 ON 1401397531 WHERE (LTRIM(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c3 WHEN -1.905842283E9 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 END)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC, rt0.c1  NULLS LAST, 0.9921824089958362 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c3 WHEN -1.905842283E9 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 END)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))GLOB(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))) INNER JOIN vt0 ON 1401397531 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC, rt0.c1  NULLS LAST, 0.9921824089958362 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))GLOB(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))) INNER JOIN vt0 ON 1401397531 WHERE (LTRIM(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c3 WHEN -1.905842283E9 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 END)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC, rt0.c1  NULLS LAST, 0.9921824089958362 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c3 WHEN -1.905842283E9 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 END)) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))GLOB(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))) INNER JOIN vt0 ON 1401397531 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC, rt0.c1  NULLS LAST, 0.9921824089958362 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS BLOB))GLOB(((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))) INNER JOIN vt0 ON 1401397531 WHERE (LTRIM(rt0.c3, CASE WHEN rt0.c0 THEN rt0.c3 WHEN -1.905842283E9 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 END)) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS NUMERIC))) DESC, rt0.c1  NULLS LAST, 0.9921824089958362 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) IS TRUE))OR(((NULL)%(t0.c0))))) ORDER BY ABS(DISTINCT ((vt1.c0)<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))OR(((NULL)%(t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ABS(DISTINCT ((vt1.c0)<(vt1.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) IS TRUE))OR(((NULL)%(t0.c0))))) ORDER BY ABS(DISTINCT ((vt1.c0)<(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) IS TRUE))OR(((NULL)%(t0.c0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ABS(DISTINCT ((vt1.c0)<(vt1.c0))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c0) IS TRUE))OR(((NULL)%(t0.c0))))) ORDER BY ABS(DISTINCT ((vt1.c0)<(vt1.c0)));
SELECT COUNT(*) FROM rt0, t0, vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) IS TRUE) THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) ELSE HEX(DISTINCT vt0.c1) END WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) IS TRUE) THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) ELSE HEX(DISTINCT vt0.c1) END);
SELECT COUNT(*) FROM rt0, t0, vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) IS TRUE) THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) ELSE HEX(DISTINCT vt0.c1) END WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, t0, vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) IS TRUE) THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) ELSE HEX(DISTINCT vt0.c1) END);
SELECT COUNT(*) FROM rt0, t0, vt1 CROSS JOIN vt0 ON CASE WHEN ((vt1.c0) IS TRUE) THEN rt0.c1 WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) ELSE HEX(DISTINCT vt0.c1) END WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0, t0 WHERE (1.446790478E9);
SELECT SUM(count) FROM (SELECT ((1.446790478E9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (1.446790478E9);
SELECT SUM(count) FROM (SELECT ((1.446790478E9) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (1.446790478E9);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('');
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c4))) ORDER BY (- (((rt0.c4) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c4) ISNULL))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c4))) ORDER BY (- (((rt0.c4) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c4))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c4) ISNULL))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2))) BETWEEN (((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))) AND (rt0.c4))) ORDER BY (- (((rt0.c4) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, '''?U1,!', ((((rt0.c1)AND(0Xffffffffc46d415e)))OR(rt0.c1))))>=((LIKELY(rt0.c2), (rt0.c0 IN (t0.c0)), ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, '''?U1,!', ((((rt0.c1)AND(0xffffffffc46d415e)))OR(rt0.c1))))>=((LIKELY(rt0.c2), (rt0.c0 IN (t0.c0)), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, '''?U1,!', ((((rt0.c1)AND(0Xffffffffc46d415e)))OR(rt0.c1))))>=((LIKELY(rt0.c2), (rt0.c0 IN (t0.c0)), ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, '''?U1,!', ((((rt0.c1)AND(0xffffffffc46d415e)))OR(rt0.c1))))>=((LIKELY(rt0.c2), (rt0.c0 IN (t0.c0)), ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0, '''?U1,!', ((((rt0.c1)AND(0Xffffffffc46d415e)))OR(rt0.c1))))>=((LIKELY(rt0.c2), (rt0.c0 IN (t0.c0)), ((rt0.c2) NOTNULL)))));
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1)))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1)))OR(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)AND(vt0.c1)))OR(CAST(vt0.c0 AS BLOB))));
SELECT * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((~ (vt1.c0 COLLATE BINARY))) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c1))>(('\np쮖1^ 瞪-5')))  WHEN ((x'')AND(vt0.c1)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN LIKELIHOOD(vt0.c0, 0.30384254563918245) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) END FULL OUTER JOIN vt1 ON ((CAST(rt0.c4 AS INTEGER)) ISNULL) WHERE (CAST((+ (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c1))>(('\np쮖1^ 瞪-5')))  WHEN ((x'')AND(vt0.c1)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN LIKELIHOOD(vt0.c0, 0.30384254563918245) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) END FULL OUTER JOIN vt1 ON ((CAST(rt0.c4 AS INTEGER)) ISNULL) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c1))>(('\np쮖1^ 瞪-5')))  WHEN ((x'')AND(vt0.c1)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN LIKELIHOOD(vt0.c0, 0.30384254563918245) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) END FULL OUTER JOIN vt1 ON ((CAST(rt0.c4 AS INTEGER)) ISNULL) WHERE (CAST((+ (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c1))>(('\np쮖1^ 瞪-5')))  WHEN ((x'')AND(vt0.c1)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN LIKELIHOOD(vt0.c0, 0.30384254563918245) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) END FULL OUTER JOIN vt1 ON ((CAST(rt0.c4 AS INTEGER)) ISNULL) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE (((vt0.c1))>(('\np쮖1^ 瞪-5')))  WHEN ((x'')AND(vt0.c1)) THEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) WHEN vt0.c1 COLLATE RTRIM THEN vt0.c1 WHEN LIKELIHOOD(vt0.c0, 0.30384254563918245) THEN ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) END FULL OUTER JOIN vt1 ON ((CAST(rt0.c4 AS INTEGER)) ISNULL) WHERE (CAST((+ (rt0.c0)) AS TEXT)) ORDER BY ((rt0.c0) IS TRUE) COLLATE NOCASE;
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CASE (vt0.c1 IN (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt1.c0 END THEN ((rt0.c1) IS FALSE) ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt1.c0 END THEN ((rt0.c1) IS FALSE) ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CASE (vt0.c1 IN (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt1.c0 END THEN ((rt0.c1) IS FALSE) ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt1.c0 END THEN ((rt0.c1) IS FALSE) ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (CASE (vt0.c1 IN (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt1.c0 END THEN ((rt0.c1) IS FALSE) ELSE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) END);
SELECT * FROM t0 WHERE ((((((NULL))==((t0.c0))))/(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((NULL))=((t0.c0))))/(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((NULL))==((t0.c0))))/(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((NULL))=((t0.c0))))/(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((NULL))==((t0.c0))))/(t0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'')IS NOT(t0.c0)))-(((vt0.c1) IS TRUE)))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS LAST, IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(t0.c0)))-(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS LAST, IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'')IS NOT(t0.c0)))-(((vt0.c1) IS TRUE)))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS LAST, IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'')IS NOT(t0.c0)))-(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS LAST, IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((x'')IS NOT(t0.c0)))-(((vt0.c1) IS TRUE)))) ORDER BY CAST((t0.c0 IN ()) AS INTEGER)  NULLS LAST, IFNULL((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))), ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))  NULLS FIRST;
SELECT * FROM rt0, vt0, t0 WHERE ((TIME(t0.c0, rt0.c2, x'7490', rt0.c1, rt0.c2) IN ())) ORDER BY ((((NULL) IS FALSE)) BETWEEN (rtreenode(rt0.c3, NULL)) AND ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TIME(t0.c0, rt0.c2, x'7490', rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((NULL) IS FALSE)) BETWEEN (rtreenode(rt0.c3, NULL)) AND ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((TIME(t0.c0, rt0.c2, x'7490', rt0.c1, rt0.c2) IN ())) ORDER BY ((((NULL) IS FALSE)) BETWEEN (rtreenode(rt0.c3, NULL)) AND ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((TIME(t0.c0, rt0.c2, x'7490', rt0.c1, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((NULL) IS FALSE)) BETWEEN (rtreenode(rt0.c3, NULL)) AND ((- (vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, t0 WHERE ((TIME(t0.c0, rt0.c2, x'7490', rt0.c1, rt0.c2) IN ())) ORDER BY ((((NULL) IS FALSE)) BETWEEN (rtreenode(rt0.c3, NULL)) AND ((- (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT * FROM vt0 CROSS JOIN vt1 ON ((rt0.c2) BETWEEN (((vt0.c1)==(vt0.c1))) AND (((rt0.c1) BETWEEN (x'') AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))) WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((rt0.c2) BETWEEN (((vt0.c1)=(vt0.c1))) AND (((rt0.c1) BETWEEN (x'') AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((rt0.c2) BETWEEN (((vt0.c1)==(vt0.c1))) AND (((rt0.c1) BETWEEN (x'') AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))) WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(QUOTE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((rt0.c2) BETWEEN (((vt0.c1)=(vt0.c1))) AND (((rt0.c1) BETWEEN (x'') AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))));
SELECT * FROM vt0 CROSS JOIN vt1 ON ((rt0.c2) BETWEEN (((vt0.c1)==(vt0.c1))) AND (((rt0.c1) BETWEEN (x'') AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((vt1.c0)) BETWEEN ((CAST(rt0.c2 AS NUMERIC))) AND (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))))) WHERE (CAST(QUOTE(vt0.c0) AS TEXT));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((rt0.c0)>=(rt0.c3))  WHEN ((rt0.c0)AND(rt0.c4)) THEN ((((rt0.c3)AND(0.44359008968493185)))OR(rt0.c4)) END) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, vt0.c1, vt0.c0, NULL, vt1.c0))=((vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0))), 0.9613799966109867) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>=(rt0.c3))  WHEN ((rt0.c0)AND(rt0.c4)) THEN ((((rt0.c3)AND(0.44359008968493185)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, vt0.c1, vt0.c0, NULL, vt1.c0))=((vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0))), 0.9613799966109867) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((rt0.c0)>=(rt0.c3))  WHEN ((rt0.c0)AND(rt0.c4)) THEN ((((rt0.c3)AND(0.44359008968493185)))OR(rt0.c4)) END) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, vt0.c1, vt0.c0, NULL, vt1.c0))=((vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0))), 0.9613799966109867) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)>=(rt0.c3))  WHEN ((rt0.c0)AND(rt0.c4)) THEN ((((rt0.c3)AND(0.44359008968493185)))OR(rt0.c4)) END) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, vt0.c1, vt0.c0, NULL, vt1.c0))=((vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0))), 0.9613799966109867) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (CASE ((rt0.c0)>=(rt0.c3))  WHEN ((rt0.c0)AND(rt0.c4)) THEN ((((rt0.c3)AND(0.44359008968493185)))OR(rt0.c4)) END) ORDER BY LIKELIHOOD(DISTINCT (((rt0.c4, vt0.c1, vt0.c0, NULL, vt1.c0))=((vt0.c0, rt0.c1, rt0.c3, rt0.c2, vt0.c0))), 0.9613799966109867) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0)+(NULL))))<>((t0.c0)))) ORDER BY ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)+(NULL))))<>((t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0)+(NULL))))<>((t0.c0)))) ORDER BY ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)+(NULL))))<>((t0.c0)))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, t0 WHERE ((((((vt1.c0)+(NULL))))<>((t0.c0)))) ORDER BY ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((LIKELY(vt1.c0))>(CASE vt0.c0  WHEN vt1.c0 THEN x'' END)) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c0)|(vt0.c1)))AND((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt1.c0))))))OR((vt0.c0 IN (vt0.c0, vt1.c0, t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((LIKELY(vt1.c0))>(CASE vt0.c0  WHEN vt1.c0 THEN x'' END)) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC) ORDER BY ((((((t0.c0)|(vt0.c1)))AND((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt1.c0))))))OR((vt0.c0 IN (vt0.c0, vt1.c0, t0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN t0 ON ((LIKELY(vt1.c0))>(CASE vt0.c0  WHEN vt1.c0 THEN x'' END)) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC) WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c0)|(vt0.c1)))AND((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt1.c0))))))OR((vt0.c0 IN (vt0.c0, vt1.c0, t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((LIKELY(vt1.c0))>(CASE vt0.c0  WHEN vt1.c0 THEN x'' END)) LEFT OUTER JOIN vt0 ON CAST(((vt0.c0)IS(vt0.c1)) AS NUMERIC) ORDER BY ((((((t0.c0)|(vt0.c1)))AND((((vt1.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt1.c0))))))OR((vt0.c0 IN (vt0.c0, vt1.c0, t0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'c0a5') ORDER BY x'' ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(x''));
SELECT SUM(count) FROM (SELECT ALL ((x'c0a5') IS TRUE)  as count FROM vt0 ORDER BY x'' ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'c0a5') ORDER BY x'' ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(x''));
SELECT SUM(count) FROM (SELECT ALL ((x'c0a5') IS TRUE)  as count FROM vt0 ORDER BY x'' ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(x'')));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'c0a5') ORDER BY x'' ASC, ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)<>(x''));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c3) COLLATE BINARY WHERE (((vt0.c0)>(rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((+ (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c3) COLLATE BINARY ORDER BY NULL ASC  NULLS LAST, (((+ (vt0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c3) COLLATE BINARY WHERE (((vt0.c0)>(rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((+ (vt0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c3) COLLATE BINARY ORDER BY NULL ASC  NULLS LAST, (((+ (vt0.c0))) NOT NULL) DESC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON CAST(vt1.c0 COLLATE BINARY AS INTEGER) LEFT OUTER JOIN rt0 ON ABS(DISTINCT rt0.c3) COLLATE BINARY WHERE (((vt0.c0)>(rt0.c2)) COLLATE NOCASE) ORDER BY NULL ASC  NULLS LAST, (((+ (vt0.c0))) NOT NULL) DESC;
SELECT * FROM t0 CROSS JOIN vt1 ON (rt0.c3 IN ((rt0.c2 IN ()))) RIGHT OUTER JOIN vt0 ON STRFTIME(vt1.c0 COLLATE NOCASE, ((vt0.c1)<<(x'')), (NOT (rt0.c0)), ((0.44893622196006444)||(rt0.c1)), CAST(vt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT NULL)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (rt0.c3 IN ((rt0.c2 IN ()))) RIGHT OUTER JOIN vt0 ON STRFTIME(vt1.c0 COLLATE NOCASE, ((vt0.c1)<<(x'')), (NOT (rt0.c0)), ((0.44893622196006444)||(rt0.c1)), CAST(vt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT NULL)) NOT NULL));
SELECT * FROM t0 CROSS JOIN vt1 ON (rt0.c3 IN ((rt0.c2 IN ()))) RIGHT OUTER JOIN vt0 ON STRFTIME(vt1.c0 COLLATE NOCASE, ((vt0.c1)<<(x'')), (NOT (rt0.c0)), ((0.44893622196006444)||(rt0.c1)), CAST(vt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT NULL)) NOT NULL) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (rt0.c3 IN ((rt0.c2 IN ()))) RIGHT OUTER JOIN vt0 ON STRFTIME(vt1.c0 COLLATE NOCASE, ((vt0.c1)<<(x'')), (NOT (rt0.c0)), ((0.44893622196006444)||(rt0.c1)), CAST(vt0.c1 AS NUMERIC)) RIGHT OUTER JOIN rt0 ON ((((rt0.c4) NOT NULL)) NOT NULL));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((t0.c0)&(t0.c0)))) WHERE ((((((('')AND(t0.c0)))OR(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((('')AND(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((t0.c0)&(t0.c0)))) WHERE ((((((('')AND(t0.c0)))OR(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((('')AND(t0.c0)))OR(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON (+ (((t0.c0)&(t0.c0)))) WHERE ((((((('')AND(t0.c0)))OR(t0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((+ (((vt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (x'') ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (x'') ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB));
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (x'') ORDER BY CAST(vt1.c0 COLLATE RTRIM AS BLOB);
SELECT ALL * FROM vt0, vt1 WHERE (json_valid(CAST(vt0.c1 AS REAL))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) AND ((0Xffffffffdc9c4856))) DESC  NULLS FIRST, (((((+ (vt0.c0)))OR('224172542')))AND(LIKE(vt0.c0, vt0.c0, '-')));
SELECT SUM(count) FROM (SELECT ((json_valid(CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) AND ((0xffffffffdc9c4856))) DESC  NULLS FIRST, (((((+ (vt0.c0)))OR('224172542')))AND(LIKE(vt0.c0, vt0.c0, '-'))));
SELECT ALL * FROM vt0, vt1 WHERE (json_valid(CAST(vt0.c1 AS REAL))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) AND ((0Xffffffffdc9c4856))) DESC  NULLS FIRST, (((((+ (vt0.c0)))OR('224172542')))AND(LIKE(vt0.c0, vt0.c0, '-')));
SELECT SUM(count) FROM (SELECT ((json_valid(CAST(vt0.c1 AS REAL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) AND ((0xffffffffdc9c4856))) DESC  NULLS FIRST, (((((+ (vt0.c0)))OR('224172542')))AND(LIKE(vt0.c0, vt0.c0, '-'))));
SELECT ALL * FROM vt0, vt1 WHERE (json_valid(CAST(vt0.c1 AS REAL))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)) AND ((0Xffffffffdc9c4856))) DESC  NULLS FIRST, (((((+ (vt0.c0)))OR('224172542')))AND(LIKE(vt0.c0, vt0.c0, '-')));
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((NOT (rt0.c3)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1)<=(t0.c0)))))OR(((((vt0.c0)AND(NULL)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1)<=(t0.c0)))))OR(((((vt0.c0)AND(NULL)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((NOT (rt0.c3)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1)<=(t0.c0)))))OR(((((vt0.c0)AND(NULL)))OR(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c3)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1)<=(t0.c0)))))OR(((((vt0.c0)AND(NULL)))OR(rt0.c0)))) DESC);
SELECT * FROM rt0, t0, vt0, vt1 WHERE ((((NOT (rt0.c3)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c4)))AND(((rt0.c1)<=(t0.c0)))))OR(((((vt0.c0)AND(NULL)))OR(rt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR((~ (vt1.c0))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(TRIM(DISTINCT vt1.c0, vt1.c0))))OR((~ (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(t0.c0)))OR('-2126647959')))OR(0Xffffffffe013ab63)))OR(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((((((('P')OR(((((x'339a')AND(rt0.c2)))OR(rt0.c2)))))AND(CASE WHEN rt0.c4 THEN vt1.c0 WHEN NULL THEN '' WHEN x'771d' THEN rt0.c0 ELSE vt0.c1 END)))AND(((((t0.c0)AND(rt0.c4)))AND(rt0.c1)))))OR(vt0.c0 COLLATE BINARY)) WHERE (((2038766769) NOT BETWEEN (((rt0.c1)<=(t0.c0))) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((2038766769) NOT BETWEEN (((rt0.c1)<=(t0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(t0.c0)))OR('-2126647959')))OR(0xffffffffe013ab63)))OR(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((((((('P')OR(((((x'339a')AND(rt0.c2)))OR(rt0.c2)))))AND(CASE WHEN rt0.c4 THEN vt1.c0 WHEN NULL THEN '' WHEN x'771d' THEN rt0.c0 ELSE vt0.c1 END)))AND(((((t0.c0)AND(rt0.c4)))AND(rt0.c1)))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(t0.c0)))OR('-2126647959')))OR(0Xffffffffe013ab63)))OR(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((((((('P')OR(((((x'339a')AND(rt0.c2)))OR(rt0.c2)))))AND(CASE WHEN rt0.c4 THEN vt1.c0 WHEN NULL THEN '' WHEN x'771d' THEN rt0.c0 ELSE vt0.c1 END)))AND(((((t0.c0)AND(rt0.c4)))AND(rt0.c1)))))OR(vt0.c0 COLLATE BINARY)) WHERE (((2038766769) NOT BETWEEN (((rt0.c1)<=(t0.c0))) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((2038766769) NOT BETWEEN (((rt0.c1)<=(t0.c0))) AND ((NULL IN ())))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c3)OR(t0.c0)))OR('-2126647959')))OR(0xffffffffe013ab63)))OR(vt0.c1))) IS FALSE) CROSS JOIN t0 ON (((((((('P')OR(((((x'339a')AND(rt0.c2)))OR(rt0.c2)))))AND(CASE WHEN rt0.c4 THEN vt1.c0 WHEN NULL THEN '' WHEN x'771d' THEN rt0.c0 ELSE vt0.c1 END)))AND(((((t0.c0)AND(rt0.c4)))AND(rt0.c1)))))OR(vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1, t0 WHERE (((- (vt1.c0)) IN (((x'8bc1')IS(t0.c0)), (((vt1.c0))<((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN (((x'8bc1')IS(t0.c0)), (((vt1.c0))<((t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((- (vt1.c0)) IN (((x'8bc1')IS(t0.c0)), (((vt1.c0))<((t0.c0))))));
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN (((x'8bc1')IS(t0.c0)), (((vt1.c0))<((t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((- (vt1.c0)) IN (((x'8bc1')IS(t0.c0)), (((vt1.c0))<((t0.c0))))));
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (rt0.c1) ORDER BY ((('-168006572', rt0.c0, rt0.c4)) BETWEEN ((load_extension(rt0.c3), (~ (rt0.c3)), (((3.40743936E8))<((t0.c0))))) AND ((((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), TRIM(rt0.c0)))) ASC, ((((((rt0.c0)<<(rt0.c0)))AND(((0.9692930006155702) BETWEEN (rt0.c1) AND ('1590232640')))))OR(vt0.c1)), rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((('-168006572', rt0.c0, rt0.c4)) BETWEEN ((load_extension(rt0.c3), (~ (rt0.c3)), (((3.40743936E8))<((t0.c0))))) AND ((((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), TRIM(rt0.c0)))) ASC, ((((((rt0.c0)<<(rt0.c0)))AND(((0.9692930006155702) BETWEEN (rt0.c1) AND ('1590232640')))))OR(vt0.c1)), rt0.c2 ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (rt0.c1) ORDER BY ((('-168006572', rt0.c0, rt0.c4)) BETWEEN ((load_extension(rt0.c3), (~ (rt0.c3)), (((3.40743936E8))<((t0.c0))))) AND ((((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), TRIM(rt0.c0)))) ASC, ((((((rt0.c0)<<(rt0.c0)))AND(((0.9692930006155702) BETWEEN (rt0.c1) AND ('1590232640')))))OR(vt0.c1)), rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((('-168006572', rt0.c0, rt0.c4)) BETWEEN ((load_extension(rt0.c3), (~ (rt0.c3)), (((3.40743936E8))<((t0.c0))))) AND ((((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), TRIM(rt0.c0)))) ASC, ((((((rt0.c0)<<(rt0.c0)))AND(((0.9692930006155702) BETWEEN (rt0.c1) AND ('1590232640')))))OR(vt0.c1)), rt0.c2 ASC  NULLS FIRST);
SELECT * FROM vt0 NOT INDEXED, t0, rt0 WHERE (rt0.c1) ORDER BY ((('-168006572', rt0.c0, rt0.c4)) BETWEEN ((load_extension(rt0.c3), (~ (rt0.c3)), (((3.40743936E8))<((t0.c0))))) AND ((((rt0.c2) IS TRUE), ((rt0.c2) IS FALSE), TRIM(rt0.c0)))) ASC, ((((((rt0.c0)<<(rt0.c0)))AND(((0.9692930006155702) BETWEEN (rt0.c1) AND ('1590232640')))))OR(vt0.c1)), rt0.c2 ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (t0.c0) ORDER BY (((((((((((t0.c0)AND(vt1.c0)))AND(t0.c0)))AND(x'')))OR(t0.c0)), (((0X104fe0b0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0))))>((((((((((t0.c0)OR(-6.7900894E8)))OR(t0.c0)))OR(t0.c0)))AND(x'')), (((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c0, vt1.c0, 0xffffffffd46a77aa)) AND ((t0.c0, 1842706928, vt1.c0))), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((((((((t0.c0)AND(vt1.c0)))AND(t0.c0)))AND(x'')))OR(t0.c0)), (((0x104fe0b0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0))))>((((((((((t0.c0)OR(-6.7900894E8)))OR(t0.c0)))OR(t0.c0)))AND(x'')), (((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c0, vt1.c0, 0xffffffffd46a77aa)) AND ((t0.c0, 1842706928, vt1.c0))), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (t0.c0) ORDER BY (((((((((((t0.c0)AND(vt1.c0)))AND(t0.c0)))AND(x'')))OR(t0.c0)), (((0X104fe0b0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0))))>((((((((((t0.c0)OR(-6.7900894E8)))OR(t0.c0)))OR(t0.c0)))AND(x'')), (((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c0, vt1.c0, 0xffffffffd46a77aa)) AND ((t0.c0, 1842706928, vt1.c0))), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY (((((((((((t0.c0)AND(vt1.c0)))AND(t0.c0)))AND(x'')))OR(t0.c0)), (((0x104fe0b0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0))))>((((((((((t0.c0)OR(-6.7900894E8)))OR(t0.c0)))OR(t0.c0)))AND(x'')), (((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c0, vt1.c0, 0xffffffffd46a77aa)) AND ((t0.c0, 1842706928, vt1.c0))), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE (t0.c0) ORDER BY (((((((((((t0.c0)AND(vt1.c0)))AND(t0.c0)))AND(x'')))OR(t0.c0)), (((0X104fe0b0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0))))>((((((((((t0.c0)OR(-6.7900894E8)))OR(t0.c0)))OR(t0.c0)))AND(x'')), (((vt1.c0, t0.c0, vt1.c0)) BETWEEN ((t0.c0, vt1.c0, 0xffffffffd46a77aa)) AND ((t0.c0, 1842706928, vt1.c0))), ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((('?J?8')OR(rt0.c2)))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('?J?8')OR(rt0.c2)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((('?J?8')OR(rt0.c2)))OR(rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ((((((('?J?8')OR(rt0.c2)))OR(rt0.c4)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((('?J?8')OR(rt0.c2)))OR(rt0.c4)) IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((rt0.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((rt0.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT COUNT(*) FROM vt1, rt0, vt0, t0 WHERE ((rt0.c4 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), vt0.c1 COLLATE RTRIM, ((((vt0.c1)OR(t0.c0)))OR(1.727095596E9)), ((vt0.c1)|(rt0.c3)))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c4)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c1 AS BLOB), vt0.c1 COLLATE RTRIM, ((((vt0.c1)OR(t0.c0)))OR(1.727095596E9)), ((vt0.c1)|(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((vt0.c0)LIKE(rt0.c4)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), vt0.c1 COLLATE RTRIM, ((((vt0.c1)OR(t0.c0)))OR(1.727095596E9)), ((vt0.c1)|(rt0.c3)))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c4)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c1 AS BLOB), vt0.c1 COLLATE RTRIM, ((((vt0.c1)OR(t0.c0)))OR(1.727095596E9)), ((vt0.c1)|(rt0.c3)))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY CAST(((vt0.c0)LIKE(rt0.c4)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), vt0.c1 COLLATE RTRIM, ((((vt0.c1)OR(t0.c0)))OR(1.727095596E9)), ((vt0.c1)|(rt0.c3)))) ORDER BY CAST(((vt0.c0)LIKE(rt0.c4)) AS REAL) DESC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1 WHERE (NULL);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((vt1.c0))<((vt1.c0))) WHEN rt0.c1 THEN (rt0.c2 IN (rt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (+ (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN (((vt1.c0))<((vt1.c0))) WHEN rt0.c1 THEN (rt0.c2 IN (rt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (+ (x'')) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((vt1.c0))<((vt1.c0))) WHEN rt0.c1 THEN (rt0.c2 IN (rt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (+ (x'')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN (((vt1.c0))<((vt1.c0))) WHEN rt0.c1 THEN (rt0.c2 IN (rt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (+ (x'')) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN (rt0.c2 IN ()) THEN (((vt1.c0))<((vt1.c0))) WHEN rt0.c1 THEN (rt0.c2 IN (rt0.c1)) WHEN ((vt1.c0) ISNULL) THEN (+ (x'')) END);
SELECT ALL * FROM t0, vt1 WHERE ((- ((((vt1.c0, vt1.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0, vt1.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((- ((((vt1.c0, vt1.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c0, vt1.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((- ((((vt1.c0, vt1.c0, '')) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0))) ORDER BY UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0))) ORDER BY UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c0))) ORDER BY UPPER(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt0 WHERE (vt0.c0);
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (LIKELY(DISTINCT UNLIKELY(vt0.c1))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT UNLIKELY(vt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) ORDER BY t0.c0 DESC  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (LIKELY(DISTINCT UNLIKELY(vt0.c1))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT UNLIKELY(vt0.c1))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) ORDER BY t0.c0 DESC  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS NUMERIC) DESC);
SELECT * FROM t0 CROSS JOIN vt0 ON ((vt0.c0) IS TRUE) WHERE (LIKELY(DISTINCT UNLIKELY(vt0.c1))) ORDER BY t0.c0 DESC  NULLS FIRST, CAST((vt0.c0 IN (vt0.c0, vt0.c0)) AS NUMERIC) DESC;
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((('0.24724125543747966', vt0.c0, rt0.c0)) BETWEEN ((vt0.c1, rt0.c3, vt0.c0)) AND ((vt0.c1, rt0.c4, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(rt0.c3))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)+(((vt0.c1)GLOB(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('0.24724125543747966', vt0.c0, rt0.c0)) BETWEEN ((vt0.c1, rt0.c3, vt0.c0)) AND ((vt0.c1, rt0.c4, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)+(((vt0.c1)GLOB(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((('0.24724125543747966', vt0.c0, rt0.c0)) BETWEEN ((vt0.c1, rt0.c3, vt0.c0)) AND ((vt0.c1, rt0.c4, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(rt0.c3))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)+(((vt0.c1)GLOB(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('0.24724125543747966', vt0.c0, rt0.c0)) BETWEEN ((vt0.c1, rt0.c3, vt0.c0)) AND ((vt0.c1, rt0.c4, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)+(((vt0.c1)GLOB(rt0.c2)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE (((((('0.24724125543747966', vt0.c0, rt0.c0)) BETWEEN ((vt0.c1, rt0.c3, vt0.c0)) AND ((vt0.c1, rt0.c4, vt0.c0)))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))AND(rt0.c3))))) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END)+(((vt0.c1)GLOB(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN json(rt0.c2) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c3 IN ()) THEN (+ (rt0.c2)) WHEN 1085750836 THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)OR(rt0.c3)))OR(0.5325654402255091)) THEN (((rt0.c4))>((rt0.c2))) WHEN (~ (0.20786890190911178)) THEN ((rt0.c4)IS(rt0.c4)) ELSE ((rt0.c4)<>(rt0.c2)) END) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((HEX(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN json(rt0.c2) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c3 IN ()) THEN (+ (rt0.c2)) WHEN 1085750836 THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)OR(rt0.c3)))OR(0.5325654402255091)) THEN (((rt0.c4))>((rt0.c2))) WHEN (~ (0.20786890190911178)) THEN ((rt0.c4)IS(rt0.c4)) ELSE ((rt0.c4)!=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((HEX(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN json(rt0.c2) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c3 IN ()) THEN (+ (rt0.c2)) WHEN 1085750836 THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)OR(rt0.c3)))OR(0.5325654402255091)) THEN (((rt0.c4))>((rt0.c2))) WHEN (~ (0.20786890190911178)) THEN ((rt0.c4)IS(rt0.c4)) ELSE ((rt0.c4)<>(rt0.c2)) END) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((HEX(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN json(rt0.c2) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c3 IN ()) THEN (+ (rt0.c2)) WHEN 1085750836 THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)OR(rt0.c3)))OR(0.5325654402255091)) THEN (((rt0.c4))>((rt0.c2))) WHEN (~ (0.20786890190911178)) THEN ((rt0.c4)IS(rt0.c4)) ELSE ((rt0.c4)!=(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((HEX(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN json(rt0.c2) THEN CAST(rt0.c0 AS BLOB) WHEN (rt0.c3 IN ()) THEN (+ (rt0.c2)) WHEN 1085750836 THEN (rt0.c2 IN ()) WHEN ((((rt0.c0)OR(rt0.c3)))OR(0.5325654402255091)) THEN (((rt0.c4))>((rt0.c2))) WHEN (~ (0.20786890190911178)) THEN ((rt0.c4)IS(rt0.c4)) ELSE ((rt0.c4)<>(rt0.c2)) END) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND ((HEX(rt0.c3))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY) ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))==(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))&(((vt0.c1) NOT NULL))) FULL OUTER JOIN t0 ON ((((((((vt0.c0)OR(((vt0.c1)-(t0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0)))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)) WHERE ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((t0.c0) ISNULL)))<=(((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))&(((vt0.c1) NOT NULL))) FULL OUTER JOIN t0 ON ((((((((vt0.c0)OR(((vt0.c1)-(t0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0)))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)) ORDER BY (((((t0.c0) ISNULL)))<=(((vt0.c1 IN ())))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))&(((vt0.c1) NOT NULL))) FULL OUTER JOIN t0 ON ((((((((vt0.c0)OR(((vt0.c1)-(t0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0)))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)) WHERE ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((t0.c0) ISNULL)))<=(((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))&(((vt0.c1) NOT NULL))) FULL OUTER JOIN t0 ON ((((((((vt0.c0)OR(((vt0.c1)-(t0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0)))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)) ORDER BY (((((t0.c0) ISNULL)))<=(((vt0.c1 IN ())))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((+ (vt0.c0)))&(((vt0.c1) NOT NULL))) FULL OUTER JOIN t0 ON ((((((((vt0.c0)OR(((vt0.c1)-(t0.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR(vt1.c0)))OR(CASE WHEN NULL THEN vt1.c0 ELSE vt0.c1 END)) WHERE ((~ (CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY (((((t0.c0) ISNULL)))<=(((vt0.c1 IN ()))));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CAST(((((x'8652')OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(((rt0.c1)AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND (LIKELIHOOD(rt0.c1, 0.8460163351586371)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'8652')OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(((rt0.c1)AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND (LIKELIHOOD(rt0.c1, 0.8460163351586371)))  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CAST(((((x'8652')OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(((rt0.c1)AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND (LIKELIHOOD(rt0.c1, 0.8460163351586371)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((x'8652')OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(((rt0.c1)AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND (LIKELIHOOD(rt0.c1, 0.8460163351586371)))  NULLS LAST);
SELECT * FROM rt0, t0, vt0, vt1 WHERE (CAST(((((x'8652')OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(((rt0.c1)AND(vt0.c0)))) DESC  NULLS FIRST, ((((vt0.c0)GLOB(vt0.c1))) NOT BETWEEN ((vt1.c0 IN ())) AND (LIKELIHOOD(rt0.c1, 0.8460163351586371)))  NULLS LAST;
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((((('4''DG')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((NULL)) AND ((((('4''DG')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((((('4''DG')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((NULL)) AND ((((('4''DG')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) NOT NULL)  NULLS LAST);
SELECT * FROM vt0, rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((NULL)) AND ((((('4''DG')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ((NOT ((NULL IN (NULL))))) ORDER BY ((vt0.c1) BETWEEN (((t0.c0)%(t0.c0))) AND (((rt0.c4) NOT NULL))), ((((((((((vt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))AND(rt0.c3)))*((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NULL IN (NULL))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((vt0.c1) BETWEEN (((t0.c0)%(t0.c0))) AND (((rt0.c4) NOT NULL))), ((((((((((vt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))AND(rt0.c3)))*((rt0.c4 IN ()))));
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ((NOT ((NULL IN (NULL))))) ORDER BY ((vt0.c1) BETWEEN (((t0.c0)%(t0.c0))) AND (((rt0.c4) NOT NULL))), ((((((((((vt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))AND(rt0.c3)))*((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NULL IN (NULL))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((vt0.c1) BETWEEN (((t0.c0)%(t0.c0))) AND (((rt0.c4) NOT NULL))), ((((((((((vt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))AND(rt0.c3)))*((rt0.c4 IN ()))));
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ((NOT ((NULL IN (NULL))))) ORDER BY ((vt0.c1) BETWEEN (((t0.c0)%(t0.c0))) AND (((rt0.c4) NOT NULL))), ((((((((((vt1.c0)AND(rt0.c0)))AND(t0.c0)))AND(rt0.c3)))AND(rt0.c3)))*((rt0.c4 IN ())));
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c4) NOT NULL) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST, (((((t0.c0) IS FALSE)))<((MAX(rt0.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE RTRIM ORDER BY vt1.c0  NULLS LAST, (((((t0.c0) IS FALSE)))<((MAX(rt0.c1, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c4) NOT NULL) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST, (((((t0.c0) IS FALSE)))<((MAX(rt0.c1, rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) NOT NULL) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE RTRIM ORDER BY vt1.c0  NULLS LAST, (((((t0.c0) IS FALSE)))<((MAX(rt0.c1, rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE RTRIM WHERE (CAST(((rt0.c4) NOT NULL) AS INTEGER)) ORDER BY vt1.c0  NULLS LAST, (((((t0.c0) IS FALSE)))<((MAX(rt0.c1, rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY -2.48960459E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY -2.48960459E8 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY -2.48960459E8 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 ORDER BY -2.48960459E8 ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (x'') ORDER BY -2.48960459E8 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE (DATETIME(1.016242958E9 COLLATE NOCASE, x'', ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), NULL COLLATE RTRIM, ((t0.c0) ISNULL))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN (+ (vt1.c0)) WHEN ((0.38875596328242923)LIKE(t0.c0)) THEN ((-2.4796602E7) NOT BETWEEN (x'') AND ('oi.A[')) WHEN x'' THEN UNLIKELY(t0.c0) END;
SELECT SUM(count) FROM (SELECT ((DATETIME(1.016242958E9 COLLATE NOCASE, x'', ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), NULL COLLATE RTRIM, ((t0.c0) ISNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN (+ (vt1.c0)) WHEN ((0.38875596328242923)LIKE(t0.c0)) THEN ((-2.4796602E7) NOT BETWEEN (x'') AND ('oi.A[')) WHEN x'' THEN UNLIKELY(t0.c0) END);
SELECT COUNT(*) FROM vt1, t0 WHERE (DATETIME(1.016242958E9 COLLATE NOCASE, x'', ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), NULL COLLATE RTRIM, ((t0.c0) ISNULL))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN (+ (vt1.c0)) WHEN ((0.38875596328242923)LIKE(t0.c0)) THEN ((-2.4796602E7) NOT BETWEEN (x'') AND ('oi.A[')) WHEN x'' THEN UNLIKELY(t0.c0) END;
SELECT SUM(count) FROM (SELECT ((DATETIME(1.016242958E9 COLLATE NOCASE, x'', ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), NULL COLLATE RTRIM, ((t0.c0) ISNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN (+ (vt1.c0)) WHEN ((0.38875596328242923)LIKE(t0.c0)) THEN ((-2.4796602E7) NOT BETWEEN (x'') AND ('oi.A[')) WHEN x'' THEN UNLIKELY(t0.c0) END);
SELECT COUNT(*) FROM vt1, t0 WHERE (DATETIME(1.016242958E9 COLLATE NOCASE, x'', ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)), NULL COLLATE RTRIM, ((t0.c0) ISNULL))) ORDER BY CASE WHEN CAST(vt1.c0 AS BLOB) THEN (+ (vt1.c0)) WHEN ((0.38875596328242923)LIKE(t0.c0)) THEN ((-2.4796602E7) NOT BETWEEN (x'') AND ('oi.A[')) WHEN x'' THEN UNLIKELY(t0.c0) END;
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((0.7521578956355892) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.7521578956355892) NOT NULL)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((0.7521578956355892) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0.7521578956355892) NOT NULL)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (((0.7521578956355892) NOT NULL));
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((CAST(rt0.c1 AS BLOB)))>(((((rt0.c4))!=((rt0.c3))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS BLOB)))>(((((rt0.c4))!=((rt0.c3))))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((CAST(rt0.c1 AS BLOB)))>(((((rt0.c4))!=((rt0.c3))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS BLOB)))>(((((rt0.c4))!=((rt0.c3))))))) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE ((((CAST(rt0.c1 AS BLOB)))>(((((rt0.c4))!=((rt0.c3))))))) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)<((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((((((+ (rt0.c2)))OR(vt0.c0 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))))OR(t0.c0)))AND(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON CASE WHEN (NOT (rt0.c4)) THEN ((rt0.c1)==(rt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN TRIM(rt0.c2, vt0.c1) THEN 1520143872 END WHERE (NULL) ORDER BY CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt0.c0)GLOB(vt0.c1)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, ((((vt0.c1)<(NULL)))>(((rt0.c2)*(rt0.c2))))  NULLS LAST, (((vt1.c0 IN ()))LIKE(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((((((+ (rt0.c2)))OR(vt0.c0 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))))OR(t0.c0)))AND(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON CASE WHEN (NOT (rt0.c4)) THEN ((rt0.c1)=(rt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN TRIM(rt0.c2, vt0.c1) THEN 1520143872 END ORDER BY CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt0.c0)GLOB(vt0.c1)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, ((((vt0.c1)<(NULL)))>(((rt0.c2)*(rt0.c2))))  NULLS LAST, (((vt1.c0 IN ()))LIKE(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((((((+ (rt0.c2)))OR(vt0.c0 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))))OR(t0.c0)))AND(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON CASE WHEN (NOT (rt0.c4)) THEN ((rt0.c1)==(rt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN TRIM(rt0.c2, vt0.c1) THEN 1520143872 END WHERE (NULL) ORDER BY CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt0.c0)GLOB(vt0.c1)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, ((((vt0.c1)<(NULL)))>(((rt0.c2)*(rt0.c2))))  NULLS LAST, (((vt1.c0 IN ()))LIKE(((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((((((((+ (rt0.c2)))OR(vt0.c0 COLLATE RTRIM)))AND(((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))))OR(t0.c0)))AND(vt0.c0 COLLATE RTRIM)) CROSS JOIN t0 ON CASE WHEN (NOT (rt0.c4)) THEN ((rt0.c1)=(rt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN (rt0.c0 IN ()) WHEN TRIM(rt0.c2, vt0.c1) THEN 1520143872 END ORDER BY CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c4))  WHEN ((rt0.c1)IS(rt0.c2)) THEN ((vt0.c0)GLOB(vt0.c1)) ELSE ((vt1.c0) IS TRUE) END ASC  NULLS LAST, ((((vt0.c1)<(NULL)))>(((rt0.c2)*(rt0.c2))))  NULLS LAST, (((vt1.c0 IN ()))LIKE(((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (COALESCE(DISTINCT x'377e', vt0.c0)) AND (((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (COALESCE(DISTINCT x'377e', vt0.c0)) AND (((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (COALESCE(DISTINCT x'377e', vt0.c0)) AND (((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT BETWEEN (COALESCE(DISTINCT x'377e', vt0.c0)) AND (((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT BETWEEN (COALESCE(DISTINCT x'377e', vt0.c0)) AND (((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff996592f6) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))<(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((0xffffffff996592f6) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))<(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff996592f6) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))<(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((0xffffffff996592f6) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))<(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((0xffffffff996592f6) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (rt0.c1))))) ORDER BY (((rt0.c2 IN ()))<(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt1 ON (((('')+(rt0.c1))) IS FALSE) WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)))-(((t0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)))-(((t0.c0)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt1 ON (((('')+(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt1 ON (((('')+(rt0.c1))) IS FALSE) WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)))-(((t0.c0)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)))-(((t0.c0)/(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt1 ON (((('')+(rt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt1 ON (((('')+(rt0.c1))) IS FALSE) WHERE (((((rt0.c3) BETWEEN (rt0.c0) AND (t0.c0)))-(((t0.c0)/(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((+ (NULL))) ORDER BY CASE SQLITE_VERSION()  WHEN ('-1721396490' IN (vt0.c1, vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (297227595) AND ('㥹+	R')) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE SQLITE_VERSION()  WHEN ('-1721396490' IN (vt0.c1, vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (297227595) AND ('㥹+	R')) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (NULL))) ORDER BY CASE SQLITE_VERSION()  WHEN ('-1721396490' IN (vt0.c1, vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (297227595) AND ('㥹+	R')) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE SQLITE_VERSION()  WHEN ('-1721396490' IN (vt0.c1, vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (297227595) AND ('㥹+	R')) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (NULL))) ORDER BY CASE SQLITE_VERSION()  WHEN ('-1721396490' IN (vt0.c1, vt0.c1)) THEN (vt0.c1 IN ()) WHEN ((vt0.c1)AND(vt0.c1)) THEN ((vt0.c1) BETWEEN (297227595) AND ('㥹+	R')) WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (-694136723))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (-694136723))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (-694136723))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (-694136723))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (-694136723))) IS TRUE));
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON (((('1239375511')OR(LIKELIHOOD(DISTINCT rt0.c3, 0.7747102125632259))))OR(LTRIM(vt0.c0))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN 1.271388185E9 END)) AND ((rt0.c0))) WHERE (NULLIF(((vt1.c0)AND(rt0.c2)), NULLIF(vt0.c1, vt0.c0))) ORDER BY 0Xffffffffa0239e71 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0)AND(rt0.c2)), NULLIF(vt0.c1, vt0.c0))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON (((('1239375511')OR(LIKELIHOOD(DISTINCT rt0.c3, 0.7747102125632259))))OR(LTRIM(vt0.c0))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN 1.271388185E9 END)) AND ((rt0.c0))) ORDER BY 0Xffffffffa0239e71 DESC);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON (((('1239375511')OR(LIKELIHOOD(DISTINCT rt0.c3, 0.7747102125632259))))OR(LTRIM(vt0.c0))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN 1.271388185E9 END)) AND ((rt0.c0))) WHERE (NULLIF(((vt1.c0)AND(rt0.c2)), NULLIF(vt0.c1, vt0.c0))) ORDER BY 0Xffffffffa0239e71 DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0)AND(rt0.c2)), NULLIF(vt0.c1, vt0.c0))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON (((('1239375511')OR(LIKELIHOOD(DISTINCT rt0.c3, 0.7747102125632259))))OR(LTRIM(vt0.c0))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN 1.271388185E9 END)) AND ((rt0.c0))) ORDER BY 0Xffffffffa0239e71 DESC);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON (((('1239375511')OR(LIKELIHOOD(DISTINCT rt0.c3, 0.7747102125632259))))OR(LTRIM(vt0.c0))) LEFT OUTER JOIN vt1 ON (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN 1.271388185E9 END)) AND ((rt0.c0))) WHERE (NULLIF(((vt1.c0)AND(rt0.c2)), NULLIF(vt0.c1, vt0.c0))) ORDER BY 0Xffffffffa0239e71 DESC;
SELECT * FROM t0, vt1 WHERE (NULLIF(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (NULL IN ()))) ORDER BY CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))  WHEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE t0.c0 END THEN (vt1.c0 IN (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND('340743936')) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS LAST, (~ (highlight(vt1.c0, vt1.c0, t0.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (NULL IN ()))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))  WHEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE t0.c0 END THEN (vt1.c0 IN (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND('340743936')) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS LAST, (~ (highlight(vt1.c0, vt1.c0, t0.c0, vt1.c0))) ASC);
SELECT * FROM t0, vt1 WHERE (NULLIF(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (NULL IN ()))) ORDER BY CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))  WHEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE t0.c0 END THEN (vt1.c0 IN (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND('340743936')) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS LAST, (~ (highlight(vt1.c0, vt1.c0, t0.c0, vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (NULL IN ()))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE ((t0.c0) NOT BETWEEN (vt1.c0) AND (t0.c0))  WHEN ((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE t0.c0 END THEN (vt1.c0 IN (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND('340743936')) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((((t0.c0)AND(t0.c0)))OR(t0.c0)) END ASC  NULLS LAST, (~ (highlight(vt1.c0, vt1.c0, t0.c0, vt1.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NATURAL JOIN t0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 NATURAL JOIN t0 ORDER BY (rt0.c3 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NATURAL JOIN t0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 NATURAL JOIN t0 ORDER BY (rt0.c3 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 NATURAL JOIN t0 WHERE (((HEX(vt0.c0)) IS FALSE)) ORDER BY (rt0.c3 IN ()) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c4 COLLATE RTRIM AS INTEGER)) ORDER BY ((rt0.c2) IS TRUE) COLLATE BINARY DESC;
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c0)==(rt0.c0)))OR(((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND(rt0.c4)))OR(CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt1 ON ((((rt0.c1)/(vt0.c1)))||(CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c0)=(rt0.c0)))OR(((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND(rt0.c4)))OR(CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt1 ON ((((rt0.c1)/(vt0.c1)))||(CAST(rt0.c1 AS NUMERIC))) ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c0)==(rt0.c0)))OR(((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND(rt0.c4)))OR(CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt1 ON ((((rt0.c1)/(vt0.c1)))||(CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c0)=(rt0.c0)))OR(((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND(rt0.c4)))OR(CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt1 ON ((((rt0.c1)/(vt0.c1)))||(CAST(rt0.c1 AS NUMERIC))) ORDER BY rt0.c2 ASC);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON ((((((((((rt0.c0)==(rt0.c0)))OR(((((t0.c0)OR(vt0.c0)))OR(rt0.c1)))))AND(vt0.c1 COLLATE BINARY)))AND(rt0.c4)))OR(CAST(vt0.c0 AS NUMERIC))) INNER JOIN vt1 ON ((((rt0.c1)/(vt0.c1)))||(CAST(rt0.c1 AS NUMERIC))) WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '%tiO4]', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((((((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)IS(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(0.46693543357797085));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '%tiO4]', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)IS(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(0.46693543357797085)));
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '%tiO4]', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((((((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)IS(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(0.46693543357797085));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '%tiO4]', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)IS(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(0.46693543357797085)));
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, '%tiO4]', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))), ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) ORDER BY (((((((((((((t0.c0 IN ()))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((t0.c0)IS(t0.c0)))))AND(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(0.46693543357797085));
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS REAL));
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((0xffffffff84e64285)+(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff84e64285)+(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((0xffffffff84e64285)+(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff84e64285)+(CASE WHEN rt0.c4 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (((0xffffffff84e64285)+(CASE WHEN rt0.c4 THEN rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_valid(((rt0.c3)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c3)||(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_valid(((rt0.c3)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_valid(((rt0.c3)||(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (json_valid(((rt0.c3)||(rt0.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c3, rt0.c3)) BETWEEN (((rt0.c4) IS FALSE)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c0)) THEN rt0.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, rt0.c3)) BETWEEN (((rt0.c4) IS FALSE)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2)-(rt0.c0)) THEN rt0.c4 END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c3, rt0.c3)) BETWEEN (((rt0.c4) IS FALSE)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c0)) THEN rt0.c4 END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(rt0.c3, rt0.c3)) BETWEEN (((rt0.c4) IS FALSE)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((rt0.c2)-(rt0.c0)) THEN rt0.c4 END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((IFNULL(rt0.c3, rt0.c3)) BETWEEN (((rt0.c4) IS FALSE)) AND (vt1.c0 COLLATE RTRIM))) ORDER BY CASE WHEN ((rt0.c2)-(rt0.c0)) THEN rt0.c4 END;
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ (((vt0.c1) IS FALSE))));
SELECT * FROM t0 WHERE (CAST((('-24796602') NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('-24796602') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((('-24796602') NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((('-24796602') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((('-24796602') NOTNULL) AS NUMERIC));
SELECT ALL * FROM t0, vt1 WHERE (CASE JULIANDAY(vt1.c0, NULL, vt1.c0)  WHEN NULL THEN vt1.c0 WHEN (((NULL))>=((vt1.c0))) THEN ((vt1.c0)GLOB(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE JULIANDAY(vt1.c0, NULL, vt1.c0)  WHEN NULL THEN vt1.c0 WHEN (((NULL))>=((vt1.c0))) THEN ((vt1.c0)GLOB(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CASE JULIANDAY(vt1.c0, NULL, vt1.c0)  WHEN NULL THEN vt1.c0 WHEN (((NULL))>=((vt1.c0))) THEN ((vt1.c0)GLOB(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE JULIANDAY(vt1.c0, NULL, vt1.c0)  WHEN NULL THEN vt1.c0 WHEN (((NULL))>=((vt1.c0))) THEN ((vt1.c0)GLOB(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CASE JULIANDAY(vt1.c0, NULL, vt1.c0)  WHEN NULL THEN vt1.c0 WHEN (((NULL))>=((vt1.c0))) THEN ((vt1.c0)GLOB(t0.c0)) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN '' THEN vt1.c0 ELSE vt1.c0 END END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)-(t0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))=((vt0.c1)))) AND ((((x'', t0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))=((vt0.c1)))) AND ((((x'', t0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)-(t0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))=((vt0.c1)))) AND ((((x'', t0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)-(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))=((vt0.c1)))) AND ((((x'', t0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c0)-(t0.c0))) IS TRUE)) ORDER BY ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN ((((vt0.c0))=((vt0.c1)))) AND ((((x'', t0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))) DESC;
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON LTRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c4)), '-1693658989') FULL OUTER JOIN t0 ON 1.220206552E9 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((rt0.c2 IN ())))) ORDER BY (((vt1.c0 IN (t0.c0))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CAST(rt0.c4 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON LTRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c4)), '-1693658989') FULL OUTER JOIN t0 ON 1.220206552E9 ORDER BY (((vt1.c0 IN (t0.c0))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CAST(rt0.c4 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON LTRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c4)), '-1693658989') FULL OUTER JOIN t0 ON 1.220206552E9 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((rt0.c2 IN ())))) ORDER BY (((vt1.c0 IN (t0.c0))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CAST(rt0.c4 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON LTRIM(((vt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c4)), '-1693658989') FULL OUTER JOIN t0 ON 1.220206552E9 ORDER BY (((vt1.c0 IN (t0.c0))) NOT BETWEEN (((vt0.c1) ISNULL)) AND (CAST(rt0.c4 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)IS NOT(((vt0.c1)<(vt0.c1)))));
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ('766561015') ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (('766561015') IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ('766561015') ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (('766561015') IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC);
SELECT ALL * FROM vt0, rt0, vt1, t0 WHERE ('766561015') ORDER BY ((((vt1.c0) IS FALSE)) ISNULL) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY rt0.c2 DESC  NULLS LAST, NULLIF('888194077', rt0.c0 COLLATE BINARY) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE RTRIM)OR(load_extension(rt0.c4))))AND(((rt0.c1)/(rt0.c4)))))AND('jC(^g')))OR((rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST, NULLIF('888194077', rt0.c0 COLLATE BINARY) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE RTRIM)OR(load_extension(rt0.c4))))AND(((rt0.c1)/(rt0.c4)))))AND('jC(^g')))OR((rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY rt0.c2 DESC  NULLS LAST, NULLIF('888194077', rt0.c0 COLLATE BINARY) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE RTRIM)OR(load_extension(rt0.c4))))AND(((rt0.c1)/(rt0.c4)))))AND('jC(^g')))OR((rt0.c1 IN (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2 DESC  NULLS LAST, NULLIF('888194077', rt0.c0 COLLATE BINARY) DESC  NULLS LAST, ((((((((rt0.c3 COLLATE RTRIM)OR(load_extension(rt0.c4))))AND(((rt0.c1)/(rt0.c4)))))AND('jC(^g')))OR((rt0.c1 IN (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CASE WHEN vt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 END ELSE ((rt0.c3)%(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 END ELSE ((rt0.c3)%(rt0.c3)) END) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CASE WHEN vt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 END ELSE ((rt0.c3)%(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 END ELSE ((rt0.c3)%(rt0.c3)) END) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL * FROM t0, vt0, rt0, vt1 WHERE (CASE WHEN vt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt0.c0 WHEN rt0.c3 THEN vt0.c1 END ELSE ((rt0.c3)%(rt0.c3)) END);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((((vt0.c1))<((x'')))))) ORDER BY NULL, ((vt0.c1)OR('-1118061180')), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((vt0.c0))<(('-488273061')))))<=((((-2.054597768E9) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)==(vt0.c1)), ((vt0.c0)-(vt0.c1)))))  NULLS LAST, UPPER(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))GLOB((((vt0.c1))<((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY NULL, ((vt0.c1)OR('-1118061180')), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((vt0.c0))<(('-488273061')))))<=((((-2.054597768E9) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)=(vt0.c1)), ((vt0.c0)-(vt0.c1)))))  NULLS LAST, UPPER(NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((((vt0.c1))<((x'')))))) ORDER BY NULL, ((vt0.c1)OR('-1118061180')), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((vt0.c0))<(('-488273061')))))<=((((-2.054597768E9) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)==(vt0.c1)), ((vt0.c0)-(vt0.c1)))))  NULLS LAST, UPPER(NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))GLOB((((vt0.c1))<((x'')))))) IS TRUE)  as count FROM vt0 ORDER BY NULL, ((vt0.c1)OR('-1118061180')), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((vt0.c0))<(('-488273061')))))<=((((-2.054597768E9) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)=(vt0.c1)), ((vt0.c0)-(vt0.c1)))))  NULLS LAST, UPPER(NULL)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((~ (vt0.c0)))GLOB((((vt0.c1))<((x'')))))) ORDER BY NULL, ((vt0.c1)OR('-1118061180')), (((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)<(vt0.c0)), (((vt0.c0))<(('-488273061')))))<=((((-2.054597768E9) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)==(vt0.c1)), ((vt0.c0)-(vt0.c1)))))  NULLS LAST, UPPER(NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (x'd725') ORDER BY LENGTH(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))  NULLS FIRST, ((CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)/((0.4712926671303367 IN ()))) ASC, (((((rt0.c4 IN ()))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.044389113086840015)))))OR((- (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'd725') IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))  NULLS FIRST, ((CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)/((0.4712926671303367 IN ()))) ASC, (((((rt0.c4 IN ()))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.044389113086840015)))))OR((- (rt0.c4)))) ASC);
SELECT * FROM rt0 WHERE (x'd725') ORDER BY LENGTH(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))  NULLS FIRST, ((CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)/((0.4712926671303367 IN ()))) ASC, (((((rt0.c4 IN ()))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.044389113086840015)))))OR((- (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'd725') IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))  NULLS FIRST, ((CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)/((0.4712926671303367 IN ()))) ASC, (((((rt0.c4 IN ()))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.044389113086840015)))))OR((- (rt0.c4)))) ASC);
SELECT * FROM rt0 WHERE (x'd725') ORDER BY LENGTH(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))  NULLS FIRST, ((CASE WHEN x'' THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)/((0.4712926671303367 IN ()))) ASC, (((((rt0.c4 IN ()))AND(((rt0.c3) NOT BETWEEN (rt0.c1) AND (0.044389113086840015)))))OR((- (rt0.c4)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))<((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY ((((rt0.c2)GLOB(NULL))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1))<((rt0.c0 IN (rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(NULL))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))<((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY ((((rt0.c2)GLOB(NULL))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1))<((rt0.c0 IN (rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)GLOB(NULL))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((QUOTE(rt0.c1))<((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY ((((rt0.c2)GLOB(NULL))) IS FALSE);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)-((((vt0.c0))=((t0.c0))))) WHERE (((x'')/(CAST(t0.c0 AS REAL)))) ORDER BY CAST((~ (vt0.c1)) AS REAL)  NULLS FIRST, CASE ((((vt1.c0)OR(1101497856)))OR(t0.c0))  WHEN ((0.15162822477725935)-(-66374848)) THEN CAST(t0.c0 AS NUMERIC) WHEN (vt1.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'4a96' END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END ELSE vt0.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)-((((vt0.c0))==((t0.c0))))) ORDER BY CAST((~ (vt0.c1)) AS REAL)  NULLS FIRST, CASE ((((vt1.c0)OR(1101497856)))OR(t0.c0))  WHEN ((0.15162822477725935)-(-66374848)) THEN CAST(t0.c0 AS NUMERIC) WHEN (vt1.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'4a96' END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END ELSE vt0.c1 COLLATE NOCASE END);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)-((((vt0.c0))=((t0.c0))))) WHERE (((x'')/(CAST(t0.c0 AS REAL)))) ORDER BY CAST((~ (vt0.c1)) AS REAL)  NULLS FIRST, CASE ((((vt1.c0)OR(1101497856)))OR(t0.c0))  WHEN ((0.15162822477725935)-(-66374848)) THEN CAST(t0.c0 AS NUMERIC) WHEN (vt1.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'4a96' END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END ELSE vt0.c1 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)-((((vt0.c0))==((t0.c0))))) ORDER BY CAST((~ (vt0.c1)) AS REAL)  NULLS FIRST, CASE ((((vt1.c0)OR(1101497856)))OR(t0.c0))  WHEN ((0.15162822477725935)-(-66374848)) THEN CAST(t0.c0 AS NUMERIC) WHEN (vt1.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'4a96' END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END ELSE vt0.c1 COLLATE NOCASE END);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON ((CASE vt1.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c0 ELSE vt1.c0 END)-((((vt0.c0))=((t0.c0))))) WHERE (((x'')/(CAST(t0.c0 AS REAL)))) ORDER BY CAST((~ (vt0.c1)) AS REAL)  NULLS FIRST, CASE ((((vt1.c0)OR(1101497856)))OR(t0.c0))  WHEN ((0.15162822477725935)-(-66374848)) THEN CAST(t0.c0 AS NUMERIC) WHEN (vt1.c0 IN ()) THEN CASE WHEN t0.c0 THEN t0.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN t0.c0 ELSE x'4a96' END THEN CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END ELSE vt0.c1 COLLATE NOCASE END;
SELECT ALL * FROM t0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) NOT BETWEEN (CAST('199341200' AS NUMERIC)) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (CAST('199341200' AS NUMERIC)) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) NOT BETWEEN (CAST('199341200' AS NUMERIC)) AND (CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (CAST('199341200' AS NUMERIC)) AND (CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) NOT BETWEEN (CAST('199341200' AS NUMERIC)) AND (CAST(t0.c0 AS BLOB))));
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))=((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))=((vt0.c1 IN ()))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))=((vt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) IS FALSE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))=((vt0.c1 IN ()))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS FALSE) IN ())) ORDER BY ((((vt0.c0)OR(vt0.c0)))=((vt0.c1 IN ()))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c0, (((t0.c0))=((t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c0, (((t0.c0))=((t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c0, (((t0.c0))=((t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY IFNULL(DISTINCT t0.c0, (((t0.c0))=((t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) NOTNULL)) ORDER BY IFNULL(DISTINCT t0.c0, (((t0.c0))=((t0.c0)))) ASC;
SELECT * FROM t0, vt1 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (+ (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (+ (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (((t0.c0) IS FALSE)))  NULLS LAST);
SELECT * FROM t0, vt1 WHERE ((((t0.c0) NOTNULL) IN ())) ORDER BY (+ (((t0.c0) IS FALSE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c4)<(rt0.c3))))) ORDER BY ((rt0.c1 IN (rt0.c3)) IN ((NOT (-47583162)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c4)<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c3)) IN ((NOT (-47583162)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c4)<(rt0.c3))))) ORDER BY ((rt0.c1 IN (rt0.c3)) IN ((NOT (-47583162)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c4)<(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 IN (rt0.c3)) IN ((NOT (-47583162)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) IN (((rt0.c4)<(rt0.c3))))) ORDER BY ((rt0.c1 IN (rt0.c3)) IN ((NOT (-47583162)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1)LIKE(vt0.c1)))<>(((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))) WHERE ((((vt0.c0)OR(vt0.c0)) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1)LIKE(vt0.c1)))<>(((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))) ORDER BY vt0.c0);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1)LIKE(vt0.c1)))<>(((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))) WHERE ((((vt0.c0)OR(vt0.c0)) IN ())) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT) INNER JOIN vt0 ON ((((vt0.c1)LIKE(vt0.c1)))<>(((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))OR(t0.c0)))OR(vt0.c1)))) ORDER BY vt0.c0);
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c3)|(rt0.c4)), rt0.c3, ((rt0.c1)!=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(((rt0.c3)|(rt0.c4)), rt0.c3, ((rt0.c1)!=(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c3)|(rt0.c4)), rt0.c3, ((rt0.c1)!=(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((DATE(((rt0.c3)|(rt0.c4)), rt0.c3, ((rt0.c1)!=(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (DATE(((rt0.c3)|(rt0.c4)), rt0.c3, ((rt0.c1)!=(rt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((((('105573677') NOT NULL))>(((vt0.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('105573677') NOT NULL))>(((vt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('105573677') NOT NULL))>(((vt0.c1)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('105573677') NOT NULL))>(((vt0.c1)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((('105573677') NOT NULL))>(((vt0.c1)LIKE(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0xffffffffb09858e9) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKELY(DISTINCT vt1.c0) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffb09858e9) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT vt1.c0) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0xffffffffb09858e9) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKELY(DISTINCT vt1.c0) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffffb09858e9) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT vt1.c0) COLLATE RTRIM COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0xffffffffb09858e9) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY LIKELY(DISTINCT vt1.c0) COLLATE RTRIM COLLATE RTRIM DESC;
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ('-593737642' IN ('vG|', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) WHERE ((- (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ('-593737642' IN ('vG|', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ('-593737642' IN ('vG|', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) WHERE ((- (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ('-593737642' IN ('vG|', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON ('-593737642' IN ('vG|', (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))) WHERE ((- (((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))AND(vt0.c1)))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c3)IS(x'')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (NOT (rt0.c3)) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY NULLIF(CAST(rt0.c3 AS BLOB), ((rt0.c2)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c3)IS(x'')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (NOT (rt0.c3)) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(CAST(rt0.c3 AS BLOB), ((rt0.c2)<=(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c3)IS(x'')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (NOT (rt0.c3)) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY NULLIF(CAST(rt0.c3 AS BLOB), ((rt0.c2)<=(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c3)IS(x'')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (NOT (rt0.c3)) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(CAST(rt0.c3 AS BLOB), ((rt0.c2)<=(rt0.c0))));
SELECT ALL * FROM rt0 WHERE (CASE CAST(rt0.c4 AS INTEGER)  WHEN ((rt0.c3)IS(x'')) THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN (NOT (rt0.c3)) WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END END) ORDER BY NULLIF(CAST(rt0.c3 AS BLOB), ((rt0.c2)<=(rt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULL);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (x'');
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2)AND(x'')))OR(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c2)AND(x'')))OR(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2)AND(x'')))OR(vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c2)AND(x'')))OR(vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE)) ORDER BY ((((rt0.c2)AND(x'')))OR(vt0.c0)) COLLATE BINARY ASC;
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((x'd111') BETWEEN (vt1.c0) AND (x'')))AND(((vt0.c0)+(t0.c0)))))OR((~ (vt0.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('')))AND((t0.c0 IN ())))) ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(TRIM('Z(<', vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('')))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((x'd111') BETWEEN (vt1.c0) AND (x'')))AND(((vt0.c0)+(t0.c0)))))OR((~ (vt0.c0)))) ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(TRIM('Z(<', vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((x'd111') BETWEEN (vt1.c0) AND (x'')))AND(((vt0.c0)+(t0.c0)))))OR((~ (vt0.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('')))AND((t0.c0 IN ())))) ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(TRIM('Z(<', vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('')))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((x'd111') BETWEEN (vt1.c0) AND (x'')))AND(((vt0.c0)+(t0.c0)))))OR((~ (vt0.c0)))) ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(TRIM('Z(<', vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((((x'd111') BETWEEN (vt1.c0) AND (x'')))AND(((vt0.c0)+(t0.c0)))))OR((~ (vt0.c0)))) WHERE (((((vt1.c0) NOT BETWEEN (vt0.c0) AND ('')))AND((t0.c0 IN ())))) ORDER BY ((((((vt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))AND(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))AND(TRIM('Z(<', vt1.c0))) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((+ (((t0.c0)LIKE(t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 IN ()) IN ((((vt1.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ((((vt1.c0))>((rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 IN ()) IN ((((vt1.c0))>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 IN ()) IN ((((vt1.c0))>((rt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c2 IN ()) IN ((((vt1.c0))>((rt0.c0))))));
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0.09185340496497119 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY ((COALESCE(rt0.c3, rt0.c4)) IS FALSE), (((rt0.c0)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0.09185340496497119 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(rt0.c3, rt0.c4)) IS FALSE), (((rt0.c0)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0.09185340496497119 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY ((COALESCE(rt0.c3, rt0.c4)) IS FALSE), (((rt0.c0)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0.09185340496497119 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(rt0.c3, rt0.c4)) IS FALSE), (((rt0.c0)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((~ (rt0.c3))) AND (CASE WHEN rt0.c0 THEN 0.09185340496497119 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY ((COALESCE(rt0.c3, rt0.c4)) IS FALSE), (((rt0.c0)) BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ASC;
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM vt0, t0 WHERE (((UPPER(DISTINCT vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((UPPER(DISTINCT vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((UPPER(DISTINCT vt0.c1))<=(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (NULL)))<=(0.6709693731336996)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c1) AND (NULL)))<=(0.6709693731336996))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (NULL)))<=(0.6709693731336996)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c1) AND (NULL)))<=(0.6709693731336996))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (NULL)))<=(0.6709693731336996)));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE ((CHAR(rt0.c1) IN ())) ORDER BY ((UNICODE(t0.c0))<>(-248960459))  NULLS LAST, ((((rt0.c3) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((UNICODE(t0.c0))<>(-248960459))  NULLS LAST, ((((rt0.c3) IS FALSE)) NOT NULL));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE ((CHAR(rt0.c1) IN ())) ORDER BY ((UNICODE(t0.c0))<>(-248960459))  NULLS LAST, ((((rt0.c3) IS FALSE)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c1) IN ())) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY ((UNICODE(t0.c0))<>(-248960459))  NULLS LAST, ((((rt0.c3) IS FALSE)) NOT NULL));
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE ((CHAR(rt0.c1) IN ())) ORDER BY ((UNICODE(t0.c0))<>(-248960459))  NULLS LAST, ((((rt0.c3) IS FALSE)) NOT NULL);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0)))|((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY CASE WHEN 2.43101875E8 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(t0.c0)))|((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 2.43101875E8 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0)))|((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY CASE WHEN 2.43101875E8 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)||(t0.c0)))|((t0.c0 IN (t0.c0, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN 2.43101875E8 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)||(t0.c0)))|((t0.c0 IN (t0.c0, t0.c0))))) ORDER BY CASE WHEN 2.43101875E8 THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END ASC;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((NOT (x'')))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((('1587697105', vt1.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER), CAST(vt0.c0 AS INTEGER), ((rt0.c2) IS TRUE))) AND ((((rt0.c3)||(t0.c0)), 0X622cd6c8, LTRIM(t0.c0, rt0.c1)))), ((((CASE ''  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c2 END)AND(CAST(vt0.c1 AS REAL))))OR(((((((((rt0.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((('1587697105', vt1.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER), CAST(vt0.c0 AS INTEGER), ((rt0.c2) IS TRUE))) AND ((((rt0.c3)||(t0.c0)), 0X622cd6c8, LTRIM(t0.c0, rt0.c1)))), ((((CASE ''  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c2 END)AND(CAST(vt0.c1 AS REAL))))OR(((((((((rt0.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((NOT (x'')))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((('1587697105', vt1.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER), CAST(vt0.c0 AS INTEGER), ((rt0.c2) IS TRUE))) AND ((((rt0.c3)||(t0.c0)), 0X622cd6c8, LTRIM(t0.c0, rt0.c1)))), ((((CASE ''  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c2 END)AND(CAST(vt0.c1 AS REAL))))OR(((((((((rt0.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (x'')))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((('1587697105', vt1.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER), CAST(vt0.c0 AS INTEGER), ((rt0.c2) IS TRUE))) AND ((((rt0.c3)||(t0.c0)), 0X622cd6c8, LTRIM(t0.c0, rt0.c1)))), ((((CASE ''  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c2 END)AND(CAST(vt0.c1 AS REAL))))OR(((((((((rt0.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE ((((NOT (x'')))OR(((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c3))))) ORDER BY ((('1587697105', vt1.c0, rt0.c0)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER), CAST(vt0.c0 AS INTEGER), ((rt0.c2) IS TRUE))) AND ((((rt0.c3)||(t0.c0)), 0X622cd6c8, LTRIM(t0.c0, rt0.c1)))), ((((CASE ''  WHEN NULL THEN vt0.c1 WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN rt0.c2 END)AND(CAST(vt0.c1 AS REAL))))OR(((((((((rt0.c3)OR(vt0.c0)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c0)))) DESC;
SELECT ALL * FROM rt0, t0 WHERE ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))<=(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))<=(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))<=(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))<=(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2))))<=(((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((UNLIKELY(rt0.c1))+((((vt0.c1))<=((vt0.c0))))) WHERE (((NULL) BETWEEN (CAST(0.38766524549133674 AS BLOB)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(0.38766524549133674 AS BLOB)) AND (rt0.c0))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((UNLIKELY(rt0.c1))+((((vt0.c1))<=((vt0.c0))))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((UNLIKELY(rt0.c1))+((((vt0.c1))<=((vt0.c0))))) WHERE (((NULL) BETWEEN (CAST(0.38766524549133674 AS BLOB)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(0.38766524549133674 AS BLOB)) AND (rt0.c0))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((UNLIKELY(rt0.c1))+((((vt0.c1))<=((vt0.c0))))));
SELECT COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE FULL OUTER JOIN vt0 ON ((UNLIKELY(rt0.c1))+((((vt0.c1))<=((vt0.c0))))) WHERE (((NULL) BETWEEN (CAST(0.38766524549133674 AS BLOB)) AND (rt0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (- (CAST(vt1.c0 AS INTEGER))) WHERE (((((vt1.c0)IS(1.77380621E9))) BETWEEN (json_quote(t0.c0)) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END)) AND ((t0.c0 COLLATE BINARY))) ASC, TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(1.77380621E9))) BETWEEN (json_quote(t0.c0)) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (- (CAST(vt1.c0 AS INTEGER))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END)) AND ((t0.c0 COLLATE BINARY))) ASC, TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (- (CAST(vt1.c0 AS INTEGER))) WHERE (((((vt1.c0)IS(1.77380621E9))) BETWEEN (json_quote(t0.c0)) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END)) AND ((t0.c0 COLLATE BINARY))) ASC, TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(1.77380621E9))) BETWEEN (json_quote(t0.c0)) AND (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (- (CAST(vt1.c0 AS INTEGER))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END)) AND ((t0.c0 COLLATE BINARY))) ASC, TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON (- (CAST(vt1.c0 AS INTEGER))) WHERE (((((vt1.c0)IS(1.77380621E9))) BETWEEN (json_quote(t0.c0)) AND (CAST(vt1.c0 AS REAL)))) ORDER BY (((vt1.c0)) BETWEEN ((CASE vt1.c0  WHEN t0.c0 THEN vt1.c0 END)) AND ((t0.c0 COLLATE BINARY))) ASC, TYPEOF(DISTINCT (+ (vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((('KqD_Qmog\') NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('KqD_Qmog\') NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('KqD_Qmog\') NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((('KqD_Qmog\') NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((('KqD_Qmog\') NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY (((rt0.c0) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 ORDER BY (((rt0.c0) ISNULL) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY (((rt0.c0) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 ORDER BY (((rt0.c0) ISNULL) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON rt0.c0 WHERE (CAST(((((vt1.c0)AND(rt0.c2)))OR(rt0.c3)) AS INTEGER)) ORDER BY (((rt0.c0) ISNULL) IN ()) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.37856901332624293) ORDER BY vt0.c1, ((CAST(vt0.c0 AS TEXT)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.37856901332624293) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1, ((CAST(vt0.c0 AS TEXT)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.37856901332624293) ORDER BY vt0.c1, ((CAST(vt0.c0 AS TEXT)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.37856901332624293) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c1, ((CAST(vt0.c0 AS TEXT)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (0.37856901332624293) ORDER BY vt0.c1, ((CAST(vt0.c0 AS TEXT)) NOTNULL) DESC;
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE), ((rt0.c1 COLLATE NOCASE)=(0.7004642464537569)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE), ((rt0.c1 COLLATE NOCASE)==(0.7004642464537569)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE), ((rt0.c1 COLLATE NOCASE)=(0.7004642464537569)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE), ((rt0.c1 COLLATE NOCASE)==(0.7004642464537569)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (x'') ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS FALSE), ((rt0.c1 COLLATE NOCASE)=(0.7004642464537569)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN t0 WHERE ((((NULL IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) ISNULL)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN t0 WHERE ((((NULL IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) ISNULL)) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, rt0 NATURAL JOIN t0 WHERE ((((NULL IN ())) ISNULL));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (273552178);
SELECT SUM(count) FROM (SELECT ALL ((273552178) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (273552178);
SELECT SUM(count) FROM (SELECT ALL ((273552178) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (273552178);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS BLOB));
SELECT COUNT(*) FROM vt1, t0 WHERE (((('1wV'))>((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('1wV'))>((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((('1wV'))>((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((('1wV'))>((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((('1wV'))>((CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END))));
SELECT ALL * FROM vt1, rt0, t0 WHERE (CASE WHEN vt1.c0 THEN ((rt0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (CASE WHEN vt1.c0 THEN ((rt0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((rt0.c2) NOTNULL) END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL * FROM vt1, rt0, t0 WHERE (CASE WHEN vt1.c0 THEN ((rt0.c2) NOTNULL) END);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c1) AND ('-412951517')), ((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)||(rt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c1) AND ('-412951517')), ((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c1) AND ('-412951517')), ((rt0.c4) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)||(rt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c1) AND ('-412951517')), ((rt0.c4) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((rt0.c1)||(rt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c1) AND ('-412951517')), ((rt0.c4) IS TRUE))));
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT * FROM vt0, vt1, t0, rt0 WHERE (((((vt0.c1) ISNULL)) IS TRUE));
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)==(NULL))) AND (json_array(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)==(NULL))) AND (json_array(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)==(NULL))) AND (json_array(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)==(NULL))) AND (json_array(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) IS TRUE)) NOT BETWEEN (((t0.c0)==(NULL))) AND (json_array(t0.c0, t0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((UNLIKELY(vt0.c0) IN ()));
SELECT COUNT(*) FROM vt1, rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS INTEGER) WHERE (CASE WHEN MAX(rt0.c4, t0.c0) THEN ((rt0.c2)==(rt0.c4)) ELSE (~ (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(rt0.c4, t0.c0) THEN ((rt0.c2)=(rt0.c4)) ELSE (~ (rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS INTEGER) WHERE (CASE WHEN MAX(rt0.c4, t0.c0) THEN ((rt0.c2)==(rt0.c4)) ELSE (~ (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN MAX(rt0.c4, t0.c0) THEN ((rt0.c2)=(rt0.c4)) ELSE (~ (rt0.c3)) END) IS TRUE)  as count FROM vt1, rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0, t0 RIGHT OUTER JOIN vt0 ON CAST(t0.c0 COLLATE NOCASE AS INTEGER) WHERE (CASE WHEN MAX(rt0.c4, t0.c0) THEN ((rt0.c2)==(rt0.c4)) ELSE (~ (rt0.c3)) END);
SELECT ALL * FROM rt0, t0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END IN ())) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END IN ())) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY rt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END IN ())) ORDER BY rt0.c0 DESC  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))&(0.4515863259136643))) ORDER BY (- ((+ (vt0.c1))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))IS NOT(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))&(0.4515863259136643))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- ((+ (vt0.c1))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))IS NOT(((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))&(0.4515863259136643))) ORDER BY (- ((+ (vt0.c1))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))IS NOT(((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))&(0.4515863259136643))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (- ((+ (vt0.c1))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))IS NOT(((vt0.c0) IS FALSE))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))&(0.4515863259136643))) ORDER BY (- ((+ (vt0.c1))))  NULLS FIRST, (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))IS NOT(((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) WHERE (((((NULL) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) WHERE (((((NULL) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC) WHERE (((((NULL) IS FALSE)) NOT BETWEEN ((+ (vt0.c0))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c1)  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 END) ORDER BY ((((((rt0.c4)OR(rt0.c4)))AND(x''))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT vt0.c1)  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 END) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((((((rt0.c4)OR(rt0.c4)))AND(x''))) NOT NULL));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c1)  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 END) ORDER BY ((((((rt0.c4)OR(rt0.c4)))AND(x''))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE UNLIKELY(DISTINCT vt0.c1)  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 END) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((((((rt0.c4)OR(rt0.c4)))AND(x''))) NOT NULL));
SELECT ALL * FROM vt1, rt0, t0, vt0 WHERE (CASE UNLIKELY(DISTINCT vt0.c1)  WHEN rt0.c1 COLLATE NOCASE THEN rt0.c1 END) ORDER BY ((((((rt0.c4)OR(rt0.c4)))AND(x''))) NOT NULL);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((((t0.c0 IN (vt0.c1, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (vt0.c1, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((((t0.c0 IN (vt0.c1, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (vt0.c1, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ())))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((((((t0.c0 IN (vt0.c1, rt0.c1)))OR(rt0.c0 COLLATE RTRIM)))OR((rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt0 WHERE (0.2153920239011402);
SELECT SUM(count) FROM (SELECT ((0.2153920239011402) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.2153920239011402);
SELECT SUM(count) FROM (SELECT ((0.2153920239011402) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0.2153920239011402);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CHAR((rt0.c4 IN ()), ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))AND('-1693658989')), ((((t0.c0)OR(rt0.c4)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((rt0.c4 IN ()), ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))AND('-1693658989')), ((((t0.c0)OR(rt0.c4)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CHAR((rt0.c4 IN ()), ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))AND('-1693658989')), ((((t0.c0)OR(rt0.c4)))OR(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((rt0.c4 IN ()), ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))AND('-1693658989')), ((((t0.c0)OR(rt0.c4)))OR(rt0.c4)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (CHAR((rt0.c4 IN ()), ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))OR(rt0.c3)))AND('-1693658989')), ((((t0.c0)OR(rt0.c4)))OR(rt0.c4))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c1)) THEN (rt0.c1 IN ()) END FULL OUTER JOIN rt0 ON (vt0.c1 IN (((t0.c0)<<(rt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c1)) THEN (rt0.c1 IN ()) END FULL OUTER JOIN rt0 ON (vt0.c1 IN (((t0.c0)<<(rt0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c1)) THEN (rt0.c1 IN ()) END FULL OUTER JOIN rt0 ON (vt0.c1 IN (((t0.c0)<<(rt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c1)) THEN (rt0.c1 IN ()) END FULL OUTER JOIN rt0 ON (vt0.c1 IN (((t0.c0)<<(rt0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c1)) THEN (rt0.c1 IN ()) END FULL OUTER JOIN rt0 ON (vt0.c1 IN (((t0.c0)<<(rt0.c0)))) WHERE (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)LIKE(rt0.c0)) AS TEXT)) ORDER BY ((((((rt0.c3)<<(rt0.c2)))AND(-632672873)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)LIKE(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<<(rt0.c2)))AND(-632672873)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)LIKE(rt0.c0)) AS TEXT)) ORDER BY ((((((rt0.c3)<<(rt0.c2)))AND(-632672873)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c4)LIKE(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)<<(rt0.c2)))AND(-632672873)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c4)LIKE(rt0.c0)) AS TEXT)) ORDER BY ((((((rt0.c3)<<(rt0.c2)))AND(-632672873)))AND(CAST(rt0.c1 AS INTEGER)));
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST((t0.c0 IN (vt0.c0)) AS INTEGER) CROSS JOIN vt1 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (CASE WHEN (~ (t0.c0)) THEN ((((((((0.6631295071234352)AND(vt1.c0)))AND(rt0.c3)))OR('')))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c0)) THEN ((((((((0.6631295071234352)AND(vt1.c0)))AND(rt0.c3)))OR('')))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST((t0.c0 IN (vt0.c0)) AS INTEGER) CROSS JOIN vt1 ON (vt0.c1 COLLATE RTRIM IN ()));
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST((t0.c0 IN (vt0.c0)) AS INTEGER) CROSS JOIN vt1 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (CASE WHEN (~ (t0.c0)) THEN ((((((((0.6631295071234352)AND(vt1.c0)))AND(rt0.c3)))OR('')))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (t0.c0)) THEN ((((((((0.6631295071234352)AND(vt1.c0)))AND(rt0.c3)))OR('')))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST((t0.c0 IN (vt0.c0)) AS INTEGER) CROSS JOIN vt1 ON (vt0.c1 COLLATE RTRIM IN ()));
SELECT * FROM vt0, rt0 FULL OUTER JOIN t0 ON CAST((t0.c0 IN (vt0.c0)) AS INTEGER) CROSS JOIN vt1 ON (vt0.c1 COLLATE RTRIM IN ()) WHERE (CASE WHEN (~ (t0.c0)) THEN ((((((((0.6631295071234352)AND(vt1.c0)))AND(rt0.c3)))OR('')))OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ABS(0.905746171910077) INNER JOIN vt0 ON (((((((t0.c0))==((vt0.c0))))AND(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE RTRIM)) WHERE (CASE (NOT (rt0.c3))  WHEN 0.904381490605364 THEN CAST(rt0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c3))  WHEN 0.904381490605364 THEN CAST(rt0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ABS(0.905746171910077) INNER JOIN vt0 ON (((((((t0.c0))=((vt0.c0))))AND(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ABS(0.905746171910077) INNER JOIN vt0 ON (((((((t0.c0))==((vt0.c0))))AND(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE RTRIM)) WHERE (CASE (NOT (rt0.c3))  WHEN 0.904381490605364 THEN CAST(rt0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (rt0.c3))  WHEN 0.904381490605364 THEN CAST(rt0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ABS(0.905746171910077) INNER JOIN vt0 ON (((((((t0.c0))=((vt0.c0))))AND(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ABS(0.905746171910077) INNER JOIN vt0 ON (((((((t0.c0))==((vt0.c0))))AND(((rt0.c4) ISNULL))))OR(rt0.c2 COLLATE RTRIM)) WHERE (CASE (NOT (rt0.c3))  WHEN 0.904381490605364 THEN CAST(rt0.c0 AS REAL) ELSE CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((NOT (SQLITE_SOURCE_ID())));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY))<>((CAST(vt0.c0 AS NUMERIC))))) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY))!=((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY))<>((CAST(vt0.c0 AS NUMERIC))))) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 COLLATE BINARY))!=((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1 COLLATE BINARY))<>((CAST(vt0.c0 AS NUMERIC))))) ORDER BY UPPER((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)|(vt0.c0))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END) AND (((vt0.c0)!=(vt0.c0)))));
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(''))))!=((CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(''))))<>((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(''))))!=((CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)AND(''))))<>((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ((((((vt1.c0)AND(''))))!=((CAST(vt1.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((vt0.c1 COLLATE NOCASE)AND((~ (rt0.c2)))))OR(UPPER(rt0.c3)))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0)+(rt0.c1)) WHEN (x'' IN ()) THEN (t0.c0 IN ()) WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)) THEN ((vt0.c0) IS TRUE) ELSE '527809964' COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)AND((~ (rt0.c2)))))OR(UPPER(rt0.c3)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0)+(rt0.c1)) WHEN (x'' IN ()) THEN (t0.c0 IN ()) WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)) THEN ((vt0.c0) IS TRUE) ELSE '527809964' COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((vt0.c1 COLLATE NOCASE)AND((~ (rt0.c2)))))OR(UPPER(rt0.c3)))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0)+(rt0.c1)) WHEN (x'' IN ()) THEN (t0.c0 IN ()) WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)) THEN ((vt0.c0) IS TRUE) ELSE '527809964' COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE NOCASE)AND((~ (rt0.c2)))))OR(UPPER(rt0.c3)))) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0)+(rt0.c1)) WHEN (x'' IN ()) THEN (t0.c0 IN ()) WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)) THEN ((vt0.c0) IS TRUE) ELSE '527809964' COLLATE BINARY END ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (((((vt0.c1 COLLATE NOCASE)AND((~ (rt0.c2)))))OR(UPPER(rt0.c3)))) ORDER BY CASE WHEN t0.c0 COLLATE BINARY THEN ((rt0.c0)+(rt0.c1)) WHEN (x'' IN ()) THEN (t0.c0 IN ()) WHEN ((((rt0.c0)OR(rt0.c4)))AND(vt0.c1)) THEN ((vt0.c0) IS TRUE) ELSE '527809964' COLLATE BINARY END ASC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('zg9cY') AND ('SjMnow*\rb6?t')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('zg9cY') AND ('SjMnow*\rb6?t'))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('zg9cY') AND ('SjMnow*\rb6?t')));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('zg9cY') AND ('SjMnow*\rb6?t'))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (((rt0.c2 COLLATE RTRIM) NOT BETWEEN ('zg9cY') AND ('SjMnow*\rb6?t')));
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((+ (((((((((rt0.c3)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) ORDER BY ((((((vt1.c0)OR(-7.74377995E8)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (0.666229074677355)) DESC  NULLS FIRST, 0.8922726465660522 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c3)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((((vt1.c0)OR(-7.74377995E8)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (0.666229074677355)) DESC  NULLS FIRST, 0.8922726465660522 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((+ (((((((((rt0.c3)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) ORDER BY ((((((vt1.c0)OR(-7.74377995E8)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (0.666229074677355)) DESC  NULLS FIRST, 0.8922726465660522 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c3)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY ((((((vt1.c0)OR(-7.74377995E8)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (0.666229074677355)) DESC  NULLS FIRST, 0.8922726465660522 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE ((+ (((((((((rt0.c3)OR(rt0.c1)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0))))) ORDER BY ((((((vt1.c0)OR(-7.74377995E8)))AND(rt0.c2))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (0.666229074677355)) DESC  NULLS FIRST, 0.8922726465660522 COLLATE NOCASE;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))GLOB(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY TRIM(((rt0.c4) BETWEEN ('1298931455') AND (vt1.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS NUMERIC))GLOB(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY TRIM(((rt0.c4) BETWEEN ('1298931455') AND (vt1.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))GLOB(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY TRIM(((rt0.c4) BETWEEN ('1298931455') AND (vt1.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c4 AS NUMERIC))GLOB(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY TRIM(((rt0.c4) BETWEEN ('1298931455') AND (vt1.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((CAST(rt0.c4 AS NUMERIC))GLOB(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY TRIM(((rt0.c4) BETWEEN ('1298931455') AND (vt1.c0)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))) ASC;
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, vt0 INNER JOIN t0 ON (rt0.c1 IN (0.9813814320696179, vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)<>('4&*P^8z'))) AND (((0x206596f) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)!=('4&*P^8z'))) AND (((0x206596f) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, vt0 INNER JOIN t0 ON (rt0.c1 IN (0.9813814320696179, vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, vt0 INNER JOIN t0 ON (rt0.c1 IN (0.9813814320696179, vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)<>('4&*P^8z'))) AND (((0x206596f) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)!=('4&*P^8z'))) AND (((0x206596f) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) IS TRUE)  as count FROM vt1, rt0, vt0 INNER JOIN t0 ON (rt0.c1 IN (0.9813814320696179, vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED, vt0 INNER JOIN t0 ON (rt0.c1 IN (0.9813814320696179, vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c4) NOT NULL)) NOT BETWEEN (((rt0.c3)<>('4&*P^8z'))) AND (((0x206596f) NOT BETWEEN (rt0.c3) AND (rt0.c4)))));
