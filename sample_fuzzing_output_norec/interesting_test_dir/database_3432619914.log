-- Time: 2024/06/11 11:47:59
-- Database: database14
-- Database version: 3.40.0
-- seed value: 3432619914
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
CREATE TABLE IF NOT EXISTS t1 (c0 TEXT ); -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB ); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6341'); -- 0ms;
PRAGMA main.cache_size; -- 1ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(0.05469861881258631, '-2129875641', 0.23456702519308426); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
ANALYZE; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33710'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 33381597); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-868318511 0 2 sz=-1583715091 noskipscan'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
REINDEX  t1; -- 0ms;
PRAGMA cache_spill = -4197890686318244747; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
UPDATE vt1 SET (c0)=(x''); -- 0ms;
UPDATE vt1 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1612237983); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE INDEX i3 ON t1(CASE WHEN ((c0)>=(c0)) THEN (c0 IN ()) ELSE CASE WHEN c0 THEN c0 END END) WHERE ((c0)%(CASE c0  WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE c0 END)); -- 0ms;
CREATE INDEX i80 ON t0('-623162262' COLLATE BINARY ASC); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i16 ON t1(((((c0)<=(c0)))|(((c0) BETWEEN (c0) AND (c0)))) ASC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'c2ed') WHERE x'59bad724'; -- 0ms;
DELETE FROM t0 WHERE CASE (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))  WHEN ((((t0.c0)OR(t0.c0)))AND(NULL)) THEN CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0xffffffff8508f445 ELSE t0.c0 END ELSE (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, '-2129875641', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) END; -- 0ms;
UPDATE OR FAIL t0 SET (c0)=(-2.063010747E9) WHERE (((- (t0.c0)))-(ABS(t0.c0))); -- 1ms;
REINDEX; -- 0ms;
CREATE INDEX i99 ON t0(CASE WHEN '-2126152832' THEN (c0 IN (c0)) ELSE ((c0)==(c0)) END COLLATE RTRIM DESC); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.42168038411177433, c0='524712129' WHERE RTRIM(t0.c0); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
REINDEX i99; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='0.42168038411177433' WHERE ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1)))||(((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)))); -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i16', ' unordered'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL); -- 0ms;
UPDATE vt1 SET (c0, c0)=(0x7adb2eb6, 0.8070357245421208); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(5.24712129E8) WHERE t0.c0; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=10316983,10');\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 12989258); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t1 ADD COLUMN c38 TEXT; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '64314'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i57 ON t1((c38 IN (((((((((c0)OR(c38)))AND(c0)))AND(c0)))AND(c0)), CAST(c0 AS NUMERIC))) DESC,(+ (c0 COLLATE NOCASE)) COLLATE NOCASE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.23456702519308426'; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 1); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (CAST(TRIM(DISTINCT t1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT t1.c0) AS INTEGER)) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (CAST(TRIM(DISTINCT t1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT t1.c0) AS INTEGER)) IS TRUE)  as count FROM t1 NATURAL JOIN t0);
SELECT ALL * FROM t1 NATURAL JOIN t0 WHERE (CAST(TRIM(DISTINCT t1.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c4, rt0.c4)) ISNULL)) ORDER BY (((((rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3))))<(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))) ASC, CAST(rt0.c1 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, ((NULL)LIKE(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c4, rt0.c4)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3))))<(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))) ASC, CAST(rt0.c1 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, ((NULL)LIKE(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c4, rt0.c4)) ISNULL)) ORDER BY (((((rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3))))<(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))) ASC, CAST(rt0.c1 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, ((NULL)LIKE(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c4, rt0.c4)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3))))<(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))) ASC, CAST(rt0.c1 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, ((NULL)LIKE(rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((COALESCE(rt0.c4, rt0.c4)) ISNULL)) ORDER BY (((((rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, vt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c3))))<(((((rt0.c0)OR(rt0.c2)))AND(vt0.c0)))) ASC, CAST(rt0.c1 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, ((NULL)LIKE(rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) NOT BETWEEN (LOWER(DISTINCT x'')) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (LOWER(DISTINCT x'')) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) NOT BETWEEN (LOWER(DISTINCT x'')) AND ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (LOWER(DISTINCT x'')) AND ((NOT (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0) NOT BETWEEN (LOWER(DISTINCT x'')) AND ((NOT (t0.c0)))));
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, vt0.c0, rt0.c1))))<(((t0.c0)%(NULL))))) ORDER BY (- (((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, vt0.c0, rt0.c1))))<(((t0.c0)%(NULL))))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY (- (((rt0.c0) IS FALSE))) ASC);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, vt0.c0, rt0.c1))))<(((t0.c0)%(NULL))))) ORDER BY (- (((rt0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, vt0.c0, rt0.c1))))<(((t0.c0)%(NULL))))) IS TRUE)  as count FROM vt0, t0, t1, rt0 ORDER BY (- (((rt0.c0) IS FALSE))) ASC);
SELECT COUNT(*) FROM vt0, t0, t1, rt0 WHERE ((((((vt0.c0, rt0.c3, rt0.c1))!=((rt0.c3, vt0.c0, rt0.c1))))<(((t0.c0)%(NULL))))) ORDER BY (- (((rt0.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT * FROM vt1, t1 WHERE (((((((((((t1.c38)>>(t1.c38)))OR((~ (vt1.c0)))))AND(TYPEOF(t1.c0))))OR(t1.c38)))AND(((vt1.c0)|(t1.c38))))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c38)>>(t1.c38)))OR((~ (vt1.c0)))))AND(TYPEOF(t1.c0))))OR(t1.c38)))AND(((vt1.c0)|(t1.c38))))) IS TRUE)  as count FROM vt1, t1 ORDER BY (- (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (((((((((((t1.c38)>>(t1.c38)))OR((~ (vt1.c0)))))AND(TYPEOF(t1.c0))))OR(t1.c38)))AND(((vt1.c0)|(t1.c38))))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c38)>>(t1.c38)))OR((~ (vt1.c0)))))AND(TYPEOF(t1.c0))))OR(t1.c38)))AND(((vt1.c0)|(t1.c38))))) IS TRUE)  as count FROM vt1, t1 ORDER BY (- (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT * FROM vt1, t1 WHERE (((((((((((t1.c38)>>(t1.c38)))OR((~ (vt1.c0)))))AND(TYPEOF(t1.c0))))OR(t1.c38)))AND(((vt1.c0)|(t1.c38))))) ORDER BY (- (CAST(vt1.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 524712129 CROSS JOIN vt1 ON (- (0.688958623393501)) WHERE (((((rt0.c0)OR(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 524712129 CROSS JOIN vt1 ON (- (0.688958623393501)));
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 524712129 CROSS JOIN vt1 ON (- (0.688958623393501)) WHERE (((((rt0.c0)OR(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 524712129 CROSS JOIN vt1 ON (- (0.688958623393501)));
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt0 ON 524712129 CROSS JOIN vt1 ON (- (0.688958623393501)) WHERE (((((rt0.c0)OR(rt0.c1))) IS TRUE));
SELECT * FROM t1 WHERE (CAST((~ (t1.c38)) AS REAL)) ORDER BY (CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c38)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END IN ()) DESC);
SELECT * FROM t1 WHERE (CAST((~ (t1.c38)) AS REAL)) ORDER BY (CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c38)) AS REAL)) IS TRUE)  as count FROM t1 ORDER BY (CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END IN ()) DESC);
SELECT * FROM t1 WHERE (CAST((~ (t1.c38)) AS REAL)) ORDER BY (CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END IN ()) DESC;
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (t1.c38) ORDER BY x'' DESC  NULLS FIRST, (((t0.c0)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, t1, vt0, rt0 ORDER BY x'' DESC  NULLS FIRST, (((t0.c0)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (t1.c38) ORDER BY x'' DESC  NULLS FIRST, (((t0.c0)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, t1, vt0, rt0 ORDER BY x'' DESC  NULLS FIRST, (((t0.c0)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (t1.c38) ORDER BY x'' DESC  NULLS FIRST, (((t0.c0)) BETWEEN (((- (rt0.c0)))) AND ((rt0.c3)))  NULLS LAST;
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (((t0.c0)OR((+ (t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)OR((+ (t1.c38))))) IS TRUE)  as count FROM t1, t0 NOT INDEXED, vt0, vt1);
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (((t0.c0)OR((+ (t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)OR((+ (t1.c38))))) IS TRUE)  as count FROM t1, t0 NOT INDEXED, vt0, vt1);
SELECT ALL * FROM t1, t0, vt0, vt1 WHERE (((t0.c0)OR((+ (t1.c38)))));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3))))<((rt0.c4 IN (rt0.c4)))) WHERE (CASE WHEN ((rt0.c4)AND(t1.c0)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((0.9720125223004383 COLLATE RTRIM) NOTNULL)  NULLS FIRST, x'' COLLATE RTRIM, (((((rt0.c1 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-506397294')))))AND(highlight(t1.c38, t1.c38, rt0.c3, NULL))), CASE WHEN ((rt0.c2)*(t1.c38)) THEN CAST(rt0.c3 AS TEXT) WHEN (+ (t1.c38)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(t1.c38)))OR(t1.c0)))AND(rt0.c0)) THEN ((t1.c38) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)AND(t1.c0)) THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3))))<((rt0.c4 IN (rt0.c4)))) ORDER BY ((0.9720125223004383 COLLATE RTRIM) NOTNULL)  NULLS FIRST, x'' COLLATE RTRIM, (((((rt0.c1 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-506397294')))))AND(highlight(t1.c38, t1.c38, rt0.c3, NULL))), CASE WHEN ((rt0.c2)*(t1.c38)) THEN CAST(rt0.c3 AS TEXT) WHEN (+ (t1.c38)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(t1.c38)))OR(t1.c0)))AND(rt0.c0)) THEN ((t1.c38) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3))))<((rt0.c4 IN (rt0.c4)))) WHERE (CASE WHEN ((rt0.c4)AND(t1.c0)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((0.9720125223004383 COLLATE RTRIM) NOTNULL)  NULLS FIRST, x'' COLLATE RTRIM, (((((rt0.c1 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-506397294')))))AND(highlight(t1.c38, t1.c38, rt0.c3, NULL))), CASE WHEN ((rt0.c2)*(t1.c38)) THEN CAST(rt0.c3 AS TEXT) WHEN (+ (t1.c38)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(t1.c38)))OR(t1.c0)))AND(rt0.c0)) THEN ((t1.c38) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)AND(t1.c0)) THEN rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3))))<((rt0.c4 IN (rt0.c4)))) ORDER BY ((0.9720125223004383 COLLATE RTRIM) NOTNULL)  NULLS FIRST, x'' COLLATE RTRIM, (((((rt0.c1 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-506397294')))))AND(highlight(t1.c38, t1.c38, rt0.c3, NULL))), CASE WHEN ((rt0.c2)*(t1.c38)) THEN CAST(rt0.c3 AS TEXT) WHEN (+ (t1.c38)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(t1.c38)))OR(t1.c0)))AND(rt0.c0)) THEN ((t1.c38) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END  NULLS FIRST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((((t1.c0)) BETWEEN ((t1.c0)) AND ((rt0.c3))))<((rt0.c4 IN (rt0.c4)))) WHERE (CASE WHEN ((rt0.c4)AND(t1.c0)) THEN rt0.c4 COLLATE NOCASE END) ORDER BY ((0.9720125223004383 COLLATE RTRIM) NOTNULL)  NULLS FIRST, x'' COLLATE RTRIM, (((((rt0.c1 IN ()))OR(((rt0.c1) NOT BETWEEN (rt0.c4) AND ('-506397294')))))AND(highlight(t1.c38, t1.c38, rt0.c3, NULL))), CASE WHEN ((rt0.c2)*(t1.c38)) THEN CAST(rt0.c3 AS TEXT) WHEN (+ (t1.c38)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)OR(rt0.c4)))AND(t1.c38)))OR(t1.c0)))AND(rt0.c0)) THEN ((t1.c38) NOT BETWEEN (rt0.c4) AND (rt0.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, vt1 RIGHT OUTER JOIN t1 ON (- (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((((((((~ (t1.c38)))AND(CAST(t0.c0 AS NUMERIC))))AND(0.8821411759864614)))OR(x'')))OR(((((t1.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t1.c38)))AND(CAST(t0.c0 AS NUMERIC))))AND(0.8821411759864614)))OR(x'')))OR(((((t1.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 RIGHT OUTER JOIN t1 ON (- (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, vt1 RIGHT OUTER JOIN t1 ON (- (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((((((((~ (t1.c38)))AND(CAST(t0.c0 AS NUMERIC))))AND(0.8821411759864614)))OR(x'')))OR(((((t1.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (t1.c38)))AND(CAST(t0.c0 AS NUMERIC))))AND(0.8821411759864614)))OR(x'')))OR(((((t1.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 RIGHT OUTER JOIN t1 ON (- (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM t0, vt0, vt1 RIGHT OUTER JOIN t1 ON (- (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE ((((((((((~ (t1.c38)))AND(CAST(t0.c0 AS NUMERIC))))AND(0.8821411759864614)))OR(x'')))OR(((((t1.c0)AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt1, t1 FULL OUTER JOIN vt0 ON (- (0.9641659573693511)) RIGHT OUTER JOIN t0 ON (('413270005')<=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) CROSS JOIN rt0 ON NULL WHERE (((((+ (vt0.c0))))<(((NOT (rt0.c1)))))) ORDER BY ((((rt0.c1)+(t1.c38))) NOT BETWEEN ((((('')OR(t0.c0)))OR(rt0.c2))) AND (((rt0.c3)||(vt0.c0)))), (+ (TRIM(rt0.c2, t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0))))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN vt0 ON (- (0.9641659573693511)) RIGHT OUTER JOIN t0 ON (('413270005')<=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) CROSS JOIN rt0 ON NULL ORDER BY ((((rt0.c1)+(t1.c38))) NOT BETWEEN ((((('')OR(t0.c0)))OR(rt0.c2))) AND (((rt0.c3)||(vt0.c0)))), (+ (TRIM(rt0.c2, t1.c0)))  NULLS FIRST);
SELECT * FROM vt1, t1 FULL OUTER JOIN vt0 ON (- (0.9641659573693511)) RIGHT OUTER JOIN t0 ON (('413270005')<=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) CROSS JOIN rt0 ON NULL WHERE (((((+ (vt0.c0))))<(((NOT (rt0.c1)))))) ORDER BY ((((rt0.c1)+(t1.c38))) NOT BETWEEN ((((('')OR(t0.c0)))OR(rt0.c2))) AND (((rt0.c3)||(vt0.c0)))), (+ (TRIM(rt0.c2, t1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((+ (vt0.c0))))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM vt1, t1 FULL OUTER JOIN vt0 ON (- (0.9641659573693511)) RIGHT OUTER JOIN t0 ON (('413270005')<=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) CROSS JOIN rt0 ON NULL ORDER BY ((((rt0.c1)+(t1.c38))) NOT BETWEEN ((((('')OR(t0.c0)))OR(rt0.c2))) AND (((rt0.c3)||(vt0.c0)))), (+ (TRIM(rt0.c2, t1.c0)))  NULLS FIRST);
SELECT ALL * FROM t1, vt0, vt1 WHERE (0X61c7512e);
SELECT SUM(count) FROM (SELECT ((0x61c7512e) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (0X61c7512e);
SELECT SUM(count) FROM (SELECT ((0x61c7512e) IS TRUE)  as count FROM t1, vt0, vt1);
SELECT ALL * FROM t1, vt0, vt1 WHERE (0X61c7512e);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 INDEXED BY i57 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0, t1 INDEXED BY i57);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 INDEXED BY i57 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, vt0, t1 INDEXED BY i57);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, t1 INDEXED BY i57 WHERE (t0.c0);
SELECT * FROM vt0, t1 WHERE (t1.c0) ORDER BY ((vt0.c0)AND(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0)AND(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c0) ORDER BY ((vt0.c0)AND(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY ((vt0.c0)AND(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST);
SELECT * FROM vt0, t1 WHERE (t1.c0) ORDER BY ((vt0.c0)AND(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c4, ((rt0.c2)==(rt0.c3)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))<=((((rt0.c0) IS TRUE), (~ (rt0.c2)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4, ((rt0.c2)=(rt0.c3)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))<=((((rt0.c0) IS TRUE), (~ (rt0.c2)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c4, ((rt0.c2)==(rt0.c3)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))<=((((rt0.c0) IS TRUE), (~ (rt0.c2)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4, ((rt0.c2)=(rt0.c3)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))<=((((rt0.c0) IS TRUE), (~ (rt0.c2)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT NULL)) ORDER BY (((rt0.c4, ((rt0.c2)==(rt0.c3)), ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c1))))<=((((rt0.c0) IS TRUE), (~ (rt0.c2)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '' THEN rt0.c4 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN rt0.c4 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '' THEN rt0.c4 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '' THEN rt0.c4 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN '' THEN rt0.c4 COLLATE RTRIM ELSE rt0.c2 COLLATE BINARY END);
SELECT ALL * FROM t0, rt0, t1, vt1 NATURAL JOIN vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (((rt0.c3)||(vt1.c0))) AND (CAST(-6.23162262E8 AS BLOB)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOT BETWEEN (((rt0.c3)||(vt1.c0))) AND (CAST(-6.23162262E8 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, t1, vt1 NATURAL JOIN vt0 ORDER BY rt0.c0);
SELECT ALL * FROM t0, rt0, t1, vt1 NATURAL JOIN vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (((rt0.c3)||(vt1.c0))) AND (CAST(-6.23162262E8 AS BLOB)))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((((- (t0.c0))) NOT BETWEEN (((rt0.c3)||(vt1.c0))) AND (CAST(-6.23162262E8 AS BLOB)))) IS TRUE)  as count FROM t0, rt0, t1, vt1 NATURAL JOIN vt0 ORDER BY rt0.c0);
SELECT ALL * FROM t0, rt0, t1, vt1 NATURAL JOIN vt0 WHERE ((((- (t0.c0))) NOT BETWEEN (((rt0.c3)||(vt1.c0))) AND (CAST(-6.23162262E8 AS BLOB)))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) INNER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (NULL)) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))OR(((rt0.c1)IS('2061184694')))))AND(((((t0.c0)AND(vt1.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))OR(((rt0.c1)IS('2061184694')))))AND(((((t0.c0)AND(vt1.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) INNER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (NULL)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) INNER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (NULL)) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))OR(((rt0.c1)IS('2061184694')))))AND(((((t0.c0)AND(vt1.c0)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))OR(((rt0.c1)IS('2061184694')))))AND(((((t0.c0)AND(vt1.c0)))AND(rt0.c3))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) INNER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (NULL)));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS INTEGER)) NOT NULL) INNER JOIN vt1 ON rt0.c0 LEFT OUTER JOIN t0 ON ((((vt0.c0)OR(vt1.c0))) NOT BETWEEN ((vt1.c0 IN ())) AND (NULL)) WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)))OR(((rt0.c1)IS('2061184694')))))AND(((((t0.c0)AND(vt1.c0)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (t1.c0 IN ()) THEN ((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)) WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c1  WHEN t1.c38 THEN vt0.c0 END WHEN ((rt0.c1) NOTNULL) THEN ((((rt0.c3)AND(vt1.c0)))OR(t1.c0)) END RIGHT OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS REAL))OR(((x'')+(rt0.c1)))))OR((~ (t0.c0)))) FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS TEXT)))<>((((vt0.c0)GLOB(t1.c38))))) INNER JOIN t1 ON TRIM(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c4 WHEN t1.c38 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END) WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (t1.c0 IN ()) THEN ((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)) WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c1  WHEN t1.c38 THEN vt0.c0 END WHEN ((rt0.c1) NOTNULL) THEN ((((rt0.c3)AND(vt1.c0)))OR(t1.c0)) END RIGHT OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS REAL))OR(((x'')+(rt0.c1)))))OR((~ (t0.c0)))) FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS TEXT)))<>((((vt0.c0)GLOB(t1.c38))))) INNER JOIN t1 ON TRIM(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c4 WHEN t1.c38 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (t1.c0 IN ()) THEN ((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)) WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c1  WHEN t1.c38 THEN vt0.c0 END WHEN ((rt0.c1) NOTNULL) THEN ((((rt0.c3)AND(vt1.c0)))OR(t1.c0)) END RIGHT OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS REAL))OR(((x'')+(rt0.c1)))))OR((~ (t0.c0)))) FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS TEXT)))<>((((vt0.c0)GLOB(t1.c38))))) INNER JOIN t1 ON TRIM(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c4 WHEN t1.c38 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END) WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CASE WHEN (t1.c0 IN ()) THEN ((((vt0.c0)OR(rt0.c3)))AND(vt0.c0)) WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c1  WHEN t1.c38 THEN vt0.c0 END WHEN ((rt0.c1) NOTNULL) THEN ((((rt0.c3)AND(vt1.c0)))OR(t1.c0)) END RIGHT OUTER JOIN vt0 ON ((((CAST(rt0.c1 AS REAL))OR(((x'')+(rt0.c1)))))OR((~ (t0.c0)))) FULL OUTER JOIN rt0 ON (((CAST(rt0.c3 AS TEXT)))<>((((vt0.c0)GLOB(t1.c38))))) INNER JOIN t1 ON TRIM(DISTINCT CASE vt0.c0  WHEN vt1.c0 THEN rt0.c4 WHEN t1.c38 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END));
SELECT * FROM t1, vt1, t0, rt0, vt0 WHERE ((~ (((rt0.c1) ISNULL)))) ORDER BY load_extension(t1.c38) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM t1, vt1, t0, rt0, vt0 ORDER BY load_extension(t1.c38) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t1, vt1, t0, rt0, vt0 WHERE ((~ (((rt0.c1) ISNULL)))) ORDER BY load_extension(t1.c38) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM t1, vt1, t0, rt0, vt0 ORDER BY load_extension(t1.c38) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t1, vt1, t0, rt0, vt0 WHERE ((~ (((rt0.c1) ISNULL)))) ORDER BY load_extension(t1.c38) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC));
SELECT * FROM t0, t1, vt0, vt1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, t1, vt0, vt1, rt0);
SELECT * FROM t0, t1, vt0, vt1, rt0 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t0, t1, vt0, vt1, rt0);
SELECT * FROM t0, t1, vt0, vt1, rt0 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)));
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC);
SELECT * FROM t0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) ORDER BY (vt0.c0 IN ()) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE (((t1.c38) NOTNULL) COLLATE BINARY) ORDER BY CAST(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER));
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE (((t1.c38) NOTNULL) COLLATE BINARY) ORDER BY CAST(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0 ORDER BY CAST(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER));
SELECT COUNT(*) FROM t1 NOT INDEXED, vt0 WHERE (((t1.c38) NOTNULL) COLLATE BINARY) ORDER BY CAST(((t1.c38) BETWEEN (vt0.c0) AND (t1.c0)) AS INTEGER);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (CASE WHEN (('-1859680510') IS FALSE) THEN CAST(vt1.c0 AS REAL) ELSE ((((t1.c0)AND(vt1.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1859680510') IS FALSE) THEN CAST(vt1.c0 AS REAL) ELSE ((((t1.c0)AND(vt1.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (CASE WHEN (('-1859680510') IS FALSE) THEN CAST(vt1.c0 AS REAL) ELSE ((((t1.c0)AND(vt1.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('-1859680510') IS FALSE) THEN CAST(vt1.c0 AS REAL) ELSE ((((t1.c0)AND(vt1.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, t1, vt1);
SELECT COUNT(*) FROM t0, t1, vt1 WHERE (CASE WHEN (('-1859680510') IS FALSE) THEN CAST(vt1.c0 AS REAL) ELSE ((((t1.c0)AND(vt1.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((t1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3)))))) CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) IS FALSE)) CROSS JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT NULL) CROSS JOIN vt1 ON ((((t1.c38) ISNULL)) ISNULL) WHERE (((((((t1.c38)OR(rt0.c4)))OR(vt0.c0)))>(x'db31')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c38)OR(rt0.c4)))OR(vt0.c0)))>(x'db31'))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3)))))) CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) IS FALSE)) CROSS JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT NULL) CROSS JOIN vt1 ON ((((t1.c38) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((t1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3)))))) CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) IS FALSE)) CROSS JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT NULL) CROSS JOIN vt1 ON ((((t1.c38) ISNULL)) ISNULL) WHERE (((((((t1.c38)OR(rt0.c4)))OR(vt0.c0)))>(x'db31')));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c38)OR(rt0.c4)))OR(vt0.c0)))>(x'db31'))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON (((t1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3)))))) CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) IS FALSE)) CROSS JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT NULL) CROSS JOIN vt1 ON ((((t1.c38) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON (((t1.c0)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) AND (((((vt0.c0)) NOT BETWEEN ((t1.c0)) AND ((rt0.c3)))))) CROSS JOIN t0 ON SQLITE_COMPILEOPTION_USED(((rt0.c0) IS FALSE)) CROSS JOIN rt0 ON ((((rt0.c4) NOTNULL)) NOT NULL) CROSS JOIN vt1 ON ((((t1.c38) ISNULL)) ISNULL) WHERE (((((((t1.c38)OR(rt0.c4)))OR(vt0.c0)))>(x'db31')));
SELECT COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((((rt0.c4)/(rt0.c4)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)/(rt0.c4)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t1, t0, rt0);
SELECT COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((((rt0.c4)/(rt0.c4)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)/(rt0.c4)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t1, t0, rt0);
SELECT COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((((rt0.c4)/(rt0.c4)))AND(vt1.c0 COLLATE BINARY)))OR(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM t0, vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c38, rt0.c1, vt1.c0)) NOT BETWEEN ((COALESCE('-776063350', vt1.c0), ((rt0.c1)LIKE(rt0.c0)), (rt0.c0 IN (t1.c0)))) AND ((t0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))) FULL OUTER JOIN vt1 ON ((x'') IS FALSE) WHERE (((t1.c0)LIKE(((vt0.c0) BETWEEN (t1.c0) AND (t1.c38)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(((vt0.c0) BETWEEN (t1.c0) AND (t1.c38))))) IS TRUE)  as count FROM t0, vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c38, rt0.c1, vt1.c0)) NOT BETWEEN ((COALESCE('-776063350', vt1.c0), ((rt0.c1)LIKE(rt0.c0)), (rt0.c0 IN (t1.c0)))) AND ((t0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))) FULL OUTER JOIN vt1 ON ((x'') IS FALSE));
SELECT ALL * FROM t0, vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c38, rt0.c1, vt1.c0)) NOT BETWEEN ((COALESCE('-776063350', vt1.c0), ((rt0.c1)LIKE(rt0.c0)), (rt0.c0 IN (t1.c0)))) AND ((t0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))) FULL OUTER JOIN vt1 ON ((x'') IS FALSE) WHERE (((t1.c0)LIKE(((vt0.c0) BETWEEN (t1.c0) AND (t1.c38)))));
SELECT SUM(count) FROM (SELECT ((((t1.c0)LIKE(((vt0.c0) BETWEEN (t1.c0) AND (t1.c38))))) IS TRUE)  as count FROM t0, vt0, t1 FULL OUTER JOIN rt0 ON (((t1.c38, rt0.c1, vt1.c0)) NOT BETWEEN ((COALESCE('-776063350', vt1.c0), ((rt0.c1)LIKE(rt0.c0)), (rt0.c0 IN (t1.c0)))) AND ((t0.c0 COLLATE NOCASE, rt0.c0 COLLATE RTRIM, CAST(vt0.c0 AS TEXT)))) FULL OUTER JOIN vt1 ON ((x'') IS FALSE));
SELECT * FROM t1, rt0, vt0, t0 WHERE ((((((((((t1.c0)AND(rt0.c3)))OR(NULL)))AND(t1.c38)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0)AND(rt0.c3)))OR(NULL)))AND(t1.c38)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt0, vt0, t0);
SELECT * FROM t1, rt0, vt0, t0 WHERE ((((((((((t1.c0)AND(rt0.c3)))OR(NULL)))AND(t1.c38)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((t1.c0)AND(rt0.c3)))OR(NULL)))AND(t1.c38)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM t1, rt0, vt0, t0);
SELECT * FROM t1, rt0, vt0, t0 WHERE ((((((((((t1.c0)AND(rt0.c3)))OR(NULL)))AND(t1.c38)))OR(rt0.c1)) IN ()));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT NULL) ASC, (- (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT NULL) ASC, (- (CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT NULL) ASC, (- (CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT NULL) ASC, (- (CAST(rt0.c0 AS TEXT))));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((NOT (CAST(vt0.c0 AS REAL)))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT NULL) ASC, (- (CAST(rt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (- (IFNULL(vt1.c0, t0.c0))) RIGHT OUTER JOIN t0 ON ((((vt1.c0)<>(0.3529541796050618))) NOTNULL) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (- (IFNULL(vt1.c0, t0.c0))) RIGHT OUTER JOIN t0 ON ((((vt1.c0)<>(0.3529541796050618))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t1 ON (- (IFNULL(vt1.c0, t0.c0))) RIGHT OUTER JOIN t0 ON ((((vt1.c0)<>(0.3529541796050618))) NOTNULL) WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON (- (IFNULL(vt1.c0, t0.c0))) RIGHT OUTER JOIN t0 ON ((((vt1.c0)<>(0.3529541796050618))) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt1, rt0, vt0, t1, t0 WHERE ('-2062949957' COLLATE BINARY) ORDER BY '0.42168038411177433' DESC;
SELECT SUM(count) FROM (SELECT ALL (('-2062949957' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0, t1, t0 ORDER BY '0.42168038411177433' DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1, t0 WHERE ('-2062949957' COLLATE BINARY) ORDER BY '0.42168038411177433' DESC;
SELECT SUM(count) FROM (SELECT ALL (('-2062949957' COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0, t1, t0 ORDER BY '0.42168038411177433' DESC);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1, t0 WHERE ('-2062949957' COLLATE BINARY) ORDER BY '0.42168038411177433' DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((- (x'')))OR(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c3))) AND (NULL)) DESC  NULLS FIRST, ((((((((((rt0.c3)IS(rt0.c4)))OR(0.2440409939132977)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR('-2129875641')))AND((((rt0.c1))>((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (x'')))OR(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c3))) AND (NULL)) DESC  NULLS FIRST, ((((((((((rt0.c3)IS(rt0.c4)))OR(0.2440409939132977)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR('-2129875641')))AND((((rt0.c1))>((rt0.c4))))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((- (x'')))OR(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c3))) AND (NULL)) DESC  NULLS FIRST, ((((((((((rt0.c3)IS(rt0.c4)))OR(0.2440409939132977)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR('-2129875641')))AND((((rt0.c1))>((rt0.c4))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (x'')))OR(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c3))) AND (NULL)) DESC  NULLS FIRST, ((((((((((rt0.c3)IS(rt0.c4)))OR(0.2440409939132977)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR('-2129875641')))AND((((rt0.c1))>((rt0.c4))))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((- (x'')))OR(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((CAST(rt0.c2 AS NUMERIC)) BETWEEN ((+ (rt0.c3))) AND (NULL)) DESC  NULLS FIRST, ((((((((((rt0.c3)IS(rt0.c4)))OR(0.2440409939132977)))AND(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))))OR('-2129875641')))AND((((rt0.c1))>((rt0.c4))))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY (((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0))))>((((rt0.c0)-(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0))))>((((rt0.c0)-(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY (((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0))))>((((rt0.c0)-(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0))))>((((rt0.c0)-(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CASE WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c2 END AS BLOB)) ORDER BY (((((((rt0.c3)AND(rt0.c4)))AND(vt0.c0))))>((((rt0.c0)-(vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt1, rt0, t1 INNER JOIN t0 ON '0.8821411759864614' FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t1.c38 THEN t1.c0 END)) WHERE (((0.7918757523096281)>(((t1.c38) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7918757523096281)>(((t1.c38) ISNULL)))) IS TRUE)  as count FROM vt1, rt0, t1 INNER JOIN t0 ON '0.8821411759864614' FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t1.c38 THEN t1.c0 END)));
SELECT COUNT(*) FROM vt1, rt0, t1 INNER JOIN t0 ON '0.8821411759864614' FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t1.c38 THEN t1.c0 END)) WHERE (((0.7918757523096281)>(((t1.c38) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7918757523096281)>(((t1.c38) ISNULL)))) IS TRUE)  as count FROM vt1, rt0, t1 INNER JOIN t0 ON '0.8821411759864614' FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t1.c38 THEN t1.c0 END)));
SELECT COUNT(*) FROM vt1, rt0, t1 INNER JOIN t0 ON '0.8821411759864614' FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t1.c38 THEN t1.c0 END)) WHERE (((0.7918757523096281)>(((t1.c38) ISNULL))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((((((((((0.5841704452820475, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c4))))OR(((rt0.c4)%(rt0.c4)))))OR(rt0.c3)))OR('910006721')))OR(((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))) WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((((((((((0.5841704452820475, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c4))))OR(((rt0.c4)%(rt0.c4)))))OR(rt0.c3)))OR('910006721')))OR(((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((((((((((0.5841704452820475, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c4))))OR(((rt0.c4)%(rt0.c4)))))OR(rt0.c3)))OR('910006721')))OR(((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))) WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((((((((((0.5841704452820475, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c4))))OR(((rt0.c4)%(rt0.c4)))))OR(rt0.c3)))OR('910006721')))OR(((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON (((((((((((0.5841704452820475, rt0.c2, rt0.c2)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c4, rt0.c0, rt0.c4))))OR(((rt0.c4)%(rt0.c4)))))OR(rt0.c3)))OR('910006721')))OR(((((rt0.c3)AND(rt0.c0)))OR(vt1.c0)))) WHERE ((~ (rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM t0, vt1, rt0, t1, vt0 WHERE (((((((((((((((rt0.c3)-(rt0.c1)))AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(t1.c38)))))AND((+ (NULL)))))AND(((rt0.c3) BETWEEN (x'') AND (t1.c0)))))AND((((rt0.c0))!=((vt1.c0))))))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)-(rt0.c1)))AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(t1.c38)))))AND((+ (NULL)))))AND(((rt0.c3) BETWEEN (x'') AND (t1.c0)))))AND((((rt0.c0))<>((vt1.c0))))))OR(t0.c0))) IS TRUE)  as count FROM t0, vt1, rt0, t1, vt0);
SELECT ALL * FROM t0, vt1, rt0, t1, vt0 WHERE (((((((((((((((rt0.c3)-(rt0.c1)))AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(t1.c38)))))AND((+ (NULL)))))AND(((rt0.c3) BETWEEN (x'') AND (t1.c0)))))AND((((rt0.c0))!=((vt1.c0))))))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c3)-(rt0.c1)))AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(t1.c38)))))AND((+ (NULL)))))AND(((rt0.c3) BETWEEN (x'') AND (t1.c0)))))AND((((rt0.c0))<>((vt1.c0))))))OR(t0.c0))) IS TRUE)  as count FROM t0, vt1, rt0, t1, vt0);
SELECT ALL * FROM t0, vt1, rt0, t1, vt0 WHERE (((((((((((((((rt0.c3)-(rt0.c1)))AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(rt0.c1)))OR(t1.c38)))))AND((+ (NULL)))))AND(((rt0.c3) BETWEEN (x'') AND (t1.c0)))))AND((((rt0.c0))!=((vt1.c0))))))OR(t0.c0)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (~ (((t0.c0)>=(t0.c0)))) WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))OR(x''))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))OR(x''))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (~ (((t0.c0)>=(t0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (~ (((t0.c0)>=(t0.c0)))) WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))OR(x''))) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))OR(x''))) AND (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (~ (((t0.c0)>=(t0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (~ (((t0.c0)>=(t0.c0)))) WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)AND(vt1.c0)))OR(x''))) AND (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((LAST_INSERT_ROWID(), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>((((vt1.c0) NOTNULL), (NULL IN ()), 2.061184694E9, '', '413270005')))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LAST_INSERT_ROWID(), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>((((vt1.c0) NOTNULL), (NULL IN ()), 2.061184694E9, '', '413270005')))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((LAST_INSERT_ROWID(), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>((((vt1.c0) NOTNULL), (NULL IN ()), 2.061184694E9, '', '413270005')))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((LAST_INSERT_ROWID(), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>((((vt1.c0) NOTNULL), (NULL IN ()), 2.061184694E9, '', '413270005')))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((LAST_INSERT_ROWID(), ((vt1.c0)|(vt1.c0)), (- (vt1.c0)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))>((((vt1.c0) NOTNULL), (NULL IN ()), 2.061184694E9, '', '413270005')))) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM t1, vt1, t0, vt0 WHERE ((((vt1.c0, '1259435681', t1.c38)) NOT BETWEEN ((((vt1.c0) IS FALSE), ((((t1.c38)AND(t0.c0)))AND('')), t0.c0)) AND ((((vt1.c0) BETWEEN (t1.c0) AND (t1.c38)), ((t0.c0) NOT NULL), CAST(t1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, '1259435681', t1.c38)) NOT BETWEEN ((((vt1.c0) IS FALSE), ((((t1.c38)AND(t0.c0)))AND('')), t0.c0)) AND ((((vt1.c0) BETWEEN (t1.c0) AND (t1.c38)), ((t0.c0) NOT NULL), CAST(t1.c0 AS INTEGER))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT * FROM t1, vt1, t0, vt0 WHERE ((((vt1.c0, '1259435681', t1.c38)) NOT BETWEEN ((((vt1.c0) IS FALSE), ((((t1.c38)AND(t0.c0)))AND('')), t0.c0)) AND ((((vt1.c0) BETWEEN (t1.c0) AND (t1.c38)), ((t0.c0) NOT NULL), CAST(t1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, '1259435681', t1.c38)) NOT BETWEEN ((((vt1.c0) IS FALSE), ((((t1.c38)AND(t0.c0)))AND('')), t0.c0)) AND ((((vt1.c0) BETWEEN (t1.c0) AND (t1.c38)), ((t0.c0) NOT NULL), CAST(t1.c0 AS INTEGER))))) IS TRUE)  as count FROM t1, vt1, t0, vt0);
SELECT * FROM t1, vt1, t0, vt0 WHERE ((((vt1.c0, '1259435681', t1.c38)) NOT BETWEEN ((((vt1.c0) IS FALSE), ((((t1.c38)AND(t0.c0)))AND('')), t0.c0)) AND ((((vt1.c0) BETWEEN (t1.c0) AND (t1.c38)), ((t0.c0) NOT NULL), CAST(t1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON (((rt0.c2 IN ())) NOTNULL) RIGHT OUTER JOIN vt1 ON ((((((((json_insert(t1.c38, rt0.c4, rt0.c4))AND(((NULL)<<(t1.c0)))))OR((t0.c0 IN ()))))OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END)))OR((((rt0.c4, vt1.c0, t1.c0)) NOT BETWEEN ((t1.c38, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, t1.c0))))) LEFT OUTER JOIN rt0 ON ((((rt0.c4 COLLATE RTRIM)OR((~ (t1.c0)))))AND(CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c4 END)) WHERE ('-2096397364') ORDER BY ((((((rt0.c4) NOT BETWEEN ('910006721') AND (t1.c38)))OR((rt0.c3 IN (NULL, rt0.c2)))))OR((((t1.c0))=((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-2096397364') IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((rt0.c2 IN ())) NOTNULL) RIGHT OUTER JOIN vt1 ON ((((((((json_insert(t1.c38, rt0.c4, rt0.c4))AND(((NULL)<<(t1.c0)))))OR((t0.c0 IN ()))))OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END)))OR((((rt0.c4, vt1.c0, t1.c0)) NOT BETWEEN ((t1.c38, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, t1.c0))))) LEFT OUTER JOIN rt0 ON ((((rt0.c4 COLLATE RTRIM)OR((~ (t1.c0)))))AND(CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c4 END)) ORDER BY ((((((rt0.c4) NOT BETWEEN ('910006721') AND (t1.c38)))OR((rt0.c3 IN (NULL, rt0.c2)))))OR((((t1.c0))==((t0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN t1 ON (((rt0.c2 IN ())) NOTNULL) RIGHT OUTER JOIN vt1 ON ((((((((json_insert(t1.c38, rt0.c4, rt0.c4))AND(((NULL)<<(t1.c0)))))OR((t0.c0 IN ()))))OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END)))OR((((rt0.c4, vt1.c0, t1.c0)) NOT BETWEEN ((t1.c38, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, t1.c0))))) LEFT OUTER JOIN rt0 ON ((((rt0.c4 COLLATE RTRIM)OR((~ (t1.c0)))))AND(CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c4 END)) WHERE ('-2096397364') ORDER BY ((((((rt0.c4) NOT BETWEEN ('910006721') AND (t1.c38)))OR((rt0.c3 IN (NULL, rt0.c2)))))OR((((t1.c0))=((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-2096397364') IS TRUE)  as count FROM t0 INNER JOIN t1 ON (((rt0.c2 IN ())) NOTNULL) RIGHT OUTER JOIN vt1 ON ((((((((json_insert(t1.c38, rt0.c4, rt0.c4))AND(((NULL)<<(t1.c0)))))OR((t0.c0 IN ()))))OR(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c3 END)))OR((((rt0.c4, vt1.c0, t1.c0)) NOT BETWEEN ((t1.c38, vt1.c0, rt0.c2)) AND ((rt0.c2, rt0.c3, t1.c0))))) LEFT OUTER JOIN rt0 ON ((((rt0.c4 COLLATE RTRIM)OR((~ (t1.c0)))))AND(CASE WHEN rt0.c3 THEN t1.c0 ELSE rt0.c4 END)) ORDER BY ((((((rt0.c4) NOT BETWEEN ('910006721') AND (t1.c38)))OR((rt0.c3 IN (NULL, rt0.c2)))))OR((((t1.c0))==((t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0) IS FALSE))AND(vt0.c0)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND(vt0.c0)))OR(vt1.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0) IS FALSE))AND(vt0.c0)))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) IS FALSE))AND(vt0.c0)))OR(vt1.c0))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((((t0.c0) IS FALSE))AND(vt0.c0)))OR(vt1.c0)));
SELECT COUNT(*) FROM t0, vt1, t1, vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c2) AND ((rt0.c2 IN ())))) ORDER BY ((((((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2)))AND((t1.c38 IN (t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR(((((rt0.c1)OR(t1.c38)))OR(rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c2) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt1, t1, vt0, rt0 ORDER BY ((((((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2)))AND((t1.c38 IN (t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR(((((rt0.c1)OR(t1.c38)))OR(rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (t1.c0)))));
SELECT COUNT(*) FROM t0, vt1, t1, vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c2) AND ((rt0.c2 IN ())))) ORDER BY ((((((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2)))AND((t1.c38 IN (t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR(((((rt0.c1)OR(t1.c38)))OR(rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c2) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt1, t1, vt0, rt0 ORDER BY ((((((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2)))AND((t1.c38 IN (t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR(((((rt0.c1)OR(t1.c38)))OR(rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (t1.c0)))));
SELECT COUNT(*) FROM t0, vt1, t1, vt0, rt0 WHERE (((CAST(vt0.c0 AS INTEGER)) BETWEEN (rt0.c2) AND ((rt0.c2 IN ())))) ORDER BY ((((((((((((t1.c0 COLLATE NOCASE)OR(CAST(rt0.c1 AS REAL))))AND(rt0.c2)))AND((t1.c38 IN (t1.c0)))))OR(t1.c0 COLLATE BINARY)))OR(((((rt0.c1)OR(t1.c38)))OR(rt0.c0)))))AND(((rt0.c4) BETWEEN (rt0.c1) AND (t1.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0, t1 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, t0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0, t1 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, t0, vt0, t1);
SELECT ALL COUNT(*) FROM rt0, vt1, t0, vt0, t1 WHERE (CAST(CAST(rt0.c0 AS BLOB) AS NUMERIC));
SELECT COUNT(*) FROM t0, t1, vt1, rt0, vt0 WHERE (CAST(((t0.c0)=(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)==(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, vt1, rt0, vt0 WHERE (CAST(((t0.c0)=(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)==(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT COUNT(*) FROM t0, t1, vt1, rt0, vt0 WHERE (CAST(((t0.c0)=(t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c38)>>('-2096397364'))))>=((330534344))));
SELECT SUM(count) FROM (SELECT (((((((t1.c38)>>('-2096397364'))))>=((330534344)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c38)>>('-2096397364'))))>=((330534344))));
SELECT SUM(count) FROM (SELECT (((((((t1.c38)>>('-2096397364'))))>=((330534344)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c38)>>('-2096397364'))))>=((330534344))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(vt0.c0)))AND(t1.c0)))<<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))))) INNER JOIN rt0 ON (((((((rt0.c4, t1.c38, t1.c38))=((t1.c0, rt0.c2, t1.c0))))OR(((((t1.c38)AND(t1.c38)))AND(rt0.c0)))))AND(((rt0.c1)|(rt0.c1)))) LEFT OUTER JOIN t1 ON (((~ (t1.c38))) NOT BETWEEN (((vt0.c0)OR(rt0.c4))) AND ((~ ('VX')))) WHERE (NULLIF(rt0.c1, t1.c38) COLLATE RTRIM) ORDER BY ((UPPER(DISTINCT rt0.c4))IS NOT(CAST(t0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1, t1.c38) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(vt0.c0)))AND(t1.c0)))<<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))))) INNER JOIN rt0 ON (((((((rt0.c4, t1.c38, t1.c38))==((t1.c0, rt0.c2, t1.c0))))OR(((((t1.c38)AND(t1.c38)))AND(rt0.c0)))))AND(((rt0.c1)|(rt0.c1)))) LEFT OUTER JOIN t1 ON (((~ (t1.c38))) NOT BETWEEN (((vt0.c0)OR(rt0.c4))) AND ((~ ('VX')))) ORDER BY ((UPPER(DISTINCT rt0.c4))IS NOT(CAST(t0.c0 AS REAL)))  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(vt0.c0)))AND(t1.c0)))<<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))))) INNER JOIN rt0 ON (((((((rt0.c4, t1.c38, t1.c38))=((t1.c0, rt0.c2, t1.c0))))OR(((((t1.c38)AND(t1.c38)))AND(rt0.c0)))))AND(((rt0.c1)|(rt0.c1)))) LEFT OUTER JOIN t1 ON (((~ (t1.c38))) NOT BETWEEN (((vt0.c0)OR(rt0.c4))) AND ((~ ('VX')))) WHERE (NULLIF(rt0.c1, t1.c38) COLLATE RTRIM) ORDER BY ((UPPER(DISTINCT rt0.c4))IS NOT(CAST(t0.c0 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(rt0.c1, t1.c38) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((rt0.c1)AND(vt0.c0)))AND(t1.c0)))<<((((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4))))) INNER JOIN rt0 ON (((((((rt0.c4, t1.c38, t1.c38))==((t1.c0, rt0.c2, t1.c0))))OR(((((t1.c38)AND(t1.c38)))AND(rt0.c0)))))AND(((rt0.c1)|(rt0.c1)))) LEFT OUTER JOIN t1 ON (((~ (t1.c38))) NOT BETWEEN (((vt0.c0)OR(rt0.c4))) AND ((~ ('VX')))) ORDER BY ((UPPER(DISTINCT rt0.c4))IS NOT(CAST(t0.c0 AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4))))<>((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4))))!=((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4))))<>((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4))))!=((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c4))))<>((((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)/(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)/(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)/(vt0.c0)));
SELECT * FROM t1, vt0 WHERE (((((CAST(t1.c0 AS INTEGER))AND((vt0.c0 IN ()))))AND(((t1.c0)>(t1.c38))))) ORDER BY ((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND ('\r*')))))OR(((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS INTEGER))AND((vt0.c0 IN ()))))AND(((t1.c0)>(t1.c38))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND ('\r*')))))OR(((t1.c0) IS TRUE))));
SELECT * FROM t1, vt0 WHERE (((((CAST(t1.c0 AS INTEGER))AND((vt0.c0 IN ()))))AND(((t1.c0)>(t1.c38))))) ORDER BY ((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND ('\r*')))))OR(((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t1.c0 AS INTEGER))AND((vt0.c0 IN ()))))AND(((t1.c0)>(t1.c38))))) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND ('\r*')))))OR(((t1.c0) IS TRUE))));
SELECT * FROM t1, vt0 WHERE (((((CAST(t1.c0 AS INTEGER))AND((vt0.c0 IN ()))))AND(((t1.c0)>(t1.c38))))) ORDER BY ((((((((((((t1.c0)OR(vt0.c0)))OR(t1.c0)))OR(t1.c0)))OR(t1.c0)))OR(((t1.c0) BETWEEN (t1.c0) AND ('\r*')))))OR(((t1.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c0 IN (rt0.c4)) COLLATE NOCASE LEFT OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN t1 ON ((CAST(t0.c0 AS BLOB))<=(NULL)) INNER JOIN rt0 ON vt0.c0 WHERE (json_type(ABS(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(ABS(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c0 IN (rt0.c4)) COLLATE NOCASE LEFT OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN t1 ON ((CAST(t0.c0 AS BLOB))<=(NULL)) INNER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c0 IN (rt0.c4)) COLLATE NOCASE LEFT OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN t1 ON ((CAST(t0.c0 AS BLOB))<=(NULL)) INNER JOIN rt0 ON vt0.c0 WHERE (json_type(ABS(DISTINCT rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((json_type(ABS(DISTINCT rt0.c4))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (t1.c0 IN (rt0.c4)) COLLATE NOCASE LEFT OUTER JOIN t0 ON rt0.c3 FULL OUTER JOIN t1 ON ((CAST(t0.c0 AS BLOB))<=(NULL)) INNER JOIN rt0 ON vt0.c0);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN t1 WHERE ((+ (((rt0.c3)==(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)==(t1.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN t1 WHERE ((+ (((rt0.c3)==(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3)==(t1.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN t1);
SELECT ALL * FROM rt0, vt1 NATURAL JOIN t1 WHERE ((+ (((rt0.c3)==(t1.c0)))));
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND (t1.c0)) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, t1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<((CAST(rt0.c4 AS NUMERIC)))) LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c1)%(t0.c0)), 0.7452950275749044) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT NULL)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.3862061795619949))>(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END)), '330534344';
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, t1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<((CAST(rt0.c4 AS NUMERIC)))) LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c1)%(t0.c0)), 0.7452950275749044) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.3862061795619949))>(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END)), '330534344');
SELECT ALL COUNT(*) FROM t0, t1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<((CAST(rt0.c4 AS NUMERIC)))) LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c1)%(t0.c0)), 0.7452950275749044) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT NULL)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.3862061795619949))>(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END)), '330534344';
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT NULL)) IS TRUE)  as count FROM t0, t1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<((CAST(rt0.c4 AS NUMERIC)))) LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c1)%(t0.c0)), 0.7452950275749044) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.3862061795619949))>(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END)), '330534344');
SELECT ALL COUNT(*) FROM t0, t1, vt0 LEFT OUTER JOIN rt0 ON ((((rt0.c2 IN ())))<((CAST(rt0.c4 AS NUMERIC)))) LEFT OUTER JOIN vt1 ON LIKELIHOOD(DISTINCT ((rt0.c1)%(t0.c0)), 0.7452950275749044) WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t1.c0)))) NOT NULL)) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c4, 0.3862061795619949))>(CASE vt0.c0  WHEN rt0.c4 THEN rt0.c1 END)), '330534344';
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.42905374885680736 THEN vt0.c0 ELSE vt0.c0 END)LIKE('''.)]5b'))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.42905374885680736 THEN vt0.c0 ELSE vt0.c0 END)LIKE('''.)]5b'))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.42905374885680736 THEN vt0.c0 ELSE vt0.c0 END)LIKE('''.)]5b'))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.42905374885680736 THEN vt0.c0 ELSE vt0.c0 END)LIKE('''.)]5b'))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE WHEN 0.42905374885680736 THEN vt0.c0 ELSE vt0.c0 END)LIKE('''.)]5b'))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (json_type(vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ('Q''') ORDER BY CASE WHEN ((vt0.c0)AND(t0.c0)) THEN ((t1.c0) NOT BETWEEN ('10316983') AND (t1.c38)) WHEN (vt0.c0 IN ()) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t1.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('Q''') IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CASE WHEN ((vt0.c0)AND(t0.c0)) THEN ((t1.c0) NOT BETWEEN ('10316983') AND (t1.c38)) WHEN (vt0.c0 IN ()) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t1.c0 AS TEXT) END ASC);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ('Q''') ORDER BY CASE WHEN ((vt0.c0)AND(t0.c0)) THEN ((t1.c0) NOT BETWEEN ('10316983') AND (t1.c38)) WHEN (vt0.c0 IN ()) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t1.c0 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('Q''') IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CASE WHEN ((vt0.c0)AND(t0.c0)) THEN ((t1.c0) NOT BETWEEN ('10316983') AND (t1.c38)) WHEN (vt0.c0 IN ()) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t1.c0 AS TEXT) END ASC);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE ('Q''') ORDER BY CASE WHEN ((vt0.c0)AND(t0.c0)) THEN ((t1.c0) NOT BETWEEN ('10316983') AND (t1.c38)) WHEN (vt0.c0 IN ()) THEN ((t1.c0) IS FALSE) WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN CAST(t1.c0 AS TEXT) END ASC;
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON t1.c0 WHERE (CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(t1.c38 AS BLOB) WHEN (NOT (t1.c0)) THEN 'm4Vq' WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t1.c0)<=(t0.c0)) ELSE ((t1.c38)|(t1.c0)) END) ORDER BY x'', t0.c0 COLLATE BINARY ASC  NULLS LAST, TIME(((t0.c0) BETWEEN (t0.c0) AND (t1.c0)), (NOT (t0.c0)), CAST(t1.c38 AS TEXT), t1.c0, ((t1.c0)==(t1.c38)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)==(t0.c0)) THEN CAST(t1.c38 AS BLOB) WHEN (NOT (t1.c0)) THEN 'm4Vq' WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t1.c0)<=(t0.c0)) ELSE ((t1.c38)|(t1.c0)) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON t1.c0 ORDER BY x'', t0.c0 COLLATE BINARY ASC  NULLS LAST, TIME(((t0.c0) BETWEEN (t0.c0) AND (t1.c0)), (NOT (t0.c0)), CAST(t1.c38 AS TEXT), t1.c0, ((t1.c0)==(t1.c38)))  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON t1.c0 WHERE (CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(t1.c38 AS BLOB) WHEN (NOT (t1.c0)) THEN 'm4Vq' WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t1.c0)<=(t0.c0)) ELSE ((t1.c38)|(t1.c0)) END) ORDER BY x'', t0.c0 COLLATE BINARY ASC  NULLS LAST, TIME(((t0.c0) BETWEEN (t0.c0) AND (t1.c0)), (NOT (t0.c0)), CAST(t1.c38 AS TEXT), t1.c0, ((t1.c0)==(t1.c38)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)==(t0.c0)) THEN CAST(t1.c38 AS BLOB) WHEN (NOT (t1.c0)) THEN 'm4Vq' WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t1.c0)<=(t0.c0)) ELSE ((t1.c38)|(t1.c0)) END) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN t0 ON t1.c0 ORDER BY x'', t0.c0 COLLATE BINARY ASC  NULLS LAST, TIME(((t0.c0) BETWEEN (t0.c0) AND (t1.c0)), (NOT (t0.c0)), CAST(t1.c38 AS TEXT), t1.c0, ((t1.c0)==(t1.c38)))  NULLS LAST);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN t0 ON t1.c0 WHERE (CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(t1.c38 AS BLOB) WHEN (NOT (t1.c0)) THEN 'm4Vq' WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN ((t1.c0)<=(t0.c0)) ELSE ((t1.c38)|(t1.c0)) END) ORDER BY x'', t0.c0 COLLATE BINARY ASC  NULLS LAST, TIME(((t0.c0) BETWEEN (t0.c0) AND (t1.c0)), (NOT (t0.c0)), CAST(t1.c38 AS TEXT), t1.c0, ((t1.c0)==(t1.c38)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((-2.062949957E9)||(t1.c38)))+(rt0.c3))) ORDER BY (+ ((rt0.c1 IN (NULL))))  NULLS FIRST, CASE ((t0.c0)LIKE('s'))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt1.c0)) ELSE 'vx' END ASC;
SELECT SUM(count) FROM (SELECT ((((((-2.062949957E9)||(t1.c38)))+(rt0.c3))) IS TRUE)  as count FROM vt1, t1, t0, rt0 ORDER BY (+ ((rt0.c1 IN (NULL))))  NULLS FIRST, CASE ((t0.c0)LIKE('s'))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt1.c0)) ELSE 'vx' END ASC);
SELECT ALL COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((-2.062949957E9)||(t1.c38)))+(rt0.c3))) ORDER BY (+ ((rt0.c1 IN (NULL))))  NULLS FIRST, CASE ((t0.c0)LIKE('s'))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt1.c0)) ELSE 'vx' END ASC;
SELECT SUM(count) FROM (SELECT ((((((-2.062949957E9)||(t1.c38)))+(rt0.c3))) IS TRUE)  as count FROM vt1, t1, t0, rt0 ORDER BY (+ ((rt0.c1 IN (NULL))))  NULLS FIRST, CASE ((t0.c0)LIKE('s'))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt1.c0)) ELSE 'vx' END ASC);
SELECT ALL COUNT(*) FROM vt1, t1, t0, rt0 WHERE (((((-2.062949957E9)||(t1.c38)))+(rt0.c3))) ORDER BY (+ ((rt0.c1 IN (NULL))))  NULLS FIRST, CASE ((t0.c0)LIKE('s'))  WHEN (rt0.c0 IN ()) THEN ((rt0.c4)LIKE(vt1.c0)) ELSE 'vx' END ASC;
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (x''))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.6753831141434201)) AND ((rt0.c1 IN ()))) INNER JOIN vt0 ON ((~ (0xffffffffee7e74b2)) IN (rt0.c4)) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (x''))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.6753831141434201)) AND ((rt0.c1 IN ()))) INNER JOIN vt0 ON ((~ (0xffffffffee7e74b2)) IN (rt0.c4)));
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (x''))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.6753831141434201)) AND ((rt0.c1 IN ()))) INNER JOIN vt0 ON ((~ (0xffffffffee7e74b2)) IN (rt0.c4)) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (x''))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.6753831141434201)) AND ((rt0.c1 IN ()))) INNER JOIN vt0 ON ((~ (0xffffffffee7e74b2)) IN (rt0.c4)));
SELECT * FROM rt0 INNER JOIN t0 ON (((rt0.c0 IN (x''))) NOT BETWEEN (LIKELIHOOD(DISTINCT t0.c0, 0.6753831141434201)) AND ((rt0.c1 IN ()))) INNER JOIN vt0 ON ((~ (0xffffffffee7e74b2)) IN (rt0.c4)) WHERE (t0.c0);
SELECT COUNT(*) FROM vt0, vt1, t1 CROSS JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c3)))OR(((rt0.c2)-(rt0.c2)))) RIGHT OUTER JOIN rt0 ON 3.30534344E8 WHERE ((- (((NULL)==(rt0.c3))))) ORDER BY CAST(((((t1.c38)OR(rt0.c1)))OR(rt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((NULL)==(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, t1 CROSS JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c3)))OR(((rt0.c2)-(rt0.c2)))) RIGHT OUTER JOIN rt0 ON 3.30534344E8 ORDER BY CAST(((((t1.c38)OR(rt0.c1)))OR(rt0.c0)) AS REAL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t1 CROSS JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c3)))OR(((rt0.c2)-(rt0.c2)))) RIGHT OUTER JOIN rt0 ON 3.30534344E8 WHERE ((- (((NULL)==(rt0.c3))))) ORDER BY CAST(((((t1.c38)OR(rt0.c1)))OR(rt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((NULL)==(rt0.c3))))) IS TRUE)  as count FROM vt0, vt1, t1 CROSS JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c3)))OR(((rt0.c2)-(rt0.c2)))) RIGHT OUTER JOIN rt0 ON 3.30534344E8 ORDER BY CAST(((((t1.c38)OR(rt0.c1)))OR(rt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (((t1.c0, vt1.c0, t1.c0)) BETWEEN ((t1.c38 COLLATE BINARY, CASE vt1.c0  WHEN t1.c0 THEN t1.c38 END, ((t1.c0)>>(vt1.c0)))) AND (((t1.c0 IN (vt1.c0)), ((t1.c38)>>(t1.c0)), ((vt1.c0)OR(t1.c0))))) WHERE (((((t1.c0)==(vt1.c0)))*(((t1.c38) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((t1.c38) IS FALSE))<(vt1.c0)), (((((t1.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)=(vt1.c0)))*(((t1.c38) BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((t1.c0, vt1.c0, t1.c0)) BETWEEN ((t1.c38 COLLATE BINARY, CASE vt1.c0  WHEN t1.c0 THEN t1.c38 END, ((t1.c0)>>(vt1.c0)))) AND (((t1.c0 IN (vt1.c0)), ((t1.c38)>>(t1.c0)), ((vt1.c0)OR(t1.c0))))) ORDER BY ((((t1.c38) IS FALSE))<(vt1.c0)), (((((t1.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (((t1.c0, vt1.c0, t1.c0)) BETWEEN ((t1.c38 COLLATE BINARY, CASE vt1.c0  WHEN t1.c0 THEN t1.c38 END, ((t1.c0)>>(vt1.c0)))) AND (((t1.c0 IN (vt1.c0)), ((t1.c38)>>(t1.c0)), ((vt1.c0)OR(t1.c0))))) WHERE (((((t1.c0)==(vt1.c0)))*(((t1.c38) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((t1.c38) IS FALSE))<(vt1.c0)), (((((t1.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)=(vt1.c0)))*(((t1.c38) BETWEEN (vt1.c0) AND (t1.c0))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON (((t1.c0, vt1.c0, t1.c0)) BETWEEN ((t1.c38 COLLATE BINARY, CASE vt1.c0  WHEN t1.c0 THEN t1.c38 END, ((t1.c0)>>(vt1.c0)))) AND (((t1.c0 IN (vt1.c0)), ((t1.c38)>>(t1.c0)), ((vt1.c0)OR(t1.c0))))) ORDER BY ((((t1.c38) IS FALSE))<(vt1.c0)), (((((t1.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t1 ON (((t1.c0, vt1.c0, t1.c0)) BETWEEN ((t1.c38 COLLATE BINARY, CASE vt1.c0  WHEN t1.c0 THEN t1.c38 END, ((t1.c0)>>(vt1.c0)))) AND (((t1.c0 IN (vt1.c0)), ((t1.c38)>>(t1.c0)), ((vt1.c0)OR(t1.c0))))) WHERE (((((t1.c0)==(vt1.c0)))*(((t1.c38) BETWEEN (vt1.c0) AND (t1.c0))))) ORDER BY ((((t1.c38) IS FALSE))<(vt1.c0)), (((((t1.c0)) BETWEEN (('')) AND ((vt1.c0)))) BETWEEN (vt1.c0) AND (((t1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t0, t1, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t0, t1, rt0 NATURAL JOIN vt1);
SELECT ALL * FROM t0, t1, rt0 NATURAL JOIN vt1 WHERE (CAST(t1.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c0)IS NOT(t1.c0)))IS(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(t1.c0)))IS(t0.c0))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1);
SELECT ALL * FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c0)IS NOT(t1.c0)))IS(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(t1.c0)))IS(t0.c0))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1);
SELECT ALL * FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c0)IS NOT(t1.c0)))IS(t0.c0)));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ('0.5841704452820475')));
SELECT SUM(count) FROM (SELECT (((NOT ('0.5841704452820475'))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ('0.5841704452820475')));
SELECT SUM(count) FROM (SELECT (((NOT ('0.5841704452820475'))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE ((NOT ('0.5841704452820475')));
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)>(rt0.c2)) COLLATE BINARY) ORDER BY (((((NOT (rt0.c0)))AND((rt0.c4 IN (rt0.c4)))))AND(CAST(rt0.c3 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((NOT (rt0.c0)))AND((rt0.c4 IN (rt0.c4)))))AND(CAST(rt0.c3 AS TEXT))) ASC);
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)>(rt0.c2)) COLLATE BINARY) ORDER BY (((((NOT (rt0.c0)))AND((rt0.c4 IN (rt0.c4)))))AND(CAST(rt0.c3 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((NOT (rt0.c0)))AND((rt0.c4 IN (rt0.c4)))))AND(CAST(rt0.c3 AS TEXT))) ASC);
SELECT * FROM vt1, rt0 WHERE (((rt0.c1)>(rt0.c2)) COLLATE BINARY) ORDER BY (((((NOT (rt0.c0)))AND((rt0.c4 IN (rt0.c4)))))AND(CAST(rt0.c3 AS TEXT))) ASC;
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(t1.c0)))&(((-293702478) NOT BETWEEN (5.24712129E8) AND (t1.c38))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY ((((vt0.c0)AND(t1.c0)))&(((-293702478) NOT BETWEEN (5.24712129E8) AND (t1.c38)))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(t1.c0)))&(((-293702478) NOT BETWEEN (5.24712129E8) AND (t1.c38))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t1, vt1, t0 ORDER BY ((((vt0.c0)AND(t1.c0)))&(((-293702478) NOT BETWEEN (5.24712129E8) AND (t1.c38)))));
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)AND(t1.c0)))&(((-293702478) NOT BETWEEN (5.24712129E8) AND (t1.c38))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((NULL)<=(rt0.c4))) NOT NULL)  NULLS FIRST, (+ (((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((((NULL)<=(rt0.c4))) NOT NULL)  NULLS FIRST, (+ (((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0)))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((NULL)<=(rt0.c4))) NOT NULL)  NULLS FIRST, (+ (((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY ((((NULL)<=(rt0.c4))) NOT NULL)  NULLS FIRST, (+ (((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0)))));
SELECT ALL * FROM rt0, t0, t1 WHERE (((rt0.c1) ISNULL) COLLATE NOCASE) ORDER BY ((((NULL)<=(rt0.c4))) NOT NULL)  NULLS FIRST, (+ (((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))AND(t1.c0))));
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(CASE vt1.c0  WHEN t0.c0 THEN x'd9c2' END AS TEXT)  NULLS LAST, CAST((~ (t0.c0)) AS INTEGER) ASC, CASE vt1.c0  WHEN vt1.c0 THEN 0.2440409939132977 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE vt1.c0  WHEN t0.c0 THEN x'd9c2' END AS TEXT)  NULLS LAST, CAST((~ (t0.c0)) AS INTEGER) ASC, CASE vt1.c0  WHEN vt1.c0 THEN 0.2440409939132977 END COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(CASE vt1.c0  WHEN t0.c0 THEN x'd9c2' END AS TEXT)  NULLS LAST, CAST((~ (t0.c0)) AS INTEGER) ASC, CASE vt1.c0  WHEN vt1.c0 THEN 0.2440409939132977 END COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(CASE vt1.c0  WHEN t0.c0 THEN x'd9c2' END AS TEXT)  NULLS LAST, CAST((~ (t0.c0)) AS INTEGER) ASC, CASE vt1.c0  WHEN vt1.c0 THEN 0.2440409939132977 END COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (vt1.c0) ORDER BY CAST(CASE vt1.c0  WHEN t0.c0 THEN x'd9c2' END AS TEXT)  NULLS LAST, CAST((~ (t0.c0)) AS INTEGER) ASC, CASE vt1.c0  WHEN vt1.c0 THEN 0.2440409939132977 END COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((0.555924557055861) NOT BETWEEN (754391305) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN ((0.555924557055861) NOT BETWEEN (754391305) AND (rt0.c4)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((0.555924557055861) NOT BETWEEN (754391305) AND (rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS REAL) THEN ((0.555924557055861) NOT BETWEEN (754391305) AND (rt0.c4)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS REAL) THEN ((0.555924557055861) NOT BETWEEN (754391305) AND (rt0.c4)) END);
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((- (t1.c38 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN (((((vt0.c0)AND('-1616089660')))AND(rt0.c4))) AND ((((rt0.c2))>=((rt0.c2)))))  NULLS LAST, ((((((rt0.c3)OR(t1.c38)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), (- (((t1.c38)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c38 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0, t1 ORDER BY (((NOT (rt0.c1))) NOT BETWEEN (((((vt0.c0)AND('-1616089660')))AND(rt0.c4))) AND ((((rt0.c2))>=((rt0.c2)))))  NULLS LAST, ((((((rt0.c3)OR(t1.c38)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), (- (((t1.c38)<(rt0.c1)))));
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((- (t1.c38 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN (((((vt0.c0)AND('-1616089660')))AND(rt0.c4))) AND ((((rt0.c2))>=((rt0.c2)))))  NULLS LAST, ((((((rt0.c3)OR(t1.c38)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), (- (((t1.c38)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c38 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0, vt0, t1 ORDER BY (((NOT (rt0.c1))) NOT BETWEEN (((((vt0.c0)AND('-1616089660')))AND(rt0.c4))) AND ((((rt0.c2))>=((rt0.c2)))))  NULLS LAST, ((((((rt0.c3)OR(t1.c38)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), (- (((t1.c38)<(rt0.c1)))));
SELECT ALL * FROM vt1, rt0, vt0, t1 WHERE ((- (t1.c38 COLLATE RTRIM))) ORDER BY (((NOT (rt0.c1))) NOT BETWEEN (((((vt0.c0)AND('-1616089660')))AND(rt0.c4))) AND ((((rt0.c2))>=((rt0.c2)))))  NULLS LAST, ((((((rt0.c3)OR(t1.c38)))AND(rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND (((t1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), (- (((t1.c38)<(rt0.c1))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt1.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt1.c0)=(rt0.c0))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt1.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt1.c0)=(rt0.c0))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT * FROM vt1, t0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE (((t0.c0 COLLATE RTRIM) NOT BETWEEN ((rt0.c2 IN ())) AND (((vt1.c0)==(rt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((NULL)*(rt0.c1)))IS((+ (rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE ((t1.c38)LIKE(rt0.c1))  WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END CROSS JOIN t1 ON 'm4Vq' WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((NULL)*(rt0.c1)))IS((+ (rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE ((t1.c38)LIKE(rt0.c1))  WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END CROSS JOIN t1 ON 'm4Vq');
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON ((((NULL)*(rt0.c1)))IS((+ (rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE ((t1.c38)LIKE(rt0.c1))  WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END CROSS JOIN t1 ON 'm4Vq' WHERE (((((NULL) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON ((((NULL)*(rt0.c1)))IS((+ (rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE ((t1.c38)LIKE(rt0.c1))  WHEN ((rt0.c0) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE ((t1.c0) BETWEEN (rt0.c4) AND (rt0.c4)) END CROSS JOIN t1 ON 'm4Vq');
SELECT COUNT(*) FROM t1, rt0, vt1, t0, vt0 WHERE ((NOT (x'ced4'))) ORDER BY ((((((t0.c0)>(rt0.c4)))OR((+ (rt0.c1)))))OR((NOT (vt1.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))+(UNLIKELY(vt0.c0))) ASC, (((((rt0.c1)OR(t1.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'ced4'))) IS TRUE)  as count FROM t1, rt0, vt1, t0, vt0 ORDER BY ((((((t0.c0)>(rt0.c4)))OR((+ (rt0.c1)))))OR((NOT (vt1.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))+(UNLIKELY(vt0.c0))) ASC, (((((rt0.c1)OR(t1.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt1, t0, vt0 WHERE ((NOT (x'ced4'))) ORDER BY ((((((t0.c0)>(rt0.c4)))OR((+ (rt0.c1)))))OR((NOT (vt1.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))+(UNLIKELY(vt0.c0))) ASC, (((((rt0.c1)OR(t1.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (x'ced4'))) IS TRUE)  as count FROM t1, rt0, vt1, t0, vt0 ORDER BY ((((((t0.c0)>(rt0.c4)))OR((+ (rt0.c1)))))OR((NOT (vt1.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))+(UNLIKELY(vt0.c0))) ASC, (((((rt0.c1)OR(t1.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt1, t0, vt0 WHERE ((NOT (x'ced4'))) ORDER BY ((((((t0.c0)>(rt0.c4)))OR((+ (rt0.c1)))))OR((NOT (vt1.c0)))) DESC, ((((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))+(UNLIKELY(vt0.c0))) ASC, (((((rt0.c1)OR(t1.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (((t1.c38)*(t1.c38)))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c38)*(t1.c38))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (((t1.c38)*(t1.c38)))));
SELECT SUM(count) FROM (SELECT (((+ (((t1.c38)*(t1.c38))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ (((t1.c38)*(t1.c38)))));
SELECT ALL * FROM vt0, t1, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0)==('-1028548321'))) AND (CAST(t1.c0 AS TEXT))) ASC, ((((t1.c38)>(t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0)==('-1028548321'))) AND (CAST(t1.c0 AS TEXT))) ASC, ((((t1.c38)>(t0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t1, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0)==('-1028548321'))) AND (CAST(t1.c0 AS TEXT))) ASC, ((((t1.c38)>(t0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0)==('-1028548321'))) AND (CAST(t1.c0 AS TEXT))) ASC, ((((t1.c38)>(t0.c0))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt0, t1, t0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY (((~ (t1.c0))) BETWEEN (((vt0.c0)==('-1028548321'))) AND (CAST(t1.c0 AS TEXT))) ASC, ((((t1.c38)>(t0.c0))) NOTNULL)  NULLS LAST;
SELECT * FROM rt0, vt0, t0, vt1, t1 WHERE (((NOT (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt1, t1);
SELECT * FROM rt0, vt0, t0, vt1, t1 WHERE (((NOT (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, vt0, t0, vt1, t1);
SELECT * FROM rt0, vt0, t0, vt1, t1 WHERE (((NOT (rt0.c1)) IN ()));
SELECT * FROM vt0, t0, vt1, t1 WHERE (CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT * FROM vt0, t0, vt1, t1 WHERE (CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1, t1);
SELECT * FROM vt0, t0, vt1, t1 WHERE (CASE WHEN ((vt0.c0)LIKE(vt1.c0)) THEN ((vt1.c0) BETWEEN (t1.c0) AND (t0.c0)) ELSE ((vt0.c0) BETWEEN (t0.c0) AND (t1.c0)) END);
SELECT * FROM t0 INDEXED BY i99, rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (t0.c0, rt0.c0))) AND (CAST(t1.c0 AS NUMERIC))) WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 INDEXED BY i99, rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (t0.c0, rt0.c0))) AND (CAST(t1.c0 AS NUMERIC))));
SELECT * FROM t0 INDEXED BY i99, rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (t0.c0, rt0.c0))) AND (CAST(t1.c0 AS NUMERIC))) WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM t0 INDEXED BY i99, rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (t0.c0, rt0.c0))) AND (CAST(t1.c0 AS NUMERIC))));
SELECT * FROM t0 INDEXED BY i99, rt0, vt1, vt0 LEFT OUTER JOIN t1 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (t0.c0, rt0.c0))) AND (CAST(t1.c0 AS NUMERIC))) WHERE (vt0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM t0, rt0, t1, vt1 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c3) IS FALSE)))) ORDER BY ((t1.c0 COLLATE BINARY)GLOB((t1.c0 IN (t1.c0, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))OR(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, t1, vt1 ORDER BY ((t1.c0 COLLATE BINARY)GLOB((t1.c0 IN (t1.c0, rt0.c3)))) DESC);
SELECT COUNT(*) FROM t0, rt0, t1, vt1 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c3) IS FALSE)))) ORDER BY ((t1.c0 COLLATE BINARY)GLOB((t1.c0 IN (t1.c0, rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))OR(((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, t1, vt1 ORDER BY ((t1.c0 COLLATE BINARY)GLOB((t1.c0 IN (t1.c0, rt0.c3)))) DESC);
SELECT COUNT(*) FROM t0, rt0, t1, vt1 WHERE (((CAST(rt0.c1 AS BLOB))OR(((rt0.c3) IS FALSE)))) ORDER BY ((t1.c0 COLLATE BINARY)GLOB((t1.c0 IN (t1.c0, rt0.c3)))) DESC;
SELECT COUNT(*) FROM vt0, t0, t1, vt1, rt0 WHERE (((((((((((vt1.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(t0.c0)))AND(((t1.c38)-(t1.c0)))))OR(json_remove(t1.c38, vt1.c0)))) ORDER BY (((((((t1.c38))<=((t1.c0))))OR(json_valid(t1.c38))))AND(-506397294)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(t0.c0)))AND(((t1.c38)-(t1.c0)))))OR(json_remove(t1.c38, vt1.c0)))) IS TRUE)  as count FROM vt0, t0, t1, vt1, rt0 NOT INDEXED ORDER BY (((((((t1.c38))<=((t1.c0))))OR(json_valid(t1.c38))))AND(-506397294)) DESC);
SELECT COUNT(*) FROM vt0, t0, t1, vt1, rt0 WHERE (((((((((((vt1.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(t0.c0)))AND(((t1.c38)-(t1.c0)))))OR(json_remove(t1.c38, vt1.c0)))) ORDER BY (((((((t1.c38))<=((t1.c0))))OR(json_valid(t1.c38))))AND(-506397294)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(t0.c0)))AND(((t1.c38)-(t1.c0)))))OR(json_remove(t1.c38, vt1.c0)))) IS TRUE)  as count FROM vt0, t0, t1, vt1, rt0 NOT INDEXED ORDER BY (((((((t1.c38))<=((t1.c0))))OR(json_valid(t1.c38))))AND(-506397294)) DESC);
SELECT COUNT(*) FROM vt0, t0, t1, vt1, rt0 WHERE (((((((((((vt1.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(t0.c0)))AND(((t1.c38)-(t1.c0)))))OR(json_remove(t1.c38, vt1.c0)))) ORDER BY (((((((t1.c38))<=((t1.c0))))OR(json_valid(t1.c38))))AND(-506397294)) DESC;
SELECT COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE ((t0.c0 IN (t1.c38, rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (t1.c38, rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, t0, vt0, rt0);
SELECT COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE ((t0.c0 IN (t1.c38, rt0.c3)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (t1.c38, rt0.c3)) COLLATE BINARY) IS TRUE)  as count FROM t1, vt1, t0, vt0, rt0);
SELECT COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE ((t0.c0 IN (t1.c38, rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 INDEXED BY i99, vt0 WHERE (((((vt1.c0)IS('')))!=((('1640452398') BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS('')))<>((('1640452398') BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 INDEXED BY i99, vt0);
SELECT COUNT(*) FROM rt0, vt1 INDEXED BY i99, vt0 WHERE (((((vt1.c0)IS('')))!=((('1640452398') BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS('')))<>((('1640452398') BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 INDEXED BY i99, vt0);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i16 WHERE (load_extension(CAST(rt0.c3 AS NUMERIC), CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(rt0.c3 AS NUMERIC), CAST(rt0.c3 AS TEXT))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i16);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i16 WHERE (load_extension(CAST(rt0.c3 AS NUMERIC), CAST(rt0.c3 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(CAST(rt0.c3 AS NUMERIC), CAST(rt0.c3 AS TEXT))) IS TRUE)  as count FROM rt0, t0 INDEXED BY i16);
SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((rt0.c4 COLLATE RTRIM)OR((rt0.c3 IN (NULL)))))AND('Q}ir#ArP')) RIGHT OUTER JOIN rt0 ON (((- (t1.c0))) BETWEEN (TYPEOF(t1.c38)) AND ((rt0.c4 IN ()))) LEFT OUTER JOIN vt1 ON (((UNLIKELY(rt0.c4)))>((((rt0.c1)||(rt0.c1))))) WHERE (CAST(((((((((t1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) AS REAL)) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))+(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((((rt0.c4 COLLATE RTRIM)OR((rt0.c3 IN (NULL)))))AND('Q}ir#ArP')) RIGHT OUTER JOIN rt0 ON (((- (t1.c0))) BETWEEN (TYPEOF(t1.c38)) AND ((rt0.c4 IN ()))) LEFT OUTER JOIN vt1 ON (((UNLIKELY(rt0.c4)))>((((rt0.c1)||(rt0.c1))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))+(rt0.c2)) DESC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN t1 ON ((((rt0.c4 COLLATE RTRIM)OR((rt0.c3 IN (NULL)))))AND('Q}ir#ArP')) RIGHT OUTER JOIN rt0 ON (((- (t1.c0))) BETWEEN (TYPEOF(t1.c38)) AND ((rt0.c4 IN ()))) LEFT OUTER JOIN vt1 ON (((UNLIKELY(rt0.c4)))>((((rt0.c1)||(rt0.c1))))) WHERE (CAST(((((((((t1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) AS REAL)) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))+(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((t1.c0)AND(rt0.c2)))AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c3)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN t1 ON ((((rt0.c4 COLLATE RTRIM)OR((rt0.c3 IN (NULL)))))AND('Q}ir#ArP')) RIGHT OUTER JOIN rt0 ON (((- (t1.c0))) BETWEEN (TYPEOF(t1.c38)) AND ((rt0.c4 IN ()))) LEFT OUTER JOIN vt1 ON (((UNLIKELY(rt0.c4)))>((((rt0.c1)||(rt0.c1))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))+(rt0.c2)) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) AS INTEGER));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(x'')))OR(rt0.c3))) AND (((rt0.c1) BETWEEN ('-9223372036854775808') AND (413270005)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(x'')))OR(rt0.c3))) AND (((rt0.c1) BETWEEN ('-9223372036854775808') AND (413270005))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(x'')))OR(rt0.c3))) AND (((rt0.c1) BETWEEN ('-9223372036854775808') AND (413270005)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(x'')))OR(rt0.c3))) AND (((rt0.c1) BETWEEN ('-9223372036854775808') AND (413270005))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3 COLLATE NOCASE) BETWEEN (((((rt0.c1)AND(x'')))OR(rt0.c3))) AND (((rt0.c1) BETWEEN ('-9223372036854775808') AND (413270005)))));
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((x'' IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((x'' IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT ALL * FROM vt1, t1, vt0 WHERE (CAST((x'' IN ()) AS TEXT));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((((((((NOT (rt0.c3)))AND((NOT (rt0.c0)))))OR(((((((((vt0.c0)AND('-619533059')))AND(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))))OR(rt0.c2)))AND(((rt0.c4)<>(rt0.c0)))) WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY ASC, TRIM(t0.c0 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((((((((NOT (rt0.c3)))AND((NOT (rt0.c0)))))OR(((((((((vt0.c0)AND('-619533059')))AND(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))))OR(rt0.c2)))AND(((rt0.c4)<>(rt0.c0)))) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY ASC, TRIM(t0.c0 COLLATE NOCASE) DESC);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((((((((NOT (rt0.c3)))AND((NOT (rt0.c0)))))OR(((((((((vt0.c0)AND('-619533059')))AND(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))))OR(rt0.c2)))AND(((rt0.c4)<>(rt0.c0)))) WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY ASC, TRIM(t0.c0 COLLATE NOCASE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((((((((NOT (rt0.c3)))AND((NOT (rt0.c0)))))OR(((((((((vt0.c0)AND('-619533059')))AND(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))))OR(rt0.c2)))AND(((rt0.c4)<>(rt0.c0)))) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY ASC, TRIM(t0.c0 COLLATE NOCASE) DESC);
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN vt0 ON (((((((((NOT (rt0.c3)))AND((NOT (rt0.c0)))))OR(((((((((vt0.c0)AND('-619533059')))AND(rt0.c3)))OR(rt0.c1)))OR(t0.c0)))))OR(rt0.c2)))AND(((rt0.c4)<>(rt0.c0)))) WHERE (CAST(rt0.c3 AS NUMERIC) COLLATE BINARY) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY ASC, TRIM(t0.c0 COLLATE NOCASE) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (NULLIF(vt1.c0, t1.c0) COLLATE NOCASE) ORDER BY (((0.21065261226009624 IN ())) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0)) DESC, (NOT (NULL)) ASC, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)>>(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c38)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c0, t1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (((0.21065261226009624 IN ())) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0)) DESC, (NOT (NULL)) ASC, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)>>(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c38)))OR(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (NULLIF(vt1.c0, t1.c0) COLLATE NOCASE) ORDER BY (((0.21065261226009624 IN ())) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0)) DESC, (NOT (NULL)) ASC, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)>>(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c38)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c0, t1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, t1, rt0 ORDER BY (((0.21065261226009624 IN ())) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0)) DESC, (NOT (NULL)) ASC, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)>>(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c38)))OR(rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, t1, rt0 WHERE (NULLIF(vt1.c0, t1.c0) COLLATE NOCASE) ORDER BY (((0.21065261226009624 IN ())) BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) AND (t1.c0)) DESC, (NOT (NULL)) ASC, ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 END)>>(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(t1.c38)))OR(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM t1, t0 WHERE (((t1.c38) IS FALSE)) ORDER BY ((CAST(t0.c0 AS REAL))*((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY ((CAST(t0.c0 AS REAL))*((x'' IN ()))));
SELECT ALL * FROM t1, t0 WHERE (((t1.c38) IS FALSE)) ORDER BY ((CAST(t0.c0 AS REAL))*((x'' IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38) IS FALSE)) IS TRUE)  as count FROM t1, t0 ORDER BY ((CAST(t0.c0 AS REAL))*((x'' IN ()))));
SELECT ALL * FROM t1, t0 WHERE (((t1.c38) IS FALSE)) ORDER BY ((CAST(t0.c0 AS REAL))*((x'' IN ())));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL)) NOT NULL) CROSS JOIN vt1 ON (NOT (vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (- (((rt0.c0)<(t1.c0)))) WHERE (((rt0.c4)>(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4)>(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL)) NOT NULL) CROSS JOIN vt1 ON (NOT (vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (- (((rt0.c0)<(t1.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL)) NOT NULL) CROSS JOIN vt1 ON (NOT (vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (- (((rt0.c0)<(t1.c0)))) WHERE (((rt0.c4)>(rt0.c4)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c4)>(rt0.c4)) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL)) NOT NULL) CROSS JOIN vt1 ON (NOT (vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (- (((rt0.c0)<(t1.c0)))));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CAST(rt0.c4 AS REAL)) NOT NULL) CROSS JOIN vt1 ON (NOT (vt1.c0)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (- (((rt0.c0)<(t1.c0)))) WHERE (((rt0.c4)>(rt0.c4)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, rt0, t1 CROSS JOIN t0 ON t1.c0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))AND((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0, t1 CROSS JOIN t0 ON t1.c0);
SELECT ALL * FROM vt0, vt1, rt0, t1 CROSS JOIN t0 ON t1.c0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))AND((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS NOT(rt0.c2)))AND((rt0.c4 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0, t1 CROSS JOIN t0 ON t1.c0);
SELECT ALL * FROM vt0, vt1, rt0, t1 CROSS JOIN t0 ON t1.c0 WHERE (((((rt0.c1)IS NOT(rt0.c2)))AND((rt0.c4 IN ()))));
SELECT ALL * FROM vt0, t1, vt1, t0, rt0 WHERE (LOWER(DISTINCT (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (rt0.c3)))) IS TRUE)  as count FROM vt0, t1, vt1, t0, rt0);
SELECT ALL * FROM vt0, t1, vt1, t0, rt0 WHERE (LOWER(DISTINCT (NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (rt0.c3)))) IS TRUE)  as count FROM vt0, t1, vt1, t0, rt0);
SELECT ALL * FROM vt0, t1, vt1, t0, rt0 WHERE (LOWER(DISTINCT (NOT (rt0.c3))));
SELECT ALL * FROM t1, vt1 WHERE ((((t1.c0 IN ()))OR((((t1.c38))==((t1.c38)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))OR((((t1.c38))==((t1.c38)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY NULL ASC);
SELECT ALL * FROM t1, vt1 WHERE ((((t1.c0 IN ()))OR((((t1.c38))==((t1.c38)))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))OR((((t1.c38))==((t1.c38)))))) IS TRUE)  as count FROM t1, vt1 ORDER BY NULL ASC);
SELECT ALL * FROM t1, vt1 WHERE ((((t1.c0 IN ()))OR((((t1.c38))==((t1.c38)))))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c0, t1.c38, t1.c38)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)%(t1.c0)), CAST(t1.c38 AS NUMERIC))) AND (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), ((vt0.c0) IS FALSE)))) WHERE (3.30534344E8);
SELECT SUM(count) FROM (SELECT ALL ((3.30534344E8) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c0, t1.c38, t1.c38)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)%(t1.c0)), CAST(t1.c38 AS NUMERIC))) AND (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), ((vt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c0, t1.c38, t1.c38)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)%(t1.c0)), CAST(t1.c38 AS NUMERIC))) AND (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), ((vt0.c0) IS FALSE)))) WHERE (3.30534344E8);
SELECT SUM(count) FROM (SELECT ALL ((3.30534344E8) IS TRUE)  as count FROM t1 CROSS JOIN vt0 ON (((vt0.c0, t1.c38, t1.c38)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)%(t1.c0)), CAST(t1.c38 AS NUMERIC))) AND (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), ((vt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN vt0 ON (((vt0.c0, t1.c38, t1.c38)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, ((vt0.c0)%(t1.c0)), CAST(t1.c38 AS NUMERIC))) AND (((vt0.c0 IN ()), CAST(t1.c0 AS REAL), ((vt0.c0) IS FALSE)))) WHERE (3.30534344E8);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.3529541796050618 WHERE (vt0.c0) ORDER BY json_patch(NULLIF(vt1.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST, vt0.c0  NULLS FIRST, CAST(((vt0.c0)*(vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.3529541796050618 ORDER BY json_patch(NULLIF(vt1.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST, vt0.c0  NULLS FIRST, CAST(((vt0.c0)*(vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.3529541796050618 WHERE (vt0.c0) ORDER BY json_patch(NULLIF(vt1.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST, vt0.c0  NULLS FIRST, CAST(((vt0.c0)*(vt1.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON 0.3529541796050618 ORDER BY json_patch(NULLIF(vt1.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST, vt0.c0  NULLS FIRST, CAST(((vt0.c0)*(vt1.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON 0.3529541796050618 WHERE (vt0.c0) ORDER BY json_patch(NULLIF(vt1.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC  NULLS FIRST, vt0.c0  NULLS FIRST, CAST(((vt0.c0)*(vt1.c0)) AS REAL);
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t1);
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t1);
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 END COLLATE BINARY);
SELECT * FROM rt0, t1, vt1 WHERE (((DATETIME(rt0.c1, rt0.c1, t1.c38))!=((((x'7a69', rt0.c1, x'26bf')) BETWEEN ((vt1.c0, t1.c38, rt0.c4)) AND ((rt0.c2, rt0.c0, t1.c38))))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c1, rt0.c1, t1.c38))!=((((x'7a69', rt0.c1, x'26bf')) BETWEEN ((vt1.c0, t1.c38, rt0.c4)) AND ((rt0.c2, rt0.c0, t1.c38)))))) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT * FROM rt0, t1, vt1 WHERE (((DATETIME(rt0.c1, rt0.c1, t1.c38))!=((((x'7a69', rt0.c1, x'26bf')) BETWEEN ((vt1.c0, t1.c38, rt0.c4)) AND ((rt0.c2, rt0.c0, t1.c38))))));
SELECT SUM(count) FROM (SELECT ((((DATETIME(rt0.c1, rt0.c1, t1.c38))!=((((x'7a69', rt0.c1, x'26bf')) BETWEEN ((vt1.c0, t1.c38, rt0.c4)) AND ((rt0.c2, rt0.c0, t1.c38)))))) IS TRUE)  as count FROM rt0, t1, vt1);
SELECT * FROM rt0, t1, vt1 WHERE (((DATETIME(rt0.c1, rt0.c1, t1.c38))!=((((x'7a69', rt0.c1, x'26bf')) BETWEEN ((vt1.c0, t1.c38, rt0.c4)) AND ((rt0.c2, rt0.c0, t1.c38))))));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)LIKE(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)LIKE(t0.c0)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c0)LIKE(t0.c0)) AS REAL));
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((t1.c38 COLLATE RTRIM)>>(rt0.c4 COLLATE NOCASE))) ORDER BY (((('-2129875641')OR(CASE rt0.c3  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt0.c0)||(t1.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c38 COLLATE RTRIM)>>(rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, rt0, vt0, t0 ORDER BY (((('-2129875641')OR(CASE rt0.c3  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt0.c0)||(t1.c38))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((t1.c38 COLLATE RTRIM)>>(rt0.c4 COLLATE NOCASE))) ORDER BY (((('-2129875641')OR(CASE rt0.c3  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt0.c0)||(t1.c38))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c38 COLLATE RTRIM)>>(rt0.c4 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t1, rt0, vt0, t0 ORDER BY (((('-2129875641')OR(CASE rt0.c3  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt0.c0)||(t1.c38))))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((t1.c38 COLLATE RTRIM)>>(rt0.c4 COLLATE NOCASE))) ORDER BY (((('-2129875641')OR(CASE rt0.c3  WHEN t1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(((vt0.c0)||(t1.c38))))  NULLS FIRST;
SELECT ALL * FROM vt0, t1 WHERE (((((t1.c38)-(t1.c0))) ISNULL)) ORDER BY ((((((((CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE vt0.c0 END)OR(COALESCE(vt0.c0, vt0.c0))))OR(((((((((t1.c38)OR(t1.c38)))AND(t1.c38)))OR(t1.c0)))OR(t1.c0)))))AND(((t1.c38)&(t1.c0)))))OR(((t1.c38)%(t1.c38)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c38)-(t1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE vt0.c0 END)OR(COALESCE(vt0.c0, vt0.c0))))OR(((((((((t1.c38)OR(t1.c38)))AND(t1.c38)))OR(t1.c0)))OR(t1.c0)))))AND(((t1.c38)&(t1.c0)))))OR(((t1.c38)%(t1.c38)))) ASC);
SELECT ALL * FROM vt0, t1 WHERE (((((t1.c38)-(t1.c0))) ISNULL)) ORDER BY ((((((((CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE vt0.c0 END)OR(COALESCE(vt0.c0, vt0.c0))))OR(((((((((t1.c38)OR(t1.c38)))AND(t1.c38)))OR(t1.c0)))OR(t1.c0)))))AND(((t1.c38)&(t1.c0)))))OR(((t1.c38)%(t1.c38)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t1.c38)-(t1.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1 ORDER BY ((((((((CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE vt0.c0 END)OR(COALESCE(vt0.c0, vt0.c0))))OR(((((((((t1.c38)OR(t1.c38)))AND(t1.c38)))OR(t1.c0)))OR(t1.c0)))))AND(((t1.c38)&(t1.c0)))))OR(((t1.c38)%(t1.c38)))) ASC);
SELECT ALL * FROM vt0, t1 WHERE (((((t1.c38)-(t1.c0))) ISNULL)) ORDER BY ((((((((CASE t1.c0  WHEN t1.c38 THEN t1.c0 ELSE vt0.c0 END)OR(COALESCE(vt0.c0, vt0.c0))))OR(((((((((t1.c38)OR(t1.c38)))AND(t1.c38)))OR(t1.c0)))OR(t1.c0)))))AND(((t1.c38)&(t1.c0)))))OR(((t1.c38)%(t1.c38)))) ASC;
SELECT ALL * FROM vt1, rt0, t1 WHERE ('-579009128') ORDER BY (((t1.c38, x'', rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)), (('(璲') NOTNULL), (+ (t1.c0)), rt0.c4 COLLATE BINARY)) AND ((json_type(rt0.c2), (NULL IN ()), ((t1.c0)|(-2129875641)), (+ (rt0.c4)), ((rt0.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-579009128') IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY (((t1.c38, x'', rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)), (('(璲') NOTNULL), (+ (t1.c0)), rt0.c4 COLLATE BINARY)) AND ((json_type(rt0.c2), (NULL IN ()), ((t1.c0)|(-2129875641)), (+ (rt0.c4)), ((rt0.c0) NOT NULL)))) DESC);
SELECT ALL * FROM vt1, rt0, t1 WHERE ('-579009128') ORDER BY (((t1.c38, x'', rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)), (('(璲') NOTNULL), (+ (t1.c0)), rt0.c4 COLLATE BINARY)) AND ((json_type(rt0.c2), (NULL IN ()), ((t1.c0)|(-2129875641)), (+ (rt0.c4)), ((rt0.c0) NOT NULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-579009128') IS TRUE)  as count FROM vt1, rt0, t1 ORDER BY (((t1.c38, x'', rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)), (('(璲') NOTNULL), (+ (t1.c0)), rt0.c4 COLLATE BINARY)) AND ((json_type(rt0.c2), (NULL IN ()), ((t1.c0)|(-2129875641)), (+ (rt0.c4)), ((rt0.c0) NOT NULL)))) DESC);
SELECT ALL * FROM vt1, rt0, t1 WHERE ('-579009128') ORDER BY (((t1.c38, x'', rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((((((rt0.c1)AND(t1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)), (('(璲') NOTNULL), (+ (t1.c0)), rt0.c4 COLLATE BINARY)) AND ((json_type(rt0.c2), (NULL IN ()), ((t1.c0)|(-2129875641)), (+ (rt0.c4)), ((rt0.c0) NOT NULL)))) DESC;
SELECT * FROM t0 WHERE (NULLIF(((t0.c0)LIKE(t0.c0)), 0.735350745226492));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c0)LIKE(t0.c0)), 0.735350745226492)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((t0.c0)LIKE(t0.c0)), 0.735350745226492));
SELECT SUM(count) FROM (SELECT ((NULLIF(((t0.c0)LIKE(t0.c0)), 0.735350745226492)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (NULLIF(((t0.c0)LIKE(t0.c0)), 0.735350745226492));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1, t0 WHERE (((NULL)%(NULL))) ORDER BY COALESCE(rt0.c3, ((((vt0.c0)AND(vt1.c0)))OR(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)%(NULL))) IS TRUE)  as count FROM vt1, vt0, rt0, t1, t0 ORDER BY COALESCE(rt0.c3, ((((vt0.c0)AND(vt1.c0)))OR(rt0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1, t0 WHERE (((NULL)%(NULL))) ORDER BY COALESCE(rt0.c3, ((((vt0.c0)AND(vt1.c0)))OR(rt0.c4)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)%(NULL))) IS TRUE)  as count FROM vt1, vt0, rt0, t1, t0 ORDER BY COALESCE(rt0.c3, ((((vt0.c0)AND(vt1.c0)))OR(rt0.c4)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t1, t0 WHERE (((NULL)%(NULL))) ORDER BY COALESCE(rt0.c3, ((((vt0.c0)AND(vt1.c0)))OR(rt0.c4)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2, rt0.c4, t0.c0, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, vt1.c0, t0.c0, rt0.c0))) IN ()) WHERE ((+ (-217790836 COLLATE RTRIM))) ORDER BY (~ (CASE WHEN rt0.c3 THEN t0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>(((NOT (rt0.c1))))) DESC, ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))IS(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (-217790836 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2, rt0.c4, t0.c0, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, vt1.c0, t0.c0, rt0.c0))) IN ()) ORDER BY (~ (CASE WHEN rt0.c3 THEN t0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>(((NOT (rt0.c1))))) DESC, ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))IS(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2, rt0.c4, t0.c0, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, vt1.c0, t0.c0, rt0.c0))) IN ()) WHERE ((+ (-217790836 COLLATE RTRIM))) ORDER BY (~ (CASE WHEN rt0.c3 THEN t0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>(((NOT (rt0.c1))))) DESC, ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))IS(((rt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (-217790836 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2, rt0.c4, t0.c0, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, vt1.c0, t0.c0, rt0.c0))) IN ()) ORDER BY (~ (CASE WHEN rt0.c3 THEN t0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>(((NOT (rt0.c1))))) DESC, ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))IS(((rt0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c2, rt0.c4, t0.c0, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, vt1.c0, t0.c0, rt0.c0))) IN ()) WHERE ((+ (-217790836 COLLATE RTRIM))) ORDER BY (~ (CASE WHEN rt0.c3 THEN t0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 END)) DESC, (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))>(((NOT (rt0.c1))))) DESC, ((((((rt0.c3)AND(rt0.c2)))AND(rt0.c4)))IS(((rt0.c0) ISNULL)));
SELECT * FROM t0, t1, vt0 CROSS JOIN rt0 ON (((((t0.c0, rt0.c2, x'240d'))>((rt0.c2, vt1.c0, rt0.c0))))&((rt0.c4 IN ()))) RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0)>=(t0.c0)))) AND (((('qljxni)P?')<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0)>=(t0.c0)))) AND (((('qljxni)P?')<<(rt0.c2)))))) IS TRUE)  as count FROM t0, t1, vt0 CROSS JOIN rt0 ON (((((t0.c0, rt0.c2, x'240d'))>((rt0.c2, vt1.c0, rt0.c0))))&((rt0.c4 IN ()))) RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM t0, t1, vt0 CROSS JOIN rt0 ON (((((t0.c0, rt0.c2, x'240d'))>((rt0.c2, vt1.c0, rt0.c0))))&((rt0.c4 IN ()))) RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER) WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0)>=(t0.c0)))) AND (((('qljxni)P?')<<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0)>=(t0.c0)))) AND (((('qljxni)P?')<<(rt0.c2)))))) IS TRUE)  as count FROM t0, t1, vt0 CROSS JOIN rt0 ON (((((t0.c0, rt0.c2, x'240d'))>((rt0.c2, vt1.c0, rt0.c0))))&((rt0.c4 IN ()))) RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c38 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) INNER JOIN t0 ON ((((rt0.c2) ISNULL))>>((rt0.c0 IN ()))) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c38 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) INNER JOIN t0 ON ((((rt0.c2) ISNULL))>>((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c38 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) INNER JOIN t0 ON ((((rt0.c2) ISNULL))>>((rt0.c0 IN ()))) WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c38 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) INNER JOIN t0 ON ((((rt0.c2) ISNULL))>>((rt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c38 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) INNER JOIN t0 ON ((((rt0.c2) ISNULL))>>((rt0.c0 IN ()))) WHERE ((x'' IN ()));
SELECT * FROM t1, t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN ((t0.c0)>=(t0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) WHEN (NOT (t0.c0)) THEN ((vt1.c0)AND(vt0.c0)) END WHERE ((((t0.c0, t1.c38, t1.c38)) BETWEEN ((0.8461264761017705, x'a428acca', 0.7918757523096281)) AND (((((t1.c0, '413270005', vt0.c0))>=(('-621146864', vt0.c0, 0.18807588159467759))), t1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((((t1.c38)GLOB(vt1.c0)))<<(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c38, t1.c38)) BETWEEN ((0.8461264761017705, x'a428acca', 0.7918757523096281)) AND (((((t1.c0, '413270005', vt0.c0))>=(('-621146864', vt0.c0, 0.18807588159467759))), t1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN ((t0.c0)>=(t0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) WHEN (NOT (t0.c0)) THEN ((vt1.c0)AND(vt0.c0)) END ORDER BY ((((t1.c38)GLOB(vt1.c0)))<<(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN ((t0.c0)>=(t0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) WHEN (NOT (t0.c0)) THEN ((vt1.c0)AND(vt0.c0)) END WHERE ((((t0.c0, t1.c38, t1.c38)) BETWEEN ((0.8461264761017705, x'a428acca', 0.7918757523096281)) AND (((((t1.c0, '413270005', vt0.c0))>=(('-621146864', vt0.c0, 0.18807588159467759))), t1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((((t1.c38)GLOB(vt1.c0)))<<(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t1.c38, t1.c38)) BETWEEN ((0.8461264761017705, x'a428acca', 0.7918757523096281)) AND (((((t1.c0, '413270005', vt0.c0))>=(('-621146864', vt0.c0, 0.18807588159467759))), t1.c0, vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t1, t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN ((t0.c0)>=(t0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) WHEN (NOT (t0.c0)) THEN ((vt1.c0)AND(vt0.c0)) END ORDER BY ((((t1.c38)GLOB(vt1.c0)))<<(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t1, t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN x'' THEN ((t0.c0)>=(t0.c0)) WHEN vt1.c0 COLLATE NOCASE THEN ((vt0.c0) NOTNULL) WHEN (NOT (t0.c0)) THEN ((vt1.c0)AND(vt0.c0)) END WHERE ((((t0.c0, t1.c38, t1.c38)) BETWEEN ((0.8461264761017705, x'a428acca', 0.7918757523096281)) AND (((((t1.c0, '413270005', vt0.c0))>=(('-621146864', vt0.c0, 0.18807588159467759))), t1.c0, vt0.c0 COLLATE NOCASE)))) ORDER BY ((((t1.c38)GLOB(vt1.c0)))<<(((t0.c0)IS NOT(t0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c0) NOT BETWEEN (x'e1db') AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (x'e1db') AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c0) NOT BETWEEN (x'e1db') AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) NOT BETWEEN (x'e1db') AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CAST(((t0.c0) NOT BETWEEN (x'e1db') AND (vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS LAST, ((t1.c38) ISNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS LAST, ((t1.c38) ISNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS LAST, ((t1.c38) ISNULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM t1, t0, vt0, rt0 ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS LAST, ((t1.c38) ISNULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t1, t0, vt0, rt0 WHERE ((~ (rt0.c0))) ORDER BY CAST((rt0.c1 IN ()) AS INTEGER)  NULLS LAST, ((t1.c38) ISNULL) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t1, rt0, vt0, vt1, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t1, rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, vt1, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t1, rt0, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, vt1, t0 WHERE (rt0.c3);
SELECT * FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE RTRIM);
SELECT * FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE RTRIM);
SELECT * FROM t0 WHERE (CASE (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((NULL)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN t0.c0 END) ORDER BY t0.c0 COLLATE RTRIM;
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0 ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c0) ORDER BY (((- (vt1.c0))) IS TRUE) DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT * FROM rt0, t0 LEFT OUTER JOIN t1 ON ((rt0.c1)/(rt0.c2)) LEFT OUTER JOIN vt0 ON ((UPPER(vt0.c0))OR(((rt0.c1) ISNULL))) WHERE ((('uDE<\_' COLLATE RTRIM) ISNULL)) ORDER BY ((((((((rt0.c1)OR(vt0.c0)))AND(x'e6507aa8')))AND(((rt0.c2) IS TRUE))))OR(rt0.c4))  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((('uDE<\_' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON ((rt0.c1)/(rt0.c2)) LEFT OUTER JOIN vt0 ON ((UPPER(vt0.c0))OR(((rt0.c1) ISNULL))) ORDER BY ((((((((rt0.c1)OR(vt0.c0)))AND(x'e6507aa8')))AND(((rt0.c2) IS TRUE))))OR(rt0.c4))  NULLS FIRST, rt0.c2 ASC);
SELECT * FROM rt0, t0 LEFT OUTER JOIN t1 ON ((rt0.c1)/(rt0.c2)) LEFT OUTER JOIN vt0 ON ((UPPER(vt0.c0))OR(((rt0.c1) ISNULL))) WHERE ((('uDE<\_' COLLATE RTRIM) ISNULL)) ORDER BY ((((((((rt0.c1)OR(vt0.c0)))AND(x'e6507aa8')))AND(((rt0.c2) IS TRUE))))OR(rt0.c4))  NULLS FIRST, rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((('uDE<\_' COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON ((rt0.c1)/(rt0.c2)) LEFT OUTER JOIN vt0 ON ((UPPER(vt0.c0))OR(((rt0.c1) ISNULL))) ORDER BY ((((((((rt0.c1)OR(vt0.c0)))AND(x'e6507aa8')))AND(((rt0.c2) IS TRUE))))OR(rt0.c4))  NULLS FIRST, rt0.c2 ASC);
SELECT * FROM rt0, t0 LEFT OUTER JOIN t1 ON ((rt0.c1)/(rt0.c2)) LEFT OUTER JOIN vt0 ON ((UPPER(vt0.c0))OR(((rt0.c1) ISNULL))) WHERE ((('uDE<\_' COLLATE RTRIM) ISNULL)) ORDER BY ((((((((rt0.c1)OR(vt0.c0)))AND(x'e6507aa8')))AND(((rt0.c2) IS TRUE))))OR(rt0.c4))  NULLS FIRST, rt0.c2 ASC;
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t1);
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t1);
SELECT ALL * FROM t0, rt0, vt0, vt1, t1 WHERE (((- (vt0.c0)) IN ()));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) ORDER BY ((CAST(rt0.c2 AS BLOB))/(((rt0.c2)&(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))/(((rt0.c2)&(rt0.c4)))));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) ORDER BY ((CAST(rt0.c2 AS BLOB))/(((rt0.c2)&(rt0.c4))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c2 AS BLOB))/(((rt0.c2)&(rt0.c4)))));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)) AS REAL)) ORDER BY ((CAST(rt0.c2 AS BLOB))/(((rt0.c2)&(rt0.c4))));
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE ((rt0.c0)IS(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE ((rt0.c0)IS(NULL)) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE ((rt0.c0)IS(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE ((rt0.c0)IS(NULL)) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c4)IS NOT(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END ELSE ((rt0.c0)IS(NULL)) END);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY NULL DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) IS TRUE)) ORDER BY NULL DESC;
SELECT ALL * FROM t0, t1 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS BLOB) CROSS JOIN rt0 ON (((t0.c0, vt0.c0, vt1.c0)) BETWEEN ((((rt0.c1) IS TRUE), (vt0.c0 IN ()), -6.19533059E8)) AND ((HEX(t1.c0), (+ (rt0.c1)), TYPEOF(DISTINCT rt0.c3)))) CROSS JOIN vt1 ON ((rt0.c3)<>(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (CASE CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS BLOB) THEN COALESCE(DISTINCT x'', rt0.c3) ELSE ((t0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS BLOB) THEN COALESCE(DISTINCT x'', rt0.c3) ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS BLOB) CROSS JOIN rt0 ON (((t0.c0, vt0.c0, vt1.c0)) BETWEEN ((((rt0.c1) IS TRUE), (vt0.c0 IN ()), -6.19533059E8)) AND ((HEX(t1.c0), (+ (rt0.c1)), TYPEOF(DISTINCT rt0.c3)))) CROSS JOIN vt1 ON ((rt0.c3)!=(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM t0, t1 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS BLOB) CROSS JOIN rt0 ON (((t0.c0, vt0.c0, vt1.c0)) BETWEEN ((((rt0.c1) IS TRUE), (vt0.c0 IN ()), -6.19533059E8)) AND ((HEX(t1.c0), (+ (rt0.c1)), TYPEOF(DISTINCT rt0.c3)))) CROSS JOIN vt1 ON ((rt0.c3)<>(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) WHERE (CASE CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS BLOB) THEN COALESCE(DISTINCT x'', rt0.c3) ELSE ((t0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t1.c0  WHEN rt0.c0 THEN rt0.c1 END  WHEN CAST(rt0.c1 AS BLOB) THEN COALESCE(DISTINCT x'', rt0.c3) ELSE ((t0.c0) IS TRUE) END) IS TRUE)  as count FROM t0, t1 LEFT OUTER JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS BLOB) CROSS JOIN rt0 ON (((t0.c0, vt0.c0, vt1.c0)) BETWEEN ((((rt0.c1) IS TRUE), (vt0.c0 IN ()), -6.19533059E8)) AND ((HEX(t1.c0), (+ (rt0.c1)), TYPEOF(DISTINCT rt0.c3)))) CROSS JOIN vt1 ON ((rt0.c3)!=(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM t1, vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(x'' AS INTEGER))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN NULL THEN '-1916430240' END)) AND ((CASE t1.c38  WHEN t1.c38 THEN vt1.c0 END))) ASC  NULLS FIRST, CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE UNLIKELY('\n') END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t1, vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(x'' AS INTEGER))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN NULL THEN '-1916430240' END)) AND ((CASE t1.c38  WHEN t1.c38 THEN vt1.c0 END))) ASC  NULLS FIRST, CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE UNLIKELY('\n') END  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(x'' AS INTEGER))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN NULL THEN '-1916430240' END)) AND ((CASE t1.c38  WHEN t1.c38 THEN vt1.c0 END))) ASC  NULLS FIRST, CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE UNLIKELY('\n') END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t1, vt1 ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(x'' AS INTEGER))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN NULL THEN '-1916430240' END)) AND ((CASE t1.c38  WHEN t1.c38 THEN vt1.c0 END))) ASC  NULLS FIRST, CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE UNLIKELY('\n') END  NULLS FIRST);
SELECT * FROM t1, vt1 WHERE (CAST(CAST(vt1.c0 AS TEXT) AS INTEGER)) ORDER BY (CAST(vt1.c0 AS BLOB) IN (CAST(x'' AS INTEGER))) DESC  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN NULL THEN '-1916430240' END)) AND ((CASE t1.c38  WHEN t1.c38 THEN vt1.c0 END))) ASC  NULLS FIRST, CASE WHEN (((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM ELSE UNLIKELY('\n') END  NULLS FIRST;
SELECT * FROM t0, t1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CASE WHEN t1.c38 COLLATE BINARY THEN ((vt0.c0)OR(t0.c0)) WHEN CAST(t1.c38 AS REAL) THEN (((t1.c38)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '' THEN SUBSTR(t0.c0, t0.c0) ELSE CASE t1.c0  WHEN t1.c38 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CASE WHEN t1.c38 COLLATE BINARY THEN ((vt0.c0)OR(t0.c0)) WHEN CAST(t1.c38 AS REAL) THEN (((t1.c38)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '' THEN SUBSTR(t0.c0, t0.c0) ELSE CASE t1.c0  WHEN t1.c38 THEN vt0.c0 END END);
SELECT * FROM t0, t1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CASE WHEN t1.c38 COLLATE BINARY THEN ((vt0.c0)OR(t0.c0)) WHEN CAST(t1.c38 AS REAL) THEN (((t1.c38)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '' THEN SUBSTR(t0.c0, t0.c0) ELSE CASE t1.c0  WHEN t1.c38 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, t1, vt0 ORDER BY CASE WHEN t1.c38 COLLATE BINARY THEN ((vt0.c0)OR(t0.c0)) WHEN CAST(t1.c38 AS REAL) THEN (((t1.c38)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '' THEN SUBSTR(t0.c0, t0.c0) ELSE CASE t1.c0  WHEN t1.c38 THEN vt0.c0 END END);
SELECT * FROM t0, t1, vt0 WHERE (LAST_INSERT_ROWID()) ORDER BY CASE WHEN t1.c38 COLLATE BINARY THEN ((vt0.c0)OR(t0.c0)) WHEN CAST(t1.c38 AS REAL) THEN (((t1.c38)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) WHEN '' THEN SUBSTR(t0.c0, t0.c0) ELSE CASE t1.c0  WHEN t1.c38 THEN vt0.c0 END END;
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(x'e7ea')))OR(rt0.c2))) NOTNULL)) ORDER BY ((((CAST(rt0.c4 AS REAL))AND(CASE t1.c38  WHEN t1.c38 THEN rt0.c3 WHEN rt0.c2 THEN t1.c38 WHEN vt1.c0 THEN t1.c0 END)))AND(CAST(t0.c0 AS BLOB))), json_array_length(LIKE(vt0.c0, rt0.c2)), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4)))+(json_valid('301473087')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(x'e7ea')))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, t1, rt0, vt0, t0 ORDER BY ((((CAST(rt0.c4 AS REAL))AND(CASE t1.c38  WHEN t1.c38 THEN rt0.c3 WHEN rt0.c2 THEN t1.c38 WHEN vt1.c0 THEN t1.c0 END)))AND(CAST(t0.c0 AS BLOB))), json_array_length(LIKE(vt0.c0, rt0.c2)), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4)))+(json_valid('301473087')))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(x'e7ea')))OR(rt0.c2))) NOTNULL)) ORDER BY ((((CAST(rt0.c4 AS REAL))AND(CASE t1.c38  WHEN t1.c38 THEN rt0.c3 WHEN rt0.c2 THEN t1.c38 WHEN vt1.c0 THEN t1.c0 END)))AND(CAST(t0.c0 AS BLOB))), json_array_length(LIKE(vt0.c0, rt0.c2)), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4)))+(json_valid('301473087')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(x'e7ea')))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, t1, rt0, vt0, t0 ORDER BY ((((CAST(rt0.c4 AS REAL))AND(CASE t1.c38  WHEN t1.c38 THEN rt0.c3 WHEN rt0.c2 THEN t1.c38 WHEN vt1.c0 THEN t1.c0 END)))AND(CAST(t0.c0 AS BLOB))), json_array_length(LIKE(vt0.c0, rt0.c2)), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4)))+(json_valid('301473087')))  NULLS FIRST);
SELECT ALL * FROM vt1, t1, rt0, vt0, t0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c0)))AND(vt0.c0)))OR(rt0.c3)))AND(x'e7ea')))OR(rt0.c2))) NOTNULL)) ORDER BY ((((CAST(rt0.c4 AS REAL))AND(CASE t1.c38  WHEN t1.c38 THEN rt0.c3 WHEN rt0.c2 THEN t1.c38 WHEN vt1.c0 THEN t1.c0 END)))AND(CAST(t0.c0 AS BLOB))), json_array_length(LIKE(vt0.c0, rt0.c2)), ((((((rt0.c0)OR(vt0.c0)))OR(rt0.c4)))+(json_valid('301473087')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(HEX(vt1.c0), 0.48355282634618113) WHERE (LIKE(CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, '-1470364021', vt0.c0))), 'K')) ORDER BY NULL DESC, (+ (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, '-1470364021', vt0.c0))), 'K')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(HEX(vt1.c0), 0.48355282634618113) ORDER BY NULL DESC, (+ (vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(HEX(vt1.c0), 0.48355282634618113) WHERE (LIKE(CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, '-1470364021', vt0.c0))), 'K')) ORDER BY NULL DESC, (+ (vt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, '-1470364021', vt0.c0))), 'K')) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(HEX(vt1.c0), 0.48355282634618113) ORDER BY NULL DESC, (+ (vt0.c0 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON LIKELIHOOD(HEX(vt1.c0), 0.48355282634618113) WHERE (LIKE(CAST(vt1.c0 AS BLOB), (((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, '-1470364021', vt0.c0))), 'K')) ORDER BY NULL DESC, (+ (vt0.c0 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1)>(t0.c0)) THEN ((t1.c0)GLOB(t1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c38) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c0 THEN ABS(DISTINCT t1.c0) ELSE 0.7462977775254506 END, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))IS(NULLIF(rt0.c1, rt0.c1))) ASC, (((rt0.c0 IN (t1.c38, t1.c0))) BETWEEN (((t1.c38) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CASE WHEN ((rt0.c1)>(t0.c0)) THEN ((t1.c0)GLOB(t1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c38) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c0 THEN ABS(DISTINCT t1.c0) ELSE 0.7462977775254506 END, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))IS(NULLIF(rt0.c1, rt0.c1))) ASC, (((rt0.c0 IN (t1.c38, t1.c0))) BETWEEN (((t1.c38) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1)>(t0.c0)) THEN ((t1.c0)GLOB(t1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c38) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c0 THEN ABS(DISTINCT t1.c0) ELSE 0.7462977775254506 END, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))IS(NULLIF(rt0.c1, rt0.c1))) ASC, (((rt0.c0 IN (t1.c38, t1.c0))) BETWEEN (((t1.c38) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, t0, t1 ORDER BY CASE WHEN ((rt0.c1)>(t0.c0)) THEN ((t1.c0)GLOB(t1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c38) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c0 THEN ABS(DISTINCT t1.c0) ELSE 0.7462977775254506 END, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))IS(NULLIF(rt0.c1, rt0.c1))) ASC, (((rt0.c0 IN (t1.c38, t1.c0))) BETWEEN (((t1.c38) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)));
SELECT COUNT(*) FROM rt0, t0, t1 WHERE (rt0.c1) ORDER BY CASE WHEN ((rt0.c1)>(t0.c0)) THEN ((t1.c0)GLOB(t1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN ((t1.c38) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN t0.c0 THEN ABS(DISTINCT t1.c0) ELSE 0.7462977775254506 END, ((((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))IS(NULLIF(rt0.c1, rt0.c1))) ASC, (((rt0.c0 IN (t1.c38, t1.c0))) BETWEEN (((t1.c38) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE t0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN t0.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END));
SELECT COUNT(*) FROM rt0, t1, vt1, t0 WHERE (rt0.c4) ORDER BY (((((t1.c0)AND(rt0.c4)))OR(t1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t1, vt1, t0 ORDER BY (((((t1.c0)AND(rt0.c4)))OR(t1.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t1, vt1, t0 WHERE (rt0.c4) ORDER BY (((((t1.c0)AND(rt0.c4)))OR(t1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0, t1, vt1, t0 ORDER BY (((((t1.c0)AND(rt0.c4)))OR(t1.c0)) IN ()));
SELECT COUNT(*) FROM rt0, t1, vt1, t0 WHERE (rt0.c4) ORDER BY (((((t1.c0)AND(rt0.c4)))OR(t1.c0)) IN ());
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c4 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN NULL THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (CAST('-50482884' AS NUMERIC)) AND ('O6\1lFV')) WHERE (CASE WHEN (rt0.c4 IN ()) THEN (+ (t1.c38)) WHEN (+ (t0.c0)) THEN ((rt0.c4)<=(t0.c0)) WHEN CAST(rt0.c4 AS TEXT) THEN (~ (0.67910232265243)) ELSE CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c4 IN ()) THEN (+ (t1.c38)) WHEN (+ (t0.c0)) THEN ((rt0.c4)<=(t0.c0)) WHEN CAST(rt0.c4 AS TEXT) THEN (~ (0.67910232265243)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c4 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN NULL THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (CAST('-50482884' AS NUMERIC)) AND ('O6\1lFV')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c4 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN NULL THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (CAST('-50482884' AS NUMERIC)) AND ('O6\1lFV')) WHERE (CASE WHEN (rt0.c4 IN ()) THEN (+ (t1.c38)) WHEN (+ (t0.c0)) THEN ((rt0.c4)<=(t0.c0)) WHEN CAST(rt0.c4 AS TEXT) THEN (~ (0.67910232265243)) ELSE CAST(rt0.c1 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c4 IN ()) THEN (+ (t1.c38)) WHEN (+ (t0.c0)) THEN ((rt0.c4)<=(t0.c0)) WHEN CAST(rt0.c4 AS TEXT) THEN (~ (0.67910232265243)) ELSE CAST(rt0.c1 AS TEXT) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c4 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN NULL THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (CAST('-50482884' AS NUMERIC)) AND ('O6\1lFV')));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON rt0.c4 FULL OUTER JOIN t0 ON ((CASE rt0.c1  WHEN NULL THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (CAST('-50482884' AS NUMERIC)) AND ('O6\1lFV')) WHERE (CASE WHEN (rt0.c4 IN ()) THEN (+ (t1.c38)) WHEN (+ (t0.c0)) THEN ((rt0.c4)<=(t0.c0)) WHEN CAST(rt0.c4 AS TEXT) THEN (~ (0.67910232265243)) ELSE CAST(rt0.c1 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((json_patch(vt0.c0, vt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((json_patch(vt0.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((json_patch(vt0.c0, vt1.c0))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((json_patch(vt0.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt0.c0)) BETWEEN (((NOT (t0.c0)))) AND ((json_patch(vt0.c0, vt1.c0))))) ORDER BY NULL ASC;
SELECT * FROM vt0, t1, t0, vt1, rt0 WHERE (0.07140991271757702);
SELECT SUM(count) FROM (SELECT ((0.07140991271757702) IS TRUE)  as count FROM vt0, t1, t0, vt1, rt0);
SELECT * FROM vt0, t1, t0, vt1, rt0 WHERE (0.07140991271757702);
SELECT SUM(count) FROM (SELECT ((0.07140991271757702) IS TRUE)  as count FROM vt0, t1, t0, vt1, rt0);
SELECT * FROM vt0, t1, t0, vt1, rt0 WHERE (0.07140991271757702);
SELECT COUNT(*) FROM t1, t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(x'' AS INTEGER))IS(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt0.c0)) AS BLOB) WHERE (((rt0.c0)>(CASE WHEN t1.c0 THEN rt0.c2 END))) ORDER BY (+ (((t1.c38)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>(CASE WHEN t1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t1, t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(x'' AS INTEGER))IS(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt0.c0)) AS BLOB) ORDER BY (+ (((t1.c38)&(vt1.c0)))));
SELECT COUNT(*) FROM t1, t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(x'' AS INTEGER))IS(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt0.c0)) AS BLOB) WHERE (((rt0.c0)>(CASE WHEN t1.c0 THEN rt0.c2 END))) ORDER BY (+ (((t1.c38)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)>(CASE WHEN t1.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM t1, t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(x'' AS INTEGER))IS(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt0.c0)) AS BLOB) ORDER BY (+ (((t1.c38)&(vt1.c0)))));
SELECT COUNT(*) FROM t1, t0, rt0 RIGHT OUTER JOIN vt0 ON ((CAST(x'' AS INTEGER))IS(CAST(vt0.c0 AS TEXT))) RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)LIKE(vt0.c0)) AS BLOB) WHERE (((rt0.c0)>(CASE WHEN t1.c0 THEN rt0.c2 END))) ORDER BY (+ (((t1.c38)&(vt1.c0))));
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c4) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c4) IS FALSE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE (((((rt0.c4) IS FALSE)) NOT NULL));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((NULL)IS(vt0.c0))) IS TRUE)) ORDER BY MIN(((t1.c38)>>(t1.c38)), CASE WHEN t1.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY MIN(((t1.c38)>>(t1.c38)), CASE WHEN t1.c0 THEN vt0.c0 END) ASC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((NULL)IS(vt0.c0))) IS TRUE)) ORDER BY MIN(((t1.c38)>>(t1.c38)), CASE WHEN t1.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)IS(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY MIN(((t1.c38)>>(t1.c38)), CASE WHEN t1.c0 THEN vt0.c0 END) ASC);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((NULL)IS(vt0.c0))) IS TRUE)) ORDER BY MIN(((t1.c38)>>(t1.c38)), CASE WHEN t1.c0 THEN vt0.c0 END) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE RTRIM ELSE vt0.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'4f8e');
SELECT SUM(count) FROM (SELECT ((x'4f8e') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'4f8e');
SELECT SUM(count) FROM (SELECT ((x'4f8e') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (x'4f8e');
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON (vt1.c0 IN (((-6.23162262E8) ISNULL))) INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c38)))OR(t1.c0)))OR(vt1.c0))) AND (x'')) WHERE (((((vt1.c0) ISNULL))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))OR(t1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (vt1.c0 IN (((-6.23162262E8) ISNULL))) INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c38)))OR(t1.c0)))OR(vt1.c0))) AND (x'')));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN t1 ON (vt1.c0 IN (((-6.23162262E8) ISNULL))) INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c38)))OR(t1.c0)))OR(vt1.c0))) AND (x'')) WHERE (((((vt1.c0) ISNULL))OR(t1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL))OR(t1.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN t1 ON (vt1.c0 IN (((-6.23162262E8) ISNULL))) INNER JOIN vt1 ON ((CAST(t1.c0 AS INTEGER)) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t1.c38)))OR(t1.c0)))OR(vt1.c0))) AND (x'')));
SELECT COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((((((((t1.c38)AND(0.5717816344718809)))OR(vt0.c0))))>=((((vt1.c0) IS FALSE))))) ORDER BY (~ (((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c38)AND(0.5717816344718809)))OR(vt0.c0))))>=((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY (~ (((NULL) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((((((((t1.c38)AND(0.5717816344718809)))OR(vt0.c0))))>=((((vt1.c0) IS FALSE))))) ORDER BY (~ (((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c38)AND(0.5717816344718809)))OR(vt0.c0))))>=((((vt1.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, t0, t1, vt1 ORDER BY (~ (((NULL) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((((((((t1.c38)AND(0.5717816344718809)))OR(vt0.c0))))>=((((vt1.c0) IS FALSE))))) ORDER BY (~ (((NULL) NOTNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, t1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, t0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((((0.2440409939132977 IN ()))*(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((0.2440409939132977 IN ()))*(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((((0.2440409939132977 IN ()))*(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((0.2440409939132977 IN ()))*(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt0, t1, t0 WHERE ((((0.2440409939132977 IN ()))*(CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)));
SELECT * FROM vt1 WHERE (((((vt1.c0)=(NULL)))/((vt1.c0 IN ())))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) WHEN RTRIM(vt1.c0) THEN json_remove(vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(NULL)))/((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) WHEN RTRIM(vt1.c0) THEN json_remove(vt1.c0, vt1.c0) END ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)=(NULL)))/((vt1.c0 IN ())))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) WHEN RTRIM(vt1.c0) THEN json_remove(vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)==(NULL)))/((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) WHEN RTRIM(vt1.c0) THEN json_remove(vt1.c0, vt1.c0) END ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)=(NULL)))/((vt1.c0 IN ())))) ORDER BY CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)<=(vt1.c0)) WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) WHEN RTRIM(vt1.c0) THEN json_remove(vt1.c0, vt1.c0) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c4) IS TRUE))>(((vt0.c0) BETWEEN (9.10006721E8) AND (vt0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))>(((vt0.c0) BETWEEN (9.10006721E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1 ORDER BY ((((t0.c0)<=(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c4) IS TRUE))>(((vt0.c0) BETWEEN (9.10006721E8) AND (vt0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS TRUE))>(((vt0.c0) BETWEEN (9.10006721E8) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1 ORDER BY ((((t0.c0)<=(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (((((rt0.c4) IS TRUE))>(((vt0.c0) BETWEEN (9.10006721E8) AND (vt0.c0))))) ORDER BY ((((t0.c0)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c38) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c38) IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c38) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t1.c38) IS TRUE)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((- (((t1.c38) IS TRUE))));
SELECT ALL * FROM t1, vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((rt0.c2)))) ORDER BY CASE rt0.c0  WHEN SQLITE_SOURCE_ID() THEN vt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((t1.c38)<>(t1.c0)) WHEN x'b2b8' COLLATE NOCASE THEN ((t1.c0) IS FALSE) WHEN IFNULL(DISTINCT rt0.c2, vt1.c0) THEN (('0.42905374885680736') ISNULL) WHEN rt0.c0 THEN ((vt1.c0) NOT NULL) ELSE t1.c38 END, x'ab9c', (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((rt0.c2)))) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY CASE rt0.c0  WHEN SQLITE_SOURCE_ID() THEN vt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((t1.c38)<>(t1.c0)) WHEN x'b2b8' COLLATE NOCASE THEN ((t1.c0) IS FALSE) WHEN IFNULL(DISTINCT rt0.c2, vt1.c0) THEN (('0.42905374885680736') ISNULL) WHEN rt0.c0 THEN ((vt1.c0) NOT NULL) ELSE t1.c38 END, x'ab9c', (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (rt0.c4))))));
SELECT ALL * FROM t1, vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((rt0.c2)))) ORDER BY CASE rt0.c0  WHEN SQLITE_SOURCE_ID() THEN vt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((t1.c38)<>(t1.c0)) WHEN x'b2b8' COLLATE NOCASE THEN ((t1.c0) IS FALSE) WHEN IFNULL(DISTINCT rt0.c2, vt1.c0) THEN (('0.42905374885680736') ISNULL) WHEN rt0.c0 THEN ((vt1.c0) NOT NULL) ELSE t1.c38 END, x'ab9c', (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((rt0.c2)))) IS TRUE)  as count FROM t1, vt1, rt0 ORDER BY CASE rt0.c0  WHEN SQLITE_SOURCE_ID() THEN vt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((t1.c38)<>(t1.c0)) WHEN x'b2b8' COLLATE NOCASE THEN ((t1.c0) IS FALSE) WHEN IFNULL(DISTINCT rt0.c2, vt1.c0) THEN (('0.42905374885680736') ISNULL) WHEN rt0.c0 THEN ((vt1.c0) NOT NULL) ELSE t1.c38 END, x'ab9c', (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (rt0.c4))))));
SELECT ALL * FROM t1, vt1, rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))) AND ((rt0.c2)))) ORDER BY CASE rt0.c0  WHEN SQLITE_SOURCE_ID() THEN vt1.c0 WHEN rt0.c2 COLLATE NOCASE THEN ((t1.c38)<>(t1.c0)) WHEN x'b2b8' COLLATE NOCASE THEN ((t1.c0) IS FALSE) WHEN IFNULL(DISTINCT rt0.c2, vt1.c0) THEN (('0.42905374885680736') ISNULL) WHEN rt0.c0 THEN ((vt1.c0) NOT NULL) ELSE t1.c38 END, x'ab9c', (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (rt0.c4)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c4, rt0.c2, rt0.c2))))OR(rt0.c0)))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c4, rt0.c2, rt0.c2))))OR(rt0.c0)))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c4, rt0.c2, rt0.c2))))OR(rt0.c0)))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c4, rt0.c2, rt0.c2))))OR(rt0.c0)))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c2, rt0.c0, rt0.c0))>=((rt0.c4, rt0.c2, rt0.c2))))OR(rt0.c0)))AND(CAST(rt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN NULL WHEN 0.6393031726146674 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY rt0.c4, (rt0.c3 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c4 THEN NULL WHEN 0.6393031726146674 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4, (rt0.c3 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN NULL WHEN 0.6393031726146674 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY rt0.c4, (rt0.c3 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c4 THEN NULL WHEN 0.6393031726146674 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4, (rt0.c3 IN ()) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c4 THEN NULL WHEN 0.6393031726146674 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY rt0.c4, (rt0.c3 IN ()) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (((((((1951788254)*(t1.c0)))AND(t1.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((((t0.c0)OR(x'')))OR(t1.c0)) AS BLOB)  NULLS LAST, ((((((t1.c38)&(t1.c38)))AND(((((t1.c0)OR(vt1.c0)))AND(t1.c38)))))OR(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((1951788254)*(t1.c0)))AND(t1.c0)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY CAST(((((t0.c0)OR(x'')))OR(t1.c0)) AS BLOB)  NULLS LAST, ((((((t1.c38)&(t1.c38)))AND(((((t1.c0)OR(vt1.c0)))AND(t1.c38)))))OR(t0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (((((((1951788254)*(t1.c0)))AND(t1.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((((t0.c0)OR(x'')))OR(t1.c0)) AS BLOB)  NULLS LAST, ((((((t1.c38)&(t1.c38)))AND(((((t1.c0)OR(vt1.c0)))AND(t1.c38)))))OR(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((1951788254)*(t1.c0)))AND(t1.c0)))OR(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, t1, t0, vt1 ORDER BY CAST(((((t0.c0)OR(x'')))OR(t1.c0)) AS BLOB)  NULLS LAST, ((((((t1.c38)&(t1.c38)))AND(((((t1.c0)OR(vt1.c0)))AND(t1.c38)))))OR(t0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, t0, vt1 WHERE (((((((1951788254)*(t1.c0)))AND(t1.c0)))OR(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(((((t0.c0)OR(x'')))OR(t1.c0)) AS BLOB)  NULLS LAST, ((((((t1.c38)&(t1.c38)))AND(((((t1.c0)OR(vt1.c0)))AND(t1.c38)))))OR(t0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END) AND (UNLIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END) AND (UNLIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END) AND (UNLIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END) AND (UNLIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0, t1);
SELECT COUNT(*) FROM rt0, vt0, t0, t1 WHERE ((((~ (rt0.c2))) NOT BETWEEN (CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 END) AND (UNLIKELY(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c3 END) BETWEEN (0Xfffffffffafb946c) AND (((rt0.c0)!=(NULL))))) ORDER BY (((((0.6257955294440818)||('QU6ojag*')), (+ (rt0.c0)), ((rt0.c2) NOTNULL)))!=(((~ (rt0.c0)), (((rt0.c0))==((rt0.c3))), ((rt0.c2)/(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c3 END) BETWEEN (0xfffffffffafb946c) AND (((rt0.c0)<>(NULL))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((0.6257955294440818)||('QU6ojag*')), (+ (rt0.c0)), ((rt0.c2) NOTNULL)))!=(((~ (rt0.c0)), (((rt0.c0))=((rt0.c3))), ((rt0.c2)/(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c3 END) BETWEEN (0Xfffffffffafb946c) AND (((rt0.c0)!=(NULL))))) ORDER BY (((((0.6257955294440818)||('QU6ojag*')), (+ (rt0.c0)), ((rt0.c2) NOTNULL)))!=(((~ (rt0.c0)), (((rt0.c0))==((rt0.c3))), ((rt0.c2)/(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c3 END) BETWEEN (0xfffffffffafb946c) AND (((rt0.c0)<>(NULL))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((0.6257955294440818)||('QU6ojag*')), (+ (rt0.c0)), ((rt0.c2) NOTNULL)))!=(((~ (rt0.c0)), (((rt0.c0))=((rt0.c3))), ((rt0.c2)/(vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c3 END) BETWEEN (0Xfffffffffafb946c) AND (((rt0.c0)!=(NULL))))) ORDER BY (((((0.6257955294440818)||('QU6ojag*')), (+ (rt0.c0)), ((rt0.c2) NOTNULL)))!=(((~ (rt0.c0)), (((rt0.c0))==((rt0.c3))), ((rt0.c2)/(vt0.c0))))) DESC;
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE ((((vt1.c0 IN ())) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)>(t0.c0))))>=((((rt0.c1)<<(rt0.c0)))))) ORDER BY (((((rt0.c0))>((rt0.c0)))) BETWEEN (LIKELY(DISTINCT 0.23456702519308426)) AND (((rt0.c1) NOT NULL))) ASC  NULLS LAST, (NOT (((rt0.c2)|(rt0.c4)))) DESC, CASE ((rt0.c2)LIKE(t0.c0))  WHEN JULIANDAY(rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE (rt0.c4 IN (rt0.c2, rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(t0.c0))))>=((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0))>((rt0.c0)))) BETWEEN (LIKELY(DISTINCT 0.23456702519308426)) AND (((rt0.c1) NOT NULL))) ASC  NULLS LAST, (NOT (((rt0.c2)|(rt0.c4)))) DESC, CASE ((rt0.c2)LIKE(t0.c0))  WHEN JULIANDAY(rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE (rt0.c4 IN (rt0.c2, rt0.c0)) END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)>(t0.c0))))>=((((rt0.c1)<<(rt0.c0)))))) ORDER BY (((((rt0.c0))>((rt0.c0)))) BETWEEN (LIKELY(DISTINCT 0.23456702519308426)) AND (((rt0.c1) NOT NULL))) ASC  NULLS LAST, (NOT (((rt0.c2)|(rt0.c4)))) DESC, CASE ((rt0.c2)LIKE(t0.c0))  WHEN JULIANDAY(rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE (rt0.c4 IN (rt0.c2, rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)>(t0.c0))))>=((((rt0.c1)<<(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c0))>((rt0.c0)))) BETWEEN (LIKELY(DISTINCT 0.23456702519308426)) AND (((rt0.c1) NOT NULL))) ASC  NULLS LAST, (NOT (((rt0.c2)|(rt0.c4)))) DESC, CASE ((rt0.c2)LIKE(t0.c0))  WHEN JULIANDAY(rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE (rt0.c4 IN (rt0.c2, rt0.c0)) END ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((rt0.c1)>(t0.c0))))>=((((rt0.c1)<<(rt0.c0)))))) ORDER BY (((((rt0.c0))>((rt0.c0)))) BETWEEN (LIKELY(DISTINCT 0.23456702519308426)) AND (((rt0.c1) NOT NULL))) ASC  NULLS LAST, (NOT (((rt0.c2)|(rt0.c4)))) DESC, CASE ((rt0.c2)LIKE(t0.c0))  WHEN JULIANDAY(rt0.c0, rt0.c0, rt0.c4) THEN ((rt0.c3) IS TRUE) ELSE (rt0.c4 IN (rt0.c2, rt0.c0)) END ASC;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((NOT (t1.c0)) IN ()) WHERE ((~ (0.21065261226009624))) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)||(t1.c38)))) DESC  NULLS LAST, (((((t1.c38))>((t1.c38)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0.21065261226009624))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((NOT (t1.c0)) IN ()) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)||(t1.c38)))) DESC  NULLS LAST, (((((t1.c38))>((t1.c38)))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((NOT (t1.c0)) IN ()) WHERE ((~ (0.21065261226009624))) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)||(t1.c38)))) DESC  NULLS LAST, (((((t1.c38))>((t1.c38)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (0.21065261226009624))) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((NOT (t1.c0)) IN ()) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)||(t1.c38)))) DESC  NULLS LAST, (((((t1.c38))>((t1.c38)))) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((NOT (t1.c0)) IN ()) WHERE ((~ (0.21065261226009624))) ORDER BY (t0.c0 COLLATE BINARY IN (((t0.c0)||(t1.c38)))) DESC  NULLS LAST, (((((t1.c38))>((t1.c38)))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((0.8937043203327031)) AND ((HEX(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((0.8937043203327031)) AND ((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((0.8937043203327031)) AND ((HEX(DISTINCT vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((0.8937043203327031)) AND ((HEX(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((0.8937043203327031)) AND ((HEX(DISTINCT vt1.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((((vt0.c0)AND(t1.c38)))OR(t0.c0)))AND(t1.c0)))OR(t1.c0)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)) RIGHT OUTER JOIN vt1 ON TRIM(((t1.c38) BETWEEN (t1.c0) AND (t1.c38)), ((vt1.c0) IS FALSE)) FULL OUTER JOIN t1 ON (+ (CAST(t1.c38 AS NUMERIC))) WHERE ((+ ((NOT (t1.c38))))) ORDER BY ((((((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(t0.c0)))OR('s')))AND((NOT (t1.c0)))))OR(CAST(x'' AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, ((x'') ISNULL) ASC, ((((NULL)>=(vt1.c0))) ISNULL) DESC, '()';
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c38))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((((vt0.c0)AND(t1.c38)))OR(t0.c0)))AND(t1.c0)))OR(t1.c0)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)) RIGHT OUTER JOIN vt1 ON TRIM(((t1.c38) BETWEEN (t1.c0) AND (t1.c38)), ((vt1.c0) IS FALSE)) FULL OUTER JOIN t1 ON (+ (CAST(t1.c38 AS NUMERIC))) ORDER BY ((((((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(t0.c0)))OR('s')))AND((NOT (t1.c0)))))OR(CAST(x'' AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, ((x'') ISNULL) ASC, ((((NULL)>=(vt1.c0))) ISNULL) DESC, '()');
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((((vt0.c0)AND(t1.c38)))OR(t0.c0)))AND(t1.c0)))OR(t1.c0)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)) RIGHT OUTER JOIN vt1 ON TRIM(((t1.c38) BETWEEN (t1.c0) AND (t1.c38)), ((vt1.c0) IS FALSE)) FULL OUTER JOIN t1 ON (+ (CAST(t1.c38 AS NUMERIC))) WHERE ((+ ((NOT (t1.c38))))) ORDER BY ((((((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(t0.c0)))OR('s')))AND((NOT (t1.c0)))))OR(CAST(x'' AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, ((x'') ISNULL) ASC, ((((NULL)>=(vt1.c0))) ISNULL) DESC, '()';
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c38))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((((((((((vt0.c0)AND(t1.c38)))OR(t0.c0)))AND(t1.c0)))OR(t1.c0)))OR(t0.c0 COLLATE RTRIM)))OR(NULL)) RIGHT OUTER JOIN vt1 ON TRIM(((t1.c38) BETWEEN (t1.c0) AND (t1.c38)), ((vt1.c0) IS FALSE)) FULL OUTER JOIN t1 ON (+ (CAST(t1.c38 AS NUMERIC))) ORDER BY ((((((((((((IFNULL(DISTINCT vt1.c0, vt1.c0))OR(t0.c0)))OR('s')))AND((NOT (t1.c0)))))OR(CAST(x'' AS NUMERIC))))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE RTRIM))  NULLS LAST, ((x'') ISNULL) ASC, ((((NULL)>=(vt1.c0))) ISNULL) DESC, '()');
SELECT ALL * FROM t0, rt0, t1, vt0, vt1 WHERE (((((((((((((CAST(rt0.c3 AS TEXT))OR(((((t0.c0)OR(rt0.c0)))AND(vt1.c0)))))AND((((NULL, t0.c0, rt0.c3)) BETWEEN ((vt1.c0, t1.c0, vt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c3))))))OR(rt0.c2)))OR((((rt0.c3))>=((rt0.c2))))))OR(NULL)))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY 0.7540861590432555 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt0.c3 AS TEXT))OR(((((t0.c0)OR(rt0.c0)))AND(vt1.c0)))))AND((((NULL, t0.c0, rt0.c3)) BETWEEN ((vt1.c0, t1.c0, vt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c3))))))OR(rt0.c2)))OR((((rt0.c3))>=((rt0.c2))))))OR(NULL)))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, t1, vt0, vt1 ORDER BY 0.7540861590432555 ASC);
SELECT ALL * FROM t0, rt0, t1, vt0, vt1 WHERE (((((((((((((CAST(rt0.c3 AS TEXT))OR(((((t0.c0)OR(rt0.c0)))AND(vt1.c0)))))AND((((NULL, t0.c0, rt0.c3)) BETWEEN ((vt1.c0, t1.c0, vt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c3))))))OR(rt0.c2)))OR((((rt0.c3))>=((rt0.c2))))))OR(NULL)))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY 0.7540861590432555 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt0.c3 AS TEXT))OR(((((t0.c0)OR(rt0.c0)))AND(vt1.c0)))))AND((((NULL, t0.c0, rt0.c3)) BETWEEN ((vt1.c0, t1.c0, vt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c3))))))OR(rt0.c2)))OR((((rt0.c3))>=((rt0.c2))))))OR(NULL)))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, rt0, t1, vt0, vt1 ORDER BY 0.7540861590432555 ASC);
SELECT ALL * FROM t0, rt0, t1, vt0, vt1 WHERE (((((((((((((CAST(rt0.c3 AS TEXT))OR(((((t0.c0)OR(rt0.c0)))AND(vt1.c0)))))AND((((NULL, t0.c0, rt0.c3)) BETWEEN ((vt1.c0, t1.c0, vt0.c0)) AND ((rt0.c4, rt0.c3, rt0.c3))))))OR(rt0.c2)))OR((((rt0.c3))>=((rt0.c2))))))OR(NULL)))AND(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY 0.7540861590432555 ASC;
SELECT * FROM vt1, t1, vt0 WHERE ((((((t1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))&(CAST(t1.c38 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))&(CAST(t1.c38 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ((((((t1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))&(CAST(t1.c38 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))&(CAST(t1.c38 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t1, vt0);
SELECT * FROM vt1, t1, vt0 WHERE ((((((t1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))&(CAST(t1.c38 AS NUMERIC))));
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((CASE t1.c38  WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c38  WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((CASE t1.c38  WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1 ORDER BY ((CASE t1.c38  WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (NULL) ORDER BY ((CASE t1.c38  WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((LIKELY(rt0.c1))+((((rt0.c2, NULL, rt0.c1, rt0.c0, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c2, t0.c0, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELY(rt0.c1))+((((rt0.c2, NULL, rt0.c1, rt0.c0, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c2, t0.c0, rt0.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((LIKELY(rt0.c1))+((((rt0.c2, NULL, rt0.c1, rt0.c0, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c2, t0.c0, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELY(rt0.c1))+((((rt0.c2, NULL, rt0.c1, rt0.c0, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c2, t0.c0, rt0.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (rt0.c1) ORDER BY ((LIKELY(rt0.c1))+((((rt0.c2, NULL, rt0.c1, rt0.c0, rt0.c4))<=((rt0.c1, rt0.c2, rt0.c2, t0.c0, rt0.c3))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1, t0, t1, vt0 NOT INDEXED WHERE ((- (SQLITE_VERSION()))) ORDER BY (NOT (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, vt1, t0, t1, vt0 ORDER BY (NOT (vt0.c0)) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, t1, vt0 NOT INDEXED WHERE ((- (SQLITE_VERSION()))) ORDER BY (NOT (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, vt1, t0, t1, vt0 ORDER BY (NOT (vt0.c0)) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, t1, vt0 NOT INDEXED WHERE ((- (SQLITE_VERSION()))) ORDER BY (NOT (vt0.c0)) ASC;
SELECT * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN t1.c0 END)|(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN t1.c0 THEN t1.c0 END)|(t1.c0))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN t1.c0 END)|(t1.c0)));
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN t1.c0 THEN t1.c0 END)|(t1.c0))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE x''  WHEN t1.c0 THEN t1.c0 END)|(t1.c0)));
SELECT * FROM t1, vt1, vt0, t0, rt0 WHERE ((x'' IN ())) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t1, vt1, vt0, t0, rt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOTNULL) ASC);
SELECT * FROM t1, vt1, vt0, t0, rt0 WHERE ((x'' IN ())) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((x'' IN ())) IS TRUE)  as count FROM t1, vt1, vt0, t0, rt0 ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOTNULL) ASC);
SELECT * FROM t1, vt1, vt0, t0, rt0 WHERE ((x'' IN ())) ORDER BY ((SQLITE_COMPILEOPTION_GET(rt0.c0)) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('o') BETWEEN ((((rt0.c0))>=((rt0.c4)))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (('o') BETWEEN ((((rt0.c0))>=((rt0.c4)))) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('o') BETWEEN ((((rt0.c0))>=((rt0.c4)))) AND (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY (('o') BETWEEN ((((rt0.c0))>=((rt0.c4)))) AND (vt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (((((vt0.c0)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE) ORDER BY (('o') BETWEEN ((((rt0.c0))>=((rt0.c4)))) AND (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, t1 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN 0.20387045823473993 ELSE x'' END)IS NOT(((vt1.c0) BETWEEN (t0.c0) AND (t1.c38))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c0 THEN 0.20387045823473993 ELSE x'' END)IS NOT(((vt1.c0) BETWEEN (t0.c0) AND (t1.c38))))) IS TRUE)  as count FROM vt1, vt0, t0, t1 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, t1 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN 0.20387045823473993 ELSE x'' END)IS NOT(((vt1.c0) BETWEEN (t0.c0) AND (t1.c38))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c0 THEN 0.20387045823473993 ELSE x'' END)IS NOT(((vt1.c0) BETWEEN (t0.c0) AND (t1.c38))))) IS TRUE)  as count FROM vt1, vt0, t0, t1 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, t1 WHERE (((CASE vt0.c0  WHEN t1.c0 THEN 0.20387045823473993 ELSE x'' END)IS NOT(((vt1.c0) BETWEEN (t0.c0) AND (t1.c38))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON CAST((~ (rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, vt1.c0)) BETWEEN ((vt0.c0, t1.c0, rt0.c2)) AND ((rt0.c3, vt1.c0, rt0.c1))))LIKE(x'bca9')) INNER JOIN vt1 ON (((rt0.c2 IN ()))-(((vt0.c0)>=(vt0.c0)))) WHERE (((((((-2.93702478E8)||(NULL)))AND((0.5148275574361248 IN ()))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((-2.93702478E8)||(NULL)))AND((0.5148275574361248 IN ()))))OR(vt1.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST((~ (rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, vt1.c0)) BETWEEN ((vt0.c0, t1.c0, rt0.c2)) AND ((rt0.c3, vt1.c0, rt0.c1))))LIKE(x'bca9')) INNER JOIN vt1 ON (((rt0.c2 IN ()))-(((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t1 ON CAST((~ (rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, vt1.c0)) BETWEEN ((vt0.c0, t1.c0, rt0.c2)) AND ((rt0.c3, vt1.c0, rt0.c1))))LIKE(x'bca9')) INNER JOIN vt1 ON (((rt0.c2 IN ()))-(((vt0.c0)>=(vt0.c0)))) WHERE (((((((-2.93702478E8)||(NULL)))AND((0.5148275574361248 IN ()))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((-2.93702478E8)||(NULL)))AND((0.5148275574361248 IN ()))))OR(vt1.c0))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON CAST((~ (rt0.c2)) AS TEXT) FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, vt1.c0)) BETWEEN ((vt0.c0, t1.c0, rt0.c2)) AND ((rt0.c3, vt1.c0, rt0.c1))))LIKE(x'bca9')) INNER JOIN vt1 ON (((rt0.c2 IN ()))-(((vt0.c0)>=(vt0.c0)))));
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, t1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM t0, t1 NATURAL JOIN rt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))LIKE(CASE WHEN 1244025772 THEN vt1.c0 END)) CROSS JOIN t1 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)))IS(CASE rt0.c3  WHEN rt0.c1 THEN t1.c38 WHEN vt1.c0 THEN rt0.c3 WHEN t1.c38 THEN rt0.c4 ELSE rt0.c1 END)) FULL OUTER JOIN t0 ON (((((~ (t1.c38)))AND(-1254778492)))AND(((rt0.c0) NOTNULL))) CROSS JOIN rt0 ON ((((rt0.c1)<=(t1.c38)))<(CASE t1.c38  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))LIKE(CASE WHEN 1244025772 THEN vt1.c0 END)) CROSS JOIN t1 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)))IS(CASE rt0.c3  WHEN rt0.c1 THEN t1.c38 WHEN vt1.c0 THEN rt0.c3 WHEN t1.c38 THEN rt0.c4 ELSE rt0.c1 END)) FULL OUTER JOIN t0 ON (((((~ (t1.c38)))AND(-1254778492)))AND(((rt0.c0) NOTNULL))) CROSS JOIN rt0 ON ((((rt0.c1)<=(t1.c38)))<(CASE t1.c38  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)));
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))LIKE(CASE WHEN 1244025772 THEN vt1.c0 END)) CROSS JOIN t1 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)))IS(CASE rt0.c3  WHEN rt0.c1 THEN t1.c38 WHEN vt1.c0 THEN rt0.c3 WHEN t1.c38 THEN rt0.c4 ELSE rt0.c1 END)) FULL OUTER JOIN t0 ON (((((~ (t1.c38)))AND(-1254778492)))AND(((rt0.c0) NOTNULL))) CROSS JOIN rt0 ON ((((rt0.c1)<=(t1.c38)))<(CASE t1.c38  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))LIKE(CASE WHEN 1244025772 THEN vt1.c0 END)) CROSS JOIN t1 ON ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)))IS(CASE rt0.c3  WHEN rt0.c1 THEN t1.c38 WHEN vt1.c0 THEN rt0.c3 WHEN t1.c38 THEN rt0.c4 ELSE rt0.c1 END)) FULL OUTER JOIN t0 ON (((((~ (t1.c38)))AND(-1254778492)))AND(((rt0.c0) NOTNULL))) CROSS JOIN rt0 ON ((((rt0.c1)<=(t1.c38)))<(CASE t1.c38  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN '' THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM t1 WHERE (json((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json((t1.c0 IN ()))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (json((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((json((t1.c0 IN ()))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (json((t1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((0.05055990617169648)|(rt0.c2))))) ORDER BY (~ (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((0.05055990617169648)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((0.05055990617169648)|(rt0.c2))))) ORDER BY (~ (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((0.05055990617169648)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c1) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((0.05055990617169648)|(rt0.c2))))) ORDER BY (~ (((rt0.c1) ISNULL))) DESC  NULLS FIRST;
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON (((- (rt0.c0)))<>(load_extension(vt0.c0))) INNER JOIN vt0 ON (((rt0.c4, t0.c0, vt0.c0, 0.1528887746124945, t1.c38)) BETWEEN ((((rt0.c0) IS FALSE), 0.29807327403676986, CAST(rt0.c2 AS NUMERIC), rt0.c2 COLLATE RTRIM, '-460842791')) AND ((((vt0.c0)AND(rt0.c2)), ((t1.c0)<=(rt0.c1)), ((t1.c38) IS FALSE), ((rt0.c3)|(t1.c38)), (((rt0.c1, rt0.c2, rt0.c4))<=((rt0.c3, NULL, rt0.c1)))))) WHERE (CASE WHEN NULL THEN ((rt0.c3)>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c3)>(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON (((- (rt0.c0)))!=(load_extension(vt0.c0))) INNER JOIN vt0 ON (((rt0.c4, t0.c0, vt0.c0, 0.1528887746124945, t1.c38)) BETWEEN ((((rt0.c0) IS FALSE), 0.29807327403676986, CAST(rt0.c2 AS NUMERIC), rt0.c2 COLLATE RTRIM, '-460842791')) AND ((((vt0.c0)AND(rt0.c2)), ((t1.c0)<=(rt0.c1)), ((t1.c38) IS FALSE), ((rt0.c3)|(t1.c38)), (((rt0.c1, rt0.c2, rt0.c4))<=((rt0.c3, NULL, rt0.c1)))))));
SELECT * FROM t0, rt0 RIGHT OUTER JOIN t1 ON (((- (rt0.c0)))<>(load_extension(vt0.c0))) INNER JOIN vt0 ON (((rt0.c4, t0.c0, vt0.c0, 0.1528887746124945, t1.c38)) BETWEEN ((((rt0.c0) IS FALSE), 0.29807327403676986, CAST(rt0.c2 AS NUMERIC), rt0.c2 COLLATE RTRIM, '-460842791')) AND ((((vt0.c0)AND(rt0.c2)), ((t1.c0)<=(rt0.c1)), ((t1.c38) IS FALSE), ((rt0.c3)|(t1.c38)), (((rt0.c1, rt0.c2, rt0.c4))<=((rt0.c3, NULL, rt0.c1)))))) WHERE (CASE WHEN NULL THEN ((rt0.c3)>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN ((rt0.c3)>(rt0.c2)) END) IS TRUE)  as count FROM t0, rt0 RIGHT OUTER JOIN t1 ON (((- (rt0.c0)))!=(load_extension(vt0.c0))) INNER JOIN vt0 ON (((rt0.c4, t0.c0, vt0.c0, 0.1528887746124945, t1.c38)) BETWEEN ((((rt0.c0) IS FALSE), 0.29807327403676986, CAST(rt0.c2 AS NUMERIC), rt0.c2 COLLATE RTRIM, '-460842791')) AND ((((vt0.c0)AND(rt0.c2)), ((t1.c0)<=(rt0.c1)), ((t1.c38) IS FALSE), ((rt0.c3)|(t1.c38)), (((rt0.c1, rt0.c2, rt0.c4))<=((rt0.c3, NULL, rt0.c1)))))));
SELECT ALL * FROM rt0, t0, vt0, t1, vt1 WHERE (NULLIF(DISTINCT CASE WHEN t1.c38 THEN vt0.c0 ELSE t0.c0 END, CAST(vt0.c0 AS INTEGER))) ORDER BY ((t1.c38) NOT BETWEEN (rt0.c4) AND (t1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CASE WHEN t1.c38 THEN vt0.c0 ELSE t0.c0 END, CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, t0, vt0, t1, vt1 ORDER BY ((t1.c38) NOT BETWEEN (rt0.c4) AND (t1.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0, t0, vt0, t1, vt1 WHERE (NULLIF(DISTINCT CASE WHEN t1.c38 THEN vt0.c0 ELSE t0.c0 END, CAST(vt0.c0 AS INTEGER))) ORDER BY ((t1.c38) NOT BETWEEN (rt0.c4) AND (t1.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT CASE WHEN t1.c38 THEN vt0.c0 ELSE t0.c0 END, CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0, t0, vt0, t1, vt1 ORDER BY ((t1.c38) NOT BETWEEN (rt0.c4) AND (t1.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM rt0, t0, vt0, t1, vt1 WHERE (NULLIF(DISTINCT CASE WHEN t1.c38 THEN vt0.c0 ELSE t0.c0 END, CAST(vt0.c0 AS INTEGER))) ORDER BY ((t1.c38) NOT BETWEEN (rt0.c4) AND (t1.c0)) COLLATE BINARY DESC;
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN 458060399 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((vt0.c0)OR(x'')))AND(t0.c0)))OR(0.4481480622245355)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN 458060399 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((vt0.c0)OR(x'')))AND(t0.c0)))OR(0.4481480622245355)))OR(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN 458060399 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((vt0.c0)OR(x'')))AND(t0.c0)))OR(0.4481480622245355)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN 458060399 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((vt0.c0)OR(x'')))AND(t0.c0)))OR(0.4481480622245355)))OR(rt0.c2))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN 458060399 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c4 END) NOT BETWEEN ((NOT (rt0.c2))) AND (((((((((vt0.c0)OR(x'')))AND(t0.c0)))OR(0.4481480622245355)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((0X3bd2328e))>((json_quote(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0x3bd2328e))>((json_quote(t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((0X3bd2328e))>((json_quote(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0x3bd2328e))>((json_quote(t0.c0))))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE ((((0X3bd2328e))>((json_quote(t0.c0)))));
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((- (rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 END));
SELECT * FROM vt1, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((NULL)<=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND ('])')) WHEN rt0.c0 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN (NOT (rt0.c1)) THEN rt0.c4 COLLATE BINARY ELSE LOWER(rt0.c4) END) ORDER BY (((rt0.c3)-(rt0.c0)) IN (CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((NULL)<=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND ('])')) WHEN rt0.c0 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN (NOT (rt0.c1)) THEN rt0.c4 COLLATE BINARY ELSE LOWER(rt0.c4) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)-(rt0.c0)) IN (CAST(rt0.c3 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((NULL)<=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND ('])')) WHEN rt0.c0 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN (NOT (rt0.c1)) THEN rt0.c4 COLLATE BINARY ELSE LOWER(rt0.c4) END) ORDER BY (((rt0.c3)-(rt0.c0)) IN (CAST(rt0.c3 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((NULL)<=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND ('])')) WHEN rt0.c0 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN (NOT (rt0.c1)) THEN rt0.c4 COLLATE BINARY ELSE LOWER(rt0.c4) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)-(rt0.c0)) IN (CAST(rt0.c3 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (CASE SQLITE_COMPILEOPTION_USED(rt0.c2)  WHEN ((NULL)<=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND ('])')) WHEN rt0.c0 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END WHEN (NOT (rt0.c1)) THEN rt0.c4 COLLATE BINARY ELSE LOWER(rt0.c4) END) ORDER BY (((rt0.c3)-(rt0.c0)) IN (CAST(rt0.c3 AS NUMERIC)));
SELECT ALL * FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))) WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (987555537))  NULLS LAST, CASE ((vt1.c0)>=(rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN (((vt0.c0, rt0.c4, rt0.c2))<((t0.c0, rt0.c2, rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN (- (rt0.c0)) THEN (vt0.c0 IN (rt0.c4)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (987555537))  NULLS LAST, CASE ((vt1.c0)>=(rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN (((vt0.c0, rt0.c4, rt0.c2))<((t0.c0, rt0.c2, rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN (- (rt0.c0)) THEN (vt0.c0 IN (rt0.c4)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))) WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (987555537))  NULLS LAST, CASE ((vt1.c0)>=(rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN (((vt0.c0, rt0.c4, rt0.c2))<((t0.c0, rt0.c2, rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN (- (rt0.c0)) THEN (vt0.c0 IN (rt0.c4)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (987555537))  NULLS LAST, CASE ((vt1.c0)>=(rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN (((vt0.c0, rt0.c4, rt0.c2))<((t0.c0, rt0.c2, rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN (- (rt0.c0)) THEN (vt0.c0 IN (rt0.c4)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, t0, rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c3)))) WHERE (TYPEOF(DISTINCT vt1.c0 COLLATE BINARY)) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (987555537))  NULLS LAST, CASE ((vt1.c0)>=(rt0.c4))  WHEN ((rt0.c3) NOT NULL) THEN (((vt0.c0, rt0.c4, rt0.c2))<((t0.c0, rt0.c2, rt0.c2))) WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN (- (rt0.c0)) THEN (vt0.c0 IN (rt0.c4)) ELSE ((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END ASC;
SELECT ALL * FROM t1, t0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (t1.c38);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (+ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (+ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE (+ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c4) ISNULL))OR(((x'')&(rt0.c1)))))AND(((rt0.c0)=(t1.c0)))) FULL OUTER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (vt1.c0)) LEFT OUTER JOIN vt1 ON ((rt0.c3 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON json_type((- (rt0.c3))) WHERE ((((+ (rt0.c1)))|(((rt0.c2)/(rt0.c1))))) ORDER BY (((((((((((NULL))<((t0.c0))))AND(CAST(rt0.c2 AS INTEGER))))AND(((t1.c38) IS TRUE))))OR((rt0.c4 IN ()))))OR(CAST(t1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))|(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c4) ISNULL))OR(((x'')&(rt0.c1)))))AND(((rt0.c0)==(t1.c0)))) FULL OUTER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (vt1.c0)) LEFT OUTER JOIN vt1 ON ((rt0.c3 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON json_type((- (rt0.c3))) ORDER BY (((((((((((NULL))<((t0.c0))))AND(CAST(rt0.c2 AS INTEGER))))AND(((t1.c38) IS TRUE))))OR((rt0.c4 IN ()))))OR(CAST(t1.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c4) ISNULL))OR(((x'')&(rt0.c1)))))AND(((rt0.c0)=(t1.c0)))) FULL OUTER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (vt1.c0)) LEFT OUTER JOIN vt1 ON ((rt0.c3 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON json_type((- (rt0.c3))) WHERE ((((+ (rt0.c1)))|(((rt0.c2)/(rt0.c1))))) ORDER BY (((((((((((NULL))<((t0.c0))))AND(CAST(rt0.c2 AS INTEGER))))AND(((t1.c38) IS TRUE))))OR((rt0.c4 IN ()))))OR(CAST(t1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1)))|(((rt0.c2)/(rt0.c1))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c4) ISNULL))OR(((x'')&(rt0.c1)))))AND(((rt0.c0)==(t1.c0)))) FULL OUTER JOIN t0 ON ((((vt0.c0) NOTNULL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (vt1.c0)) LEFT OUTER JOIN vt1 ON ((rt0.c3 COLLATE NOCASE) ISNULL) RIGHT OUTER JOIN vt0 ON json_type((- (rt0.c3))) ORDER BY (((((((((((NULL))<((t0.c0))))AND(CAST(rt0.c2 AS INTEGER))))AND(((t1.c38) IS TRUE))))OR((rt0.c4 IN ()))))OR(CAST(t1.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t1, rt0, vt0 WHERE (CASE (~ (vt1.c0))  WHEN TOTAL_CHANGES() THEN ABS(DISTINCT vt0.c0) END) ORDER BY ((t0.c0 IN (NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN TOTAL_CHANGES() THEN ABS(DISTINCT vt0.c0) END) IS TRUE)  as count FROM t0, vt1, t1, rt0, vt0 ORDER BY ((t0.c0 IN (NULL)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t1, rt0, vt0 WHERE (CASE (~ (vt1.c0))  WHEN TOTAL_CHANGES() THEN ABS(DISTINCT vt0.c0) END) ORDER BY ((t0.c0 IN (NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt1.c0))  WHEN TOTAL_CHANGES() THEN ABS(DISTINCT vt0.c0) END) IS TRUE)  as count FROM t0, vt1, t1, rt0, vt0 ORDER BY ((t0.c0 IN (NULL)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED, t1, rt0, vt0 WHERE (CASE (~ (vt1.c0))  WHEN TOTAL_CHANGES() THEN ABS(DISTINCT vt0.c0) END) ORDER BY ((t0.c0 IN (NULL)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c4)))))OR((((t0.c0)) NOT BETWEEN ((NULL)) AND ((''))))))OR(rt0.c2)))AND(((t0.c0)GLOB('윂''4')))), ((((rt0.c4)==(rt0.c2)))>>(((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c4)))))OR((((t0.c0)) NOT BETWEEN ((NULL)) AND ((''))))))OR(rt0.c2)))AND(((t0.c0)GLOB('윂''4')))), ((((rt0.c4)==(rt0.c2)))>>(((rt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c4)))))OR((((t0.c0)) NOT BETWEEN ((NULL)) AND ((''))))))OR(rt0.c2)))AND(((t0.c0)GLOB('윂''4')))), ((((rt0.c4)==(rt0.c2)))>>(((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c4)))))OR((((t0.c0)) NOT BETWEEN ((NULL)) AND ((''))))))OR(rt0.c2)))AND(((t0.c0)GLOB('윂''4')))), ((((rt0.c4)==(rt0.c2)))>>(((rt0.c0) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(((rt0.c4)>=(rt0.c4)))))OR((((t0.c0)) NOT BETWEEN ((NULL)) AND ((''))))))OR(rt0.c2)))AND(((t0.c0)GLOB('윂''4')))), ((((rt0.c4)==(rt0.c2)))>>(((rt0.c0) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c38 COLLATE BINARY) AND (((t1.c38) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c38 COLLATE BINARY) AND (((t1.c38) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c38 COLLATE BINARY) AND (((t1.c38) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (t1.c38 COLLATE BINARY) AND (((t1.c38) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((t1.c0) BETWEEN (t1.c38 COLLATE BINARY) AND (((t1.c38) NOTNULL))));
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE ((+ (']\r'))) ORDER BY CASE (~ (rt0.c4))  WHEN CAST(t1.c38 AS TEXT) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT (((+ (']\r'))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t1 ORDER BY CASE (~ (rt0.c4))  WHEN CAST(t1.c38 AS TEXT) THEN rt0.c2 END);
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE ((+ (']\r'))) ORDER BY CASE (~ (rt0.c4))  WHEN CAST(t1.c38 AS TEXT) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT (((+ (']\r'))) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN t1 ORDER BY CASE (~ (rt0.c4))  WHEN CAST(t1.c38 AS TEXT) THEN rt0.c2 END);
SELECT * FROM vt1, rt0 NATURAL JOIN t1 WHERE ((+ (']\r'))) ORDER BY CASE (~ (rt0.c4))  WHEN CAST(t1.c38 AS TEXT) THEN rt0.c2 END;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0Xffffffffe48818d9 THEN (t0.c0 IN ()) ELSE ('-2088803256' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0xffffffffe48818d9 THEN (t0.c0 IN ()) ELSE ('-2088803256' IN ()) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0Xffffffffe48818d9 THEN (t0.c0 IN ()) ELSE ('-2088803256' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0xffffffffe48818d9 THEN (t0.c0 IN ()) ELSE ('-2088803256' IN ()) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN 0Xffffffffe48818d9 THEN (t0.c0 IN ()) ELSE ('-2088803256' IN ()) END);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT vt0.c0, rt0.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c3 END THEN (~ (rt0.c2)) WHEN ((t1.c0)*(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 END THEN (('1157874297')OR(rt0.c3)) END FULL OUTER JOIN vt0 ON '' COLLATE NOCASE WHERE ((((((((((- (rt0.c1)))AND((- (rt0.c4)))))OR((rt0.c3 IN ()))))OR(t1.c38)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c1)))AND((- (rt0.c4)))))OR((rt0.c3 IN ()))))OR(t1.c38)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT vt0.c0, rt0.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c3 END THEN (~ (rt0.c2)) WHEN ((t1.c0)*(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 END THEN (('1157874297')OR(rt0.c3)) END FULL OUTER JOIN vt0 ON '' COLLATE NOCASE ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT vt0.c0, rt0.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c3 END THEN (~ (rt0.c2)) WHEN ((t1.c0)*(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 END THEN (('1157874297')OR(rt0.c3)) END FULL OUTER JOIN vt0 ON '' COLLATE NOCASE WHERE ((((((((((- (rt0.c1)))AND((- (rt0.c4)))))OR((rt0.c3 IN ()))))OR(t1.c38)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c1)))AND((- (rt0.c4)))))OR((rt0.c3 IN ()))))OR(t1.c38)))OR(SQLITE_COMPILEOPTION_GET(rt0.c4)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t1 ON COALESCE(DISTINCT vt0.c0, rt0.c2) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1))  WHEN CASE vt0.c0  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c3 END THEN (~ (rt0.c2)) WHEN ((t1.c0)*(rt0.c3)) THEN (- (rt0.c1)) WHEN CASE WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 END THEN (('1157874297')OR(rt0.c3)) END FULL OUTER JOIN vt0 ON '' COLLATE NOCASE ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, rt0, t0, vt1 WHERE ((((rt0.c2)+(vt1.c0)) IN ((+ (rt0.c3)), ((rt0.c4)>(-460842791)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(vt1.c0)) IN ((+ (rt0.c3)), ((rt0.c4)>(-460842791))))) IS TRUE)  as count FROM vt0, t1, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, t0, vt1 WHERE ((((rt0.c2)+(vt1.c0)) IN ((+ (rt0.c3)), ((rt0.c4)>(-460842791)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)+(vt1.c0)) IN ((+ (rt0.c3)), ((rt0.c4)>(-460842791))))) IS TRUE)  as count FROM vt0, t1, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t1, rt0, t0, vt1 WHERE ((((rt0.c2)+(vt1.c0)) IN ((+ (rt0.c3)), ((rt0.c4)>(-460842791)))));
SELECT * FROM t1 CROSS JOIN vt1 ON ((t1.c0 COLLATE RTRIM)<<((t1.c38 IN ()))) RIGHT OUTER JOIN vt0 ON (((- (t0.c0))) BETWEEN (((vt1.c0)==(vt0.c0))) AND ((rt0.c2 IN (t1.c0)))) INNER JOIN rt0 ON ((((rt0.c1)GLOB(t0.c0)))OR(CASE t1.c0  WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffe685ba32 THEN NULL END)) RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOT NULL) WHERE ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN rt0.c1 ELSE rt0.c1 END IN ())) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((t1.c0 COLLATE RTRIM)<<((t1.c38 IN ()))) RIGHT OUTER JOIN vt0 ON (((- (t0.c0))) BETWEEN (((vt1.c0)==(vt0.c0))) AND ((rt0.c2 IN (t1.c0)))) INNER JOIN rt0 ON ((((rt0.c1)GLOB(t0.c0)))OR(CASE t1.c0  WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffe685ba32 THEN NULL END)) RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOT NULL) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN vt1 ON ((t1.c0 COLLATE RTRIM)<<((t1.c38 IN ()))) RIGHT OUTER JOIN vt0 ON (((- (t0.c0))) BETWEEN (((vt1.c0)==(vt0.c0))) AND ((rt0.c2 IN (t1.c0)))) INNER JOIN rt0 ON ((((rt0.c1)GLOB(t0.c0)))OR(CASE t1.c0  WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffe685ba32 THEN NULL END)) RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOT NULL) WHERE ((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN rt0.c1 ELSE rt0.c1 END IN ())) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'' WHEN NULL THEN rt0.c1 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM t1 CROSS JOIN vt1 ON ((t1.c0 COLLATE RTRIM)<<((t1.c38 IN ()))) RIGHT OUTER JOIN vt0 ON (((- (t0.c0))) BETWEEN (((vt1.c0)==(vt0.c0))) AND ((rt0.c2 IN (t1.c0)))) INNER JOIN rt0 ON ((((rt0.c1)GLOB(t0.c0)))OR(CASE t1.c0  WHEN rt0.c4 THEN rt0.c0 WHEN vt0.c0 THEN t1.c0 WHEN t1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffe685ba32 THEN NULL END)) RIGHT OUTER JOIN t0 ON ((CAST(vt0.c0 AS REAL)) NOT NULL) ORDER BY ((((vt0.c0) NOT NULL)) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (NOT (rt0.c1))  WHEN ((vt1.c0)<(rt0.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (-279872308)) WHEN (rt0.c4 IN ()) THEN (vt0.c0 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END INNER JOIN t0 ON (~ (((t0.c0) BETWEEN (t0.c0) AND (NULL)))) WHERE ((vt0.c0 IN (rt0.c0, 0.6002880112430399)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt0.c0, 0.6002880112430399)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (NOT (rt0.c1))  WHEN ((vt1.c0)<(rt0.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (-279872308)) WHEN (rt0.c4 IN ()) THEN (vt0.c0 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END INNER JOIN t0 ON (~ (((t0.c0) BETWEEN (t0.c0) AND (NULL)))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (NOT (rt0.c1))  WHEN ((vt1.c0)<(rt0.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (-279872308)) WHEN (rt0.c4 IN ()) THEN (vt0.c0 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END INNER JOIN t0 ON (~ (((t0.c0) BETWEEN (t0.c0) AND (NULL)))) WHERE ((vt0.c0 IN (rt0.c0, 0.6002880112430399)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (rt0.c0, 0.6002880112430399)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (NOT (rt0.c1))  WHEN ((vt1.c0)<(rt0.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (-279872308)) WHEN (rt0.c4 IN ()) THEN (vt0.c0 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END INNER JOIN t0 ON (~ (((t0.c0) BETWEEN (t0.c0) AND (NULL)))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON CASE (NOT (rt0.c1))  WHEN ((vt1.c0)<(rt0.c0)) THEN (NOT (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (-279872308)) WHEN (rt0.c4 IN ()) THEN (vt0.c0 IN ()) ELSE ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) END INNER JOIN t0 ON (~ (((t0.c0) BETWEEN (t0.c0) AND (NULL)))) WHERE ((vt0.c0 IN (rt0.c0, 0.6002880112430399)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) ORDER BY ((((rt0.c3)<=(rt0.c2)))%(((rt0.c4)AND('6P(NaNB'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<=(rt0.c2)))%(((rt0.c4)AND('6P(NaNB')))));
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) ORDER BY ((((rt0.c3)<=(rt0.c2)))%(((rt0.c4)AND('6P(NaNB'))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<=(rt0.c2)))%(((rt0.c4)AND('6P(NaNB')))));
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER)) ORDER BY ((((rt0.c3)<=(rt0.c2)))%(((rt0.c4)AND('6P(NaNB'))));
SELECT * FROM t1, t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c0)))||(CASE WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))||(CASE WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, t0, rt0, vt1, vt0);
SELECT * FROM t1, t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c0)))||(CASE WHEN t0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))||(CASE WHEN t0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM t1, t0, rt0, vt1, vt0);
SELECT * FROM t1, t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c0)))||(CASE WHEN t0.c0 THEN rt0.c0 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL, t0.c0, t0.c0))))>>(0.7424486497086916));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL, t0.c0, t0.c0))))>>(0.7424486497086916)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL, t0.c0, t0.c0))))>>(0.7424486497086916));
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL, t0.c0, t0.c0))))>>(0.7424486497086916)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, NULL, t0.c0, t0.c0))))>>(0.7424486497086916));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c4))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY (((rt0.c4) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c4))) ELSE rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOTNULL) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c4))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY (((rt0.c4) NOTNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c4))) ELSE rt0.c4 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4) NOTNULL) IN ())  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c4) NOT NULL)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN (((rt0.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c4))) ELSE rt0.c4 COLLATE NOCASE END) ORDER BY (((rt0.c4) NOTNULL) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) ORDER BY '301473087' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY '301473087' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) ORDER BY '301473087' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, vt0 ORDER BY '301473087' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE ((((~ (vt0.c0)))&(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c0))))) ORDER BY '301473087' DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (CHAR(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHAR(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CHAR(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CHAR(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CHAR(vt1.c0, vt1.c0, vt1.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE (CAST(((rt0.c2)!=(0Xfffffffffe87cee5)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<>(0Xfffffffffe87cee5)) AS TEXT)) IS TRUE)  as count FROM t1, vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE (CAST(((rt0.c2)!=(0Xfffffffffe87cee5)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)<>(0Xfffffffffe87cee5)) AS TEXT)) IS TRUE)  as count FROM t1, vt1, t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t1, vt1, t0, vt0, rt0 WHERE (CAST(((rt0.c2)!=(0Xfffffffffe87cee5)) AS TEXT));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c38))) NOT NULL)) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c38))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c38))) NOT NULL)) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c38))) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c38))) NOT NULL)) ORDER BY ((((t1.c0) NOTNULL)) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((NULL)==(((x'')&(rt0.c0)))) WHERE (t0.c0) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((NULL)=(((x'')&(rt0.c0)))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((NULL)==(((x'')&(rt0.c0)))) WHERE (t0.c0) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((NULL)=(((x'')&(rt0.c0)))) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON ((NULL)==(((x'')&(rt0.c0)))) WHERE (t0.c0) ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (rt0.c0) AND (rt0.c1 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((((((rt0.c4)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c4 END, rt0.c0))!=((highlight(vt0.c0, rt0.c2, rt0.c1, vt0.c0), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c4)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c4 END, rt0.c0))<>((highlight(vt0.c0, rt0.c2, rt0.c1, vt0.c0), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((((((rt0.c4)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c4 END, rt0.c0))!=((highlight(vt0.c0, rt0.c2, rt0.c1, vt0.c0), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c4)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c4 END, rt0.c0))<>((highlight(vt0.c0, rt0.c2, rt0.c1, vt0.c0), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((((((((((rt0.c4)OR(rt0.c1)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c4 END, rt0.c0))!=((highlight(vt0.c0, rt0.c2, rt0.c1, vt0.c0), ((((rt0.c3)OR(rt0.c4)))AND(rt0.c1)), CASE WHEN rt0.c3 THEN rt0.c3 END)))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t1 WHERE (LTRIM(0Xffffffff8509e1bb COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LTRIM(0xffffffff8509e1bb COLLATE NOCASE)) IS TRUE)  as count FROM t0, vt1, rt0, t1);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t1 WHERE (LTRIM(0Xffffffff8509e1bb COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LTRIM(0xffffffff8509e1bb COLLATE NOCASE)) IS TRUE)  as count FROM t0, vt1, rt0, t1);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t1 WHERE (LTRIM(0Xffffffff8509e1bb COLLATE NOCASE));
SELECT ALL * FROM rt0, vt0, vt1, t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)=(rt0.c4)))AND((+ (rt0.c0)))))AND((vt0.c0 IN ()))) WHERE (((((t1.c38)<(rt0.c2)))<>((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c38)<(rt0.c2)))<>((~ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)=(rt0.c4)))AND((+ (rt0.c0)))))AND((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0, vt1, t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)=(rt0.c4)))AND((+ (rt0.c0)))))AND((vt0.c0 IN ()))) WHERE (((((t1.c38)<(rt0.c2)))<>((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c38)<(rt0.c2)))<>((~ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)=(rt0.c4)))AND((+ (rt0.c0)))))AND((vt0.c0 IN ()))));
SELECT ALL * FROM rt0, vt0, vt1, t0 RIGHT OUTER JOIN t1 ON ((((((t0.c0)=(rt0.c4)))AND((+ (rt0.c0)))))AND((vt0.c0 IN ()))) WHERE (((((t1.c38)<(rt0.c2)))<>((~ (vt1.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (CAST(('1951788254' IN ()) AS TEXT)) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('1951788254' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t1 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (CAST(('1951788254' IN ()) AS TEXT)) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('1951788254' IN ()) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED, vt0, t1 ORDER BY rt0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0, t1 WHERE (CAST(('1951788254' IN ()) AS TEXT)) ORDER BY rt0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 IN ()) IN (((((((((((((t0.c0)AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (((((((((((((t0.c0)AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 IN ()) IN (((((((((((((t0.c0)AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 IN ()) IN (((((((((((((t0.c0)AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c3 IN ()) IN (((((((((((((t0.c0)AND(rt0.c3)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE ((NULL IN ())) ORDER BY (((((t1.c0))>=((t1.c0)))) NOTNULL), (((((vt0.c0))<=((t1.c0))))IS((- (t1.c38))));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((((t1.c0))>=((t1.c0)))) NOTNULL), (((((vt0.c0))<=((t1.c0))))IS((- (t1.c38)))));
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE ((NULL IN ())) ORDER BY (((((t1.c0))>=((t1.c0)))) NOTNULL), (((((vt0.c0))<=((t1.c0))))IS((- (t1.c38))));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM vt0, t1, t0 ORDER BY (((((t1.c0))>=((t1.c0)))) NOTNULL), (((((vt0.c0))<=((t1.c0))))IS((- (t1.c38)))));
SELECT ALL COUNT(*) FROM vt0, t1, t0 WHERE ((NULL IN ())) ORDER BY (((((t1.c0))>=((t1.c0)))) NOTNULL), (((((vt0.c0))<=((t1.c0))))IS((- (t1.c38))));
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE ((((rt0.c0 IN (rt0.c3, rt0.c4))) NOT BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c3, rt0.c4))) NOT BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE ((((rt0.c0 IN (rt0.c3, rt0.c4))) NOT BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c3, rt0.c4))) NOT BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT COUNT(*) FROM rt0, vt1, t1 WHERE ((((rt0.c0 IN (rt0.c3, rt0.c4))) NOT BETWEEN ((+ (rt0.c2))) AND (((NULL) NOT NULL))));
SELECT * FROM t1, vt1, rt0 WHERE ('-293702478');
SELECT SUM(count) FROM (SELECT ALL (('-293702478') IS TRUE)  as count FROM t1, vt1, rt0);
SELECT * FROM t1, vt1, rt0 WHERE ('-293702478');
SELECT SUM(count) FROM (SELECT ALL (('-293702478') IS TRUE)  as count FROM t1, vt1, rt0);
SELECT * FROM t1, vt1, rt0 WHERE ('-293702478');
SELECT * FROM vt1 WHERE (((x'') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'') BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt1.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((((((((t1.c0)AND(t1.c38)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(x'')))OR(1157874297)))OR(CAST(t1.c38 AS REAL))))AND(((t1.c0)||(t1.c0)))))AND(((t1.c0)IS(t1.c0)))))AND((t1.c38 IN ())))) ORDER BY ((((t1.c0)OR(t1.c0)))&(((((((((t1.c0)OR(NULL)))OR(t1.c38)))OR(t1.c38)))AND(t1.c38)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c0)AND(t1.c38)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(x'')))OR(1157874297)))OR(CAST(t1.c38 AS REAL))))AND(((t1.c0)||(t1.c0)))))AND(((t1.c0)IS(t1.c0)))))AND((t1.c38 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))&(((((((((t1.c0)OR(NULL)))OR(t1.c38)))OR(t1.c38)))AND(t1.c38)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((((((((t1.c0)AND(t1.c38)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(x'')))OR(1157874297)))OR(CAST(t1.c38 AS REAL))))AND(((t1.c0)||(t1.c0)))))AND(((t1.c0)IS(t1.c0)))))AND((t1.c38 IN ())))) ORDER BY ((((t1.c0)OR(t1.c0)))&(((((((((t1.c0)OR(NULL)))OR(t1.c38)))OR(t1.c38)))AND(t1.c38)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c0)AND(t1.c38)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(x'')))OR(1157874297)))OR(CAST(t1.c38 AS REAL))))AND(((t1.c0)||(t1.c0)))))AND(((t1.c0)IS(t1.c0)))))AND((t1.c38 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0)OR(t1.c0)))&(((((((((t1.c0)OR(NULL)))OR(t1.c38)))OR(t1.c38)))AND(t1.c38)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((((((((((((t1.c0)AND(t1.c38)))AND(t1.c0)))OR(t1.c0)))AND(t1.c0)))AND(x'')))OR(1157874297)))OR(CAST(t1.c38 AS REAL))))AND(((t1.c0)||(t1.c0)))))AND(((t1.c0)IS(t1.c0)))))AND((t1.c38 IN ())))) ORDER BY ((((t1.c0)OR(t1.c0)))&(((((((((t1.c0)OR(NULL)))OR(t1.c38)))OR(t1.c38)))AND(t1.c38)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i57, vt0, rt0 WHERE (CASE CASE 2114619446  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(t0.c0 AS NUMERIC) WHEN (((rt0.c0))<=((vt0.c0))) THEN rt0.c0 WHEN '}맰-rfTY\r' THEN (+ (vt0.c0)) WHEN (((('-1621714349')AND(vt0.c0)))OR(rt0.c2)) THEN ((rt0.c3) ISNULL) WHEN CASE x''  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c4))<>((rt0.c1))) ELSE ((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)) END) ORDER BY json_array(((0Xffffffffc162b9f0)/(rt0.c0)), (vt0.c0 IN ()))  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((t0.c0)|(t0.c0)))))OR(NULL)))OR(x'')))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 2114619446  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(t0.c0 AS NUMERIC) WHEN (((rt0.c0))<=((vt0.c0))) THEN rt0.c0 WHEN '}맰-rfTY\r' THEN (+ (vt0.c0)) WHEN (((('-1621714349')AND(vt0.c0)))OR(rt0.c2)) THEN ((rt0.c3) ISNULL) WHEN CASE x''  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c4))<>((rt0.c1))) ELSE ((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0 INDEXED BY i57, vt0, rt0 ORDER BY json_array(((0xffffffffc162b9f0)/(rt0.c0)), (vt0.c0 IN ()))  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((t0.c0)|(t0.c0)))))OR(NULL)))OR(x'')))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i57, vt0, rt0 WHERE (CASE CASE 2114619446  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(t0.c0 AS NUMERIC) WHEN (((rt0.c0))<=((vt0.c0))) THEN rt0.c0 WHEN '}맰-rfTY\r' THEN (+ (vt0.c0)) WHEN (((('-1621714349')AND(vt0.c0)))OR(rt0.c2)) THEN ((rt0.c3) ISNULL) WHEN CASE x''  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c4))<>((rt0.c1))) ELSE ((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)) END) ORDER BY json_array(((0Xffffffffc162b9f0)/(rt0.c0)), (vt0.c0 IN ()))  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((t0.c0)|(t0.c0)))))OR(NULL)))OR(x'')))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE 2114619446  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c3 END  WHEN ((rt0.c1)%(rt0.c2)) THEN CAST(t0.c0 AS NUMERIC) WHEN (((rt0.c0))<=((vt0.c0))) THEN rt0.c0 WHEN '}맰-rfTY\r' THEN (+ (vt0.c0)) WHEN (((('-1621714349')AND(vt0.c0)))OR(rt0.c2)) THEN ((rt0.c3) ISNULL) WHEN CASE x''  WHEN rt0.c4 THEN t0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c4))<>((rt0.c1))) ELSE ((((vt0.c0)OR(rt0.c2)))OR(rt0.c2)) END) IS TRUE)  as count FROM t0 INDEXED BY i57, vt0, rt0 ORDER BY json_array(((0xffffffffc162b9f0)/(rt0.c0)), (vt0.c0 IN ()))  NULLS FIRST, (((((((((rt0.c4 IN ()))AND(((t0.c0)|(t0.c0)))))OR(NULL)))OR(x'')))OR(((t0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (JULIANDAY(t1.c38, NULL, rt0.c3));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(t1.c38, NULL, rt0.c3)) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (JULIANDAY(t1.c38, NULL, rt0.c3));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(t1.c38, NULL, rt0.c3)) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (JULIANDAY(t1.c38, NULL, rt0.c3));
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN (~ (t1.c0)) THEN NULLIF(DISTINCT t0.c0, t1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t1.c0)) THEN NULLIF(DISTINCT t0.c0, t1.c0) END) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN (~ (t1.c0)) THEN NULLIF(DISTINCT t0.c0, t1.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (t1.c0)) THEN NULLIF(DISTINCT t0.c0, t1.c0) END) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE (CASE WHEN (~ (t1.c0)) THEN NULLIF(DISTINCT t0.c0, t1.c0) END);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0);
SELECT ALL COUNT(*) FROM t1, t0 WHERE (NULL);
SELECT ALL * FROM rt0, vt1, t1 FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY WHERE (((((rt0.c1)>>('xm(u'))) ISNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))!=((NULL))), (CAST(rt0.c1 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>('xm(u'))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, t1 FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY ORDER BY (((rt0.c1 COLLATE NOCASE))<>((NULL))), (CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM rt0, vt1, t1 FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY WHERE (((((rt0.c1)>>('xm(u'))) ISNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))!=((NULL))), (CAST(rt0.c1 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>>('xm(u'))) ISNULL)) IS TRUE)  as count FROM rt0, vt1, t1 FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY ORDER BY (((rt0.c1 COLLATE NOCASE))<>((NULL))), (CAST(rt0.c1 AS INTEGER) IN ()));
SELECT ALL * FROM rt0, vt1, t1 FULL OUTER JOIN t0 ON CAST((~ (vt1.c0)) AS NUMERIC) FULL OUTER JOIN vt0 ON ((t0.c0) NOT NULL) COLLATE BINARY WHERE (((((rt0.c1)>>('xm(u'))) ISNULL)) ORDER BY (((rt0.c1 COLLATE NOCASE))!=((NULL))), (CAST(rt0.c1 AS INTEGER) IN ());
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN LIKELY(vt0.c0) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN TYPEOF(DISTINCT x'') WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1917894515' WHEN vt0.c0 THEN vt0.c0 END THEN ((1490634509) NOTNULL) END) ORDER BY vt1.c0, CAST(((1.0316983E7)<=(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN LIKELY(vt0.c0) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN TYPEOF(DISTINCT x'') WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1917894515' WHEN vt0.c0 THEN vt0.c0 END THEN ((1490634509) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0, CAST(((1.0316983E7)<=(vt1.c0)) AS BLOB));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN LIKELY(vt0.c0) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN TYPEOF(DISTINCT x'') WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1917894515' WHEN vt0.c0 THEN vt0.c0 END THEN ((1490634509) NOTNULL) END) ORDER BY vt1.c0, CAST(((1.0316983E7)<=(vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN LIKELY(vt0.c0) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN TYPEOF(DISTINCT x'') WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1917894515' WHEN vt0.c0 THEN vt0.c0 END THEN ((1490634509) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt1.c0, CAST(((1.0316983E7)<=(vt1.c0)) AS BLOB));
SELECT * FROM vt1, vt0 WHERE (CASE WHEN vt1.c0 THEN LIKELY(vt0.c0) WHEN ((vt1.c0)GLOB(vt0.c0)) THEN TYPEOF(DISTINCT x'') WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN '1917894515' WHEN vt0.c0 THEN vt0.c0 END THEN ((1490634509) NOTNULL) END) ORDER BY vt1.c0, CAST(((1.0316983E7)<=(vt1.c0)) AS BLOB);
SELECT * FROM rt0, vt1, t0, t1 WHERE (((0Xffffffffef605487) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0xffffffffef605487) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0, t1);
SELECT * FROM rt0, vt1, t0, t1 WHERE (((0Xffffffffef605487) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0xffffffffef605487) IS TRUE)) IS TRUE)  as count FROM rt0, vt1, t0, t1);
SELECT * FROM rt0, vt1, t0, t1 WHERE (((0Xffffffffef605487) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0, t1, rt0, t0 WHERE ((x'b16d' IN ())) ORDER BY (((~ (t1.c0)))/(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((x'b16d' IN ())) IS TRUE)  as count FROM vt0, t1, rt0, t0 ORDER BY (((~ (t1.c0)))/(((rt0.c2) NOT NULL))));
SELECT ALL * FROM vt0, t1, rt0, t0 WHERE ((x'b16d' IN ())) ORDER BY (((~ (t1.c0)))/(((rt0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((x'b16d' IN ())) IS TRUE)  as count FROM vt0, t1, rt0, t0 ORDER BY (((~ (t1.c0)))/(((rt0.c2) NOT NULL))));
SELECT ALL * FROM vt0, t1, rt0, t0 WHERE ((x'b16d' IN ())) ORDER BY (((~ (t1.c0)))/(((rt0.c2) NOT NULL)));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((~ (rt0.c0)) IN ()) LEFT OUTER JOIN t1 ON (((((((((- (rt0.c1)))OR(((NULL)>>(t1.c38)))))AND(((vt1.c0)<>(t0.c0)))))OR((NOT (rt0.c1)))))OR(((((t1.c0)AND(vt0.c0)))OR(rt0.c4)))) FULL OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c0)))OR(t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))AND(LIKELY(rt0.c1))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((((CAST(rt0.c2 AS BLOB))OR(rt0.c2)))OR(((NULL)%(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))OR(rt0.c2)))OR(((NULL)%(rt0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((~ (rt0.c0)) IN ()) LEFT OUTER JOIN t1 ON (((((((((- (rt0.c1)))OR(((NULL)>>(t1.c38)))))AND(((vt1.c0)!=(t0.c0)))))OR((NOT (rt0.c1)))))OR(((((t1.c0)AND(vt0.c0)))OR(rt0.c4)))) FULL OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c0)))OR(t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))AND(LIKELY(rt0.c1))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON ((~ (rt0.c0)) IN ()) LEFT OUTER JOIN t1 ON (((((((((- (rt0.c1)))OR(((NULL)>>(t1.c38)))))AND(((vt1.c0)<>(t0.c0)))))OR((NOT (rt0.c1)))))OR(((((t1.c0)AND(vt0.c0)))OR(rt0.c4)))) FULL OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c0)))OR(t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))AND(LIKELY(rt0.c1))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE (((((CAST(rt0.c2 AS BLOB))OR(rt0.c2)))OR(((NULL)%(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c2 AS BLOB))OR(rt0.c2)))OR(((NULL)%(rt0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((~ (rt0.c0)) IN ()) LEFT OUTER JOIN t1 ON (((((((((- (rt0.c1)))OR(((NULL)>>(t1.c38)))))AND(((vt1.c0)!=(t0.c0)))))OR((NOT (rt0.c1)))))OR(((((t1.c0)AND(vt0.c0)))OR(rt0.c4)))) FULL OUTER JOIN vt0 ON ((((((rt0.c3)OR(rt0.c0)))OR(t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON ((((((rt0.c0) BETWEEN (NULL) AND (vt0.c0)))AND(LIKELY(rt0.c1))))AND(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5549547970856822 ELSE t0.c0 END)LIKE(((t0.c0)GLOB(t0.c0))))) ORDER BY t0.c0 DESC, CASE WHEN (NOT (t0.c0)) THEN load_extension(t0.c0, t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((x'')<(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(0xffffffff9f014e5a AS REAL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5549547970856822 ELSE t0.c0 END)LIKE(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CASE WHEN (NOT (t0.c0)) THEN load_extension(t0.c0, t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((x'')<(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(0Xffffffff9f014e5a AS REAL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5549547970856822 ELSE t0.c0 END)LIKE(((t0.c0)GLOB(t0.c0))))) ORDER BY t0.c0 DESC, CASE WHEN (NOT (t0.c0)) THEN load_extension(t0.c0, t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((x'')<(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(0xffffffff9f014e5a AS REAL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5549547970856822 ELSE t0.c0 END)LIKE(((t0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 DESC, CASE WHEN (NOT (t0.c0)) THEN load_extension(t0.c0, t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((x'')<(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(0Xffffffff9f014e5a AS REAL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN 0.5549547970856822 ELSE t0.c0 END)LIKE(((t0.c0)GLOB(t0.c0))))) ORDER BY t0.c0 DESC, CASE WHEN (NOT (t0.c0)) THEN load_extension(t0.c0, t0.c0) WHEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) THEN ((x'')<(t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN CAST(0xffffffff9f014e5a AS REAL) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON -1120921479 CROSS JOIN rt0 ON (+ (rt0.c4)) INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE BINARY RIGHT OUTER JOIN t1 ON ((((((((t0.c0)OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt1.c0))<((t1.c38))))))OR(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c4))<=((t1.c0))))) WHERE (((((((rt0.c3)>=(rt0.c3)))OR(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 END)))OR(LIKELY(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)>=(rt0.c3)))OR(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 END)))OR(LIKELY(DISTINCT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON -1120921479 CROSS JOIN rt0 ON (+ (rt0.c4)) INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE BINARY RIGHT OUTER JOIN t1 ON ((((((((t0.c0)OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt1.c0))<((t1.c38))))))OR(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c4))<=((t1.c0))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON -1120921479 CROSS JOIN rt0 ON (+ (rt0.c4)) INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE BINARY RIGHT OUTER JOIN t1 ON ((((((((t0.c0)OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt1.c0))<((t1.c38))))))OR(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c4))<=((t1.c0))))) WHERE (((((((rt0.c3)>=(rt0.c3)))OR(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 END)))OR(LIKELY(DISTINCT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)>=(rt0.c3)))OR(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 END)))OR(LIKELY(DISTINCT NULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON -1120921479 CROSS JOIN rt0 ON (+ (rt0.c4)) INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE BINARY RIGHT OUTER JOIN t1 ON ((((((((t0.c0)OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt1.c0))<((t1.c38))))))OR(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c4))<=((t1.c0))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON -1120921479 CROSS JOIN rt0 ON (+ (rt0.c4)) INNER JOIN vt1 ON (+ (vt1.c0)) COLLATE BINARY RIGHT OUTER JOIN t1 ON ((((((((t0.c0)OR(CAST(rt0.c1 AS NUMERIC))))OR((((vt1.c0))<((t1.c38))))))OR(((((((((rt0.c4)AND(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)))))AND((((rt0.c4))<=((t1.c0))))) WHERE (((((((rt0.c3)>=(rt0.c3)))OR(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c3 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 END)))OR(LIKELY(DISTINCT NULL))));
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((- (t1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3, '-2063010747', vt1.c0)) BETWEEN ((((x'14ab')GLOB(vt1.c0)), NULL, (- (rt0.c2)))) AND ((CASE rt0.c0  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END, 0.8048262362366689 COLLATE BINARY, ((vt1.c0) IS FALSE)))) LEFT OUTER JOIN vt1 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) IN ()) WHERE (x'') ORDER BY (- (((rt0.c4) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c3, '-2063010747', vt1.c0)) BETWEEN ((((x'14ab')GLOB(vt1.c0)), NULL, (- (rt0.c2)))) AND ((CASE rt0.c0  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END, 0.8048262362366689 COLLATE BINARY, ((vt1.c0) IS FALSE)))) LEFT OUTER JOIN vt1 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) IN ()) ORDER BY (- (((rt0.c4) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3, '-2063010747', vt1.c0)) BETWEEN ((((x'14ab')GLOB(vt1.c0)), NULL, (- (rt0.c2)))) AND ((CASE rt0.c0  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END, 0.8048262362366689 COLLATE BINARY, ((vt1.c0) IS FALSE)))) LEFT OUTER JOIN vt1 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) IN ()) WHERE (x'') ORDER BY (- (((rt0.c4) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON (((rt0.c3, '-2063010747', vt1.c0)) BETWEEN ((((x'14ab')GLOB(vt1.c0)), NULL, (- (rt0.c2)))) AND ((CASE rt0.c0  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END, 0.8048262362366689 COLLATE BINARY, ((vt1.c0) IS FALSE)))) LEFT OUTER JOIN vt1 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) IN ()) ORDER BY (- (((rt0.c4) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON (((rt0.c3, '-2063010747', vt1.c0)) BETWEEN ((((x'14ab')GLOB(vt1.c0)), NULL, (- (rt0.c2)))) AND ((CASE rt0.c0  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END, 0.8048262362366689 COLLATE BINARY, ((vt1.c0) IS FALSE)))) LEFT OUTER JOIN vt1 ON (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c4)) IN ()) WHERE (x'') ORDER BY (- (((rt0.c4) IS TRUE)));
SELECT COUNT(*) FROM t1 WHERE (json_extract((t1.c0 IN ()), t1.c0 COLLATE RTRIM)) ORDER BY ((((((t1.c38)OR(t1.c0)))OR(t1.c38))) NOT NULL), ((t1.c0 COLLATE BINARY)<>(((t1.c38)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((t1.c0 IN ()), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c38)OR(t1.c0)))OR(t1.c38))) NOT NULL), ((t1.c0 COLLATE BINARY)!=(((t1.c38)||(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (json_extract((t1.c0 IN ()), t1.c0 COLLATE RTRIM)) ORDER BY ((((((t1.c38)OR(t1.c0)))OR(t1.c38))) NOT NULL), ((t1.c0 COLLATE BINARY)<>(((t1.c38)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract((t1.c0 IN ()), t1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t1 ORDER BY ((((((t1.c38)OR(t1.c0)))OR(t1.c38))) NOT NULL), ((t1.c0 COLLATE BINARY)!=(((t1.c38)||(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE (json_extract((t1.c0 IN ()), t1.c0 COLLATE RTRIM)) ORDER BY ((((((t1.c38)OR(t1.c0)))OR(t1.c38))) NOT NULL), ((t1.c0 COLLATE BINARY)<>(((t1.c38)||(t1.c0))));
SELECT ALL * FROM t0, rt0, vt1, t1 WHERE (NULL) ORDER BY (+ ((t1.c0 IN ()))) ASC, (((((t0.c0 IN (rt0.c2, rt0.c4)))OR(vt1.c0)))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, t1 ORDER BY (+ ((t1.c0 IN ()))) ASC, (((((t0.c0 IN (rt0.c2, rt0.c4)))OR(vt1.c0)))AND(rt0.c2)) DESC);
SELECT ALL * FROM t0, rt0, vt1, t1 WHERE (NULL) ORDER BY (+ ((t1.c0 IN ()))) ASC, (((((t0.c0 IN (rt0.c2, rt0.c4)))OR(vt1.c0)))AND(rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt1, t1 ORDER BY (+ ((t1.c0 IN ()))) ASC, (((((t0.c0 IN (rt0.c2, rt0.c4)))OR(vt1.c0)))AND(rt0.c2)) DESC);
SELECT ALL * FROM t0, rt0, vt1, t1 WHERE (NULL) ORDER BY (+ ((t1.c0 IN ()))) ASC, (((((t0.c0 IN (rt0.c2, rt0.c4)))OR(vt1.c0)))AND(rt0.c2)) DESC;
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1 ORDER BY CAST((vt1.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ())) ORDER BY CAST((vt1.c0 IN ()) AS BLOB);
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((- (t1.c38)))) AND ((((0.5973109155262402) NOT BETWEEN ('f✌{z*m䜍#A') AND (t1.c38)))))) ORDER BY ((((t1.c0))==((t1.c38))) IN (CASE WHEN t1.c38 THEN t1.c38 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (((t1.c38, t1.c0, t1.c38)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), ((t1.c38) ISNULL), CASE t1.c38  WHEN t1.c38 THEN t1.c38 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END)) AND ((CASE t1.c38  WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END, ((((((((t1.c38)AND(t1.c0)))AND(t1.c38)))AND(t1.c0)))AND(t1.c38)), IFNULL(t1.c38, t1.c0)))), (~ (((((t1.c0)OR(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN (((- (t1.c38)))) AND ((((0.5973109155262402) NOT BETWEEN ('f✌{z*m䜍#A') AND (t1.c38)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0))==((t1.c38))) IN (CASE WHEN t1.c38 THEN t1.c38 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (((t1.c38, t1.c0, t1.c38)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), ((t1.c38) ISNULL), CASE t1.c38  WHEN t1.c38 THEN t1.c38 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END)) AND ((CASE t1.c38  WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END, ((((((((t1.c38)AND(t1.c0)))AND(t1.c38)))AND(t1.c0)))AND(t1.c38)), IFNULL(t1.c38, t1.c0)))), (~ (((((t1.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((- (t1.c38)))) AND ((((0.5973109155262402) NOT BETWEEN ('f✌{z*m䜍#A') AND (t1.c38)))))) ORDER BY ((((t1.c0))==((t1.c38))) IN (CASE WHEN t1.c38 THEN t1.c38 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (((t1.c38, t1.c0, t1.c38)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), ((t1.c38) ISNULL), CASE t1.c38  WHEN t1.c38 THEN t1.c38 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END)) AND ((CASE t1.c38  WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END, ((((((((t1.c38)AND(t1.c0)))AND(t1.c38)))AND(t1.c0)))AND(t1.c38)), IFNULL(t1.c38, t1.c0)))), (~ (((((t1.c0)OR(t1.c0)))OR(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) NOT BETWEEN (((- (t1.c38)))) AND ((((0.5973109155262402) NOT BETWEEN ('f✌{z*m䜍#A') AND (t1.c38)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0))==((t1.c38))) IN (CASE WHEN t1.c38 THEN t1.c38 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (((t1.c38, t1.c0, t1.c38)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), ((t1.c38) ISNULL), CASE t1.c38  WHEN t1.c38 THEN t1.c38 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END)) AND ((CASE t1.c38  WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END, ((((((((t1.c38)AND(t1.c0)))AND(t1.c38)))AND(t1.c0)))AND(t1.c38)), IFNULL(t1.c38, t1.c0)))), (~ (((((t1.c0)OR(t1.c0)))OR(t1.c0)))));
SELECT COUNT(*) FROM t1 WHERE ((((NULL)) NOT BETWEEN (((- (t1.c38)))) AND ((((0.5973109155262402) NOT BETWEEN ('f✌{z*m䜍#A') AND (t1.c38)))))) ORDER BY ((((t1.c0))==((t1.c38))) IN (CASE WHEN t1.c38 THEN t1.c38 WHEN NULL THEN t1.c0 WHEN t1.c0 THEN t1.c0 END)), (((t1.c38, t1.c0, t1.c38)) NOT BETWEEN ((CAST(t1.c0 AS TEXT), ((t1.c38) ISNULL), CASE t1.c38  WHEN t1.c38 THEN t1.c38 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 ELSE t1.c38 END)) AND ((CASE t1.c38  WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END, ((((((((t1.c38)AND(t1.c0)))AND(t1.c38)))AND(t1.c0)))AND(t1.c38)), IFNULL(t1.c38, t1.c0)))), (~ (((((t1.c0)OR(t1.c0)))OR(t1.c0))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t1 ON ((NULL) NOT BETWEEN ((((t1.c38, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, t1.c0)))) AND ((rt0.c2 IN ()))) WHERE (((('', rt0.c3, t1.c38)) NOT BETWEEN (((((0X4b0e8ca0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)), ((t1.c0) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM, (((rt0.c0))!=((rt0.c0))), ((t1.c0) BETWEEN (t1.c38) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('', rt0.c3, t1.c38)) NOT BETWEEN (((((0x4b0e8ca0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)), ((t1.c0) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))), ((t1.c0) BETWEEN (t1.c38) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON ((NULL) NOT BETWEEN ((((t1.c38, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, t1.c0)))) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t1 ON ((NULL) NOT BETWEEN ((((t1.c38, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, t1.c0)))) AND ((rt0.c2 IN ()))) WHERE (((('', rt0.c3, t1.c38)) NOT BETWEEN (((((0X4b0e8ca0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)), ((t1.c0) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM, (((rt0.c0))!=((rt0.c0))), ((t1.c0) BETWEEN (t1.c38) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('', rt0.c3, t1.c38)) NOT BETWEEN (((((0x4b0e8ca0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)), ((t1.c0) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM, (((rt0.c0))<>((rt0.c0))), ((t1.c0) BETWEEN (t1.c38) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t1 ON ((NULL) NOT BETWEEN ((((t1.c38, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, t1.c0)))) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t1 ON ((NULL) NOT BETWEEN ((((t1.c38, rt0.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c2, rt0.c2, t1.c0)))) AND ((rt0.c2 IN ()))) WHERE (((('', rt0.c3, t1.c38)) NOT BETWEEN (((((0X4b0e8ca0)) BETWEEN ((t1.c0)) AND ((vt0.c0))), ((((((((rt0.c3)AND(vt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c4)), ((t1.c0) NOT NULL))) AND ((rt0.c2 COLLATE RTRIM, (((rt0.c0))!=((rt0.c0))), ((t1.c0) BETWEEN (t1.c38) AND (rt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((- ((((vt0.c0))<=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<=((rt0.c4)))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((- ((((vt0.c0))<=((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<=((rt0.c4)))))) IS TRUE)  as count FROM t1, vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0 WHERE ((- ((((vt0.c0))<=((rt0.c4))))));
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (((((t0.c0)OR(1640452398)))AND(((t0.c0)+(t1.c38))))) ORDER BY (((vt0.c0)<>('-506397294')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(1640452398)))AND(((t0.c0)+(t1.c38))))) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY (((vt0.c0)<>('-506397294')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (((((t0.c0)OR(1640452398)))AND(((t0.c0)+(t1.c38))))) ORDER BY (((vt0.c0)<>('-506397294')) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR(1640452398)))AND(((t0.c0)+(t1.c38))))) IS TRUE)  as count FROM t1, rt0, vt0, t0 ORDER BY (((vt0.c0)<>('-506397294')) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, t0 WHERE (((((t0.c0)OR(1640452398)))AND(((t0.c0)+(t1.c38))))) ORDER BY (((vt0.c0)<>('-506397294')) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (LOWER(DISTINCT rt0.c4)) AND ((NOT (t1.c0))))) ORDER BY (((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)), (+ (NULL)), vt0.c0))!=(((rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) ASC  NULLS LAST, ((((TYPEOF(DISTINCT t1.c38))AND(t1.c0)))AND((((rt0.c0))!=((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (LOWER(DISTINCT rt0.c4)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1 NOT INDEXED ORDER BY (((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)), (+ (NULL)), vt0.c0))!=(((rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) ASC  NULLS LAST, ((((TYPEOF(DISTINCT t1.c38))AND(t1.c0)))AND((((rt0.c0))<>((NULL)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (LOWER(DISTINCT rt0.c4)) AND ((NOT (t1.c0))))) ORDER BY (((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)), (+ (NULL)), vt0.c0))!=(((rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) ASC  NULLS LAST, ((((TYPEOF(DISTINCT t1.c38))AND(t1.c0)))AND((((rt0.c0))!=((NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (LOWER(DISTINCT rt0.c4)) AND ((NOT (t1.c0))))) IS TRUE)  as count FROM rt0, vt0, t1 NOT INDEXED ORDER BY (((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)), (+ (NULL)), vt0.c0))!=(((rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) ASC  NULLS LAST, ((((TYPEOF(DISTINCT t1.c38))AND(t1.c0)))AND((((rt0.c0))<>((NULL)))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, t1 WHERE ((((rt0.c0 IN ())) BETWEEN (LOWER(DISTINCT rt0.c4)) AND ((NOT (t1.c0))))) ORDER BY (((((((((((vt0.c0)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c0)), (+ (NULL)), vt0.c0))!=(((rt0.c2 IN (rt0.c2)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c3))))) ASC  NULLS LAST, ((((TYPEOF(DISTINCT t1.c38))AND(t1.c0)))AND((((rt0.c0))!=((NULL)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((((((0.7021857501881916)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0) ISNULL))))OR(((t0.c0)|(t0.c0))))) ORDER BY ((((((t0.c0)<(t0.c0)))AND(((t0.c0)<=(t0.c0)))))AND((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((0.7021857501881916)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0) ISNULL))))OR(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)<(t0.c0)))AND(((t0.c0)<=(t0.c0)))))AND((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((((((0.7021857501881916)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0) ISNULL))))OR(((t0.c0)|(t0.c0))))) ORDER BY ((((((t0.c0)<(t0.c0)))AND(((t0.c0)<=(t0.c0)))))AND((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((0.7021857501881916)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(((t0.c0) ISNULL))))OR(((t0.c0)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)<(t0.c0)))AND(((t0.c0)<=(t0.c0)))))AND((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (((json_extract(rt0.c3, NULL, t1.c0, t0.c0))&((NULL IN ())))) ORDER BY LIKELY(((t1.c0)>(rt0.c4))), CASE WHEN t0.c0 THEN (vt0.c0 IN ()) END ASC, CAST(((rt0.c4) ISNULL) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(rt0.c3, NULL, t1.c0, t0.c0))&((NULL IN ())))) IS TRUE)  as count FROM t1, vt0, vt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) ISNULL) ORDER BY LIKELY(((t1.c0)>(rt0.c4))), CASE WHEN t0.c0 THEN (vt0.c0 IN ()) END ASC, CAST(((rt0.c4) ISNULL) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (((json_extract(rt0.c3, NULL, t1.c0, t0.c0))&((NULL IN ())))) ORDER BY LIKELY(((t1.c0)>(rt0.c4))), CASE WHEN t0.c0 THEN (vt0.c0 IN ()) END ASC, CAST(((rt0.c4) ISNULL) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(rt0.c3, NULL, t1.c0, t0.c0))&((NULL IN ())))) IS TRUE)  as count FROM t1, vt0, vt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) ISNULL) ORDER BY LIKELY(((t1.c0)>(rt0.c4))), CASE WHEN t0.c0 THEN (vt0.c0 IN ()) END ASC, CAST(((rt0.c4) ISNULL) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (((json_extract(rt0.c3, NULL, t1.c0, t0.c0))&((NULL IN ())))) ORDER BY LIKELY(((t1.c0)>(rt0.c4))), CASE WHEN t0.c0 THEN (vt0.c0 IN ()) END ASC, CAST(((rt0.c4) ISNULL) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt1, t0, rt0 WHERE (((((((((CASE '-zDD+ڋ7'  WHEN rt0.c3 THEN rt0.c0 ELSE '75- T' END)AND(((rt0.c2)LIKE(t0.c0)))))OR((NOT (rt0.c3)))))OR(((rt0.c1)<<(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-zDD+ڋ7'  WHEN rt0.c3 THEN rt0.c0 ELSE '75- T' END)AND(((rt0.c2)LIKE(t0.c0)))))OR((NOT (rt0.c3)))))OR(((rt0.c1)<<(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM t1, vt1, t0, rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, t0, rt0 WHERE (((((((((CASE '-zDD+ڋ7'  WHEN rt0.c3 THEN rt0.c0 ELSE '75- T' END)AND(((rt0.c2)LIKE(t0.c0)))))OR((NOT (rt0.c3)))))OR(((rt0.c1)<<(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE '-zDD+ڋ7'  WHEN rt0.c3 THEN rt0.c0 ELSE '75- T' END)AND(((rt0.c2)LIKE(t0.c0)))))OR((NOT (rt0.c3)))))OR(((rt0.c1)<<(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END))) IS TRUE)  as count FROM t1, vt1, t0, rt0 ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt1, t0, rt0 WHERE (((((((((CASE '-zDD+ڋ7'  WHEN rt0.c3 THEN rt0.c0 ELSE '75- T' END)AND(((rt0.c2)LIKE(t0.c0)))))OR((NOT (rt0.c3)))))OR(((rt0.c1)<<(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END))) ORDER BY (+ (rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)*(vt0.c0)) THEN '?*Lwg' COLLATE BINARY ELSE ((((t1.c0)OR(t0.c0)))AND(vt0.c0)) END CROSS JOIN t1 ON (((+ (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (vt0.c0)) WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t1.c0 END THEN ((vt0.c0)IS NOT(t1.c38)) ELSE 0.4658902306312871 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t1.c0 END THEN ((vt0.c0)IS NOT(t1.c38)) ELSE 0.4658902306312871 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)*(vt0.c0)) THEN '?*Lwg' COLLATE BINARY ELSE ((((t1.c0)OR(t0.c0)))AND(vt0.c0)) END CROSS JOIN t1 ON (((+ (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (vt0.c0)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)*(vt0.c0)) THEN '?*Lwg' COLLATE BINARY ELSE ((((t1.c0)OR(t0.c0)))AND(vt0.c0)) END CROSS JOIN t1 ON (((+ (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (vt0.c0)) WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t1.c0 END THEN ((vt0.c0)IS NOT(t1.c38)) ELSE 0.4658902306312871 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN CASE x''  WHEN vt0.c0 THEN t0.c0 ELSE t1.c0 END THEN ((vt0.c0)IS NOT(t1.c38)) ELSE 0.4658902306312871 END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE WHEN ((t1.c0)*(vt0.c0)) THEN '?*Lwg' COLLATE BINARY ELSE ((((t1.c0)OR(t0.c0)))AND(vt0.c0)) END CROSS JOIN t1 ON (((+ (vt0.c0))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (vt0.c0)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c3 THEN (x'39ebb832' IN ()) END INNER JOIN t0 ON (((vt1.c0)<=(rt0.c0)) IN ()) WHERE (((((rt0.c4)OR(-24654107)))OR(CASE WHEN t0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c0)%(rt0.c2)))GLOB(((rt0.c2)||(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(-24654107)))OR(CASE WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c3 THEN (x'39ebb832' IN ()) END INNER JOIN t0 ON (((vt1.c0)<=(rt0.c0)) IN ()) ORDER BY ((((rt0.c0)%(rt0.c2)))GLOB(((rt0.c2)||(t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c3 THEN (x'39ebb832' IN ()) END INNER JOIN t0 ON (((vt1.c0)<=(rt0.c0)) IN ()) WHERE (((((rt0.c4)OR(-24654107)))OR(CASE WHEN t0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c0)%(rt0.c2)))GLOB(((rt0.c2)||(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)OR(-24654107)))OR(CASE WHEN t0.c0 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c3 THEN (x'39ebb832' IN ()) END INNER JOIN t0 ON (((vt1.c0)<=(rt0.c0)) IN ()) ORDER BY ((((rt0.c0)%(rt0.c2)))GLOB(((rt0.c2)||(t0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN rt0.c3 THEN (x'39ebb832' IN ()) END INNER JOIN t0 ON (((vt1.c0)<=(rt0.c0)) IN ()) WHERE (((((rt0.c4)OR(-24654107)))OR(CASE WHEN t0.c0 THEN rt0.c2 END))) ORDER BY ((((rt0.c0)%(rt0.c2)))GLOB(((rt0.c2)||(t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t1 ON ((((vt0.c0)GLOB(t1.c0))) BETWEEN (LOWER(rt0.c0)) AND (((vt1.c0)OR(vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((t1.c0)%(rt0.c2))) IS TRUE) INNER JOIN vt1 ON CASE ((rt0.c4) NOTNULL)  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN (+ (t1.c0)) WHEN ((((rt0.c0)AND(rt0.c4)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)OR(t1.c38)) END WHERE (((CAST(rt0.c2 AS NUMERIC))>>(((rt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>>(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t1 ON ((((vt0.c0)GLOB(t1.c0))) BETWEEN (LOWER(rt0.c0)) AND (((vt1.c0)OR(vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((t1.c0)%(rt0.c2))) IS TRUE) INNER JOIN vt1 ON CASE ((rt0.c4) NOTNULL)  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN (+ (t1.c0)) WHEN ((((rt0.c0)AND(rt0.c4)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)OR(t1.c38)) END);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t1 ON ((((vt0.c0)GLOB(t1.c0))) BETWEEN (LOWER(rt0.c0)) AND (((vt1.c0)OR(vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((t1.c0)%(rt0.c2))) IS TRUE) INNER JOIN vt1 ON CASE ((rt0.c4) NOTNULL)  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN (+ (t1.c0)) WHEN ((((rt0.c0)AND(rt0.c4)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)OR(t1.c38)) END WHERE (((CAST(rt0.c2 AS NUMERIC))>>(((rt0.c0)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC))>>(((rt0.c0)>(rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t1 ON ((((vt0.c0)GLOB(t1.c0))) BETWEEN (LOWER(rt0.c0)) AND (((vt1.c0)OR(vt1.c0)))) RIGHT OUTER JOIN t0 ON ((((t1.c0)%(rt0.c2))) IS TRUE) INNER JOIN vt1 ON CASE ((rt0.c4) NOTNULL)  WHEN CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END THEN (+ (t1.c0)) WHEN ((((rt0.c0)AND(rt0.c4)))AND(NULL)) THEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)OR(t1.c38)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) RIGHT OUTER JOIN t1 ON json_array_length(CAST(5.24712129E8 AS NUMERIC)) INNER JOIN rt0 ON CAST(CAST(rt0.c2 AS BLOB) AS BLOB) WHERE ((((t1.c38)<>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)<>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) RIGHT OUTER JOIN t1 ON json_array_length(CAST(5.24712129E8 AS NUMERIC)) INNER JOIN rt0 ON CAST(CAST(rt0.c2 AS BLOB) AS BLOB));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) RIGHT OUTER JOIN t1 ON json_array_length(CAST(5.24712129E8 AS NUMERIC)) INNER JOIN rt0 ON CAST(CAST(rt0.c2 AS BLOB) AS BLOB) WHERE ((((t1.c38)<>(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)<>(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(CASE WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c3 END AS TEXT) RIGHT OUTER JOIN t1 ON json_array_length(CAST(5.24712129E8 AS NUMERIC)) INNER JOIN rt0 ON CAST(CAST(rt0.c2 AS BLOB) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0, t1 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN (('2052226191')) AND ((LENGTH(vt1.c0)))) CROSS JOIN vt0 ON (((((rt0.c2, vt0.c0, t1.c38))<=((t1.c0, rt0.c4, t1.c38))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (LIKELIHOOD(((rt0.c4)<(t1.c0)), 0.05515564110392668));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c4)<(t1.c0)), 0.05515564110392668)) IS TRUE)  as count FROM t0, rt0, t1 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN (('2052226191')) AND ((LENGTH(vt1.c0)))) CROSS JOIN vt0 ON (((((rt0.c2, vt0.c0, t1.c38))<=((t1.c0, rt0.c4, t1.c38))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0, t1 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN (('2052226191')) AND ((LENGTH(vt1.c0)))) CROSS JOIN vt0 ON (((((rt0.c2, vt0.c0, t1.c38))<=((t1.c0, rt0.c4, t1.c38))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (LIKELIHOOD(((rt0.c4)<(t1.c0)), 0.05515564110392668));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c4)<(t1.c0)), 0.05515564110392668)) IS TRUE)  as count FROM t0, rt0, t1 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN (('2052226191')) AND ((LENGTH(vt1.c0)))) CROSS JOIN vt0 ON (((((rt0.c2, vt0.c0, t1.c38))<=((t1.c0, rt0.c4, t1.c38))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0, t1 INNER JOIN vt1 ON (((rt0.c2)) BETWEEN (('2052226191')) AND ((LENGTH(vt1.c0)))) CROSS JOIN vt0 ON (((((rt0.c2, vt0.c0, t1.c38))<=((t1.c0, rt0.c4, t1.c38))))|(CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) WHERE (LIKELIHOOD(((rt0.c4)<(t1.c0)), 0.05515564110392668));
SELECT * FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)&(t0.c0))) NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND('-1470364021'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)&(t0.c0))) NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND('-1470364021'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)&(t0.c0))) NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND('-1470364021'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.c0))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)&(t0.c0))) NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND('-1470364021'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)));
SELECT * FROM vt1 CROSS JOIN t0 ON ((((vt1.c0)&(t0.c0))) NOT BETWEEN (((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))OR(t0.c0)))AND('-1470364021'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)) WHERE (((((t0.c0) NOT BETWEEN (vt1.c0) AND (NULL)))AND(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, t1 WHERE (CAST((((NULL, 0.9828160619341154, rt0.c4))=((x'ae98', vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (((rt0.c1)) NOT BETWEEN (((((('zw')OR(rt0.c2)))OR(t1.c38)))) AND (((((rt0.c1))>((rt0.c2)))))) ASC, ((((((((rt0.c3)OR(-2.126152832E9)))OR(((rt0.c3)LIKE(t0.c0)))))AND(CASE vt0.c0  WHEN rt0.c4 THEN t1.c38 END)))OR(rt0.c2))  NULLS LAST, (((((('鋬룴NCd膘')AND(NULL)))OR(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL, 0.9828160619341154, rt0.c4))==((x'ae98', vt0.c0, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0, t1 ORDER BY (((rt0.c1)) NOT BETWEEN (((((('zw')OR(rt0.c2)))OR(t1.c38)))) AND (((((rt0.c1))>((rt0.c2)))))) ASC, ((((((((rt0.c3)OR(-2.126152832E9)))OR(((rt0.c3)LIKE(t0.c0)))))AND(CASE vt0.c0  WHEN rt0.c4 THEN t1.c38 END)))OR(rt0.c2))  NULLS LAST, (((((('鋬룴NCd膘')AND(NULL)))OR(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, t1 WHERE (CAST((((NULL, 0.9828160619341154, rt0.c4))=((x'ae98', vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (((rt0.c1)) NOT BETWEEN (((((('zw')OR(rt0.c2)))OR(t1.c38)))) AND (((((rt0.c1))>((rt0.c2)))))) ASC, ((((((((rt0.c3)OR(-2.126152832E9)))OR(((rt0.c3)LIKE(t0.c0)))))AND(CASE vt0.c0  WHEN rt0.c4 THEN t1.c38 END)))OR(rt0.c2))  NULLS LAST, (((((('鋬룴NCd膘')AND(NULL)))OR(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL, 0.9828160619341154, rt0.c4))==((x'ae98', vt0.c0, vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, t0, t1 ORDER BY (((rt0.c1)) NOT BETWEEN (((((('zw')OR(rt0.c2)))OR(t1.c38)))) AND (((((rt0.c1))>((rt0.c2)))))) ASC, ((((((((rt0.c3)OR(-2.126152832E9)))OR(((rt0.c3)LIKE(t0.c0)))))AND(CASE vt0.c0  WHEN rt0.c4 THEN t1.c38 END)))OR(rt0.c2))  NULLS LAST, (((((('鋬룴NCd膘')AND(NULL)))OR(vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, t1 WHERE (CAST((((NULL, 0.9828160619341154, rt0.c4))=((x'ae98', vt0.c0, vt0.c0))) AS NUMERIC)) ORDER BY (((rt0.c1)) NOT BETWEEN (((((('zw')OR(rt0.c2)))OR(t1.c38)))) AND (((((rt0.c1))>((rt0.c2)))))) ASC, ((((((((rt0.c3)OR(-2.126152832E9)))OR(((rt0.c3)LIKE(t0.c0)))))AND(CASE vt0.c0  WHEN rt0.c4 THEN t1.c38 END)))OR(rt0.c2))  NULLS LAST, (((((('鋬룴NCd膘')AND(NULL)))OR(vt0.c0))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1616089660') ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (('-1616089660') IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1616089660') ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT (('-1616089660') IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ('-1616089660') ORDER BY ((t0.c0 COLLATE RTRIM)LIKE(CAST(rt0.c0 AS INTEGER)));
SELECT ALL * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (x'' IN ())) WHERE (((((((rt0.c2)<>(rt0.c3)))OR(((vt0.c0) ISNULL))))AND(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<>(rt0.c3)))OR(((vt0.c0) ISNULL))))AND(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (x'' IN ())));
SELECT ALL * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (x'' IN ())) WHERE (((((((rt0.c2)<>(rt0.c3)))OR(((vt0.c0) ISNULL))))AND(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)<>(rt0.c3)))OR(((vt0.c0) ISNULL))))AND(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (x'' IN ())));
SELECT ALL * FROM t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON UNLIKELY(DISTINCT (x'' IN ())) WHERE (((((((rt0.c2)<>(rt0.c3)))OR(((vt0.c0) ISNULL))))AND(((((((((rt0.c4)AND(rt0.c0)))OR(rt0.c1)))AND(vt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&(LTRIM(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN HEX(vt1.c0) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.9707916140602719 WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, CAST('7k' AS NUMERIC) DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)&(LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN HEX(vt1.c0) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.9707916140602719 WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, CAST('7k' AS NUMERIC) DESC  NULLS LAST, NULL);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&(LTRIM(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN HEX(vt1.c0) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.9707916140602719 WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, CAST('7k' AS NUMERIC) DESC  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)&(LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN HEX(vt1.c0) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.9707916140602719 WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, CAST('7k' AS NUMERIC) DESC  NULLS LAST, NULL);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)&(LTRIM(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0) NOTNULL) THEN HEX(vt1.c0) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.9707916140602719 WHEN vt1.c0 THEN vt1.c0 END THEN (((vt1.c0, vt1.c0, vt1.c0))!=((vt1.c0, vt1.c0, vt1.c0))) END  NULLS FIRST, CAST('7k' AS NUMERIC) DESC  NULLS LAST, NULL;
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT t1.c38, rt0.c4)))>=((LIKELY(DISTINCT rt0.c1)))) INNER JOIN vt0 ON ((((vt1.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (rt0.c4 COLLATE NOCASE)) FULL OUTER JOIN t1 ON (((rt0.c0, '%S', rt0.c2)) NOT BETWEEN ((((-1.120921479E9) IS TRUE), CASE WHEN '18801724' THEN rt0.c2 END, rt0.c4)) AND (((t0.c0 IN (vt0.c0)), CAST(rt0.c1 AS INTEGER), ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0))))) WHERE ((((((t1.c38)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))%(((vt0.c0)OR(rt0.c2))))) ORDER BY (((((((((NULL)AND(t0.c0)))AND(rt0.c1)))AND(t1.c38)))AND(t1.c0)) IN ()) ASC, ('1179795824' IN ((((vt0.c0))>=((rt0.c1)))))  NULLS LAST, (((0Xffffffffeb803d55 COLLATE RTRIM, CAST(rt0.c2 AS REAL), (- (rt0.c0))))<((((((((((((((rt0.c4)AND(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(rt0.c2)))AND(NULL)), (('rq')|(t0.c0)), (NOT (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c38)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))%(((vt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT t1.c38, rt0.c4)))>=((LIKELY(DISTINCT rt0.c1)))) INNER JOIN vt0 ON ((((vt1.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (rt0.c4 COLLATE NOCASE)) FULL OUTER JOIN t1 ON (((rt0.c0, '%S', rt0.c2)) NOT BETWEEN ((((-1.120921479E9) IS TRUE), CASE WHEN '18801724' THEN rt0.c2 END, rt0.c4)) AND (((t0.c0 IN (vt0.c0)), CAST(rt0.c1 AS INTEGER), ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0))))) ORDER BY (((((((((NULL)AND(t0.c0)))AND(rt0.c1)))AND(t1.c38)))AND(t1.c0)) IN ()) ASC, ('1179795824' IN ((((vt0.c0))>=((rt0.c1)))))  NULLS LAST, (((0xffffffffeb803d55 COLLATE RTRIM, CAST(rt0.c2 AS REAL), (- (rt0.c0))))<((((((((((((((rt0.c4)AND(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(rt0.c2)))AND(NULL)), (('rq')|(t0.c0)), (NOT (t1.c0)))))  NULLS FIRST);
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT t1.c38, rt0.c4)))>=((LIKELY(DISTINCT rt0.c1)))) INNER JOIN vt0 ON ((((vt1.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (rt0.c4 COLLATE NOCASE)) FULL OUTER JOIN t1 ON (((rt0.c0, '%S', rt0.c2)) NOT BETWEEN ((((-1.120921479E9) IS TRUE), CASE WHEN '18801724' THEN rt0.c2 END, rt0.c4)) AND (((t0.c0 IN (vt0.c0)), CAST(rt0.c1 AS INTEGER), ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0))))) WHERE ((((((t1.c38)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))%(((vt0.c0)OR(rt0.c2))))) ORDER BY (((((((((NULL)AND(t0.c0)))AND(rt0.c1)))AND(t1.c38)))AND(t1.c0)) IN ()) ASC, ('1179795824' IN ((((vt0.c0))>=((rt0.c1)))))  NULLS LAST, (((0Xffffffffeb803d55 COLLATE RTRIM, CAST(rt0.c2 AS REAL), (- (rt0.c0))))<((((((((((((((rt0.c4)AND(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(rt0.c2)))AND(NULL)), (('rq')|(t0.c0)), (NOT (t1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c38)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))%(((vt0.c0)OR(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((COALESCE(DISTINCT t1.c38, rt0.c4)))>=((LIKELY(DISTINCT rt0.c1)))) INNER JOIN vt0 ON ((((vt1.c0)LIKE(rt0.c2))) BETWEEN (((rt0.c2)LIKE(vt0.c0))) AND (rt0.c4 COLLATE NOCASE)) FULL OUTER JOIN t1 ON (((rt0.c0, '%S', rt0.c2)) NOT BETWEEN ((((-1.120921479E9) IS TRUE), CASE WHEN '18801724' THEN rt0.c2 END, rt0.c4)) AND (((t0.c0 IN (vt0.c0)), CAST(rt0.c1 AS INTEGER), ((((vt0.c0)AND(rt0.c1)))OR(vt1.c0))))) ORDER BY (((((((((NULL)AND(t0.c0)))AND(rt0.c1)))AND(t1.c38)))AND(t1.c0)) IN ()) ASC, ('1179795824' IN ((((vt0.c0))>=((rt0.c1)))))  NULLS LAST, (((0xffffffffeb803d55 COLLATE RTRIM, CAST(rt0.c2 AS REAL), (- (rt0.c0))))<((((((((((((((rt0.c4)AND(rt0.c2)))AND(vt0.c0)))OR(vt1.c0)))OR(t0.c0)))OR(rt0.c2)))AND(NULL)), (('rq')|(t0.c0)), (NOT (t1.c0)))))  NULLS FIRST);
SELECT * FROM t1 WHERE (LIKELIHOOD(DISTINCT ((t1.c38)>>(t1.c38)), 0.5937720952017526)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) IN ())  NULLS FIRST, STRFTIME((~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), 0.710626248230795, t1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t1.c38)>>(t1.c38)), 0.5937720952017526)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) IN ())  NULLS FIRST, STRFTIME((~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), 0.710626248230795, t1.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM t1 WHERE (LIKELIHOOD(DISTINCT ((t1.c38)>>(t1.c38)), 0.5937720952017526)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) IN ())  NULLS FIRST, STRFTIME((~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), 0.710626248230795, t1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((t1.c38)>>(t1.c38)), 0.5937720952017526)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) IN ())  NULLS FIRST, STRFTIME((~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), 0.710626248230795, t1.c0 COLLATE RTRIM)  NULLS FIRST);
SELECT * FROM t1 WHERE (LIKELIHOOD(DISTINCT ((t1.c38)>>(t1.c38)), 0.5937720952017526)) ORDER BY (((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) IN ())  NULLS FIRST, STRFTIME((~ (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), ((t1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)), 0.710626248230795, t1.c0 COLLATE RTRIM)  NULLS FIRST;
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((NOT (((vt1.c0)>>(0.8289440748832213)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)>>(0.8289440748832213))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((NOT (((vt1.c0)>>(0.8289440748832213)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c0)>>(0.8289440748832213))))) IS TRUE)  as count FROM vt1, t1, vt0, rt0);
SELECT ALL * FROM vt1, t1, vt0, rt0 WHERE ((NOT (((vt1.c0)>>(0.8289440748832213)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LOWER(((rt0.c0) NOT NULL)) WHERE ((((rt0.c0)) NOT BETWEEN ((-1719756249)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))))) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) DESC, CASE CASE WHEN 0x6b437075 THEN -2.93702478E8 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END  WHEN (((rt0.c0, rt0.c3, 'I<≂T'))<=((vt0.c0, rt0.c2, rt0.c4))) THEN '' END ASC  NULLS LAST, IFNULL(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((-1719756249)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LOWER(((rt0.c0) NOT NULL)) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) DESC, CASE CASE WHEN 0X6b437075 THEN -2.93702478E8 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END  WHEN (((rt0.c0, rt0.c3, 'I<≂T'))<=((vt0.c0, rt0.c2, rt0.c4))) THEN '' END ASC  NULLS LAST, IFNULL(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, vt0.c0) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LOWER(((rt0.c0) NOT NULL)) WHERE ((((rt0.c0)) NOT BETWEEN ((-1719756249)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))))) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) DESC, CASE CASE WHEN 0x6b437075 THEN -2.93702478E8 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END  WHEN (((rt0.c0, rt0.c3, 'I<≂T'))<=((vt0.c0, rt0.c2, rt0.c4))) THEN '' END ASC  NULLS LAST, IFNULL(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, vt0.c0) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((-1719756249)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON LOWER(((rt0.c0) NOT NULL)) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) DESC, CASE CASE WHEN 0X6b437075 THEN -2.93702478E8 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END  WHEN (((rt0.c0, rt0.c3, 'I<≂T'))<=((vt0.c0, rt0.c2, rt0.c4))) THEN '' END ASC  NULLS LAST, IFNULL(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, vt0.c0) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON LOWER(((rt0.c0) NOT NULL)) WHERE ((((rt0.c0)) NOT BETWEEN ((-1719756249)) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((vt0.c0))))))) ORDER BY ((((((((((NULL)AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c1)))OR(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END) AND (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)) DESC, CASE CASE WHEN 0x6b437075 THEN -2.93702478E8 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c3 END  WHEN (((rt0.c0, rt0.c3, 'I<≂T'))<=((vt0.c0, rt0.c2, rt0.c4))) THEN '' END ASC  NULLS LAST, IFNULL(DISTINCT CASE WHEN rt0.c3 THEN rt0.c0 END, vt0.c0) DESC  NULLS FIRST;
SELECT ALL * FROM t1, t0 WHERE ((((t1.c38 IN ())) BETWEEN (((t1.c0)/(''))) AND (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((t1.c38 IN ())) BETWEEN (((t1.c0)/(''))) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE ((((t1.c38 IN ())) BETWEEN (((t1.c0)/(''))) AND (((t1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((t1.c38 IN ())) BETWEEN (((t1.c0)/(''))) AND (((t1.c0) IS FALSE)))) IS TRUE)  as count FROM t1, t0);
SELECT ALL * FROM t1, t0 WHERE ((((t1.c38 IN ())) BETWEEN (((t1.c0)/(''))) AND (((t1.c0) IS FALSE))));
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ((((t1.c38)IS(t1.c0)) IN (((t1.c38) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY TYPEOF(((((vt1.c0)AND(t0.c0)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)IS(t1.c0)) IN (((t1.c38) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, t0 NATURAL JOIN vt1 ORDER BY TYPEOF(((((vt1.c0)AND(t0.c0)))AND(t0.c0))));
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ((((t1.c38)IS(t1.c0)) IN (((t1.c38) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY TYPEOF(((((vt1.c0)AND(t0.c0)))AND(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)IS(t1.c0)) IN (((t1.c38) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt0, t1, t0 NATURAL JOIN vt1 ORDER BY TYPEOF(((((vt1.c0)AND(t0.c0)))AND(t0.c0))));
SELECT * FROM vt0, t1, t0 NATURAL JOIN vt1 WHERE ((((t1.c38)IS(t1.c0)) IN (((t1.c38) NOT BETWEEN (t0.c0) AND (vt1.c0))))) ORDER BY TYPEOF(((((vt1.c0)AND(t0.c0)))AND(t0.c0)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1411852447))))))AND((((vt0.c0)) NOT BETWEEN ((t1.c38)) AND ((vt0.c0))))))AND((((t1.c0)) BETWEEN ((t1.c38)) AND ((vt0.c0))))))OR(vt0.c0)) CROSS JOIN t1 ON NULL WHERE (((NULL)<((~ (t1.c38))))) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<((~ (t1.c38))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1411852447))))))AND((((vt0.c0)) NOT BETWEEN ((t1.c38)) AND ((vt0.c0))))))AND((((t1.c0)) BETWEEN ((t1.c38)) AND ((vt0.c0))))))OR(vt0.c0)) CROSS JOIN t1 ON NULL ORDER BY t1.c0 ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1411852447))))))AND((((vt0.c0)) NOT BETWEEN ((t1.c38)) AND ((vt0.c0))))))AND((((t1.c0)) BETWEEN ((t1.c38)) AND ((vt0.c0))))))OR(vt0.c0)) CROSS JOIN t1 ON NULL WHERE (((NULL)<((~ (t1.c38))))) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<((~ (t1.c38))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1411852447))))))AND((((vt0.c0)) NOT BETWEEN ((t1.c38)) AND ((vt0.c0))))))AND((((t1.c0)) BETWEEN ((t1.c38)) AND ((vt0.c0))))))OR(vt0.c0)) CROSS JOIN t1 ON NULL ORDER BY t1.c0 ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((((t1.c0)) NOT BETWEEN ((vt0.c0)) AND ((-1411852447))))))AND((((vt0.c0)) NOT BETWEEN ((t1.c38)) AND ((vt0.c0))))))AND((((t1.c0)) BETWEEN ((t1.c38)) AND ((vt0.c0))))))OR(vt0.c0)) CROSS JOIN t1 ON NULL WHERE (((NULL)<((~ (t1.c38))))) ORDER BY t1.c0 ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE (((MAX(t0.c0, vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((MAX(t0.c0, vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((MAX(t0.c0, vt1.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((MAX(t0.c0, vt1.c0)) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((MAX(t0.c0, vt1.c0)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))))<=((((((t1.c38)AND(0.31119222679558567)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))))<=((((((t1.c38)AND(0.31119222679558567)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))))<=((((((t1.c38)AND(0.31119222679558567)))OR(rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))))<=((((((t1.c38)AND(0.31119222679558567)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c4))))<=((((((t1.c38)AND(0.31119222679558567)))OR(rt0.c3))))));
SELECT * FROM t0, vt0, t1, vt1 WHERE (CAST(rtreenode(t0.c0, t1.c38) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(t0.c0, t1.c38) AS TEXT)) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT * FROM t0, vt0, t1, vt1 WHERE (CAST(rtreenode(t0.c0, t1.c38) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(t0.c0, t1.c38) AS TEXT)) IS TRUE)  as count FROM t0, vt0, t1, vt1);
SELECT * FROM t0, vt0, t1, vt1 WHERE (CAST(rtreenode(t0.c0, t1.c38) AS TEXT));
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c0)<(rt0.c4)))LIKE(((rt0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(rt0.c4)))LIKE(((rt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c0)<(rt0.c4)))LIKE(((rt0.c0)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(rt0.c4)))LIKE(((rt0.c0)<=(t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT ALL * FROM t0, vt1, vt0, rt0 WHERE (((((vt1.c0)<(rt0.c4)))LIKE(((rt0.c0)<=(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY ((((((((((vt0.c0) ISNULL))OR((t0.c0 IN (vt0.c0)))))AND(0.20709219973881032)))OR(ABS(vt1.c0))))OR(CAST(NULL AS NUMERIC)))  NULLS FIRST, HEX(DISTINCT ((vt0.c0)<<(vt1.c0))) ASC  NULLS LAST, (~ (((vt1.c0)>(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((((((((vt0.c0) ISNULL))OR((t0.c0 IN (vt0.c0)))))AND(0.20709219973881032)))OR(ABS(vt1.c0))))OR(CAST(NULL AS NUMERIC)))  NULLS FIRST, HEX(DISTINCT ((vt0.c0)<<(vt1.c0))) ASC  NULLS LAST, (~ (((vt1.c0)>(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY ((((((((((vt0.c0) ISNULL))OR((t0.c0 IN (vt0.c0)))))AND(0.20709219973881032)))OR(ABS(vt1.c0))))OR(CAST(NULL AS NUMERIC)))  NULLS FIRST, HEX(DISTINCT ((vt0.c0)<<(vt1.c0))) ASC  NULLS LAST, (~ (((vt1.c0)>(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)/(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((((((((vt0.c0) ISNULL))OR((t0.c0 IN (vt0.c0)))))AND(0.20709219973881032)))OR(ABS(vt1.c0))))OR(CAST(NULL AS NUMERIC)))  NULLS FIRST, HEX(DISTINCT ((vt0.c0)<<(vt1.c0))) ASC  NULLS LAST, (~ (((vt1.c0)>(t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, vt0, vt1 NOT INDEXED WHERE ((((vt0.c0)/(vt1.c0)) IN ())) ORDER BY ((((((((((vt0.c0) ISNULL))OR((t0.c0 IN (vt0.c0)))))AND(0.20709219973881032)))OR(ABS(vt1.c0))))OR(CAST(NULL AS NUMERIC)))  NULLS FIRST, HEX(DISTINCT ((vt0.c0)<<(vt1.c0))) ASC  NULLS LAST, (~ (((vt1.c0)>(t0.c0)))) DESC;
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c3 IN (rt0.c4)))<=((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c4)))<=((- (rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c3 IN (rt0.c4)))<=((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN (rt0.c4)))<=((- (rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((rt0.c3 IN (rt0.c4)))<=((- (rt0.c3)))));
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR('^ux!' COLLATE NOCASE)))OR(0.1727049811353828)))OR(CAST(vt1.c0 AS INTEGER))))AND(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR('^ux!' COLLATE NOCASE)))OR(0.1727049811353828)))OR(CAST(vt1.c0 AS INTEGER))))AND(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR('^ux!' COLLATE NOCASE)))OR(0.1727049811353828)))OR(CAST(vt1.c0 AS INTEGER))))AND(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR('^ux!' COLLATE NOCASE)))OR(0.1727049811353828)))OR(CAST(vt1.c0 AS INTEGER))))AND(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c0 IN ()))OR('^ux!' COLLATE NOCASE)))OR(0.1727049811353828)))OR(CAST(vt1.c0 AS INTEGER))))AND(NULL COLLATE NOCASE)));
SELECT ALL * FROM t1 NOT INDEXED, t0 WHERE (TRIM(t1.c38, CAST(t0.c0 AS TEXT))) ORDER BY CASE WHEN (- (t0.c0)) THEN 0.7424486497086916 WHEN ((t1.c38)&(t1.c0)) THEN ((t1.c38)AND(t1.c0)) WHEN 0X29037a36 THEN ((((t1.c38)OR(t1.c38)))AND(t1.c38)) END ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(t1.c38, CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN (- (t0.c0)) THEN 0.7424486497086916 WHEN ((t1.c38)&(t1.c0)) THEN ((t1.c38)AND(t1.c0)) WHEN 0X29037a36 THEN ((((t1.c38)OR(t1.c38)))AND(t1.c38)) END ASC);
SELECT ALL * FROM t1 NOT INDEXED, t0 WHERE (TRIM(t1.c38, CAST(t0.c0 AS TEXT))) ORDER BY CASE WHEN (- (t0.c0)) THEN 0.7424486497086916 WHEN ((t1.c38)&(t1.c0)) THEN ((t1.c38)AND(t1.c0)) WHEN 0X29037a36 THEN ((((t1.c38)OR(t1.c38)))AND(t1.c38)) END ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(t1.c38, CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN (- (t0.c0)) THEN 0.7424486497086916 WHEN ((t1.c38)&(t1.c0)) THEN ((t1.c38)AND(t1.c0)) WHEN 0X29037a36 THEN ((((t1.c38)OR(t1.c38)))AND(t1.c38)) END ASC);
SELECT ALL * FROM t1 NOT INDEXED, t0 WHERE (TRIM(t1.c38, CAST(t0.c0 AS TEXT))) ORDER BY CASE WHEN (- (t0.c0)) THEN 0.7424486497086916 WHEN ((t1.c38)&(t1.c0)) THEN ((t1.c38)AND(t1.c0)) WHEN 0X29037a36 THEN ((((t1.c38)OR(t1.c38)))AND(t1.c38)) END ASC;
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOT NULL))) WHERE (((vt0.c0) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)-(rt0.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOT NULL))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)-(rt0.c4)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOT NULL))) WHERE (((vt0.c0) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)-(rt0.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOT NULL))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)-(rt0.c4)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0 INNER JOIN vt0 ON ((rt0.c1 COLLATE BINARY)OR(((rt0.c0) NOT NULL))) WHERE (((vt0.c0) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c1)))AND(t0.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS BLOB)))) ORDER BY ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 WHEN vt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 END)-(rt0.c4)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN -1.7976931348623157E308 END, ((vt0.c0)<(t0.c0)), ((vt0.c0)<(t0.c0)))) AND (((NULL IN ()), (vt0.c0 IN (t0.c0, t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN -1.7976931348623157E308 END, ((vt0.c0)<(t0.c0)), ((vt0.c0)<(t0.c0)))) AND (((NULL IN ()), (vt0.c0 IN (t0.c0, t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN -1.7976931348623157E308 END, ((vt0.c0)<(t0.c0)), ((vt0.c0)<(t0.c0)))) AND (((NULL IN ()), (vt0.c0 IN (t0.c0, t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN -1.7976931348623157E308 END, ((vt0.c0)<(t0.c0)), ((vt0.c0)<(t0.c0)))) AND (((NULL IN ()), (vt0.c0 IN (t0.c0, t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE vt0.c0  WHEN t0.c0 THEN -1.7976931348623157E308 END, ((vt0.c0)<(t0.c0)), ((vt0.c0)<(t0.c0)))) AND (((NULL IN ()), (vt0.c0 IN (t0.c0, t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN rt0 ON TRIM(NULL, vt1.c0) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, t0, vt1 INNER JOIN rt0 ON TRIM(NULL, vt1.c0));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN rt0 ON TRIM(NULL, vt1.c0) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, t0, vt1 INNER JOIN rt0 ON TRIM(NULL, vt1.c0));
SELECT ALL COUNT(*) FROM t1, t0, vt1 INNER JOIN rt0 ON TRIM(NULL, vt1.c0) WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 INDEXED BY i99, vt1 FULL OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t0.c0)|(-894002555)) THEN json_patch(vt1.c0, vt0.c0) ELSE ((NULL)IS(vt1.c0)) END) ORDER BY COALESCE(DISTINCT ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(NULL)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)|(-894002555)) THEN json_patch(vt1.c0, vt0.c0) ELSE ((NULL)IS(vt1.c0)) END) IS TRUE)  as count FROM vt0 INDEXED BY i99, vt1 FULL OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE ORDER BY COALESCE(DISTINCT ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(NULL)))OR(vt0.c0))));
SELECT COUNT(*) FROM vt0 INDEXED BY i99, vt1 FULL OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE WHERE (CASE WHEN ((t0.c0)|(-894002555)) THEN json_patch(vt1.c0, vt0.c0) ELSE ((NULL)IS(vt1.c0)) END) ORDER BY COALESCE(DISTINCT ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(NULL)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)|(-894002555)) THEN json_patch(vt1.c0, vt0.c0) ELSE ((NULL)IS(vt1.c0)) END) IS TRUE)  as count FROM vt0 INDEXED BY i99, vt1 FULL OUTER JOIN t0 ON ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE NOCASE ORDER BY COALESCE(DISTINCT ((((((((vt1.c0)OR(x'')))AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt1.c0) NOT NULL), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(NULL)))OR(vt0.c0))));
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (t1.c0 IN ()), 0.2633894469665373)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t1.c0 IN ()), 0.2633894469665373)) IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY rt0.c2);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (t1.c0 IN ()), 0.2633894469665373)) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (t1.c0 IN ()), 0.2633894469665373)) IS TRUE)  as count FROM vt1, rt0, t1, vt0 ORDER BY rt0.c2);
SELECT ALL * FROM vt1, rt0, t1, vt0 WHERE (LIKELIHOOD(DISTINCT (t1.c0 IN ()), 0.2633894469665373)) ORDER BY rt0.c2;
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON '1617131781' CROSS JOIN rt0 ON vt1.c0 CROSS JOIN vt1 ON json_array_length(rt0.c0, (('-420338989') ISNULL)) RIGHT OUTER JOIN t0 ON rt0.c2 WHERE (CAST(((NULL) NOT NULL) AS BLOB)) ORDER BY (((rt0.c1) IS FALSE) IN (CAST(rt0.c4 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON '1617131781' CROSS JOIN rt0 ON vt1.c0 CROSS JOIN vt1 ON json_array_length(rt0.c0, (('-420338989') ISNULL)) RIGHT OUTER JOIN t0 ON rt0.c2 ORDER BY (((rt0.c1) IS FALSE) IN (CAST(rt0.c4 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt0 INNER JOIN t1 ON '1617131781' CROSS JOIN rt0 ON vt1.c0 CROSS JOIN vt1 ON json_array_length(rt0.c0, (('-420338989') ISNULL)) RIGHT OUTER JOIN t0 ON rt0.c2 WHERE (CAST(((NULL) NOT NULL) AS BLOB)) ORDER BY (((rt0.c1) IS FALSE) IN (CAST(rt0.c4 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOT NULL) AS BLOB)) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON '1617131781' CROSS JOIN rt0 ON vt1.c0 CROSS JOIN vt1 ON json_array_length(rt0.c0, (('-420338989') ISNULL)) RIGHT OUTER JOIN t0 ON rt0.c2 ORDER BY (((rt0.c1) IS FALSE) IN (CAST(rt0.c4 AS NUMERIC))) ASC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT ((vt1.c0)IS NOT(rt0.c3)), 0.041871781925707174) WHERE ((((SQLITE_COMPILEOPTION_GET(rt0.c4)))==((-1583715091))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_GET(rt0.c4)))==((-1583715091)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT ((vt1.c0)IS NOT(rt0.c3)), 0.041871781925707174));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT ((vt1.c0)IS NOT(rt0.c3)), 0.041871781925707174) WHERE ((((SQLITE_COMPILEOPTION_GET(rt0.c4)))==((-1583715091))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_COMPILEOPTION_GET(rt0.c4)))==((-1583715091)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT ((vt1.c0)IS NOT(rt0.c3)), 0.041871781925707174));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LIKELIHOOD(DISTINCT ((vt1.c0)IS NOT(rt0.c3)), 0.041871781925707174) WHERE ((((SQLITE_COMPILEOPTION_GET(rt0.c4)))==((-1583715091))));
SELECT COUNT(*) FROM t0, t1 CROSS JOIN vt0 ON (((+ (vt0.c0))) NOT BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CAST(vt0.c0 AS BLOB))) INNER JOIN rt0 ON (((((rt0.c2))=((rt0.c3)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (CASE ((rt0.c0)|(rt0.c1))  WHEN ((rt0.c1)/(vt0.c0)) THEN ((((rt0.c4)AND(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0, t0.c0, t1.c38))>=((t0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)|(rt0.c1))  WHEN ((rt0.c1)/(vt0.c0)) THEN ((((rt0.c4)AND(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0, t0.c0, t1.c38))>=((t0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt0 ON (((+ (vt0.c0))) NOT BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CAST(vt0.c0 AS BLOB))) INNER JOIN rt0 ON (((((rt0.c2))==((rt0.c3)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM t0, t1 CROSS JOIN vt0 ON (((+ (vt0.c0))) NOT BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CAST(vt0.c0 AS BLOB))) INNER JOIN rt0 ON (((((rt0.c2))=((rt0.c3)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (CASE ((rt0.c0)|(rt0.c1))  WHEN ((rt0.c1)/(vt0.c0)) THEN ((((rt0.c4)AND(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0, t0.c0, t1.c38))>=((t0.c0, vt0.c0, vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)|(rt0.c1))  WHEN ((rt0.c1)/(vt0.c0)) THEN ((((rt0.c4)AND(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0, t0.c0, t1.c38))>=((t0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM t0, t1 CROSS JOIN vt0 ON (((+ (vt0.c0))) NOT BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CAST(vt0.c0 AS BLOB))) INNER JOIN rt0 ON (((((rt0.c2))==((rt0.c3)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))));
SELECT COUNT(*) FROM t0, t1 CROSS JOIN vt0 ON (((+ (vt0.c0))) NOT BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CAST(vt0.c0 AS BLOB))) INNER JOIN rt0 ON (((((rt0.c2))=((rt0.c3)))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (CASE ((rt0.c0)|(rt0.c1))  WHEN ((rt0.c1)/(vt0.c0)) THEN ((((rt0.c4)AND(t0.c0)))AND(vt0.c0)) ELSE (((vt0.c0, t0.c0, t1.c38))>=((t0.c0, vt0.c0, vt0.c0))) END);
SELECT COUNT(*) FROM vt0, t0, t1, rt0, vt1 WHERE ((((- (rt0.c3)))>(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t0, t1, rt0, vt1 WHERE ((((- (rt0.c3)))>(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c3)))>(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t0, t1, rt0, vt1);
SELECT COUNT(*) FROM vt0, t0, t1, rt0, vt1 WHERE ((((- (rt0.c3)))>(((t0.c0) ISNULL))));
SELECT * FROM t0, t1, rt0, vt0 INNER JOIN vt1 ON ((t1.c38 COLLATE BINARY)LIKE(((rt0.c2) IS TRUE))) WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) ORDER BY (~ (((t0.c0)OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, rt0, vt0 INNER JOIN vt1 ON ((t1.c38 COLLATE BINARY)LIKE(((rt0.c2) IS TRUE))) ORDER BY (~ (((t0.c0)OR(t0.c0)))) DESC);
SELECT * FROM t0, t1, rt0, vt0 INNER JOIN vt1 ON ((t1.c38 COLLATE BINARY)LIKE(((rt0.c2) IS TRUE))) WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) ORDER BY (~ (((t0.c0)OR(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM t0, t1, rt0, vt0 INNER JOIN vt1 ON ((t1.c38 COLLATE BINARY)LIKE(((rt0.c2) IS TRUE))) ORDER BY (~ (((t0.c0)OR(t0.c0)))) DESC);
SELECT * FROM t0, t1, rt0, vt0 INNER JOIN vt1 ON ((t1.c38 COLLATE BINARY)LIKE(((rt0.c2) IS TRUE))) WHERE (CAST(t0.c0 AS REAL) COLLATE NOCASE) ORDER BY (~ (((t0.c0)OR(t0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c0)))&(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))&(LIKELY(t0.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c0)))&(LIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))&(LIKELY(t0.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((+ (vt1.c0)))&(LIKELY(t0.c0))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (vt0.c0 COLLATE RTRIM) ORDER BY ((((t0.c0, t0.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, t0.c0))) IN ());
SELECT COUNT(*) FROM rt0, vt0, t1, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t1, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t1, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, t1, vt1, t0 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '229223594' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY '229223594' COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '229223594' COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY '229223594' COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0) IS TRUE)) IS FALSE)) ORDER BY '229223594' COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) AS REAL)) IS TRUE)  as count FROM vt1, t1);
SELECT * FROM vt1, t1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) AS REAL));
SELECT * FROM rt0, t1, t0, vt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((~ (rt0.c1))))>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0, t1, t0, vt0 ORDER BY ((((~ (rt0.c1))))>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END))));
SELECT * FROM rt0, t1, t0, vt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((~ (rt0.c1))))>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0, t1, t0, vt0 ORDER BY ((((~ (rt0.c1))))>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END))));
SELECT * FROM rt0, t1, t0, vt0 WHERE ((NOT (rt0.c0))) ORDER BY ((((~ (rt0.c1))))>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c3))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, rt0, t0 ORDER BY ((((t0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM t1, vt0, rt0, t0 ORDER BY ((((t0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, rt0, t0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER)) ORDER BY ((((t0.c0) IS FALSE)) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(vt0.c0)))=(((vt0.c0) NOTNULL))) LEFT OUTER JOIN t0 ON json_type(vt0.c0) COLLATE BINARY WHERE (MAX(((0.17535415537284615) NOT BETWEEN (NULL) AND (rt0.c4)), (rt0.c4 IN (rt0.c0)), ((rt0.c3)LIKE(t0.c0)), (((rt0.c3, t0.c0, rt0.c0))!=((vt0.c0, vt1.c0, rt0.c1))))) ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((MAX(((0.17535415537284615) NOT BETWEEN (NULL) AND (rt0.c4)), (rt0.c4 IN (rt0.c0)), ((rt0.c3)LIKE(t0.c0)), (((rt0.c3, t0.c0, rt0.c0))<>((vt0.c0, vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(vt0.c0)))==(((vt0.c0) NOTNULL))) LEFT OUTER JOIN t0 ON json_type(vt0.c0) COLLATE BINARY ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(vt0.c0)))=(((vt0.c0) NOTNULL))) LEFT OUTER JOIN t0 ON json_type(vt0.c0) COLLATE BINARY WHERE (MAX(((0.17535415537284615) NOT BETWEEN (NULL) AND (rt0.c4)), (rt0.c4 IN (rt0.c0)), ((rt0.c3)LIKE(t0.c0)), (((rt0.c3, t0.c0, rt0.c0))!=((vt0.c0, vt1.c0, rt0.c1))))) ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((MAX(((0.17535415537284615) NOT BETWEEN (NULL) AND (rt0.c4)), (rt0.c4 IN (rt0.c0)), ((rt0.c3)LIKE(t0.c0)), (((rt0.c3, t0.c0, rt0.c0))<>((vt0.c0, vt1.c0, rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(vt0.c0)))==(((vt0.c0) NOTNULL))) LEFT OUTER JOIN t0 ON json_type(vt0.c0) COLLATE BINARY ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((((rt0.c2)IS NOT(vt0.c0)))=(((vt0.c0) NOTNULL))) LEFT OUTER JOIN t0 ON json_type(vt0.c0) COLLATE BINARY WHERE (MAX(((0.17535415537284615) NOT BETWEEN (NULL) AND (rt0.c4)), (rt0.c4 IN (rt0.c0)), ((rt0.c3)LIKE(t0.c0)), (((rt0.c3, t0.c0, rt0.c0))!=((vt0.c0, vt1.c0, rt0.c1))))) ORDER BY CASE rt0.c2  WHEN vt0.c0 THEN t0.c0 ELSE rt0.c2 END COLLATE BINARY DESC;
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (((((rt0.c1 IN (rt0.c1)), NULL, ((((t0.c0)OR(vt1.c0)))OR(t1.c0))))<=(('-894002555', 0.8466689546392225, CASE t1.c38  WHEN x'6b45' THEN t0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c4 THEN 160982974 ELSE 0.9573438930617304 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN rt0.c3 COLLATE RTRIM WHEN CASE WHEN t0.c0 THEN rt0.c3 END THEN ((t1.c38) ISNULL) WHEN ((((rt0.c1)OR(vt1.c0)))AND(-1470364021)) THEN (rt0.c3 IN ()) ELSE ((t1.c38) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c1)), NULL, ((((t0.c0)OR(vt1.c0)))OR(t1.c0))))<=(('-894002555', 0.8466689546392225, CASE t1.c38  WHEN x'6b45' THEN t0.c0 END)))) IS TRUE)  as count FROM rt0, vt0, vt1, t1, t0 ORDER BY CASE CASE WHEN rt0.c4 THEN 160982974 ELSE 0.9573438930617304 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN rt0.c3 COLLATE RTRIM WHEN CASE WHEN t0.c0 THEN rt0.c3 END THEN ((t1.c38) ISNULL) WHEN ((((rt0.c1)OR(vt1.c0)))AND(-1470364021)) THEN (rt0.c3 IN ()) ELSE ((t1.c38) IS TRUE) END DESC);
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (((((rt0.c1 IN (rt0.c1)), NULL, ((((t0.c0)OR(vt1.c0)))OR(t1.c0))))<=(('-894002555', 0.8466689546392225, CASE t1.c38  WHEN x'6b45' THEN t0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c4 THEN 160982974 ELSE 0.9573438930617304 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN rt0.c3 COLLATE RTRIM WHEN CASE WHEN t0.c0 THEN rt0.c3 END THEN ((t1.c38) ISNULL) WHEN ((((rt0.c1)OR(vt1.c0)))AND(-1470364021)) THEN (rt0.c3 IN ()) ELSE ((t1.c38) IS TRUE) END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN (rt0.c1)), NULL, ((((t0.c0)OR(vt1.c0)))OR(t1.c0))))<=(('-894002555', 0.8466689546392225, CASE t1.c38  WHEN x'6b45' THEN t0.c0 END)))) IS TRUE)  as count FROM rt0, vt0, vt1, t1, t0 ORDER BY CASE CASE WHEN rt0.c4 THEN 160982974 ELSE 0.9573438930617304 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN rt0.c3 COLLATE RTRIM WHEN CASE WHEN t0.c0 THEN rt0.c3 END THEN ((t1.c38) ISNULL) WHEN ((((rt0.c1)OR(vt1.c0)))AND(-1470364021)) THEN (rt0.c3 IN ()) ELSE ((t1.c38) IS TRUE) END DESC);
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (((((rt0.c1 IN (rt0.c1)), NULL, ((((t0.c0)OR(vt1.c0)))OR(t1.c0))))<=(('-894002555', 0.8466689546392225, CASE t1.c38  WHEN x'6b45' THEN t0.c0 END)))) ORDER BY CASE CASE WHEN rt0.c4 THEN 160982974 ELSE 0.9573438930617304 END  WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END THEN rt0.c3 COLLATE RTRIM WHEN CASE WHEN t0.c0 THEN rt0.c3 END THEN ((t1.c38) ISNULL) WHEN ((((rt0.c1)OR(vt1.c0)))AND(-1470364021)) THEN (rt0.c3 IN ()) ELSE ((t1.c38) IS TRUE) END DESC;
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((t1.c0)OR(vt0.c0)))AND(t1.c38)))) WHERE (((((((vt0.c0)+('')))AND(((t1.c0)>>('B	V()SS')))))OR((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)<=(t1.c0)), ABS(DISTINCT t1.c0), CASE WHEN vt0.c0 THEN t1.c38 END))<((x'' COLLATE BINARY, TRIM(t1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c38) AND (t1.c38)))))  NULLS FIRST, CASE WHEN ((vt0.c0)-(vt0.c0)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)+('')))AND(((t1.c0)>>('B	V()SS')))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((t1.c0)OR(vt0.c0)))AND(t1.c38)))) ORDER BY (((((vt0.c0)<=(t1.c0)), ABS(DISTINCT t1.c0), CASE WHEN vt0.c0 THEN t1.c38 END))<((x'' COLLATE BINARY, TRIM(t1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c38) AND (t1.c38)))))  NULLS FIRST, CASE WHEN ((vt0.c0)-(vt0.c0)) THEN NULL END  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((t1.c0)OR(vt0.c0)))AND(t1.c38)))) WHERE (((((((vt0.c0)+('')))AND(((t1.c0)>>('B	V()SS')))))OR((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)<=(t1.c0)), ABS(DISTINCT t1.c0), CASE WHEN vt0.c0 THEN t1.c38 END))<((x'' COLLATE BINARY, TRIM(t1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c38) AND (t1.c38)))))  NULLS FIRST, CASE WHEN ((vt0.c0)-(vt0.c0)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)+('')))AND(((t1.c0)>>('B	V()SS')))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((t1.c0)OR(vt0.c0)))AND(t1.c38)))) ORDER BY (((((vt0.c0)<=(t1.c0)), ABS(DISTINCT t1.c0), CASE WHEN vt0.c0 THEN t1.c38 END))<((x'' COLLATE BINARY, TRIM(t1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c38) AND (t1.c38)))))  NULLS FIRST, CASE WHEN ((vt0.c0)-(vt0.c0)) THEN NULL END  NULLS FIRST);
SELECT * FROM t1 LEFT OUTER JOIN vt0 ON (NOT (((((t1.c0)OR(vt0.c0)))AND(t1.c38)))) WHERE (((((((vt0.c0)+('')))AND(((t1.c0)>>('B	V()SS')))))OR((vt0.c0 IN ())))) ORDER BY (((((vt0.c0)<=(t1.c0)), ABS(DISTINCT t1.c0), CASE WHEN vt0.c0 THEN t1.c38 END))<((x'' COLLATE BINARY, TRIM(t1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (t1.c38) AND (t1.c38)))))  NULLS FIRST, CASE WHEN ((vt0.c0)-(vt0.c0)) THEN NULL END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((NULL, HEX(vt0.c0), ((x'')%(vt0.c0))))<((CAST(vt0.c0 AS NUMERIC), ((t1.c0) IS FALSE), (t1.c38 IN ())))) FULL OUTER JOIN vt1 ON 0x350b7d73 WHERE (CAST(CAST(t1.c38 AS TEXT) AS BLOB)) ORDER BY (+ (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c38 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((NULL, HEX(vt0.c0), ((x'')%(vt0.c0))))<((CAST(vt0.c0 AS NUMERIC), ((t1.c0) IS FALSE), (t1.c38 IN ())))) FULL OUTER JOIN vt1 ON 0x350b7d73 ORDER BY (+ (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((NULL, HEX(vt0.c0), ((x'')%(vt0.c0))))<((CAST(vt0.c0 AS NUMERIC), ((t1.c0) IS FALSE), (t1.c38 IN ())))) FULL OUTER JOIN vt1 ON 0x350b7d73 WHERE (CAST(CAST(t1.c38 AS TEXT) AS BLOB)) ORDER BY (+ (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t1.c38 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((NULL, HEX(vt0.c0), ((x'')%(vt0.c0))))<((CAST(vt0.c0 AS NUMERIC), ((t1.c0) IS FALSE), (t1.c38 IN ())))) FULL OUTER JOIN vt1 ON 0x350b7d73 ORDER BY (+ (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 INNER JOIN vt0 ON (((NULL, HEX(vt0.c0), ((x'')%(vt0.c0))))<((CAST(vt0.c0 AS NUMERIC), ((t1.c0) IS FALSE), (t1.c38 IN ())))) FULL OUTER JOIN vt1 ON 0x350b7d73 WHERE (CAST(CAST(t1.c38 AS TEXT) AS BLOB)) ORDER BY (+ (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 END COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)!=(rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)<>(rt0.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 END COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)!=(rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 END COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0, rt0 ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)<>(rt0.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE (CASE rt0.c3  WHEN t0.c0 THEN vt0.c0 WHEN rt0.c2 THEN t0.c0 WHEN vt0.c0 THEN rt0.c3 END COLLATE BINARY) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c0)>=(rt0.c2))))  NULLS FIRST, ((rt0.c3 COLLATE NOCASE)!=(rt0.c1 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((LIKELY(vt1.c0)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (ABS('i]'))) WHERE (CASE (t1.c38 IN (t1.c38))  WHEN CAST(x'' AS BLOB) THEN (- (t1.c38)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 WHEN t1.c38 THEN (((t1.c0, t1.c38, NULL))>=((t1.c0, t1.c0, t1.c0))) ELSE ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((rtreenode(t1.c38, t1.c0))<=(t1.c38)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t1.c38 IN (t1.c38))  WHEN CAST(x'' AS BLOB) THEN (- (t1.c38)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 WHEN t1.c38 THEN (((t1.c0, t1.c38, NULL))>=((t1.c0, t1.c0, t1.c0))) ELSE ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((LIKELY(vt1.c0)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (ABS('i]'))) ORDER BY ((rtreenode(t1.c38, t1.c0))<=(t1.c38)) DESC);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((LIKELY(vt1.c0)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (ABS('i]'))) WHERE (CASE (t1.c38 IN (t1.c38))  WHEN CAST(x'' AS BLOB) THEN (- (t1.c38)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 WHEN t1.c38 THEN (((t1.c0, t1.c38, NULL))>=((t1.c0, t1.c0, t1.c0))) ELSE ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((rtreenode(t1.c38, t1.c0))<=(t1.c38)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t1.c38 IN (t1.c38))  WHEN CAST(x'' AS BLOB) THEN (- (t1.c38)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 WHEN t1.c38 THEN (((t1.c0, t1.c38, NULL))>=((t1.c0, t1.c0, t1.c0))) ELSE ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((LIKELY(vt1.c0)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (ABS('i]'))) ORDER BY ((rtreenode(t1.c38, t1.c0))<=(t1.c38)) DESC);
SELECT COUNT(*) FROM vt1 CROSS JOIN t1 ON ((LIKELY(vt1.c0)) BETWEEN (CAST(t1.c0 AS BLOB)) AND (ABS('i]'))) WHERE (CASE (t1.c38 IN (t1.c38))  WHEN CAST(x'' AS BLOB) THEN (- (t1.c38)) WHEN ((t1.c0) NOTNULL) THEN t1.c0 WHEN t1.c38 THEN (((t1.c0, t1.c38, NULL))>=((t1.c0, t1.c0, t1.c0))) ELSE ((t1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY ((rtreenode(t1.c38, t1.c0))<=(t1.c38)) DESC;
SELECT * FROM vt1, rt0, vt0 RIGHT OUTER JOIN t1 ON load_extension(CAST(t1.c38 AS TEXT)) FULL OUTER JOIN t0 ON ((((rt0.c0)|(NULL)))*(((((((((rt0.c2)OR('1046713068')))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c2)))) WHERE ((((((rt0.c2 IN ()))OR((((rt0.c1)) NOT BETWEEN ((t1.c38)) AND ((x''))))))AND((t1.c38 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR((((rt0.c1)) NOT BETWEEN ((t1.c38)) AND ((x''))))))AND((t1.c38 IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0 RIGHT OUTER JOIN t1 ON load_extension(CAST(t1.c38 AS TEXT)) FULL OUTER JOIN t0 ON ((((rt0.c0)|(NULL)))*(((((((((rt0.c2)OR('1046713068')))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c2)))));
SELECT * FROM vt1, rt0, vt0 RIGHT OUTER JOIN t1 ON load_extension(CAST(t1.c38 AS TEXT)) FULL OUTER JOIN t0 ON ((((rt0.c0)|(NULL)))*(((((((((rt0.c2)OR('1046713068')))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c2)))) WHERE ((((((rt0.c2 IN ()))OR((((rt0.c1)) NOT BETWEEN ((t1.c38)) AND ((x''))))))AND((t1.c38 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR((((rt0.c1)) NOT BETWEEN ((t1.c38)) AND ((x''))))))AND((t1.c38 IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0 RIGHT OUTER JOIN t1 ON load_extension(CAST(t1.c38 AS TEXT)) FULL OUTER JOIN t0 ON ((((rt0.c0)|(NULL)))*(((((((((rt0.c2)OR('1046713068')))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c2)))));
SELECT * FROM vt1, rt0, vt0 RIGHT OUTER JOIN t1 ON load_extension(CAST(t1.c38 AS TEXT)) FULL OUTER JOIN t0 ON ((((rt0.c0)|(NULL)))*(((((((((rt0.c2)OR('1046713068')))OR(t0.c0)))OR(vt1.c0)))OR(rt0.c2)))) WHERE ((((((rt0.c2 IN ()))OR((((rt0.c1)) NOT BETWEEN ((t1.c38)) AND ((x''))))))AND((t1.c38 IN ()))));
SELECT COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((NOT (rt0.c4))) IS TRUE)) ORDER BY '1080726031';
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, t1, t0, rt0, vt1 ORDER BY '1080726031');
SELECT COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((NOT (rt0.c4))) IS TRUE)) ORDER BY '1080726031';
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c4))) IS TRUE)) IS TRUE)  as count FROM vt0, t1, t0, rt0, vt1 ORDER BY '1080726031');
SELECT COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((NOT (rt0.c4))) IS TRUE)) ORDER BY '1080726031';
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL CROSS JOIN rt0 ON ((CAST(rt0.c4 AS TEXT))IS((~ (rt0.c4)))) WHERE (rt0.c1) ORDER BY TYPEOF(rt0.c3) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL CROSS JOIN rt0 ON ((CAST(rt0.c4 AS TEXT))IS((~ (rt0.c4)))) ORDER BY TYPEOF(rt0.c3) COLLATE NOCASE);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL CROSS JOIN rt0 ON ((CAST(rt0.c4 AS TEXT))IS((~ (rt0.c4)))) WHERE (rt0.c1) ORDER BY TYPEOF(rt0.c3) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON NULL CROSS JOIN rt0 ON ((CAST(rt0.c4 AS TEXT))IS((~ (rt0.c4)))) ORDER BY TYPEOF(rt0.c3) COLLATE NOCASE);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON NULL CROSS JOIN rt0 ON ((CAST(rt0.c4 AS TEXT))IS((~ (rt0.c4)))) WHERE (rt0.c1) ORDER BY TYPEOF(rt0.c3) COLLATE NOCASE;
SELECT COUNT(*) FROM t0, t1, vt0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t0, t1, vt0);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t0, t1, vt0);
SELECT COUNT(*) FROM t0, t1, vt0 WHERE (t1.c38);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON '?xt跈MuIq' CROSS JOIN t1 ON CASE (rt0.c4 IN (rt0.c1))  WHEN ((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c38)) THEN rt0.c1 COLLATE NOCASE END RIGHT OUTER JOIN rt0 ON CASE ((((220849563)AND(t1.c38)))AND(rt0.c4))  WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c0 THEN '395841076' WHEN t0.c0 THEN rt0.c1 ELSE t1.c38 END THEN rt0.c1 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON 0Xffffffffa8b952d4 WHERE (LIKELY(DISTINCT vt0.c0)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON '?xt跈MuIq' CROSS JOIN t1 ON CASE (rt0.c4 IN (rt0.c1))  WHEN ((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c38)) THEN rt0.c1 COLLATE NOCASE END RIGHT OUTER JOIN rt0 ON CASE ((((220849563)AND(t1.c38)))AND(rt0.c4))  WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c0 THEN '395841076' WHEN t0.c0 THEN rt0.c1 ELSE t1.c38 END THEN rt0.c1 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON 0Xffffffffa8b952d4 ORDER BY rt0.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON '?xt跈MuIq' CROSS JOIN t1 ON CASE (rt0.c4 IN (rt0.c1))  WHEN ((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c38)) THEN rt0.c1 COLLATE NOCASE END RIGHT OUTER JOIN rt0 ON CASE ((((220849563)AND(t1.c38)))AND(rt0.c4))  WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c0 THEN '395841076' WHEN t0.c0 THEN rt0.c1 ELSE t1.c38 END THEN rt0.c1 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON 0Xffffffffa8b952d4 WHERE (LIKELY(DISTINCT vt0.c0)) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT vt0.c0)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON '?xt跈MuIq' CROSS JOIN t1 ON CASE (rt0.c4 IN (rt0.c1))  WHEN ((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c0)))AND(t1.c38)) THEN rt0.c1 COLLATE NOCASE END RIGHT OUTER JOIN rt0 ON CASE ((((220849563)AND(t1.c38)))AND(rt0.c4))  WHEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c0 THEN '395841076' WHEN t0.c0 THEN rt0.c1 ELSE t1.c38 END THEN rt0.c1 COLLATE RTRIM END RIGHT OUTER JOIN vt0 ON 0Xffffffffa8b952d4 ORDER BY rt0.c1);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (((x'')/(UPPER(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (((x'')/(UPPER(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(UPPER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (((x'')/(UPPER(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM t1, rt0, t0 INNER JOIN vt1 ON ((MAX(t1.c38, t0.c0))AND(CAST(rt0.c2 AS TEXT))) CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((((x'')AND(t1.c0)))OR(rt0.c4)))) AND (((~ (t1.c38))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, rt0, t0 INNER JOIN vt1 ON ((MAX(t1.c38, t0.c0))AND(CAST(rt0.c2 AS TEXT))) CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((((x'')AND(t1.c0)))OR(rt0.c4)))) AND (((~ (t1.c38))))));
SELECT COUNT(*) FROM t1, rt0, t0 INNER JOIN vt1 ON ((MAX(t1.c38, t0.c0))AND(CAST(rt0.c2 AS TEXT))) CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((((x'')AND(t1.c0)))OR(rt0.c4)))) AND (((~ (t1.c38))))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, rt0, t0 INNER JOIN vt1 ON ((MAX(t1.c38, t0.c0))AND(CAST(rt0.c2 AS TEXT))) CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((((x'')AND(t1.c0)))OR(rt0.c4)))) AND (((~ (t1.c38))))));
SELECT COUNT(*) FROM t1, rt0, t0 INNER JOIN vt1 ON ((MAX(t1.c38, t0.c0))AND(CAST(rt0.c2 AS TEXT))) CROSS JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((((((x'')AND(t1.c0)))OR(rt0.c4)))) AND (((~ (t1.c38))))) WHERE (rt0.c1);
SELECT * FROM vt1, vt0, rt0, t1, t0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0, t1, t0);
SELECT * FROM vt1, vt0, rt0, t1, t0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, rt0, t1, t0);
SELECT * FROM vt1, vt0, rt0, t1, t0 WHERE ((((((t0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))>((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE ((((t1.c0, t1.c0, t1.c38)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (t1.c38 IN ()), vt1.c0 COLLATE BINARY)) AND (('NLV9NEQE', CASE WHEN vt0.c0 THEN t1.c38 ELSE t1.c0 END, ((((t1.c38)AND(0.23285891488484556)))AND(t1.c38))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c38)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (t1.c38 IN ()), vt1.c0 COLLATE BINARY)) AND (('NLV9NEQE', CASE WHEN vt0.c0 THEN t1.c38 ELSE t1.c0 END, ((((t1.c38)AND(0.23285891488484556)))AND(t1.c38)))))) IS TRUE)  as count FROM t1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE ((((t1.c0, t1.c0, t1.c38)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (t1.c38 IN ()), vt1.c0 COLLATE BINARY)) AND (('NLV9NEQE', CASE WHEN vt0.c0 THEN t1.c38 ELSE t1.c0 END, ((((t1.c38)AND(0.23285891488484556)))AND(t1.c38))))));
SELECT SUM(count) FROM (SELECT (((((t1.c0, t1.c0, t1.c38)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (t1.c38 IN ()), vt1.c0 COLLATE BINARY)) AND (('NLV9NEQE', CASE WHEN vt0.c0 THEN t1.c38 ELSE t1.c0 END, ((((t1.c38)AND(0.23285891488484556)))AND(t1.c38)))))) IS TRUE)  as count FROM t1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, vt1, vt0, t0 WHERE ((((t1.c0, t1.c0, t1.c38)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), (t1.c38 IN ()), vt1.c0 COLLATE BINARY)) AND (('NLV9NEQE', CASE WHEN vt0.c0 THEN t1.c38 ELSE t1.c0 END, ((((t1.c38)AND(0.23285891488484556)))AND(t1.c38))))));
SELECT ALL * FROM t1, t0, vt0 INDEXED BY i16, vt1 WHERE (((LTRIM(vt1.c0))&(t1.c0 COLLATE NOCASE))) ORDER BY ((CAST(0.7540861590432555 AS REAL)) NOT BETWEEN (t0.c0) AND (((vt1.c0)*(t0.c0))))  NULLS FIRST, (NOT (CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt1.c0))&(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0, vt0 INDEXED BY i16, vt1 ORDER BY ((CAST(0.7540861590432555 AS REAL)) NOT BETWEEN (t0.c0) AND (((vt1.c0)*(t0.c0))))  NULLS FIRST, (NOT (CAST(vt0.c0 AS REAL))) DESC);
SELECT ALL * FROM t1, t0, vt0 INDEXED BY i16, vt1 WHERE (((LTRIM(vt1.c0))&(t1.c0 COLLATE NOCASE))) ORDER BY ((CAST(0.7540861590432555 AS REAL)) NOT BETWEEN (t0.c0) AND (((vt1.c0)*(t0.c0))))  NULLS FIRST, (NOT (CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt1.c0))&(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, t0, vt0 INDEXED BY i16, vt1 ORDER BY ((CAST(0.7540861590432555 AS REAL)) NOT BETWEEN (t0.c0) AND (((vt1.c0)*(t0.c0))))  NULLS FIRST, (NOT (CAST(vt0.c0 AS REAL))) DESC);
SELECT * FROM t1 INDEXED BY i16, vt0, t0 WHERE ('-1507843518') ORDER BY (((t1.c0)) BETWEEN (((t1.c0 IN ()))) AND ((t1.c0 COLLATE BINARY))), (- ((((t1.c38))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (('-1507843518') IS TRUE)  as count FROM t1 INDEXED BY i16, vt0, t0 ORDER BY (((t1.c0)) BETWEEN (((t1.c0 IN ()))) AND ((t1.c0 COLLATE BINARY))), (- ((((t1.c38))>((t0.c0))))));
SELECT * FROM t1 INDEXED BY i16, vt0, t0 WHERE ('-1507843518') ORDER BY (((t1.c0)) BETWEEN (((t1.c0 IN ()))) AND ((t1.c0 COLLATE BINARY))), (- ((((t1.c38))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (('-1507843518') IS TRUE)  as count FROM t1 INDEXED BY i16, vt0, t0 ORDER BY (((t1.c0)) BETWEEN (((t1.c0 IN ()))) AND ((t1.c0 COLLATE BINARY))), (- ((((t1.c38))>((t0.c0))))));
SELECT * FROM t1 INDEXED BY i16, vt0, t0 WHERE ('-1507843518') ORDER BY (((t1.c0)) BETWEEN (((t1.c0 IN ()))) AND ((t1.c0 COLLATE BINARY))), (- ((((t1.c38))>((t0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((rt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(NULL AS BLOB) WHEN (NULL IN ()) THEN CAST(rt0.c4 AS REAL) WHEN '1046713068' COLLATE RTRIM THEN ((rt0.c2)GLOB(rt0.c0)) ELSE rt0.c4 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(NULL AS BLOB) WHEN (NULL IN ()) THEN CAST(rt0.c4 AS REAL) WHEN '1046713068' COLLATE RTRIM THEN ((rt0.c2)GLOB(rt0.c0)) ELSE rt0.c4 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((rt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(NULL AS BLOB) WHEN (NULL IN ()) THEN CAST(rt0.c4 AS REAL) WHEN '1046713068' COLLATE RTRIM THEN ((rt0.c2)GLOB(rt0.c0)) ELSE rt0.c4 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0, rt0, t1 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(NULL AS BLOB) WHEN (NULL IN ()) THEN CAST(rt0.c4 AS REAL) WHEN '1046713068' COLLATE RTRIM THEN ((rt0.c2)GLOB(rt0.c0)) ELSE rt0.c4 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, rt0, t1 WHERE (CAST(((rt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN CAST(NULL AS BLOB) WHEN (NULL IN ()) THEN CAST(rt0.c4 AS REAL) WHEN '1046713068' COLLATE RTRIM THEN ((rt0.c2)GLOB(rt0.c0)) ELSE rt0.c4 COLLATE RTRIM END;
SELECT * FROM rt0 WHERE (((rt0.c4)OR((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4)OR((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4)OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c4)OR((- (rt0.c1)))));
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (0.7620738181876056))) ORDER BY (((vt1.c0))<=(((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (0.7620738181876056))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=(((vt1.c0 IN ())))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (0.7620738181876056))) ORDER BY (((vt1.c0))<=(((vt1.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN (0.7620738181876056))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))<=(((vt1.c0 IN ())))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0) NOTNULL) IN (0.7620738181876056))) ORDER BY (((vt1.c0))<=(((vt1.c0 IN ())))) DESC;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0) NOT NULL) IN ()) WHERE (((COALESCE(t1.c0, vt0.c0, vt0.c0, t1.c0))-((NOT (t1.c38))))) ORDER BY ((t1.c0)%(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c0, vt0.c0, vt0.c0, t1.c0))-((NOT (t1.c38))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0) NOT NULL) IN ()) ORDER BY ((t1.c0)%(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0) NOT NULL) IN ()) WHERE (((COALESCE(t1.c0, vt0.c0, vt0.c0, t1.c0))-((NOT (t1.c38))))) ORDER BY ((t1.c0)%(vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((COALESCE(t1.c0, vt0.c0, vt0.c0, t1.c0))-((NOT (t1.c38))))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((t1.c0) NOT NULL) IN ()) ORDER BY ((t1.c0)%(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((t1.c0) NOT NULL) IN ()) WHERE (((COALESCE(t1.c0, vt0.c0, vt0.c0, t1.c0))-((NOT (t1.c38))))) ORDER BY ((t1.c0)%(vt0.c0)) COLLATE BINARY;
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON rt0.c4 FULL OUTER JOIN t1 ON ((((((t1.c38)%(rt0.c1)))OR(t1.c0)))OR((rt0.c4 IN ()))) FULL OUTER JOIN rt0 ON (((vt0.c0) NOT NULL) IN ()) WHERE (json_type(((vt0.c0)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0)<(rt0.c0)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON rt0.c4 FULL OUTER JOIN t1 ON ((((((t1.c38)%(rt0.c1)))OR(t1.c0)))OR((rt0.c4 IN ()))) FULL OUTER JOIN rt0 ON (((vt0.c0) NOT NULL) IN ()));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON rt0.c4 FULL OUTER JOIN t1 ON ((((((t1.c38)%(rt0.c1)))OR(t1.c0)))OR((rt0.c4 IN ()))) FULL OUTER JOIN rt0 ON (((vt0.c0) NOT NULL) IN ()) WHERE (json_type(((vt0.c0)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((vt0.c0)<(rt0.c0)))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON rt0.c4 FULL OUTER JOIN t1 ON ((((((t1.c38)%(rt0.c1)))OR(t1.c0)))OR((rt0.c4 IN ()))) FULL OUTER JOIN rt0 ON (((vt0.c0) NOT NULL) IN ()));
SELECT ALL * FROM rt0, t0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0, t0 WHERE (UPPER(DISTINCT '220849563')) ORDER BY ((((vt0.c0) NOT BETWEEN ('-2129875641') AND (-1.61608966E9)))>((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT '220849563')) IS TRUE)  as count FROM t1, vt0, vt1, rt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-2129875641') AND (-1.61608966E9)))>((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0, t0 WHERE (UPPER(DISTINCT '220849563')) ORDER BY ((((vt0.c0) NOT BETWEEN ('-2129875641') AND (-1.61608966E9)))>((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT '220849563')) IS TRUE)  as count FROM t1, vt0, vt1, rt0, t0 ORDER BY ((((vt0.c0) NOT BETWEEN ('-2129875641') AND (-1.61608966E9)))>((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0, vt1, rt0, t0 WHERE (UPPER(DISTINCT '220849563')) ORDER BY ((((vt0.c0) NOT BETWEEN ('-2129875641') AND (-1.61608966E9)))>((((rt0.c3, vt1.c0, rt0.c1)) BETWEEN ((t0.c0, vt1.c0, vt1.c0)) AND ((t0.c0, rt0.c3, rt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ()));
SELECT COUNT(*) FROM t1, vt1 INDEXED BY i3, vt0 CROSS JOIN t0 ON ((((vt1.c0)AND(t1.c0))) NOT NULL) INNER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(IFNULL(rt0.c0, vt1.c0))) WHERE ((+ (((rt0.c2) NOTNULL)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t1, vt1 INDEXED BY i3, vt0 CROSS JOIN t0 ON ((((vt1.c0)AND(t1.c0))) NOT NULL) INNER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(IFNULL(rt0.c0, vt1.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt1 INDEXED BY i3, vt0 CROSS JOIN t0 ON ((((vt1.c0)AND(t1.c0))) NOT NULL) INNER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(IFNULL(rt0.c0, vt1.c0))) WHERE ((+ (((rt0.c2) NOTNULL)))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t1, vt1 INDEXED BY i3, vt0 CROSS JOIN t0 ON ((((vt1.c0)AND(t1.c0))) NOT NULL) INNER JOIN rt0 ON ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(IFNULL(rt0.c0, vt1.c0))) ORDER BY CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 CROSS JOIN t1 ON CAST(UPPER(DISTINCT t1.c38) AS NUMERIC) WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (((((t1.c38)AND(vt1.c0)))AND('K>'))) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (((((t1.c38)AND(vt1.c0)))AND('K>'))) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 CROSS JOIN t1 ON CAST(UPPER(DISTINCT t1.c38) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 CROSS JOIN t1 ON CAST(UPPER(DISTINCT t1.c38) AS NUMERIC) WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (((((t1.c38)AND(vt1.c0)))AND('K>'))) AND (NULL COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (((((t1.c38)AND(vt1.c0)))AND('K>'))) AND (NULL COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt1, vt0 CROSS JOIN t1 ON CAST(UPPER(DISTINCT t1.c38) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 CROSS JOIN t1 ON CAST(UPPER(DISTINCT t1.c38) AS NUMERIC) WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (((((t1.c38)AND(vt1.c0)))AND('K>'))) AND (NULL COLLATE RTRIM)));
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c1)|(t1.c0)))AND(((x'816e') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(t1.c0)))AND(((x'816e') ISNULL)))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c1)|(t1.c0)))AND(((x'816e') ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)|(t1.c0)))AND(((x'816e') ISNULL)))) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT * FROM t1, vt0, rt0 WHERE (((((rt0.c1)|(t1.c0)))AND(((x'816e') ISNULL))));
SELECT ALL * FROM vt0, t0, t1, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c4, vt0.c0, rt0.c2))==((t1.c0, rt0.c0, rt0.c3))))OR(x'd345')))AND(NULL))) ORDER BY (((((vt0.c0)AND(-868318511))))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN 0.5698470482211997 WHEN 't' THEN vt0.c0 WHEN t1.c38 THEN rt0.c4 END))) ASC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((t1.c0)<<(t1.c38)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4, vt0.c0, rt0.c2))=((t1.c0, rt0.c0, rt0.c3))))OR(x'd345')))AND(NULL))) IS TRUE)  as count FROM vt0, t0, t1, rt0 NATURAL JOIN vt1 ORDER BY (((((vt0.c0)AND(-868318511))))!=((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN 0.5698470482211997 WHEN 't' THEN vt0.c0 WHEN t1.c38 THEN rt0.c4 END))) ASC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((t1.c0)<<(t1.c38)))) ASC);
SELECT ALL * FROM vt0, t0, t1, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c4, vt0.c0, rt0.c2))==((t1.c0, rt0.c0, rt0.c3))))OR(x'd345')))AND(NULL))) ORDER BY (((((vt0.c0)AND(-868318511))))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN 0.5698470482211997 WHEN 't' THEN vt0.c0 WHEN t1.c38 THEN rt0.c4 END))) ASC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((t1.c0)<<(t1.c38)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c4, vt0.c0, rt0.c2))=((t1.c0, rt0.c0, rt0.c3))))OR(x'd345')))AND(NULL))) IS TRUE)  as count FROM vt0, t0, t1, rt0 NATURAL JOIN vt1 ORDER BY (((((vt0.c0)AND(-868318511))))!=((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN 0.5698470482211997 WHEN 't' THEN vt0.c0 WHEN t1.c38 THEN rt0.c4 END))) ASC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((t1.c0)<<(t1.c38)))) ASC);
SELECT ALL * FROM vt0, t0, t1, rt0 NATURAL JOIN vt1 WHERE ((((((((rt0.c4, vt0.c0, rt0.c2))==((t1.c0, rt0.c0, rt0.c3))))OR(x'd345')))AND(NULL))) ORDER BY (((((vt0.c0)AND(-868318511))))<>((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN 0.5698470482211997 WHEN 't' THEN vt0.c0 WHEN t1.c38 THEN rt0.c4 END))) ASC  NULLS FIRST, ((rt0.c0 IN ()) IN ()) ASC  NULLS FIRST, ((CASE vt1.c0  WHEN NULL THEN rt0.c3 ELSE vt0.c0 END) BETWEEN (((rt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))) AND (((t1.c0)<<(t1.c38)))) ASC;
SELECT ALL * FROM vt0, vt1, t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((t0.c0) NOT NULL)) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, vt1, t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((t0.c0) NOT NULL)));
SELECT ALL * FROM vt0, vt1, t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((t0.c0) NOT NULL)) WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt0, vt1, t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((t0.c0) NOT NULL)));
SELECT ALL * FROM vt0, vt1, t1 LEFT OUTER JOIN t0 ON UNLIKELY(DISTINCT ((t0.c0) NOT NULL)) WHERE (t1.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0, vt0 WHERE (highlight(((rt0.c1) NOT BETWEEN (x'ec07782d9aaf') AND (t0.c0)), 0.6194492289260582, t1.c0, 0.04565898332593821));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1) NOT BETWEEN (x'ec07782d9aaf') AND (t0.c0)), 0.6194492289260582, t1.c0, 0.04565898332593821)) IS TRUE)  as count FROM rt0, vt1, t1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0, vt0 WHERE (highlight(((rt0.c1) NOT BETWEEN (x'ec07782d9aaf') AND (t0.c0)), 0.6194492289260582, t1.c0, 0.04565898332593821));
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt0.c1) NOT BETWEEN (x'ec07782d9aaf') AND (t0.c0)), 0.6194492289260582, t1.c0, 0.04565898332593821)) IS TRUE)  as count FROM rt0, vt1, t1, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0, vt0 WHERE (highlight(((rt0.c1) NOT BETWEEN (x'ec07782d9aaf') AND (t0.c0)), 0.6194492289260582, t1.c0, 0.04565898332593821));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt0.c1)!=(rt0.c2)) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t1.c0)) IN ((NOT (rt0.c2)))) INNER JOIN t1 ON ((((((((((vt0.c0)OR(t1.c38)))OR(rt0.c0)))OR(rt0.c4)))AND(vt1.c0)))%(((((rt0.c3)AND(t1.c38)))OR(vt0.c0)))) WHERE ((~ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt0.c1)!=(rt0.c2)) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t1.c0)) IN ((NOT (rt0.c2)))) INNER JOIN t1 ON ((((((((((vt0.c0)OR(t1.c38)))OR(rt0.c0)))OR(rt0.c4)))AND(vt1.c0)))%(((((rt0.c3)AND(t1.c38)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt0.c1)!=(rt0.c2)) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t1.c0)) IN ((NOT (rt0.c2)))) INNER JOIN t1 ON ((((((((((vt0.c0)OR(t1.c38)))OR(rt0.c0)))OR(rt0.c4)))AND(vt1.c0)))%(((((rt0.c3)AND(t1.c38)))OR(vt0.c0)))) WHERE ((~ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt0.c1)!=(rt0.c2)) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN (rt0.c1, t1.c0)) IN ((NOT (rt0.c2)))) INNER JOIN t1 ON ((((((((((vt0.c0)OR(t1.c38)))OR(rt0.c0)))OR(rt0.c4)))AND(vt1.c0)))%(((((rt0.c3)AND(t1.c38)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t1, rt0, t0 WHERE (((((((((((((NULL)AND((((t1.c38))<=((t1.c0))))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))))AND(((t1.c38) ISNULL))))OR((- (t0.c0)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((((rt0.c0, 0.38729397802620524, rt0.c0))<>((rt0.c0, t1.c0, t0.c0)))))) ORDER BY -1786451907 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)AND((((t1.c38))<=((t1.c0))))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))))AND(((t1.c38) ISNULL))))OR((- (t0.c0)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((((rt0.c0, 0.38729397802620524, rt0.c0))!=((rt0.c0, t1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t1, rt0, t0 ORDER BY -1786451907 ASC);
SELECT ALL COUNT(*) FROM vt1, t1, rt0, t0 WHERE (((((((((((((NULL)AND((((t1.c38))<=((t1.c0))))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))))AND(((t1.c38) ISNULL))))OR((- (t0.c0)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((((rt0.c0, 0.38729397802620524, rt0.c0))<>((rt0.c0, t1.c0, t0.c0)))))) ORDER BY -1786451907 ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)AND((((t1.c38))<=((t1.c0))))))OR((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))))AND(((t1.c38) ISNULL))))OR((- (t0.c0)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((((rt0.c0, 0.38729397802620524, rt0.c0))!=((rt0.c0, t1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t1, rt0, t0 ORDER BY -1786451907 ASC);
SELECT ALL * FROM t1, rt0 INNER JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((t1.c38) BETWEEN (t1.c0) AND (rt0.c2))))) WHERE (((((rt0.c2)<(rt0.c4)))AND(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c4)))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((t1.c38) BETWEEN (t1.c0) AND (rt0.c2))))));
SELECT ALL * FROM t1, rt0 INNER JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((t1.c38) BETWEEN (t1.c0) AND (rt0.c2))))) WHERE (((((rt0.c2)<(rt0.c4)))AND(t1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<(rt0.c4)))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, rt0 INNER JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((t1.c38) BETWEEN (t1.c0) AND (rt0.c2))))));
SELECT ALL * FROM t1, rt0 INNER JOIN vt1 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((((t1.c38) BETWEEN (t1.c0) AND (rt0.c2))))) WHERE (((((rt0.c2)<(rt0.c4)))AND(t1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (NULLIF('j5>먲XlvYY', vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (NULLIF('j5>먲XlvYY', vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (NULLIF('j5>먲XlvYY', vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (NULLIF('j5>먲XlvYY', vt1.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt1.c0))) IS FALSE)) ORDER BY ((vt1.c0) BETWEEN (((vt1.c0)AND(vt1.c0))) AND (NULLIF('j5>먲XlvYY', vt1.c0)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((INSTR(vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((INSTR(vt1.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED ORDER BY ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((INSTR(vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((INSTR(vt1.c0, vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED ORDER BY ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((t0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((INSTR(vt1.c0, vt0.c0))))) ORDER BY ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (x'');
SELECT * FROM t1, vt1, t0 WHERE ((((ROUND(vt1.c0, t0.c0), ((((vt1.c0)OR(vt1.c0)))OR(t1.c38)), ((t0.c0)IS(vt1.c0)), CASE WHEN t0.c0 THEN t1.c38 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END, vt1.c0))>=((t0.c0, '', ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (~ (t1.c38)), (((x'', t1.c38, t1.c38)) BETWEEN ((t1.c0, vt1.c0, t0.c0)) AND ((t1.c38, vt1.c0, t1.c38))))))) ORDER BY ((((vt1.c0)>>(t1.c38)))LIKE(t1.c38 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((ROUND(vt1.c0, t0.c0), ((((vt1.c0)OR(vt1.c0)))OR(t1.c38)), ((t0.c0)IS(vt1.c0)), CASE WHEN t0.c0 THEN t1.c38 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END, vt1.c0))>=((t0.c0, '', ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (~ (t1.c38)), (((x'', t1.c38, t1.c38)) BETWEEN ((t1.c0, vt1.c0, t0.c0)) AND ((t1.c38, vt1.c0, t1.c38))))))) IS TRUE)  as count FROM t1, vt1, t0 ORDER BY ((((vt1.c0)>>(t1.c38)))LIKE(t1.c38 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM t1, vt1, t0 WHERE ((((ROUND(vt1.c0, t0.c0), ((((vt1.c0)OR(vt1.c0)))OR(t1.c38)), ((t0.c0)IS(vt1.c0)), CASE WHEN t0.c0 THEN t1.c38 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END, vt1.c0))>=((t0.c0, '', ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (~ (t1.c38)), (((x'', t1.c38, t1.c38)) BETWEEN ((t1.c0, vt1.c0, t0.c0)) AND ((t1.c38, vt1.c0, t1.c38))))))) ORDER BY ((((vt1.c0)>>(t1.c38)))LIKE(t1.c38 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((ROUND(vt1.c0, t0.c0), ((((vt1.c0)OR(vt1.c0)))OR(t1.c38)), ((t0.c0)IS(vt1.c0)), CASE WHEN t0.c0 THEN t1.c38 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END, vt1.c0))>=((t0.c0, '', ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (~ (t1.c38)), (((x'', t1.c38, t1.c38)) BETWEEN ((t1.c0, vt1.c0, t0.c0)) AND ((t1.c38, vt1.c0, t1.c38))))))) IS TRUE)  as count FROM t1, vt1, t0 ORDER BY ((((vt1.c0)>>(t1.c38)))LIKE(t1.c38 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM t1, vt1, t0 WHERE ((((ROUND(vt1.c0, t0.c0), ((((vt1.c0)OR(vt1.c0)))OR(t1.c38)), ((t0.c0)IS(vt1.c0)), CASE WHEN t0.c0 THEN t1.c38 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END, vt1.c0))>=((t0.c0, '', ((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (~ (t1.c38)), (((x'', t1.c38, t1.c38)) BETWEEN ((t1.c0, vt1.c0, t0.c0)) AND ((t1.c38, vt1.c0, t1.c38))))))) ORDER BY ((((vt1.c0)>>(t1.c38)))LIKE(t1.c38 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (vt1.c0 IN (((t0.c0)<=(0.05469861881258631)))) DESC, (NOT (CAST(vt1.c0 AS BLOB))), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN ('') AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY (vt1.c0 IN (((t0.c0)<=(0.05469861881258631)))) DESC, (NOT (CAST(vt1.c0 AS BLOB))), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN ('') AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (vt1.c0 IN (((t0.c0)<=(0.05469861881258631)))) DESC, (NOT (CAST(vt1.c0 AS BLOB))), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN ('') AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 ORDER BY (vt1.c0 IN (((t0.c0)<=(0.05469861881258631)))) DESC, (NOT (CAST(vt1.c0 AS BLOB))), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN ('') AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (vt1.c0 COLLATE BINARY) ORDER BY (vt1.c0 IN (((t0.c0)<=(0.05469861881258631)))) DESC, (NOT (CAST(vt1.c0 AS BLOB))), ((((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) BETWEEN ('') AND (((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((+ (0Xffffffffcc3e82d1))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((+ (0xffffffffcc3e82d1))) IS TRUE)  as count FROM vt0, t1, vt1, rt0, t0 ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((+ (0Xffffffffcc3e82d1))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((+ (0xffffffffcc3e82d1))) IS TRUE)  as count FROM vt0, t1, vt1, rt0, t0 ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((+ (0Xffffffffcc3e82d1))) ORDER BY CAST(((rt0.c1)%(rt0.c3)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rtreenode(rt0.c1, vt1.c0))AND(((rt0.c3)<(rt0.c2)))))AND(((rt0.c4)>(t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(rt0.c1, vt1.c0))AND(((rt0.c3)<(rt0.c2)))))AND(((rt0.c4)>(t1.c38))))) IS TRUE)  as count FROM vt1, t0, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rtreenode(rt0.c1, vt1.c0))AND(((rt0.c3)<(rt0.c2)))))AND(((rt0.c4)>(t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rtreenode(rt0.c1, vt1.c0))AND(((rt0.c3)<(rt0.c2)))))AND(((rt0.c4)>(t1.c38))))) IS TRUE)  as count FROM vt1, t0, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rtreenode(rt0.c1, vt1.c0))AND(((rt0.c3)<(rt0.c2)))))AND(((rt0.c4)>(t1.c38)))));
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN t1.c38 THEN t1.c0 ELSE t0.c0 END THEN (((vt1.c0, rt0.c1, t0.c0))==((rt0.c1, t1.c38, rt0.c4))) ELSE ((rt0.c2) ISNULL) END WHERE (((((rt0.c0)OR(t1.c38)))AND((((rt0.c1))>=((vt1.c0)))))) ORDER BY CASE (('395841076') BETWEEN (rt0.c0) AND (0Xffffffffd98a14ca))  WHEN ((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt0.c0  WHEN rt0.c2 THEN t1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(t1.c38)))AND((((rt0.c1))>=((vt1.c0)))))) IS TRUE)  as count FROM t0, t1, vt1 NOT INDEXED, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN t1.c38 THEN t1.c0 ELSE t0.c0 END THEN (((vt1.c0, rt0.c1, t0.c0))=((rt0.c1, t1.c38, rt0.c4))) ELSE ((rt0.c2) ISNULL) END ORDER BY CASE (('395841076') BETWEEN (rt0.c0) AND (0Xffffffffd98a14ca))  WHEN ((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt0.c0  WHEN rt0.c2 THEN t1.c0 END END);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN t1.c38 THEN t1.c0 ELSE t0.c0 END THEN (((vt1.c0, rt0.c1, t0.c0))==((rt0.c1, t1.c38, rt0.c4))) ELSE ((rt0.c2) ISNULL) END WHERE (((((rt0.c0)OR(t1.c38)))AND((((rt0.c1))>=((vt1.c0)))))) ORDER BY CASE (('395841076') BETWEEN (rt0.c0) AND (0Xffffffffd98a14ca))  WHEN ((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt0.c0  WHEN rt0.c2 THEN t1.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(t1.c38)))AND((((rt0.c1))>=((vt1.c0)))))) IS TRUE)  as count FROM t0, t1, vt1 NOT INDEXED, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN t1.c38 THEN t1.c0 ELSE t0.c0 END THEN (((vt1.c0, rt0.c1, t0.c0))=((rt0.c1, t1.c38, rt0.c4))) ELSE ((rt0.c2) ISNULL) END ORDER BY CASE (('395841076') BETWEEN (rt0.c0) AND (0Xffffffffd98a14ca))  WHEN ((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt0.c0  WHEN rt0.c2 THEN t1.c0 END END);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 FULL OUTER JOIN rt0 ON CASE WHEN CASE vt0.c0  WHEN t1.c38 THEN t1.c0 ELSE t0.c0 END THEN (((vt1.c0, rt0.c1, t0.c0))==((rt0.c1, t1.c38, rt0.c4))) ELSE ((rt0.c2) ISNULL) END WHERE (((((rt0.c0)OR(t1.c38)))AND((((rt0.c1))>=((vt1.c0)))))) ORDER BY CASE (('395841076') BETWEEN (rt0.c0) AND (0Xffffffffd98a14ca))  WHEN ((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0)) THEN vt1.c0 COLLATE RTRIM ELSE CASE vt0.c0  WHEN rt0.c2 THEN t1.c0 END END;
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_USED(rt0.c4)) BETWEEN ((- (rt0.c4))) AND (CASE WHEN rt0.c1 THEN t0.c0 END)) CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)>=(t1.c38)) THEN (+ (rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c3 THEN t1.c0 WHEN vt1.c0 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 END WHEN (((t1.c0))>((t0.c0))) THEN (~ (t1.c0)) WHEN ((((((((x'')OR(rt0.c2)))AND(vt1.c0)))AND(0.5489131165855687)))OR(t1.c0)) THEN rt0.c1 WHEN ((t1.c38)LIKE(t1.c0)) THEN rt0.c4 END RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) IS TRUE) WHERE (((UPPER(t1.c38))/(t1.c0 COLLATE RTRIM))) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(t1.c38))/(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_USED(rt0.c4)) BETWEEN ((- (rt0.c4))) AND (CASE WHEN rt0.c1 THEN t0.c0 END)) CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)>=(t1.c38)) THEN (+ (rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c3 THEN t1.c0 WHEN vt1.c0 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 END WHEN (((t1.c0))>((t0.c0))) THEN (~ (t1.c0)) WHEN ((((((((x'')OR(rt0.c2)))AND(vt1.c0)))AND(0.5489131165855687)))OR(t1.c0)) THEN rt0.c1 WHEN ((t1.c38)LIKE(t1.c0)) THEN rt0.c4 END RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) IS TRUE) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t1 FULL OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_USED(rt0.c4)) BETWEEN ((- (rt0.c4))) AND (CASE WHEN rt0.c1 THEN t0.c0 END)) CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)>=(t1.c38)) THEN (+ (rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c3 THEN t1.c0 WHEN vt1.c0 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 END WHEN (((t1.c0))>((t0.c0))) THEN (~ (t1.c0)) WHEN ((((((((x'')OR(rt0.c2)))AND(vt1.c0)))AND(0.5489131165855687)))OR(t1.c0)) THEN rt0.c1 WHEN ((t1.c38)LIKE(t1.c0)) THEN rt0.c4 END RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) IS TRUE) WHERE (((UPPER(t1.c38))/(t1.c0 COLLATE RTRIM))) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(t1.c38))/(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON ((SQLITE_COMPILEOPTION_USED(rt0.c4)) BETWEEN ((- (rt0.c4))) AND (CASE WHEN rt0.c1 THEN t0.c0 END)) CROSS JOIN vt1 ON CASE WHEN ((vt1.c0)>=(t1.c38)) THEN (+ (rt0.c4)) WHEN (rt0.c1 IN ()) THEN CASE WHEN rt0.c3 THEN t1.c0 WHEN vt1.c0 THEN rt0.c3 WHEN t0.c0 THEN t0.c0 END WHEN (((t1.c0))>((t0.c0))) THEN (~ (t1.c0)) WHEN ((((((((x'')OR(rt0.c2)))AND(vt1.c0)))AND(0.5489131165855687)))OR(t1.c0)) THEN rt0.c1 WHEN ((t1.c38)LIKE(t1.c0)) THEN rt0.c4 END RIGHT OUTER JOIN t0 ON ((CAST(t0.c0 AS TEXT)) IS TRUE) ORDER BY t0.c0 COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t1, vt0 WHERE (((((((((0xffffffffbb881101)AND(t1.c38)))OR(t1.c0)))OR(((t1.c0)<(t1.c0)))))AND((t1.c38 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffbb881101)AND(t1.c38)))OR(t1.c0)))OR(((t1.c0)<(t1.c0)))))AND((t1.c38 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((((0xffffffffbb881101)AND(t1.c38)))OR(t1.c0)))OR(((t1.c0)<(t1.c0)))))AND((t1.c38 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0xffffffffbb881101)AND(t1.c38)))OR(t1.c0)))OR(((t1.c0)<(t1.c0)))))AND((t1.c38 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT * FROM t1, vt0 WHERE (((((((((0xffffffffbb881101)AND(t1.c38)))OR(t1.c0)))OR(((t1.c0)<(t1.c0)))))AND((t1.c38 IN (t1.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN vt1 WHERE ((((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CASE WHEN (~ ('-726364663')) THEN vt0.c0 COLLATE NOCASE WHEN (((NULL))>((vt1.c0))) THEN ((((0.6119255404423679)AND(vt0.c0)))AND(vt1.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, '0.8821411759864614') END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN (~ ('-726364663')) THEN vt0.c0 COLLATE NOCASE WHEN (((NULL))>((vt1.c0))) THEN ((((0.6119255404423679)AND(vt0.c0)))AND(vt1.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, '0.8821411759864614') END  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN vt1 WHERE ((((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CASE WHEN (~ ('-726364663')) THEN vt0.c0 COLLATE NOCASE WHEN (((NULL))>((vt1.c0))) THEN ((((0.6119255404423679)AND(vt0.c0)))AND(vt1.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, '0.8821411759864614') END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY CASE WHEN (~ ('-726364663')) THEN vt0.c0 COLLATE NOCASE WHEN (((NULL))>((vt1.c0))) THEN ((((0.6119255404423679)AND(vt0.c0)))AND(vt1.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, '0.8821411759864614') END  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED NATURAL JOIN vt1 WHERE ((((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY CASE WHEN (~ ('-726364663')) THEN vt0.c0 COLLATE NOCASE WHEN (((NULL))>((vt1.c0))) THEN ((((0.6119255404423679)AND(vt0.c0)))AND(vt1.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN IFNULL(DISTINCT vt0.c0, '0.8821411759864614') END  NULLS LAST;
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ABS(((t0.c0)*(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c0)*(t0.c0)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ABS(((t0.c0)*(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c0)*(t0.c0)))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ABS(((t0.c0)*(t0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE ((((((((0.2702219049435094)OR(t1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END THEN (+ (t1.c0)) ELSE ((vt1.c0)<(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((0.2702219049435094)OR(t1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END THEN (+ (t1.c0)) ELSE ((vt1.c0)<(NULL)) END) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE ((((((((0.2702219049435094)OR(t1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END THEN (+ (t1.c0)) ELSE ((vt1.c0)<(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((0.2702219049435094)OR(t1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END THEN (+ (t1.c0)) ELSE ((vt1.c0)<(NULL)) END) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt1, vt0 WHERE (CASE ((((((((0.2702219049435094)OR(t1.c0)))OR(vt1.c0)))AND(t0.c0)))OR(vt0.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c38 END THEN (+ (t1.c0)) ELSE ((vt1.c0)<(NULL)) END);
SELECT ALL * FROM t0, vt0, vt1 WHERE (0.32233213693309526);
SELECT SUM(count) FROM (SELECT ALL ((0.32233213693309526) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (0.32233213693309526);
SELECT SUM(count) FROM (SELECT ALL ((0.32233213693309526) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (0.32233213693309526);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((((((x'')OR(t1.c0)))OR(t1.c0)) IN (vt1.c0 COLLATE BINARY, 0xffffffff92ddec2f))) ORDER BY (- ((~ (vt1.c0)))) ASC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))*(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'')OR(t1.c0)))OR(t1.c0)) IN (vt1.c0 COLLATE BINARY, 0Xffffffff92ddec2f))) IS TRUE)  as count FROM vt0, t1, vt1, rt0, t0 ORDER BY (- ((~ (vt1.c0)))) ASC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))*(CAST(NULL AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((((((x'')OR(t1.c0)))OR(t1.c0)) IN (vt1.c0 COLLATE BINARY, 0xffffffff92ddec2f))) ORDER BY (- ((~ (vt1.c0)))) ASC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))*(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x'')OR(t1.c0)))OR(t1.c0)) IN (vt1.c0 COLLATE BINARY, 0Xffffffff92ddec2f))) IS TRUE)  as count FROM vt0, t1, vt1, rt0, t0 ORDER BY (- ((~ (vt1.c0)))) ASC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))*(CAST(NULL AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, vt1, rt0, t0 WHERE ((((((x'')OR(t1.c0)))OR(t1.c0)) IN (vt1.c0 COLLATE BINARY, 0xffffffff92ddec2f))) ORDER BY (- ((~ (vt1.c0)))) ASC  NULLS FIRST, ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)))*(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)=(rt0.c4)))/(CASE WHEN rt0.c3 THEN 0Xffffffffb9b310a5 WHEN rt0.c4 THEN 0.0705902515985124 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)*(t0.c0)))&(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(rt0.c4)))/(CASE WHEN rt0.c3 THEN 0xffffffffb9b310a5 WHEN rt0.c4 THEN 0.0705902515985124 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)*(t0.c0)))&(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)=(rt0.c4)))/(CASE WHEN rt0.c3 THEN 0Xffffffffb9b310a5 WHEN rt0.c4 THEN 0.0705902515985124 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)*(t0.c0)))&(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)=(rt0.c4)))/(CASE WHEN rt0.c3 THEN 0xffffffffb9b310a5 WHEN rt0.c4 THEN 0.0705902515985124 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0)*(t0.c0)))&(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c0)=(rt0.c4)))/(CASE WHEN rt0.c3 THEN 0Xffffffffb9b310a5 WHEN rt0.c4 THEN 0.0705902515985124 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY ((((rt0.c0)*(t0.c0)))&(rt0.c2 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0, t1 WHERE ((((rt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, NULLIF(t1.c0, vt0.c0), (~ (rt0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0), '茠MioiYDc()', ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, NULLIF(t1.c0, vt0.c0), (~ (rt0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0), '茠MioiYDc()', ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, t0, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0, t1 WHERE ((((rt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, NULLIF(t1.c0, vt0.c0), (~ (rt0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0), '茠MioiYDc()', ((vt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, NULLIF(t1.c0, vt0.c0), (~ (rt0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0), '茠MioiYDc()', ((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, t0, vt0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt0, t1 WHERE ((((rt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE, NULLIF(t1.c0, vt0.c0), (~ (rt0.c0)))) AND ((SQLITE_COMPILEOPTION_USED(vt1.c0), '茠MioiYDc()', ((vt0.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3))<>((vt1.c0))) IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)-(NULL))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))<>((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)-(NULL))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3))<>((vt1.c0))) IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)-(NULL))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))<>((vt1.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)-(NULL))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c3))<>((vt1.c0))) IN ())) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) AND ((((rt0.c2)-(NULL))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 INDEXED BY i99, t1, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (1111002500) AND ((t0.c0 IN (t1.c0)))) INNER JOIN rt0 ON vt0.c0 WHERE (((((((((((vt0.c0)GLOB(rt0.c3)))AND(((vt1.c0)=(rt0.c2)))))AND((((vt1.c0, rt0.c2, rt0.c1))>=((rt0.c2, vt0.c0, t0.c0))))))AND(((vt1.c0) NOT NULL))))AND(((rt0.c2)AND(rt0.c0))))) ORDER BY (rt0.c3 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)GLOB(rt0.c3)))AND(((vt1.c0)=(rt0.c2)))))AND((((vt1.c0, rt0.c2, rt0.c1))>=((rt0.c2, vt0.c0, t0.c0))))))AND(((vt1.c0) NOT NULL))))AND(((rt0.c2)AND(rt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i99, t1, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (1111002500) AND ((t0.c0 IN (t1.c0)))) INNER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c3 IN ()) COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt0 INDEXED BY i99, t1, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (1111002500) AND ((t0.c0 IN (t1.c0)))) INNER JOIN rt0 ON vt0.c0 WHERE (((((((((((vt0.c0)GLOB(rt0.c3)))AND(((vt1.c0)=(rt0.c2)))))AND((((vt1.c0, rt0.c2, rt0.c1))>=((rt0.c2, vt0.c0, t0.c0))))))AND(((vt1.c0) NOT NULL))))AND(((rt0.c2)AND(rt0.c0))))) ORDER BY (rt0.c3 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)GLOB(rt0.c3)))AND(((vt1.c0)=(rt0.c2)))))AND((((vt1.c0, rt0.c2, rt0.c1))>=((rt0.c2, vt0.c0, t0.c0))))))AND(((vt1.c0) NOT NULL))))AND(((rt0.c2)AND(rt0.c0))))) IS TRUE)  as count FROM vt0 INDEXED BY i99, t1, vt1 RIGHT OUTER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOT BETWEEN (1111002500) AND ((t0.c0 IN (t1.c0)))) INNER JOIN rt0 ON vt0.c0 ORDER BY (rt0.c3 IN ()) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((t1.c38 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c38 IN ())) IS TRUE)  as count FROM vt0, t0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((t1.c38 IN ()));
SELECT SUM(count) FROM (SELECT (((t1.c38 IN ())) IS TRUE)  as count FROM vt0, t0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, t1, vt1 WHERE ((t1.c38 IN ()));
SELECT * FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE ((~ ((t1.c0 IN ())))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 NATURAL JOIN t1 ORDER BY vt1.c0);
SELECT * FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE ((~ ((t1.c0 IN ())))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t1.c0 IN ())))) IS TRUE)  as count FROM t0, vt0, vt1 NATURAL JOIN t1 ORDER BY vt1.c0);
SELECT * FROM t0, vt0, vt1 NATURAL JOIN t1 WHERE ((~ ((t1.c0 IN ())))) ORDER BY vt1.c0;
SELECT * FROM t1 NATURAL JOIN vt1 WHERE (((1493241045)&(vt1.c0))) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((1493241045)&(vt1.c0))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY NULL COLLATE NOCASE);
SELECT * FROM t1 NATURAL JOIN vt1 WHERE (((1493241045)&(vt1.c0))) ORDER BY NULL COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((1493241045)&(vt1.c0))) IS TRUE)  as count FROM t1 NATURAL JOIN vt1 ORDER BY NULL COLLATE NOCASE);
SELECT * FROM t1 NATURAL JOIN vt1 WHERE (((1493241045)&(vt1.c0))) ORDER BY NULL COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON rt0.c0 INNER JOIN vt0 ON CAST(json_remove('', t0.c0) AS BLOB) WHERE (((('', rt0.c3, rt0.c2)) NOT BETWEEN (((((rt0.c0))==((vt0.c0))), ((t0.c0)+(vt0.c0)), rt0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOTNULL), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND ('Vpd厾\r!R'))))));
SELECT SUM(count) FROM (SELECT ((((('', rt0.c3, rt0.c2)) NOT BETWEEN (((((rt0.c0))=((vt0.c0))), ((t0.c0)+(vt0.c0)), rt0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOTNULL), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND ('Vpd厾\r!R')))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON rt0.c0 INNER JOIN vt0 ON CAST(json_remove('', t0.c0) AS BLOB));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON rt0.c0 INNER JOIN vt0 ON CAST(json_remove('', t0.c0) AS BLOB) WHERE (((('', rt0.c3, rt0.c2)) NOT BETWEEN (((((rt0.c0))==((vt0.c0))), ((t0.c0)+(vt0.c0)), rt0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOTNULL), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND ('Vpd厾\r!R'))))));
SELECT SUM(count) FROM (SELECT ((((('', rt0.c3, rt0.c2)) NOT BETWEEN (((((rt0.c0))=((vt0.c0))), ((t0.c0)+(vt0.c0)), rt0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOTNULL), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND ('Vpd厾\r!R')))))) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN t1 ON rt0.c0 INNER JOIN vt0 ON CAST(json_remove('', t0.c0) AS BLOB));
SELECT COUNT(*) FROM rt0, t0 LEFT OUTER JOIN t1 ON rt0.c0 INNER JOIN vt0 ON CAST(json_remove('', t0.c0) AS BLOB) WHERE (((('', rt0.c3, rt0.c2)) NOT BETWEEN (((((rt0.c0))==((vt0.c0))), ((t0.c0)+(vt0.c0)), rt0.c3 COLLATE RTRIM)) AND ((((t0.c0) NOTNULL), ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c3) BETWEEN (rt0.c1) AND ('Vpd厾\r!R'))))));
SELECT * FROM vt1 WHERE ((((((vt1.c0)AND(0.46152975033904486)))AND(vt1.c0)) IN ())) ORDER BY 0.2702219049435094;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(0.46152975033904486)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.2702219049435094);
SELECT * FROM vt1 WHERE ((((((vt1.c0)AND(0.46152975033904486)))AND(vt1.c0)) IN ())) ORDER BY 0.2702219049435094;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)AND(0.46152975033904486)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY 0.2702219049435094);
SELECT * FROM vt1 WHERE ((((((vt1.c0)AND(0.46152975033904486)))AND(vt1.c0)) IN ())) ORDER BY 0.2702219049435094;
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY (NOT ((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((NOT (t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY (NOT ((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM vt0, t1 ORDER BY (NOT ((NOT (t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (t1.c0) ORDER BY (NOT ((NOT (t1.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1, rt0 WHERE (HEX(DISTINCT t1.c38) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t1.c38) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1, rt0 WHERE (HEX(DISTINCT t1.c38) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t1.c38) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t1, rt0 WHERE (HEX(DISTINCT t1.c38) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t1, vt0, t0, rt0 WHERE (CAST(((rt0.c0)>=(rt0.c0)) AS REAL)) ORDER BY (((t1.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((LIKE(rt0.c4, rt0.c0, '2')))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY (((t1.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((LIKE(rt0.c4, rt0.c0, '2')))) ASC);
SELECT ALL COUNT(*) FROM t1, vt0, t0, rt0 WHERE (CAST(((rt0.c0)>=(rt0.c0)) AS REAL)) ORDER BY (((t1.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((LIKE(rt0.c4, rt0.c0, '2')))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0 ORDER BY (((t1.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((LIKE(rt0.c4, rt0.c0, '2')))) ASC);
SELECT ALL COUNT(*) FROM t1, vt0, t0, rt0 WHERE (CAST(((rt0.c0)>=(rt0.c0)) AS REAL)) ORDER BY (((t1.c0)) BETWEEN ((((vt0.c0) IS FALSE))) AND ((LIKE(rt0.c4, rt0.c0, '2')))) ASC;
SELECT ALL * FROM vt1, t0, t1, rt0, vt0 WHERE ((((((rt0.c4)/(rt0.c0)), ((rt0.c3)&(t0.c0)), t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(vt0.c0)))OR(t1.c0)), ((vt1.c0) NOTNULL), ((((0xffffffffde505ca0)AND(rt0.c4)))OR(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)/(rt0.c0)), ((rt0.c3)&(t0.c0)), t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(vt0.c0)))OR(t1.c0)), ((vt1.c0) NOTNULL), ((((0Xffffffffde505ca0)AND(rt0.c4)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, t1, rt0, vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT ALL * FROM vt1, t0, t1, rt0, vt0 WHERE ((((((rt0.c4)/(rt0.c0)), ((rt0.c3)&(t0.c0)), t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(vt0.c0)))OR(t1.c0)), ((vt1.c0) NOTNULL), ((((0xffffffffde505ca0)AND(rt0.c4)))OR(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)/(rt0.c0)), ((rt0.c3)&(t0.c0)), t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(vt0.c0)))OR(t1.c0)), ((vt1.c0) NOTNULL), ((((0Xffffffffde505ca0)AND(rt0.c4)))OR(vt0.c0)))))) IS TRUE)  as count FROM vt1, t0, t1, rt0, vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST);
SELECT ALL * FROM vt1, t0, t1, rt0, vt0 WHERE ((((((rt0.c4)/(rt0.c0)), ((rt0.c3)&(t0.c0)), t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(vt0.c0)))OR(t1.c0)), ((vt1.c0) NOTNULL), ((((0xffffffffde505ca0)AND(rt0.c4)))OR(vt0.c0)))))) ORDER BY (CAST(vt0.c0 AS TEXT) IN ())  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((NOT (t1.c38)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c38)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c38)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((NOT (t1.c38)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((NOT (t1.c38)) COLLATE BINARY);
SELECT * FROM vt1 WHERE ((- (LTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (LTRIM(vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (LTRIM(vt1.c0))));
SELECT * FROM t0, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)LIKE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)LIKE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)LIKE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)LIKE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END)LIKE(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)));
SELECT * FROM t1 INNER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FULL OUTER JOIN t0 ON (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c0))))>=(((~ (rt0.c2))))) WHERE ((((((- (rt0.c2)))OR(CASE t1.c38  WHEN rt0.c4 THEN '0.6194492289260582' WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR((+ (0.3412041785078769))))) ORDER BY ((((((t1.c0)AND(rt0.c0)))OR('356905453')))+(((((((((t0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c1)))AND('0.5841704452820475')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(CASE t1.c38  WHEN rt0.c4 THEN '0.6194492289260582' WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR((+ (0.3412041785078769))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FULL OUTER JOIN t0 ON (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c0))))>=(((~ (rt0.c2))))) ORDER BY ((((((t1.c0)AND(rt0.c0)))OR('356905453')))+(((((((((t0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c1)))AND('0.5841704452820475')))) DESC);
SELECT * FROM t1 INNER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FULL OUTER JOIN t0 ON (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c0))))>=(((~ (rt0.c2))))) WHERE ((((((- (rt0.c2)))OR(CASE t1.c38  WHEN rt0.c4 THEN '0.6194492289260582' WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR((+ (0.3412041785078769))))) ORDER BY ((((((t1.c0)AND(rt0.c0)))OR('356905453')))+(((((((((t0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c1)))AND('0.5841704452820475')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c2)))OR(CASE t1.c38  WHEN rt0.c4 THEN '0.6194492289260582' WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR((+ (0.3412041785078769))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FULL OUTER JOIN t0 ON (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c0))))>=(((~ (rt0.c2))))) ORDER BY ((((((t1.c0)AND(rt0.c0)))OR('356905453')))+(((((((((t0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c1)))AND('0.5841704452820475')))) DESC);
SELECT * FROM t1 INNER JOIN rt0 ON CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FULL OUTER JOIN t0 ON (((((rt0.c3) NOT BETWEEN (rt0.c1) AND (t0.c0))))>=(((~ (rt0.c2))))) WHERE ((((((- (rt0.c2)))OR(CASE t1.c38  WHEN rt0.c4 THEN '0.6194492289260582' WHEN rt0.c4 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 END)))OR((+ (0.3412041785078769))))) ORDER BY ((((((t1.c0)AND(rt0.c0)))OR('356905453')))+(((((((((t0.c0)OR(t1.c0)))AND(rt0.c4)))OR(rt0.c1)))AND('0.5841704452820475')))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST('1109010181' AS REAL))) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, t1 NOT INDEXED ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST('1109010181' AS REAL))) AND ((rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST('1109010181' AS REAL))) AND ((rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, t1 NOT INDEXED ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST('1109010181' AS REAL))) AND ((rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt0, t0 NOT INDEXED, t1 WHERE (CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN t1.c0 ELSE t1.c0 END AS INTEGER)) ORDER BY (((rt0.c3)) NOT BETWEEN ((CAST('1109010181' AS REAL))) AND ((rt0.c0)));
SELECT * FROM vt0 INNER JOIN t1 ON (((CASE WHEN t0.c0 THEN t0.c0 END))=((MIN(vt1.c0, vt1.c0)))) LEFT OUTER JOIN vt1 ON ((t1.c0) IS FALSE) INNER JOIN t0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((LIKE(t1.c0, t1.c38))%(((t0.c0)IS(t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t1.c0, t1.c38))%(((t0.c0)IS(t1.c38))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((CASE WHEN t0.c0 THEN t0.c0 END))=((MIN(vt1.c0, vt1.c0)))) LEFT OUTER JOIN vt1 ON ((t1.c0) IS FALSE) INNER JOIN t0 ON CAST((t1.c0 IN ()) AS BLOB));
SELECT * FROM vt0 INNER JOIN t1 ON (((CASE WHEN t0.c0 THEN t0.c0 END))=((MIN(vt1.c0, vt1.c0)))) LEFT OUTER JOIN vt1 ON ((t1.c0) IS FALSE) INNER JOIN t0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((LIKE(t1.c0, t1.c38))%(((t0.c0)IS(t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t1.c0, t1.c38))%(((t0.c0)IS(t1.c38))))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((CASE WHEN t0.c0 THEN t0.c0 END))=((MIN(vt1.c0, vt1.c0)))) LEFT OUTER JOIN vt1 ON ((t1.c0) IS FALSE) INNER JOIN t0 ON CAST((t1.c0 IN ()) AS BLOB));
SELECT * FROM vt0 INNER JOIN t1 ON (((CASE WHEN t0.c0 THEN t0.c0 END))=((MIN(vt1.c0, vt1.c0)))) LEFT OUTER JOIN vt1 ON ((t1.c0) IS FALSE) INNER JOIN t0 ON CAST((t1.c0 IN ()) AS BLOB) WHERE (((LIKE(t1.c0, t1.c38))%(((t0.c0)IS(t1.c38)))));
SELECT * FROM t0, rt0 WHERE (-1843957401 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-1843957401 COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (-1843957401 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((-1843957401 COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (-1843957401 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((1221116493)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(((rt0.c1)||(rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1 COLLATE BINARY)OR(((NULL)>=(rt0.c0)))))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(((NULL)>=(rt0.c0)))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((1221116493)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(((rt0.c1)||(rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((1221116493)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(((rt0.c1)||(rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1 COLLATE BINARY)OR(((NULL)>=(rt0.c0)))))OR(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1 COLLATE BINARY)OR(((NULL)>=(rt0.c0)))))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((1221116493)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(((rt0.c1)||(rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((1221116493)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))OR(((rt0.c1)||(rt0.c4)))))OR(((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))) WHERE (((((rt0.c1 COLLATE BINARY)OR(((NULL)>=(rt0.c0)))))OR(((rt0.c2) IS TRUE))));
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c38)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c38)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c38)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1);
SELECT * FROM vt0, vt1, t1 WHERE ((((t1.c38)) BETWEEN (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t1.c0))))));
SELECT COUNT(*) FROM vt0, t1, rt0 INDEXED BY i16, vt1, t0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ALL ((t1.c38) IS TRUE)  as count FROM vt0, t1, rt0 INDEXED BY i16, vt1, t0);
SELECT COUNT(*) FROM vt0, t1, rt0 INDEXED BY i16, vt1, t0 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ALL ((t1.c38) IS TRUE)  as count FROM vt0, t1, rt0 INDEXED BY i16, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON '0.31119222679558567' FULL OUTER JOIN t0 ON LIKE(CASE WHEN rt0.c2 THEN NULL END, CASE WHEN rt0.c1 THEN rt0.c2 END) WHERE (((((UPPER(rt0.c4))OR((+ (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((((((LOWER(t0.c0))AND(DATETIME(t1.c0, rt0.c2, t0.c0, t0.c0, rt0.c4))))OR(x'')))OR((rt0.c3 IN ()))))AND((~ (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UPPER(rt0.c4))OR((+ (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON '0.31119222679558567' FULL OUTER JOIN t0 ON LIKE(CASE WHEN rt0.c2 THEN NULL END, CASE WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((((((((LOWER(t0.c0))AND(DATETIME(t1.c0, rt0.c2, t0.c0, t0.c0, rt0.c4))))OR(x'')))OR((rt0.c3 IN ()))))AND((~ (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON '0.31119222679558567' FULL OUTER JOIN t0 ON LIKE(CASE WHEN rt0.c2 THEN NULL END, CASE WHEN rt0.c1 THEN rt0.c2 END) WHERE (((((UPPER(rt0.c4))OR((+ (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((((((LOWER(t0.c0))AND(DATETIME(t1.c0, rt0.c2, t0.c0, t0.c0, rt0.c4))))OR(x'')))OR((rt0.c3 IN ()))))AND((~ (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((UPPER(rt0.c4))OR((+ (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON '0.31119222679558567' FULL OUTER JOIN t0 ON LIKE(CASE WHEN rt0.c2 THEN NULL END, CASE WHEN rt0.c1 THEN rt0.c2 END) ORDER BY ((((((((LOWER(t0.c0))AND(DATETIME(t1.c0, rt0.c2, t0.c0, t0.c0, rt0.c4))))OR(x'')))OR((rt0.c3 IN ()))))AND((~ (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON '0.31119222679558567' FULL OUTER JOIN t0 ON LIKE(CASE WHEN rt0.c2 THEN NULL END, CASE WHEN rt0.c1 THEN rt0.c2 END) WHERE (((((UPPER(rt0.c4))OR((+ (vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((((((LOWER(t0.c0))AND(DATETIME(t1.c0, rt0.c2, t0.c0, t0.c0, rt0.c4))))OR(x'')))OR((rt0.c3 IN ()))))AND((~ (rt0.c3)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t1 ON (((((((((vt1.c0 IN (vt1.c0)))AND(((((((((x'')AND(rt0.c1)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c2, rt0.c1)))))OR(t1.c0 COLLATE RTRIM)))AND(((vt1.c0)-(t1.c38)))) RIGHT OUTER JOIN t0 ON ((rt0.c1)IS NOT((((rt0.c3))>((rt0.c4))))) WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t1.c38 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END) AND (0.5130282412419311))) ORDER BY 0X1376e2fc ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t1.c38 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END) AND (0.5130282412419311))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t1 ON (((((((((vt1.c0 IN (vt1.c0)))AND(((((((((x'')AND(rt0.c1)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c2, rt0.c1)))))OR(t1.c0 COLLATE RTRIM)))AND(((vt1.c0)-(t1.c38)))) RIGHT OUTER JOIN t0 ON ((rt0.c1)IS NOT((((rt0.c3))>((rt0.c4))))) ORDER BY 0X1376e2fc ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 FULL OUTER JOIN t1 ON (((((((((vt1.c0 IN (vt1.c0)))AND(((((((((x'')AND(rt0.c1)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c2, rt0.c1)))))OR(t1.c0 COLLATE RTRIM)))AND(((vt1.c0)-(t1.c38)))) RIGHT OUTER JOIN t0 ON ((rt0.c1)IS NOT((((rt0.c3))>((rt0.c4))))) WHERE (((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t1.c38 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END) AND (0.5130282412419311))) ORDER BY 0X1376e2fc ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t1.c38 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END) AND (0.5130282412419311))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN t1 ON (((((((((vt1.c0 IN (vt1.c0)))AND(((((((((x'')AND(rt0.c1)))OR(t1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((rt0.c1 IN (rt0.c2, rt0.c1)))))OR(t1.c0 COLLATE RTRIM)))AND(((vt1.c0)-(t1.c38)))) RIGHT OUTER JOIN t0 ON ((rt0.c1)IS NOT((((rt0.c3))>((rt0.c4))))) ORDER BY 0X1376e2fc ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c1)+(rt0.c4)) IN ()) WHERE (CASE WHEN ((rt0.c1)AND(rt0.c3)) THEN (('')/(rt0.c0)) WHEN ((vt1.c0)>=(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND ('')) ELSE CASE WHEN 'ky%k-Uv' THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)AND(rt0.c3)) THEN (('')/(rt0.c0)) WHEN ((vt1.c0)>=(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND ('')) ELSE CASE WHEN 'ky%k-Uv' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c1)+(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c1)+(rt0.c4)) IN ()) WHERE (CASE WHEN ((rt0.c1)AND(rt0.c3)) THEN (('')/(rt0.c0)) WHEN ((vt1.c0)>=(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND ('')) ELSE CASE WHEN 'ky%k-Uv' THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)AND(rt0.c3)) THEN (('')/(rt0.c0)) WHEN ((vt1.c0)>=(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND ('')) ELSE CASE WHEN 'ky%k-Uv' THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c1)+(rt0.c4)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN vt1 ON (((rt0.c1)+(rt0.c4)) IN ()) WHERE (CASE WHEN ((rt0.c1)AND(rt0.c3)) THEN (('')/(rt0.c0)) WHEN ((vt1.c0)>=(rt0.c0)) THEN CAST(rt0.c1 AS NUMERIC) WHEN ((rt0.c1) IS TRUE) THEN ((vt1.c0) NOT BETWEEN (rt0.c3) AND ('')) ELSE CASE WHEN 'ky%k-Uv' THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0, t1 WHERE (((((((t1.c38) IS FALSE))OR(NULL)))AND(TRIM(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c38) IS FALSE))OR(NULL)))AND(TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0, t1 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0, t1 WHERE (((((((t1.c38) IS FALSE))OR(NULL)))AND(TRIM(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c38) IS FALSE))OR(NULL)))AND(TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0, t0, t1 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0, t0, t1 WHERE (((((((t1.c38) IS FALSE))OR(NULL)))AND(TRIM(rt0.c0)))) ORDER BY rt0.c2 ASC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((- (((rt0.c1)*(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)*(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((- (((rt0.c1)*(rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)*(rt0.c4))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((- (((rt0.c1)*(rt0.c4)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)>>(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(vt1.c0 AS REAL) COLLATE NOCASE WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)>>(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)>>(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(vt1.c0 AS REAL) COLLATE NOCASE WHERE (((+ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt1.c0)) IN ())) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt1 ON CAST(((vt1.c0)>>(t0.c0)) AS TEXT) LEFT OUTER JOIN t0 ON CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED, vt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED, vt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS TEXT)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, t1 NOT INDEXED, vt1, rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS TEXT));
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))/(((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))) WHERE ((+ (((t0.c0)%(vt1.c0))))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (rt0.c4) AND (((((rt0.c4)AND('-1207739981')))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)%(vt1.c0))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))/(((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (rt0.c4) AND (((((rt0.c4)AND('-1207739981')))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))/(((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))) WHERE ((+ (((t0.c0)%(vt1.c0))))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (rt0.c4) AND (((((rt0.c4)AND('-1207739981')))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)%(vt1.c0))))) IS TRUE)  as count FROM t0, rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))/(((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (rt0.c4) AND (((((rt0.c4)AND('-1207739981')))AND(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 INNER JOIN vt0 ON ((+ (rt0.c0)) IN ()) FULL OUTER JOIN vt1 ON (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))/(((((((((rt0.c4)OR(rt0.c4)))AND(vt0.c0)))AND(rt0.c3)))AND(t0.c0)))) WHERE ((+ (((t0.c0)%(vt1.c0))))) ORDER BY ((((vt0.c0)&(vt0.c0))) NOT BETWEEN (rt0.c4) AND (((((rt0.c4)AND('-1207739981')))AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON ((((0.0705902515985124) NOTNULL))+((+ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(DISTINCT t1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((((0.0705902515985124) NOTNULL))+((+ (vt1.c0)))) ORDER BY TRIM(DISTINCT t1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON ((((0.0705902515985124) NOTNULL))+((+ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(DISTINCT t1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t1 ON ((((0.0705902515985124) NOTNULL))+((+ (vt1.c0)))) ORDER BY TRIM(DISTINCT t1.c0) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t1 ON ((((0.0705902515985124) NOTNULL))+((+ (vt1.c0)))) WHERE ((~ (CAST(vt1.c0 AS INTEGER)))) ORDER BY TRIM(DISTINCT t1.c0) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t1, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0, vt1);
SELECT COUNT(*) FROM t1, t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, t0, vt1);
SELECT COUNT(*) FROM t1, t0, vt1 WHERE (NULL);
SELECT ALL * FROM vt0, vt1, t0, rt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0, t1);
SELECT ALL * FROM vt0, vt1, t0, rt0, t1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, t0, rt0, t1);
SELECT ALL * FROM vt0, vt1, t0, rt0, t1 WHERE (rt0.c2);
SELECT * FROM t1, t0 WHERE (((UPPER(t1.c0))AND(t1.c0 COLLATE RTRIM))) ORDER BY (NOT (((t1.c0)AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(t1.c0))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, t0 ORDER BY (NOT (((t1.c0)AND(t0.c0))))  NULLS FIRST);
SELECT * FROM t1, t0 WHERE (((UPPER(t1.c0))AND(t1.c0 COLLATE RTRIM))) ORDER BY (NOT (((t1.c0)AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(t1.c0))AND(t1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t1, t0 ORDER BY (NOT (((t1.c0)AND(t0.c0))))  NULLS FIRST);
SELECT * FROM t1, t0 WHERE (((UPPER(t1.c0))AND(t1.c0 COLLATE RTRIM))) ORDER BY (NOT (((t1.c0)AND(t0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM) NOT NULL));
SELECT ALL COUNT(*) FROM vt1, t0, vt0, t1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, t1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, t0, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, t1, rt0 WHERE (rt0.c0);
SELECT ALL * FROM t0, t1 INNER JOIN vt1 ON (((((t1.c0 IN ()))AND(SQLITE_COMPILEOPTION_USED(t1.c0))))AND(CASE WHEN t1.c0 THEN vt1.c0 ELSE t0.c0 END)) WHERE (COALESCE(DISTINCT CASE WHEN t1.c38 THEN t0.c0 END, (NOT (NULL)), t0.c0, (NOT (vt1.c0)))) ORDER BY ((((COALESCE(DISTINCT t1.c0, t1.c38))OR((- (vt1.c0)))))AND(((t1.c38)==(t1.c38)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN t1.c38 THEN t0.c0 END, (NOT (NULL)), t0.c0, (NOT (vt1.c0)))) IS TRUE)  as count FROM t0, t1 NOT INDEXED INNER JOIN vt1 ON (((((t1.c0 IN ()))AND(SQLITE_COMPILEOPTION_USED(t1.c0))))AND(CASE WHEN t1.c0 THEN vt1.c0 ELSE t0.c0 END)) ORDER BY ((((COALESCE(DISTINCT t1.c0, t1.c38))OR((- (vt1.c0)))))AND(((t1.c38)=(t1.c38)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, t1 INNER JOIN vt1 ON (((((t1.c0 IN ()))AND(SQLITE_COMPILEOPTION_USED(t1.c0))))AND(CASE WHEN t1.c0 THEN vt1.c0 ELSE t0.c0 END)) WHERE (COALESCE(DISTINCT CASE WHEN t1.c38 THEN t0.c0 END, (NOT (NULL)), t0.c0, (NOT (vt1.c0)))) ORDER BY ((((COALESCE(DISTINCT t1.c0, t1.c38))OR((- (vt1.c0)))))AND(((t1.c38)==(t1.c38)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT CASE WHEN t1.c38 THEN t0.c0 END, (NOT (NULL)), t0.c0, (NOT (vt1.c0)))) IS TRUE)  as count FROM t0, t1 NOT INDEXED INNER JOIN vt1 ON (((((t1.c0 IN ()))AND(SQLITE_COMPILEOPTION_USED(t1.c0))))AND(CASE WHEN t1.c0 THEN vt1.c0 ELSE t0.c0 END)) ORDER BY ((((COALESCE(DISTINCT t1.c0, t1.c38))OR((- (vt1.c0)))))AND(((t1.c38)=(t1.c38)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, t1 INNER JOIN vt1 ON (((((t1.c0 IN ()))AND(SQLITE_COMPILEOPTION_USED(t1.c0))))AND(CASE WHEN t1.c0 THEN vt1.c0 ELSE t0.c0 END)) WHERE (COALESCE(DISTINCT CASE WHEN t1.c38 THEN t0.c0 END, (NOT (NULL)), t0.c0, (NOT (vt1.c0)))) ORDER BY ((((COALESCE(DISTINCT t1.c0, t1.c38))OR((- (vt1.c0)))))AND(((t1.c38)==(t1.c38)))) ASC  NULLS LAST;
SELECT * FROM vt0, rt0, vt1, t0 WHERE ((((CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((CAST(rt0.c1 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)), (+ (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((CAST(rt0.c1 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)), (+ (t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE ((((CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((CAST(rt0.c1 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)), (+ (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((CAST(rt0.c1 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)), (+ (t0.c0)))))) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT * FROM vt0, rt0, vt1, t0 WHERE ((((CAST(vt0.c0 AS TEXT), CAST(t0.c0 AS INTEGER), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))))<((CAST(rt0.c1 AS NUMERIC), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)), (+ (t0.c0))))));
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1 WHERE ((((((t1.c38)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (t1.c0) AND (t1.c0))) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (((t0.c0)|(rt0.c2))) AND (rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c38)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  as count FROM t0, rt0, vt1, t1 ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (((t0.c0)|(rt0.c2))) AND (rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1 WHERE ((((((t1.c38)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (t1.c0) AND (t1.c0))) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (((t0.c0)|(rt0.c2))) AND (rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c38)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (t1.c0) AND (t1.c0))) IS TRUE)  as count FROM t0, rt0, vt1, t1 ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (((t0.c0)|(rt0.c2))) AND (rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1 WHERE ((((((t1.c38)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) BETWEEN (t1.c0) AND (t1.c0))) ORDER BY (((rt0.c3 IN (rt0.c3))) NOT BETWEEN (((t0.c0)|(rt0.c2))) AND (rt0.c4))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1)=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)=(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1)=(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1)=(t1.c0))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((NOT (((rt0.c1)=(t1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt1, t1 FULL OUTER JOIN rt0 ON x'974f' WHERE ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)) IN ())) IS TRUE)  as count FROM t0, vt1, t1 FULL OUTER JOIN rt0 ON x'974f');
SELECT ALL COUNT(*) FROM t0, vt1, t1 FULL OUTER JOIN rt0 ON x'974f' WHERE ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)) IN ())) IS TRUE)  as count FROM t0, vt1, t1 FULL OUTER JOIN rt0 ON x'974f');
SELECT ALL COUNT(*) FROM t0, vt1, t1 FULL OUTER JOIN rt0 ON x'974f' WHERE ((((rt0.c3) NOT BETWEEN (t0.c0) AND (t1.c38)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (json_insert(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%('')), load_extension(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_insert(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%('')), load_extension(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (json_insert(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%('')), load_extension(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_insert(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%('')), load_extension(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (json_insert(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((t0.c0)%('')), load_extension(t0.c0), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ()))) ORDER BY ((((t0.c0))>((NULL))) IN (t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>((NULL))) IN (t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))) DESC);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ()))) ORDER BY ((((t0.c0))>((NULL))) IN (t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0))>((NULL))) IN (t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))) DESC);
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT (t0.c0 IN (t0.c0, t0.c0)), (t0.c0 IN ()))) ORDER BY ((((t0.c0))>((NULL))) IN (t0.c0 COLLATE RTRIM, ((t0.c0) ISNULL))) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON CASE WHEN (((0.49671262827704654, vt0.c0, vt0.c0))<((vt0.c0, '-1986342180', 0.5975442055319004))) THEN CASE vt1.c0  WHEN t1.c38 THEN vt1.c0 END END RIGHT OUTER JOIN vt0 ON (((((((vt1.c0)OR(0.9745322330096325)))AND(x''))))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN -6.21146864E8 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END))) WHERE (((COALESCE(vt1.c0, vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt1.c0, vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED INNER JOIN t1 ON CASE WHEN (((0.49671262827704654, vt0.c0, vt0.c0))<((vt0.c0, '-1986342180', 0.5975442055319004))) THEN CASE vt1.c0  WHEN t1.c38 THEN vt1.c0 END END RIGHT OUTER JOIN vt0 ON (((((((vt1.c0)OR(0.9745322330096325)))AND(x''))))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN -6.21146864E8 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 INNER JOIN t1 ON CASE WHEN (((0.49671262827704654, vt0.c0, vt0.c0))<((vt0.c0, '-1986342180', 0.5975442055319004))) THEN CASE vt1.c0  WHEN t1.c38 THEN vt1.c0 END END RIGHT OUTER JOIN vt0 ON (((((((vt1.c0)OR(0.9745322330096325)))AND(x''))))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN -6.21146864E8 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END))) WHERE (((COALESCE(vt1.c0, vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt1.c0, vt1.c0)) NOT BETWEEN (CASE vt1.c0  WHEN t1.c0 THEN t1.c0 ELSE vt1.c0 END) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED INNER JOIN t1 ON CASE WHEN (((0.49671262827704654, vt0.c0, vt0.c0))<((vt0.c0, '-1986342180', 0.5975442055319004))) THEN CASE vt1.c0  WHEN t1.c38 THEN vt1.c0 END END RIGHT OUTER JOIN vt0 ON (((((((vt1.c0)OR(0.9745322330096325)))AND(x''))))>=((CASE t1.c0  WHEN t1.c0 THEN t1.c0 WHEN vt0.c0 THEN -6.21146864E8 WHEN t1.c0 THEN t1.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0) NOT NULL) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM rt0, t1, vt1, t0, vt0 WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY CASE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('M6kY')))  WHEN (((rt0.c1))>=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)) THEN ABS(DISTINCT rt0.c3) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c4)&(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t1, vt1, t0, vt0 ORDER BY CASE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('M6kY')))  WHEN (((rt0.c1))>=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)) THEN ABS(DISTINCT rt0.c3) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c4)&(rt0.c1)) END DESC  NULLS FIRST);
SELECT * FROM rt0, t1, vt1, t0, vt0 WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY CASE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('M6kY')))  WHEN (((rt0.c1))>=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)) THEN ABS(DISTINCT rt0.c3) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c4)&(rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, t1, vt1, t0, vt0 ORDER BY CASE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('M6kY')))  WHEN (((rt0.c1))>=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)) THEN ABS(DISTINCT rt0.c3) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c4)&(rt0.c1)) END DESC  NULLS FIRST);
SELECT * FROM rt0, t1, vt1, t0, vt0 WHERE ((((NOT (rt0.c0))) IS TRUE)) ORDER BY CASE (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND (('M6kY')))  WHEN (((rt0.c1))>=((rt0.c0))) THEN CAST(vt0.c0 AS TEXT) WHEN ((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)) THEN ABS(DISTINCT rt0.c3) WHEN CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c3 END THEN ((rt0.c4)&(rt0.c1)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c0)>(x'')))) AND ((((t1.c38)/(vt0.c0))))) WHERE (LOWER((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((t1.c0 IN ()))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c0)>(x'')))) AND ((((t1.c38)/(vt0.c0))))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c0)>(x'')))) AND ((((t1.c38)/(vt0.c0))))) WHERE (LOWER((t1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((t1.c0 IN ()))) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c0)>(x'')))) AND ((((t1.c38)/(vt0.c0))))));
SELECT COUNT(*) FROM t1 INNER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((vt0.c0)>(x'')))) AND ((((t1.c38)/(vt0.c0))))) WHERE (LOWER((t1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (((((HEX(vt1.c0))AND(((vt1.c0) ISNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ((vt1.c0 IN ()))), vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt1.c0))AND(((vt1.c0) ISNULL))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ((vt1.c0 IN ()))), vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((HEX(vt1.c0))AND(((vt1.c0) ISNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ((vt1.c0 IN ()))), vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt1.c0))AND(((vt1.c0) ISNULL))))AND(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS INTEGER) IN ((vt1.c0 IN ()))), vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((HEX(vt1.c0))AND(((vt1.c0) ISNULL))))AND(vt1.c0 COLLATE NOCASE))) ORDER BY (CAST(vt1.c0 AS INTEGER) IN ((vt1.c0 IN ()))), vt1.c0 ASC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (((t1.c0 COLLATE RTRIM)|(((rt0.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)|(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((t1.c0 COLLATE RTRIM)|(((rt0.c4) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0 COLLATE RTRIM)|(((rt0.c4) NOTNULL)))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((t1.c0 COLLATE RTRIM)|(((rt0.c4) NOTNULL))));
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt1 ON ((((rt0.c4)<>(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (rt0.c2)) WHERE (((((('m4vq') IS TRUE)))=((((rt0.c3)<>('-2096397364')))))) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)AND(vt1.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS INTEGER)))  NULLS FIRST, (((((((t1.c0)OR(vt1.c0)))AND('o')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), STRFTIME(t1.c0, t1.c38, rt0.c1)))<((LTRIM(rt0.c0), (((rt0.c3, t1.c0, rt0.c0, rt0.c3, t1.c38))<=((x'', rt0.c1, vt1.c0, t1.c0, vt1.c0))), ((t1.c38) NOT BETWEEN (rt0.c4) AND (vt1.c0))))), CAST(((rt0.c1)+(t1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('m4vq') IS TRUE)))=((((rt0.c3)<>('-2096397364')))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt1 ON ((((rt0.c4)!=(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (rt0.c2)) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)AND(vt1.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS INTEGER)))  NULLS FIRST, (((((((t1.c0)OR(vt1.c0)))AND('o')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), STRFTIME(t1.c0, t1.c38, rt0.c1)))<((LTRIM(rt0.c0), (((rt0.c3, t1.c0, rt0.c0, rt0.c3, t1.c38))<=((x'', rt0.c1, vt1.c0, t1.c0, vt1.c0))), ((t1.c38) NOT BETWEEN (rt0.c4) AND (vt1.c0))))), CAST(((rt0.c1)+(t1.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt1 ON ((((rt0.c4)<>(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (rt0.c2)) WHERE (((((('m4vq') IS TRUE)))=((((rt0.c3)<>('-2096397364')))))) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)AND(vt1.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS INTEGER)))  NULLS FIRST, (((((((t1.c0)OR(vt1.c0)))AND('o')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), STRFTIME(t1.c0, t1.c38, rt0.c1)))<((LTRIM(rt0.c0), (((rt0.c3, t1.c0, rt0.c0, rt0.c3, t1.c38))<=((x'', rt0.c1, vt1.c0, t1.c0, vt1.c0))), ((t1.c38) NOT BETWEEN (rt0.c4) AND (vt1.c0))))), CAST(((rt0.c1)+(t1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((('m4vq') IS TRUE)))=((((rt0.c3)<>('-2096397364')))))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN vt1 ON ((((rt0.c4)!=(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (rt0.c2)) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)AND(vt1.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS INTEGER)))  NULLS FIRST, (((((((t1.c0)OR(vt1.c0)))AND('o')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), STRFTIME(t1.c0, t1.c38, rt0.c1)))<((LTRIM(rt0.c0), (((rt0.c3, t1.c0, rt0.c0, rt0.c3, t1.c38))<=((x'', rt0.c1, vt1.c0, t1.c0, vt1.c0))), ((t1.c38) NOT BETWEEN (rt0.c4) AND (vt1.c0))))), CAST(((rt0.c1)+(t1.c0)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1 RIGHT OUTER JOIN vt1 ON ((((rt0.c4)<>(rt0.c1))) BETWEEN ((vt1.c0 IN ())) AND (rt0.c2)) WHERE (((((('m4vq') IS TRUE)))=((((rt0.c3)<>('-2096397364')))))) ORDER BY ((rt0.c4) NOT BETWEEN (((((rt0.c3)AND(vt1.c0)))AND(rt0.c2))) AND (CAST(rt0.c4 AS INTEGER)))  NULLS FIRST, (((((((t1.c0)OR(vt1.c0)))AND('o')), ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), STRFTIME(t1.c0, t1.c38, rt0.c1)))<((LTRIM(rt0.c0), (((rt0.c3, t1.c0, rt0.c0, rt0.c3, t1.c38))<=((x'', rt0.c1, vt1.c0, t1.c0, vt1.c0))), ((t1.c38) NOT BETWEEN (rt0.c4) AND (vt1.c0))))), CAST(((rt0.c1)+(t1.c0)) AS BLOB) DESC  NULLS LAST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c0)) COLLATE BINARY WHERE (((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, t0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, t0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c0)) COLLATE BINARY WHERE (((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, t0.c0, t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, t0.c0, t0.c0))) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c0)) COLLATE BINARY);
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)LIKE(t0.c0)) COLLATE BINARY WHERE (((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, t0.c0, t0.c0))) IN ()));
SELECT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN '1816707235' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((-2.4654107E7) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN '1816707235' THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((-2.4654107E7) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN '1816707235' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((-2.4654107E7) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c2  WHEN '1816707235' THEN rt0.c4 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0 ORDER BY ((-2.4654107E7) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((NOT (CASE rt0.c2  WHEN '1816707235' THEN rt0.c4 ELSE rt0.c4 END))) ORDER BY ((-2.4654107E7) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (LOWER(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (LOWER(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (LOWER(vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, t0, vt0 NOT INDEXED, t1 WHERE (((((rt0.c3) NOTNULL)) ISNULL)) ORDER BY ((((2129141615 COLLATE BINARY)AND(rt0.c3)))OR(rt0.c2)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((2129141615 COLLATE BINARY)AND(rt0.c3)))OR(rt0.c2)) DESC  NULLS LAST, vt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 NOT INDEXED, t1 WHERE (((((rt0.c3) NOTNULL)) ISNULL)) ORDER BY ((((2129141615 COLLATE BINARY)AND(rt0.c3)))OR(rt0.c2)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0, t1 ORDER BY ((((2129141615 COLLATE BINARY)AND(rt0.c3)))OR(rt0.c2)) DESC  NULLS LAST, vt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 NOT INDEXED, t1 WHERE (((((rt0.c3) NOTNULL)) ISNULL)) ORDER BY ((((2129141615 COLLATE BINARY)AND(rt0.c3)))OR(rt0.c2)) DESC  NULLS LAST, vt0.c0 ASC;
SELECT ALL COUNT(*) FROM t1, t0, rt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) CROSS JOIN vt0 ON (rt0.c3 IN ()) WHERE ((((t1.c0)>>(t0.c0)) IN (((t1.c38) NOT NULL), ((rt0.c4)==(t1.c0))))) ORDER BY (((((x'd641')>=(t1.c0))))<>((t0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)>>(t0.c0)) IN (((t1.c38) NOT NULL), ((rt0.c4)==(t1.c0))))) IS TRUE)  as count FROM t1, t0, rt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) CROSS JOIN vt0 ON (rt0.c3 IN ()) ORDER BY (((((x'd641')>=(t1.c0))))<>((t0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) CROSS JOIN vt0 ON (rt0.c3 IN ()) WHERE ((((t1.c0)>>(t0.c0)) IN (((t1.c38) NOT NULL), ((rt0.c4)==(t1.c0))))) ORDER BY (((((x'd641')>=(t1.c0))))<>((t0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c0)>>(t0.c0)) IN (((t1.c38) NOT NULL), ((rt0.c4)==(t1.c0))))) IS TRUE)  as count FROM t1, t0, rt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) CROSS JOIN vt0 ON (rt0.c3 IN ()) ORDER BY (((((x'd641')>=(t1.c0))))<>((t0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, rt0 FULL OUTER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) CROSS JOIN vt0 ON (rt0.c3 IN ()) WHERE ((((t1.c0)>>(t0.c0)) IN (((t1.c38) NOT NULL), ((rt0.c4)==(t1.c0))))) ORDER BY (((((x'd641')>=(t1.c0))))<>((t0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT ALL * FROM t1, rt0, vt1 WHERE (CASE WHEN ((rt0.c1)IS NOT(rt0.c3)) THEN rt0.c4 COLLATE RTRIM END) ORDER BY CASE WHEN (('726500128')/(t1.c38)) THEN (rt0.c1 IN (0.97392541871969)) END DESC, (((- (rt0.c3))) NOT BETWEEN (vt1.c0) AND (((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS NOT(rt0.c3)) THEN rt0.c4 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0, vt1 ORDER BY CASE WHEN (('726500128')/(t1.c38)) THEN (rt0.c1 IN (0.97392541871969)) END DESC, (((- (rt0.c3))) NOT BETWEEN (vt1.c0) AND (((t1.c0) IS TRUE))));
SELECT ALL * FROM t1, rt0, vt1 WHERE (CASE WHEN ((rt0.c1)IS NOT(rt0.c3)) THEN rt0.c4 COLLATE RTRIM END) ORDER BY CASE WHEN (('726500128')/(t1.c38)) THEN (rt0.c1 IN (0.97392541871969)) END DESC, (((- (rt0.c3))) NOT BETWEEN (vt1.c0) AND (((t1.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)IS NOT(rt0.c3)) THEN rt0.c4 COLLATE RTRIM END) IS TRUE)  as count FROM t1, rt0, vt1 ORDER BY CASE WHEN (('726500128')/(t1.c38)) THEN (rt0.c1 IN (0.97392541871969)) END DESC, (((- (rt0.c3))) NOT BETWEEN (vt1.c0) AND (((t1.c0) IS TRUE))));
SELECT ALL * FROM t1, rt0, vt1 WHERE (CASE WHEN ((rt0.c1)IS NOT(rt0.c3)) THEN rt0.c4 COLLATE RTRIM END) ORDER BY CASE WHEN (('726500128')/(t1.c38)) THEN (rt0.c1 IN (0.97392541871969)) END DESC, (((- (rt0.c3))) NOT BETWEEN (vt1.c0) AND (((t1.c0) IS TRUE)));
SELECT COUNT(*) FROM t1, vt0, t0, vt1, rt0 WHERE (((((((((((t1.c38)OR(rt0.c2)))AND(t1.c38)))OR(t1.c38)))AND(rt0.c2)))|((vt0.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c38)OR(rt0.c2)))AND(t1.c38)))OR(t1.c38)))AND(rt0.c2)))|((vt0.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM t1, vt0, t0, vt1, rt0 WHERE (((((((((((t1.c38)OR(rt0.c2)))AND(t1.c38)))OR(t1.c38)))AND(rt0.c2)))|((vt0.c0 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c38)OR(rt0.c2)))AND(t1.c38)))OR(t1.c38)))AND(rt0.c2)))|((vt0.c0 IN (t1.c0))))) IS TRUE)  as count FROM t1, vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM t1, vt0, t0, vt1, rt0 WHERE (((((((((((t1.c38)OR(rt0.c2)))AND(t1.c38)))OR(t1.c38)))AND(rt0.c2)))|((vt0.c0 IN (t1.c0)))));
SELECT ALL * FROM rt0, t0, vt1, t1, vt0 WHERE (((((rt0.c1)<(rt0.c2))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c2))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, vt1, t1, vt0);
SELECT ALL * FROM rt0, t0, vt1, t1, vt0 WHERE (((((rt0.c1)<(rt0.c2))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<(rt0.c2))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt0, t0, vt1, t1, vt0);
SELECT ALL * FROM rt0, t0, vt1, t1, vt0 WHERE (((((rt0.c1)<(rt0.c2))) BETWEEN (((rt0.c4) NOTNULL)) AND (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END)));
SELECT * FROM t1, vt1, rt0 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) WHERE (((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))!=(((t1.c38)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))!=(((t1.c38)OR(rt0.c3))))) IS TRUE)  as count FROM t1, vt1, rt0 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC));
SELECT * FROM t1, vt1, rt0 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) WHERE (((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))!=(((t1.c38)OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))!=(((t1.c38)OR(rt0.c3))))) IS TRUE)  as count FROM t1, vt1, rt0 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC));
SELECT * FROM t1, vt1, rt0 CROSS JOIN vt0 ON CAST(vt1.c0 AS NUMERIC) WHERE (((((rt0.c0) BETWEEN (t1.c0) AND (t1.c0)))!=(((t1.c38)OR(rt0.c3)))));
SELECT ALL * FROM t1, rt0, vt0, vt1, t0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'd111') AND (rt0.c1))  WHEN ((((t1.c38)AND(rt0.c4)))OR(rt0.c2)) THEN load_extension(vt1.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (x'd111') AND (rt0.c1))  WHEN ((((t1.c38)AND(rt0.c4)))OR(rt0.c2)) THEN load_extension(vt1.c0, rt0.c2) END) IS TRUE)  as count FROM t1, rt0, vt0, vt1, t0);
SELECT ALL * FROM t1, rt0, vt0, vt1, t0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'd111') AND (rt0.c1))  WHEN ((((t1.c38)AND(rt0.c4)))OR(rt0.c2)) THEN load_extension(vt1.c0, rt0.c2) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT BETWEEN (x'd111') AND (rt0.c1))  WHEN ((((t1.c38)AND(rt0.c4)))OR(rt0.c2)) THEN load_extension(vt1.c0, rt0.c2) END) IS TRUE)  as count FROM t1, rt0, vt0, vt1, t0);
SELECT ALL * FROM t1, rt0, vt0, vt1, t0 WHERE (CASE ((vt0.c0) NOT BETWEEN (x'd111') AND (rt0.c1))  WHEN ((((t1.c38)AND(rt0.c4)))OR(rt0.c2)) THEN load_extension(vt1.c0, rt0.c2) END);
SELECT * FROM t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS BLOB)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS BLOB)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3 DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (CAST(((t0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) AS BLOB)) ORDER BY rt0.c3 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t1, rt0, t0, vt1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c38))))<<(((vt1.c0)>(rt0.c2))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c38))))<<(((vt1.c0)>(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0, t0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, t1, rt0, t0, vt1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c38))))<<(((vt1.c0)>(rt0.c2))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c38))))<<(((vt1.c0)>(rt0.c2))))) IS TRUE)  as count FROM vt0, t1, rt0, t0, vt1 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, t1, rt0, t0, vt1 WHERE ((((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c38))))<<(((vt1.c0)>(rt0.c2))))) ORDER BY NULL  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((NOT (t1.c0)) IN (GLOB(t1.c38, rt0.c1))) WHERE ((((rt0.c3)) BETWEEN (((NOT (rt0.c4)))) AND ((IFNULL(t1.c38, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((NOT (rt0.c4)))) AND ((IFNULL(t1.c38, t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((NOT (t1.c0)) IN (GLOB(t1.c38, rt0.c1))));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((NOT (t1.c0)) IN (GLOB(t1.c38, rt0.c1))) WHERE ((((rt0.c3)) BETWEEN (((NOT (rt0.c4)))) AND ((IFNULL(t1.c38, t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((NOT (rt0.c4)))) AND ((IFNULL(t1.c38, t1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON ((NOT (t1.c0)) IN (GLOB(t1.c38, rt0.c1))));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON ((NOT (t1.c0)) IN (GLOB(t1.c38, rt0.c1))) WHERE ((((rt0.c3)) BETWEEN (((NOT (rt0.c4)))) AND ((IFNULL(t1.c38, t1.c0)))));
SELECT COUNT(*) FROM t1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM t1, vt0, t0 WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, t1, t0 LEFT OUTER JOIN vt1 ON ((((t1.c38)AND(t0.c0)))AND(t1.c38)) COLLATE RTRIM WHERE ((t1.c38 IN (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((t1.c38 IN (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1, t0 LEFT OUTER JOIN vt1 ON ((((t1.c38)AND(t0.c0)))AND(t1.c38)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t1, t0 LEFT OUTER JOIN vt1 ON ((((t1.c38)AND(t0.c0)))AND(t1.c38)) COLLATE RTRIM WHERE ((t1.c38 IN (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((t1.c38 IN (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t1, t0 LEFT OUTER JOIN vt1 ON ((((t1.c38)AND(t0.c0)))AND(t1.c38)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t1, t0 LEFT OUTER JOIN vt1 ON ((((t1.c38)AND(t0.c0)))AND(t1.c38)) COLLATE RTRIM WHERE ((t1.c38 IN (rt0.c1 COLLATE RTRIM)));
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NOT (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NOT (rt0.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE ((((NOT (rt0.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt1.c0)-(0.9720125223004383)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt1.c0)-(0.9720125223004383))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt1.c0)-(0.9720125223004383)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt1.c0)-(0.9720125223004383))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))IS NOT(((vt1.c0)-(0.9720125223004383)))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c3 COLLATE BINARY AS REAL));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((CAST(rt0.c2 AS TEXT))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))&(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((CAST(rt0.c2 AS TEXT))&(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS TEXT))&(vt0.c0))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 NOT INDEXED);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (((CAST(rt0.c2 AS TEXT))&(vt0.c0)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c0)IS(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0)IS(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c0)IS(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0)IS(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c0)IS(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((((((((t0.c0)AND(t0.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))) WHERE (((t0.c0) NOT NULL));
SELECT COUNT(*) FROM vt1, t1, rt0 INDEXED BY i99, t0 WHERE (((rt0.c1 COLLATE NOCASE)>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, t1, rt0 INDEXED BY i99, t0);
SELECT COUNT(*) FROM vt1, t1, rt0 INDEXED BY i99, t0 WHERE (((rt0.c1 COLLATE NOCASE)>((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)>((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, t1, rt0 INDEXED BY i99, t0);
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0))))), 0.20979148307697493 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0))))), 0.20979148307697493 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0))))), 0.20979148307697493 DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0))))), 0.20979148307697493 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN (vt1.c0))))), 0.20979148307697493 DESC;
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0 WHERE ((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN t1.c38 END IN (t0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN t1.c38 END IN (t0.c0))) IS TRUE)  as count FROM rt0, vt1, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0 WHERE ((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN t1.c38 END IN (t0.c0)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN t1.c38 END IN (t0.c0))) IS TRUE)  as count FROM rt0, vt1, t1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t1, t0 WHERE ((CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c4 THEN t1.c0 WHEN rt0.c2 THEN t1.c38 END IN (t0.c0)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((vt0.c0)-(t1.c38)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(t1.c38)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((vt0.c0)-(t1.c38)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(t1.c38)) AS NUMERIC)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(((vt0.c0)-(t1.c38)) AS NUMERIC));
SELECT * FROM t0, t1, vt1, rt0, vt0 WHERE (((((((vt1.c0)AND(t1.c38)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t1.c38)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT * FROM t0, t1, vt1, rt0, vt0 WHERE (((((((vt1.c0)AND(t1.c38)))AND(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(t1.c38)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, t1, vt1, rt0, vt0);
SELECT * FROM t0, t1, vt1, rt0, vt0 WHERE (((((((vt1.c0)AND(t1.c38)))AND(t0.c0))) NOT NULL));
SELECT * FROM t0, vt0 WHERE (NULLIF(QUOTE(t0.c0), (- (t0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (~ (t0.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(QUOTE(t0.c0), (- (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN (~ (t0.c0)) ELSE (vt0.c0 IN ()) END ASC);
SELECT * FROM t0, vt0 WHERE (NULLIF(QUOTE(t0.c0), (- (t0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (~ (t0.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((NULLIF(QUOTE(t0.c0), (- (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN (~ (t0.c0)) ELSE (vt0.c0 IN ()) END ASC);
SELECT * FROM t0, vt0 WHERE (NULLIF(QUOTE(t0.c0), (- (t0.c0)))) ORDER BY CASE WHEN vt0.c0 THEN (~ (t0.c0)) ELSE (vt0.c0 IN ()) END ASC;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c4)/(rt0.c3)) IN (CAST(vt1.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c4)/(rt0.c3)) IN (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c4)/(rt0.c3)) IN (CAST(vt1.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c4)/(rt0.c3)) IN (CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c4)/(rt0.c3)) IN (CAST(vt1.c0 AS BLOB))) WHERE (((CAST(rt0.c4 AS TEXT))LIKE(rt0.c1)));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOT NULL))!=(((t1.c0)%(vt1.c0)))) WHERE ((- (CASE WHEN t1.c0 THEN t1.c38 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c0 THEN t1.c38 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOT NULL))<>(((t1.c0)%(vt1.c0)))));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOT NULL))!=(((t1.c0)%(vt1.c0)))) WHERE ((- (CASE WHEN t1.c0 THEN t1.c38 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN t1.c0 THEN t1.c38 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOT NULL))<>(((t1.c0)%(vt1.c0)))));
SELECT ALL * FROM vt1, t1 LEFT OUTER JOIN vt0 ON ((((t1.c0) NOT NULL))!=(((t1.c0)%(vt1.c0)))) WHERE ((- (CASE WHEN t1.c0 THEN t1.c38 WHEN vt0.c0 THEN t1.c0 WHEN vt0.c0 THEN vt1.c0 END)));
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))||((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'B	V()SS' END)GLOB(UPPER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))||((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'B	V()SS' END)GLOB(UPPER(vt0.c0))));
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))||((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'B	V()SS' END)GLOB(UPPER(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))||((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'B	V()SS' END)GLOB(UPPER(vt0.c0))));
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) ORDER BY (((vt0.c0 IN ()))||((NOT (vt0.c0)))) ASC  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'B	V()SS' END)GLOB(UPPER(vt0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1, t1 WHERE ('NLV9NEQE') ORDER BY CASE NULL  WHEN t1.c38 THEN rt0.c3 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('NLV9NEQE') IS TRUE)  as count FROM rt0, t0, vt0, vt1, t1 ORDER BY CASE NULL  WHEN t1.c38 THEN rt0.c3 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1, t1 WHERE ('NLV9NEQE') ORDER BY CASE NULL  WHEN t1.c38 THEN rt0.c3 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (('NLV9NEQE') IS TRUE)  as count FROM rt0, t0, vt0, vt1, t1 ORDER BY CASE NULL  WHEN t1.c38 THEN rt0.c3 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, t0, vt0, vt1, t1 WHERE ('NLV9NEQE') ORDER BY CASE NULL  WHEN t1.c38 THEN rt0.c3 END COLLATE BINARY;
SELECT ALL * FROM vt0, rt0 WHERE ((((0.7290923768656585)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((rt0.c1 IN ('168284973', rt0.c3)))))) ORDER BY ((vt0.c0) IS TRUE) DESC, (((rt0.c2, '524712129', CASE NULL  WHEN rt0.c3 THEN rt0.c4 END))<=((COALESCE(rt0.c0, rt0.c1), ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)), ((rt0.c2)!=(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.7290923768656585)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((rt0.c1 IN ('168284973', rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) IS TRUE) DESC, (((rt0.c2, '524712129', CASE NULL  WHEN rt0.c3 THEN rt0.c4 END))<=((COALESCE(rt0.c0, rt0.c1), ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)), ((rt0.c2)<>(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((0.7290923768656585)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((rt0.c1 IN ('168284973', rt0.c3)))))) ORDER BY ((vt0.c0) IS TRUE) DESC, (((rt0.c2, '524712129', CASE NULL  WHEN rt0.c3 THEN rt0.c4 END))<=((COALESCE(rt0.c0, rt0.c1), ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)), ((rt0.c2)!=(rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.7290923768656585)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((rt0.c1 IN ('168284973', rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) IS TRUE) DESC, (((rt0.c2, '524712129', CASE NULL  WHEN rt0.c3 THEN rt0.c4 END))<=((COALESCE(rt0.c0, rt0.c1), ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)), ((rt0.c2)<>(rt0.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((0.7290923768656585)) BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((rt0.c1 IN ('168284973', rt0.c3)))))) ORDER BY ((vt0.c0) IS TRUE) DESC, (((rt0.c2, '524712129', CASE NULL  WHEN rt0.c3 THEN rt0.c4 END))<=((COALESCE(rt0.c0, rt0.c1), ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)), ((rt0.c2)!=(rt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE)) ORDER BY (+ ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE)) ORDER BY (+ ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) IS TRUE)) ORDER BY (+ ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1, t1 WHERE (CASE (((0X7a527c8f, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c38, rt0.c3, rt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c1)))  WHEN NULLIF(rt0.c3, rt0.c4) THEN (('440328589')/(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((0x7a527c8f, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c38, rt0.c3, rt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c1)))  WHEN NULLIF(rt0.c3, rt0.c4) THEN (('440328589')/(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT ALL * FROM rt0, vt1, t1 WHERE (CASE (((0X7a527c8f, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c38, rt0.c3, rt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c1)))  WHEN NULLIF(rt0.c3, rt0.c4) THEN (('440328589')/(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((0x7a527c8f, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c38, rt0.c3, rt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c1)))  WHEN NULLIF(rt0.c3, rt0.c4) THEN (('440328589')/(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt1, t1);
SELECT ALL * FROM rt0, vt1, t1 WHERE (CASE (((0X7a527c8f, rt0.c2, rt0.c1)) NOT BETWEEN ((t1.c38, rt0.c3, rt0.c2)) AND ((rt0.c2, vt1.c0, rt0.c1)))  WHEN NULLIF(rt0.c3, rt0.c4) THEN (('440328589')/(rt0.c3)) END);
SELECT ALL * FROM t1 WHERE (((((((((t1.c38)OR(t1.c0)))AND(t1.c0)))AND((- (t1.c0)))))AND(0.4882777366720835)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c38)OR(t1.c0)))AND(t1.c0)))AND((- (t1.c0)))))AND(0.4882777366720835))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c38)OR(t1.c0)))AND(t1.c0)))AND((- (t1.c0)))))AND(0.4882777366720835)));
SELECT SUM(count) FROM (SELECT ((((((((((t1.c38)OR(t1.c0)))AND(t1.c0)))AND((- (t1.c0)))))AND(0.4882777366720835))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c38)OR(t1.c0)))AND(t1.c0)))AND((- (t1.c0)))))AND(0.4882777366720835)));
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ('s');
SELECT SUM(count) FROM (SELECT (('s') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ('s');
SELECT SUM(count) FROM (SELECT (('s') IS TRUE)  as count FROM vt1, vt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t1 WHERE ('s');
SELECT * FROM rt0, vt1, vt0, t1, t0 WHERE (CASE vt1.c0  WHEN 0.7004475981742825 THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((t1.c0)=(vt1.c0)) THEN ((vt0.c0)OR(t1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN NULLIF(t1.c38, NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN 0.7004475981742825 THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((t1.c0)=(vt1.c0)) THEN ((vt0.c0)OR(t1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN NULLIF(t1.c38, NULL) END) IS TRUE)  as count FROM rt0, vt1, vt0, t1, t0);
SELECT * FROM rt0, vt1, vt0, t1, t0 WHERE (CASE vt1.c0  WHEN 0.7004475981742825 THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((t1.c0)=(vt1.c0)) THEN ((vt0.c0)OR(t1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN NULLIF(t1.c38, NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0  WHEN 0.7004475981742825 THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((t1.c0)=(vt1.c0)) THEN ((vt0.c0)OR(t1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN NULLIF(t1.c38, NULL) END) IS TRUE)  as count FROM rt0, vt1, vt0, t1, t0);
SELECT * FROM rt0, vt1, vt0, t1, t0 WHERE (CASE vt1.c0  WHEN 0.7004475981742825 THEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)) WHEN ((t1.c0)=(vt1.c0)) THEN ((vt0.c0)OR(t1.c0)) WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (t1.c0)) THEN NULLIF(t1.c38, NULL) END);
SELECT ALL * FROM vt1, t1, t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t1, t0, rt0);
SELECT ALL * FROM vt1, t1, t0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t1, t0, rt0);
SELECT ALL * FROM vt1, t1, t0, rt0 WHERE (x'');
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t1.c0)+(t0.c0)))OR((((t1.c38)) NOT BETWEEN ((t1.c38)) AND ((t1.c0))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)+(t0.c0)))OR((((t1.c38)) NOT BETWEEN ((t1.c38)) AND ((t1.c0))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t1.c0)+(t0.c0)))OR((((t1.c38)) NOT BETWEEN ((t1.c38)) AND ((t1.c0))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)+(t0.c0)))OR((((t1.c38)) NOT BETWEEN ((t1.c38)) AND ((t1.c0))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) IS TRUE)  as count FROM t1, t0 ORDER BY (t0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t1, t0 WHERE (((((((t1.c0)+(t0.c0)))OR((((t1.c38)) NOT BETWEEN ((t1.c38)) AND ((t1.c0))))))OR(((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c0))))) ORDER BY (t0.c0 COLLATE NOCASE IN ());
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0, t0 WHERE ((~ ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM t1, rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0, t0 WHERE ((~ ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c3 IN ())))) IS TRUE)  as count FROM t1, rt0, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM t1, rt0, vt1, vt0, t0 WHERE ((~ ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON (NOT (((rt0.c2)||(vt1.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0)>>(t1.c38))) NOT NULL) CROSS JOIN t0 ON (((rt0.c4, t1.c0, rt0.c1, t1.c38, rt0.c0)) BETWEEN ((rt0.c1, (((t1.c38))<>((t0.c0))), ((rt0.c3) NOTNULL), (+ (vt1.c0)), ((rt0.c2) NOT BETWEEN (t1.c38) AND (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)<=(rt0.c4)), rt0.c3 COLLATE RTRIM, ((t1.c38)<=(vt1.c0)), rt0.c2 COLLATE BINARY))) WHERE (vt0.c0) ORDER BY (('1080726031') NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON (NOT (((rt0.c2)||(vt1.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0)>>(t1.c38))) NOT NULL) CROSS JOIN t0 ON (((rt0.c4, t1.c0, rt0.c1, t1.c38, rt0.c0)) BETWEEN ((rt0.c1, (((t1.c38))<>((t0.c0))), ((rt0.c3) NOTNULL), (+ (vt1.c0)), ((rt0.c2) NOT BETWEEN (t1.c38) AND (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)<=(rt0.c4)), rt0.c3 COLLATE RTRIM, ((t1.c38)<=(vt1.c0)), rt0.c2 COLLATE BINARY))) ORDER BY (('1080726031') NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON (NOT (((rt0.c2)||(vt1.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0)>>(t1.c38))) NOT NULL) CROSS JOIN t0 ON (((rt0.c4, t1.c0, rt0.c1, t1.c38, rt0.c0)) BETWEEN ((rt0.c1, (((t1.c38))<>((t0.c0))), ((rt0.c3) NOTNULL), (+ (vt1.c0)), ((rt0.c2) NOT BETWEEN (t1.c38) AND (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)<=(rt0.c4)), rt0.c3 COLLATE RTRIM, ((t1.c38)<=(vt1.c0)), rt0.c2 COLLATE BINARY))) WHERE (vt0.c0) ORDER BY (('1080726031') NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt0 ON (NOT (((rt0.c2)||(vt1.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0)>>(t1.c38))) NOT NULL) CROSS JOIN t0 ON (((rt0.c4, t1.c0, rt0.c1, t1.c38, rt0.c0)) BETWEEN ((rt0.c1, (((t1.c38))<>((t0.c0))), ((rt0.c3) NOTNULL), (+ (vt1.c0)), ((rt0.c2) NOT BETWEEN (t1.c38) AND (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)<=(rt0.c4)), rt0.c3 COLLATE RTRIM, ((t1.c38)<=(vt1.c0)), rt0.c2 COLLATE BINARY))) ORDER BY (('1080726031') NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (vt1.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 INNER JOIN vt0 ON (NOT (((rt0.c2)||(vt1.c0)))) LEFT OUTER JOIN vt1 ON ((((vt0.c0)>>(t1.c38))) NOT NULL) CROSS JOIN t0 ON (((rt0.c4, t1.c0, rt0.c1, t1.c38, rt0.c0)) BETWEEN ((rt0.c1, (((t1.c38))<>((t0.c0))), ((rt0.c3) NOTNULL), (+ (vt1.c0)), ((rt0.c2) NOT BETWEEN (t1.c38) AND (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), ((rt0.c1)<=(rt0.c4)), rt0.c3 COLLATE RTRIM, ((t1.c38)<=(vt1.c0)), rt0.c2 COLLATE BINARY))) WHERE (vt0.c0) ORDER BY (('1080726031') NOT BETWEEN (CAST(t1.c0 AS BLOB)) AND ((~ (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c2 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(vt0.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((((rt0.c0)+(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c2 ORDER BY (((t1.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((((rt0.c0)+(t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c2 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(vt0.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((((rt0.c0)+(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(vt0.c0)) END) IS TRUE)  as count FROM t1, vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c2 ORDER BY (((t1.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((((rt0.c0)+(t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0, rt0 LEFT OUTER JOIN t0 ON rt0.c2 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c0)OR(vt0.c0)) END) ORDER BY (((t1.c0)) BETWEEN ((CAST(rt0.c4 AS NUMERIC))) AND ((((rt0.c0)+(t0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0, t1 WHERE ((((((rt0.c2 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0, t1 WHERE ((((((rt0.c2 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, t0, rt0, t1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0, t1 WHERE ((((((rt0.c2 IN ()))AND(((t1.c0)<=(t1.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)==('-667002708')) END) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((NULL) BETWEEN (vt0.c0) AND ('+JvP+(ἠ_')))))AND(vt0.c0)))AND(CASE vt0.c0  WHEN 0.08929727796563602 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)==('-667002708')) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((NULL) BETWEEN (vt0.c0) AND ('+JvP+(ἠ_')))))AND(vt0.c0)))AND(CASE vt0.c0  WHEN 0.08929727796563602 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)==('-667002708')) END) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((NULL) BETWEEN (vt0.c0) AND ('+JvP+(ἠ_')))))AND(vt0.c0)))AND(CASE vt0.c0  WHEN 0.08929727796563602 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)==('-667002708')) END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((NULL) BETWEEN (vt0.c0) AND ('+JvP+(ἠ_')))))AND(vt0.c0)))AND(CASE vt0.c0  WHEN 0.08929727796563602 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)==('-667002708')) END) ORDER BY ((((((((CAST(vt0.c0 AS REAL))AND(((NULL) BETWEEN (vt0.c0) AND ('+JvP+(ἠ_')))))AND(vt0.c0)))AND(CASE vt0.c0  WHEN 0.08929727796563602 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((((((((((((((((((((t1.c0)OR(-9223372036854775808)))OR(vt1.c0)))OR('326558460')))OR(t1.c0)))AND(x'')))AND(NULL)))OR(((vt1.c0)>=(vt0.c0)))))AND(((t1.c38)<<(t1.c38)))))OR((- (vt0.c0)))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY (((((0.5973109155262402)>>(vt1.c0))))>((((vt1.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c0)OR(-9223372036854775808)))OR(vt1.c0)))OR('326558460')))OR(t1.c0)))AND(x'')))AND(NULL)))OR(((vt1.c0)>=(vt0.c0)))))AND(((t1.c38)<<(t1.c38)))))OR((- (vt0.c0)))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, vt1, t1 ORDER BY (((((0.5973109155262402)>>(vt1.c0))))>((((vt1.c0)IS(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((((((((((((((((((((t1.c0)OR(-9223372036854775808)))OR(vt1.c0)))OR('326558460')))OR(t1.c0)))AND(x'')))AND(NULL)))OR(((vt1.c0)>=(vt0.c0)))))AND(((t1.c38)<<(t1.c38)))))OR((- (vt0.c0)))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY (((((0.5973109155262402)>>(vt1.c0))))>((((vt1.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((t1.c0)OR(-9223372036854775808)))OR(vt1.c0)))OR('326558460')))OR(t1.c0)))AND(x'')))AND(NULL)))OR(((vt1.c0)>=(vt0.c0)))))AND(((t1.c38)<<(t1.c38)))))OR((- (vt0.c0)))))AND(CAST(t1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, t0, vt1, t1 ORDER BY (((((0.5973109155262402)>>(vt1.c0))))>((((vt1.c0)IS(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1, t1 WHERE (((((((((((((((((((((t1.c0)OR(-9223372036854775808)))OR(vt1.c0)))OR('326558460')))OR(t1.c0)))AND(x'')))AND(NULL)))OR(((vt1.c0)>=(vt0.c0)))))AND(((t1.c38)<<(t1.c38)))))OR((- (vt0.c0)))))AND(CAST(t1.c0 AS TEXT)))) ORDER BY (((((0.5973109155262402)>>(vt1.c0))))>((((vt1.c0)IS(vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE (CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c38 THEN vt0.c0 WHEN t1.c0 THEN vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0, t0 WHERE (((rt0.c3)GLOB(x'9bb7')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(x'9bb7')) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0, t0 WHERE (((rt0.c3)GLOB(x'9bb7')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c3)GLOB(x'9bb7')) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt0, t1, vt1, vt0, t0 WHERE (((rt0.c3)GLOB(x'9bb7')) COLLATE BINARY);
SELECT ALL * FROM vt0 INDEXED BY i3, rt0, vt1 CROSS JOIN t1 ON ((((t0.c0) IS FALSE))*((NOT (t1.c0)))) RIGHT OUTER JOIN t0 ON (rt0.c1 IN ()) COLLATE BINARY WHERE (((((rt0.c1)-(t1.c0))) BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('0.7918757523096281'))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), ((vt1.c0) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((t0.c0)+(-3.43917227E8))))  NULLS LAST, (t1.c0 IN (((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(t1.c0))) BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('0.7918757523096281'))) IS TRUE)  as count FROM vt0 INDEXED BY i3, rt0, vt1 CROSS JOIN t1 ON ((((t0.c0) IS FALSE))*((NOT (t1.c0)))) RIGHT OUTER JOIN t0 ON (rt0.c1 IN ()) COLLATE BINARY ORDER BY CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), ((vt1.c0) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((t0.c0)+(-3.43917227E8))))  NULLS LAST, (t1.c0 IN (((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM vt0 INDEXED BY i3, rt0, vt1 CROSS JOIN t1 ON ((((t0.c0) IS FALSE))*((NOT (t1.c0)))) RIGHT OUTER JOIN t0 ON (rt0.c1 IN ()) COLLATE BINARY WHERE (((((rt0.c1)-(t1.c0))) BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('0.7918757523096281'))) ORDER BY CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), ((vt1.c0) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((t0.c0)+(-3.43917227E8))))  NULLS LAST, (t1.c0 IN (((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)-(t1.c0))) BETWEEN (CASE vt1.c0  WHEN t0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('0.7918757523096281'))) IS TRUE)  as count FROM vt0 INDEXED BY i3, rt0, vt1 CROSS JOIN t1 ON ((((t0.c0) IS FALSE))*((NOT (t1.c0)))) RIGHT OUTER JOIN t0 ON (rt0.c1 IN ()) COLLATE BINARY ORDER BY CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), ((vt1.c0) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((t0.c0)+(-3.43917227E8))))  NULLS LAST, (t1.c0 IN (((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT * FROM t1, vt1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c38)))OR(vt1.c0)))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c38 WHEN t1.c0 THEN t1.c38 WHEN t1.c38 THEN t1.c38 WHEN t1.c38 THEN vt1.c0 WHEN t1.c0 THEN t1.c38 ELSE t1.c0 END)))OR((~ (0X293e84f1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c38)))OR(vt1.c0)))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c38 WHEN t1.c0 THEN t1.c38 WHEN t1.c38 THEN t1.c38 WHEN t1.c38 THEN vt1.c0 WHEN t1.c0 THEN t1.c38 ELSE t1.c0 END)))OR((~ (0x293e84f1))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c38)))OR(vt1.c0)))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c38 WHEN t1.c0 THEN t1.c38 WHEN t1.c38 THEN t1.c38 WHEN t1.c38 THEN vt1.c0 WHEN t1.c0 THEN t1.c38 ELSE t1.c0 END)))OR((~ (0X293e84f1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t1.c0)OR(t1.c0)))AND(t1.c38)))OR(vt1.c0)))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c38 WHEN t1.c0 THEN t1.c38 WHEN t1.c38 THEN t1.c38 WHEN t1.c38 THEN vt1.c0 WHEN t1.c0 THEN t1.c38 ELSE t1.c0 END)))OR((~ (0x293e84f1))))) IS TRUE)  as count FROM t1, vt1);
SELECT * FROM t1, vt1 WHERE (((((((((((((t1.c0)OR(t1.c0)))AND(t1.c38)))OR(vt1.c0)))OR(t1.c0)))AND(CASE WHEN t1.c0 THEN t1.c38 WHEN t1.c0 THEN t1.c38 WHEN t1.c38 THEN t1.c38 WHEN t1.c38 THEN vt1.c0 WHEN t1.c0 THEN t1.c38 ELSE t1.c0 END)))OR((~ (0X293e84f1)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), TRIM(vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('B2kt^7썣')))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), TRIM(vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('B2kt^7썣'))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), TRIM(vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('B2kt^7썣')))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), TRIM(vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('B2kt^7썣'))))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)), TRIM(vt1.c0, vt1.c0), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) AND (((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, (((vt1.c0)) BETWEEN ((vt1.c0)) AND (('B2kt^7썣')))))));
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(vt1.c0, 0.6679850694999043) END) ORDER BY UNLIKELY(((vt1.c0)IS NOT(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULLIF(vt1.c0, 0.6679850694999043) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY UNLIKELY(((vt1.c0)IS NOT(vt1.c0))) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(vt1.c0, 0.6679850694999043) END) ORDER BY UNLIKELY(((vt1.c0)IS NOT(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULLIF(vt1.c0, 0.6679850694999043) END) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY UNLIKELY(((vt1.c0)IS NOT(vt1.c0))) ASC);
SELECT ALL * FROM vt1, t0, vt0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(vt1.c0, 0.6679850694999043) END) ORDER BY UNLIKELY(((vt1.c0)IS NOT(vt1.c0))) ASC;
SELECT ALL COUNT(*) FROM t1, t0, vt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD('', 0.2820716382520736) WHERE (((((NULL)OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0, vt1.c0, vt1.c0))==((t1.c0, t1.c0, vt0.c0)))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0, vt1.c0, vt1.c0))=((t1.c0, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, t0, vt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD('', 0.2820716382520736) ORDER BY t1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, vt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD('', 0.2820716382520736) WHERE (((((NULL)OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0, vt1.c0, vt1.c0))==((t1.c0, t1.c0, vt0.c0)))))) ORDER BY t1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0, vt1.c0, vt1.c0))=((t1.c0, t1.c0, vt0.c0)))))) IS TRUE)  as count FROM t1, t0, vt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD('', 0.2820716382520736) ORDER BY t1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, t0, vt0 LEFT OUTER JOIN vt1 ON LIKELIHOOD('', 0.2820716382520736) WHERE (((((NULL)OR(t0.c0 COLLATE RTRIM)))AND((((t0.c0, vt1.c0, vt1.c0))==((t1.c0, t1.c0, vt0.c0)))))) ORDER BY t1.c0  NULLS FIRST;
SELECT * FROM t1, vt0, vt1, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, vt0, vt1, rt0, t0);
SELECT * FROM t1, vt0, vt1, rt0, t0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t1, vt0, vt1, rt0, t0);
SELECT * FROM t1, vt0, vt1, rt0, t0 WHERE (rt0.c1);
SELECT * FROM vt1, rt0 WHERE ('0.710626248230795' COLLATE RTRIM) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.710626248230795' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC);
SELECT * FROM vt1, rt0 WHERE ('0.710626248230795' COLLATE RTRIM) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.710626248230795' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC);
SELECT * FROM vt1, rt0 WHERE ('0.710626248230795' COLLATE RTRIM) ORDER BY CAST(CAST(rt0.c2 AS INTEGER) AS TEXT) ASC;
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE NULL  WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END AS TEXT) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (LIKE(rt0.c4, x'a318', ' ')) AND (UPPER(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS REAL) ASC  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS FALSE) DESC  NULLS FIRST, ((-1.028548321E9 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (LIKE(rt0.c4, x'a318', ' ')) AND (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE NULL  WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END AS TEXT) ORDER BY CAST((rt0.c3 IN ()) AS REAL) ASC  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS FALSE) DESC  NULLS FIRST, ((-1.028548321E9 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE NULL  WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END AS TEXT) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (LIKE(rt0.c4, x'a318', ' ')) AND (UPPER(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS REAL) ASC  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS FALSE) DESC  NULLS FIRST, ((-1.028548321E9 COLLATE BINARY) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (LIKE(rt0.c4, x'a318', ' ')) AND (UPPER(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE NULL  WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END AS TEXT) ORDER BY CAST((rt0.c3 IN ()) AS REAL) ASC  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS FALSE) DESC  NULLS FIRST, ((-1.028548321E9 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON CAST(CASE NULL  WHEN vt0.c0 THEN rt0.c4 ELSE vt0.c0 END AS TEXT) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (LIKE(rt0.c4, x'a318', ' ')) AND (UPPER(DISTINCT vt1.c0)))) ORDER BY CAST((rt0.c3 IN ()) AS REAL) ASC  NULLS FIRST, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) IS FALSE) DESC  NULLS FIRST, ((-1.028548321E9 COLLATE BINARY) IS FALSE);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt1.c0  WHEN rt0.c4 THEN NULL END THEN ((rt0.c2) IS FALSE) ELSE json_array_length('ouzo7Zᕸ﬈') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN rt0.c4 THEN NULL END THEN ((rt0.c2) IS FALSE) ELSE json_array_length('ouzo7Zᕸ﬈') END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt1.c0  WHEN rt0.c4 THEN NULL END THEN ((rt0.c2) IS FALSE) ELSE json_array_length('ouzo7Zᕸ﬈') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN rt0.c4 THEN NULL END THEN ((rt0.c2) IS FALSE) ELSE json_array_length('ouzo7Zᕸ﬈') END) IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN CASE vt1.c0  WHEN rt0.c4 THEN NULL END THEN ((rt0.c2) IS FALSE) ELSE json_array_length('ouzo7Zᕸ﬈') END);
SELECT COUNT(*) FROM t0, rt0, vt0, t1, vt1 WHERE (((((rt0.c4, rt0.c3, t1.c38))>=((t0.c0, rt0.c1, t1.c38))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4, rt0.c3, t1.c38))>=((t0.c0, rt0.c1, t1.c38))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, t1, vt1 WHERE (((((rt0.c4, rt0.c3, t1.c38))>=((t0.c0, rt0.c1, t1.c38))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4, rt0.c3, t1.c38))>=((t0.c0, rt0.c1, t1.c38))) IN ())) IS TRUE)  as count FROM t0, rt0, vt0, t1, vt1);
SELECT COUNT(*) FROM t0, rt0, vt0, t1, vt1 WHERE (((((rt0.c4, rt0.c3, t1.c38))>=((t0.c0, rt0.c1, t1.c38))) IN ()));
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT NULL))) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (-1465064410))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c4) NOT NULL))) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (-1465064410))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT NULL))) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (-1465064410))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt0.c4) NOT NULL))) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (-1465064410))))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (LIKELY(DISTINCT ((rt0.c4) NOT NULL))) ORDER BY CAST(rt0.c3 AS NUMERIC) COLLATE BINARY COLLATE BINARY  NULLS FIRST, ((CAST(rt0.c4 AS REAL)) NOT BETWEEN (((rt0.c3)>=(rt0.c0))) AND (((rt0.c4) BETWEEN (rt0.c4) AND (-1465064410))))  NULLS LAST;
SELECT ALL * FROM t0, rt0, t1, vt0 WHERE (((t1.c38) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t1.c38) IS FALSE)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT ALL * FROM t0, rt0, t1, vt0 WHERE (((t1.c38) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t1.c38) IS FALSE)) IS TRUE)  as count FROM t0, rt0, t1, vt0);
SELECT ALL * FROM t0, rt0, t1, vt0 WHERE (((t1.c38) IS FALSE));
SELECT COUNT(*) FROM t0, vt0 WHERE (0X17980e34) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0x17980e34) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (0X17980e34) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0x17980e34) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (0X17980e34) ORDER BY CAST((((vt0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c38)<(vt0.c0)))-((t1.c0 IN ()))) LEFT OUTER JOIN t0 ON RTRIM((NOT (t1.c38))) WHERE (((((((((((t0.c0)AND(t1.c0)))OR(t1.c38)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t1.c0)))OR(t1.c38)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c38)<(vt0.c0)))-((t1.c0 IN ()))) LEFT OUTER JOIN t0 ON RTRIM((NOT (t1.c38))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c38)<(vt0.c0)))-((t1.c0 IN ()))) LEFT OUTER JOIN t0 ON RTRIM((NOT (t1.c38))) WHERE (((((((((((t0.c0)AND(t1.c0)))OR(t1.c38)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t1.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t1.c0)))OR(t1.c38)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c38)<(vt0.c0)))-((t1.c0 IN ()))) LEFT OUTER JOIN t0 ON RTRIM((NOT (t1.c38))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((((t1.c38)<(vt0.c0)))-((t1.c0 IN ()))) LEFT OUTER JOIN t0 ON RTRIM((NOT (t1.c38))) WHERE (((((((((((t0.c0)AND(t1.c0)))OR(t1.c38)))OR(t0.c0)))AND(vt0.c0))) BETWEEN (((t0.c0) IS TRUE)) AND (CASE WHEN t1.c0 THEN vt0.c0 END)));
SELECT ALL * FROM t1, t0 WHERE (IFNULL(((t1.c0) BETWEEN (t1.c0) AND (444429056)), (((((((('')AND(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))) ORDER BY CASE WHEN 0.7006061907721142 THEN ((t0.c0) NOTNULL) END DESC, (((t1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 END)) AND (((((('\rv')OR(t1.c0)))AND(t1.c38)))))  NULLS LAST, (((t1.c0)) BETWEEN (((((t0.c0)) BETWEEN (('-1843957401')) AND ((t0.c0))))) AND ((CAST(0.19417733205938958 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((t1.c0) BETWEEN (t1.c0) AND (444429056)), (((((((('')AND(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN 0.7006061907721142 THEN ((t0.c0) NOTNULL) END DESC, (((t1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 END)) AND (((((('\rv')OR(t1.c0)))AND(t1.c38)))))  NULLS LAST, (((t1.c0)) BETWEEN (((((t0.c0)) BETWEEN (('-1843957401')) AND ((t0.c0))))) AND ((CAST(0.19417733205938958 AS BLOB)))));
SELECT ALL * FROM t1, t0 WHERE (IFNULL(((t1.c0) BETWEEN (t1.c0) AND (444429056)), (((((((('')AND(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))) ORDER BY CASE WHEN 0.7006061907721142 THEN ((t0.c0) NOTNULL) END DESC, (((t1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 END)) AND (((((('\rv')OR(t1.c0)))AND(t1.c38)))))  NULLS LAST, (((t1.c0)) BETWEEN (((((t0.c0)) BETWEEN (('-1843957401')) AND ((t0.c0))))) AND ((CAST(0.19417733205938958 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((t1.c0) BETWEEN (t1.c0) AND (444429056)), (((((((('')AND(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))) IS TRUE)  as count FROM t1, t0 ORDER BY CASE WHEN 0.7006061907721142 THEN ((t0.c0) NOTNULL) END DESC, (((t1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 END)) AND (((((('\rv')OR(t1.c0)))AND(t1.c38)))))  NULLS LAST, (((t1.c0)) BETWEEN (((((t0.c0)) BETWEEN (('-1843957401')) AND ((t0.c0))))) AND ((CAST(0.19417733205938958 AS BLOB)))));
SELECT ALL * FROM t1, t0 WHERE (IFNULL(((t1.c0) BETWEEN (t1.c0) AND (444429056)), (((((((('')AND(t0.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))) ORDER BY CASE WHEN 0.7006061907721142 THEN ((t0.c0) NOTNULL) END DESC, (((t1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 WHEN t0.c0 THEN t1.c38 END)) AND (((((('\rv')OR(t1.c0)))AND(t1.c38)))))  NULLS LAST, (((t1.c0)) BETWEEN (((((t0.c0)) BETWEEN (('-1843957401')) AND ((t0.c0))))) AND ((CAST(0.19417733205938958 AS BLOB))));
SELECT ALL * FROM t1, t0, vt1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND((((NULL, t1.c38, vt1.c0))!=((' C', t1.c0, vt1.c0))))))AND(CAST(t1.c38 AS INTEGER))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS INTEGER))AND((((NULL, t1.c38, vt1.c0))<>((' C', t1.c0, vt1.c0))))))AND(CAST(t1.c38 AS INTEGER))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t1, t0, vt1);
SELECT ALL * FROM t1, t0, vt1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND((((NULL, t1.c38, vt1.c0))!=((' C', t1.c0, vt1.c0))))))AND(CAST(t1.c38 AS INTEGER))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t1.c0 AS INTEGER))AND((((NULL, t1.c38, vt1.c0))<>((' C', t1.c0, vt1.c0))))))AND(CAST(t1.c38 AS INTEGER))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((t0.c0 IN ())))) IS TRUE)  as count FROM t1, t0, vt1);
SELECT ALL * FROM t1, t0, vt1 WHERE (((((((((CAST(t1.c0 AS INTEGER))AND((((NULL, t1.c38, vt1.c0))!=((' C', t1.c0, vt1.c0))))))AND(CAST(t1.c38 AS INTEGER))))AND(CASE WHEN t1.c0 THEN t1.c0 END)))AND((t0.c0 IN ()))));
SELECT * FROM t0, vt0, t1, rt0, vt1 WHERE (CAST(((0X7ee81f6f) NOT BETWEEN (t1.c38) AND ('')) AS NUMERIC)) ORDER BY x'' DESC, ((rt0.c3 IN ()) IN (0.716303023913364)) ASC  NULLS FIRST, (((((x''))>=((vt1.c0))))&(((((vt1.c0)AND(t0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0X7ee81f6f) NOT BETWEEN (t1.c38) AND ('')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, t1, rt0, vt1 ORDER BY x'' DESC, ((rt0.c3 IN ()) IN (0.716303023913364)) ASC  NULLS FIRST, (((((x''))>=((vt1.c0))))&(((((vt1.c0)AND(t0.c0)))OR(rt0.c1)))) ASC);
SELECT * FROM t0, vt0, t1, rt0, vt1 WHERE (CAST(((0X7ee81f6f) NOT BETWEEN (t1.c38) AND ('')) AS NUMERIC)) ORDER BY x'' DESC, ((rt0.c3 IN ()) IN (0.716303023913364)) ASC  NULLS FIRST, (((((x''))>=((vt1.c0))))&(((((vt1.c0)AND(t0.c0)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0X7ee81f6f) NOT BETWEEN (t1.c38) AND ('')) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, t1, rt0, vt1 ORDER BY x'' DESC, ((rt0.c3 IN ()) IN (0.716303023913364)) ASC  NULLS FIRST, (((((x''))>=((vt1.c0))))&(((((vt1.c0)AND(t0.c0)))OR(rt0.c1)))) ASC);
SELECT * FROM t0, vt0, t1, rt0, vt1 WHERE (CAST(((0X7ee81f6f) NOT BETWEEN (t1.c38) AND ('')) AS NUMERIC)) ORDER BY x'' DESC, ((rt0.c3 IN ()) IN (0.716303023913364)) ASC  NULLS FIRST, (((((x''))>=((vt1.c0))))&(((((vt1.c0)AND(t0.c0)))OR(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c0)%(t1.c38)) THEN ((rt0.c3)<(x'a598')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)%(t1.c38)) THEN ((rt0.c3)<(x'a598')) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c0)%(t1.c38)) THEN ((rt0.c3)<(x'a598')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)%(t1.c38)) THEN ((rt0.c3)<(x'a598')) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE WHEN ((rt0.c0)%(t1.c38)) THEN ((rt0.c3)<(x'a598')) END);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c38);
SELECT SUM(count) FROM (SELECT ((t1.c38) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c38);
SELECT COUNT(*) FROM rt0, t1, t0, vt0 WHERE (t1.c0) ORDER BY ((HEX(t1.c38))IS(((((((((t1.c0)OR(t1.c38)))OR(rt0.c1)))AND(t1.c38)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, t0, vt0 ORDER BY ((HEX(t1.c38))IS(((((((((t1.c0)OR(t1.c38)))OR(rt0.c1)))AND(t1.c38)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t1, t0, vt0 WHERE (t1.c0) ORDER BY ((HEX(t1.c38))IS(((((((((t1.c0)OR(t1.c38)))OR(rt0.c1)))AND(t1.c38)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM rt0, t1, t0, vt0 ORDER BY ((HEX(t1.c38))IS(((((((((t1.c0)OR(t1.c38)))OR(rt0.c1)))AND(t1.c38)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t1, t0, vt0 WHERE (t1.c0) ORDER BY ((HEX(t1.c38))IS(((((((((t1.c0)OR(t1.c38)))OR(rt0.c1)))AND(t1.c38)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (~ (CAST(t1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (CAST(t1.c0 AS REAL))));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (~ (CAST(t1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t1 ORDER BY (~ (CAST(t1.c0 AS REAL))));
SELECT ALL * FROM vt0, vt1, t1 WHERE ((((((vt1.c0) NOT BETWEEN (t1.c38) AND (t1.c0))))<=((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))))) ORDER BY (~ (CAST(t1.c0 AS REAL)));
SELECT ALL * FROM vt0, t0 NATURAL JOIN t1 WHERE (t1.c38) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c38) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN t1 WHERE (t1.c38) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c38) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN t1 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 NATURAL JOIN t1 WHERE (t1.c38) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt1 WHERE (((CAST(-1514147127 AS NUMERIC))!=(((rt0.c4)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(-1514147127 AS NUMERIC))<>(((rt0.c4)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0, t0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt1 WHERE (((CAST(-1514147127 AS NUMERIC))!=(((rt0.c4)LIKE(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((CAST(-1514147127 AS NUMERIC))<>(((rt0.c4)LIKE(rt0.c3))))) IS TRUE)  as count FROM rt0, t0, t1, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, t1, vt1 WHERE (((CAST(-1514147127 AS NUMERIC))!=(((rt0.c4)LIKE(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE ('y館1m[X') ORDER BY (((rt0.c1)>(rt0.c2)) IN (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('y館1m[X') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)>(rt0.c2)) IN (rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('y館1m[X') ORDER BY (((rt0.c1)>(rt0.c2)) IN (rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('y館1m[X') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)>(rt0.c2)) IN (rt0.c2))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('y館1m[X') ORDER BY (((rt0.c1)>(rt0.c2)) IN (rt0.c2))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((NULL) NOTNULL)))) ORDER BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))OR((((vt0.c0, t0.c0, vt1.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS LAST, ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))<<(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))*(((NULL) NOTNULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))OR((((vt0.c0, t0.c0, vt1.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS LAST, ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))<<(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((NULL) NOTNULL)))) ORDER BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))OR((((vt0.c0, t0.c0, vt1.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS LAST, ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))<<(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC))*(((NULL) NOTNULL)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))OR((((vt0.c0, t0.c0, vt1.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS LAST, ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))<<(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((CAST(vt0.c0 AS NUMERIC))*(((NULL) NOTNULL)))) ORDER BY ((((vt0.c0)OR(((t0.c0) NOTNULL))))OR((((vt0.c0, t0.c0, vt1.c0))==((NULL, t0.c0, vt0.c0)))))  NULLS LAST, ((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))<<(((vt1.c0) NOT NULL))) ASC;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((t1.c38)) NOT BETWEEN ((DATE(rt0.c0, rt0.c3, '912254749'))) AND (((- (rt0.c1))))) INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER))<((NOT (vt0.c0)))) WHERE (CAST((~ (rt0.c0)) AS TEXT)) ORDER BY CAST(COALESCE(DISTINCT NULL, rt0.c0, vt1.c0, t1.c0) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((t1.c38)) NOT BETWEEN ((DATE(rt0.c0, rt0.c3, '912254749'))) AND (((- (rt0.c1))))) INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER))<((NOT (vt0.c0)))) ORDER BY CAST(COALESCE(DISTINCT NULL, rt0.c0, vt1.c0, t1.c0) AS REAL) DESC  NULLS LAST);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((t1.c38)) NOT BETWEEN ((DATE(rt0.c0, rt0.c3, '912254749'))) AND (((- (rt0.c1))))) INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER))<((NOT (vt0.c0)))) WHERE (CAST((~ (rt0.c0)) AS TEXT)) ORDER BY CAST(COALESCE(DISTINCT NULL, rt0.c0, vt1.c0, t1.c0) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((t1.c38)) NOT BETWEEN ((DATE(rt0.c0, rt0.c3, '912254749'))) AND (((- (rt0.c1))))) INNER JOIN t1 ON ((CAST(rt0.c1 AS INTEGER))<((NOT (vt0.c0)))) ORDER BY CAST(COALESCE(DISTINCT NULL, rt0.c0, vt1.c0, t1.c0) AS REAL) DESC  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN t1 ON (((t1.c38)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE BINARY))) WHERE (0.7079576982608441) ORDER BY (((((t1.c0) ISNULL)))<>((((rt0.c3) BETWEEN (rt0.c3) AND (0.35406191797901265)))));
SELECT SUM(count) FROM (SELECT ALL ((0.7079576982608441) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((t1.c38)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE BINARY))) ORDER BY (((((t1.c0) ISNULL)))<>((((rt0.c3) BETWEEN (rt0.c3) AND (0.35406191797901265))))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((t1.c38)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE BINARY))) WHERE (0.7079576982608441) ORDER BY (((((t1.c0) ISNULL)))<>((((rt0.c3) BETWEEN (rt0.c3) AND (0.35406191797901265)))));
SELECT SUM(count) FROM (SELECT ALL ((0.7079576982608441) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((t1.c38)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE BINARY))) ORDER BY (((((t1.c0) ISNULL)))<>((((rt0.c3) BETWEEN (rt0.c3) AND (0.35406191797901265))))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((t1.c38)) NOT BETWEEN (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((rt0.c1 COLLATE BINARY))) WHERE (0.7079576982608441) ORDER BY (((((t1.c0) ISNULL)))<>((((rt0.c3) BETWEEN (rt0.c3) AND (0.35406191797901265)))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(vt1.c0))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.1251464366877253 THEN NULL ELSE vt1.c0 END)|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '356905453' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.1251464366877253 THEN NULL ELSE vt1.c0 END)|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '356905453' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(vt1.c0))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.1251464366877253 THEN NULL ELSE vt1.c0 END)|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '356905453' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)>(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.1251464366877253 THEN NULL ELSE vt1.c0 END)|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '356905453' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)>(vt1.c0))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.1251464366877253 THEN NULL ELSE vt1.c0 END)|(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '356905453' WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (CASE WHEN (- (t1.c38)) THEN (NOT (t0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (('-1120921479') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t1.c38)) THEN (NOT (t0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (('-1120921479') IS FALSE) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (CASE WHEN (- (t1.c38)) THEN (NOT (t0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (('-1120921479') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (t1.c38)) THEN (NOT (t0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (('-1120921479') IS FALSE) END) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t1);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0, t1 WHERE (CASE WHEN (- (t1.c38)) THEN (NOT (t0.c0)) WHEN ((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN vt0.c0 WHEN (vt0.c0 IN ()) THEN (('-1120921479') IS FALSE) END);
SELECT COUNT(*) FROM rt0 WHERE (-1969627462) ORDER BY ('0.8821411759864614' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((-1969627462) IS TRUE)  as count FROM rt0 ORDER BY ('0.8821411759864614' IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (-1969627462) ORDER BY ('0.8821411759864614' IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((-1969627462) IS TRUE)  as count FROM rt0 ORDER BY ('0.8821411759864614' IN ()) DESC);
SELECT COUNT(*) FROM rt0 WHERE (-1969627462) ORDER BY ('0.8821411759864614' IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c0))))) ORDER BY (+ (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1, t0, rt0, vt1 ORDER BY (+ (((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c0))))) ORDER BY (+ (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c0))))) IS TRUE)  as count FROM vt0, t1, t0, rt0, vt1 ORDER BY (+ (((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t1, t0, rt0, vt1 WHERE ((((rt0.c3 IN ())) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (((rt0.c4) NOT BETWEEN (rt0.c1) AND (t1.c0))))) ORDER BY (+ (((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM rt0 CROSS JOIN t1 ON TRIM((((rt0.c0, rt0.c3, rt0.c1, t1.c38, rt0.c4)) BETWEEN ((t1.c0, rt0.c2, NULL, t1.c0, rt0.c0)) AND ((t1.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c1))), ((t1.c0)IS NOT(t1.c38))) WHERE (((CAST(rt0.c0 AS BLOB))%('FALSE')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))%('FALSE'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON TRIM((((rt0.c0, rt0.c3, rt0.c1, t1.c38, rt0.c4)) BETWEEN ((t1.c0, rt0.c2, NULL, t1.c0, rt0.c0)) AND ((t1.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c1))), ((t1.c0)IS NOT(t1.c38))));
SELECT * FROM rt0 CROSS JOIN t1 ON TRIM((((rt0.c0, rt0.c3, rt0.c1, t1.c38, rt0.c4)) BETWEEN ((t1.c0, rt0.c2, NULL, t1.c0, rt0.c0)) AND ((t1.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c1))), ((t1.c0)IS NOT(t1.c38))) WHERE (((CAST(rt0.c0 AS BLOB))%('FALSE')));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))%('FALSE'))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON TRIM((((rt0.c0, rt0.c3, rt0.c1, t1.c38, rt0.c4)) BETWEEN ((t1.c0, rt0.c2, NULL, t1.c0, rt0.c0)) AND ((t1.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c1))), ((t1.c0)IS NOT(t1.c38))));
SELECT * FROM rt0 CROSS JOIN t1 ON TRIM((((rt0.c0, rt0.c3, rt0.c1, t1.c38, rt0.c4)) BETWEEN ((t1.c0, rt0.c2, NULL, t1.c0, rt0.c0)) AND ((t1.c0, rt0.c4, rt0.c1, rt0.c0, rt0.c1))), ((t1.c0)IS NOT(t1.c38))) WHERE (((CAST(rt0.c0 AS BLOB))%('FALSE')));
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((((NOT (rt0.c1)))AND(((rt0.c2)|(t0.c0)))))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(((rt0.c2)|(t0.c0)))))OR((- (rt0.c3))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((((NOT (rt0.c1)))AND(((rt0.c2)|(t0.c0)))))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c1)))AND(((rt0.c2)|(t0.c0)))))OR((- (rt0.c3))))) IS TRUE)  as count FROM t1, t0, rt0);
SELECT COUNT(*) FROM t1, t0, rt0 WHERE ((((((NOT (rt0.c1)))AND(((rt0.c2)|(t0.c0)))))OR((- (rt0.c3)))));
SELECT ALL * FROM rt0, t1 INNER JOIN vt1 ON CASE rt0.c3  WHEN (- (rt0.c2)) THEN (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((t0.c0, t1.c0, vt1.c0)) AND ((rt0.c3, x'', rt0.c3))) END CROSS JOIN t0 ON (NOT (((t0.c0) IS FALSE))) WHERE ((NOT (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt1 ON CASE rt0.c3  WHEN (- (rt0.c2)) THEN (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((t0.c0, t1.c0, vt1.c0)) AND ((rt0.c3, x'', rt0.c3))) END CROSS JOIN t0 ON (NOT (((t0.c0) IS FALSE))));
SELECT ALL * FROM rt0, t1 INNER JOIN vt1 ON CASE rt0.c3  WHEN (- (rt0.c2)) THEN (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((t0.c0, t1.c0, vt1.c0)) AND ((rt0.c3, x'', rt0.c3))) END CROSS JOIN t0 ON (NOT (((t0.c0) IS FALSE))) WHERE ((NOT (t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1 INNER JOIN vt1 ON CASE rt0.c3  WHEN (- (rt0.c2)) THEN (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((t0.c0, t1.c0, vt1.c0)) AND ((rt0.c3, x'', rt0.c3))) END CROSS JOIN t0 ON (NOT (((t0.c0) IS FALSE))));
SELECT ALL * FROM rt0, t1 INNER JOIN vt1 ON CASE rt0.c3  WHEN (- (rt0.c2)) THEN (((rt0.c4, rt0.c2, rt0.c4)) NOT BETWEEN ((t0.c0, t1.c0, vt1.c0)) AND ((rt0.c3, x'', rt0.c3))) END CROSS JOIN t0 ON (NOT (((t0.c0) IS FALSE))) WHERE ((NOT (t1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TRIM(DISTINCT t1.c38, 588373943))IS(CAST(t1.c38 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t1.c38, 588373943))IS(CAST(t1.c38 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TRIM(DISTINCT t1.c38, 588373943))IS(CAST(t1.c38 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT t1.c38, 588373943))IS(CAST(t1.c38 AS BLOB)))) IS TRUE)  as count FROM t1, vt0 ORDER BY vt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((TRIM(DISTINCT t1.c38, 588373943))IS(CAST(t1.c38 AS BLOB)))) ORDER BY vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((rt0.c1, ((((((((t1.c0)OR(t1.c0)))OR(t1.c38)))AND(rt0.c4)))OR(t1.c38)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=((CASE WHEN t1.c38 THEN rt0.c0 END, t1.c0, 0.716303023913364)))) ORDER BY ((((rt0.c4)-(t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (x'a239'));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, ((((((((t1.c0)OR(t1.c0)))OR(t1.c38)))AND(rt0.c4)))OR(t1.c38)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))<>((CASE WHEN t1.c38 THEN rt0.c0 END, t1.c0, 0.716303023913364)))) IS TRUE)  as count FROM rt0, t0, t1 NOT INDEXED ORDER BY ((((rt0.c4)-(t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (x'a239')));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((rt0.c1, ((((((((t1.c0)OR(t1.c0)))OR(t1.c38)))AND(rt0.c4)))OR(t1.c38)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=((CASE WHEN t1.c38 THEN rt0.c0 END, t1.c0, 0.716303023913364)))) ORDER BY ((((rt0.c4)-(t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (x'a239'));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, ((((((((t1.c0)OR(t1.c0)))OR(t1.c38)))AND(rt0.c4)))OR(t1.c38)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))<>((CASE WHEN t1.c38 THEN rt0.c0 END, t1.c0, 0.716303023913364)))) IS TRUE)  as count FROM rt0, t0, t1 NOT INDEXED ORDER BY ((((rt0.c4)-(t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (x'a239')));
SELECT ALL COUNT(*) FROM rt0, t0, t1 WHERE ((((rt0.c1, ((((((((t1.c0)OR(t1.c0)))OR(t1.c38)))AND(rt0.c4)))OR(t1.c38)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))!=((CASE WHEN t1.c38 THEN rt0.c0 END, t1.c0, 0.716303023913364)))) ORDER BY ((((rt0.c4)-(t0.c0))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) AND (x'a239'));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c3, 't[myxAB0|'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1 ORDER BY rt0.c3, 't[myxAB0|'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c3, 't[myxAB0|'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1 ORDER BY rt0.c3, 't[myxAB0|'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t1 WHERE (TOTAL_CHANGES()) ORDER BY rt0.c3, 't[myxAB0|'  NULLS FIRST;
SELECT * FROM rt0, t0, vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((ABS(DISTINCT rt0.c4))*((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((ABS(DISTINCT rt0.c4))*((rt0.c1 IN ()))));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((ABS(DISTINCT rt0.c4))*((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, t0, vt0, vt1 ORDER BY ((ABS(DISTINCT rt0.c4))*((rt0.c1 IN ()))));
SELECT * FROM rt0, t0, vt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((ABS(DISTINCT rt0.c4))*((rt0.c1 IN ())));
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)GLOB('30241748'))))) ORDER BY json_array_length(x'' COLLATE BINARY, vt1.c0)  NULLS LAST, 'F9U(\n%.'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB('30241748'))))) IS TRUE)  as count FROM vt1 ORDER BY json_array_length(x'' COLLATE BINARY, vt1.c0)  NULLS LAST, 'F9U(\n%.'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)GLOB('30241748'))))) ORDER BY json_array_length(x'' COLLATE BINARY, vt1.c0)  NULLS LAST, 'F9U(\n%.'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB('30241748'))))) IS TRUE)  as count FROM vt1 ORDER BY json_array_length(x'' COLLATE BINARY, vt1.c0)  NULLS LAST, 'F9U(\n%.'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((~ (((vt1.c0)GLOB('30241748'))))) ORDER BY json_array_length(x'' COLLATE BINARY, vt1.c0)  NULLS LAST, 'F9U(\n%.'  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c1 IN ()))AND(((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND(((0.3174112157088993) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN '0.710626248230795' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND(((0.3174112157088993) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN '0.710626248230795' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c1 IN ()))AND(((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND(((0.3174112157088993) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN '0.710626248230795' END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN ()))AND(((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND(((0.3174112157088993) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN '0.710626248230795' END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c1 IN ()))AND(((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c3)))AND(rt0.c2)))))AND(((0.3174112157088993) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE rt0.c0 COLLATE RTRIM  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) THEN '0.710626248230795' END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt1 CROSS JOIN t1 ON ((rt0.c3) IS FALSE) LEFT OUTER JOIN vt0 ON CASE CASE WHEN x'6068' THEN t1.c0 ELSE t1.c0 END  WHEN x'2886' THEN ((t1.c38) NOT NULL) END INNER JOIN rt0 ON ((((t1.c0)<>(rt0.c2))) ISNULL) INNER JOIN t0 ON '' COLLATE RTRIM WHERE (((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END)|(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END)|(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((rt0.c3) IS FALSE) LEFT OUTER JOIN vt0 ON CASE CASE WHEN x'6068' THEN t1.c0 ELSE t1.c0 END  WHEN x'2886' THEN ((t1.c38) NOT NULL) END INNER JOIN rt0 ON ((((t1.c0)<>(rt0.c2))) ISNULL) INNER JOIN t0 ON '' COLLATE RTRIM ORDER BY ((vt0.c0 COLLATE BINARY)IS(CAST(rt0.c0 AS TEXT))) DESC);
SELECT * FROM vt1 CROSS JOIN t1 ON ((rt0.c3) IS FALSE) LEFT OUTER JOIN vt0 ON CASE CASE WHEN x'6068' THEN t1.c0 ELSE t1.c0 END  WHEN x'2886' THEN ((t1.c38) NOT NULL) END INNER JOIN rt0 ON ((((t1.c0)<>(rt0.c2))) ISNULL) INNER JOIN t0 ON '' COLLATE RTRIM WHERE (((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END)|(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CAST(rt0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END)|(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) IS TRUE)  as count FROM vt1 CROSS JOIN t1 ON ((rt0.c3) IS FALSE) LEFT OUTER JOIN vt0 ON CASE CASE WHEN x'6068' THEN t1.c0 ELSE t1.c0 END  WHEN x'2886' THEN ((t1.c38) NOT NULL) END INNER JOIN rt0 ON ((((t1.c0)<>(rt0.c2))) ISNULL) INNER JOIN t0 ON '' COLLATE RTRIM ORDER BY ((vt0.c0 COLLATE BINARY)IS(CAST(rt0.c0 AS TEXT))) DESC);
SELECT * FROM vt1 CROSS JOIN t1 ON ((rt0.c3) IS FALSE) LEFT OUTER JOIN vt0 ON CASE CASE WHEN x'6068' THEN t1.c0 ELSE t1.c0 END  WHEN x'2886' THEN ((t1.c38) NOT NULL) END INNER JOIN rt0 ON ((((t1.c0)<>(rt0.c2))) ISNULL) INNER JOIN t0 ON '' COLLATE RTRIM WHERE (((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END)|(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))))) ORDER BY ((vt0.c0 COLLATE BINARY)IS(CAST(rt0.c0 AS TEXT))) DESC;
SELECT COUNT(*) FROM t1, t0, vt0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM t1, t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t1, t0, vt0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM t1, t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t1, t0, vt0, rt0, vt1 WHERE ((rt0.c0 IN ()));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c3 IN ()) THEN ((((t1.c0)AND(vt1.c0)))AND(t1.c38)) WHEN ((('326558460')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c3) NOT NULL) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN ((rt0.c3)!=(t0.c0)) END CROSS JOIN t1 ON (((rt0.c4 IN (t1.c38, t1.c0)))*(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) WHERE (((rt0.c3) BETWEEN (CAST(t0.c0 AS REAL)) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (CAST(t0.c0 AS REAL)) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c3 IN ()) THEN ((((t1.c0)AND(vt1.c0)))AND(t1.c38)) WHEN ((('326558460')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c3) NOT NULL) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN ((rt0.c3)<>(t0.c0)) END CROSS JOIN t1 ON (((rt0.c4 IN (t1.c38, t1.c0)))*(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c3 IN ()) THEN ((((t1.c0)AND(vt1.c0)))AND(t1.c38)) WHEN ((('326558460')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c3) NOT NULL) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN ((rt0.c3)!=(t0.c0)) END CROSS JOIN t1 ON (((rt0.c4 IN (t1.c38, t1.c0)))*(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))) WHERE (((rt0.c3) BETWEEN (CAST(t0.c0 AS REAL)) AND (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) BETWEEN (CAST(t0.c0 AS REAL)) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON CASE WHEN (rt0.c3 IN ()) THEN ((((t1.c0)AND(vt1.c0)))AND(t1.c38)) WHEN ((('326558460')) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((rt0.c3) NOT NULL) WHEN CASE WHEN rt0.c2 THEN t0.c0 END THEN ((rt0.c3)<>(t0.c0)) END CROSS JOIN t1 ON (((rt0.c4 IN (t1.c38, t1.c0)))*(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))));
SELECT ALL * FROM t1, t0, vt0 WHERE (((x'' IN (vt0.c0, t1.c38)) IN ())) ORDER BY ((x'')=(t0.c0)), CASE WHEN (((t0.c0))>((t1.c0))) THEN (((vt0.c0, '996016293', t0.c0))>((t1.c38, t1.c38, vt0.c0))) ELSE t0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((x'' IN (vt0.c0, t1.c38)) IN ())) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((x'')==(t0.c0)), CASE WHEN (((t0.c0))>((t1.c0))) THEN (((vt0.c0, '996016293', t0.c0))>((t1.c38, t1.c38, vt0.c0))) ELSE t0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1, t0, vt0 WHERE (((x'' IN (vt0.c0, t1.c38)) IN ())) ORDER BY ((x'')=(t0.c0)), CASE WHEN (((t0.c0))>((t1.c0))) THEN (((vt0.c0, '996016293', t0.c0))>((t1.c38, t1.c38, vt0.c0))) ELSE t0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((((x'' IN (vt0.c0, t1.c38)) IN ())) IS TRUE)  as count FROM t1, t0, vt0 ORDER BY ((x'')==(t0.c0)), CASE WHEN (((t0.c0))>((t1.c0))) THEN (((vt0.c0, '996016293', t0.c0))>((t1.c38, t1.c38, vt0.c0))) ELSE t0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t1, t0, vt0 WHERE (((x'' IN (vt0.c0, t1.c38)) IN ())) ORDER BY ((x'')=(t0.c0)), CASE WHEN (((t0.c0))>((t1.c0))) THEN (((vt0.c0, '996016293', t0.c0))>((t1.c38, t1.c38, vt0.c0))) ELSE t0.c0 COLLATE RTRIM END;
SELECT * FROM vt1 WHERE ((((((((((((vt1.c0))=((vt1.c0))))AND(0.16335277250865954)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0))=((vt1.c0))))AND(0.16335277250865954)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((vt1.c0))=((vt1.c0))))AND(0.16335277250865954)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c0))=((vt1.c0))))AND(0.16335277250865954)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((((vt1.c0))=((vt1.c0))))AND(0.16335277250865954)))OR(((vt1.c0)GLOB(vt1.c0)))))AND(vt1.c0)))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))<<((rt0.c3 IN ()))) WHERE (HEX(((rt0.c2)>=(rt0.c3)))) ORDER BY (((((rt0.c3))<=((vt1.c0))))=(CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2)>=(rt0.c3)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))<<((rt0.c3 IN ()))) ORDER BY (((((rt0.c3))<=((vt1.c0))))=(CAST(rt0.c1 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))<<((rt0.c3 IN ()))) WHERE (HEX(((rt0.c2)>=(rt0.c3)))) ORDER BY (((((rt0.c3))<=((vt1.c0))))=(CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(((rt0.c2)>=(rt0.c3)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))<<((rt0.c3 IN ()))) ORDER BY (((((rt0.c3))<=((vt1.c0))))=(CAST(rt0.c1 AS REAL)))  NULLS LAST);
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON ((((((((((NULL)AND(rt0.c3)))OR(rt0.c0)))OR(vt1.c0)))OR(vt1.c0)))<<((rt0.c3 IN ()))) WHERE (HEX(((rt0.c2)>=(rt0.c3)))) ORDER BY (((((rt0.c3))<=((vt1.c0))))=(CAST(rt0.c1 AS REAL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((UPPER(t0.c0))<(LOWER(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c0))<(LOWER(t1.c0)))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((UPPER(t0.c0))<(LOWER(t1.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c0))<(LOWER(t1.c0)))) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, t1, vt0 WHERE (((UPPER(t0.c0))<(LOWER(t1.c0))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, t1, vt0 WHERE ((((vt1.c0 IN ()))&(CASE WHEN rt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(CASE WHEN rt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t0, vt1, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, t1, vt0 WHERE ((((vt1.c0 IN ()))&(CASE WHEN rt0.c1 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))&(CASE WHEN rt0.c1 THEN t1.c0 END))) IS TRUE)  as count FROM t0, vt1, rt0, t1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, t1, vt0 WHERE ((((vt1.c0 IN ()))&(CASE WHEN rt0.c1 THEN t1.c0 END)));
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rt0.c1)==(vt1.c0)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(vt1.c0)))>>(NULL))) IS TRUE)  as count FROM vt1, t0, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rt0.c1)==(vt1.c0)))>>(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(vt1.c0)))>>(NULL))) IS TRUE)  as count FROM vt1, t0, t1, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, vt0, rt0 WHERE (((((rt0.c1)==(vt1.c0)))>>(NULL)));
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM t1, vt0, t0, rt0, vt1 INDEXED BY i57 WHERE (CAST(CASE WHEN '-oha' THEN t1.c0 END AS REAL)) ORDER BY (- (CASE WHEN t1.c38 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '-oha' THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0, vt1 INDEXED BY i57 ORDER BY (- (CASE WHEN t1.c38 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0, t0, rt0, vt1 INDEXED BY i57 WHERE (CAST(CASE WHEN '-oha' THEN t1.c0 END AS REAL)) ORDER BY (- (CASE WHEN t1.c38 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN '-oha' THEN t1.c0 END AS REAL)) IS TRUE)  as count FROM t1, vt0, t0, rt0, vt1 INDEXED BY i57 ORDER BY (- (CASE WHEN t1.c38 THEN vt1.c0 WHEN vt1.c0 THEN t1.c0 WHEN rt0.c3 THEN rt0.c4 ELSE vt1.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c38) BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c38  WHEN t1.c38 THEN t1.c0 END)))OR(INSTR(t1.c0, t1.c38))))OR(((t1.c38)|(t1.c0)))))OR(((t1.c0) ISNULL)))) ORDER BY CAST((NOT (t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c38) BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c38  WHEN t1.c38 THEN t1.c0 END)))OR(INSTR(t1.c0, t1.c38))))OR(((t1.c38)|(t1.c0)))))OR(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY CAST((NOT (t1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c38) BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c38  WHEN t1.c38 THEN t1.c0 END)))OR(INSTR(t1.c0, t1.c38))))OR(((t1.c38)|(t1.c0)))))OR(((t1.c0) ISNULL)))) ORDER BY CAST((NOT (t1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((((((t1.c38) BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c38  WHEN t1.c38 THEN t1.c0 END)))OR(INSTR(t1.c0, t1.c38))))OR(((t1.c38)|(t1.c0)))))OR(((t1.c0) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY CAST((NOT (t1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t1 WHERE (((((((((((t1.c38) BETWEEN (t1.c0) AND (t1.c0)))AND(CASE t1.c38  WHEN t1.c38 THEN t1.c0 END)))OR(INSTR(t1.c0, t1.c38))))OR(((t1.c38)|(t1.c0)))))OR(((t1.c0) ISNULL)))) ORDER BY CAST((NOT (t1.c0)) AS NUMERIC);
SELECT * FROM vt1, vt0 INDEXED BY i99, rt0 WHERE ((((rt0.c3 IN (vt0.c0, vt1.c0)))OR(CASE WHEN rt0.c4 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (vt0.c0, vt1.c0)))OR(CASE WHEN rt0.c4 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i99, rt0);
SELECT * FROM vt1, vt0 INDEXED BY i99, rt0 WHERE ((((rt0.c3 IN (vt0.c0, vt1.c0)))OR(CASE WHEN rt0.c4 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (vt0.c0, vt1.c0)))OR(CASE WHEN rt0.c4 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0 INDEXED BY i99, rt0);
SELECT * FROM rt0 WHERE (((((0.1251464366877253) NOT NULL))%(rt0.c4))) ORDER BY (+ (((rt0.c3)-('0U'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.1251464366877253) NOT NULL))%(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)-('0U'))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((0.1251464366877253) NOT NULL))%(rt0.c4))) ORDER BY (+ (((rt0.c3)-('0U'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.1251464366877253) NOT NULL))%(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c3)-('0U'))))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((0.1251464366877253) NOT NULL))%(rt0.c4))) ORDER BY (+ (((rt0.c3)-('0U'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY) ORDER BY CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END  WHEN 0xffffffffeb803d55 THEN ((((((((0.44504076815732696)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4)))OR(vt1.c0)) ELSE ((((((((vt1.c0)AND('')))OR(rt0.c4)))OR(rt0.c0)))AND('-1843957401')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END  WHEN 0Xffffffffeb803d55 THEN ((((((((0.44504076815732696)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4)))OR(vt1.c0)) ELSE ((((((((vt1.c0)AND('')))OR(rt0.c4)))OR(rt0.c0)))AND('-1843957401')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY) ORDER BY CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END  WHEN 0xffffffffeb803d55 THEN ((((((((0.44504076815732696)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4)))OR(vt1.c0)) ELSE ((((((((vt1.c0)AND('')))OR(rt0.c4)))OR(rt0.c0)))AND('-1843957401')) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END  WHEN 0Xffffffffeb803d55 THEN ((((((((0.44504076815732696)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4)))OR(vt1.c0)) ELSE ((((((((vt1.c0)AND('')))OR(rt0.c4)))OR(rt0.c0)))AND('-1843957401')) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c4) NOT NULL) COLLATE BINARY) ORDER BY CASE CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END  WHEN 0xffffffffeb803d55 THEN ((((((((0.44504076815732696)AND(rt0.c3)))OR(vt1.c0)))OR(rt0.c4)))OR(vt1.c0)) ELSE ((((((((vt1.c0)AND('')))OR(rt0.c4)))OR(rt0.c0)))AND('-1843957401')) END ASC  NULLS FIRST;
SELECT * FROM t1 FULL OUTER JOIN t0 ON (~ (t1.c0 COLLATE NOCASE)) WHERE ((((((t1.c38)) BETWEEN ((t1.c38)) AND ((t1.c38)))) NOTNULL)) ORDER BY CASE ((t1.c38)IS NOT(t1.c38))  WHEN ((((t0.c0)AND(t1.c38)))AND(t1.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c38 ELSE t0.c0 END WHEN TRIM(t1.c0) THEN (t1.c38 IN (t1.c38)) WHEN x'' THEN LTRIM(t1.c0, t0.c0) ELSE (((t1.c0, t0.c0, t1.c0))<>((t0.c0, t1.c38, t1.c0))) END  NULLS FIRST, (('962934432') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c38)) BETWEEN ((t1.c38)) AND ((t1.c38)))) NOTNULL)) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (~ (t1.c0 COLLATE NOCASE)) ORDER BY CASE ((t1.c38)IS NOT(t1.c38))  WHEN ((((t0.c0)AND(t1.c38)))AND(t1.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c38 ELSE t0.c0 END WHEN TRIM(t1.c0) THEN (t1.c38 IN (t1.c38)) WHEN x'' THEN LTRIM(t1.c0, t0.c0) ELSE (((t1.c0, t0.c0, t1.c0))!=((t0.c0, t1.c38, t1.c0))) END  NULLS FIRST, (('962934432') IS TRUE) ASC);
SELECT * FROM t1 FULL OUTER JOIN t0 ON (~ (t1.c0 COLLATE NOCASE)) WHERE ((((((t1.c38)) BETWEEN ((t1.c38)) AND ((t1.c38)))) NOTNULL)) ORDER BY CASE ((t1.c38)IS NOT(t1.c38))  WHEN ((((t0.c0)AND(t1.c38)))AND(t1.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c38 ELSE t0.c0 END WHEN TRIM(t1.c0) THEN (t1.c38 IN (t1.c38)) WHEN x'' THEN LTRIM(t1.c0, t0.c0) ELSE (((t1.c0, t0.c0, t1.c0))<>((t0.c0, t1.c38, t1.c0))) END  NULLS FIRST, (('962934432') IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((((t1.c38)) BETWEEN ((t1.c38)) AND ((t1.c38)))) NOTNULL)) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON (~ (t1.c0 COLLATE NOCASE)) ORDER BY CASE ((t1.c38)IS NOT(t1.c38))  WHEN ((((t0.c0)AND(t1.c38)))AND(t1.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c38 ELSE t0.c0 END WHEN TRIM(t1.c0) THEN (t1.c38 IN (t1.c38)) WHEN x'' THEN LTRIM(t1.c0, t0.c0) ELSE (((t1.c0, t0.c0, t1.c0))!=((t0.c0, t1.c38, t1.c0))) END  NULLS FIRST, (('962934432') IS TRUE) ASC);
SELECT * FROM t1 FULL OUTER JOIN t0 ON (~ (t1.c0 COLLATE NOCASE)) WHERE ((((((t1.c38)) BETWEEN ((t1.c38)) AND ((t1.c38)))) NOTNULL)) ORDER BY CASE ((t1.c38)IS NOT(t1.c38))  WHEN ((((t0.c0)AND(t1.c38)))AND(t1.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c38 ELSE t0.c0 END WHEN TRIM(t1.c0) THEN (t1.c38 IN (t1.c38)) WHEN x'' THEN LTRIM(t1.c0, t0.c0) ELSE (((t1.c0, t0.c0, t1.c0))<>((t0.c0, t1.c38, t1.c0))) END  NULLS FIRST, (('962934432') IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN t1 ON (((vt0.c0 IN ())) NOTNULL) WHERE ((((((((((((('')AND(CAST(vt1.c0 AS REAL))))AND((((vt0.c0, t1.c0, t1.c0))>((vt0.c0, vt0.c0, vt1.c0))))))OR(((vt0.c0)<<(t1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))))OR((t1.c38 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((('')AND(CAST(vt1.c0 AS REAL))))AND((((vt0.c0, t1.c0, t1.c0))>((vt0.c0, vt0.c0, vt1.c0))))))OR(((vt0.c0)<<(t1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))))OR((t1.c38 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN t1 ON (((vt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN t1 ON (((vt0.c0 IN ())) NOTNULL) WHERE ((((((((((((('')AND(CAST(vt1.c0 AS REAL))))AND((((vt0.c0, t1.c0, t1.c0))>((vt0.c0, vt0.c0, vt1.c0))))))OR(((vt0.c0)<<(t1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))))OR((t1.c38 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((((((('')AND(CAST(vt1.c0 AS REAL))))AND((((vt0.c0, t1.c0, t1.c0))>((vt0.c0, vt0.c0, vt1.c0))))))OR(((vt0.c0)<<(t1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))))OR((t1.c38 IN ())))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN t1 ON (((vt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON (((~ (vt0.c0))) ISNULL) CROSS JOIN t1 ON (((vt0.c0 IN ())) NOTNULL) WHERE ((((((((((((('')AND(CAST(vt1.c0 AS REAL))))AND((((vt0.c0, t1.c0, t1.c0))>((vt0.c0, vt0.c0, vt1.c0))))))OR(((vt0.c0)<<(t1.c0)))))OR(vt1.c0 COLLATE BINARY)))AND(((((vt0.c0)OR(t1.c0)))OR(vt0.c0)))))OR((t1.c38 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, vt1 WHERE (((rt0.c3 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, vt1 WHERE (((rt0.c3 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c0)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, t1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, t1, vt1 WHERE (((rt0.c3 COLLATE RTRIM)>>(((((rt0.c1)OR(rt0.c0)))OR(t1.c0)))));
SELECT * FROM t0 CROSS JOIN rt0 ON ((((vt1.c0)>>(rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c3)))<(vt1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (+ (vt0.c0)) WHERE (((rt0.c3 COLLATE BINARY) IS FALSE)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((vt1.c0)>>(rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c3)))<(vt1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (+ (vt0.c0)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN rt0 ON ((((vt1.c0)>>(rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c3)))<(vt1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (+ (vt0.c0)) WHERE (((rt0.c3 COLLATE BINARY) IS FALSE)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((NULL) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((vt1.c0)>>(rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) LEFT OUTER JOIN vt0 ON ((((((((((rt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c3)))<(vt1.c0 COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (+ (vt0.c0)) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((NULL) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, rt0, vt1, t1 WHERE ((((rt0.c3))<>((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))<>((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1);
SELECT * FROM t0, vt0, rt0, vt1, t1 WHERE ((((rt0.c3))<>((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3))<>((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t1);
SELECT * FROM t0, vt0, rt0, vt1, t1 WHERE ((((rt0.c3))<>((t0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((+ (t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c38))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((+ (t1.c38)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t1.c38))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((~ ((+ (t1.c38)))));
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (('-623162262' IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('-623162262' IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0, t1);
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (('-623162262' IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((('-623162262' IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, rt0, t1);
SELECT ALL * FROM vt0, t0, rt0, t1 WHERE (('-623162262' IN (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1, t0 WHERE (-24654107);
SELECT SUM(count) FROM (SELECT ((-24654107) IS TRUE)  as count FROM vt0, rt0, t1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1, t0 WHERE (-24654107);
SELECT SUM(count) FROM (SELECT ((-24654107) IS TRUE)  as count FROM vt0, rt0, t1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, vt1, t0 WHERE (-24654107);
SELECT COUNT(*) FROM vt0 INDEXED BY i16 WHERE ((+ ((((vt0.c0, 0.4388737720612804, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, 0.4388737720612804, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 INDEXED BY i16 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 INDEXED BY i16 WHERE ((+ ((((vt0.c0, 0.4388737720612804, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt0.c0, 0.4388737720612804, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 INDEXED BY i16 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(NULL, ((0xfffffffff968c056) NOTNULL))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(NULL, ((0xfffffffff968c056) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(NULL, ((0xfffffffff968c056) NOTNULL))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(NULL, ((0xfffffffff968c056) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(NULL, ((0xfffffffff968c056) NOTNULL))) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)*(vt0.c0)))) DESC;
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c1)==(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((x'') NOT NULL)))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c1)==(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((x'') NOT NULL)))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)=(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT * FROM rt0, t0, vt1 WHERE (((((rt0.c1)==(t0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND (((x'') NOT NULL)))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT * FROM t1 WHERE (((NOT (t1.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t1.c38)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((NOT (t1.c38)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (t1.c38)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((NOT (t1.c38)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (CAST(vt1.c0 AS INTEGER), json_array_length(vt1.c0)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (CAST(vt1.c0 AS INTEGER), json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (CAST(vt1.c0 AS INTEGER), json_array_length(vt1.c0)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (CAST(vt1.c0 AS INTEGER), json_array_length(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((vt1.c0 IN (CAST(vt1.c0 AS INTEGER), json_array_length(vt1.c0)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, t0, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, t0, t1);
SELECT ALL * FROM vt1, t0, t1 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((rt0.c0)OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))OR(t0.c0)) THEN vt1.c0 END INNER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (0xffffffff9248abc4) AND ('0.6679850694999043')))<((- (t1.c38)))) INNER JOIN t1 ON rt0.c3 WHERE ((((t1.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((rt0.c0)OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))OR(t0.c0)) THEN vt1.c0 END INNER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (0xffffffff9248abc4) AND ('0.6679850694999043')))<((- (t1.c38)))) INNER JOIN t1 ON rt0.c3);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((rt0.c0)OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))OR(t0.c0)) THEN vt1.c0 END INNER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (0xffffffff9248abc4) AND ('0.6679850694999043')))<((- (t1.c38)))) INNER JOIN t1 ON rt0.c3 WHERE ((((t1.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((t1.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON t0.c0 LEFT OUTER JOIN rt0 ON CASE WHEN ((((((((rt0.c0)OR(t0.c0)))AND(t1.c0)))AND(t1.c38)))OR(t0.c0)) THEN vt1.c0 END INNER JOIN vt0 ON ((((t1.c0) NOT BETWEEN (0xffffffff9248abc4) AND ('0.6679850694999043')))<((- (t1.c38)))) INNER JOIN t1 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON x'd80b' WHERE (CASE IFNULL(DISTINCT t0.c0, vt1.c0)  WHEN (NOT (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t0.c0, vt1.c0)  WHEN (NOT (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON x'd80b');
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON x'd80b' WHERE (CASE IFNULL(DISTINCT t0.c0, vt1.c0)  WHEN (NOT (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t0.c0, vt1.c0)  WHEN (NOT (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON x'd80b');
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON x'd80b' WHERE (CASE IFNULL(DISTINCT t0.c0, vt1.c0)  WHEN (NOT (vt1.c0)) THEN CAST(vt1.c0 AS TEXT) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1, vt0 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1, vt0 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt0, vt1, t1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t1, vt0 WHERE ((((rt0.c0) NOTNULL) IN ()));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((0Xffffffffcb81d5a8)&((- (t1.c38)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((0xffffffffcb81d5a8)&((- (t1.c38)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((0Xffffffffcb81d5a8)&((- (t1.c38)))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t1 FULL OUTER JOIN t0 ON ((0xffffffffcb81d5a8)&((- (t1.c38)))));
SELECT COUNT(*) FROM t1 FULL OUTER JOIN t0 ON ((0Xffffffffcb81d5a8)&((- (t1.c38)))) WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1, rt0 WHERE ((((vt0.c0)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1, rt0 WHERE ((((vt0.c0)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0, t1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, t1, rt0 WHERE ((((vt0.c0)GLOB(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, rt0, t1, vt0 WHERE ('-1207739981') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (('-1207739981') IS TRUE)  as count FROM vt1, t0, rt0, t1, vt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, t1, vt0 WHERE ('-1207739981') ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (('-1207739981') IS TRUE)  as count FROM vt1, t0, rt0, t1, vt0 ORDER BY rt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0, rt0, t1, vt0 WHERE ('-1207739981') ORDER BY rt0.c0;
SELECT COUNT(*) FROM vt1, t0, t1, rt0 WHERE (((((((t1.c0, vt1.c0, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c4)))))<>((((t1.c38) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, vt1.c0, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c4)))))!=((((t1.c38) ISNULL))))) IS TRUE)  as count FROM vt1, t0, t1, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, rt0 WHERE (((((((t1.c0, vt1.c0, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c4)))))<>((((t1.c38) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0, vt1.c0, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c4)))))!=((((t1.c38) ISNULL))))) IS TRUE)  as count FROM vt1, t0, t1, rt0);
SELECT COUNT(*) FROM vt1, t0, t1, rt0 WHERE (((((((t1.c0, vt1.c0, rt0.c3))<=((rt0.c2, rt0.c0, rt0.c4)))))<>((((t1.c38) ISNULL)))));
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((t1.c38)AND(vt0.c0)))OR((t1.c0 IN (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(TRIM(t1.c38)))) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(CAST(t1.c38 AS REAL))))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t1.c38)AND(vt0.c0)))OR((t1.c0 IN (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(TRIM(t1.c38)))) IS TRUE)  as count FROM rt0, vt0, t1, t0 ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(CAST(t1.c38 AS REAL))))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((t1.c38)AND(vt0.c0)))OR((t1.c0 IN (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(TRIM(t1.c38)))) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(CAST(t1.c38 AS REAL))))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((t1.c38)AND(vt0.c0)))OR((t1.c0 IN (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(TRIM(t1.c38)))) IS TRUE)  as count FROM rt0, vt0, t1, t0 ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(CAST(t1.c38 AS REAL))))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, t0 WHERE (((((((((t1.c38)AND(vt0.c0)))OR((t1.c0 IN (rt0.c4)))))AND(((rt0.c3) NOT NULL))))AND(TRIM(t1.c38)))) ORDER BY ((((CAST(rt0.c2 AS BLOB))AND(CAST(t1.c38 AS REAL))))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)<(rt0.c2)), CAST(rt0.c3 AS INTEGER), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c2), '330534344')))) ORDER BY ((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c4)IS(rt0.c4))) AND ((((rt0.c3))<=((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)<(rt0.c2)), CAST(rt0.c3 AS INTEGER), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c2), '330534344')))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c4)IS(rt0.c4))) AND ((((rt0.c3))<=((rt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)<(rt0.c2)), CAST(rt0.c3 AS INTEGER), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c2), '330534344')))) ORDER BY ((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c4)IS(rt0.c4))) AND ((((rt0.c3))<=((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)<(rt0.c2)), CAST(rt0.c3 AS INTEGER), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c2), '330534344')))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c4)IS(rt0.c4))) AND ((((rt0.c3))<=((rt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c4)<(rt0.c2)), CAST(rt0.c3 AS INTEGER), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END, highlight(rt0.c3, rt0.c0, rt0.c4, rt0.c2), '330534344')))) ORDER BY ((((rt0.c2) IS FALSE)) BETWEEN (((rt0.c4)IS(rt0.c4))) AND ((((rt0.c3))<=((rt0.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 INDEXED BY i57, t1, vt0 WHERE (((((t1.c38)>=(1547943505)))<>(((NULL)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c38)>=(1547943505)))!=(((NULL)|(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i57, t1, vt0);
SELECT ALL COUNT(*) FROM vt1, t0 INDEXED BY i57, t1, vt0 WHERE (((((t1.c38)>=(1547943505)))<>(((NULL)|(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c38)>=(1547943505)))!=(((NULL)|(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 INDEXED BY i57, t1, vt0);
SELECT ALL * FROM vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM vt1, t1);
SELECT ALL * FROM vt1, t1 WHERE (t1.c0);
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))>=((t0.c0)))))) ORDER BY 0.8176212642902342 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY 0.8176212642902342 DESC);
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))>=((t0.c0)))))) ORDER BY 0.8176212642902342 DESC;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY 0.8176212642902342 DESC);
SELECT COUNT(*) FROM t0 WHERE ((~ ((((t0.c0))>=((t0.c0)))))) ORDER BY 0.8176212642902342 DESC;
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, rt0, vt0);
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, t1, rt0, vt0);
SELECT ALL * FROM vt1, t1, rt0, vt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.5973109155262402)&(LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5973109155262402)&(LOWER(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.5973109155262402)&(LOWER(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((0.5973109155262402)&(LOWER(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((0.5973109155262402)&(LOWER(rt0.c4))));
SELECT ALL * FROM vt1, t0, t1 NATURAL JOIN rt0 WHERE (CAST((~ (t1.c38)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t1.c38)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1, t0, t1 NATURAL JOIN rt0 WHERE (CAST((~ (t1.c38)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (t1.c38)) AS INTEGER)) IS TRUE)  as count FROM vt1, t0, t1 NATURAL JOIN rt0);
SELECT ALL * FROM vt1, t0, t1 NATURAL JOIN rt0 WHERE (CAST((~ (t1.c38)) AS INTEGER));
SELECT COUNT(*) FROM t1, vt1 WHERE ((- ((((t1.c38, t1.c0, t1.c0))<(('㚊	CoS/', t1.c38, t1.c38))))));
SELECT SUM(count) FROM (SELECT (((- ((((t1.c38, t1.c0, t1.c0))<(('㚊	CoS/', t1.c38, t1.c38)))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE ((- ((((t1.c38, t1.c0, t1.c0))<(('㚊	CoS/', t1.c38, t1.c38))))));
SELECT SUM(count) FROM (SELECT (((- ((((t1.c38, t1.c0, t1.c0))<(('㚊	CoS/', t1.c38, t1.c38)))))) IS TRUE)  as count FROM t1, vt1);
SELECT COUNT(*) FROM t1, vt1 WHERE ((- ((((t1.c38, t1.c0, t1.c0))<(('㚊	CoS/', t1.c38, t1.c38))))));
SELECT * FROM vt0, vt1, rt0, t1 WHERE ((('m鈏')||(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('m鈏')||(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT * FROM vt0, vt1, rt0, t1 WHERE ((('m鈏')||(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((('m鈏')||(NULL)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt0, t1);
SELECT * FROM vt0, vt1, rt0, t1 WHERE ((('m鈏')||(NULL)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON TRIM((t0.c0 IN ()), ((((((((rt0.c0)AND(rt0.c4)))OR(x'')))AND(rt0.c0)))OR(rt0.c4))) WHERE ((+ ((((rt0.c4, t0.c0, t1.c38))>=((0x2db3e53d, rt0.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c4, t0.c0, t1.c38))>=((0x2db3e53d, rt0.c4, rt0.c0)))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON TRIM((t0.c0 IN ()), ((((((((rt0.c0)AND(rt0.c4)))OR(x'')))AND(rt0.c0)))OR(rt0.c4))));
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON TRIM((t0.c0 IN ()), ((((((((rt0.c0)AND(rt0.c4)))OR(x'')))AND(rt0.c0)))OR(rt0.c4))) WHERE ((+ ((((rt0.c4, t0.c0, t1.c38))>=((0x2db3e53d, rt0.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c4, t0.c0, t1.c38))>=((0x2db3e53d, rt0.c4, rt0.c0)))))) IS TRUE)  as count FROM t0, t1 FULL OUTER JOIN rt0 ON TRIM((t0.c0 IN ()), ((((((((rt0.c0)AND(rt0.c4)))OR(x'')))AND(rt0.c0)))OR(rt0.c4))));
SELECT COUNT(*) FROM t0, t1 FULL OUTER JOIN rt0 ON TRIM((t0.c0 IN ()), ((((((((rt0.c0)AND(rt0.c4)))OR(x'')))AND(rt0.c0)))OR(rt0.c4))) WHERE ((+ ((((rt0.c4, t0.c0, t1.c38))>=((0x2db3e53d, rt0.c4, rt0.c0))))));
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE ((((vt1.c0 IN ())) BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (CAST(rt0.c3 AS BLOB))), ((rt0.c3)LIKE(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (CAST(rt0.c3 AS BLOB))), ((rt0.c3)LIKE(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE ((((vt1.c0 IN ())) BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (CAST(rt0.c3 AS BLOB))), ((rt0.c3)LIKE(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (CAST(rt0.c3 AS BLOB))), ((rt0.c3)LIKE(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE ((((vt1.c0 IN ())) BETWEEN (rt0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))))) ORDER BY ((((vt1.c0)&(vt1.c0))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 END) AND (CAST(rt0.c3 AS BLOB))), ((rt0.c3)LIKE(vt1.c0)) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN 0.7029583793297309 THEN 0.9790408438526521 ELSE (((vt1.c0))<((vt0.c0))) END) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) IS TRUE)  WHEN 0.7029583793297309 THEN 0.9790408438526521 ELSE (((vt1.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN 0.7029583793297309 THEN 0.9790408438526521 ELSE (((vt1.c0))<((vt0.c0))) END) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) IS TRUE)  WHEN 0.7029583793297309 THEN 0.9790408438526521 ELSE (((vt1.c0))<((vt0.c0))) END) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE ((vt1.c0) IS TRUE)  WHEN 0.7029583793297309 THEN 0.9790408438526521 ELSE (((vt1.c0))<((vt0.c0))) END) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) DESC;
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))*(((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))*(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))*(((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))*(((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))*(((rt0.c4) NOT NULL))));
SELECT ALL * FROM t0, t1, vt0 WHERE (CASE (('')%(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(t1.c38 AS BLOB) ELSE CAST(t1.c38 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')%(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(t1.c38 AS BLOB) ELSE CAST(t1.c38 AS TEXT) END) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL * FROM t0, t1, vt0 WHERE (CASE (('')%(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(t1.c38 AS BLOB) ELSE CAST(t1.c38 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (('')%(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(t1.c38 AS BLOB) ELSE CAST(t1.c38 AS TEXT) END) IS TRUE)  as count FROM t0, t1, vt0);
SELECT ALL * FROM t0, t1, vt0 WHERE (CASE (('')%(vt0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(t1.c38 AS BLOB) ELSE CAST(t1.c38 AS TEXT) END);
SELECT COUNT(*) FROM t0, t1 INNER JOIN vt1 ON CAST(t1.c0 COLLATE BINARY AS NUMERIC) WHERE (((CASE WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END)OR(((t1.c0)AND(vt1.c0))))) ORDER BY CAST((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t1.c38))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END)OR(((t1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM t0, t1 INNER JOIN vt1 ON CAST(t1.c0 COLLATE BINARY AS NUMERIC) ORDER BY CAST((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t1.c38))) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1 INNER JOIN vt1 ON CAST(t1.c0 COLLATE BINARY AS NUMERIC) WHERE (((CASE WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END)OR(((t1.c0)AND(vt1.c0))))) ORDER BY CAST((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t1.c38))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END)OR(((t1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM t0, t1 INNER JOIN vt1 ON CAST(t1.c0 COLLATE BINARY AS NUMERIC) ORDER BY CAST((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t1.c38))) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, t1 INNER JOIN vt1 ON CAST(t1.c0 COLLATE BINARY AS NUMERIC) WHERE (((CASE WHEN vt1.c0 THEN t1.c38 ELSE vt1.c0 END)OR(((t1.c0)AND(vt1.c0))))) ORDER BY CAST((((vt1.c0, t1.c0, vt1.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt1.c0, vt1.c0, t1.c38))) AS REAL) ASC  NULLS LAST;
SELECT * FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0)>>(t1.c38))) IS FALSE) WHERE (0.4658902306312871) ORDER BY ((((NULL)>=(t1.c38))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c38)>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.4658902306312871) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0)>>(t1.c38))) IS FALSE) ORDER BY ((((NULL)>=(t1.c38))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c38)>(vt0.c0)))) ASC);
SELECT * FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0)>>(t1.c38))) IS FALSE) WHERE (0.4658902306312871) ORDER BY ((((NULL)>=(t1.c38))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c38)>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.4658902306312871) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0)>>(t1.c38))) IS FALSE) ORDER BY ((((NULL)>=(t1.c38))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c38)>(vt0.c0)))) ASC);
SELECT * FROM vt0, vt1 INNER JOIN t1 ON ((((vt0.c0)>>(t1.c38))) IS FALSE) WHERE (0.4658902306312871) ORDER BY ((((NULL)>=(t1.c38))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((t1.c38)>(vt0.c0)))) ASC;
SELECT ALL * FROM vt0, rt0, t1, vt1, t0 WHERE (((t1.c38)||(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38)||(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, vt1, t0);
SELECT ALL * FROM vt0, rt0, t1, vt1, t0 WHERE (((t1.c38)||(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38)||(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, vt1, t0);
SELECT ALL * FROM vt0, rt0, t1, vt1, t0 WHERE (((t1.c38)||(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((t0.c0)<>(NULL))) BETWEEN (NULL) AND (((((((((rt0.c0)AND(t0.c0)))OR(rt0.c2)))OR(t1.c38)))OR(t1.c38)))) INNER JOIN t1 ON ((((((((('-274286348' IN (vt1.c0, rt0.c0)))OR(((t0.c0) NOTNULL))))OR(1.753317784E9)))OR((vt0.c0 IN ()))))AND(t0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON '-2129875641' WHERE (CAST(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ORDER BY 0.5049447399678689 ASC, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (((0.24026531014745955) IS FALSE)) AND ((- (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((t0.c0)<>(NULL))) BETWEEN (NULL) AND (((((((((rt0.c0)AND(t0.c0)))OR(rt0.c2)))OR(t1.c38)))OR(t1.c38)))) INNER JOIN t1 ON ((((((((('-274286348' IN (vt1.c0, rt0.c0)))OR(((t0.c0) NOTNULL))))OR(1.753317784E9)))OR((vt0.c0 IN ()))))AND(t0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON '-2129875641' ORDER BY 0.5049447399678689 ASC, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (((0.24026531014745955) IS FALSE)) AND ((- (rt0.c4))))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((t0.c0)<>(NULL))) BETWEEN (NULL) AND (((((((((rt0.c0)AND(t0.c0)))OR(rt0.c2)))OR(t1.c38)))OR(t1.c38)))) INNER JOIN t1 ON ((((((((('-274286348' IN (vt1.c0, rt0.c0)))OR(((t0.c0) NOTNULL))))OR(1.753317784E9)))OR((vt0.c0 IN ()))))AND(t0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON '-2129875641' WHERE (CAST(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) ORDER BY 0.5049447399678689 ASC, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (((0.24026531014745955) IS FALSE)) AND ((- (rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((((t0.c0)<>(NULL))) BETWEEN (NULL) AND (((((((((rt0.c0)AND(t0.c0)))OR(rt0.c2)))OR(t1.c38)))OR(t1.c38)))) INNER JOIN t1 ON ((((((((('-274286348' IN (vt1.c0, rt0.c0)))OR(((t0.c0) NOTNULL))))OR(1.753317784E9)))OR((vt0.c0 IN ()))))AND(t0.c0 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON '-2129875641' ORDER BY 0.5049447399678689 ASC, (((rt0.c2 IN (rt0.c3))) NOT BETWEEN (((0.24026531014745955) IS FALSE)) AND ((- (rt0.c4))))  NULLS LAST);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t1);
SELECT * FROM vt1, rt0, vt0, t1 WHERE (rt0.c0);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE (((t1.c38)IS(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38)IS(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE (((t1.c38)IS(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c38)IS(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, t1, vt1, vt0);
SELECT ALL * FROM t0, t1, vt1, vt0 WHERE (((t1.c38)IS(vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON vt1.c0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN t1 ON vt1.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON vt1.c0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN t1 ON vt1.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t1 ON vt1.c0 WHERE (vt1.c0);
SELECT ALL * FROM t0, vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)+(t1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, t1 ORDER BY ((vt0.c0)+(t1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)+(t1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, t1 ORDER BY ((vt0.c0)+(t1.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, t1 WHERE ((((~ (vt0.c0))) IS FALSE)) ORDER BY ((vt0.c0)+(t1.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM vt0, t1, vt1, t0, rt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (vt0.c0 IN (NULL)))) IS TRUE)  as count FROM vt0, t1, vt1, t0, rt0);
SELECT * FROM vt0, t1, vt1, t0, rt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (NULL))));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT (vt0.c0 IN (NULL)))) IS TRUE)  as count FROM vt0, t1, vt1, t0, rt0);
SELECT * FROM vt0, t1, vt1, t0, rt0 WHERE (UNLIKELY(DISTINCT (vt0.c0 IN (NULL))));
SELECT ALL * FROM vt0, t0, vt1, t1 LEFT OUTER JOIN rt0 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE ((+ (((rt0.c0)/(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)/(t1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, t1 LEFT OUTER JOIN rt0 ON CAST(((t1.c0) ISNULL) AS TEXT));
SELECT ALL * FROM vt0, t0, vt1, t1 LEFT OUTER JOIN rt0 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE ((+ (((rt0.c0)/(t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0)/(t1.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, t1 LEFT OUTER JOIN rt0 ON CAST(((t1.c0) ISNULL) AS TEXT));
SELECT ALL * FROM vt0, t0, vt1, t1 LEFT OUTER JOIN rt0 ON CAST(((t1.c0) ISNULL) AS TEXT) WHERE ((+ (((rt0.c0)/(t1.c0)))));
SELECT ALL * FROM t1, t0, vt0, vt1, rt0 WHERE ((((((rt0.c4)=(rt0.c2)), '-977478168', (~ (rt0.c4))))!=((x'', (~ (t1.c0)), (((vt0.c0, rt0.c0, t0.c0))<>((t1.c38, vt1.c0, rt0.c4))))))) ORDER BY (((((- (rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)==(rt0.c2)), '-977478168', (~ (rt0.c4))))!=((x'', (~ (t1.c0)), (((vt0.c0, rt0.c0, t0.c0))!=((t1.c38, vt1.c0, rt0.c4))))))) IS TRUE)  as count FROM t1, t0 NOT INDEXED, vt0, vt1, rt0 ORDER BY (((((- (rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt0, vt1, rt0 WHERE ((((((rt0.c4)=(rt0.c2)), '-977478168', (~ (rt0.c4))))!=((x'', (~ (t1.c0)), (((vt0.c0, rt0.c0, t0.c0))<>((t1.c38, vt1.c0, rt0.c4))))))) ORDER BY (((((- (rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)==(rt0.c2)), '-977478168', (~ (rt0.c4))))!=((x'', (~ (t1.c0)), (((vt0.c0, rt0.c0, t0.c0))!=((t1.c38, vt1.c0, rt0.c4))))))) IS TRUE)  as count FROM t1, t0 NOT INDEXED, vt0, vt1, rt0 ORDER BY (((((- (rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c1) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM t1, t0, vt0, vt1, rt0 WHERE ((((((rt0.c4)=(rt0.c2)), '-977478168', (~ (rt0.c4))))!=((x'', (~ (t1.c0)), (((vt0.c0, rt0.c0, t0.c0))<>((t1.c38, vt1.c0, rt0.c4))))))) ORDER BY (((((- (rt0.c2)))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT * FROM rt0, t1, vt0 WHERE (((((t1.c0, NULL, rt0.c4))<=((vt0.c0, rt0.c0, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0, NULL, rt0.c4))<=((vt0.c0, rt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (((((t1.c0, NULL, rt0.c4))<=((vt0.c0, rt0.c0, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0, NULL, rt0.c4))<=((vt0.c0, rt0.c0, vt0.c0))) IN ())) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT * FROM rt0, t1, vt0 WHERE (((((t1.c0, NULL, rt0.c4))<=((vt0.c0, rt0.c0, vt0.c0))) IN ()));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0Xffffffffea8ee299 INNER JOIN rt0 ON CASE ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(')*9')))AND(rt0.c0))  WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('-2063010747')) WHEN rt0.c4 THEN UNLIKELY(vt1.c0) ELSE (~ (NULL)) END WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 0Xffffffffea8ee299 INNER JOIN rt0 ON CASE ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(')*9')))AND(rt0.c0))  WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('-2063010747')) WHEN rt0.c4 THEN UNLIKELY(vt1.c0) ELSE (~ (NULL)) END);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0Xffffffffea8ee299 INNER JOIN rt0 ON CASE ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(')*9')))AND(rt0.c0))  WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('-2063010747')) WHEN rt0.c4 THEN UNLIKELY(vt1.c0) ELSE (~ (NULL)) END WHERE ((- ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 0Xffffffffea8ee299 INNER JOIN rt0 ON CASE ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(')*9')))AND(rt0.c0))  WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('-2063010747')) WHEN rt0.c4 THEN UNLIKELY(vt1.c0) ELSE (~ (NULL)) END);
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON 0Xffffffffea8ee299 INNER JOIN rt0 ON CASE ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(')*9')))AND(rt0.c0))  WHEN (vt1.c0 IN ()) THEN (((vt1.c0))<=((rt0.c2))) WHEN rt0.c2 THEN ((rt0.c4) BETWEEN (rt0.c1) AND ('-2063010747')) WHEN rt0.c4 THEN UNLIKELY(vt1.c0) ELSE (~ (NULL)) END WHERE ((- ((+ (rt0.c1)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((t0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((t0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))) AND ((t0.c0 COLLATE BINARY))));
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (TYPEOF(TRIM(x'', rt0.c3))) ORDER BY (+ (LIKE(rt0.c2, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(TRIM(x'', rt0.c3))) IS TRUE)  as count FROM rt0, vt0, vt1, t1, t0 ORDER BY (+ (LIKE(rt0.c2, rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (TYPEOF(TRIM(x'', rt0.c3))) ORDER BY (+ (LIKE(rt0.c2, rt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(TRIM(x'', rt0.c3))) IS TRUE)  as count FROM rt0, vt0, vt1, t1, t0 ORDER BY (+ (LIKE(rt0.c2, rt0.c2))) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0, vt1, t1, t0 WHERE (TYPEOF(TRIM(x'', rt0.c3))) ORDER BY (+ (LIKE(rt0.c2, rt0.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (653434921) ORDER BY (- (((((((((0.09557736628084035)OR(t1.c0)))AND(t1.c0)))AND(x'9903')))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((653434921) IS TRUE)  as count FROM t1 ORDER BY (- (((((((((0.09557736628084035)OR(t1.c0)))AND(t1.c0)))AND(x'9903')))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (653434921) ORDER BY (- (((((((((0.09557736628084035)OR(t1.c0)))AND(t1.c0)))AND(x'9903')))AND(t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((653434921) IS TRUE)  as count FROM t1 ORDER BY (- (((((((((0.09557736628084035)OR(t1.c0)))AND(t1.c0)))AND(x'9903')))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE (653434921) ORDER BY (- (((((((((0.09557736628084035)OR(t1.c0)))AND(t1.c0)))AND(x'9903')))AND(t1.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, vt0, rt0 WHERE (((((rt0.c2)&(rt0.c1))) BETWEEN (vt0.c0 COLLATE NOCASE) AND (t0.c0 COLLATE BINARY)));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON vt1.c0 WHERE (rt0.c4);
SELECT * FROM t0 WHERE ((- (CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(0.7722501163402201 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CAST(0.7722501163402201 AS NUMERIC) ASC);
SELECT * FROM t0 WHERE ((- (CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(0.7722501163402201 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY CAST(0.7722501163402201 AS NUMERIC) ASC);
SELECT * FROM t0 WHERE ((- (CAST(t0.c0 AS INTEGER)))) ORDER BY CAST(0.7722501163402201 AS NUMERIC) ASC;
SELECT ALL * FROM t1, vt1 CROSS JOIN rt0 ON x'' COLLATE RTRIM INNER JOIN vt0 ON ((CAST(t1.c38 AS BLOB))>>(LIKELIHOOD(rt0.c0, 0.7535105703331791))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt0 ON x'' COLLATE RTRIM INNER JOIN vt0 ON ((CAST(t1.c38 AS BLOB))>>(LIKELIHOOD(rt0.c0, 0.7535105703331791))));
SELECT ALL * FROM t1, vt1 CROSS JOIN rt0 ON x'' COLLATE RTRIM INNER JOIN vt0 ON ((CAST(t1.c38 AS BLOB))>>(LIKELIHOOD(rt0.c0, 0.7535105703331791))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt1 CROSS JOIN rt0 ON x'' COLLATE RTRIM INNER JOIN vt0 ON ((CAST(t1.c38 AS BLOB))>>(LIKELIHOOD(rt0.c0, 0.7535105703331791))));
SELECT ALL * FROM t1, vt1 CROSS JOIN rt0 ON x'' COLLATE RTRIM INNER JOIN vt0 ON ((CAST(t1.c38 AS BLOB))>>(LIKELIHOOD(rt0.c0, 0.7535105703331791))) WHERE ((((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))AND(rt0.c3 COLLATE NOCASE)));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((QUOTE(rt0.c4))IS NOT((((rt0.c1, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt1.c0, rt0.c4, rt0.c4))))) WHERE (IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)), TYPEOF(DISTINCT rt0.c4))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (UPPER(rt0.c0))) ASC, ((((rt0.c0, rt0.c0, rt0.c0))<((rt0.c3, rt0.c2, vt1.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)), TYPEOF(DISTINCT rt0.c4))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((QUOTE(rt0.c4))IS NOT((((rt0.c1, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt1.c0, rt0.c4, rt0.c4))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (UPPER(rt0.c0))) ASC, ((((rt0.c0, rt0.c0, rt0.c0))<((rt0.c3, rt0.c2, vt1.c0))) IN ())  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((QUOTE(rt0.c4))IS NOT((((rt0.c1, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt1.c0, rt0.c4, rt0.c4))))) WHERE (IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)), TYPEOF(DISTINCT rt0.c4))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (UPPER(rt0.c0))) ASC, ((((rt0.c0, rt0.c0, rt0.c0))<((rt0.c3, rt0.c2, vt1.c0))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)), TYPEOF(DISTINCT rt0.c4))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((QUOTE(rt0.c4))IS NOT((((rt0.c1, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt1.c0, rt0.c4, rt0.c4))))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (UPPER(rt0.c0))) ASC, ((((rt0.c0, rt0.c0, rt0.c0))<((rt0.c3, rt0.c2, vt1.c0))) IN ())  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((QUOTE(rt0.c4))IS NOT((((rt0.c1, rt0.c4, rt0.c1)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3)) AND ((vt1.c0, rt0.c4, rt0.c4))))) WHERE (IFNULL(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c0)), TYPEOF(DISTINCT rt0.c4))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) BETWEEN (INSTR(rt0.c2, rt0.c0)) AND (UPPER(rt0.c0))) ASC, ((((rt0.c0, rt0.c0, rt0.c0))<((rt0.c3, rt0.c2, vt1.c0))) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (((((t1.c0)AND(t1.c0)))AND(t1.c38)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t1.c0)AND(t1.c0)))AND(t1.c38))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (((((t1.c0)AND(t1.c0)))AND(t1.c38)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t1.c0)AND(t1.c0)))AND(t1.c38))))) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((+ (((((t1.c0)AND(t1.c0)))AND(t1.c38)))));
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON CASE (0.9894913717309681 IN (vt0.c0))  WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 END WHEN CAST(t0.c0 AS NUMERIC) THEN (((((((((((('*u')AND(rt0.c4)))OR(vt0.c0)))OR(x'')))AND(vt1.c0)))AND(rt0.c3)))AND(0.6679850694999043)) WHEN ((t0.c0)/(rt0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (+ (vt1.c0)) END LEFT OUTER JOIN vt1 ON ((((((rt0.c2)*(rt0.c4)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(UPPER(rt0.c4))) WHERE (((((((((0Xffffffffc02435a0)OR(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c4)==(vt0.c0)))))OR(LOWER(rt0.c2))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END))) ORDER BY ((((NULL) NOT NULL)) BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c1)) AND (((rt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0xffffffffc02435a0)OR(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c4)==(vt0.c0)))))OR(LOWER(rt0.c2))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON CASE (0.9894913717309681 IN (vt0.c0))  WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 END WHEN CAST(t0.c0 AS NUMERIC) THEN (((((((((((('*u')AND(rt0.c4)))OR(vt0.c0)))OR(x'')))AND(vt1.c0)))AND(rt0.c3)))AND(0.6679850694999043)) WHEN ((t0.c0)/(rt0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (+ (vt1.c0)) END LEFT OUTER JOIN vt1 ON ((((((rt0.c2)*(rt0.c4)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(UPPER(rt0.c4))) ORDER BY ((((NULL) NOT NULL)) BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c1)) AND (((rt0.c1) ISNULL))) ASC);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON CASE (0.9894913717309681 IN (vt0.c0))  WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 END WHEN CAST(t0.c0 AS NUMERIC) THEN (((((((((((('*u')AND(rt0.c4)))OR(vt0.c0)))OR(x'')))AND(vt1.c0)))AND(rt0.c3)))AND(0.6679850694999043)) WHEN ((t0.c0)/(rt0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (+ (vt1.c0)) END LEFT OUTER JOIN vt1 ON ((((((rt0.c2)*(rt0.c4)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(UPPER(rt0.c4))) WHERE (((((((((0Xffffffffc02435a0)OR(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c4)==(vt0.c0)))))OR(LOWER(rt0.c2))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END))) ORDER BY ((((NULL) NOT NULL)) BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c1)) AND (((rt0.c1) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((0xffffffffc02435a0)OR(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c4)==(vt0.c0)))))OR(LOWER(rt0.c2))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt0 ON CASE (0.9894913717309681 IN (vt0.c0))  WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 END WHEN CAST(t0.c0 AS NUMERIC) THEN (((((((((((('*u')AND(rt0.c4)))OR(vt0.c0)))OR(x'')))AND(vt1.c0)))AND(rt0.c3)))AND(0.6679850694999043)) WHEN ((t0.c0)/(rt0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (+ (vt1.c0)) END LEFT OUTER JOIN vt1 ON ((((((rt0.c2)*(rt0.c4)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(UPPER(rt0.c4))) ORDER BY ((((NULL) NOT NULL)) BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c1)) AND (((rt0.c1) ISNULL))) ASC);
SELECT * FROM rt0, t0 CROSS JOIN vt0 ON CASE (0.9894913717309681 IN (vt0.c0))  WHEN SQLITE_SOURCE_ID() THEN CASE rt0.c4  WHEN vt1.c0 THEN rt0.c4 END WHEN CAST(t0.c0 AS NUMERIC) THEN (((((((((((('*u')AND(rt0.c4)))OR(vt0.c0)))OR(x'')))AND(vt1.c0)))AND(rt0.c3)))AND(0.6679850694999043)) WHEN ((t0.c0)/(rt0.c0)) THEN rt0.c4 COLLATE RTRIM ELSE (+ (vt1.c0)) END LEFT OUTER JOIN vt1 ON ((((((rt0.c2)*(rt0.c4)))OR(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(UPPER(rt0.c4))) WHERE (((((((((0Xffffffffc02435a0)OR(((rt0.c0)IS NOT(rt0.c2)))))AND(((rt0.c4)==(vt0.c0)))))OR(LOWER(rt0.c2))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE rt0.c4 END))) ORDER BY ((((NULL) NOT NULL)) BETWEEN (TRIM(DISTINCT rt0.c1, rt0.c1)) AND (((rt0.c1) ISNULL))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))==(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))=(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))==(x'')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(vt0.c0)))=(x''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0)))==(x'')));
SELECT * FROM vt1, vt0, t0, rt0, t1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0, rt0, t1);
SELECT * FROM vt1, vt0, t0, rt0, t1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0, rt0, t1);
SELECT * FROM vt1, vt0, t0, rt0, t1 WHERE (CAST((~ (vt1.c0)) AS INTEGER));
