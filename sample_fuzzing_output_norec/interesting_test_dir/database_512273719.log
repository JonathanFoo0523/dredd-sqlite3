-- Time: 2024/06/09 17:08:22
-- Database: database19
-- Database version: 3.40.0
-- seed value: 512273719
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, +c3 TEXT ); -- 1ms;
PRAGMA cache_size; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5695312275276425; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1867347047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1149839597'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1867347047')>>(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS INTEGER) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=779734921 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) NOT BETWEEN ((x'')) AND ((x'861e'))) IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1149839597 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) BETWEEN ((+ (NULL))) AND (x'eab5' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 7.79734921E8; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1630954186 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT x'', ''))&((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT 0.15480237440171674); -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((('2USqP\W峃')%('t1\nJ'))) BETWEEN (NULL COLLATE BINARY) AND ((('~Yx3H_') NOT BETWEEN (-34234118) AND (0.19618345207552823)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=779734921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1072431665 sz=1804189160 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('4q鳮6') NOT BETWEEN ('-34234118') AND (x'4ee2')) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1905922362 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LOWER(DISTINCT 1.149839597E9)  WHEN ((x'') IS TRUE) THEN '+' COLLATE RTRIM WHEN x'e236' COLLATE BINARY THEN load_extension(0xffffffffa1e0d9bd) WHEN json_remove('-34234118', x'') THEN '-811743555' ELSE (+ ('-1921049964')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=779734921 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1072431665 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(0.189596457733486))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1640396392 sz=-998599296 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1149839597 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('hN'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1383375264 0 sz=-2057227648 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-238313349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1681893137 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1867347047 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 1681893137 sz=-1573131224 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5695312275276425) ISNULL))+(((NULL)/(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)&(x'')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-449829069 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8f4d'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-474239511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2043287740'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.4876799467803713)))<=('-1478584585' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (((-423858490) BETWEEN (NULL) AND (0.4395067989040182)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1935659240 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(0Xffffffff9ec99d36))) NOT BETWEEN ((((NULL, NULL, NULL))>((NULL, 0xffffffffb117ee11, x'8e8c')))) AND (CASE '-1168270779'  WHEN '-1921049964' THEN NULL ELSE 1103934832 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1573131224 sz=-1844069124 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER('-238313349')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-557585319 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('D門g') NOT BETWEEN (CAST('/)qL}y<' AS TEXT)) AND ((('-1468358858')-(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-2114675474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=980181079'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.21527621957016552 COLLATE BINARY)&(CASE '-811743555'  WHEN x'9961' THEN 'Wd' WHEN NULL THEN NULL WHEN '118684365' THEN '1419507704' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(0.9492480316596719, 0.18090332811415222)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LOWER(DISTINCT x'e546') THEN ((0.12202978306097667)LIKE('4[FxJ>_\rJ')) WHEN CAST(NULL AS NUMERIC) THEN (NOT (x'')) WHEN LOWER(DISTINCT x'de20') THEN ((0.6659143887733755)OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5342375895431107 COLLATE RTRIM)AND(CAST(-670487777 AS REAL))))OR((((0.15480237440171674, x'4021', 0.008126713795829632)) BETWEEN (('0.15480237440171674', x'', x'')) AND ((0.16240732611907283, 0X115d21ca, x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7580e0c1'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((-5.57585319E8)) NOT BETWEEN ((0.7771972018036121)) AND ((0.3823292112371709))))AND(x'' COLLATE BINARY)))AND(CASE '-557585319'  WHEN '9l껇J' THEN x'' END)))AND(((0Xffffffffe6bc6ec6)AND(NULL)))))OR(CASE WHEN NULL THEN -1.844069124E9 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) NOT BETWEEN (((0.11405872035800568)AND('q!'))) AND (((-1.478584585E9) BETWEEN (-1.383375264E9) AND ('FnE')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1566352225'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((0.189596457733486)GLOB(NULL)), json(NULL), CASE WHEN '<^[wB膭䏭''' THEN NULL WHEN x'2545' THEN x'd7298db4' WHEN 0.06423315509281913 THEN NULL ELSE 0.3623448158307877 END, (((NULL, -1, '1277319107')) BETWEEN ((x'125c', 0.18090332811415222, '')) AND ((x'', '0.21527621957016552', '-1468358858')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1198433388'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(x'8520')))AND(NULL))) NOT BETWEEN ((+ (x'3d5844ca'))) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=134655935 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 522429369 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-474239511'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-745379760'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '940052681 317494085 sz=-1080613848'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-1421515337 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=448781133 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TRIM(DISTINCT -93503196, x'')  WHEN ('' IN ()) THEN ((0.9079327300287302) NOT NULL) ELSE ((x'')<<(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('-441015821' COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1818213209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(0.05296629651679219) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-132275041 sz=569864555 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1640396392'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.11405872035800568)) BETWEEN ((x'cde9')) AND (('1261208339'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0x10101b37)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UNICODE(x'') THEN 0.19618345207552823 ELSE ((0.5532042083193782) BETWEEN ('덗''') AND ('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '891729903 sz=-822963547 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1553518474'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=269490999 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'075d')AND(0.3814669023123799)))OR('/)QL}Y<')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (x'90dc')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('-132275041')) BETWEEN ((x'')) AND ((''))))OR(CASE 0Xffffffff8eb03f00  WHEN x'' THEN '2*jb)A1' ELSE x'' END)))OR(CAST('+' AS TEXT))))AND(LIKELY(NULL))))OR((((('')OR(x'')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1117190868'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2114675474 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN ((((0.2588160891915192, NULL, ')&'))<((0.16696735808528274, 0.16584658551103815, -4.41015821E8)))) AND (((NULL) NOT BETWEEN (x'c1a2') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0x4c2257c3, '~e'))<(((x'')GLOB(x'226b')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1921049964') NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('2139074363')))IS NOT((((-335996209))>=((x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-1.573131224E9)) NOT BETWEEN (('1149839597')) AND (('1277319107'))) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('')&(-2028069420))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1277319107'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((NULL, '0.9079327300287302', 'G')) NOT BETWEEN (('196741368', 0.22927028101784164, NULL)) AND ((0.7171408683886443, 0xffffffff81f49cee, 'N8'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('569864555')OR(NULL)))OR(0.2736287532340912)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-473126340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (x'') AND (x'')) IN (CASE -1.168270779E9  WHEN '' THEN 0.45122541314925557 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<(CAST(x'' AS REAL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1389632056'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.4297330719459135, NULL, NULL)) BETWEEN ((CASE x''  WHEN NULL THEN 0xffffffff9afe0bac END, (((('-1318170491')OR(0.6290137466895863)))OR(NULL)), CASE '1291039963'  WHEN x'75bf' THEN x'' WHEN x'' THEN ' 2' WHEN -1.168270779E9 THEN 0.2736287532340912 WHEN NULL THEN -1 WHEN x'' THEN x'fb87' ELSE x'' END)) AND (('', CHANGES(), (+ (x''))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-2111972416')))>((('q甚(')<(0.5360682722916625)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1007137623 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((NOT (0.3997373390013301)))) AND ((((0.9492480316596719) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=618402797 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=677908805 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1525698987 1373651560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2 sz=-2111972416 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2057227648 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-883018685 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '623315549 sz=-883018685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-238313349 sz=161671812 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 sz=-1352872051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 960610099 COLLATE RTRIM COLLATE RTRIM COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1103934832 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('53433814')))AND('1999663922')))GLOB((('0.7771972018036121')<<(0.6466200996734307)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((((((NULL)OR('덗''')))OR('걏-N)9 v')))AND(0.9859147666499738)))AND(NULL)))OR('')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN -1.844069124E9 ELSE NULL END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('196741368' AS REAL) COLLATE BINARY; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1878324030 601211651 sz=1931332 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(0Xffffffffb540676b)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-819883194'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-701766274 569864555 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1433600777'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9442718778980714)<(x'')))OR((+ (NULL)))))OR(CAST('{T}A' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=1122293447'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1935659240')OR(x'8f2c')))OR(0.3728245854046508)))OR(NULL)))OR('161671812')))OR(0.05296629651679219 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1498374809 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2114675474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-473126340 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN x'' THEN x'' END THEN ABS(DISTINCT 'hN') WHEN (((x'de3a', 0xffffffffba22cb19, NULL))<=((1640396392, '0.2588160891915192', 0x242e395c))) THEN '-1917632632' COLLATE BINARY WHEN ((NULL) BETWEEN ('662236414') AND ('\2')) THEN 0Xffffffffeb7be7e0 COLLATE NOCASE END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1878221119 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 'yr'  WHEN '573647362' THEN x'025b' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1996577533'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1294205027 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1271831646 sz=-1254070421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1670008460'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(0.5823033942356903, x'')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -183261103; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-436461507 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-709476346 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1566352225 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1318170491' IN ()))OR(CASE 1753933998  WHEN '9' THEN 0.5342375895431107 WHEN NULL THEN 0.49981774944058965 WHEN 0.5841294252655097 THEN NULL WHEN 0Xc0a5cc3 THEN '~Yx3H_' WHEN 0.45122541314925557 THEN 0.8885840846849192 END)))OR((('J4m6') NOT BETWEEN (x'28e4') AND (791295842)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-874640086 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1198433388 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=194599041 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-579361188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -2061213332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1433600777 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.12202978306097667; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('734521904' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1979603707 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=960610099 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1672834256 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c367') NOT BETWEEN (613034661) AND (NULL)))>=((0.9619806749320438 IN (0x31325d4)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-423858490'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1274185454'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8339853815564006 COLLATE BINARY))<=((COALESCE(0.17865823192823815, NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1784293795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT x''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('76822695'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1781017287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1945406308 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '315999236'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1407997795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (0.9859147666499738 IN (x'', 0.9117786004760565))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.8811001590947676)) BETWEEN ((NULL)) AND ((NULL)))  WHEN UPPER(DISTINCT x'') THEN (('')IS NOT(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-720295752 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=1137760965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-441015821 sz=118684365 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1867347047 sz=527412207 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')&(((x'')&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '500764233 2 1482084640 sz=43701360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1972757568 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2023625035 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('440422460') AND (NULL)))>=('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL)GLOB(0.9262227601397495)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1818213209') BETWEEN (x'') AND (x'')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1313888359 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE BINARY)<(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((337893627) BETWEEN (x'') AND (x'')) THEN ((x'') IS TRUE) WHEN CASE x'69aaf6f4'  WHEN '-923148781' THEN 0xffffffff8b6f5fbb END THEN ((x'')>('piUnfe')) WHEN (- (-632069528)) THEN (NOT ('-1935659240')) WHEN (((-180120270))>=((x''))) THEN (('')<('')) WHEN 0.8107476751799358 THEN CAST('j5>9' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -4.2385849E8; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '-1378729179 2 sz=427082222'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1383375264'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1291039963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-2050016785 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=1477730356 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=832795868 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=448781133 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-942479602 sz=1640396392'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((9.80181079E8 COLLATE NOCASE)IS NOT(((x'f2e7')+('-1996262118')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1219624114 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('4q鳮6' COLLATE RTRIM)<=(((NULL)GLOB('腨now2')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-825200626'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1419507704 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1566352225 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-449829069'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1499441341 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1818213209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'', 'J/', 'Z?u'))==((0.8349704093789382, '185338632', 0.21527621957016552)))  WHEN ((2.02005699E8)>(NULL)) THEN ('Nb16d' IN ()) WHEN SQLITE_VERSION() THEN ((x'') BETWEEN (x'fb67') AND (0.4312958411381349)) WHEN (NOT (563847804)) THEN ((('', NULL, x'', NULL, NULL)) BETWEEN ((NULL, NULL, NULL, x'f0a4', NULL)) AND ((0.883210571891093, '', x'', x'c8dc', '쇜PwE,>d|'))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1254070421 2 sz=7365024 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-745379760 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1149839597 sz=346462127 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1R')) NOT BETWEEN (((- (NULL)))) AND ((TRIM(0.5631553966304614)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('DL4轓,BS긤') NOT BETWEEN (0.7843593419304301) AND (NULL)))<<(((0.755795821903377)AND('-1746529194')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'd42e7e11' THEN NULL WHEN 0.7218108916926307 THEN '-1878324030' WHEN '1164510262' THEN NULL END) BETWEEN (NULLIF(0.7187813508992259, 1871972723)) AND (((((NULL)AND('-857285568')))AND(0Xffffffffc2fe2f4e)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '465551173 0 sz=-482185677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(-6.82906545E8)))OR(0x49ef13c1)))OR('-817544960')))AND(x'bdba'))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1366491847 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1103934832 0 sz=-96083896 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-819883194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=916272247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1400734854 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-811696882 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(((NULL)IS NOT(0.15570605791746195)), '' COLLATE RTRIM); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.5664563478835561)&(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))&(((((NULL)AND(x'')))OR('-811743555')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1803944897 sz=-274871994 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('訃x,k\rrV' IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1487203651'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '293941795' COLLATE NOCASE  WHEN ((0.936117390413242)IS(0.34534828151508)) THEN (((NULL)) NOT BETWEEN ((x'')) AND ((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-332253511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0.9652916759337953) AND ('298905584'))) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 148704676 THEN 0.9765501491971925 WHEN 0.7152617469810297 THEN '82826305' WHEN NULL THEN NULL WHEN 't1\nJ' THEN x'' WHEN x'' THEN 0.20218960245402762 END)>((('0.16240732611907283') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-985756549'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1578420481 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 -132275041 sz=-1253801915 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.9765501491971925  WHEN 0.756063940165443 THEN 545058347 END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1464085111 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.08044019563321325) NOT BETWEEN (0.2806809113672265) AND (0x24dc13ed)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((((x'')) BETWEEN ((NULL)) AND ((''))), (('~e') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS REAL)) NOT BETWEEN (CAST(6.01211651E8 AS NUMERIC)) AND (rtreenode('-1135366309', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-442928524 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1297847452'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 2 sz=780602959 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=618402797 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1080613848 2043287740 sz=-817616643 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '779734921'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELY(0Xffffffffbc59d3af) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((SUBSTR(0.9948562262901212, -4.49829069E8)) NOT BETWEEN (((0x23d5c303) ISNULL)) AND ((('Rn,') NOT NULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN json_extract(0xffffffffbd1db9fe, 0.558288667533979) THEN ((0.16974334448887174)*(0.39135526701818835)) ELSE 0.4474219662476874 COLLATE NOCASE END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_remove(x'', 'ᬷD	lM9I7'))OR(CASE 'j5>9'  WHEN '' THEN NULL ELSE 0.9267455586069809 END)))OR(((0.5360682722916625)GLOB(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1996262118'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1237043274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-883018685'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=-819883194 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(x'040f8e6e', x'6e7f') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-1845805986'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.9348384455899227)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB(NULL)))!=((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-781378649'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)OR((0.9411965779434455 IN (NULL)))))OR((('-557585319')IS NOT('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-998599296 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=437930635 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1573131224')-(((0.9086359961894781) NOT BETWEEN (0.6074091620627627) AND (655566982)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1882607702 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1578541154 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 sz=-1080631931'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1797783740 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json(x'2e99'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.08626983416414424 THEN ((-1.318170491E9) ISNULL) WHEN (NULL IN ('-2028069420')) THEN ('-1433600777' IN ()) WHEN ((NULL)OR('-473126340')) THEN ((0xffffffffc00a5f69)IS(x'')) ELSE (((1298221813))=(('4[FxJ>_\rJ'))) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1436079834'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1478584585 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1308150533 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL)IS(NULL)), CAST(NULL AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1818213209 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 sz=-1552223590 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0X4b35539b)AND(NULL)))OR('&R\TU')))AND(0.45122541314925557)))AND('-1379213794')))OR(911401855)))OR(0.9411965779434455)))>((((0.525045736048686, '1291039963', 'S)n}X', 0.5012318629490446, '1692477300')) BETWEEN ((0.5360682722916625, NULL, '', '', 0.35778085667872095)) AND ((-1352872051, '~E', -2062607476, 0xffffffffe64940d8, x'd05e'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN 'j.''s' THEN '' WHEN -1917632632 THEN 0.6370875340392167 WHEN 569864555 THEN x'd9d0' ELSE 0.7849955435885455 END THEN ((((NULL)AND(x'')))OR(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1671137055 2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((x'eb90')>>('-2114675474')), (0.9264850676140128 IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'e936' AS INTEGER))-(((((((((((((NULL)AND(0xffffffffffffffff)))AND('-1131299492')))AND('-1090430475')))AND('-883018685')))OR('-1867347047')))OR('m\r')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1454021415 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1562355744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ('-1630954186', 'YU4%'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('860837556')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1917632632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 1681893137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '522429369'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4 2 2 sz=-1799081719 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6322475264558415; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((NULL) NOT NULL), CAST(x'' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'')))<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '993669473 sz=1340842307 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=207172048 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1844069124' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(NULL))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-423858490'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'') NOT BETWEEN ('') AND (NULL))  WHEN (((((((('0.6322475264558415')OR('-567227169')))AND('*W')))OR(NULL)))OR(x'')) THEN ((((x'5815')OR(2075270301)))AND(0.5030479327764485)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.4126231141338884 THEN 1093680237 END)AND((((('hN')OR('')))OR(NULL)))))AND(UNLIKELY(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1601917951 sz=1117190868 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1190555100'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1122293447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((NULL)>=(-1.630954186E9))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '677908805 sz=-423858490 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1177952645 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1523244035 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1911987252 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1419507704 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1630954186'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.421515337E9) BETWEEN ('') AND (0.777647675701243)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-364888484'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-653058990 sz=1931332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (317494085)))OR(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('I ' AS BLOB)) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)==(LIKELY('0.7152617469810297'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'b4ec' AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1846380537 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1537521053 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1935659240 sz=-1485744267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '2015773677 1342289398 sz=1261208339'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=855983793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-111530269 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=797644909 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((('Z볼?SV')AND(x'')))AND(NULL)))OR('-539074907')))OR(x'')))OR(x'78d4')))OR(0.6082635247107004)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)-('618402797')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 601211651 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((0.8445222559883148 IN ()), (+ (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT '', 0.8203353279402356); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1373629131'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1421515337 sz=1373651560 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1681270889'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)IS('ᔇUsQ)L>M')) THEN (- ('1817758671')) WHEN (((0.7716472266562883, 'Vj^uA.\nH輲', 0x703ea6d7, '14707954', '-1630954186'))>=((-1.921049964E9, 0xfffffffff7156834, NULL, x'', NULL))) THEN NULLIF(DISTINCT 0.6195551010365311, NULL) WHEN (x'' IN ()) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=938243865 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2778ecfe)AND(NULL))) BETWEEN (CAST('36158424' AS BLOB)) AND (824977981 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX('f&U1q+಻pA') IN ((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL))), 'T!' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=822130514 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1225551832 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-474239511 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('-93503196')AND(-1268310532)))OR(0.7996758714730563)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-769202218 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1999663922 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1419507704')!=(x'')))AND(CAST('_s' AS BLOB))))OR((((NULL, 0.6911409372964279, x''))<((0.4215199256222476, 0Xffffffffc09db129, '0.21527621957016552'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1883859998 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-886612303')>>(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1961272757 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1129273283 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 1283020826 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(DISTINCT 0x2f3a3d43, 0.11137703969642221))*(((x'')&('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((('0.16240732611907283'))=(('-1532153257'))), ((0.5108966954554351) NOT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1622469379 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (RTRIM(0.2820583637290549) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN NULL THEN x'' WHEN 0.397786228434321 THEN NULL WHEN '-449829069' THEN x'' ELSE x'' END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED((('/') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '1898254147 sz=2116415644 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ('-437080175', -9.98599296E8))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(CASE WHEN NULL THEN 677908805 WHEN x'16e7' THEN '0.8339853815564006' WHEN NULL THEN 'xQcf8\\nI' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-474239511'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.42185973766504625 AS TEXT)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=14244229 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (-883018685)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-365690448 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1415467135 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((0Xffffffffe3388925)OR('t4k8	Ut')))OR(0x7b647a69)) THEN ((NULL)-(x'')) ELSE ((0.12437051397563226) NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1317408194 0 sz=825396805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=151887242 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2usqp\w峃' COLLATE BINARY)OR((-2089655712 IN ()))))AND((('793637342')/(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-720150215')/(NULL)))-(((NULL) NOT BETWEEN ('2079309521') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-449829069 -1323831791 sz=-1478584585 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1468358858 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1645767950 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(NULL, NULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'H(fPl9* '  WHEN '-167348088' THEN '-1119461453' ELSE NULL END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)AND(CASE 0.1944936571386523  WHEN 0.7583677197078237 THEN '\nu%' WHEN 0.9264850676140128 THEN '' WHEN x'' THEN '0.34534828151508' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=566196596'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1681893137'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.8339853815564006')AND(x'')))OR(0.5283028989352154)))AND(NULL)))AND(0x3a40df96))) BETWEEN (((x'')<(NULL))) AND ((((x'25c92e1a', 1.389632056E9, -4.7312634E8))>((0.04706003134477044, 0X52d41a38, 'Cpm쬙.NOt\r'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((x'1f10')OR(NULL)))AND('-475788655')) THEN CAST(-1340051050 AS NUMERIC) WHEN ((-473126340)AND(NULL)) THEN x'f025' WHEN (('-1247713593')*(x'')) THEN ((0.4312958411381349)>(NULL)) ELSE -1327447659 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('891729903') BETWEEN ('-1921049964') AND (x'')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1721681708 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1666519142 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-2114675474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TRIM(0.2974492265089984) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'e494')) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '584407411 sz=-93503196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=550791731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1172124903 541608251 940052681 sz=-2114675474 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=807654078 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((- ('-1360518294')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-811743555 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '768561522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=161671812 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT)) BETWEEN (CAST('{gwff' AS INTEGER)) AND (x'0b2d')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1298611210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1291039963 -1266588511 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')) BETWEEN ((NULL)) AND ((NULL))))||(((('c|')) BETWEEN ((0.9948562262901212)) AND (('-557585319'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((((x'457b')OR(0.9406407292339933)))OR('0&L\n'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=118684365 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-899302068'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x21c81ed1) NOT NULL)))>(('1829204815'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 662236414 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')GLOB('h嫔BL*N]')))GLOB((('')!=('z!')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '77220528'  WHEN 0.5975154909879368 THEN 0.14828316648286177 END) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=90516031 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((0X16f94aad IN ('Vrᥙa)o#H', '-1917632632')), x'0fbc', (('1135905850')<<(NULL)), 0.9245195394106359); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT ((x'') BETWEEN (x'8b65') AND ('382787175'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS FALSE) THEN CAST('0.7996758714730563' AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT x'56db'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 -1719884008 0 sz=-1177594285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1475512777'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8203353279402356)) NOT BETWEEN ((NULL)) AND (('1149839597' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)+('607009116')) AS TEXT); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.11832220214201983)/(0X25270a5d)))AND(x'' COLLATE BINARY)))OR((((x''))<(('/'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-519980706 sz=-615459061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1055364570' THEN x'' END)<((((0.0455328375120736))>((0.5414161670528765))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)IS NOT(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-2083105409 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELIHOOD('677908805', 0.2527377513770235))AND((((((((('')OR(x'a2a0f489')))OR(NULL)))AND(x'')))AND(x'')))))OR(0.2949567646692328 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-682906545') IS TRUE))AND(0x5affa722)))AND(((((x'')AND(x'')))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.5038674213501169 IN ()) THEN ((('-1818800438'))<((''))) ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 sz=339878573 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-819883194 sz=-2114675474'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-564486873 sz=1599276753 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1501532785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.2820583637290549  WHEN x'' THEN 0.3375838748793545 ELSE 0.7305349132717633 END) BETWEEN (((0.9601934941190055)GLOB('-1438759989'))) AND (((x'04a6') BETWEEN (NULL) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.15883107588586154 THEN NULL WHEN NULL THEN x'' WHEN x'' THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1454667099 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN NULL THEN 'j5>9' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -736684443 sz=392332110 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 sz=652121143'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-621068893 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(0.03193933579894326, ((x'd9bf')=(x'094d'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '-1195360414 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(-4.2385849E8)))OR('￿흷␨G0eWN')) IN ((('') ISNULL), (((NULL)) NOT BETWEEN ((0.19618345207552823)) AND (('iB\rVaq'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 508693499 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1843292941) IS FALSE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'e296' AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '4 sz=-1525837770'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1136889325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('N(Xg4E{')||(0x15470e19)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=940052681'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=53068595 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-473126340 sz=291316170 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('1470408541')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1694626900) NOT BETWEEN (0.49665875717776786) AND ('f&U1q+಻pA')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1.291039963E9) NOT BETWEEN (x'') AND ('lꎁ蛻9g')), 'Q㹺', (~ (-1971278294))))==((x'60aaea62' COLLATE BINARY, (((('')AND('')))AND(x'')), (('-1257686153')<<(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-1917632632 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(x'')))%(('-132275041' IN (x'', '﷏KpRcAᲗp*')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.02266723203004417) IS TRUE))AND((0.9086359961894781 IN ()))))AND(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME((('0.08626983416414424')IS(x'')), x'e75f', ((NULL)<<(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ',IrHj0/n0'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))||(((0.2664889889108135)&('196741368')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=-717129010 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=659202092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (0.2195496973429958) AND ('-1905922362')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.4312958411381349')>=(0.6770107239388686)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=288970266 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'87ec')) NOT BETWEEN ((NULL)) AND (('0.7152617469810297')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(TRIM(DISTINCT 'X/', '薩O''_')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 sz=1504015549 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1080613848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.9303580867280138)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 sz=-1498374809 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=-1885794604'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')) NOT BETWEEN ((NULL)) AND (('0.11405872035800568'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-38958307 0 sz=196741368 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1336077925 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (NULL))  WHEN (((0.07745160392973505, '0.5631553966304614', '1117190868')) NOT BETWEEN ((x'', ')IvJ?7j', 0.25157488984285314)) AND (('>6b4BP&p', x'', 0.17515493598271825))) THEN ((NULL)GLOB('4[FxJ>_\rJ')) WHEN (('E?ZL') IS TRUE) THEN CAST(0.3417441422691948 AS NUMERIC) WHEN LIKELIHOOD(',IrHj0/n0', 0.7809638218658577) THEN NULL COLLATE NOCASE ELSE ((0.5128387326025848)!=('#bU䆎Pe#')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 0 sz=-1468358858 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (HEX(DISTINCT -166451996))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=508113565'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=501017508 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=269490999 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX('அhK]P_l'))/((((('-998599296')OR('')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '601211651 sz=2139074363 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 1863545713 sz=-347981683 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(-1613364025)))OR(CASE NULL  WHEN 0Xffffffffb9cc88a3 THEN x'' WHEN NULL THEN 0Xffffffffad8b5e60 WHEN '0.8339853815564006' THEN '垘a' ELSE '-596063881' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1740027971 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=569864555 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(IFNULL(0.06451484593420387, 0.6378430774213778) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=755981819 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 0x448928ed  WHEN x'' THEN 0.382407927168093 WHEN 0x61c67668 THEN x'' WHEN x'82fb' THEN 0.48533189785294617 ELSE x'48ba' END THEN CASE WHEN x'' THEN 0.08044019563321325 WHEN '' THEN NULL WHEN NULL THEN NULL END WHEN ((0.5322515557471823)>(x'd8d2')) THEN ((609222360)%(x'adec3cf8')) WHEN (((('-238313349')OR('	7揗')))AND('-1888951136')) THEN 0.8777351729125552 COLLATE BINARY ELSE ((NULL)&(NULL)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.9262227601397495'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1566125486 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-557585319' AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 1235291466 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('1275584789') NOT NULL))OR(json_extract('1640396392', '1373651560'))))AND(((0Xffffffffb88d3e9f)<>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=708072734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-35286996)) NOT BETWEEN (((((269490999)) NOT BETWEEN (('-423858490')) AND ((x'0d15'))))) AND ((CAST('\r#I0H' AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '1130758157 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-238313349') NOTNULL))<(0.3000432150649357 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=2020519264 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.50035555065814)<>('W?f5')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) BETWEEN (NULL) AND ('')) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0xffffffffe112165e COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)-(json_array_length(0.15824081539558943))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', '623315549'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'af70')<=(((NULL) NOT BETWEEN (x'67ec') AND (0.623887768276494)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))>((0.8339853815564006)))) NOT BETWEEN (x'') AND (CASE x''  WHEN '-701766274' THEN '-474239511' ELSE '1211722056' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1303387145 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=1117190868 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '222195564'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-21121373 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x662a5176; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1479771586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-449829069 -1194116312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.7799375663193394)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1065339663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.4312958411381349') NOTNULL)) NOT BETWEEN ((('/)qL}y<')<<(NULL))) AND (((1999663922)|(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1625733429' AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=560877015 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', '0 2 sz=-525824267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(NULL)))<(RTRIM('zD/iPB''x'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1867347047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.277319107E9)*(NULL)))<<((((('')AND(-0.0)))AND('bq')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS INTEGER) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1671214756'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1122293447'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-835858557 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '183726732 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-281491026 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-441015821 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) BETWEEN ('') AND ('0.11405872035800568')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0X49f7bb4)AND(0.3479710185295146)))OR('')))OR(('1999663922' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2043287740 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)*(0.38372470974191164)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=834968611 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1386887532 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5263364476173354 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '601211651 sz=707175495 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1389632056'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))=(('Tm7Ij3'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('.')OR(x'')))AND(0.21623970891820432))) BETWEEN (((x'')IS NOT('-437055054'))) AND (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1102829598 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1573131224 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt0', ' sz=742444270 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=844963452 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=1277319107 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOTNULL), ((x'') NOT BETWEEN ('372422618') AND ('')), ((NULL) NOT BETWEEN (x'5237') AND (x''))))==(((('T5_![') NOT BETWEEN (NULL) AND (0.2998439352377037)), (NULL IN ()), ((NULL) NOT BETWEEN (NULL) AND (''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('360656780' AS NUMERIC); -- 0ms;
INSERT OR FAIL INTO rt0 VALUES (NULL, 0.9948562262901212, 0.40131295660235655); -- 0ms;
INSERT OR FAIL INTO rt1(c0, c1, c3, c2) VALUES (NULL, x'', 0.6322475264558415, x'b45f'); -- 10ms;
UPDATE OR IGNORE rt1 SET (c1)=(0.5030479327764485) WHERE ((((rt1.c2) NOT NULL))GLOB('-441015821')); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', '(u'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x''; -- 1ms;
UPDATE OR IGNORE rt0 SET c2='TRUE' WHERE load_extension((- (rt0.c2))); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c0)=(x'') WHERE CAST(CAST(rt1.c1 AS BLOB) AS NUMERIC); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET (c0)=(0.23398100750937945); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c3) VALUES ('-1383375264', 0.8694988592284875, '1573881171'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
COMMIT TRANSACTION; -- 5ms;
VACUUM; -- 3ms;
UPDATE rt1 SET (c1)=('') WHERE (CAST(rt1.c2 AS REAL) IN ()); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c2=1553518474, c0=NULL; -- 8ms;
UPDATE OR IGNORE rt0 SET (c1)=('1343113501') WHERE CAST(TRIM(rt0.c2, rt0.c0) AS NUMERIC); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (NULL, x''); -- 0ms;
UPDATE rt1 SET (c1, c2, c0)=(0.6082635247107004, x'', '') WHERE ((((rt1.c1) ISNULL)) NOTNULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c3, c1)=(x'', -1.168270779E9, -2028069420); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(0x1b97b4a8); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c2, c2)=(NULL, x'') WHERE CASE NULL  WHEN ((rt0.c1) NOTNULL) THEN (('-453555047') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END THEN '-1478584585' WHEN 'ᚖG' THEN rt0.c1 ELSE TRIM(rt0.c0) END; -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (x'', 0.3219966901880049, '-474239511'); -- 18ms;
INSERT OR REPLACE INTO rt1(c3, c0, c2) VALUES ('570900658', 0.21527621957016552, 0.6737736317939437); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(0xffffffff842d5918); -- 2ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1) VALUES ('-495021789', 6.07009116E8, '[_	V\rq4'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-1931292046; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=x''; -- 5ms;
UPDATE rt0 SET c0=NULL WHERE (NOT (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill = 7703980650430271447; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.2982103502918453, 'zD/iPB''x', 0.667190897420631), ('', 424977454, NULL), (-670487777, 0X77c44d92, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (x'', 'P솾dC'), (NULL, '1574807561'), ('腔!zxrO^﫲K', NULL), (NULL, x''), (x'', 0.0); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (-519658226, NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(''); -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 TEXT  CHECK ( 478275449)); -- 0ms;
ALTER TABLE t0 ADD COLUMN c51 INTEGER; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=(0.7843593419304301, '') WHERE ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)OR((~ (rt0.c0)))))AND(((x'') IS FALSE))); -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'cb32'; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
DROP TABLE rt2; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.44800522413084876); -- 0ms;
PRAGMA cache_size = -7528925619650611982; -- 0ms;
COMMIT; -- 0ms;
CREATE INDEX i36 ON t0((((((-1844069124))<((x''))))||((((c0, c0, c0, c0, NULL))>((c51, c51, c51, c0, c51))))) DESC,((0.5244751772648855) NOT BETWEEN (c0 COLLATE BINARY) AND (((((c51)OR(c0)))AND(c0)))) COLLATE BINARY); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET (c0)=(''); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('-1844069124'); -- 0ms;
DELETE FROM rt1; -- 0ms;
UPDATE OR REPLACE rt0 SET (c0)=(x'd9dd'); -- 14ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-443934552 sz=-1357197279 unordered'); -- 12ms;
CREATE UNIQUE INDEX i58 ON t0(0.8004259137827452,((CASE NULL  WHEN c51 THEN c0 ELSE c51 END)>(((c51)==(c0))))); -- 0ms;
UPDATE t0 SET (c0, c51)=(x'', '1127175910') WHERE CASE WHEN t0.c51 THEN t0.c0 ELSE t0.c0 END COLLATE NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c51, c0)=(x'', NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(0.45122541314925557) WHERE ((UNICODE(rt1.c0))<=(rt1.c0 COLLATE BINARY)); -- 0ms;
UPDATE OR IGNORE rt1 SET c2='?(' WHERE CAST(((((rt1.c1)AND(rt1.c1)))AND(rt1.c0)) AS BLOB); -- 0ms;
PRAGMA soft_heap_limit = 1588628064807339388; -- 0ms;
VACUUM temp; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1149839597 noskipscan'); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c2='&R\TU' WHERE (((((rt1.c3 IN (rt1.c3)))AND((((rt1.c0, rt1.c1, rt1.c2)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0))))))AND(((rt1.c1)==(rt1.c0)))); -- 0ms;
UPDATE OR FAIL rt0 SET (c0)=(0.7152617469810297) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<=(NULLIF(rt0.c0, rt0.c1))); -- 3ms;
INSERT OR ABORT INTO t0(c51) VALUES (0X74702a6); -- 0ms;
UPDATE OR REPLACE rt1 SET (c2, c0, c1, c2)=(-822963547, NULL, x'', x'') WHERE CASE WHEN ((rt1.c3) IS TRUE) THEN ((rt1.c2) NOTNULL) WHEN ((((rt1.c3)OR(rt1.c3)))OR(rt1.c2)) THEN rt1.c0 WHEN CASE '-1468358858'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN ((rt1.c2) BETWEEN (x'') AND (rt1.c0)) END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (x'1914', NULL); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (NULL); -- 5ms;
COMMIT; -- 0ms;
CREATE UNIQUE INDEX i55 ON t0(CASE NULL  WHEN CAST(c0 AS TEXT) THEN ((c0)LIKE(c51)) END COLLATE RTRIM DESC,c0 COLLATE BINARY DESC) WHERE CASE ((c51) NOT BETWEEN (c51) AND (c51))  WHEN c0 THEN CAST(c51 AS NUMERIC) ELSE c51 END; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (NULL); -- 0ms;
UPDATE OR ABORT rt0 SET (c0)=(291316170); -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(x'ce59') WHERE (~ ((((NULL, 0.16584658551103815, t0.c0))>=((t0.c0, t0.c51, t0.c0))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' noskipscan'); -- 5ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((NOT (rt1.c0)) IN (LOWER(DISTINCT rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((NOT (rt1.c0)) IN (LOWER(DISTINCT rt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((NOT (rt1.c0)) IN (LOWER(DISTINCT rt1.c3))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((NOT (rt1.c0)) IN (LOWER(DISTINCT rt1.c3))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END))) ORDER BY ((NOT (rt1.c0)) IN (LOWER(DISTINCT rt1.c3))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c2)))%(DATE(rt1.c2, rt1.c1, rt1.c1)))) ORDER BY ((HEX(rt1.c3)) IS FALSE) ASC  NULLS LAST, ((rt1.c2)/(CAST(rt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c2)))%(DATE(rt1.c2, rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((HEX(rt1.c3)) IS FALSE) ASC  NULLS LAST, ((rt1.c2)/(CAST(rt1.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c2)))%(DATE(rt1.c2, rt1.c1, rt1.c1)))) ORDER BY ((HEX(rt1.c3)) IS FALSE) ASC  NULLS LAST, ((rt1.c2)/(CAST(rt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c2)))%(DATE(rt1.c2, rt1.c1, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((HEX(rt1.c3)) IS FALSE) ASC  NULLS LAST, ((rt1.c2)/(CAST(rt1.c0 AS REAL))) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c2)))%(DATE(rt1.c2, rt1.c1, rt1.c1)))) ORDER BY ((HEX(rt1.c3)) IS FALSE) ASC  NULLS LAST, ((rt1.c2)/(CAST(rt1.c0 AS REAL))) ASC  NULLS LAST;
SELECT * FROM t0 INNER JOIN rt0 ON NULL WHERE ((((t0.c51 IN ()))LIKE((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ()))LIKE((+ (rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON NULL);
SELECT * FROM t0 INNER JOIN rt0 ON NULL WHERE ((((t0.c51 IN ()))LIKE((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN ()))LIKE((+ (rt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON NULL);
SELECT * FROM t0 INNER JOIN rt0 ON NULL WHERE ((((t0.c51 IN ()))LIKE((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT * FROM rt0, rt1, t0 WHERE (t0.c0) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0)IS NOT(rt1.c1)))) AND ((((rt1.c3)|(rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0)IS NOT(rt1.c1)))) AND ((((rt1.c3)|(rt1.c2)))))  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (t0.c0) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0)IS NOT(rt1.c1)))) AND ((((rt1.c3)|(rt1.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0)IS NOT(rt1.c1)))) AND ((((rt1.c3)|(rt1.c2)))))  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 WHERE (t0.c0) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c0)IS NOT(rt1.c1)))) AND ((((rt1.c3)|(rt1.c2)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c51 COLLATE RTRIM WHEN ((t0.c51) ISNULL) THEN (t0.c0 IN ()) WHEN (~ (t0.c51)) THEN x'5c72' ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN t0.c51 COLLATE RTRIM WHEN ((t0.c51) ISNULL) THEN (t0.c0 IN ()) WHEN (~ (t0.c51)) THEN x'5c72' ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c51 COLLATE RTRIM WHEN ((t0.c51) ISNULL) THEN (t0.c0 IN ()) WHEN (~ (t0.c51)) THEN x'5c72' ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c0 IN ()) THEN t0.c51 COLLATE RTRIM WHEN ((t0.c51) ISNULL) THEN (t0.c0 IN ()) WHEN (~ (t0.c51)) THEN x'5c72' ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN (t0.c0 IN ()) THEN t0.c51 COLLATE RTRIM WHEN ((t0.c51) ISNULL) THEN (t0.c0 IN ()) WHEN (~ (t0.c51)) THEN x'5c72' ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51)) END);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((((t0.c0 IN ()))==((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))=((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((((t0.c0 IN ()))==((rt1.c3 IN (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))=((rt1.c3 IN (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, rt0 WHERE ((((t0.c0 IN ()))==((rt1.c3 IN (rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c51, rt1.c3, t0.c51)) BETWEEN (('J⼘mc93Ic', rt1.c3, rt1.c2)) AND ((rt1.c2, t0.c0, t0.c51)))) NOTNULL)) ORDER BY (((rt1.c1 IN ())) ISNULL), HEX(DISTINCT json(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51, rt1.c3, t0.c51)) BETWEEN (('J⼘mc93Ic', rt1.c3, rt1.c2)) AND ((rt1.c2, t0.c0, t0.c51)))) NOTNULL)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c1 IN ())) ISNULL), HEX(DISTINCT json(rt1.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c51, rt1.c3, t0.c51)) BETWEEN (('J⼘mc93Ic', rt1.c3, rt1.c2)) AND ((rt1.c2, t0.c0, t0.c51)))) NOTNULL)) ORDER BY (((rt1.c1 IN ())) ISNULL), HEX(DISTINCT json(rt1.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51, rt1.c3, t0.c51)) BETWEEN (('J⼘mc93Ic', rt1.c3, rt1.c2)) AND ((rt1.c2, t0.c0, t0.c51)))) NOTNULL)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c1 IN ())) ISNULL), HEX(DISTINCT json(rt1.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c51, rt1.c3, t0.c51)) BETWEEN (('J⼘mc93Ic', rt1.c3, rt1.c2)) AND ((rt1.c2, t0.c0, t0.c51)))) NOTNULL)) ORDER BY (((rt1.c1 IN ())) ISNULL), HEX(DISTINCT json(rt1.c1)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2)%(rt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2)%(rt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2)%(rt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt1.c2)%(rt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt1.c2) ORDER BY ((rt1.c2)%(rt1.c2)) COLLATE RTRIM ASC;
SELECT ALL * FROM t0, rt0 WHERE (CAST(((('522429369', 'T!', t0.c51))<((t0.c0, t0.c51, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('522429369', 'T!', t0.c51))<((t0.c0, t0.c51, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((('522429369', 'T!', t0.c51))<((t0.c0, t0.c51, rt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('522429369', 'T!', t0.c51))<((t0.c0, t0.c51, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(((('522429369', 'T!', t0.c51))<((t0.c0, t0.c51, rt0.c0))) AS BLOB));
SELECT ALL * FROM rt0, t0, rt1 WHERE (((NULLIF(rt0.c2, rt0.c0))+(((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) ORDER BY 0.16240732611907283 ASC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c0))+(((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 0.16240732611907283 ASC);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((NULLIF(rt0.c2, rt0.c0))+(((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) ORDER BY 0.16240732611907283 ASC;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c2, rt0.c0))+(((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY 0.16240732611907283 ASC);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((NULLIF(rt0.c2, rt0.c0))+(((t0.c0) BETWEEN (t0.c0) AND (rt1.c1))))) ORDER BY 0.16240732611907283 ASC;
SELECT COUNT(*) FROM t0 WHERE (IFNULL(((((t0.c0)AND(0.71817542088029)))OR(t0.c0)), '')) ORDER BY (CAST(t0.c51 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((t0.c0)AND(0.71817542088029)))OR(t0.c0)), '')) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c51 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0 WHERE (IFNULL(((((t0.c0)AND(0.71817542088029)))OR(t0.c0)), '')) ORDER BY (CAST(t0.c51 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((t0.c0)AND(0.71817542088029)))OR(t0.c0)), '')) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c51 AS BLOB) IN ()));
SELECT COUNT(*) FROM t0 WHERE (IFNULL(((((t0.c0)AND(0.71817542088029)))OR(t0.c0)), '')) ORDER BY (CAST(t0.c51 AS BLOB) IN ());
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((t0.c51)<(rt1.c0)) IN (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c51)<(rt1.c0)) IN (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((t0.c51)<(rt1.c0)) IN (((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c51)<(rt1.c0)) IN (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((((t0.c51)<(rt1.c0)) IN (((rt1.c1) NOT NULL))));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((943848260) NOTNULL)) ORDER BY rt1.c1  NULLS FIRST, '-1671785835' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((943848260) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c1  NULLS FIRST, '-1671785835' DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((943848260) NOTNULL)) ORDER BY rt1.c1  NULLS FIRST, '-1671785835' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((943848260) NOTNULL)) IS TRUE)  as count FROM rt1, rt0 ORDER BY rt1.c1  NULLS FIRST, '-1671785835' DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((943848260) NOTNULL)) ORDER BY rt1.c1  NULLS FIRST, '-1671785835' DESC;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY CAST('0.7843593419304301' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST('0.7843593419304301' AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY CAST('0.7843593419304301' AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY CAST('0.7843593419304301' AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c1)))OR(rt1.c3)))AND(rt0.c2))) AND ((+ (rt0.c0))))) ORDER BY CAST('0.7843593419304301' AS REAL)  NULLS LAST;
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2)|(-82840670)))/(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END))) ORDER BY x'65f9';
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)|(-82840670)))/(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY x'65f9');
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2)|(-82840670)))/(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END))) ORDER BY x'65f9';
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)|(-82840670)))/(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY x'65f9');
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN t0 WHERE (((((rt1.c2)|(-82840670)))/(CASE rt1.c0  WHEN t0.c0 THEN rt1.c3 END))) ORDER BY x'65f9';
SELECT * FROM t0 CROSS JOIN rt1 ON CASE t0.c51 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN ((((((((rt1.c2)OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(x'')) END INNER JOIN rt0 ON (((t0.c51 IN ())) BETWEEN (DATE(NULL, rt1.c1, rt0.c1)) AND (((rt0.c2)>(t0.c51)))) WHERE (((((rt1.c0)/(rt1.c2))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (t0.c51))) ORDER BY ((CAST(t0.c0 AS TEXT))-(rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(rt1.c2))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (t0.c51))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CASE t0.c51 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN ((((((((rt1.c2)OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(x'')) END INNER JOIN rt0 ON (((t0.c51 IN ())) BETWEEN (DATE(NULL, rt1.c1, rt0.c1)) AND (((rt0.c2)>(t0.c51)))) ORDER BY ((CAST(t0.c0 AS TEXT))-(rt1.c2))  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt1 ON CASE t0.c51 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN ((((((((rt1.c2)OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(x'')) END INNER JOIN rt0 ON (((t0.c51 IN ())) BETWEEN (DATE(NULL, rt1.c1, rt0.c1)) AND (((rt0.c2)>(t0.c51)))) WHERE (((((rt1.c0)/(rt1.c2))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (t0.c51))) ORDER BY ((CAST(t0.c0 AS TEXT))-(rt1.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)/(rt1.c2))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (t0.c51))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON CASE t0.c51 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN ((((((((rt1.c2)OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(x'')) END INNER JOIN rt0 ON (((t0.c51 IN ())) BETWEEN (DATE(NULL, rt1.c1, rt0.c1)) AND (((rt0.c2)>(t0.c51)))) ORDER BY ((CAST(t0.c0 AS TEXT))-(rt1.c2))  NULLS LAST);
SELECT * FROM t0 CROSS JOIN rt1 ON CASE t0.c51 COLLATE RTRIM  WHEN rt0.c2 COLLATE RTRIM THEN ((((((((rt1.c2)OR(NULL)))AND(rt0.c1)))OR(rt0.c2)))AND(x'')) END INNER JOIN rt0 ON (((t0.c51 IN ())) BETWEEN (DATE(NULL, rt1.c1, rt0.c1)) AND (((rt0.c2)>(t0.c51)))) WHERE (((((rt1.c0)/(rt1.c2))) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (t0.c51))) ORDER BY ((CAST(t0.c0 AS TEXT))-(rt1.c2))  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((t0.c51 IN (rt0.c0))) BETWEEN (0.06415793363130817) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN (rt0.c0))) BETWEEN (0.06415793363130817) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c51 IN (rt0.c0))) BETWEEN (0.06415793363130817) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN (rt0.c0))) BETWEEN (0.06415793363130817) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c51 IN (rt0.c0))) BETWEEN (0.06415793363130817) AND (((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS BLOB) IN ((NOT (rt0.c1)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ((NOT (rt0.c1)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS BLOB) IN ((NOT (rt0.c1)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN ((NOT (rt0.c1)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((CAST(rt0.c2 AS BLOB) IN ((NOT (rt0.c1)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((t0.c51, rt1.c0, rt1.c0)) BETWEEN ((HEX(rt0.c2), ((rt1.c1)=(rt1.c1)), (t0.c51 IN ()))) AND ((LOWER(DISTINCT rt1.c3), x'', NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c51, rt1.c0, rt1.c0)) BETWEEN ((HEX(rt0.c2), ((rt1.c1)==(rt1.c1)), (t0.c51 IN ()))) AND ((LOWER(DISTINCT rt1.c3), x'', NULL)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((t0.c51, rt1.c0, rt1.c0)) BETWEEN ((HEX(rt0.c2), ((rt1.c1)=(rt1.c1)), (t0.c51 IN ()))) AND ((LOWER(DISTINCT rt1.c3), x'', NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c51, rt1.c0, rt1.c0)) BETWEEN ((HEX(rt0.c2), ((rt1.c1)==(rt1.c1)), (t0.c51 IN ()))) AND ((LOWER(DISTINCT rt1.c3), x'', NULL)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((((t0.c51, rt1.c0, rt1.c0)) BETWEEN ((HEX(rt0.c2), ((rt1.c1)=(rt1.c1)), (t0.c51 IN ()))) AND ((LOWER(DISTINCT rt1.c3), x'', NULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(NULL)))>=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(NULL)))>=(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(NULL)))>=(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(NULL)))>=(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)<=(NULL)))>=(rt0.c1)));
SELECT * FROM rt0, rt1 WHERE (0.8500625072201246);
SELECT SUM(count) FROM (SELECT ALL ((0.8500625072201246) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (0.8500625072201246);
SELECT SUM(count) FROM (SELECT ALL ((0.8500625072201246) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (0.8500625072201246);
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c0 COLLATE RTRIM))) ORDER BY '735225578' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 ORDER BY '735225578' ASC);
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c0 COLLATE RTRIM))) ORDER BY '735225578' ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, t0 ORDER BY '735225578' ASC);
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c0 COLLATE RTRIM))) ORDER BY '735225578' ASC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c0)<=(rt0.c2)) THEN (~ (rt0.c2)) END) ORDER BY json_object(((rt0.c1) BETWEEN (rt0.c1) AND (0.0194516832584124)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT NULL) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c0)<=(rt0.c2)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY json_object(((rt0.c1) BETWEEN (rt0.c1) AND (0.0194516832584124)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((NULL) NOT NULL) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c0)<=(rt0.c2)) THEN (~ (rt0.c2)) END) ORDER BY json_object(((rt0.c1) BETWEEN (rt0.c1) AND (0.0194516832584124)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL) NOT NULL) THEN (NOT (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (rt0.c0 IN (rt0.c2)) WHEN ((rt0.c0)<=(rt0.c2)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY json_object(((rt0.c1) BETWEEN (rt0.c1) AND (0.0194516832584124)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END) DESC);
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c3)|(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c3)|(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c3)|(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c3)|(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c3)|(rt1.c1)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST('C%' AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST('C%' AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST('C%' AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST('C%' AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CAST('C%' AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON NULLIF((((rt1.c2, rt1.c0, rt0.c1))<>((rt0.c1, rt1.c2, rt0.c0))), ('782394561' IN ())) WHERE (((((CAST(rt1.c3 AS INTEGER))OR(rtreenode(rt1.c3, rt0.c0))))OR((((rt1.c3))>((rt0.c0)))))) ORDER BY (((((rt0.c0)AND(rt1.c1))))>=(((((rt1.c3, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c51, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c0, t0.c51)))))) DESC, (('ka~\n')GLOB('618402797')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS INTEGER))OR(rtreenode(rt1.c3, rt0.c0))))OR((((rt1.c3))>((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON NULLIF((((rt1.c2, rt1.c0, rt0.c1))<>((rt0.c1, rt1.c2, rt0.c0))), ('782394561' IN ())) ORDER BY (((((rt0.c0)AND(rt1.c1))))>=(((((rt1.c3, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c51, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c0, t0.c51)))))) DESC, (('ka~\n')GLOB('618402797')) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON NULLIF((((rt1.c2, rt1.c0, rt0.c1))<>((rt0.c1, rt1.c2, rt0.c0))), ('782394561' IN ())) WHERE (((((CAST(rt1.c3 AS INTEGER))OR(rtreenode(rt1.c3, rt0.c0))))OR((((rt1.c3))>((rt0.c0)))))) ORDER BY (((((rt0.c0)AND(rt1.c1))))>=(((((rt1.c3, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c51, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c0, t0.c51)))))) DESC, (('ka~\n')GLOB('618402797')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c3 AS INTEGER))OR(rtreenode(rt1.c3, rt0.c0))))OR((((rt1.c3))>((rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON NULLIF((((rt1.c2, rt1.c0, rt0.c1))<>((rt0.c1, rt1.c2, rt0.c0))), ('782394561' IN ())) ORDER BY (((((rt0.c0)AND(rt1.c1))))>=(((((rt1.c3, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c51, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c0, t0.c51)))))) DESC, (('ka~\n')GLOB('618402797')) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t0 ON NULLIF((((rt1.c2, rt1.c0, rt0.c1))<>((rt0.c1, rt1.c2, rt0.c0))), ('782394561' IN ())) WHERE (((((CAST(rt1.c3 AS INTEGER))OR(rtreenode(rt1.c3, rt0.c0))))OR((((rt1.c3))>((rt0.c0)))))) ORDER BY (((((rt0.c0)AND(rt1.c1))))>=(((((rt1.c3, t0.c0, rt0.c2)) NOT BETWEEN ((t0.c51, rt1.c2, rt0.c1)) AND ((rt1.c3, rt1.c0, t0.c51)))))) DESC, (('ka~\n')GLOB('618402797')) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51)OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51)OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51)OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51)OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c51)OR(t0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c2)>>(t0.c51)) COLLATE RTRIM) ORDER BY ((NOT (rt0.c2)) IN ((NOT (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((NOT (rt0.c2)) IN ((NOT (rt1.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c2)>>(t0.c51)) COLLATE RTRIM) ORDER BY ((NOT (rt0.c2)) IN ((NOT (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2)>>(t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((NOT (rt0.c2)) IN ((NOT (rt1.c3))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (((rt1.c2)>>(t0.c51)) COLLATE RTRIM) ORDER BY ((NOT (rt0.c2)) IN ((NOT (rt1.c3))))  NULLS LAST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.0060052326839886705) AS INTEGER) WHERE (IFNULL((rt0.c1 IN ()), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c1 IN ()), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.0060052326839886705) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.0060052326839886705) AS INTEGER) WHERE (IFNULL((rt0.c1 IN ()), (rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt0.c1 IN ()), (rt1.c1 IN ()))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.0060052326839886705) AS INTEGER));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CAST(LIKELIHOOD(DISTINCT rt1.c3, 0.0060052326839886705) AS INTEGER) WHERE (IFNULL((rt0.c1 IN ()), (rt1.c1 IN ())));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((rt0.c0, 0Xffffffffbf972428, rt0.c0, rt1.c0, rt1.c1))=((0xffffffffba22cb19, rt1.c1, rt0.c2, rt0.c0, t0.c51)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, 0xffffffffbf972428, rt0.c0, rt1.c0, rt1.c1))==((0xffffffffba22cb19, rt1.c1, rt0.c2, rt0.c0, t0.c51)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((rt0.c0, 0Xffffffffbf972428, rt0.c0, rt1.c0, rt1.c1))=((0xffffffffba22cb19, rt1.c1, rt0.c2, rt0.c0, t0.c51)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, 0xffffffffbf972428, rt0.c0, rt1.c0, rt1.c1))==((0xffffffffba22cb19, rt1.c1, rt0.c2, rt0.c0, t0.c51)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((rt0.c0, 0Xffffffffbf972428, rt0.c0, rt1.c0, rt1.c1))=((0xffffffffba22cb19, rt1.c1, rt0.c2, rt0.c0, t0.c51)))) NOT BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) AND (rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)LIKE(rt1.c3)))OR(rt1.c2 COLLATE BINARY)))OR(((t0.c51) IS TRUE))) DESC, PRINTF(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((rt1.c2)LIKE(rt1.c3)))OR(rt1.c2 COLLATE BINARY)))OR(((t0.c51) IS TRUE))) DESC, PRINTF(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)LIKE(rt1.c3)))OR(rt1.c2 COLLATE BINARY)))OR(((t0.c51) IS TRUE))) DESC, PRINTF(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((rt1.c2)LIKE(rt1.c3)))OR(rt1.c2 COLLATE BINARY)))OR(((t0.c51) IS TRUE))) DESC, PRINTF(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)LIKE(rt1.c3)))OR(rt1.c2 COLLATE BINARY)))OR(((t0.c51) IS TRUE))) DESC, PRINTF(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY NULL;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN t0 ON ((((rt1.c1) ISNULL))%(rt1.c3 COLLATE BINARY)) WHERE ((((((((((rt1.c0 IN ()))AND((+ (x'')))))OR(((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))))AND(((rt0.c2) ISNULL))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (((NOT (rt0.c1)))&(CAST(x'' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0 IN ()))AND((+ (x'')))))OR(((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))))AND(((rt0.c2) ISNULL))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN t0 ON ((((rt1.c1) ISNULL))%(rt1.c3 COLLATE BINARY)) ORDER BY (((NOT (rt0.c1)))&(CAST(x'' AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN t0 ON ((((rt1.c1) ISNULL))%(rt1.c3 COLLATE BINARY)) WHERE ((((((((((rt1.c0 IN ()))AND((+ (x'')))))OR(((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))))AND(((rt0.c2) ISNULL))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY (((NOT (rt0.c1)))&(CAST(x'' AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c0 IN ()))AND((+ (x'')))))OR(((((rt1.c0)OR(rt1.c3)))OR(rt0.c0)))))AND(((rt0.c2) ISNULL))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON t0.c0 RIGHT OUTER JOIN t0 ON ((((rt1.c1) ISNULL))%(rt1.c3 COLLATE BINARY)) ORDER BY (((NOT (rt0.c1)))&(CAST(x'' AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE ((('iHFcO\r|E')=((0xffffffffac0ae2c4 IN ())))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 'c|' WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('iHFcO\r|E')=((0xffffffffac0ae2c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 'c|' WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((('iHFcO\r|E')=((0xffffffffac0ae2c4 IN ())))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 'c|' WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('iHFcO\r|E')=((0xffffffffac0ae2c4 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 'c|' WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((('iHFcO\r|E')=((0xffffffffac0ae2c4 IN ())))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) DESC  NULLS FIRST, ((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN 'c|' WHEN rt0.c0 THEN rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(rt0.c2 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE WHEN 0.35363236950345756 THEN rt1.c3 ELSE rt0.c0 END THEN (('2aX') NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) ORDER BY -1318170491 COLLATE NOCASE  NULLS FIRST, CASE WHEN UNLIKELY(rt0.c1) THEN (((rt1.c3)) NOT BETWEEN ((t0.c51)) AND ((rt1.c3))) ELSE CASE WHEN t0.c51 THEN rt1.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.35363236950345756 THEN rt1.c3 ELSE rt0.c0 END THEN (('2aX') NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY -1318170491 COLLATE NOCASE  NULLS FIRST, CASE WHEN UNLIKELY(rt0.c1) THEN (((rt1.c3)) NOT BETWEEN ((t0.c51)) AND ((rt1.c3))) ELSE CASE WHEN t0.c51 THEN rt1.c2 END END  NULLS FIRST);
SELECT * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CASE WHEN CASE WHEN 0.35363236950345756 THEN rt1.c3 ELSE rt0.c0 END THEN (('2aX') NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) ORDER BY -1318170491 COLLATE NOCASE  NULLS FIRST, CASE WHEN UNLIKELY(rt0.c1) THEN (((rt1.c3)) NOT BETWEEN ((t0.c51)) AND ((rt1.c3))) ELSE CASE WHEN t0.c51 THEN rt1.c2 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN 0.35363236950345756 THEN rt1.c3 ELSE rt0.c0 END THEN (('2aX') NOT BETWEEN (rt1.c2) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY -1318170491 COLLATE NOCASE  NULLS FIRST, CASE WHEN UNLIKELY(rt0.c1) THEN (((rt1.c3)) NOT BETWEEN ((t0.c51)) AND ((rt1.c3))) ELSE CASE WHEN t0.c51 THEN rt1.c2 END END  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (~ (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE ('1023920711') ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1023920711') IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (~ (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (~ (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE ('1023920711') ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1023920711') IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (~ (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON (~ (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1)))) WHERE ('1023920711') ORDER BY rt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((LIKELY(DISTINCT rt1.c0))=(((rt1.c2)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt1.c0))==(((rt1.c2)>(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((LIKELY(DISTINCT rt1.c0))=(((rt1.c2)>(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt1.c0))==(((rt1.c2)>(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((LIKELY(DISTINCT rt1.c0))=(((rt1.c2)>(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c1)*(-1.566352225E9)) AS INTEGER)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(-1.566352225E9)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c1)*(-1.566352225E9)) AS INTEGER)) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(-1.566352225E9)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((rt0.c1)*(-1.566352225E9)) AS INTEGER)) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM rt1 CROSS JOIN t0 ON ((CASE WHEN t0.c51 THEN rt1.c3 ELSE rt1.c0 END)&(((0.5572587592579914) NOTNULL))) WHERE (CAST((~ (t0.c51)) AS TEXT)) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN ((((((((NULL)OR(rt1.c2)))OR(t0.c51)))AND(t0.c51)))AND(NULL)) THEN (((rt1.c2))<((t0.c51))) END  NULLS LAST, ((rtreenode(rt1.c2, t0.c51))>>(t0.c51)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c51)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN t0.c51 THEN rt1.c3 ELSE rt1.c0 END)&(((0.5572587592579914) NOTNULL))) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN ((((((((NULL)OR(rt1.c2)))OR(t0.c51)))AND(t0.c51)))AND(NULL)) THEN (((rt1.c2))<((t0.c51))) END  NULLS LAST, ((rtreenode(rt1.c2, t0.c51))>>(t0.c51)) ASC);
SELECT * FROM rt1 CROSS JOIN t0 ON ((CASE WHEN t0.c51 THEN rt1.c3 ELSE rt1.c0 END)&(((0.5572587592579914) NOTNULL))) WHERE (CAST((~ (t0.c51)) AS TEXT)) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN ((((((((NULL)OR(rt1.c2)))OR(t0.c51)))AND(t0.c51)))AND(NULL)) THEN (((rt1.c2))<((t0.c51))) END  NULLS LAST, ((rtreenode(rt1.c2, t0.c51))>>(t0.c51)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c51)) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((CASE WHEN t0.c51 THEN rt1.c3 ELSE rt1.c0 END)&(((0.5572587592579914) NOTNULL))) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN ((((((((NULL)OR(rt1.c2)))OR(t0.c51)))AND(t0.c51)))AND(NULL)) THEN (((rt1.c2))<((t0.c51))) END  NULLS LAST, ((rtreenode(rt1.c2, t0.c51))>>(t0.c51)) ASC);
SELECT * FROM rt1 CROSS JOIN t0 ON ((CASE WHEN t0.c51 THEN rt1.c3 ELSE rt1.c0 END)&(((0.5572587592579914) NOTNULL))) WHERE (CAST((~ (t0.c51)) AS TEXT)) ORDER BY CASE ((t0.c0) NOTNULL)  WHEN ((((((((NULL)OR(rt1.c2)))OR(t0.c51)))AND(t0.c51)))AND(NULL)) THEN (((rt1.c2))<((t0.c51))) END  NULLS LAST, ((rtreenode(rt1.c2, t0.c51))>>(t0.c51)) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-2028069420') ORDER BY ((((rt1.c1)IS(rt1.c0)))%((rt1.c0 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-2028069420') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS(rt1.c0)))%((rt1.c0 IN (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-2028069420') ORDER BY ((((rt1.c1)IS(rt1.c0)))%((rt1.c0 IN (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-2028069420') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS(rt1.c0)))%((rt1.c0 IN (rt1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-2028069420') ORDER BY ((((rt1.c1)IS(rt1.c0)))%((rt1.c0 IN (rt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 IN ()))*(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0))<((t0.c51))))AND((t0.c0 IN (t0.c51))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))*(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c0))<((t0.c51))))AND((t0.c0 IN (t0.c51)))));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 IN ()))*(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0))<((t0.c51))))AND((t0.c0 IN (t0.c51))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ()))*(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c0))<((t0.c51))))AND((t0.c0 IN (t0.c51)))));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 IN ()))*(CAST(rt0.c2 AS BLOB)))) ORDER BY (((((rt0.c0))<((t0.c51))))AND((t0.c0 IN (t0.c51))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((('9711051')) NOT BETWEEN ((x'71ce')) AND ((rt1.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('9711051')) NOT BETWEEN ((x'71ce')) AND ((rt1.c1))) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((('9711051')) NOT BETWEEN ((x'71ce')) AND ((rt1.c1))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('9711051')) NOT BETWEEN ((x'71ce')) AND ((rt1.c1))) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CAST(((('9711051')) NOT BETWEEN ((x'71ce')) AND ((rt1.c1))) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, 0X367b5375;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, 0x367b5375);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, 0X367b5375;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))  NULLS LAST, 0x367b5375);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1)AND('4(	Y''-q?')))OR(rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND('4(	Y''-q?')))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1)AND('4(	Y''-q?')))OR(rt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND('4(	Y''-q?')))OR(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((((rt1.c1)AND('4(	Y''-q?')))OR(rt1.c0))) IS FALSE));
SELECT * FROM rt1 CROSS JOIN t0 ON ((t0.c0)IS NOT(rt1.c0)) COLLATE RTRIM WHERE (((((t0.c51)IS(rt1.c1)))==(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c0 THEN '624464319' END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)IS(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c51)IS(rt1.c1)))==(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c0 THEN '624464319' END))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((t0.c0)IS NOT(rt1.c0)) COLLATE RTRIM ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)IS(((t0.c0) ISNULL))));
SELECT * FROM rt1 CROSS JOIN t0 ON ((t0.c0)IS NOT(rt1.c0)) COLLATE RTRIM WHERE (((((t0.c51)IS(rt1.c1)))==(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c0 THEN '624464319' END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)IS(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c51)IS(rt1.c1)))==(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c0 THEN '624464319' END))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((t0.c0)IS NOT(rt1.c0)) COLLATE RTRIM ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)IS(((t0.c0) ISNULL))));
SELECT * FROM rt1 CROSS JOIN t0 ON ((t0.c0)IS NOT(rt1.c0)) COLLATE RTRIM WHERE (((((t0.c51)IS(rt1.c1)))==(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c0 THEN '624464319' END))) ORDER BY ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 END)IS(((t0.c0) ISNULL)));
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt1.c3)=(rt1.c3)) AS TEXT) CROSS JOIN rt1 ON GLOB(CASE rt1.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END, CAST(t0.c0 AS TEXT)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt1.c3)=(rt1.c3)) AS TEXT) CROSS JOIN rt1 ON GLOB(CASE rt1.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END, CAST(t0.c0 AS TEXT)));
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt1.c3)=(rt1.c3)) AS TEXT) CROSS JOIN rt1 ON GLOB(CASE rt1.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END, CAST(t0.c0 AS TEXT)) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(((rt1.c3)=(rt1.c3)) AS TEXT) CROSS JOIN rt1 ON GLOB(CASE rt1.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END, CAST(t0.c0 AS TEXT)));
SELECT * FROM t0 INNER JOIN rt0 ON CAST(((rt1.c3)=(rt1.c3)) AS TEXT) CROSS JOIN rt1 ON GLOB(CASE rt1.c2  WHEN NULL THEN rt1.c3 ELSE rt1.c2 END, CAST(t0.c0 AS TEXT)) WHERE (rt0.c1);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c0);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON rt0.c0);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON rt0.c0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c51) AND (t0.c0))) AND (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c51) AND (t0.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c51) AND (t0.c0))) AND (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c51) AND (t0.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c51) AND (t0.c0))) AND (((rt0.c0) NOTNULL))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((INSTR(rt0.c0, rt0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51))) AND (CASE WHEN rt0.c0 THEN t0.c0 END)) WHERE ((((0X380810c9, -97244805, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (t0.c51 IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x'537b', ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), x'')))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0x380810c9, -97244805, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (t0.c51 IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x'537b', ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), x'')))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((INSTR(rt0.c0, rt0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51))) AND (CASE WHEN rt0.c0 THEN t0.c0 END)) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (t0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((INSTR(rt0.c0, rt0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51))) AND (CASE WHEN rt0.c0 THEN t0.c0 END)) WHERE ((((0X380810c9, -97244805, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (t0.c51 IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x'537b', ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), x'')))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0x380810c9, -97244805, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (t0.c51 IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x'537b', ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), x'')))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((INSTR(rt0.c0, rt0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51))) AND (CASE WHEN rt0.c0 THEN t0.c0 END)) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (t0.c0)))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON ((INSTR(rt0.c0, rt0.c0)) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c51))) AND (CASE WHEN rt0.c0 THEN t0.c0 END)) WHERE ((((0X380810c9, -97244805, rt0.c0)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (t0.c51 IN ()), ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((x'537b', ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), x'')))) ORDER BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c2) AND ((rt0.c0 IN (t0.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (json_object((- (rt0.c0)), ((rt1.c1)>(rt0.c0)))) ORDER BY (((((rt0.c0)*(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)), (((rt1.c3))=((rt1.c0))), NULL, '-643180912'))<=((CAST(rt1.c0 AS BLOB), ((rt0.c2) ISNULL), CASE WHEN rt1.c2 THEN rt1.c1 END, (((rt0.c1, rt0.c1, rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3, 1543097126, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c0, rt0.c0, x''))), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1))))) ASC  NULLS LAST, rt0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object((- (rt0.c0)), ((rt1.c1)>(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0)*(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)), (((rt1.c3))=((rt1.c0))), NULL, '-643180912'))<=((CAST(rt1.c0 AS BLOB), ((rt0.c2) ISNULL), CASE WHEN rt1.c2 THEN rt1.c1 END, (((rt0.c1, rt0.c1, rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3, 1543097126, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c0, rt0.c0, x''))), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1))))) ASC  NULLS LAST, rt0.c1 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (json_object((- (rt0.c0)), ((rt1.c1)>(rt0.c0)))) ORDER BY (((((rt0.c0)*(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)), (((rt1.c3))=((rt1.c0))), NULL, '-643180912'))<=((CAST(rt1.c0 AS BLOB), ((rt0.c2) ISNULL), CASE WHEN rt1.c2 THEN rt1.c1 END, (((rt0.c1, rt0.c1, rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3, 1543097126, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c0, rt0.c0, x''))), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1))))) ASC  NULLS LAST, rt0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object((- (rt0.c0)), ((rt1.c1)>(rt0.c0)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c0)*(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)), (((rt1.c3))=((rt1.c0))), NULL, '-643180912'))<=((CAST(rt1.c0 AS BLOB), ((rt0.c2) ISNULL), CASE WHEN rt1.c2 THEN rt1.c1 END, (((rt0.c1, rt0.c1, rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3, 1543097126, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c0, rt0.c0, x''))), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1))))) ASC  NULLS LAST, rt0.c1 COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (json_object((- (rt0.c0)), ((rt1.c1)>(rt0.c0)))) ORDER BY (((((rt0.c0)*(rt1.c2)), ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c1)), (((rt1.c3))=((rt1.c0))), NULL, '-643180912'))<=((CAST(rt1.c0 AS BLOB), ((rt0.c2) ISNULL), CASE WHEN rt1.c2 THEN rt1.c1 END, (((rt0.c1, rt0.c1, rt1.c1, rt1.c0, rt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c3, 1543097126, rt0.c0)) AND ((rt1.c3, rt1.c2, rt1.c0, rt0.c0, x''))), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt0.c1))))) ASC  NULLS LAST, rt0.c1 COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)IS NOT(t0.c0))) BETWEEN (((t0.c0)IS NOT(t0.c51))) AND (((((t0.c0)OR(t0.c51)))OR(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)IS NOT(t0.c0))) BETWEEN (((t0.c0)IS NOT(t0.c51))) AND (((((t0.c0)OR(t0.c51)))OR(t0.c51))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)IS NOT(t0.c0))) BETWEEN (((t0.c0)IS NOT(t0.c51))) AND (((((t0.c0)OR(t0.c51)))OR(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)IS NOT(t0.c0))) BETWEEN (((t0.c0)IS NOT(t0.c51))) AND (((((t0.c0)OR(t0.c51)))OR(t0.c51))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c51)IS NOT(t0.c0))) BETWEEN (((t0.c0)IS NOT(t0.c51))) AND (((((t0.c0)OR(t0.c51)))OR(t0.c51)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((rt0.c0, rt0.c0, rt1.c3)) BETWEEN ((((rt1.c1) NOT NULL), (rt1.c1 IN ()), CAST(rt0.c1 AS NUMERIC))) AND ((rt0.c2 COLLATE RTRIM, (- (rt1.c3)), rt0.c0 COLLATE NOCASE))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c0))=((rt1.c0))) AS NUMERIC) WHERE (((rt0.c1)AND(CASE WHEN t0.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(CASE WHEN t0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((rt0.c0, rt0.c0, rt1.c3)) BETWEEN ((((rt1.c1) NOT NULL), (rt1.c1 IN ()), CAST(rt0.c1 AS NUMERIC))) AND ((rt0.c2 COLLATE RTRIM, (- (rt1.c3)), rt0.c0 COLLATE NOCASE))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c0))=((rt1.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt1 ON (((rt0.c0, rt0.c0, rt1.c3)) BETWEEN ((((rt1.c1) NOT NULL), (rt1.c1 IN ()), CAST(rt0.c1 AS NUMERIC))) AND ((rt0.c2 COLLATE RTRIM, (- (rt1.c3)), rt0.c0 COLLATE NOCASE))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c0))=((rt1.c0))) AS NUMERIC) WHERE (((rt0.c1)AND(CASE WHEN t0.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)AND(CASE WHEN t0.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((rt0.c0, rt0.c0, rt1.c3)) BETWEEN ((((rt1.c1) NOT NULL), (rt1.c1 IN ()), CAST(rt0.c1 AS NUMERIC))) AND ((rt0.c2 COLLATE RTRIM, (- (rt1.c3)), rt0.c0 COLLATE NOCASE))) RIGHT OUTER JOIN rt0 ON CAST((((rt1.c0))=((rt1.c0))) AS NUMERIC));
SELECT * FROM rt1, t0, rt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) ORDER BY (- ((rt1.c2 IN ()))) ASC, CASE (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3)))  WHEN (((rt0.c2))!=((rt1.c1))) THEN (((t0.c0))<((rt1.c2))) WHEN ((t0.c51)LIKE(rt1.c1)) THEN (- (rt1.c1)) WHEN (rt0.c0 IN (t0.c0, t0.c51)) THEN TRIM(rt1.c3) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (- ((rt1.c2 IN ()))) ASC, CASE (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3)))  WHEN (((rt0.c2))!=((rt1.c1))) THEN (((t0.c0))<((rt1.c2))) WHEN ((t0.c51)LIKE(rt1.c1)) THEN (- (rt1.c1)) WHEN (rt0.c0 IN (t0.c0, t0.c51)) THEN TRIM(rt1.c3) END);
SELECT * FROM rt1, t0, rt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) ORDER BY (- ((rt1.c2 IN ()))) ASC, CASE (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3)))  WHEN (((rt0.c2))!=((rt1.c1))) THEN (((t0.c0))<((rt1.c2))) WHEN ((t0.c51)LIKE(rt1.c1)) THEN (- (rt1.c1)) WHEN (rt0.c0 IN (t0.c0, t0.c51)) THEN TRIM(rt1.c3) END;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE RTRIM) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (- ((rt1.c2 IN ()))) ASC, CASE (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3)))  WHEN (((rt0.c2))!=((rt1.c1))) THEN (((t0.c0))<((rt1.c2))) WHEN ((t0.c51)LIKE(rt1.c1)) THEN (- (rt1.c1)) WHEN (rt0.c0 IN (t0.c0, t0.c51)) THEN TRIM(rt1.c3) END);
SELECT * FROM rt1, t0, rt0 WHERE (((rt1.c3 COLLATE RTRIM) BETWEEN ((rt0.c2 IN ())) AND (t0.c0))) ORDER BY (- ((rt1.c2 IN ()))) ASC, CASE (((t0.c51)) NOT BETWEEN ((t0.c0)) AND ((rt1.c3)))  WHEN (((rt0.c2))!=((rt1.c1))) THEN (((t0.c0))<((rt1.c2))) WHEN ((t0.c51)LIKE(rt1.c1)) THEN (- (rt1.c1)) WHEN (rt0.c0 IN (t0.c0, t0.c51)) THEN TRIM(rt1.c3) END;
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))));
SELECT * FROM rt0 WHERE (((((NULL)OR(json_array_length(rt0.c1))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (x'' IN (rt0.c1, rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(json_array_length(rt0.c1))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN (rt0.c1, rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((NULL)OR(json_array_length(rt0.c1))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (x'' IN (rt0.c1, rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(json_array_length(rt0.c1))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (x'' IN (rt0.c1, rt0.c0)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((((NULL)OR(json_array_length(rt0.c1))))AND((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (x'' IN (rt0.c1, rt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(x'2de4df42')))AND(rt1.c0)) COLLATE NOCASE) ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))==((rt1.c2 COLLATE BINARY))), ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(x'2de4df42')))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))==((rt1.c2 COLLATE BINARY))), ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(x'2de4df42')))AND(rt1.c0)) COLLATE NOCASE) ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))==((rt1.c2 COLLATE BINARY))), ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)AND(x'2de4df42')))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))==((rt1.c2 COLLATE BINARY))), ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0)AND(x'2de4df42')))AND(rt1.c0)) COLLATE NOCASE) ORDER BY (((CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END))==((rt1.c2 COLLATE BINARY))), ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END) IS TRUE);
SELECT COUNT(*) FROM rt0 WHERE ((((COALESCE(rt0.c0, -441015821)))<((x''))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c0, -441015821)))<((x'')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((COALESCE(rt0.c0, -441015821)))<((x''))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(rt0.c0, -441015821)))<((x'')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((COALESCE(rt0.c0, -441015821)))<((x''))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY) ORDER BY (x'' IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (x'' IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY) ORDER BY (x'' IN ()) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (x'' IN ()) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))) COLLATE BINARY) ORDER BY (x'' IN ()) COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt1.c0 IN ()))>>(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))>>(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt1.c0 IN ()))>>(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ()))>>(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt1.c0 IN ()))>>(((rt1.c1) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c1)|(rt1.c2)))||(rt1.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c1)|(rt1.c2)))||(rt1.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c1)|(rt1.c2)))||(rt1.c3 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((rt0.c1)|(rt1.c2)))||(rt1.c3 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c0) ORDER BY ((((rt0.c1)|(rt1.c2)))||(rt1.c3 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CAST(rt0.c1 AS TEXT));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((NULL)GLOB(HEX(rt0.c1))) WHERE (((((((t0.c0)|(t0.c0)))AND(((rt0.c1)>(rt0.c1)))))OR(((rt0.c2)<<(rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(t0.c0)))AND(((rt0.c1)>(rt0.c1)))))OR(((rt0.c2)<<(rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((NULL)GLOB(HEX(rt0.c1))) ORDER BY rt0.c2 ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((NULL)GLOB(HEX(rt0.c1))) WHERE (((((((t0.c0)|(t0.c0)))AND(((rt0.c1)>(rt0.c1)))))OR(((rt0.c2)<<(rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(t0.c0)))AND(((rt0.c1)>(rt0.c1)))))OR(((rt0.c2)<<(rt0.c1))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((NULL)GLOB(HEX(rt0.c1))) ORDER BY rt0.c2 ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON ((NULL)GLOB(HEX(rt0.c1))) WHERE (((((((t0.c0)|(t0.c0)))AND(((rt0.c1)>(rt0.c1)))))OR(((rt0.c2)<<(rt0.c1))))) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) AS REAL) WHERE ((((rt1.c1)) NOT BETWEEN (('1291039963')) AND ((CAST(rt1.c0 AS REAL))))) ORDER BY (((((rt1.c1)) BETWEEN ((t0.c51)) AND ((rt1.c3))))-('J?')), CASE CAST(t0.c51 AS BLOB)  WHEN (NOT (rt1.c2)) THEN CAST(t0.c51 AS INTEGER) WHEN (((t0.c0, rt1.c3, t0.c51)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))) THEN CAST(0Xffffffffde9ef4f7 AS NUMERIC) WHEN ((rt1.c2) NOT BETWEEN (-2.02806942E9) AND (rt1.c2)) THEN ((rt1.c3)!=(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (('1291039963')) AND ((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) AS REAL) ORDER BY (((((rt1.c1)) BETWEEN ((t0.c51)) AND ((rt1.c3))))-('J?')), CASE CAST(t0.c51 AS BLOB)  WHEN (NOT (rt1.c2)) THEN CAST(t0.c51 AS INTEGER) WHEN (((t0.c0, rt1.c3, t0.c51)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))) THEN CAST(0Xffffffffde9ef4f7 AS NUMERIC) WHEN ((rt1.c2) NOT BETWEEN (-2.02806942E9) AND (rt1.c2)) THEN ((rt1.c3)!=(x'')) END);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) AS REAL) WHERE ((((rt1.c1)) NOT BETWEEN (('1291039963')) AND ((CAST(rt1.c0 AS REAL))))) ORDER BY (((((rt1.c1)) BETWEEN ((t0.c51)) AND ((rt1.c3))))-('J?')), CASE CAST(t0.c51 AS BLOB)  WHEN (NOT (rt1.c2)) THEN CAST(t0.c51 AS INTEGER) WHEN (((t0.c0, rt1.c3, t0.c51)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))) THEN CAST(0Xffffffffde9ef4f7 AS NUMERIC) WHEN ((rt1.c2) NOT BETWEEN (-2.02806942E9) AND (rt1.c2)) THEN ((rt1.c3)!=(x'')) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN (('1291039963')) AND ((CAST(rt1.c0 AS REAL))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) AS REAL) ORDER BY (((((rt1.c1)) BETWEEN ((t0.c51)) AND ((rt1.c3))))-('J?')), CASE CAST(t0.c51 AS BLOB)  WHEN (NOT (rt1.c2)) THEN CAST(t0.c51 AS INTEGER) WHEN (((t0.c0, rt1.c3, t0.c51)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))) THEN CAST(0Xffffffffde9ef4f7 AS NUMERIC) WHEN ((rt1.c2) NOT BETWEEN (-2.02806942E9) AND (rt1.c2)) THEN ((rt1.c3)!=(x'')) END);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)) AS REAL) WHERE ((((rt1.c1)) NOT BETWEEN (('1291039963')) AND ((CAST(rt1.c0 AS REAL))))) ORDER BY (((((rt1.c1)) BETWEEN ((t0.c51)) AND ((rt1.c3))))-('J?')), CASE CAST(t0.c51 AS BLOB)  WHEN (NOT (rt1.c2)) THEN CAST(t0.c51 AS INTEGER) WHEN (((t0.c0, rt1.c3, t0.c51)) NOT BETWEEN ((rt1.c0, rt1.c2, rt1.c1)) AND ((rt1.c0, rt1.c1, rt1.c1))) THEN CAST(0Xffffffffde9ef4f7 AS NUMERIC) WHEN ((rt1.c2) NOT BETWEEN (-2.02806942E9) AND (rt1.c2)) THEN ((rt1.c3)!=(x'')) END;
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c2)AND(rt1.c1)))AND(rt0.c0))) BETWEEN (CAST('-883018685' AS REAL)) AND (((rt1.c3) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0))))<>((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, CASE WHEN (((rt1.c2, 0.06502749252129314, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c2))) THEN (((x''))<((rt1.c0))) ELSE ((rt0.c1) BETWEEN (NULL) AND (rt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt1.c1)))AND(rt0.c0))) BETWEEN (CAST('-883018685' AS REAL)) AND (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0))))!=((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, CASE WHEN (((rt1.c2, 0.06502749252129314, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c2))) THEN (((x''))<((rt1.c0))) ELSE ((rt0.c1) BETWEEN (NULL) AND (rt1.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c2)AND(rt1.c1)))AND(rt0.c0))) BETWEEN (CAST('-883018685' AS REAL)) AND (((rt1.c3) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0))))<>((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, CASE WHEN (((rt1.c2, 0.06502749252129314, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c2))) THEN (((x''))<((rt1.c0))) ELSE ((rt0.c1) BETWEEN (NULL) AND (rt1.c2)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt1.c1)))AND(rt0.c0))) BETWEEN (CAST('-883018685' AS REAL)) AND (((rt1.c3) NOT NULL)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0))))!=((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, CASE WHEN (((rt1.c2, 0.06502749252129314, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c2))) THEN (((x''))<((rt1.c0))) ELSE ((rt0.c1) BETWEEN (NULL) AND (rt1.c2)) END ASC  NULLS LAST);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE (((((((rt0.c2)AND(rt1.c1)))AND(rt0.c0))) BETWEEN (CAST('-883018685' AS REAL)) AND (((rt1.c3) NOT NULL)))) ORDER BY (((((rt0.c1) NOT BETWEEN (NULL) AND (rt1.c0))))<>((rt0.c1 COLLATE RTRIM)))  NULLS FIRST, CASE WHEN (((rt1.c2, 0.06502749252129314, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c0)) AND ((rt1.c1, rt1.c2, rt0.c2))) THEN (((x''))<((rt1.c0))) ELSE ((rt0.c1) BETWEEN (NULL) AND (rt1.c2)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c0)) AS REAL));
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((('') ISNULL))<>(CASE '1003046412'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN t0.c0 WHEN 0X65a89b2c THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('') ISNULL))<>(CASE '1003046412'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN t0.c0 WHEN 0x65a89b2c THEN rt0.c0 END))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((('') ISNULL))<>(CASE '1003046412'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN t0.c0 WHEN 0X65a89b2c THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((('') ISNULL))<>(CASE '1003046412'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN t0.c0 WHEN 0x65a89b2c THEN rt0.c0 END))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((('') ISNULL))<>(CASE '1003046412'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN t0.c0 WHEN rt1.c2 THEN rt0.c0 WHEN rt1.c3 THEN t0.c0 WHEN 0X65a89b2c THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2 IN ()), highlight(rt0.c0, rt1.c0, rt1.c3, rt1.c0), 0.1977804472383643))>((x'', UPPER(DISTINCT rt0.c1), ((0xffffffffc013fdcf) IS TRUE))))) ORDER BY '-53988061' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ()), highlight(rt0.c0, rt1.c0, rt1.c3, rt1.c0), 0.1977804472383643))>((x'', UPPER(DISTINCT rt0.c1), ((0xffffffffc013fdcf) IS TRUE))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '-53988061' DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2 IN ()), highlight(rt0.c0, rt1.c0, rt1.c3, rt1.c0), 0.1977804472383643))>((x'', UPPER(DISTINCT rt0.c1), ((0xffffffffc013fdcf) IS TRUE))))) ORDER BY '-53988061' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 IN ()), highlight(rt0.c0, rt1.c0, rt1.c3, rt1.c0), 0.1977804472383643))>((x'', UPPER(DISTINCT rt0.c1), ((0xffffffffc013fdcf) IS TRUE))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '-53988061' DESC);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c2 IN ()), highlight(rt0.c0, rt1.c0, rt1.c3, rt1.c0), 0.1977804472383643))>((x'', UPPER(DISTINCT rt0.c1), ((0xffffffffc013fdcf) IS TRUE))))) ORDER BY '-53988061' DESC;
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt1.c1)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CAST((~ (rt1.c1)) AS BLOB));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))>((+ (rt1.c1)))) WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) IN (NULL, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) IN (NULL, CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))>((+ (rt1.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))>((+ (rt1.c1)))) WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) IN (NULL, CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) IN (NULL, CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))>((+ (rt1.c1)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c2))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt1.c1) NOT BETWEEN (rt1.c3) AND (rt1.c1)))>((+ (rt1.c1)))) WHERE ((((((rt1.c0)AND(rt1.c2)))AND(rt1.c1)) IN (NULL, CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (CAST(0Xffffffffd2d2f775 AS NUMERIC))) WHERE (((t0.c51)GLOB(CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51)GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (CAST(0Xffffffffd2d2f775 AS NUMERIC))) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (CAST(0Xffffffffd2d2f775 AS NUMERIC))) WHERE (((t0.c51)GLOB(CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c51)GLOB(CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (CAST(0Xffffffffd2d2f775 AS NUMERIC))) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (CAST(0Xffffffffd2d2f775 AS NUMERIC))) WHERE (((t0.c51)GLOB(CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (x'');
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c51)GLOB(rt1.c3)) WHEN ((rt1.c3)&(rt1.c1)) THEN (((rt1.c0)) BETWEEN (('0.8339853815564006')) AND ((t0.c51))) WHEN CAST(rt1.c3 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c51)GLOB(rt1.c3)) WHEN ((rt1.c3)&(rt1.c1)) THEN (((rt1.c0)) BETWEEN (('0.8339853815564006')) AND ((t0.c51))) WHEN CAST(rt1.c3 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c51)GLOB(rt1.c3)) WHEN ((rt1.c3)&(rt1.c1)) THEN (((rt1.c0)) BETWEEN (('0.8339853815564006')) AND ((t0.c51))) WHEN CAST(rt1.c3 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c51)GLOB(rt1.c3)) WHEN ((rt1.c3)&(rt1.c1)) THEN (((rt1.c0)) BETWEEN (('0.8339853815564006')) AND ((t0.c51))) WHEN CAST(rt1.c3 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN t0.c0 COLLATE BINARY THEN ((t0.c51)GLOB(rt1.c3)) WHEN ((rt1.c3)&(rt1.c1)) THEN (((rt1.c0)) BETWEEN (('0.8339853815564006')) AND ((t0.c51))) WHEN CAST(rt1.c3 AS NUMERIC) THEN rt1.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (rt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (CASE WHEN ((rt1.c0)%(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) END) ORDER BY rt1.c3 ASC  NULLS LAST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)%(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3 ASC  NULLS LAST, x'' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (CASE WHEN ((rt1.c0)%(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) END) ORDER BY rt1.c3 ASC  NULLS LAST, x'' COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c0)%(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c3 ASC  NULLS LAST, x'' COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, rt1 WHERE (CASE WHEN ((rt1.c0)%(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN ((rt1.c1) NOTNULL) THEN rt1.c2 COLLATE BINARY WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) END) ORDER BY rt1.c3 ASC  NULLS LAST, x'' COLLATE NOCASE DESC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (NULL);
SELECT ALL * FROM rt1, rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) ORDER BY (((rt0.c2) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c0, rt0.c0)) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) ORDER BY (((rt0.c2) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c0, rt0.c0)) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c2) NOTNULL) IN ())  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((NULLIF(rt0.c0, rt0.c0)) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c1) BETWEEN (rt1.c1) AND (rt0.c2))))) ORDER BY (((rt0.c2) NOTNULL) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON x'f979' WHERE (ABS(((t0.c0) NOT NULL))) ORDER BY ((((((((x'6d93b959')OR(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((rt0.c0))))))AND((((0xffffffffddcedc17))<((rt1.c2))))))AND(((((rt0.c0)AND(rt1.c3)))AND(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON x'f979' ORDER BY ((((((((x'6d93b959')OR(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((rt0.c0))))))AND((((0xffffffffddcedc17))<((rt1.c2))))))AND(((((rt0.c0)AND(rt1.c3)))AND(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON x'f979' WHERE (ABS(((t0.c0) NOT NULL))) ORDER BY ((((((((x'6d93b959')OR(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((rt0.c0))))))AND((((0xffffffffddcedc17))<((rt1.c2))))))AND(((((rt0.c0)AND(rt1.c3)))AND(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t0.c0) NOT NULL))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON x'f979' ORDER BY ((((((((x'6d93b959')OR(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((rt0.c0))))))AND((((0xffffffffddcedc17))<((rt1.c2))))))AND(((((rt0.c0)AND(rt1.c3)))AND(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON x'f979' WHERE (ABS(((t0.c0) NOT NULL))) ORDER BY ((((((((x'6d93b959')OR(CASE WHEN rt1.c0 THEN rt1.c0 END)))OR((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((rt0.c0))))))AND((((0xffffffffddcedc17))<((rt1.c2))))))AND(((((rt0.c0)AND(rt1.c3)))AND(rt1.c0)))) DESC;
SELECT * FROM t0, rt0 WHERE ((((((((((((('GBaT^d''k')AND(((rt0.c2)*(rt0.c0)))))AND(CAST(t0.c51 AS BLOB))))AND(t0.c51 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(x'bd71')));
SELECT SUM(count) FROM (SELECT (((((((((((((('GBaT^d''k')AND(((rt0.c2)*(rt0.c0)))))AND(CAST(t0.c51 AS BLOB))))AND(t0.c51 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(x'bd71'))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((((((((((('GBaT^d''k')AND(((rt0.c2)*(rt0.c0)))))AND(CAST(t0.c51 AS BLOB))))AND(t0.c51 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(x'bd71')));
SELECT SUM(count) FROM (SELECT (((((((((((((('GBaT^d''k')AND(((rt0.c2)*(rt0.c0)))))AND(CAST(t0.c51 AS BLOB))))AND(t0.c51 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(x'bd71'))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((((((((((('GBaT^d''k')AND(((rt0.c2)*(rt0.c0)))))AND(CAST(t0.c51 AS BLOB))))AND(t0.c51 COLLATE NOCASE)))OR((~ (rt0.c0)))))OR(CAST(t0.c0 AS INTEGER))))AND(x'bd71')));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (((NULL IN (rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (('0.5695312275276425')) AND ((t0.c51))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (((NULL IN (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (('0.5695312275276425')) AND ((t0.c51))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (((NULL IN (rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (('0.5695312275276425')) AND ((t0.c51))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (((NULL IN (rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (('0.5695312275276425')) AND ((t0.c51))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)) AND (((NULL IN (rt0.c0)))))) ORDER BY (((rt0.c0)) NOT BETWEEN (('0.5695312275276425')) AND ((t0.c51))) COLLATE RTRIM DESC;
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((rt1.c3 IN ()) AS TEXT));
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) END) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((rt1.c3 IN ()) AS TEXT));
SELECT ALL * FROM t0, rt1 WHERE (CASE WHEN CAST(rt1.c2 AS INTEGER) THEN CAST(t0.c0 AS INTEGER) END) ORDER BY CAST((rt1.c3 IN ()) AS TEXT);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT ALL * FROM t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('+%')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('+%')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('+%')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('+%')))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY (((rt0.c2 IN ()))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND ('+%')))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0)GLOB(t0.c51)) IN (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END))) ORDER BY (((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN x'7b1e84b7' WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END))=((((t0.c0)*(t0.c0))))) ASC, 0xffffffff8f7c2c10;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(t0.c51)) IN (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN x'7b1e84b7' WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END))=((((t0.c0)*(t0.c0))))) ASC, 0xffffffff8f7c2c10);
SELECT * FROM t0 WHERE ((((t0.c0)GLOB(t0.c51)) IN (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END))) ORDER BY (((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN x'7b1e84b7' WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END))=((((t0.c0)*(t0.c0))))) ASC, 0xffffffff8f7c2c10;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(t0.c51)) IN (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN x'7b1e84b7' WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END))=((((t0.c0)*(t0.c0))))) ASC, 0xffffffff8f7c2c10);
SELECT * FROM t0 WHERE ((((t0.c0)GLOB(t0.c51)) IN (CASE t0.c51  WHEN t0.c51 THEN t0.c51 ELSE t0.c51 END))) ORDER BY (((CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN x'7b1e84b7' WHEN t0.c51 THEN t0.c51 ELSE t0.c0 END))=((((t0.c0)*(t0.c0))))) ASC, 0xffffffff8f7c2c10;
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ()) WHERE (CASE TRIM(rt1.c1, rt0.c0)  WHEN (rt1.c3 IN ()) THEN (((t0.c51))<>((rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt1.c1, rt0.c0)  WHEN (rt1.c3 IN ()) THEN (((t0.c51))<>((rt1.c0))) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ()) WHERE (CASE TRIM(rt1.c1, rt0.c0)  WHEN (rt1.c3 IN ()) THEN (((t0.c51))<>((rt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(rt1.c1, rt0.c0)  WHEN (rt1.c3 IN ()) THEN (((t0.c51))<>((rt1.c0))) END) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM t0, rt1 CROSS JOIN rt0 ON ((rt1.c1 IN ()) IN ()) WHERE (CASE TRIM(rt1.c1, rt0.c0)  WHEN (rt1.c3 IN ()) THEN (((t0.c51))<>((rt1.c0))) END);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON (((0.9212825553269, rt1.c2, t0.c51)) BETWEEN (('', ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN ()))) AND (((rt0.c1 IN (t0.c51)), (t0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)))) WHERE (((((rt1.c2) NOTNULL))>(((rt0.c2)<(rt1.c3))))) ORDER BY (((((((((rt1.c3)AND(x'')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)) IN ()), rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))>(((rt0.c2)<(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON (((0.9212825553269, rt1.c2, t0.c51)) BETWEEN (('', ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN ()))) AND (((rt0.c1 IN (t0.c51)), (t0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)))) ORDER BY (((((((((rt1.c3)AND(x'')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)) IN ()), rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON (((0.9212825553269, rt1.c2, t0.c51)) BETWEEN (('', ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN ()))) AND (((rt0.c1 IN (t0.c51)), (t0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)))) WHERE (((((rt1.c2) NOTNULL))>(((rt0.c2)<(rt1.c3))))) ORDER BY (((((((((rt1.c3)AND(x'')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)) IN ()), rt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL))>(((rt0.c2)<(rt1.c3))))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON (((0.9212825553269, rt1.c2, t0.c51)) BETWEEN (('', ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN ()))) AND (((rt0.c1 IN (t0.c51)), (t0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)))) ORDER BY (((((((((rt1.c3)AND(x'')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)) IN ()), rt0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t0 ON (((0.9212825553269, rt1.c2, t0.c51)) BETWEEN (('', ((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (rt0.c0 IN ()))) AND (((rt0.c1 IN (t0.c51)), (t0.c0 IN ()), CAST(rt0.c1 AS NUMERIC)))) WHERE (((((rt1.c2) NOTNULL))>(((rt0.c2)<(rt1.c3))))) ORDER BY (((((((((rt1.c3)AND(x'')))OR(rt0.c2)))OR(rt1.c2)))AND(rt1.c1)) IN ()), rt0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c51) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c51) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c51) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((t0.c51) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c51) NOT NULL));
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (((NOT (rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((t0.c0))=((rt1.c1))))) WHERE (t0.c51) ORDER BY ((rt1.c0)>=(rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (((NOT (rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((t0.c0))=((rt1.c1))))) ORDER BY ((rt1.c0)>=(rt1.c3)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (((NOT (rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((t0.c0))=((rt1.c1))))) WHERE (t0.c51) ORDER BY ((rt1.c0)>=(rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t0 ON (((NOT (rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((t0.c0))=((rt1.c1))))) ORDER BY ((rt1.c0)>=(rt1.c3)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0, rt1 INNER JOIN t0 ON (((NOT (rt0.c0))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((((t0.c0))=((rt1.c1))))) WHERE (t0.c51) ORDER BY ((rt1.c0)>=(rt1.c3)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((+ ((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51)))))) ORDER BY ((((t0.c0)<<(t0.c0)))|(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<<(t0.c0)))|(''))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ ((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51)))))) ORDER BY ((((t0.c0)<<(t0.c0)))|(''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<<(t0.c0)))|(''))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ ((((t0.c51)) BETWEEN ((t0.c0)) AND ((t0.c51)))))) ORDER BY ((((t0.c0)<<(t0.c0)))|(''))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51))) IS TRUE)) ORDER BY t0.c51 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN (t0.c51))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c51 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51))) IS TRUE)) ORDER BY t0.c51 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN (t0.c51))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY t0.c51 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51))) IS TRUE)) ORDER BY t0.c51 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY(CAST(t0.c51 AS NUMERIC))) ORDER BY (NOT (t0.c51)) COLLATE RTRIM DESC, 'x([~oS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(t0.c51 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c51)) COLLATE RTRIM DESC, 'x([~oS' ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY(CAST(t0.c51 AS NUMERIC))) ORDER BY (NOT (t0.c51)) COLLATE RTRIM DESC, 'x([~oS' ASC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(CAST(t0.c51 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c51)) COLLATE RTRIM DESC, 'x([~oS' ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (UNLIKELY(CAST(t0.c51 AS NUMERIC))) ORDER BY (NOT (t0.c51)) COLLATE RTRIM DESC, 'x([~oS' ASC;
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c2 AS TEXT))LIKE(((t0.c0)GLOB(rt1.c0)))) WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c2 AS TEXT))LIKE(((t0.c0)GLOB(rt1.c0)))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c2 AS TEXT))LIKE(((t0.c0)GLOB(rt1.c0)))) WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c2 AS TEXT))LIKE(((t0.c0)GLOB(rt1.c0)))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c2 AS TEXT))LIKE(((t0.c0)GLOB(rt1.c0)))) WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (0.11500747780000198) AND ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (0.11500747780000198) AND ((- (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (0.11500747780000198) AND ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (0.11500747780000198) AND ((- (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1))) NOT BETWEEN (0.11500747780000198) AND ((- (rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULLIF(rt1.c3, '623315549'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt1.c3, '623315549')) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULLIF(rt1.c3, '623315549'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt1.c3, '623315549')) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (NULLIF(rt1.c3, '623315549'));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((~ ((rt1.c2 IN ())))) ORDER BY (((((((((rt1.c2 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t0.c0)))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((((((rt1.c2 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t0.c0)))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((~ ((rt1.c2 IN ())))) ORDER BY (((((((((rt1.c2 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t0.c0)))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((((((rt1.c2 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t0.c0)))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((~ ((rt1.c2 IN ())))) ORDER BY (((((((((rt1.c2 IN ()))AND(CAST(rt1.c1 AS INTEGER))))AND(t0.c0)))OR(rt1.c0 COLLATE BINARY)))AND(rt1.c3 COLLATE BINARY)) DESC  NULLS FIRST, '' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN -312116305 THEN ((rt0.c0)<(0.7451978002085567)) WHEN ((rt0.c0)%(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN '0.5012318629490446' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE '1007137623' END) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN -312116305 THEN ((rt0.c0)<(0.7451978002085567)) WHEN ((rt0.c0)%(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN '0.5012318629490446' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE '1007137623' END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN -312116305 THEN ((rt0.c0)<(0.7451978002085567)) WHEN ((rt0.c0)%(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN '0.5012318629490446' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE '1007137623' END) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN -312116305 THEN ((rt0.c0)<(0.7451978002085567)) WHEN ((rt0.c0)%(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN '0.5012318629490446' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE '1007137623' END) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN -312116305 THEN ((rt0.c0)<(0.7451978002085567)) WHEN ((rt0.c0)%(rt0.c2)) THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN '0.5012318629490446' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE '1007137623' END) ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c2 COLLATE BINARY)AND(load_extension(rt1.c0))))OR(((rt0.c1) IS FALSE)))) ORDER BY (((+ ('')))|(rt0.c2))  NULLS LAST, LIKELY(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE BINARY)AND(load_extension(rt1.c0))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((+ ('')))|(rt0.c2))  NULLS LAST, LIKELY(rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c2 COLLATE BINARY)AND(load_extension(rt1.c0))))OR(((rt0.c1) IS FALSE)))) ORDER BY (((+ ('')))|(rt0.c2))  NULLS LAST, LIKELY(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE BINARY)AND(load_extension(rt1.c0))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0 ORDER BY (((+ ('')))|(rt0.c2))  NULLS LAST, LIKELY(rt0.c0) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (((((rt1.c2 COLLATE BINARY)AND(load_extension(rt1.c0))))OR(((rt0.c1) IS FALSE)))) ORDER BY (((+ ('')))|(rt0.c2))  NULLS LAST, LIKELY(rt0.c0) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c0)))||(rt1.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((UPPER(rt0.c2)) IS FALSE) WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(((t0.c0) BETWEEN (rt1.c0) AND (t0.c51)))))OR((NOT (rt0.c1)))))OR((rt1.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY TRIM(((t0.c0)<(t0.c51)), t0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1 COLLATE NOCASE)AND(((t0.c0) BETWEEN (rt1.c0) AND (t0.c51)))))OR((NOT (rt0.c1)))))OR((rt1.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c0)))||(rt1.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((UPPER(rt0.c2)) IS FALSE) ORDER BY TRIM(((t0.c0)<(t0.c51)), t0.c0) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c0)))||(rt1.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((UPPER(rt0.c2)) IS FALSE) WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(((t0.c0) BETWEEN (rt1.c0) AND (t0.c51)))))OR((NOT (rt0.c1)))))OR((rt1.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY TRIM(((t0.c0)<(t0.c51)), t0.c0) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c1 COLLATE NOCASE)AND(((t0.c0) BETWEEN (rt1.c0) AND (t0.c51)))))OR((NOT (rt0.c1)))))OR((rt1.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c0)))||(rt1.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((UPPER(rt0.c2)) IS FALSE) ORDER BY TRIM(((t0.c0)<(t0.c51)), t0.c0) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON (((+ (rt1.c0)))||(rt1.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((UPPER(rt0.c2)) IS FALSE) WHERE (((((((((rt1.c1 COLLATE NOCASE)AND(((t0.c0) BETWEEN (rt1.c0) AND (t0.c51)))))OR((NOT (rt0.c1)))))OR((rt1.c0 IN ()))))OR(CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY TRIM(((t0.c0)<(t0.c51)), t0.c0) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))) IS TRUE)) ORDER BY rt0.c2  NULLS FIRST;
SELECT * FROM rt1, t0, rt0 WHERE (CASE (rt1.c3 IN ())  WHEN (NOT (rt0.c1)) THEN (-7.4537976E8 IN (rt0.c0)) ELSE ((((rt1.c3)OR(t0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (NOT (rt0.c1)) THEN (-7.4537976E8 IN (rt0.c0)) ELSE ((((rt1.c3)OR(t0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CASE (rt1.c3 IN ())  WHEN (NOT (rt0.c1)) THEN (-7.4537976E8 IN (rt0.c0)) ELSE ((((rt1.c3)OR(t0.c0)))AND(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (NOT (rt0.c1)) THEN (-7.4537976E8 IN (rt0.c0)) ELSE ((((rt1.c3)OR(t0.c0)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CASE (rt1.c3 IN ())  WHEN (NOT (rt0.c1)) THEN (-7.4537976E8 IN (rt0.c0)) ELSE ((((rt1.c3)OR(t0.c0)))AND(rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1))<>((rt0.c1)))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))==((((rt0.c2) IS TRUE)))) DESC  NULLS FIRST, CASE ((rt0.c0)<=(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN -2.111972416E9 WHEN 'Ssᬷ2I%rvn' THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0)|(rt0.c0)) THEN NULLIF(DISTINCT rt0.c2, rt0.c0) ELSE SQLITE_VERSION() END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))=((((rt0.c2) IS TRUE)))) DESC  NULLS FIRST, CASE ((rt0.c0)<=(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN -2.111972416E9 WHEN 'Ssᬷ2I%rvn' THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0)|(rt0.c0)) THEN NULLIF(DISTINCT rt0.c2, rt0.c0) ELSE SQLITE_VERSION() END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1))<>((rt0.c1)))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))==((((rt0.c2) IS TRUE)))) DESC  NULLS FIRST, CASE ((rt0.c0)<=(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN -2.111972416E9 WHEN 'Ssᬷ2I%rvn' THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0)|(rt0.c0)) THEN NULLIF(DISTINCT rt0.c2, rt0.c0) ELSE SQLITE_VERSION() END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1))<>((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))=((((rt0.c2) IS TRUE)))) DESC  NULLS FIRST, CASE ((rt0.c0)<=(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN -2.111972416E9 WHEN 'Ssᬷ2I%rvn' THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0)|(rt0.c0)) THEN NULLIF(DISTINCT rt0.c2, rt0.c0) ELSE SQLITE_VERSION() END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((((rt0.c1))<>((rt0.c1)))))) ORDER BY (((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1))))==((((rt0.c2) IS TRUE)))) DESC  NULLS FIRST, CASE ((rt0.c0)<=(rt0.c0))  WHEN ((rt0.c2)>(rt0.c2)) THEN rt0.c1 COLLATE RTRIM WHEN CASE rt0.c2  WHEN x'' THEN rt0.c1 ELSE rt0.c1 END THEN CASE rt0.c2  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN -2.111972416E9 WHEN 'Ssᬷ2I%rvn' THEN rt0.c0 ELSE rt0.c0 END WHEN rt0.c2 THEN CAST(rt0.c2 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((rt0.c0)|(rt0.c0)) THEN NULLIF(DISTINCT rt0.c2, rt0.c0) ELSE SQLITE_VERSION() END ASC  NULLS LAST;
SELECT * FROM rt1, t0 CROSS JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((rt1.c2)+(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)+(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT * FROM rt1, t0 CROSS JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((rt1.c2)+(t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)+(t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0 CROSS JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT * FROM rt1, t0 CROSS JOIN rt0 ON ((rt0.c2) IS TRUE) COLLATE NOCASE WHERE (((rt1.c2)+(t0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))) BETWEEN (CAST(x'' AS INTEGER)) AND (CAST(rt0.c2 AS BLOB))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))|(((((rt1.c2)AND(rt0.c2)))AND(rt1.c2)))) FULL OUTER JOIN t0 ON UNLIKELY(rt1.c2) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))|(((((rt1.c2)AND(rt0.c2)))AND(rt1.c2)))) FULL OUTER JOIN t0 ON UNLIKELY(rt1.c2));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))|(((((rt1.c2)AND(rt0.c2)))AND(rt1.c2)))) FULL OUTER JOIN t0 ON UNLIKELY(rt1.c2) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))|(((((rt1.c2)AND(rt0.c2)))AND(rt1.c2)))) FULL OUTER JOIN t0 ON UNLIKELY(rt1.c2));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c3))))|(((((rt1.c2)AND(rt0.c2)))AND(rt1.c2)))) FULL OUTER JOIN t0 ON UNLIKELY(rt1.c2) WHERE (t0.c0);
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (CAST((NOT (rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON (NULL IN ()));
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (CAST((NOT (rt1.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (rt1.c3)) AS BLOB)) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON (NULL IN ()));
SELECT COUNT(*) FROM rt1, t0 LEFT OUTER JOIN rt0 ON (NULL IN ()) WHERE (CAST((NOT (rt1.c3)) AS BLOB));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)>(rt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)>(rt1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)>(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c2)>(rt1.c2))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt0.c0, rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt0.c0, rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt0.c0, rt1.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt0.c0, rt1.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c0 IN (rt0.c0, rt1.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))) AND (((t0.c0) NOT NULL)))) ORDER BY x'237f'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'237f'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))) AND (((t0.c0) NOT NULL)))) ORDER BY x'237f'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'237f'  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) IS FALSE)) BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c2))) AND (((t0.c0) NOT NULL)))) ORDER BY x'237f'  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51)|(t0.c0))))==((IFNULL(DISTINCT t0.c51, t0.c0))))) ORDER BY CAST(((((t0.c51)AND(t0.c51)))OR(t0.c0)) AS INTEGER) ASC  NULLS LAST, ((((((((((t0.c0)<(t0.c0)))OR((((0xffffffffa87a9f36, t0.c0, t0.c51)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c51 AS TEXT))))AND((NOT (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))  NULLS FIRST, CAST((((t0.c0, t0.c51, t0.c0))>((t0.c51, t0.c51, t0.c51))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51)|(t0.c0))))==((IFNULL(DISTINCT t0.c51, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c51)AND(t0.c51)))OR(t0.c0)) AS INTEGER) ASC  NULLS LAST, ((((((((((t0.c0)<(t0.c0)))OR((((0xffffffffa87a9f36, t0.c0, t0.c51)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c51 AS TEXT))))AND((NOT (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))  NULLS FIRST, CAST((((t0.c0, t0.c51, t0.c0))>((t0.c51, t0.c51, t0.c51))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51)|(t0.c0))))==((IFNULL(DISTINCT t0.c51, t0.c0))))) ORDER BY CAST(((((t0.c51)AND(t0.c51)))OR(t0.c0)) AS INTEGER) ASC  NULLS LAST, ((((((((((t0.c0)<(t0.c0)))OR((((0xffffffffa87a9f36, t0.c0, t0.c51)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c51 AS TEXT))))AND((NOT (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))  NULLS FIRST, CAST((((t0.c0, t0.c51, t0.c0))>((t0.c51, t0.c51, t0.c51))) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51)|(t0.c0))))==((IFNULL(DISTINCT t0.c51, t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c51)AND(t0.c51)))OR(t0.c0)) AS INTEGER) ASC  NULLS LAST, ((((((((((t0.c0)<(t0.c0)))OR((((0xffffffffa87a9f36, t0.c0, t0.c51)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c51 AS TEXT))))AND((NOT (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))  NULLS FIRST, CAST((((t0.c0, t0.c51, t0.c0))>((t0.c51, t0.c51, t0.c51))) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51)|(t0.c0))))==((IFNULL(DISTINCT t0.c51, t0.c0))))) ORDER BY CAST(((((t0.c51)AND(t0.c51)))OR(t0.c0)) AS INTEGER) ASC  NULLS LAST, ((((((((((t0.c0)<(t0.c0)))OR((((0xffffffffa87a9f36, t0.c0, t0.c51)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c0, t0.c0, t0.c0))))))OR(CAST(t0.c51 AS TEXT))))AND((NOT (t0.c0)))))AND(((t0.c0) BETWEEN (t0.c51) AND (t0.c0))))  NULLS FIRST, CAST((((t0.c0, t0.c51, t0.c0))>((t0.c51, t0.c51, t0.c51))) AS TEXT);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT * FROM rt0, t0, rt1 WHERE (LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.946547119424851));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.946547119424851)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.946547119424851));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.946547119424851)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.946547119424851));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ())) ORDER BY CASE (t0.c51 IN (t0.c51))  WHEN (NOT (rt1.c2)) THEN (((rt1.c2, t0.c0, rt0.c0))>=((rt1.c0, rt0.c2, rt1.c2))) END;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE (t0.c51 IN (t0.c51))  WHEN (NOT (rt1.c2)) THEN (((rt1.c2, t0.c0, rt0.c0))>=((rt1.c0, rt0.c2, rt1.c2))) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ())) ORDER BY CASE (t0.c51 IN (t0.c51))  WHEN (NOT (rt1.c2)) THEN (((rt1.c2, t0.c0, rt0.c0))>=((rt1.c0, rt0.c2, rt1.c2))) END;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS BLOB) IN ())) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CASE (t0.c51 IN (t0.c51))  WHEN (NOT (rt1.c2)) THEN (((rt1.c2, t0.c0, rt0.c0))>=((rt1.c0, rt0.c2, rt1.c2))) END);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ((CAST(rt1.c1 AS BLOB) IN ())) ORDER BY CASE (t0.c51 IN (t0.c51))  WHEN (NOT (rt1.c2)) THEN (((rt1.c2, t0.c0, rt0.c0))>=((rt1.c0, rt0.c2, rt1.c2))) END;
SELECT * FROM rt1, rt0 WHERE (((-1054118227)IS((NOT (rt1.c1))))) ORDER BY -950619090 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1054118227)IS((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -950619090 DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE (((-1054118227)IS((NOT (rt1.c1))))) ORDER BY -950619090 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((-1054118227)IS((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY -950619090 DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c0) ORDER BY TRIM(CAST(rt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY TRIM(CAST(rt1.c2 AS TEXT)));
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c0) ORDER BY TRIM(CAST(rt1.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY TRIM(CAST(rt1.c2 AS TEXT)));
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt0.c0) ORDER BY TRIM(CAST(rt1.c2 AS TEXT));
SELECT ALL * FROM rt1, t0, rt0 WHERE (0.04321493369713447);
SELECT SUM(count) FROM (SELECT ((0.04321493369713447) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (0.04321493369713447);
SELECT SUM(count) FROM (SELECT ((0.04321493369713447) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (0.04321493369713447);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) ISNULL)))) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))<=(((rt0.c1)/(rt0.c1))))  NULLS LAST, ((LAST_INSERT_ROWID()) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (NULL)) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))<=(((rt0.c1)/(rt0.c1))))  NULLS LAST, ((LAST_INSERT_ROWID()) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) ISNULL)))) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))<=(((rt0.c1)/(rt0.c1))))  NULLS LAST, ((LAST_INSERT_ROWID()) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (NULL)) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))<=(((rt0.c1)/(rt0.c1))))  NULLS LAST, ((LAST_INSERT_ROWID()) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((rt0.c0) ISNULL)))) ORDER BY (NOT (NULL)) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))<=(((rt0.c1)/(rt0.c1))))  NULLS LAST, ((LAST_INSERT_ROWID()) NOT NULL)  NULLS FIRST;
SELECT * FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY CAST(x'' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t0 ORDER BY CAST(x'' AS TEXT));
SELECT * FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY CAST(x'' AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, t0 ORDER BY CAST(x'' AS TEXT));
SELECT * FROM rt1, rt0, t0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY CAST(x'' AS TEXT);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN rt1.c2 THEN 0.5064571556114695 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE rt0.c2  WHEN rt1.c2 THEN 0.5064571556114695 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN rt1.c2 THEN 0.5064571556114695 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CASE rt0.c2  WHEN rt1.c2 THEN 0.5064571556114695 ELSE rt1.c1 END)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (TRIM(DISTINCT CASE rt0.c2  WHEN rt1.c2 THEN 0.5064571556114695 ELSE rt1.c1 END));
SELECT ALL * FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c2  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE rt1.c2  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((~ (CASE rt1.c2  WHEN NULL THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)));
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND ('1007137623'))) BETWEEN (((t0.c51) NOT NULL)) AND (SUBSTR(rt0.c0, rt0.c1)))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND ('1007137623'))) BETWEEN (((t0.c51) NOT NULL)) AND (SUBSTR(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0) ISNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND ('1007137623'))) BETWEEN (((t0.c51) NOT NULL)) AND (SUBSTR(rt0.c0, rt0.c1)))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) BETWEEN (rt1.c1) AND ('1007137623'))) BETWEEN (((t0.c51) NOT NULL)) AND (SUBSTR(rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, t0 NATURAL JOIN rt1 ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0) ISNULL) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 NATURAL JOIN rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c1) AND ('1007137623'))) BETWEEN (((t0.c51) NOT NULL)) AND (SUBSTR(rt0.c0, rt0.c1)))) ORDER BY CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN ((rt1.c0) ISNULL) END  NULLS FIRST;
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0) IS FALSE) IN ()));
SELECT ALL * FROM t0, rt1 WHERE (t0.c0) ORDER BY CASE rt1.c1  WHEN (((rt1.c2, t0.c0, rt1.c3)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND (('', rt1.c2, rt1.c3))) THEN (- (rt1.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE rt1.c1  WHEN (((rt1.c2, t0.c0, rt1.c3)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND (('', rt1.c2, rt1.c3))) THEN (- (rt1.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (t0.c0) ORDER BY CASE rt1.c1  WHEN (((rt1.c2, t0.c0, rt1.c3)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND (('', rt1.c2, rt1.c3))) THEN (- (rt1.c2)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE rt1.c1  WHEN (((rt1.c2, t0.c0, rt1.c3)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND (('', rt1.c2, rt1.c3))) THEN (- (rt1.c2)) END DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (t0.c0) ORDER BY CASE rt1.c1  WHEN (((rt1.c2, t0.c0, rt1.c3)) BETWEEN ((t0.c0, t0.c0, t0.c51)) AND (('', rt1.c2, rt1.c3))) THEN (- (rt1.c2)) END DESC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((0X347236e8)GLOB(rt0.c1)) IN ())) ORDER BY CASE WHEN (t0.c51 IN (rt0.c2)) THEN (+ (rt0.c1)) ELSE ((rt0.c0)IS NOT(rt0.c0)) END DESC  NULLS FIRST, CAST(((rt0.c2)|(t0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0X347236e8)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (t0.c51 IN (rt0.c2)) THEN (+ (rt0.c1)) ELSE ((rt0.c0)IS NOT(rt0.c0)) END DESC  NULLS FIRST, CAST(((rt0.c2)|(t0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((0X347236e8)GLOB(rt0.c1)) IN ())) ORDER BY CASE WHEN (t0.c51 IN (rt0.c2)) THEN (+ (rt0.c1)) ELSE ((rt0.c0)IS NOT(rt0.c0)) END DESC  NULLS FIRST, CAST(((rt0.c2)|(t0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0X347236e8)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN (t0.c51 IN (rt0.c2)) THEN (+ (rt0.c1)) ELSE ((rt0.c0)IS NOT(rt0.c0)) END DESC  NULLS FIRST, CAST(((rt0.c2)|(t0.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((((0X347236e8)GLOB(rt0.c1)) IN ())) ORDER BY CASE WHEN (t0.c51 IN (rt0.c2)) THEN (+ (rt0.c1)) ELSE ((rt0.c0)IS NOT(rt0.c0)) END DESC  NULLS FIRST, CAST(((rt0.c2)|(t0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((+ (rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT ((+ (rt1.c0)))));
SELECT * FROM rt1 WHERE (((rt1.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c1) NOTNULL) COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c1) IS FALSE) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END ELSE (((rt0.c0, rt1.c2, rt0.c0, '-1e500', rt1.c3)) NOT BETWEEN ((0xffffffff97ca030d, rt1.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c3, '', rt0.c0))) END WHERE ('0.8349704093789382' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('0.8349704093789382' COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c1) IS FALSE) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END ELSE (((rt0.c0, rt1.c2, rt0.c0, '-1e500', rt1.c3)) NOT BETWEEN ((0xffffffff97ca030d, rt1.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c3, '', rt0.c0))) END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c1) IS FALSE) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END ELSE (((rt0.c0, rt1.c2, rt0.c0, '-1e500', rt1.c3)) NOT BETWEEN ((0xffffffff97ca030d, rt1.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c3, '', rt0.c0))) END WHERE ('0.8349704093789382' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('0.8349704093789382' COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c1) IS FALSE) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END ELSE (((rt0.c0, rt1.c2, rt0.c0, '-1e500', rt1.c3)) NOT BETWEEN ((0xffffffff97ca030d, rt1.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c3, '', rt0.c0))) END);
SELECT ALL * FROM rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c1) IS FALSE) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt1.c2 ELSE rt0.c1 END ELSE (((rt0.c0, rt1.c2, rt0.c0, '-1e500', rt1.c3)) NOT BETWEEN ((0xffffffff97ca030d, rt1.c2, rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt1.c1, rt1.c3, '', rt0.c0))) END WHERE ('0.8349704093789382' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((-1778813430 IN ()));
SELECT SUM(count) FROM (SELECT (((-1778813430 IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((-1778813430 IN ()));
SELECT SUM(count) FROM (SELECT (((-1778813430 IN ())) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((-1778813430 IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(t0.c51 AS BLOB)) NOT BETWEEN ((((rt1.c3))>((rt1.c1)))) AND (((rt1.c3)%(t0.c0))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 END) BETWEEN (((rt1.c0)>=(rt1.c3))) AND (((rt1.c2) NOT NULL))) DESC, NULL COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS BLOB)) NOT BETWEEN ((((rt1.c3))>((rt1.c1)))) AND (((rt1.c3)%(t0.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 END) BETWEEN (((rt1.c0)>=(rt1.c3))) AND (((rt1.c2) NOT NULL))) DESC, NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(t0.c51 AS BLOB)) NOT BETWEEN ((((rt1.c3))>((rt1.c1)))) AND (((rt1.c3)%(t0.c0))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 END) BETWEEN (((rt1.c0)>=(rt1.c3))) AND (((rt1.c2) NOT NULL))) DESC, NULL COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS BLOB)) NOT BETWEEN ((((rt1.c3))>((rt1.c1)))) AND (((rt1.c3)%(t0.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 END) BETWEEN (((rt1.c0)>=(rt1.c3))) AND (((rt1.c2) NOT NULL))) DESC, NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((CAST(t0.c51 AS BLOB)) NOT BETWEEN ((((rt1.c3))>((rt1.c1)))) AND (((rt1.c3)%(t0.c0))))) ORDER BY ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 END) BETWEEN (((rt1.c0)>=(rt1.c3))) AND (((rt1.c2) NOT NULL))) DESC, NULL COLLATE BINARY;
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) NOT NULL)) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(x'' AS BLOB))OR(CAST(t0.c0 AS BLOB))))AND(rt0.c2)))AND(CAST(rt0.c0 AS REAL))))OR(((t0.c51)=(rt1.c1)))) WHERE (((rt0.c0)%(((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(x'' AS BLOB))OR(CAST(t0.c0 AS BLOB))))AND(rt0.c2)))AND(CAST(rt0.c0 AS REAL))))OR(((t0.c51)==(rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(x'' AS BLOB))OR(CAST(t0.c0 AS BLOB))))AND(rt0.c2)))AND(CAST(rt0.c0 AS REAL))))OR(((t0.c51)=(rt1.c1)))) WHERE (((rt0.c0)%(((rt0.c2)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)%(((rt0.c2)||(rt0.c2))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(x'' AS BLOB))OR(CAST(t0.c0 AS BLOB))))AND(rt0.c2)))AND(CAST(rt0.c0 AS REAL))))OR(((t0.c51)==(rt1.c1)))));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON ((((((((CAST(x'' AS BLOB))OR(CAST(t0.c0 AS BLOB))))AND(rt0.c2)))AND(CAST(rt0.c0 AS REAL))))OR(((t0.c51)=(rt1.c1)))) WHERE (((rt0.c0)%(((rt0.c2)||(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((rt0.c2, rt1.c0, rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c1) NOTNULL), (rt1.c2 IN ()), 0.418449988855222))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c0, rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c1) NOTNULL), (rt1.c2 IN ()), 0.418449988855222)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((rt0.c2, rt1.c0, rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c1) NOTNULL), (rt1.c2 IN ()), 0.418449988855222))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt1.c0, rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c1) NOTNULL), (rt1.c2 IN ()), 0.418449988855222)))) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((((rt0.c2, rt1.c0, rt0.c2)) BETWEEN ((CAST(rt1.c0 AS BLOB), rt0.c2, json_type(rt1.c0))) AND ((((rt0.c1) NOTNULL), (rt1.c2 IN ()), 0.418449988855222))));
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)+('1e500')))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0.39451412354749393)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)+('1e500')))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0.39451412354749393)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)+('1e500')))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0.39451412354749393)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)+('1e500')))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0.39451412354749393)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c1)+('1e500')))OR(((rt0.c2) IS TRUE))))AND(CAST(rt0.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c2) AND (0.39451412354749393)))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))<<(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))<<(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))<<(t0.c0)));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CAST(CAST(t0.c51 AS NUMERIC) AS REAL) WHERE (((((('l*j', rt1.c1, rt1.c3))>=((NULL, rt1.c3, rt0.c2))))%((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((('l*j', rt1.c1, rt1.c3))>=((NULL, rt1.c3, rt0.c2))))%((+ (rt1.c2))))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON CAST(CAST(t0.c51 AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CAST(CAST(t0.c51 AS NUMERIC) AS REAL) WHERE (((((('l*j', rt1.c1, rt1.c3))>=((NULL, rt1.c3, rt0.c2))))%((+ (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((('l*j', rt1.c1, rt1.c3))>=((NULL, rt1.c3, rt0.c2))))%((+ (rt1.c2))))) IS TRUE)  as count FROM t0, rt1 INNER JOIN rt0 ON CAST(CAST(t0.c51 AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt1 INNER JOIN rt0 ON CAST(CAST(t0.c51 AS NUMERIC) AS REAL) WHERE (((((('l*j', rt1.c1, rt1.c3))>=((NULL, rt1.c3, rt0.c2))))%((+ (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN t0.c0 WHEN 0.8833176473074067 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 END  WHEN (- (0.036554156176645036)) THEN ((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN t0.c0 WHEN 0.8833176473074067 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 END  WHEN (- (0.036554156176645036)) THEN ((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51)) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN t0.c0 WHEN 0.8833176473074067 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 END  WHEN (- (0.036554156176645036)) THEN ((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN t0.c0 WHEN 0.8833176473074067 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 END  WHEN (- (0.036554156176645036)) THEN ((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51)) END) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN t0.c0 WHEN 0.8833176473074067 THEN rt0.c0 WHEN rt1.c1 THEN rt0.c0 END  WHEN (- (0.036554156176645036)) THEN ((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51)) END);
SELECT * FROM rt1, rt0 FULL OUTER JOIN t0 ON HEX(DISTINCT rt1.c0) COLLATE RTRIM WHERE (LIKE(CASE WHEN t0.c0 THEN rt1.c2 WHEN rt0.c1 THEN 0.9411965779434455 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (rt1.c3)))) ORDER BY ((t0.c51) IS TRUE) COLLATE NOCASE  NULLS LAST, (((~ (rt1.c0)))%(((rt1.c2)|(rt0.c1)))) ASC  NULLS FIRST, CASE ((t0.c0)>=(t0.c51))  WHEN ((rt0.c2)<(t0.c51)) THEN (- (rt0.c1)) ELSE ((x'') NOT BETWEEN (rt0.c0) AND (rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN t0.c0 THEN rt1.c2 WHEN rt0.c1 THEN 0.9411965779434455 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (rt1.c3)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON HEX(DISTINCT rt1.c0) COLLATE RTRIM ORDER BY ((t0.c51) IS TRUE) COLLATE NOCASE  NULLS LAST, (((~ (rt1.c0)))%(((rt1.c2)|(rt0.c1)))) ASC  NULLS FIRST, CASE ((t0.c0)>=(t0.c51))  WHEN ((rt0.c2)<(t0.c51)) THEN (- (rt0.c1)) ELSE ((x'') NOT BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT * FROM rt1, rt0 FULL OUTER JOIN t0 ON HEX(DISTINCT rt1.c0) COLLATE RTRIM WHERE (LIKE(CASE WHEN t0.c0 THEN rt1.c2 WHEN rt0.c1 THEN 0.9411965779434455 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (rt1.c3)))) ORDER BY ((t0.c51) IS TRUE) COLLATE NOCASE  NULLS LAST, (((~ (rt1.c0)))%(((rt1.c2)|(rt0.c1)))) ASC  NULLS FIRST, CASE ((t0.c0)>=(t0.c51))  WHEN ((rt0.c2)<(t0.c51)) THEN (- (rt0.c1)) ELSE ((x'') NOT BETWEEN (rt0.c0) AND (rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(CASE WHEN t0.c0 THEN rt1.c2 WHEN rt0.c1 THEN 0.9411965779434455 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (rt1.c3)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON HEX(DISTINCT rt1.c0) COLLATE RTRIM ORDER BY ((t0.c51) IS TRUE) COLLATE NOCASE  NULLS LAST, (((~ (rt1.c0)))%(((rt1.c2)|(rt0.c1)))) ASC  NULLS FIRST, CASE ((t0.c0)>=(t0.c51))  WHEN ((rt0.c2)<(t0.c51)) THEN (- (rt0.c1)) ELSE ((x'') NOT BETWEEN (rt0.c0) AND (rt1.c0)) END);
SELECT * FROM rt1, rt0 FULL OUTER JOIN t0 ON HEX(DISTINCT rt1.c0) COLLATE RTRIM WHERE (LIKE(CASE WHEN t0.c0 THEN rt1.c2 WHEN rt0.c1 THEN 0.9411965779434455 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END, (- (rt1.c3)))) ORDER BY ((t0.c51) IS TRUE) COLLATE NOCASE  NULLS LAST, (((~ (rt1.c0)))%(((rt1.c2)|(rt0.c1)))) ASC  NULLS FIRST, CASE ((t0.c0)>=(t0.c51))  WHEN ((rt0.c2)<(t0.c51)) THEN (- (rt0.c1)) ELSE ((x'') NOT BETWEEN (rt0.c0) AND (rt1.c0)) END;
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)/(rt1.c2))  WHEN SQLITE_VERSION() THEN (NOT (rt1.c0)) WHEN x'e7d142fa' THEN CAST('-Wꃺ*c~8G' AS NUMERIC) WHEN ((0Xffffffffd012e4b4) IS TRUE) THEN ('-2000878492' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c2))  WHEN SQLITE_VERSION() THEN (NOT (rt1.c0)) WHEN x'e7d142fa' THEN CAST('-Wꃺ*c~8G' AS NUMERIC) WHEN ((0xffffffffd012e4b4) IS TRUE) THEN ('-2000878492' IN ()) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)/(rt1.c2))  WHEN SQLITE_VERSION() THEN (NOT (rt1.c0)) WHEN x'e7d142fa' THEN CAST('-Wꃺ*c~8G' AS NUMERIC) WHEN ((0Xffffffffd012e4b4) IS TRUE) THEN ('-2000878492' IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c2)/(rt1.c2))  WHEN SQLITE_VERSION() THEN (NOT (rt1.c0)) WHEN x'e7d142fa' THEN CAST('-Wꃺ*c~8G' AS NUMERIC) WHEN ((0xffffffffd012e4b4) IS TRUE) THEN ('-2000878492' IN ()) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (CASE ((rt1.c2)/(rt1.c2))  WHEN SQLITE_VERSION() THEN (NOT (rt1.c0)) WHEN x'e7d142fa' THEN CAST('-Wꃺ*c~8G' AS NUMERIC) WHEN ((0Xffffffffd012e4b4) IS TRUE) THEN ('-2000878492' IN ()) END);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN '' WHEN t0.c51 THEN rt0.c2 WHEN rt0.c1 THEN t0.c51 END)IS NOT(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c51 THEN '' WHEN t0.c51 THEN rt0.c2 WHEN rt0.c1 THEN t0.c51 END)IS NOT(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN '' WHEN t0.c51 THEN rt0.c2 WHEN rt0.c1 THEN t0.c51 END)IS NOT(((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c51 THEN '' WHEN t0.c51 THEN rt0.c2 WHEN rt0.c1 THEN t0.c51 END)IS NOT(((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN '' WHEN t0.c51 THEN rt0.c2 WHEN rt0.c1 THEN t0.c51 END)IS NOT(((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY (NOT (t0.c0)) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((((((((((rt0.c0)AND(t0.c0)))AND(rt1.c1)))OR((((rt1.c1, NULL, rt0.c2)) NOT BETWEEN ((0.756063940165443, '-133905647', t0.c0)) AND ((rt1.c0, rt0.c0, rt0.c0))))))AND(((rt0.c0) NOT BETWEEN (x'') AND (0.9740804345378802)))))OR(t0.c0)))OR((((rt0.c1, rt1.c2, rt1.c3)) BETWEEN ((t0.c51, '', rt0.c1)) AND ((rt1.c3, rt0.c0, rt0.c2))))) INNER JOIN rt0 ON (((rt0.c1, rt0.c2, -784864154)) NOT BETWEEN ((x'', (rt1.c2 IN ()), HEX(rt1.c3))) AND ((rt1.c1, t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) WHERE (((((((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)AND(((((rt0.c1)OR(t0.c0)))OR(t0.c51)))))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))))OR((+ (t0.c0)))))OR(t0.c51 COLLATE NOCASE))) ORDER BY ((((((((('seconds')AND(t0.c0)))AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)AND(((((rt0.c1)OR(t0.c0)))OR(t0.c51)))))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))))OR((+ (t0.c0)))))OR(t0.c51 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((((((((((rt0.c0)AND(t0.c0)))AND(rt1.c1)))OR((((rt1.c1, NULL, rt0.c2)) NOT BETWEEN ((0.756063940165443, '-133905647', t0.c0)) AND ((rt1.c0, rt0.c0, rt0.c0))))))AND(((rt0.c0) NOT BETWEEN (x'') AND (0.9740804345378802)))))OR(t0.c0)))OR((((rt0.c1, rt1.c2, rt1.c3)) BETWEEN ((t0.c51, '', rt0.c1)) AND ((rt1.c3, rt0.c0, rt0.c2))))) INNER JOIN rt0 ON (((rt0.c1, rt0.c2, -784864154)) NOT BETWEEN ((x'', (rt1.c2 IN ()), HEX(rt1.c3))) AND ((rt1.c1, t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) ORDER BY ((((((((('seconds')AND(t0.c0)))AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((((((((((rt0.c0)AND(t0.c0)))AND(rt1.c1)))OR((((rt1.c1, NULL, rt0.c2)) NOT BETWEEN ((0.756063940165443, '-133905647', t0.c0)) AND ((rt1.c0, rt0.c0, rt0.c0))))))AND(((rt0.c0) NOT BETWEEN (x'') AND (0.9740804345378802)))))OR(t0.c0)))OR((((rt0.c1, rt1.c2, rt1.c3)) BETWEEN ((t0.c51, '', rt0.c1)) AND ((rt1.c3, rt0.c0, rt0.c2))))) INNER JOIN rt0 ON (((rt0.c1, rt0.c2, -784864154)) NOT BETWEEN ((x'', (rt1.c2 IN ()), HEX(rt1.c3))) AND ((rt1.c1, t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) WHERE (((((((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)AND(((((rt0.c1)OR(t0.c0)))OR(t0.c51)))))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))))OR((+ (t0.c0)))))OR(t0.c51 COLLATE NOCASE))) ORDER BY ((((((((('seconds')AND(t0.c0)))AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)AND(((((rt0.c1)OR(t0.c0)))OR(t0.c51)))))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))))OR((+ (t0.c0)))))OR(t0.c51 COLLATE NOCASE))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((((((((((rt0.c0)AND(t0.c0)))AND(rt1.c1)))OR((((rt1.c1, NULL, rt0.c2)) NOT BETWEEN ((0.756063940165443, '-133905647', t0.c0)) AND ((rt1.c0, rt0.c0, rt0.c0))))))AND(((rt0.c0) NOT BETWEEN (x'') AND (0.9740804345378802)))))OR(t0.c0)))OR((((rt0.c1, rt1.c2, rt1.c3)) BETWEEN ((t0.c51, '', rt0.c1)) AND ((rt1.c3, rt0.c0, rt0.c2))))) INNER JOIN rt0 ON (((rt0.c1, rt0.c2, -784864154)) NOT BETWEEN ((x'', (rt1.c2 IN ()), HEX(rt1.c3))) AND ((rt1.c1, t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) ORDER BY ((((((((('seconds')AND(t0.c0)))AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON ((((((((((((rt0.c0)AND(t0.c0)))AND(rt1.c1)))OR((((rt1.c1, NULL, rt0.c2)) NOT BETWEEN ((0.756063940165443, '-133905647', t0.c0)) AND ((rt1.c0, rt0.c0, rt0.c0))))))AND(((rt0.c0) NOT BETWEEN (x'') AND (0.9740804345378802)))))OR(t0.c0)))OR((((rt0.c1, rt1.c2, rt1.c3)) BETWEEN ((t0.c51, '', rt0.c1)) AND ((rt1.c3, rt0.c0, rt0.c2))))) INNER JOIN rt0 ON (((rt0.c1, rt0.c2, -784864154)) NOT BETWEEN ((x'', (rt1.c2 IN ()), HEX(rt1.c3))) AND ((rt1.c1, t0.c0 COLLATE RTRIM, ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0))))) WHERE (((((((((CASE rt1.c3  WHEN rt1.c2 THEN rt0.c2 END)AND(((((rt0.c1)OR(t0.c0)))OR(t0.c51)))))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))))OR((+ (t0.c0)))))OR(t0.c51 COLLATE NOCASE))) ORDER BY ((((((((('seconds')AND(t0.c0)))AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c2)) IN ())  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE ((+ (((t0.c51) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c51) IS FALSE)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((+ (((t0.c51) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c51) IS FALSE)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((+ (((t0.c51) IS FALSE))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((((((ROUND(rt1.c1, rt1.c2))AND(((NULL)+(rt1.c0)))))OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c3))<>((rt1.c3, rt1.c3, rt1.c2))))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((((((ROUND(rt1.c1, rt1.c2))AND(((NULL)+(rt1.c0)))))OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c3))<>((rt1.c3, rt1.c3, rt1.c2))))))AND(rt1.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((((((ROUND(rt1.c1, rt1.c2))AND(((NULL)+(rt1.c0)))))OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c3))<>((rt1.c3, rt1.c3, rt1.c2))))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((((((((ROUND(rt1.c1, rt1.c2))AND(((NULL)+(rt1.c0)))))OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c3))<>((rt1.c3, rt1.c3, rt1.c2))))))AND(rt1.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((((((((ROUND(rt1.c1, rt1.c2))AND(((NULL)+(rt1.c0)))))OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c2)))))AND((((rt1.c2, rt1.c0, rt1.c3))<>((rt1.c3, rt1.c3, rt1.c2))))))AND(rt1.c2)) DESC  NULLS LAST;
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((((NULL) IS TRUE)))==(((((rt0.c0))>((rt0.c1)))))) INNER JOIN t0 ON (((x'')) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE RTRIM))) WHERE (UNLIKELY(rt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((NULL) IS TRUE)))==(((((rt0.c0))>((rt0.c1)))))) INNER JOIN t0 ON (((x'')) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE RTRIM))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((((NULL) IS TRUE)))==(((((rt0.c0))>((rt0.c1)))))) INNER JOIN t0 ON (((x'')) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE RTRIM))) WHERE (UNLIKELY(rt1.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt1.c0) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((((NULL) IS TRUE)))==(((((rt0.c0))>((rt0.c1)))))) INNER JOIN t0 ON (((x'')) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE RTRIM))));
SELECT * FROM rt1 LEFT OUTER JOIN rt0 ON (((((NULL) IS TRUE)))==(((((rt0.c0))>((rt0.c1)))))) INNER JOIN t0 ON (((x'')) BETWEEN ((rt0.c1)) AND ((rt1.c2 COLLATE RTRIM))) WHERE (UNLIKELY(rt1.c0) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((((t0.c51)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((rt0.c0)GLOB(t0.c0))))) ORDER BY CHAR(rt0.c2, t0.c0, t0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((((t0.c51)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((rt0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CHAR(rt0.c2, t0.c0, t0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((((t0.c51)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((rt0.c0)GLOB(t0.c0))))) ORDER BY CHAR(rt0.c2, t0.c0, t0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((((t0.c51)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((rt0.c0)GLOB(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CHAR(rt0.c2, t0.c0, t0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE t0.c0  WHEN t0.c51 THEN t0.c51 END) BETWEEN ((((t0.c51)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) AND (((rt0.c0)GLOB(t0.c0))))) ORDER BY CHAR(rt0.c2, t0.c0, t0.c0) COLLATE RTRIM DESC;
SELECT * FROM rt0, rt1 WHERE (((((rt0.c2)GLOB(rt0.c2))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c2)AND(NULL))))) ORDER BY ((((((-1818213209)OR(rt1.c3)))AND(rt0.c2)))<((~ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c2))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c2)AND(NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((-1818213209)OR(rt1.c3)))AND(rt0.c2)))<((~ (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c2)GLOB(rt0.c2))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c2)AND(NULL))))) ORDER BY ((((((-1818213209)OR(rt1.c3)))AND(rt0.c2)))<((~ (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(rt0.c2))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c2)AND(NULL))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((((-1818213209)OR(rt1.c3)))AND(rt0.c2)))<((~ (rt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt0.c2)GLOB(rt0.c2))) BETWEEN (((rt0.c2)LIKE(rt0.c1))) AND (((rt0.c2)AND(NULL))))) ORDER BY ((((((-1818213209)OR(rt1.c3)))AND(rt0.c2)))<((~ (rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((rt1.c2 IN (rt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON LIKE(((x'538e') IS FALSE), (((rt0.c0, rt1.c3, rt1.c0))=((NULL, rt1.c1, rt1.c0))), '0') WHERE (((((rt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON LIKE(((x'538e') IS FALSE), (((rt0.c0, rt1.c3, rt1.c0))==((NULL, rt1.c1, rt1.c0))), '0'));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON LIKE(((x'538e') IS FALSE), (((rt0.c0, rt1.c3, rt1.c0))=((NULL, rt1.c1, rt1.c0))), '0') WHERE (((((rt0.c0) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) ISNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN rt1 ON LIKE(((x'538e') IS FALSE), (((rt0.c0, rt1.c3, rt1.c0))==((NULL, rt1.c1, rt1.c0))), '0'));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON LIKE(((x'538e') IS FALSE), (((rt0.c0, rt1.c3, rt1.c0))=((NULL, rt1.c1, rt1.c0))), '0') WHERE (((((rt0.c0) NOTNULL)) ISNULL));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)) ORDER BY (~ (CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, (((NOT (-608679657)))-(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (~ (CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, (((NOT (-608679657)))-(t0.c0)));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)) ORDER BY (~ (CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, (((NOT (-608679657)))-(t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (~ (CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, (((NOT (-608679657)))-(t0.c0)));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) ISNULL)) ORDER BY (~ (CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, (((NOT (-608679657)))-(t0.c0));
SELECT * FROM rt1 WHERE (((((UPPER(rt1.c2))AND(((rt1.c3)LIKE(rt1.c1)))))AND((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt1.c2))AND(((rt1.c3)LIKE(rt1.c1)))))AND((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((UPPER(rt1.c2))AND(((rt1.c3)LIKE(rt1.c1)))))AND((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(rt1.c2))AND(((rt1.c3)LIKE(rt1.c1)))))AND((NOT (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((UPPER(rt1.c2))AND(((rt1.c3)LIKE(rt1.c1)))))AND((NOT (rt1.c3)))));
SELECT * FROM t0 WHERE (((((t0.c0)<<(t0.c0)))OR(NULL))) ORDER BY ((t0.c51) NOT BETWEEN ('-745379760') AND (t0.c51)) COLLATE RTRIM DESC  NULLS LAST, (((- (NULL))) BETWEEN (0.6128456808392575) AND ((- (t0.c51)))) ASC  NULLS FIRST, UNLIKELY(DISTINCT (('-736469899')LIKE(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c0)))OR(NULL))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c51) NOT BETWEEN ('-745379760') AND (t0.c51)) COLLATE RTRIM DESC  NULLS LAST, (((- (NULL))) BETWEEN (0.6128456808392575) AND ((- (t0.c51)))) ASC  NULLS FIRST, UNLIKELY(DISTINCT (('-736469899')LIKE(t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0)<<(t0.c0)))OR(NULL))) ORDER BY ((t0.c51) NOT BETWEEN ('-745379760') AND (t0.c51)) COLLATE RTRIM DESC  NULLS LAST, (((- (NULL))) BETWEEN (0.6128456808392575) AND ((- (t0.c51)))) ASC  NULLS FIRST, UNLIKELY(DISTINCT (('-736469899')LIKE(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<<(t0.c0)))OR(NULL))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c51) NOT BETWEEN ('-745379760') AND (t0.c51)) COLLATE RTRIM DESC  NULLS LAST, (((- (NULL))) BETWEEN (0.6128456808392575) AND ((- (t0.c51)))) ASC  NULLS FIRST, UNLIKELY(DISTINCT (('-736469899')LIKE(t0.c0))));
SELECT * FROM t0 WHERE (((((t0.c0)<<(t0.c0)))OR(NULL))) ORDER BY ((t0.c51) NOT BETWEEN ('-745379760') AND (t0.c51)) COLLATE RTRIM DESC  NULLS LAST, (((- (NULL))) BETWEEN (0.6128456808392575) AND ((- (t0.c51)))) ASC  NULLS FIRST, UNLIKELY(DISTINCT (('-736469899')LIKE(t0.c0)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((NOT (rt0.c1)))) WHERE (LIKE((((rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c1))), CASE WHEN rt1.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LIKE((((rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c1))), CASE WHEN rt1.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((NOT (rt0.c1)))) WHERE (LIKE((((rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c1))), CASE WHEN rt1.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LIKE((((rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c1))), CASE WHEN rt1.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((NOT (rt0.c1)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON (~ ((NOT (rt0.c1)))) WHERE (LIKE((((rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c1))), CASE WHEN rt1.c2 THEN rt0.c1 END));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON t0.c0);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON t0.c0 WHERE (((t0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY);
SELECT * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c2 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((CAST(rt1.c2 AS INTEGER) IN ()));
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)<=(rt1.c1))) NOT BETWEEN ((+ (0.9652916759337953))) AND (STRFTIME(rt1.c2, rt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<=(rt1.c1))) NOT BETWEEN ((+ (0.9652916759337953))) AND (STRFTIME(rt1.c2, rt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)<=(rt1.c1))) NOT BETWEEN ((+ (0.9652916759337953))) AND (STRFTIME(rt1.c2, rt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)<=(rt1.c1))) NOT BETWEEN ((+ (0.9652916759337953))) AND (STRFTIME(rt1.c2, rt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)<=(rt1.c1))) NOT BETWEEN ((+ (0.9652916759337953))) AND (STRFTIME(rt1.c2, rt1.c0, rt1.c3))));
SELECT * FROM t0, rt1 WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END ELSE (((t0.c51))<((t0.c51))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END ELSE (((t0.c51))<((t0.c51))) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END ELSE (((t0.c51))<((t0.c51))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END ELSE (((t0.c51))<((t0.c51))) END) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (CASE WHEN rt1.c0 THEN CASE WHEN rt1.c0 THEN t0.c0 WHEN rt1.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c51 WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END ELSE (((t0.c51))<((t0.c51))) END);
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((rt0.c0) NOTNULL) COLLATE NOCASE;
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON (((((t0.c51)&(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (rt1.c3 IN (rt0.c1))))<=(((- (rt1.c2)), '134655935', LOWER(DISTINCT rt1.c1)))) WHERE (((((((rt0.c0)AND(0.2658586514847854)))OR(rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND ((((rt0.c0, t0.c0, rt0.c2))<((rt1.c2, t0.c0, t0.c0)))))) ORDER BY ((rt1.c0)LIKE((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(0.2658586514847854)))OR(rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND ((((rt0.c0, t0.c0, rt0.c2))<((rt1.c2, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON (((((t0.c51)&(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (rt1.c3 IN (rt0.c1))))<=(((- (rt1.c2)), '134655935', LOWER(DISTINCT rt1.c1)))) ORDER BY ((rt1.c0)LIKE((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON (((((t0.c51)&(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (rt1.c3 IN (rt0.c1))))<=(((- (rt1.c2)), '134655935', LOWER(DISTINCT rt1.c1)))) WHERE (((((((rt0.c0)AND(0.2658586514847854)))OR(rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND ((((rt0.c0, t0.c0, rt0.c2))<((rt1.c2, t0.c0, t0.c0)))))) ORDER BY ((rt1.c0)LIKE((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(0.2658586514847854)))OR(rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND ((((rt0.c0, t0.c0, rt0.c2))<((rt1.c2, t0.c0, t0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON (((((t0.c51)&(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (rt1.c3 IN (rt0.c1))))<=(((- (rt1.c2)), '134655935', LOWER(DISTINCT rt1.c1)))) ORDER BY ((rt1.c0)LIKE((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN t0 ON '' FULL OUTER JOIN rt1 ON (((((t0.c51)&(rt0.c2)), ((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), (rt1.c3 IN (rt0.c1))))<=(((- (rt1.c2)), '134655935', LOWER(DISTINCT rt1.c1)))) WHERE (((((((rt0.c0)AND(0.2658586514847854)))OR(rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c2 END) AND ((((rt0.c0, t0.c0, rt0.c2))<((rt1.c2, t0.c0, t0.c0)))))) ORDER BY ((rt1.c0)LIKE((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2))) IS TRUE));
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((t0.c0) BETWEEN (((x'') NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) ORDER BY ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((x'') NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((NULL) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((t0.c0) BETWEEN (((x'') NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) ORDER BY ((NULL) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0) BETWEEN (((x'') NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY ((NULL) IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (((t0.c0) BETWEEN (((x'') NOT NULL)) AND ((((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c1)))))) ORDER BY ((NULL) IS FALSE) DESC;
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((rt1.c0 COLLATE RTRIM))==((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE RTRIM))=((rt0.c0)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((rt1.c0 COLLATE RTRIM))==((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 COLLATE RTRIM))=((rt0.c0)))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((rt1.c0 COLLATE RTRIM))==((rt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE WHERE (((rt1.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<>(rt1.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE WHERE (((rt1.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt0.c2)<>(rt1.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON rt1.c3 RIGHT OUTER JOIN rt1 ON CAST(rt1.c0 AS REAL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (((t0.c51)GLOB(rt0.c2)))) WHERE ((((t0.c0)AND(rt0.c0)) IN ('-441015821'))) ORDER BY rt0.c1 DESC  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)AND(rt0.c0)) IN ('-441015821'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (((t0.c51)GLOB(rt0.c2)))) ORDER BY rt0.c1 DESC  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (((t0.c51)GLOB(rt0.c2)))) WHERE ((((t0.c0)AND(rt0.c0)) IN ('-441015821'))) ORDER BY rt0.c1 DESC  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)AND(rt0.c0)) IN ('-441015821'))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON (~ (((t0.c51)GLOB(rt0.c2)))) ORDER BY rt0.c1 DESC  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN rt0 ON (~ (((t0.c51)GLOB(rt0.c2)))) WHERE ((((t0.c0)AND(rt0.c0)) IN ('-441015821'))) ORDER BY rt0.c1 DESC  NULLS LAST, (NOT (rt0.c0)) COLLATE BINARY COLLATE BINARY ASC;
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)|(rt1.c3)))OR(LOWER(rt1.c2))))AND(rt0.c2)))AND(((((NULL)AND(rt1.c1)))OR(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c1)) BETWEEN (((rt0.c1 IN (rt1.c3)))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt1.c1, rt0.c1)) AND (('1373651560', rt1.c1, rt1.c2)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)|(rt1.c3)))OR(LOWER(rt1.c2))))AND(rt0.c2)))AND(((((NULL)AND(rt1.c1)))OR(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1)) BETWEEN (((rt0.c1 IN (rt1.c3)))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt1.c1, rt0.c1)) AND (('1373651560', rt1.c1, rt1.c2)))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)|(rt1.c3)))OR(LOWER(rt1.c2))))AND(rt0.c2)))AND(((((NULL)AND(rt1.c1)))OR(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c1)) BETWEEN (((rt0.c1 IN (rt1.c3)))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt1.c1, rt0.c1)) AND (('1373651560', rt1.c1, rt1.c2)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)|(rt1.c3)))OR(LOWER(rt1.c2))))AND(rt0.c2)))AND(((((NULL)AND(rt1.c1)))OR(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c1)) BETWEEN (((rt0.c1 IN (rt1.c3)))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt1.c1, rt0.c1)) AND (('1373651560', rt1.c1, rt1.c2)))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((((((rt1.c2)|(rt1.c3)))OR(LOWER(rt1.c2))))AND(rt0.c2)))AND(((((NULL)AND(rt1.c1)))OR(rt0.c0)))))OR(rt0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c1)) BETWEEN (((rt0.c1 IN (rt1.c3)))) AND (((((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt1.c1, rt0.c1)) AND (('1373651560', rt1.c1, rt1.c2)))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt0.c0)==(x'05d5')))AND(rt1.c3 COLLATE RTRIM)))OR(x'fa020b97')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)=(x'05d5')))AND(rt1.c3 COLLATE RTRIM)))OR(x'fa020b97'))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt0.c0)==(x'05d5')))AND(rt1.c3 COLLATE RTRIM)))OR(x'fa020b97')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)=(x'05d5')))AND(rt1.c3 COLLATE RTRIM)))OR(x'fa020b97'))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((rt0.c0)==(x'05d5')))AND(rt1.c3 COLLATE RTRIM)))OR(x'fa020b97')));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)) COLLATE NOCASE WHERE (UPPER(DISTINCT ((rt0.c0)||(rt0.c0)))) ORDER BY (((ABS(t0.c51)))>((((t0.c51) NOT NULL)))), (+ (((t0.c51)*(rt0.c0))))  NULLS FIRST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (0Xffffffffac292129) AND (t0.c51)) WHEN t0.c51 THEN (((t0.c0, rt0.c0, NULL))==((rt0.c0, t0.c0, -1215193118))) WHEN (((t0.c0, x'', rt0.c0)) BETWEEN ((t0.c0, rt0.c2, 0.6918533134261668)) AND ((1.103934832E9, NULL, '2085652028'))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c0)||(rt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)) COLLATE NOCASE ORDER BY (((ABS(t0.c51)))>((((t0.c51) NOT NULL)))), (+ (((t0.c51)*(rt0.c0))))  NULLS FIRST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (0xffffffffac292129) AND (t0.c51)) WHEN t0.c51 THEN (((t0.c0, rt0.c0, NULL))=((rt0.c0, t0.c0, -1215193118))) WHEN (((t0.c0, x'', rt0.c0)) BETWEEN ((t0.c0, rt0.c2, 0.6918533134261668)) AND ((1.103934832E9, NULL, '2085652028'))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)) COLLATE NOCASE WHERE (UPPER(DISTINCT ((rt0.c0)||(rt0.c0)))) ORDER BY (((ABS(t0.c51)))>((((t0.c51) NOT NULL)))), (+ (((t0.c51)*(rt0.c0))))  NULLS FIRST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (0Xffffffffac292129) AND (t0.c51)) WHEN t0.c51 THEN (((t0.c0, rt0.c0, NULL))==((rt0.c0, t0.c0, -1215193118))) WHEN (((t0.c0, x'', rt0.c0)) BETWEEN ((t0.c0, rt0.c2, 0.6918533134261668)) AND ((1.103934832E9, NULL, '2085652028'))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((rt0.c0)||(rt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)) COLLATE NOCASE ORDER BY (((ABS(t0.c51)))>((((t0.c51) NOT NULL)))), (+ (((t0.c51)*(rt0.c0))))  NULLS FIRST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (0xffffffffac292129) AND (t0.c51)) WHEN t0.c51 THEN (((t0.c0, rt0.c0, NULL))=((rt0.c0, t0.c0, -1215193118))) WHEN (((t0.c0, x'', rt0.c0)) BETWEEN ((t0.c0, rt0.c2, 0.6918533134261668)) AND ((1.103934832E9, NULL, '2085652028'))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((t0.c51) NOT BETWEEN (t0.c51) AND (t0.c0)) COLLATE NOCASE WHERE (UPPER(DISTINCT ((rt0.c0)||(rt0.c0)))) ORDER BY (((ABS(t0.c51)))>((((t0.c51) NOT NULL)))), (+ (((t0.c51)*(rt0.c0))))  NULLS FIRST, CASE WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN ((rt0.c0) BETWEEN (0Xffffffffac292129) AND (t0.c51)) WHEN t0.c51 THEN (((t0.c0, rt0.c0, NULL))==((rt0.c0, t0.c0, -1215193118))) WHEN (((t0.c0, x'', rt0.c0)) BETWEEN ((t0.c0, rt0.c2, 0.6918533134261668)) AND ((1.103934832E9, NULL, '2085652028'))) THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) ELSE CAST(rt0.c2 AS REAL) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(0.46782509499152114)))OR(t0.c51)) AS INTEGER)) ORDER BY (((('-2025551658') NOT BETWEEN (t0.c51) AND (t0.c0))) IS FALSE), ((((((t0.c51)AND(t0.c0)))AND(t0.c51)))-(GLOB(t0.c51, t0.c51))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(0.46782509499152114)))OR(t0.c51)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((('-2025551658') NOT BETWEEN (t0.c51) AND (t0.c0))) IS FALSE), ((((((t0.c51)AND(t0.c0)))AND(t0.c51)))-(GLOB(t0.c51, t0.c51))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(0.46782509499152114)))OR(t0.c51)) AS INTEGER)) ORDER BY (((('-2025551658') NOT BETWEEN (t0.c51) AND (t0.c0))) IS FALSE), ((((((t0.c51)AND(t0.c0)))AND(t0.c51)))-(GLOB(t0.c51, t0.c51))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c0)AND(0.46782509499152114)))OR(t0.c51)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (((('-2025551658') NOT BETWEEN (t0.c51) AND (t0.c0))) IS FALSE), ((((((t0.c51)AND(t0.c0)))AND(t0.c51)))-(GLOB(t0.c51, t0.c51))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(((((t0.c0)AND(0.46782509499152114)))OR(t0.c51)) AS INTEGER)) ORDER BY (((('-2025551658') NOT BETWEEN (t0.c51) AND (t0.c0))) IS FALSE), ((((((t0.c51)AND(t0.c0)))AND(t0.c51)))-(GLOB(t0.c51, t0.c51))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (1995761479);
SELECT SUM(count) FROM (SELECT ALL ((1995761479) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (1995761479);
SELECT SUM(count) FROM (SELECT ALL ((1995761479) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (1995761479);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (NULL);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN DATETIME(rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1) THEN NULL COLLATE NOCASE WHEN ((((rt0.c2)AND('EY[o|^m<')))OR(rt1.c0)) THEN LIKELY(rt1.c1) WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE '-34234118' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATETIME(rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1) THEN NULL COLLATE NOCASE WHEN ((((rt0.c2)AND('EY[o|^m<')))OR(rt1.c0)) THEN LIKELY(rt1.c1) WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE '-34234118' END END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN DATETIME(rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1) THEN NULL COLLATE NOCASE WHEN ((((rt0.c2)AND('EY[o|^m<')))OR(rt1.c0)) THEN LIKELY(rt1.c1) WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE '-34234118' END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN DATETIME(rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1) THEN NULL COLLATE NOCASE WHEN ((((rt0.c2)AND('EY[o|^m<')))OR(rt1.c0)) THEN LIKELY(rt1.c1) WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE '-34234118' END END) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE WHEN DATETIME(rt1.c0, rt1.c0, rt0.c2, rt0.c2, rt0.c1) THEN NULL COLLATE NOCASE WHEN ((((rt0.c2)AND('EY[o|^m<')))OR(rt1.c0)) THEN LIKELY(rt1.c1) WHEN (- (rt1.c2)) THEN CASE WHEN rt1.c0 THEN rt1.c3 ELSE '-34234118' END END);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (('-1901052160')) AND (((((t0.c51))==((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-1901052160')) AND (((((t0.c51))==((rt0.c0))))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (('-1901052160')) AND (((((t0.c51))==((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN (('-1901052160')) AND (((((t0.c51))==((rt0.c0))))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN (('-1901052160')) AND (((((t0.c51))==((rt0.c0)))))));
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND ('-1901052160'))) BETWEEN (((rt0.c1)LIKE(t0.c51))) AND (rt1.c0)) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND ('-1901052160'))) BETWEEN (((rt0.c1)LIKE(t0.c51))) AND (rt1.c0)));
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND ('-1901052160'))) BETWEEN (((rt0.c1)LIKE(t0.c51))) AND (rt1.c0)) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND ('-1901052160'))) BETWEEN (((rt0.c1)LIKE(t0.c51))) AND (rt1.c0)));
SELECT * FROM t0, rt1 FULL OUTER JOIN rt0 ON ((((rt1.c1) BETWEEN (rt1.c0) AND ('-1901052160'))) BETWEEN (((rt0.c1)LIKE(t0.c51))) AND (rt1.c0)) WHERE (SQLITE_SOURCE_ID());
SELECT * FROM rt0, rt1, t0 WHERE ((((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((json_extract(t0.c0, rt0.c1), x'', ((rt1.c2)LIKE(0.11366239026671676)))) AND (((~ (t0.c0)), (+ (t0.c51)), ((0.729551445317533)<(rt1.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt1.c1 END)) AND ((UPPER(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((json_extract(t0.c0, rt0.c1), x'', ((rt1.c2)LIKE(0.11366239026671676)))) AND (((~ (t0.c0)), (+ (t0.c51)), ((0.729551445317533)<(rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt0.c2)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt1.c1 END)) AND ((UPPER(rt1.c3))))  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE ((((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((json_extract(t0.c0, rt0.c1), x'', ((rt1.c2)LIKE(0.11366239026671676)))) AND (((~ (t0.c0)), (+ (t0.c51)), ((0.729551445317533)<(rt1.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt1.c1 END)) AND ((UPPER(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((json_extract(t0.c0, rt0.c1), x'', ((rt1.c2)LIKE(0.11366239026671676)))) AND (((~ (t0.c0)), (+ (t0.c51)), ((0.729551445317533)<(rt1.c1)))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY (((rt0.c2)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt1.c1 END)) AND ((UPPER(rt1.c3))))  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE ((((t0.c0, rt1.c1, rt1.c0)) BETWEEN ((json_extract(t0.c0, rt0.c1), x'', ((rt1.c2)LIKE(0.11366239026671676)))) AND (((~ (t0.c0)), (+ (t0.c51)), ((0.729551445317533)<(rt1.c1)))))) ORDER BY (((rt0.c2)) BETWEEN ((CASE NULL  WHEN rt1.c2 THEN rt1.c1 END)) AND ((UPPER(rt1.c3))))  NULLS LAST;
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt0.c1)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt0.c1)GLOB(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)GLOB(rt0.c1)) IN ())) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((rt0.c1)GLOB(rt0.c1)) IN ()));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))-(((NULL) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))-(((NULL) BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))-(((NULL) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2 IN ()))-(((NULL) BETWEEN (rt1.c3) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c2 IN ()))-(((NULL) BETWEEN (rt1.c3) AND (rt1.c1))))) ORDER BY (NOT (rt1.c2)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (-1803256256) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS FIRST, ((((rt1.c2)LIKE(rt0.c2)))AND(((rt0.c2) NOTNULL))) DESC, ((rt0.c2)<>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1803256256) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS FIRST, ((((rt1.c2)LIKE(rt0.c2)))AND(((rt0.c2) NOTNULL))) DESC, ((rt0.c2)!=(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (-1803256256) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS FIRST, ((((rt1.c2)LIKE(rt0.c2)))AND(((rt0.c2) NOTNULL))) DESC, ((rt0.c2)<>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1803256256) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS FIRST, ((((rt1.c2)LIKE(rt0.c2)))AND(((rt0.c2) NOTNULL))) DESC, ((rt0.c2)!=(rt0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (-1803256256) ORDER BY (- (((rt0.c0) NOT NULL)))  NULLS FIRST, ((((rt1.c2)LIKE(rt0.c2)))AND(((rt0.c2) NOTNULL))) DESC, ((rt0.c2)<>(rt0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE ((rt0.c1 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM rt0, t0 WHERE ('-883018685');
SELECT SUM(count) FROM (SELECT (('-883018685') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-883018685');
SELECT SUM(count) FROM (SELECT (('-883018685') IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ('-883018685');
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))LIKE(x''))) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))LIKE(x''))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))LIKE(x''))) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))LIKE(x''))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)AND(rt1.c1)))AND(rt1.c1)))LIKE(x''))) ORDER BY ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c3))<((rt1.c0))) AS REAL)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)))GLOB(json_remove(rt1.c1, rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3))<((rt1.c0))) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)))GLOB(json_remove(rt1.c1, rt1.c3))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c3))<((rt1.c0))) AS REAL)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)))GLOB(json_remove(rt1.c1, rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c3))<((rt1.c0))) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)))GLOB(json_remove(rt1.c1, rt1.c3))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c3))<((rt1.c0))) AS REAL)) ORDER BY ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (NULL)))GLOB(json_remove(rt1.c1, rt1.c3)));
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) BETWEEN (((rt1.c1)&(rt1.c2))) AND ('1518288464' COLLATE NOCASE)) WHERE (CASE WHEN ((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c2) IS FALSE) END) ORDER BY ((CAST(rt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c2) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) BETWEEN (((rt1.c1)&(rt1.c2))) AND ('1518288464' COLLATE NOCASE)) ORDER BY ((CAST(rt1.c1 AS BLOB)) IS FALSE) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) BETWEEN (((rt1.c1)&(rt1.c2))) AND ('1518288464' COLLATE NOCASE)) WHERE (CASE WHEN ((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c2) IS FALSE) END) ORDER BY ((CAST(rt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c2) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) BETWEEN (((rt1.c1)&(rt1.c2))) AND ('1518288464' COLLATE NOCASE)) ORDER BY ((CAST(rt1.c1 AS BLOB)) IS FALSE) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((NULL) BETWEEN (((rt1.c1)&(rt1.c2))) AND ('1518288464' COLLATE NOCASE)) WHERE (CASE WHEN ((((rt1.c3)OR(rt1.c1)))AND(rt0.c1)) THEN CAST(rt1.c2 AS INTEGER) ELSE ((rt1.c2) IS FALSE) END) ORDER BY ((CAST(rt1.c1 AS BLOB)) IS FALSE) ASC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) BETWEEN ((t0.c51)) AND ((x'4aeb')))))) ORDER BY ((((((((rt1.c0)AND(t0.c51)))OR(rt1.c1)))OR((('2usqp\w峃')GLOB(t0.c0)))))AND((rt1.c1 IN ())))  NULLS LAST, (((rt1.c3)&(rt1.c2)) IN ((NOT (t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) BETWEEN ((t0.c51)) AND ((x'4aeb')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((rt1.c0)AND(t0.c51)))OR(rt1.c1)))OR((('2usqp\w峃')GLOB(t0.c0)))))AND((rt1.c1 IN ())))  NULLS LAST, (((rt1.c3)&(rt1.c2)) IN ((NOT (t0.c51)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) BETWEEN ((t0.c51)) AND ((x'4aeb')))))) ORDER BY ((((((((rt1.c0)AND(t0.c51)))OR(rt1.c1)))OR((('2usqp\w峃')GLOB(t0.c0)))))AND((rt1.c1 IN ())))  NULLS LAST, (((rt1.c3)&(rt1.c2)) IN ((NOT (t0.c51)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) NOT BETWEEN (rt1.c3) AND (t0.c0)))AND(CAST(t0.c0 AS TEXT))))OR((((t0.c0)) BETWEEN ((t0.c51)) AND ((x'4aeb')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((((((((rt1.c0)AND(t0.c51)))OR(rt1.c1)))OR((('2usqp\w峃')GLOB(t0.c0)))))AND((rt1.c1 IN ())))  NULLS LAST, (((rt1.c3)&(rt1.c2)) IN ((NOT (t0.c51)))) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)<=(rt0.c2))) NOTNULL) INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))<=(CAST(t0.c51 AS INTEGER))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)<=(rt0.c2))) NOTNULL) INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))<=(CAST(t0.c51 AS INTEGER))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)<=(rt0.c2))) NOTNULL) INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))<=(CAST(t0.c51 AS INTEGER))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)<=(rt0.c2))) NOTNULL) INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))<=(CAST(t0.c51 AS INTEGER))));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN rt1 ON ((((rt1.c2)<=(rt0.c2))) NOTNULL) INNER JOIN rt0 ON ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)))<=(CAST(t0.c51 AS INTEGER))) WHERE (rt0.c1);
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((((CAST(rt1.c3 AS BLOB))AND(((x'') IS TRUE))))AND(NULL)) WHERE (CAST(t0.c51 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c51 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 CROSS JOIN rt1 ON ((((CAST(rt1.c3 AS BLOB))AND(((x'') IS TRUE))))AND(NULL)));
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((((CAST(rt1.c3 AS BLOB))AND(((x'') IS TRUE))))AND(NULL)) WHERE (CAST(t0.c51 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c51 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 CROSS JOIN rt1 ON ((((CAST(rt1.c3 AS BLOB))AND(((x'') IS TRUE))))AND(NULL)));
SELECT ALL * FROM t0, rt0 CROSS JOIN rt1 ON ((((CAST(rt1.c3 AS BLOB))AND(((x'') IS TRUE))))AND(NULL)) WHERE (CAST(t0.c51 AS NUMERIC) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((0.3814669023123799)IS(2.02005699E8)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((0.3814669023123799)IS(2.02005699E8)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((0.3814669023123799)IS(2.02005699E8)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((0.3814669023123799)IS(2.02005699E8)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((0.3814669023123799)IS(2.02005699E8)) ASC;
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) NOTNULL)) ORDER BY (NOT ((t0.c0 IN (rt1.c1, rt1.c3))))  NULLS FIRST, ((((t0.c51)OR(CAST(rt1.c2 AS NUMERIC))))AND(x''))  NULLS FIRST, LOWER(t0.c51 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY (NOT ((t0.c0 IN (rt1.c1, rt1.c3))))  NULLS FIRST, ((((t0.c51)OR(CAST(rt1.c2 AS NUMERIC))))AND(x''))  NULLS FIRST, LOWER(t0.c51 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) NOTNULL)) ORDER BY (NOT ((t0.c0 IN (rt1.c1, rt1.c3))))  NULLS FIRST, ((((t0.c51)OR(CAST(rt1.c2 AS NUMERIC))))AND(x''))  NULLS FIRST, LOWER(t0.c51 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY (NOT ((t0.c0 IN (rt1.c1, rt1.c3))))  NULLS FIRST, ((((t0.c51)OR(CAST(rt1.c2 AS NUMERIC))))AND(x''))  NULLS FIRST, LOWER(t0.c51 COLLATE RTRIM) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt1.c2))) NOTNULL)) ORDER BY (NOT ((t0.c0 IN (rt1.c1, rt1.c3))))  NULLS FIRST, ((((t0.c51)OR(CAST(rt1.c2 AS NUMERIC))))AND(x''))  NULLS FIRST, LOWER(t0.c51 COLLATE RTRIM) ASC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CASE t0.c0  WHEN NULL THEN 0.25839664024548903 WHEN t0.c51 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(t0.c0)) LEFT OUTER JOIN t0 ON rt0.c0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CASE t0.c0  WHEN NULL THEN 0.25839664024548903 WHEN t0.c51 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(t0.c0)) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CASE t0.c0  WHEN NULL THEN 0.25839664024548903 WHEN t0.c51 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(t0.c0)) LEFT OUTER JOIN t0 ON rt0.c0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS TEXT)) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CASE t0.c0  WHEN NULL THEN 0.25839664024548903 WHEN t0.c51 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)/(t0.c0)) LEFT OUTER JOIN t0 ON rt0.c0);
SELECT COUNT(*) FROM t0, rt0, rt1 INDEXED BY i58 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY NULLIF(CAST(t0.c0 AS TEXT), rt1.c1) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1 INDEXED BY i58 ORDER BY NULLIF(CAST(t0.c0 AS TEXT), rt1.c1) DESC);
SELECT COUNT(*) FROM t0, rt0, rt1 INDEXED BY i58 WHERE ((((t0.c0 IN ())) ISNULL)) ORDER BY NULLIF(CAST(t0.c0 AS TEXT), rt1.c1) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1 INDEXED BY i58 ORDER BY NULLIF(CAST(t0.c0 AS TEXT), rt1.c1) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN ((rt0.c0 IN (rt0.c2, rt1.c3))) AND (COALESCE('\>g<7L', rt0.c0)))) ORDER BY ABS(DISTINCT ((rt1.c2)|(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN ((rt0.c0 IN (rt0.c2, rt1.c3))) AND (COALESCE('\>g<7L', rt0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ABS(DISTINCT ((rt1.c2)|(rt1.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN ((rt0.c0 IN (rt0.c2, rt1.c3))) AND (COALESCE('\>g<7L', rt0.c0)))) ORDER BY ABS(DISTINCT ((rt1.c2)|(rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS TEXT)) BETWEEN ((rt0.c0 IN (rt0.c2, rt1.c3))) AND (COALESCE('\>g<7L', rt0.c0)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ABS(DISTINCT ((rt1.c2)|(rt1.c1))) DESC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN ((rt0.c0 IN (rt0.c2, rt1.c3))) AND (COALESCE('\>g<7L', rt0.c0)))) ORDER BY ABS(DISTINCT ((rt1.c2)|(rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(SQLITE_VERSION()))) ORDER BY ((((rt0.c2)AND(0xffffffffdbfee68c)))AND(rt0.c0 COLLATE NOCASE)), CAST(rt0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(0Xffffffffdbfee68c)))AND(rt0.c0 COLLATE NOCASE)), CAST(rt0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(SQLITE_VERSION()))) ORDER BY ((((rt0.c2)AND(0xffffffffdbfee68c)))AND(rt0.c0 COLLATE NOCASE)), CAST(rt0.c0 AS TEXT) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(SQLITE_VERSION()))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND(0Xffffffffdbfee68c)))AND(rt0.c0 COLLATE NOCASE)), CAST(rt0.c0 AS TEXT) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)<(SQLITE_VERSION()))) ORDER BY ((((rt0.c2)AND(0xffffffffdbfee68c)))AND(rt0.c0 COLLATE NOCASE)), CAST(rt0.c0 AS TEXT) COLLATE NOCASE;
SELECT * FROM rt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (NULL);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('럯F''翈om瓐*'))) WHERE (0.944532936256296) ORDER BY CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt0.c2)) THEN -14558748 END DESC  NULLS FIRST, (((((rt1.c1) NOT NULL), ((rt1.c0)!=(rt1.c0)), ((rt1.c0)*(rt0.c0))))>=((((rt1.c1) IS FALSE), (((t0.c51))>=((rt0.c0))), CASE rt0.c0  WHEN t0.c51 THEN x'' END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.944532936256296) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('럯F''翈om瓐*'))) ORDER BY CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt0.c2)) THEN -14558748 END DESC  NULLS FIRST, (((((rt1.c1) NOT NULL), ((rt1.c0)<>(rt1.c0)), ((rt1.c0)*(rt0.c0))))>=((((rt1.c1) IS FALSE), (((t0.c51))>=((rt0.c0))), CASE rt0.c0  WHEN t0.c51 THEN x'' END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('럯F''翈om瓐*'))) WHERE (0.944532936256296) ORDER BY CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt0.c2)) THEN -14558748 END DESC  NULLS FIRST, (((((rt1.c1) NOT NULL), ((rt1.c0)!=(rt1.c0)), ((rt1.c0)*(rt0.c0))))>=((((rt1.c1) IS FALSE), (((t0.c51))>=((rt0.c0))), CASE rt0.c0  WHEN t0.c51 THEN x'' END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.944532936256296) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('럯F''翈om瓐*'))) ORDER BY CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt0.c2)) THEN -14558748 END DESC  NULLS FIRST, (((((rt1.c1) NOT NULL), ((rt1.c0)<>(rt1.c0)), ((rt1.c0)*(rt0.c0))))>=((((rt1.c1) IS FALSE), (((t0.c51))>=((rt0.c0))), CASE rt0.c0  WHEN t0.c51 THEN x'' END)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t0 ON (((rt1.c2)) NOT BETWEEN ((((rt0.c1)>=(rt0.c2)))) AND (('럯F''翈om瓐*'))) WHERE (0.944532936256296) ORDER BY CASE WHEN ((((rt1.c0)OR(rt0.c0)))AND(rt0.c2)) THEN -14558748 END DESC  NULLS FIRST, (((((rt1.c1) NOT NULL), ((rt1.c0)!=(rt1.c0)), ((rt1.c0)*(rt0.c0))))>=((((rt1.c1) IS FALSE), (((t0.c51))>=((rt0.c0))), CASE rt0.c0  WHEN t0.c51 THEN x'' END)))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((- (rt1.c3))) AND (((rt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((- (rt1.c3))) AND (((rt1.c2) IS FALSE))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((- (rt1.c3))) AND (((rt1.c2) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY ((CASE WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((- (rt1.c3))) AND (((rt1.c2) IS FALSE))) DESC);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY ((CASE WHEN x'' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) BETWEEN ((- (rt1.c3))) AND (((rt1.c2) IS FALSE))) DESC;
SELECT * FROM rt0 WHERE ('-54120398') ORDER BY (((x'', rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)==(rt0.c2)))) AND ((rt0.c1, ROUND(rt0.c1, rt0.c2), (rt0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-54120398') IS TRUE)  as count FROM rt0 ORDER BY (((x'', rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)=(rt0.c2)))) AND ((rt0.c1, ROUND(rt0.c1, rt0.c2), (rt0.c2 IN ()))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-54120398') ORDER BY (((x'', rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)==(rt0.c2)))) AND ((rt0.c1, ROUND(rt0.c1, rt0.c2), (rt0.c2 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-54120398') IS TRUE)  as count FROM rt0 ORDER BY (((x'', rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)=(rt0.c2)))) AND ((rt0.c1, ROUND(rt0.c1, rt0.c2), (rt0.c2 IN ()))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ('-54120398') ORDER BY (((x'', rt0.c0, rt0.c2)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c1)==(rt0.c2)))) AND ((rt0.c1, ROUND(rt0.c1, rt0.c2), (rt0.c2 IN ()))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (x'') ORDER BY CASE WHEN ((((t0.c51)AND(rt1.c1)))OR(rt1.c2)) THEN (- (rt1.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((0xffffffffd9bfd829)OR(rt1.c2)))OR(rt1.c0)) WHEN ((5.22429369E8) ISNULL) THEN (((rt1.c1))>((rt1.c0))) ELSE (NOT (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN ((((t0.c51)AND(rt1.c1)))OR(rt1.c2)) THEN (- (rt1.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((0xffffffffd9bfd829)OR(rt1.c2)))OR(rt1.c0)) WHEN ((5.22429369E8) ISNULL) THEN (((rt1.c1))>((rt1.c0))) ELSE (NOT (rt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (x'') ORDER BY CASE WHEN ((((t0.c51)AND(rt1.c1)))OR(rt1.c2)) THEN (- (rt1.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((0xffffffffd9bfd829)OR(rt1.c2)))OR(rt1.c0)) WHEN ((5.22429369E8) ISNULL) THEN (((rt1.c1))>((rt1.c0))) ELSE (NOT (rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CASE WHEN ((((t0.c51)AND(rt1.c1)))OR(rt1.c2)) THEN (- (rt1.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((0xffffffffd9bfd829)OR(rt1.c2)))OR(rt1.c0)) WHEN ((5.22429369E8) ISNULL) THEN (((rt1.c1))>((rt1.c0))) ELSE (NOT (rt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (x'') ORDER BY CASE WHEN ((((t0.c51)AND(rt1.c1)))OR(rt1.c2)) THEN (- (rt1.c2)) WHEN rt0.c0 COLLATE RTRIM THEN ((((0xffffffffd9bfd829)OR(rt1.c2)))OR(rt1.c0)) WHEN ((5.22429369E8) ISNULL) THEN (((rt1.c1))>((rt1.c0))) ELSE (NOT (rt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM ASC, ((((((((((rt1.c2)AND('J7')))OR(rt1.c0)))AND(0.054106400745773664)))OR(rt1.c3))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM ASC, ((((((((((rt1.c2)AND('J7')))OR(rt1.c0)))AND(0.054106400745773664)))OR(rt1.c3))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM ASC, ((((((((((rt1.c2)AND('J7')))OR(rt1.c0)))AND(0.054106400745773664)))OR(rt1.c3))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM ASC, ((((((((((rt1.c2)AND('J7')))OR(rt1.c0)))AND(0.054106400745773664)))OR(rt1.c3))) NOT NULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM ASC, ((((((((((rt1.c2)AND('J7')))OR(rt1.c0)))AND(0.054106400745773664)))OR(rt1.c3))) NOT NULL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt1.c3)) AS REAL) WHERE ((NOT (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt1.c3)) AS REAL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt1.c3)) AS REAL) WHERE ((NOT (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt1.c3)) AS REAL));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CAST(((rt1.c0)OR(rt1.c3)) AS REAL) WHERE ((NOT (((rt0.c2) IS FALSE))));
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c51 AS BLOB)))) ORDER BY t0.c51;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c51 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY t0.c51);
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c51 AS BLOB)))) ORDER BY t0.c51;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(t0.c51 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY t0.c51);
SELECT ALL * FROM t0 WHERE ((+ (CAST(t0.c51 AS BLOB)))) ORDER BY t0.c51;
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, rt0 WHERE ((((((t0.c51)) NOT BETWEEN (('')) AND ((rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c51)) NOT BETWEEN (('')) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, rt0 WHERE ((((((t0.c51)) NOT BETWEEN (('')) AND ((rt0.c2)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((t0.c51)) NOT BETWEEN (('')) AND ((rt0.c2)))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt1, rt0 WHERE ((((((t0.c51)) NOT BETWEEN (('')) AND ((rt0.c2)))) ISNULL));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((('-441015821', rt0.c2, rt1.c0))<=((rt0.c1, rt1.c3, t0.c0))))OR(((0.95599539757334) BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY load_extension('', rtreenode(rt0.c0, rt1.c2));
SELECT SUM(count) FROM (SELECT ((((((('-441015821', rt0.c2, rt1.c0))<=((rt0.c1, rt1.c3, t0.c0))))OR(((0.95599539757334) BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY load_extension('', rtreenode(rt0.c0, rt1.c2)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((('-441015821', rt0.c2, rt1.c0))<=((rt0.c1, rt1.c3, t0.c0))))OR(((0.95599539757334) BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY load_extension('', rtreenode(rt0.c0, rt1.c2));
SELECT SUM(count) FROM (SELECT ((((((('-441015821', rt0.c2, rt1.c0))<=((rt0.c1, rt1.c3, t0.c0))))OR(((0.95599539757334) BETWEEN (rt0.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY load_extension('', rtreenode(rt0.c0, rt1.c2)));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (((((('-441015821', rt0.c2, rt1.c0))<=((rt0.c1, rt1.c3, t0.c0))))OR(((0.95599539757334) BETWEEN (rt0.c2) AND (rt1.c1))))) ORDER BY load_extension('', rtreenode(rt0.c0, rt1.c2));
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((-701766274)IS NOT(rt1.c0)) THEN ((rt1.c0)>(rt1.c3)) END) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC, ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 END)<=(0.7855349325234089)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-701766274)IS NOT(rt1.c0)) THEN ((rt1.c0)>(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC, ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 END)<=(0.7855349325234089)) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((-701766274)IS NOT(rt1.c0)) THEN ((rt1.c0)>(rt1.c3)) END) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC, ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 END)<=(0.7855349325234089)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((-701766274)IS NOT(rt1.c0)) THEN ((rt1.c0)>(rt1.c3)) END) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC, ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 END)<=(0.7855349325234089)) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (CASE WHEN ((-701766274)IS NOT(rt1.c0)) THEN ((rt1.c0)>(rt1.c3)) END) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC, ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt1.c3 WHEN rt1.c0 THEN rt0.c2 END)<=(0.7855349325234089)) ASC;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)/(t0.c0)) AS INTEGER)) ORDER BY (((CAST(rt1.c3 AS INTEGER), t0.c0, (rt1.c1 IN (rt1.c0)), CASE WHEN t0.c51 THEN rt1.c1 ELSE rt1.c0 END, CAST(t0.c0 AS INTEGER)))!=((((rt1.c3) IS TRUE), ((t0.c0) NOTNULL), ((rt1.c1) ISNULL), ((x'1e7c') NOT NULL), (NOT (t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)/(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((CAST(rt1.c3 AS INTEGER), t0.c0, (rt1.c1 IN (rt1.c0)), CASE WHEN t0.c51 THEN rt1.c1 ELSE rt1.c0 END, CAST(t0.c0 AS INTEGER)))<>((((rt1.c3) IS TRUE), ((t0.c0) NOTNULL), ((rt1.c1) ISNULL), ((x'1e7c') NOT NULL), (NOT (t0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)/(t0.c0)) AS INTEGER)) ORDER BY (((CAST(rt1.c3 AS INTEGER), t0.c0, (rt1.c1 IN (rt1.c0)), CASE WHEN t0.c51 THEN rt1.c1 ELSE rt1.c0 END, CAST(t0.c0 AS INTEGER)))!=((((rt1.c3) IS TRUE), ((t0.c0) NOTNULL), ((rt1.c1) ISNULL), ((x'1e7c') NOT NULL), (NOT (t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c0)/(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((CAST(rt1.c3 AS INTEGER), t0.c0, (rt1.c1 IN (rt1.c0)), CASE WHEN t0.c51 THEN rt1.c1 ELSE rt1.c0 END, CAST(t0.c0 AS INTEGER)))<>((((rt1.c3) IS TRUE), ((t0.c0) NOTNULL), ((rt1.c1) ISNULL), ((x'1e7c') NOT NULL), (NOT (t0.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CAST(((rt1.c0)/(t0.c0)) AS INTEGER)) ORDER BY (((CAST(rt1.c3 AS INTEGER), t0.c0, (rt1.c1 IN (rt1.c0)), CASE WHEN t0.c51 THEN rt1.c1 ELSE rt1.c0 END, CAST(t0.c0 AS INTEGER)))!=((((rt1.c3) IS TRUE), ((t0.c0) NOTNULL), ((rt1.c1) ISNULL), ((x'1e7c') NOT NULL), (NOT (t0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN ())) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE ((rt0.c0 IN ()));
SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND((((rt1.c3, rt1.c1, rt1.c0))>((rt1.c1, t0.c51, rt1.c2))))))OR(((t0.c51)%(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND((((rt1.c3, rt1.c1, rt1.c0))>((rt1.c1, t0.c51, rt1.c2))))))OR(((t0.c51)%(rt1.c3))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND((((rt1.c3, rt1.c1, rt1.c0))>((rt1.c1, t0.c51, rt1.c2))))))OR(((t0.c51)%(rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND((((rt1.c3, rt1.c1, rt1.c0))>((rt1.c1, t0.c51, rt1.c2))))))OR(((t0.c51)%(rt1.c3))))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c3))))AND((((rt1.c3, rt1.c1, rt1.c0))>((rt1.c1, t0.c51, rt1.c2))))))OR(((t0.c51)%(rt1.c3)))));
SELECT COUNT(*) FROM t0 WHERE (x'f66c');
SELECT SUM(count) FROM (SELECT ALL ((x'f66c') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'f66c');
SELECT SUM(count) FROM (SELECT ALL ((x'f66c') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'f66c');
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1)/(rt0.c2)) COLLATE BINARY) ORDER BY rt0.c0  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ('IHFCO\r|E');
SELECT SUM(count) FROM (SELECT ALL (('IHFCO\r|E') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('IHFCO\r|E');
SELECT SUM(count) FROM (SELECT ALL (('IHFCO\r|E') IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ('IHFCO\r|E');
SELECT ALL * FROM t0, rt1 WHERE ((((((((((NOT (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(CAST(x'50ed' AS TEXT))))OR(((t0.c51) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((0Xffffffff97b88cc1)=(NULL)))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(CAST(x'50ed' AS TEXT))))OR(((t0.c51) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((0xffffffff97b88cc1)=(NULL)))AND(NULL)));
SELECT ALL * FROM t0, rt1 WHERE ((((((((((NOT (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(CAST(x'50ed' AS TEXT))))OR(((t0.c51) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((0Xffffffff97b88cc1)=(NULL)))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(CAST(x'50ed' AS TEXT))))OR(((t0.c51) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((0xffffffff97b88cc1)=(NULL)))AND(NULL)));
SELECT ALL * FROM t0, rt1 WHERE ((((((((((NOT (rt1.c2)))OR(rt1.c1 COLLATE BINARY)))AND((rt1.c2 IN ()))))OR(CAST(x'50ed' AS TEXT))))OR(((t0.c51) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY ((((0Xffffffff97b88cc1)=(NULL)))AND(NULL));
SELECT * FROM t0, rt0, rt1 WHERE ((((rt1.c0))<=((x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((((rt1.c0))<=((x''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c0))<=((x''))) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((((rt1.c0))<=((x''))) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt0.c2)|(NULL)) IN ())) ORDER BY (((rt1.c1))>((x''))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)|(NULL)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((rt1.c1))>((x''))) ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt0.c2)|(NULL)) IN ())) ORDER BY (((rt1.c1))>((x''))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)|(NULL)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (((rt1.c1))>((x''))) ASC);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt0.c2)|(NULL)) IN ())) ORDER BY (((rt1.c1))>((x''))) ASC;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c2)AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN t0.c51 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN t0.c51 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c2)AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN t0.c51 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN t0.c51 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c2)AND(rt0.c1)))OR(CASE WHEN rt1.c1 THEN t0.c51 ELSE rt0.c1 END)));
SELECT ALL * FROM rt1, t0 WHERE (TRIM(DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (TRIM(DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (TRIM(DISTINCT ((rt1.c0) BETWEEN (rt1.c2) AND (t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c0) AND (rt1.c0))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c2)>>(rt0.c0)))<=(((rt1.c3) ISNULL))) WHERE (CAST(((((1.389632056E9)AND(rt1.c0)))AND(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((1.389632056E9)AND(rt1.c0)))AND(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c2)>>(rt0.c0)))<=(((rt1.c3) ISNULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c2)>>(rt0.c0)))<=(((rt1.c3) ISNULL))) WHERE (CAST(((((1.389632056E9)AND(rt1.c0)))AND(rt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((1.389632056E9)AND(rt1.c0)))AND(rt1.c1)) AS TEXT)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((rt1.c2)>>(rt0.c0)))<=(((rt1.c3) ISNULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((rt1.c2)>>(rt0.c0)))<=(((rt1.c3) ISNULL))) WHERE (CAST(((((1.389632056E9)AND(rt1.c0)))AND(rt1.c1)) AS TEXT));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (HEX(DISTINCT CASE rt0.c0  WHEN rt1.c2 THEN t0.c51 ELSE rt0.c2 END)) ORDER BY (((rt0.c2, t0.c0, t0.c0, rt1.c3, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN t0.c51 END, ((t0.c0)IS(t0.c51)), rt0.c1 COLLATE BINARY, CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END, ((('ZMTM*Q')) BETWEEN ((rt1.c2)) AND ((t0.c0))))) AND ((CAST(rt1.c2 AS INTEGER), (NULL IN (rt0.c1)), ((rt0.c1) NOTNULL), ((rt1.c3)IS(rt0.c0)), CAST(rt1.c3 AS TEXT))))  NULLS FIRST, ((((rt1.c1) NOTNULL))OR(HEX(t0.c0))) DESC, CAST(((rt1.c2) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c0  WHEN rt1.c2 THEN t0.c51 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt0.c2, t0.c0, t0.c0, rt1.c3, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN t0.c51 END, ((t0.c0)IS(t0.c51)), rt0.c1 COLLATE BINARY, CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END, ((('ZMTM*Q')) BETWEEN ((rt1.c2)) AND ((t0.c0))))) AND ((CAST(rt1.c2 AS INTEGER), (NULL IN (rt0.c1)), ((rt0.c1) NOTNULL), ((rt1.c3)IS(rt0.c0)), CAST(rt1.c3 AS TEXT))))  NULLS FIRST, ((((rt1.c1) NOTNULL))OR(HEX(t0.c0))) DESC, CAST(((rt1.c2) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (HEX(DISTINCT CASE rt0.c0  WHEN rt1.c2 THEN t0.c51 ELSE rt0.c2 END)) ORDER BY (((rt0.c2, t0.c0, t0.c0, rt1.c3, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN t0.c51 END, ((t0.c0)IS(t0.c51)), rt0.c1 COLLATE BINARY, CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END, ((('ZMTM*Q')) BETWEEN ((rt1.c2)) AND ((t0.c0))))) AND ((CAST(rt1.c2 AS INTEGER), (NULL IN (rt0.c1)), ((rt0.c1) NOTNULL), ((rt1.c3)IS(rt0.c0)), CAST(rt1.c3 AS TEXT))))  NULLS FIRST, ((((rt1.c1) NOTNULL))OR(HEX(t0.c0))) DESC, CAST(((rt1.c2) ISNULL) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT CASE rt0.c0  WHEN rt1.c2 THEN t0.c51 ELSE rt0.c2 END)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (((rt0.c2, t0.c0, t0.c0, rt1.c3, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN t0.c51 END, ((t0.c0)IS(t0.c51)), rt0.c1 COLLATE BINARY, CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END, ((('ZMTM*Q')) BETWEEN ((rt1.c2)) AND ((t0.c0))))) AND ((CAST(rt1.c2 AS INTEGER), (NULL IN (rt0.c1)), ((rt0.c1) NOTNULL), ((rt1.c3)IS(rt0.c0)), CAST(rt1.c3 AS TEXT))))  NULLS FIRST, ((((rt1.c1) NOTNULL))OR(HEX(t0.c0))) DESC, CAST(((rt1.c2) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (HEX(DISTINCT CASE rt0.c0  WHEN rt1.c2 THEN t0.c51 ELSE rt0.c2 END)) ORDER BY (((rt0.c2, t0.c0, t0.c0, rt1.c3, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN t0.c51 END, ((t0.c0)IS(t0.c51)), rt0.c1 COLLATE BINARY, CASE WHEN NULL THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END, ((('ZMTM*Q')) BETWEEN ((rt1.c2)) AND ((t0.c0))))) AND ((CAST(rt1.c2 AS INTEGER), (NULL IN (rt0.c1)), ((rt0.c1) NOTNULL), ((rt1.c3)IS(rt0.c0)), CAST(rt1.c3 AS TEXT))))  NULLS FIRST, ((((rt1.c1) NOTNULL))OR(HEX(t0.c0))) DESC, CAST(((rt1.c2) ISNULL) AS INTEGER);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST((NOT (rt1.c3)) AS REAL) WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE NOCASE COLLATE NOCASE) ORDER BY NULL, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt0.c0)*(rt1.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END DESC, rt1.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST((NOT (rt1.c3)) AS REAL) ORDER BY NULL, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt0.c0)*(rt1.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END DESC, rt1.c0);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST((NOT (rt1.c3)) AS REAL) WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE NOCASE COLLATE NOCASE) ORDER BY NULL, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt0.c0)*(rt1.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END DESC, rt1.c0;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON CAST((NOT (rt1.c3)) AS REAL) ORDER BY NULL, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt0.c0)*(rt1.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END DESC, rt1.c0);
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON CAST((NOT (rt1.c3)) AS REAL) WHERE ((((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c2))) COLLATE NOCASE COLLATE NOCASE) ORDER BY NULL, CASE WHEN CAST(rt1.c0 AS INTEGER) THEN ((rt0.c0)*(rt1.c1)) ELSE CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END END DESC, rt1.c0;
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c1)*('-1313253845')))))OR('728536641')));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(((rt0.c1)*('-1313253845')))))OR('728536641'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c1)*('-1313253845')))))OR('728536641')));
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND(((rt0.c1)*('-1313253845')))))OR('728536641'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((NULL IN ()))AND(((rt0.c1)*('-1313253845')))))OR('728536641')));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('' COLLATE RTRIM)) AND ((CASE WHEN rt1.c1 THEN t0.c51 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (('' COLLATE RTRIM)) AND ((CASE WHEN rt1.c1 THEN t0.c51 END)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('' COLLATE RTRIM)) AND ((CASE WHEN rt1.c1 THEN t0.c51 END))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) NOT BETWEEN (('' COLLATE RTRIM)) AND ((CASE WHEN rt1.c1 THEN t0.c51 END)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE ((((t0.c0)) NOT BETWEEN (('' COLLATE RTRIM)) AND ((CASE WHEN rt1.c1 THEN t0.c51 END))));
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c3);
SELECT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (~ (t0.c0)) WHEN rt1.c0 THEN ((0.9186572755027762)>(rt1.c0)) WHEN '1QZ)AV' THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (~ (t0.c0)) WHEN rt1.c0 THEN ((0.9186572755027762)>(rt1.c0)) WHEN '1QZ)AV' THEN x'' END) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (~ (t0.c0)) WHEN rt1.c0 THEN ((0.9186572755027762)>(rt1.c0)) WHEN '1QZ)AV' THEN x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (~ (t0.c0)) WHEN rt1.c0 THEN ((0.9186572755027762)>(rt1.c0)) WHEN '1QZ)AV' THEN x'' END) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (CASE WHEN ((rt1.c2)%(rt1.c2)) THEN (~ (t0.c0)) WHEN rt1.c0 THEN ((0.9186572755027762)>(rt1.c0)) WHEN '1QZ)AV' THEN x'' END);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))AND(x'')) AS REAL)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c2)OR(rt1.c1)))AND(x'')) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))AND(x'')) AS REAL)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c2)OR(rt1.c1)))AND(x'')) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1 ASC);
SELECT COUNT(*) FROM rt1 WHERE (CAST(((((rt1.c2)OR(rt1.c1)))AND(x'')) AS REAL)) ORDER BY rt1.c1 ASC;
SELECT COUNT(*) FROM rt0, rt1 WHERE (json_array_length(TRIM(DISTINCT rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(TRIM(DISTINCT rt1.c1, rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json_array_length(TRIM(DISTINCT rt1.c1, rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(TRIM(DISTINCT rt1.c1, rt1.c2))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (json_array_length(TRIM(DISTINCT rt1.c1, rt1.c2)));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON ((((rt1.c2)*(rt1.c0)))-(((rt1.c2)/(t0.c0)))) WHERE (((((rt0.c1) IS FALSE))<<(((rt0.c0) BETWEEN (rt1.c1) AND (t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))<<(((rt0.c0) BETWEEN (rt1.c1) AND (t0.c51))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED CROSS JOIN rt1 ON ((((rt1.c2)*(rt1.c0)))-(((rt1.c2)/(t0.c0)))));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON ((((rt1.c2)*(rt1.c0)))-(((rt1.c2)/(t0.c0)))) WHERE (((((rt0.c1) IS FALSE))<<(((rt0.c0) BETWEEN (rt1.c1) AND (t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))<<(((rt0.c0) BETWEEN (rt1.c1) AND (t0.c51))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED CROSS JOIN rt1 ON ((((rt1.c2)*(rt1.c0)))-(((rt1.c2)/(t0.c0)))));
SELECT ALL * FROM rt0, t0 CROSS JOIN rt1 ON ((((rt1.c2)*(rt1.c0)))-(((rt1.c2)/(t0.c0)))) WHERE (((((rt0.c1) IS FALSE))<<(((rt0.c0) BETWEEN (rt1.c1) AND (t0.c51)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt1.c3) NOTNULL))<((t0.c51 IN ()))) FULL OUTER JOIN rt1 ON (((rt0.c2, '-682906545', t0.c51)) NOT BETWEEN (((((125500227, t0.c0, rt0.c0))<=((rt0.c2, t0.c51, rt0.c1))), ((((t0.c0)OR(rt0.c1)))OR(t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c51) AND (rt0.c2)))) AND (((((((((('')OR(rt1.c2)))OR(rt0.c1)))OR(t0.c51)))AND(t0.c51)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)AND(t0.c51)))OR(t0.c0)))AND(0.27833015321861665)))AND(rt0.c1))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt1.c3) NOTNULL))<((t0.c51 IN ()))) FULL OUTER JOIN rt1 ON (((rt0.c2, '-682906545', t0.c51)) NOT BETWEEN (((((125500227, t0.c0, rt0.c0))<=((rt0.c2, t0.c51, rt0.c1))), ((((t0.c0)OR(rt0.c1)))OR(t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c51) AND (rt0.c2)))) AND (((((((((('')OR(rt1.c2)))OR(rt0.c1)))OR(t0.c51)))AND(t0.c51)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)AND(t0.c51)))OR(t0.c0)))AND(0.27833015321861665)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON ((((rt1.c3) NOTNULL))<((t0.c51 IN ()))) FULL OUTER JOIN rt1 ON (((rt0.c2, '-682906545', t0.c51)) NOT BETWEEN (((((125500227, t0.c0, rt0.c0))<=((rt0.c2, t0.c51, rt0.c1))), ((((t0.c0)OR(rt0.c1)))OR(t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c51) AND (rt0.c2)))) AND (((((((((('')OR(rt1.c2)))OR(rt0.c1)))OR(t0.c51)))AND(t0.c51)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)AND(t0.c51)))OR(t0.c0)))AND(0.27833015321861665)))AND(rt0.c1))))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((((rt1.c3) NOTNULL))<((t0.c51 IN ()))) FULL OUTER JOIN rt1 ON (((rt0.c2, '-682906545', t0.c51)) NOT BETWEEN (((((125500227, t0.c0, rt0.c0))<=((rt0.c2, t0.c51, rt0.c1))), ((((t0.c0)OR(rt0.c1)))OR(t0.c0)), ((rt1.c3) NOT BETWEEN (t0.c51) AND (rt0.c2)))) AND (((((((((('')OR(rt1.c2)))OR(rt0.c1)))OR(t0.c51)))AND(t0.c51)), rt0.c1 COLLATE BINARY, ((((((((rt0.c0)AND(t0.c51)))OR(t0.c0)))AND(0.27833015321861665)))AND(rt0.c1))))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c51)) AS REAL)) ORDER BY ((((t0.c0)=(rt1.c3))) BETWEEN ((+ (rt1.c3))) AND (0.9577091467601027))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c51)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((t0.c0)==(rt1.c3))) BETWEEN ((+ (rt1.c3))) AND (0.9577091467601027))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c51)) AS REAL)) ORDER BY ((((t0.c0)=(rt1.c3))) BETWEEN ((+ (rt1.c3))) AND (0.9577091467601027))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c51)) AS REAL)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((t0.c0)==(rt1.c3))) BETWEEN ((+ (rt1.c3))) AND (0.9577091467601027))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (CAST((NOT (t0.c51)) AS REAL)) ORDER BY ((((t0.c0)=(rt1.c3))) BETWEEN ((+ (rt1.c3))) AND (0.9577091467601027))  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(0.7858808093010048)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND (t0.c0))) ORDER BY ((((0.06210876873800586)OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(0.7858808093010048)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY ((((0.06210876873800586)OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(0.7858808093010048)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND (t0.c0))) ORDER BY ((((0.06210876873800586)OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))))OR(NULL)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(0.7858808093010048)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND (t0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY ((((0.06210876873800586)OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))))OR(NULL)) DESC  NULLS FIRST);
SELECT ALL * FROM t0 NATURAL JOIN rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))AND(rt1.c2)))OR(0.7858808093010048)))AND(rt1.c2)))AND(rt1.c1)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN ())) AND (t0.c0))) ORDER BY ((((0.06210876873800586)OR(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))))OR(NULL)) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL)) ORDER BY ((rt1.c2) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c2) IS FALSE));
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL)) ORDER BY ((rt1.c2) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2))>((rt1.c1)))) NOT NULL)) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c2) IS FALSE));
SELECT ALL * FROM rt1, t0 WHERE ((((((rt1.c2))>((rt1.c1)))) NOT NULL)) ORDER BY ((rt1.c2) IS FALSE);
SELECT * FROM rt1, rt0 WHERE ((((((('-1172124903')>=(rt0.c2)))OR(rt1.c2)))OR((- (rt1.c2))))) ORDER BY LIKELY((+ (rt0.c0))) ASC  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((((('-1172124903')>=(rt0.c2)))OR(rt1.c2)))OR((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY((+ (rt0.c0))) ASC  NULLS LAST, rt1.c0 DESC);
SELECT * FROM rt1, rt0 WHERE ((((((('-1172124903')>=(rt0.c2)))OR(rt1.c2)))OR((- (rt1.c2))))) ORDER BY LIKELY((+ (rt0.c0))) ASC  NULLS LAST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((((('-1172124903')>=(rt0.c2)))OR(rt1.c2)))OR((- (rt1.c2))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY LIKELY((+ (rt0.c0))) ASC  NULLS LAST, rt1.c0 DESC);
SELECT * FROM rt1, rt0 WHERE ((((((('-1172124903')>=(rt0.c2)))OR(rt1.c2)))OR((- (rt1.c2))))) ORDER BY LIKELY((+ (rt0.c0))) ASC  NULLS LAST, rt1.c0 DESC;
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((('-132275041')OR(rt1.c0))) IS FALSE) WHERE ((((((NULL)>>(t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>>(t0.c0))))<((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((('-132275041')OR(rt1.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((('-132275041')OR(rt1.c0))) IS FALSE) WHERE ((((((NULL)>>(t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)>>(t0.c0))))<((rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON (((('-132275041')OR(rt1.c0))) IS FALSE));
SELECT COUNT(*) FROM t0 INNER JOIN rt1 ON (((('-132275041')OR(rt1.c0))) IS FALSE) WHERE ((((((NULL)>>(t0.c0))))<((rt1.c2 COLLATE BINARY))));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (CAST(rt0.c0 AS REAL))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ())) ORDER BY (('1389632056')>>(((rt0.c1)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('1389632056')>>(((rt0.c1)+(rt0.c2)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ())) ORDER BY (('1389632056')>>(((rt0.c1)+(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY (('1389632056')>>(((rt0.c1)+(rt0.c2)))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt0.c0)) IN ())) ORDER BY (('1389632056')>>(((rt0.c1)+(rt0.c2))));
SELECT * FROM t0 INDEXED BY i36, rt1 WHERE (((CAST(-1541451571 AS BLOB)) NOT NULL)) ORDER BY ((((t0.c51)*(rt1.c3)))>=(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1541451571 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 INDEXED BY i36, rt1 ORDER BY ((((t0.c51)*(rt1.c3)))>=(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))));
SELECT * FROM t0 INDEXED BY i36, rt1 WHERE (((CAST(-1541451571 AS BLOB)) NOT NULL)) ORDER BY ((((t0.c51)*(rt1.c3)))>=(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(-1541451571 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 INDEXED BY i36, rt1 ORDER BY ((((t0.c51)*(rt1.c3)))>=(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))));
SELECT * FROM t0 INDEXED BY i36, rt1 WHERE (((CAST(-1541451571 AS BLOB)) NOT NULL)) ORDER BY ((((t0.c51)*(rt1.c3)))>=(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3))));
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'69e1');
SELECT SUM(count) FROM (SELECT ((x'69e1') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'69e1');
SELECT SUM(count) FROM (SELECT ((x'69e1') IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (x'69e1');
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS TEXT));
SELECT * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (((t0.c51) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN t0.c51 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (((t0.c51) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN t0.c51 END))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (((t0.c51) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN t0.c51 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (((t0.c51) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN t0.c51 END))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((((t0.c0) BETWEEN (NULL) AND (t0.c0))) NOT BETWEEN (((t0.c51) NOT NULL)) AND (CASE rt1.c3  WHEN rt1.c2 THEN t0.c51 END)));
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) IS FALSE)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) IS FALSE)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE ((((+ (rt1.c0))) IS FALSE)) ORDER BY rt1.c0;
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (rt1.c0))) ORDER BY ((LIKELY(DISTINCT 0.2806809113672265))<((((rt0.c0))>=((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((LIKELY(DISTINCT 0.2806809113672265))<((((rt0.c0))>=((rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (rt1.c0))) ORDER BY ((LIKELY(DISTINCT 0.2806809113672265))<((((rt0.c0))>=((rt1.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c0))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((LIKELY(DISTINCT 0.2806809113672265))<((((rt0.c0))>=((rt1.c2))))) ASC);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((NOT (rt1.c0))) ORDER BY ((LIKELY(DISTINCT 0.2806809113672265))<((((rt0.c0))>=((rt1.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS TRUE)) BETWEEN (((rt1.c0)>=(rt1.c1))) AND ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((x'') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE)) BETWEEN (((rt1.c0)>=(rt1.c1))) AND ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((x'') IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS TRUE)) BETWEEN (((rt1.c0)>=(rt1.c1))) AND ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((x'') IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) IS TRUE)) BETWEEN (((rt1.c0)>=(rt1.c1))) AND ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt1 ORDER BY ((x'') IS FALSE) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) IS TRUE)) BETWEEN (((rt1.c0)>=(rt1.c1))) AND ((((rt1.c3)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))))) ORDER BY ((x'') IS FALSE) DESC;
SELECT ALL * FROM rt1 WHERE (LTRIM(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)), ((rt1.c2) IS FALSE))) ORDER BY ((((rt1.c2)GLOB(x''))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)GLOB(x''))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LTRIM(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)), ((rt1.c2) IS FALSE))) ORDER BY ((((rt1.c2)GLOB(x''))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)), ((rt1.c2) IS FALSE))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)GLOB(x''))) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (LTRIM(((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1)), ((rt1.c2) IS FALSE))) ORDER BY ((((rt1.c2)GLOB(x''))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (x''))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY ((0xffffffff9afe0bac)AND(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) BETWEEN (rt1.c3) AND (x''))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((0xffffffff9afe0bac)AND(rt1.c3)));
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (x''))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY ((0xffffffff9afe0bac)AND(rt1.c3));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2) BETWEEN (rt1.c3) AND (x''))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY ((0xffffffff9afe0bac)AND(rt1.c3)));
SELECT * FROM rt1 WHERE (CASE ((rt1.c2) BETWEEN (rt1.c3) AND (x''))  WHEN ((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1)) THEN rt1.c1 COLLATE NOCASE ELSE ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END) ORDER BY ((0xffffffff9afe0bac)AND(rt1.c3));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY NULLIF(((rt0.c2)>=(rt0.c1)), (- (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((rt0.c2)>=(rt0.c1)), (- (rt0.c1))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY NULLIF(((rt0.c2)>=(rt0.c1)), (- (rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(((rt0.c2)>=(rt0.c1)), (- (rt0.c1))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY NULLIF(((rt0.c2)>=(rt0.c1)), (- (rt0.c1))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('976313442'))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('976313442'))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('976313442'))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('976313442'))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((+ ('976313442'))) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN ((+ (x''))) AND ((rt1.c3 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ())) NOT BETWEEN ((+ (x''))) AND ((rt1.c3 IN (rt1.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN ((+ (x''))) AND ((rt1.c3 IN (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ())) NOT BETWEEN ((+ (x''))) AND ((rt1.c3 IN (rt1.c0))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2 IN ())) NOT BETWEEN ((+ (x''))) AND ((rt1.c3 IN (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c3  WHEN ((t0.c0)<<(rt0.c2)) THEN t0.c51 END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN ((t0.c0)<<(rt0.c2)) THEN t0.c51 END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c3  WHEN ((t0.c0)<<(rt0.c2)) THEN t0.c51 END);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c3  WHEN ((t0.c0)<<(rt0.c2)) THEN t0.c51 END) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (CASE rt1.c3  WHEN ((t0.c0)<<(rt0.c2)) THEN t0.c51 END);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c2)));
SELECT SUM(count) FROM (SELECT (((~ (rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((~ (rt1.c2)));
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt0.c2) NOTNULL))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END)) WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (TRIM(rt0.c1, NULL)))) ORDER BY (- (STRFTIME(rt0.c0, rt1.c2, rt1.c3, NULL, rt0.c2))) ASC  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER) DESC  NULLS FIRST, CASE ((rt1.c0)-(rt0.c2))  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN '161671812' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (TRIM(rt0.c1, NULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt0.c2) NOTNULL))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END)) ORDER BY (- (STRFTIME(rt0.c0, rt1.c2, rt1.c3, NULL, rt0.c2))) ASC  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER) DESC  NULLS FIRST, CASE ((rt1.c0)-(rt0.c2))  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN '161671812' END ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt0.c2) NOTNULL))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END)) WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (TRIM(rt0.c1, NULL)))) ORDER BY (- (STRFTIME(rt0.c0, rt1.c2, rt1.c3, NULL, rt0.c2))) ASC  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER) DESC  NULLS FIRST, CASE ((rt1.c0)-(rt0.c2))  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN '161671812' END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (TRIM(rt0.c1, NULL)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt0.c2) NOTNULL))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END)) ORDER BY (- (STRFTIME(rt0.c0, rt1.c2, rt1.c3, NULL, rt0.c2))) ASC  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER) DESC  NULLS FIRST, CASE ((rt1.c0)-(rt0.c2))  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN '161671812' END ASC);
SELECT * FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c2)))OR(((rt0.c2) NOTNULL))))OR(CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt0.c1 END)) WHERE (((rt1.c2 COLLATE NOCASE) NOT BETWEEN (TRIM(rt1.c2)) AND (TRIM(rt0.c1, NULL)))) ORDER BY (- (STRFTIME(rt0.c0, rt1.c2, rt1.c3, NULL, rt0.c2))) ASC  NULLS LAST, CAST(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) AS INTEGER) DESC  NULLS FIRST, CASE ((rt1.c0)-(rt0.c2))  WHEN CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c0 END THEN '161671812' END ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN t0.c51 WHEN rt0.c2 THEN t0.c51 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((x'')) AND ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN t0.c51 WHEN rt0.c2 THEN t0.c51 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN t0.c51 WHEN rt0.c2 THEN t0.c51 ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((x'')) AND ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN t0.c51 WHEN rt0.c2 THEN t0.c51 ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN t0.c51 WHEN rt0.c2 THEN t0.c51 ELSE rt0.c2 END))));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt1.c3) IS TRUE) IN ())) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (TYPEOF(rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (TYPEOF(rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(rt1.c2 COLLATE BINARY)) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (TYPEOF(rt1.c2 COLLATE BINARY));
SELECT * FROM rt1 NOT INDEXED, t0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (~ ((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (~ ((- (rt1.c1)))));
SELECT * FROM rt1 NOT INDEXED, t0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (~ ((- (rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (~ ((- (rt1.c1)))));
SELECT * FROM rt1 NOT INDEXED, t0, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (~ ((- (rt1.c1))));
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c2)) AS INTEGER)) ORDER BY (~ (((rt1.c2)IS('-701766274')))) ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN (TIME(rt1.c1, rt1.c1, rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)&(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)IS('-701766274')))) ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN (TIME(rt1.c1, rt1.c1, rt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c2)) AS INTEGER)) ORDER BY (~ (((rt1.c2)IS('-701766274')))) ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN (TIME(rt1.c1, rt1.c1, rt1.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1)&(rt1.c2)) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)IS('-701766274')))) ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN (TIME(rt1.c1, rt1.c1, rt1.c3)))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c1)&(rt1.c2)) AS INTEGER)) ORDER BY (~ (((rt1.c2)IS('-701766274')))) ASC  NULLS FIRST, (((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3)) IN (TIME(rt1.c1, rt1.c1, rt1.c3)))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (CAST(((rt0.c2)*('')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)*('')) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (+ (((rt0.c1)<>(rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (CAST(((rt0.c2)*('')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)*('')) AS TEXT)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (+ (((rt0.c1)<>(rt0.c1)))));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (+ (((rt0.c1)!=(rt0.c1)))) WHERE (CAST(((rt0.c2)*('')) AS TEXT));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (((((- (t0.c51)))OR((+ (rt1.c3)))))AND(TYPEOF(t0.c51))) WHERE (((CAST(t0.c51 AS BLOB))IS NOT(((rt1.c2) NOT NULL)))) ORDER BY (rt1.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c51 AS BLOB))IS NOT(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((((- (t0.c51)))OR((+ (rt1.c3)))))AND(TYPEOF(t0.c51))) ORDER BY (rt1.c2 IN ()) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (((((- (t0.c51)))OR((+ (rt1.c3)))))AND(TYPEOF(t0.c51))) WHERE (((CAST(t0.c51 AS BLOB))IS NOT(((rt1.c2) NOT NULL)))) ORDER BY (rt1.c2 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c51 AS BLOB))IS NOT(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (((((- (t0.c51)))OR((+ (rt1.c3)))))AND(TYPEOF(t0.c51))) ORDER BY (rt1.c2 IN ()) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (((((- (t0.c51)))OR((+ (rt1.c3)))))AND(TYPEOF(t0.c51))) WHERE (((CAST(t0.c51 AS BLOB))IS NOT(((rt1.c2) NOT NULL)))) ORDER BY (rt1.c2 IN ()) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c51 THEN rt0.c1 END) BETWEEN (((((t0.c0)AND(rt0.c0)))AND(t0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c51 THEN rt0.c1 END) BETWEEN (((((t0.c0)AND(rt0.c0)))AND(t0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c51 THEN rt0.c1 END) BETWEEN (((((t0.c0)AND(rt0.c0)))AND(t0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN t0.c51 THEN rt0.c1 END) BETWEEN (((((t0.c0)AND(rt0.c0)))AND(t0.c0))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CASE rt0.c0  WHEN t0.c51 THEN rt0.c1 END) BETWEEN (((((t0.c0)AND(rt0.c0)))AND(t0.c0))) AND (rt0.c0 COLLATE NOCASE)));
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c2))>=((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c2))>=((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c2))>=((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c2))>=((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((((rt0.c2))>=((rt1.c0)))))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 END)IS NOT((((rt1.c2, 0.1796404507643845, rt0.c1))<((t0.c51, rt1.c3, rt0.c1))))) LEFT OUTER JOIN rt1 ON CASE ((x'')LIKE(t0.c51))  WHEN (rt1.c2 IN ()) THEN ((-539222406) ISNULL) ELSE (((('rDB]IX2')OR(rt1.c2)))AND(t0.c0)) END WHERE (LIKELY(CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 END)IS NOT((((rt1.c2, 0.1796404507643845, rt0.c1))<((t0.c51, rt1.c3, rt0.c1))))) LEFT OUTER JOIN rt1 ON CASE ((x'')LIKE(t0.c51))  WHEN (rt1.c2 IN ()) THEN ((-539222406) ISNULL) ELSE (((('rDB]IX2')OR(rt1.c2)))AND(t0.c0)) END);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 END)IS NOT((((rt1.c2, 0.1796404507643845, rt0.c1))<((t0.c51, rt1.c3, rt0.c1))))) LEFT OUTER JOIN rt1 ON CASE ((x'')LIKE(t0.c51))  WHEN (rt1.c2 IN ()) THEN ((-539222406) ISNULL) ELSE (((('rDB]IX2')OR(rt1.c2)))AND(t0.c0)) END WHERE (LIKELY(CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CASE rt1.c0  WHEN t0.c0 THEN rt0.c0 END)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN rt0.c0 END)IS NOT((((rt1.c2, 0.1796404507643845, rt0.c1))<((t0.c51, rt1.c3, rt0.c1))))) LEFT OUTER JOIN rt1 ON CASE ((x'')LIKE(t0.c51))  WHEN (rt1.c2 IN ()) THEN ((-539222406) ISNULL) ELSE (((('rDB]IX2')OR(rt1.c2)))AND(t0.c0)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY ((((('1160289031', rt1.c1, rt1.c1))<((rt1.c2, rt1.c0, rt1.c0)))) NOT BETWEEN (0.9906166271180981) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((('1160289031', rt1.c1, rt1.c1))<((rt1.c2, rt1.c0, rt1.c0)))) NOT BETWEEN (0.9906166271180981) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY ((((('1160289031', rt1.c1, rt1.c1))<((rt1.c2, rt1.c0, rt1.c0)))) NOT BETWEEN (0.9906166271180981) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((('1160289031', rt1.c1, rt1.c1))<((rt1.c2, rt1.c0, rt1.c0)))) NOT BETWEEN (0.9906166271180981) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY ((((('1160289031', rt1.c1, rt1.c1))<((rt1.c2, rt1.c0, rt1.c0)))) NOT BETWEEN (0.9906166271180981) AND (CASE rt1.c1  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((((((NULL)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)) AS NUMERIC)) ORDER BY (- (((rt0.c1)LIKE(rt0.c0)))) ASC;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CASE ((t0.c51)>(rt1.c0))  WHEN rt1.c3 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (+ (t0.c51)) THEN ((rt1.c2)OR(rt0.c1)) WHEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c51) IS FALSE) END) ORDER BY (((((+ (rt1.c2)))OR(((x'')<('')))))OR(-1.630954186E9));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c51)>(rt1.c0))  WHEN rt1.c3 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (+ (t0.c51)) THEN ((rt1.c2)OR(rt0.c1)) WHEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c51) IS FALSE) END) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((+ (rt1.c2)))OR(((x'')<('')))))OR(-1.630954186E9)));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CASE ((t0.c51)>(rt1.c0))  WHEN rt1.c3 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (+ (t0.c51)) THEN ((rt1.c2)OR(rt0.c1)) WHEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c51) IS FALSE) END) ORDER BY (((((+ (rt1.c2)))OR(((x'')<('')))))OR(-1.630954186E9));
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c51)>(rt1.c0))  WHEN rt1.c3 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (+ (t0.c51)) THEN ((rt1.c2)OR(rt0.c1)) WHEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c51) IS FALSE) END) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((((+ (rt1.c2)))OR(((x'')<('')))))OR(-1.630954186E9)));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (CASE ((t0.c51)>(rt1.c0))  WHEN rt1.c3 COLLATE NOCASE THEN (rt1.c0 IN ()) WHEN (+ (t0.c51)) THEN ((rt1.c2)OR(rt0.c1)) WHEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CAST(t0.c51 AS REAL) ELSE ((t0.c51) IS FALSE) END) ORDER BY (((((+ (rt1.c2)))OR(((x'')<('')))))OR(-1.630954186E9));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c2) AND (t0.c0)))<(((t0.c0) NOTNULL))) WHERE (rt1.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c2) AND (t0.c0)))<(((t0.c0) NOTNULL))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c2) AND (t0.c0)))<(((t0.c0) NOTNULL))) WHERE (rt1.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c2) AND (t0.c0)))<(((t0.c0) NOTNULL))));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((((NULL) BETWEEN (rt1.c2) AND (t0.c0)))<(((t0.c0) NOTNULL))) WHERE (rt1.c3 COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=((((t0.c51, t0.c0, t0.c0)) BETWEEN ((t0.c51, x'', t0.c0)) AND ((t0.c51, NULL, t0.c51))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=((((t0.c51, t0.c0, t0.c0)) BETWEEN ((t0.c51, x'', t0.c0)) AND ((t0.c51, NULL, t0.c51)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=((((t0.c51, t0.c0, t0.c0)) BETWEEN ((t0.c51, x'', t0.c0)) AND ((t0.c51, NULL, t0.c51))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=((((t0.c51, t0.c0, t0.c0)) BETWEEN ((t0.c51, x'', t0.c0)) AND ((t0.c51, NULL, t0.c51)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))=((((t0.c51, t0.c0, t0.c0)) BETWEEN ((t0.c51, x'', t0.c0)) AND ((t0.c51, NULL, t0.c51))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c51 AS BLOB)) BETWEEN (t0.c51) AND (((t0.c0) ISNULL)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN ((+ (rt0.c2))) AND (ABS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS BLOB)) BETWEEN (t0.c51) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN ((+ (rt0.c2))) AND (ABS(rt0.c2))));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c51 AS BLOB)) BETWEEN (t0.c51) AND (((t0.c0) ISNULL)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN ((+ (rt0.c2))) AND (ABS(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c51 AS BLOB)) BETWEEN (t0.c51) AND (((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN ((+ (rt0.c2))) AND (ABS(rt0.c2))));
SELECT ALL * FROM t0, rt0 WHERE (((CAST(t0.c51 AS BLOB)) BETWEEN (t0.c51) AND (((t0.c0) ISNULL)))) ORDER BY ((UPPER(rt0.c2)) NOT BETWEEN ((+ (rt0.c2))) AND (ABS(rt0.c2)));
SELECT * FROM rt1 WHERE (((CASE WHEN 0.6019933394243338 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN '2042636695' THEN rt1.c3 END)IS(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6019933394243338 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN '2042636695' THEN rt1.c3 END)IS(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN 0.6019933394243338 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN '2042636695' THEN rt1.c3 END)IS(LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 0.6019933394243338 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN '2042636695' THEN rt1.c3 END)IS(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((CASE WHEN 0.6019933394243338 THEN rt1.c0 WHEN rt1.c1 THEN NULL WHEN '2042636695' THEN rt1.c3 END)IS(LAST_INSERT_ROWID())));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((t0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', ((t0.c0) NOT BETWEEN ('1681893137') AND (rt0.c0)), SQLITE_SOURCE_ID())) AND ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE t0.c51 END, ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c3))))) ORDER BY 0.15461077439148496  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', ((t0.c0) NOT BETWEEN ('1681893137') AND (rt0.c0)), SQLITE_SOURCE_ID())) AND ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE t0.c51 END, ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c3))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY 0.15461077439148496  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((t0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', ((t0.c0) NOT BETWEEN ('1681893137') AND (rt0.c0)), SQLITE_SOURCE_ID())) AND ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE t0.c51 END, ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c3))))) ORDER BY 0.15461077439148496  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', ((t0.c0) NOT BETWEEN ('1681893137') AND (rt0.c0)), SQLITE_SOURCE_ID())) AND ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE t0.c51 END, ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c3))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY 0.15461077439148496  NULLS FIRST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((t0.c0, rt0.c0, rt1.c2)) NOT BETWEEN ((x'', ((t0.c0) NOT BETWEEN ('1681893137') AND (rt0.c0)), SQLITE_SOURCE_ID())) AND ((CASE WHEN rt1.c3 THEN rt0.c2 ELSE t0.c51 END, ((rt1.c1) NOT BETWEEN (t0.c0) AND (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt1.c3))))) ORDER BY 0.15461077439148496  NULLS FIRST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 NOT INDEXED WHERE ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) ORDER BY NULL;
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0 IN ()))*(CAST(0.14292750477451666 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))*(CAST(0.14292750477451666 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0 IN ()))*(CAST(0.14292750477451666 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))*(CAST(0.14292750477451666 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((rt0.c0 IN ()))*(CAST(0.14292750477451666 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) ORDER BY ((((rt0.c2)&(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.9029028519655599 END) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)), CAST((rt0.c2 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.9029028519655599 END) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)), CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) ORDER BY ((((rt0.c2)&(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.9029028519655599 END) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)), CAST((rt0.c2 IN ()) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)&(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.9029028519655599 END) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)), CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) ISNULL)) ORDER BY ((((rt0.c2)&(rt0.c2))) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0.9029028519655599 END) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END)), CAST((rt0.c2 IN ()) AS NUMERIC);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((- (t0.c0))))>((((rt0.c1) IS FALSE)))) CROSS JOIN rt1 ON (((((rt1.c3, t0.c0, t0.c0, rt1.c2, NULL)) BETWEEN ((t0.c0, rt0.c1, x'', rt1.c1, 0.5092602849244013)) AND ((rt1.c3, t0.c51, rt1.c1, rt1.c2, t0.c51)))) IS FALSE) WHERE ((((- (rt1.c3)))-((((rt1.c1))!=((rt1.c1)))))) ORDER BY '1103360075'  NULLS FIRST, (((rt1.c1) ISNULL) IN ()) DESC  NULLS FIRST, (((((+ (rt0.c2)))OR(rt1.c3 COLLATE BINARY)))AND((rt1.c0 IN (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3)))-((((rt1.c1))!=((rt1.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((- (t0.c0))))>((((rt0.c1) IS FALSE)))) CROSS JOIN rt1 ON (((((rt1.c3, t0.c0, t0.c0, rt1.c2, NULL)) BETWEEN ((t0.c0, rt0.c1, x'', rt1.c1, 0.5092602849244013)) AND ((rt1.c3, t0.c51, rt1.c1, rt1.c2, t0.c51)))) IS FALSE) ORDER BY '1103360075'  NULLS FIRST, (((rt1.c1) ISNULL) IN ()) DESC  NULLS FIRST, (((((+ (rt0.c2)))OR(rt1.c3 COLLATE BINARY)))AND((rt1.c0 IN (rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((- (t0.c0))))>((((rt0.c1) IS FALSE)))) CROSS JOIN rt1 ON (((((rt1.c3, t0.c0, t0.c0, rt1.c2, NULL)) BETWEEN ((t0.c0, rt0.c1, x'', rt1.c1, 0.5092602849244013)) AND ((rt1.c3, t0.c51, rt1.c1, rt1.c2, t0.c51)))) IS FALSE) WHERE ((((- (rt1.c3)))-((((rt1.c1))!=((rt1.c1)))))) ORDER BY '1103360075'  NULLS FIRST, (((rt1.c1) ISNULL) IN ()) DESC  NULLS FIRST, (((((+ (rt0.c2)))OR(rt1.c3 COLLATE BINARY)))AND((rt1.c0 IN (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c3)))-((((rt1.c1))!=((rt1.c1)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((- (t0.c0))))>((((rt0.c1) IS FALSE)))) CROSS JOIN rt1 ON (((((rt1.c3, t0.c0, t0.c0, rt1.c2, NULL)) BETWEEN ((t0.c0, rt0.c1, x'', rt1.c1, 0.5092602849244013)) AND ((rt1.c3, t0.c51, rt1.c1, rt1.c2, t0.c51)))) IS FALSE) ORDER BY '1103360075'  NULLS FIRST, (((rt1.c1) ISNULL) IN ()) DESC  NULLS FIRST, (((((+ (rt0.c2)))OR(rt1.c3 COLLATE BINARY)))AND((rt1.c0 IN (rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((- (t0.c0))))>((((rt0.c1) IS FALSE)))) CROSS JOIN rt1 ON (((((rt1.c3, t0.c0, t0.c0, rt1.c2, NULL)) BETWEEN ((t0.c0, rt0.c1, x'', rt1.c1, 0.5092602849244013)) AND ((rt1.c3, t0.c51, rt1.c1, rt1.c2, t0.c51)))) IS FALSE) WHERE ((((- (rt1.c3)))-((((rt1.c1))!=((rt1.c1)))))) ORDER BY '1103360075'  NULLS FIRST, (((rt1.c1) ISNULL) IN ()) DESC  NULLS FIRST, (((((+ (rt0.c2)))OR(rt1.c3 COLLATE BINARY)))AND((rt1.c0 IN (rt1.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (((((((rt1.c3) NOTNULL))AND(LIKELY(rt1.c3))))AND((rt1.c3 IN ())))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER) DESC, (rt1.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) NOTNULL))AND(LIKELY(rt1.c3))))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER) DESC, (rt1.c0 IN ())  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE (((((((rt1.c3) NOTNULL))AND(LIKELY(rt1.c3))))AND((rt1.c3 IN ())))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER) DESC, (rt1.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3) NOTNULL))AND(LIKELY(rt1.c3))))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER) DESC, (rt1.c0 IN ())  NULLS FIRST);
SELECT * FROM rt1, t0 WHERE (((((((rt1.c3) NOTNULL))AND(LIKELY(rt1.c3))))AND((rt1.c3 IN ())))) ORDER BY CAST(rt1.c2 COLLATE BINARY AS INTEGER) DESC, (rt1.c0 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ('1922029237');
SELECT SUM(count) FROM (SELECT ALL (('1922029237') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ('1922029237');
SELECT SUM(count) FROM (SELECT ALL (('1922029237') IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ('1922029237');
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt1.c3 AS REAL)  WHEN '1839860319' THEN ((rt1.c0)%(-1.921049964E9)) ELSE ((rt1.c3)>>(t0.c0)) END WHERE (rt0.c0) ORDER BY ((LOWER(DISTINCT rt1.c0))||(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt1.c3 AS REAL)  WHEN '1839860319' THEN ((rt1.c0)%(-1.921049964E9)) ELSE ((rt1.c3)>>(t0.c0)) END ORDER BY ((LOWER(DISTINCT rt1.c0))||(((rt0.c1) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt1.c3 AS REAL)  WHEN '1839860319' THEN ((rt1.c0)%(-1.921049964E9)) ELSE ((rt1.c3)>>(t0.c0)) END WHERE (rt0.c0) ORDER BY ((LOWER(DISTINCT rt1.c0))||(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt1.c3 AS REAL)  WHEN '1839860319' THEN ((rt1.c0)%(-1.921049964E9)) ELSE ((rt1.c3)>>(t0.c0)) END ORDER BY ((LOWER(DISTINCT rt1.c0))||(((rt0.c1) NOT NULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 RIGHT OUTER JOIN rt1 ON CASE CAST(rt1.c3 AS REAL)  WHEN '1839860319' THEN ((rt1.c0)%(-1.921049964E9)) ELSE ((rt1.c3)>>(t0.c0)) END WHERE (rt0.c0) ORDER BY ((LOWER(DISTINCT rt1.c0))||(((rt0.c1) NOT NULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY CAST(((rt0.c2)>(rt0.c2)) AS BLOB), CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt0.c0))>=((rt1.c1))) WHEN LIKELY(rt1.c1) THEN (((rt1.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c2, rt0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt1.c2))) WHEN ((t0.c0)>>(rt1.c1)) THEN ((rt1.c1)OR(rt1.c1)) ELSE rt1.c2 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST(((rt0.c2)>(rt0.c2)) AS BLOB), CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt0.c0))>=((rt1.c1))) WHEN LIKELY(rt1.c1) THEN (((rt1.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c2, rt0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt1.c2))) WHEN ((t0.c0)>>(rt1.c1)) THEN ((rt1.c1)OR(rt1.c1)) ELSE rt1.c2 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY CAST(((rt0.c2)>(rt0.c2)) AS BLOB), CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt0.c0))>=((rt1.c1))) WHEN LIKELY(rt1.c1) THEN (((rt1.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c2, rt0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt1.c2))) WHEN ((t0.c0)>>(rt1.c1)) THEN ((rt1.c1)OR(rt1.c1)) ELSE rt1.c2 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY CAST(((rt0.c2)>(rt0.c2)) AS BLOB), CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt0.c0))>=((rt1.c1))) WHEN LIKELY(rt1.c1) THEN (((rt1.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c2, rt0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt1.c2))) WHEN ((t0.c0)>>(rt1.c1)) THEN ((rt1.c1)OR(rt1.c1)) ELSE rt1.c2 END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(rt1.c2 AS REAL)) ORDER BY CAST(((rt0.c2)>(rt0.c2)) AS BLOB), CASE WHEN ((rt1.c1) NOT NULL) THEN (((rt0.c0))>=((rt1.c1))) WHEN LIKELY(rt1.c1) THEN (((rt1.c2, rt1.c2, t0.c0)) BETWEEN ((rt1.c2, rt0.c2, rt0.c1)) AND ((rt1.c2, rt1.c1, rt1.c2))) WHEN ((t0.c0)>>(rt1.c1)) THEN ((rt1.c1)OR(rt1.c1)) ELSE rt1.c2 END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt1.c0 THEN rt1.c1 END))<=((((rt0.c0)IS NOT(rt0.c2))))) INNER JOIN t0 ON CAST(GLOB(rt0.c0, rt0.c1) AS INTEGER) WHERE (TRIM(DISTINCT ((t0.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c0)-(rt1.c2)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt1.c0 THEN rt1.c1 END))<=((((rt0.c0)IS NOT(rt0.c2))))) INNER JOIN t0 ON CAST(GLOB(rt0.c0, rt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt1.c0 THEN rt1.c1 END))<=((((rt0.c0)IS NOT(rt0.c2))))) INNER JOIN t0 ON CAST(GLOB(rt0.c0, rt0.c1) AS INTEGER) WHERE (TRIM(DISTINCT ((t0.c0)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c0)-(rt1.c2)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt1.c0 THEN rt1.c1 END))<=((((rt0.c0)IS NOT(rt0.c2))))) INNER JOIN t0 ON CAST(GLOB(rt0.c0, rt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON (((CASE WHEN rt1.c0 THEN rt1.c1 END))<=((((rt0.c0)IS NOT(rt0.c2))))) INNER JOIN t0 ON CAST(GLOB(rt0.c0, rt0.c1) AS INTEGER) WHERE (TRIM(DISTINCT ((t0.c0)-(rt1.c2))));
SELECT * FROM rt0, t0, rt1 WHERE (((((t0.c51) NOT BETWEEN (rt0.c2) AND (t0.c51)))>=(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT BETWEEN (rt0.c2) AND (t0.c51)))>=(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (((((t0.c51) NOT BETWEEN (rt0.c2) AND (t0.c51)))>=(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((t0.c51) NOT BETWEEN (rt0.c2) AND (t0.c51)))>=(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (((((t0.c51) NOT BETWEEN (rt0.c2) AND (t0.c51)))>=(CAST(rt1.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>>(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c51, t0.c0))) AND (((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR('.k	t#')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c51, t0.c0))) AND (((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR('.k	t#'))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>>(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c51, t0.c0))) AND (((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR('.k	t#')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c51, t0.c0))) AND (((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR('.k	t#'))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c2)>>(t0.c0))) NOT BETWEEN ((rt0.c0 IN (t0.c51, t0.c0))) AND (((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR('.k	t#')))));
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON 0.16724408516598088 WHERE (((((rt0.c1)>(rt1.c2))) NOT BETWEEN (t0.c51) AND (t0.c51))) ORDER BY (~ (TIME(rt1.c3, t0.c51, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt1.c2))) NOT BETWEEN (t0.c51) AND (t0.c51))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON 0.16724408516598088 ORDER BY (~ (TIME(rt1.c3, t0.c51, rt0.c2))));
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON 0.16724408516598088 WHERE (((((rt0.c1)>(rt1.c2))) NOT BETWEEN (t0.c51) AND (t0.c51))) ORDER BY (~ (TIME(rt1.c3, t0.c51, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt1.c2))) NOT BETWEEN (t0.c51) AND (t0.c51))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN rt0 ON 0.16724408516598088 ORDER BY (~ (TIME(rt1.c3, t0.c51, rt0.c2))));
SELECT * FROM t0, rt1 CROSS JOIN rt0 ON 0.16724408516598088 WHERE (((((rt0.c1)>(rt1.c2))) NOT BETWEEN (t0.c51) AND (t0.c51))) ORDER BY (~ (TIME(rt1.c3, t0.c51, rt0.c2)));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((x''))>=((TRIM(DISTINCT rt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))>=((TRIM(DISTINCT rt0.c0, t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((x''))>=((TRIM(DISTINCT rt0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))>=((TRIM(DISTINCT rt0.c0, t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((x''))>=((TRIM(DISTINCT rt0.c0, t0.c0)))));
SELECT * FROM rt0, rt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN (((rt1.c3)=(t0.c51))) AND (((t0.c51)*(t0.c51)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c51))) NOT BETWEEN (((rt1.c3)=(t0.c51))) AND (((t0.c51)*(t0.c51))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN (((rt1.c3)=(t0.c51))) AND (((t0.c51)*(t0.c51)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c51))) NOT BETWEEN (((rt1.c3)=(t0.c51))) AND (((t0.c51)*(t0.c51))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE ((((~ (t0.c51))) NOT BETWEEN (((rt1.c3)=(t0.c51))) AND (((t0.c51)*(t0.c51)))));
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(CAST(rt0.c2 AS INTEGER) AS INTEGER));
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.26045558993512974 WHERE ((((((rt0.c0)) BETWEEN ((t0.c51)) AND ((rt1.c0))))IS NOT('453966273')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((t0.c51)) AND ((rt1.c0))))IS NOT('453966273'))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.26045558993512974);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.26045558993512974 WHERE ((((((rt0.c0)) BETWEEN ((t0.c51)) AND ((rt1.c0))))IS NOT('453966273')));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((t0.c51)) AND ((rt1.c0))))IS NOT('453966273'))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.26045558993512974);
SELECT COUNT(*) FROM t0, rt0 LEFT OUTER JOIN rt1 ON 0.26045558993512974 WHERE ((((((rt0.c0)) BETWEEN ((t0.c51)) AND ((rt1.c0))))IS NOT('453966273')));
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c0)OR(rt1.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt1.c2)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c0)OR(rt1.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(rt1.c2)))OR(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((((rt0.c0)OR(rt1.c2)))OR(rt0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c3)) AS TEXT));
SELECT ALL * FROM rt0, t0 INDEXED BY i58, rt1 WHERE (CASE (((rt0.c2))==((t0.c51)))  WHEN 0.8310990414424859 THEN rt0.c1 WHEN CAST(t0.c0 AS NUMERIC) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt1.c1 IN (0.9859147666499738)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c51 END ELSE ((t0.c0)OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))=((t0.c51)))  WHEN 0.8310990414424859 THEN rt0.c1 WHEN CAST(t0.c0 AS NUMERIC) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt1.c1 IN (0.9859147666499738)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c51 END ELSE ((t0.c0)OR(rt1.c1)) END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i58, rt1);
SELECT ALL * FROM rt0, t0 INDEXED BY i58, rt1 WHERE (CASE (((rt0.c2))==((t0.c51)))  WHEN 0.8310990414424859 THEN rt0.c1 WHEN CAST(t0.c0 AS NUMERIC) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt1.c1 IN (0.9859147666499738)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c51 END ELSE ((t0.c0)OR(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))=((t0.c51)))  WHEN 0.8310990414424859 THEN rt0.c1 WHEN CAST(t0.c0 AS NUMERIC) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt1.c1 IN (0.9859147666499738)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c51 END ELSE ((t0.c0)OR(rt1.c1)) END) IS TRUE)  as count FROM rt0, t0 INDEXED BY i58, rt1);
SELECT ALL * FROM rt0, t0 INDEXED BY i58, rt1 WHERE (CASE (((rt0.c2))==((t0.c51)))  WHEN 0.8310990414424859 THEN rt0.c1 WHEN CAST(t0.c0 AS NUMERIC) THEN ((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt1.c3)) WHEN (rt1.c1 IN (0.9859147666499738)) THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE t0.c51 END ELSE ((t0.c0)OR(rt1.c1)) END);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(('234737796' IN (NULL, NULL)))) LEFT OUTER JOIN t0 ON ((((-3.4234118E7 IN (rt1.c0)), ((rt1.c3)||(rt1.c1)), rt1.c3 COLLATE BINARY))==((CAST(rt0.c1 AS INTEGER), x'', ((0x742621e5)|(t0.c0))))) WHERE ((NOT (CASE t0.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((t0.c51 COLLATE RTRIM)+(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(('234737796' IN (NULL, NULL)))) LEFT OUTER JOIN t0 ON ((((-3.4234118E7 IN (rt1.c0)), ((rt1.c3)||(rt1.c1)), rt1.c3 COLLATE BINARY))==((CAST(rt0.c1 AS INTEGER), x'', ((0x742621e5)|(t0.c0))))) ORDER BY ((t0.c51 COLLATE RTRIM)+(x''))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(('234737796' IN (NULL, NULL)))) LEFT OUTER JOIN t0 ON ((((-3.4234118E7 IN (rt1.c0)), ((rt1.c3)||(rt1.c1)), rt1.c3 COLLATE BINARY))==((CAST(rt0.c1 AS INTEGER), x'', ((0x742621e5)|(t0.c0))))) WHERE ((NOT (CASE t0.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((t0.c51 COLLATE RTRIM)+(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE t0.c0  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN t0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))))AND(rt0.c2 COLLATE NOCASE)))AND(('234737796' IN (NULL, NULL)))) LEFT OUTER JOIN t0 ON ((((-3.4234118E7 IN (rt1.c0)), ((rt1.c3)||(rt1.c1)), rt1.c3 COLLATE BINARY))==((CAST(rt0.c1 AS INTEGER), x'', ((0x742621e5)|(t0.c0))))) ORDER BY ((t0.c51 COLLATE RTRIM)+(x''))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51))) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51))) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51))) AND (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51))) AND (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((t0.c51) NOT BETWEEN (rt0.c0) AND (t0.c51))) AND (((rt0.c2) IS TRUE))));
SELECT * FROM t0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)!=(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)!=(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((rt1.c2 COLLATE RTRIM)<>(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE (NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c51 END, ((t0.c0)<<(t0.c51)))) ORDER BY CASE CASE NULL  WHEN 0.7722443350574526 THEN t0.c51 END  WHEN t0.c51 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c51 END, ((t0.c0)<<(t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE NULL  WHEN 0.7722443350574526 THEN t0.c51 END  WHEN t0.c51 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c51 END, ((t0.c0)<<(t0.c51)))) ORDER BY CASE CASE NULL  WHEN 0.7722443350574526 THEN t0.c51 END  WHEN t0.c51 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c51 END, ((t0.c0)<<(t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE NULL  WHEN 0.7722443350574526 THEN t0.c51 END  WHEN t0.c51 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c0))) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (NULLIF(CASE t0.c51  WHEN t0.c0 THEN t0.c51 END, ((t0.c0)<<(t0.c51)))) ORDER BY CASE CASE NULL  WHEN 0.7722443350574526 THEN t0.c51 END  WHEN t0.c51 COLLATE BINARY THEN (((t0.c0)) BETWEEN ((t0.c51)) AND ((t0.c0))) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0 IN (t0.c51))) BETWEEN (CASE rt1.c3  WHEN '1804189160' THEN rt1.c1 ELSE t0.c0 END) AND (CAST(rt1.c1 AS TEXT)))) ORDER BY (((((rt1.c1)>=(rt1.c3)), ((rt1.c1) BETWEEN (t0.c0) AND (t0.c0)), (- (rt1.c1))))=((LIKELY(DISTINCT rt1.c2), t0.c51 COLLATE RTRIM, (t0.c0 IN ())))) DESC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (t0.c51))) BETWEEN (CASE rt1.c3  WHEN '1804189160' THEN rt1.c1 ELSE t0.c0 END) AND (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c1)>=(rt1.c3)), ((rt1.c1) BETWEEN (t0.c0) AND (t0.c0)), (- (rt1.c1))))=((LIKELY(DISTINCT rt1.c2), t0.c51 COLLATE RTRIM, (t0.c0 IN ())))) DESC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0 IN (t0.c51))) BETWEEN (CASE rt1.c3  WHEN '1804189160' THEN rt1.c1 ELSE t0.c0 END) AND (CAST(rt1.c1 AS TEXT)))) ORDER BY (((((rt1.c1)>=(rt1.c3)), ((rt1.c1) BETWEEN (t0.c0) AND (t0.c0)), (- (rt1.c1))))=((LIKELY(DISTINCT rt1.c2), t0.c51 COLLATE RTRIM, (t0.c0 IN ())))) DESC, x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN (t0.c51))) BETWEEN (CASE rt1.c3  WHEN '1804189160' THEN rt1.c1 ELSE t0.c0 END) AND (CAST(rt1.c1 AS TEXT)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((((rt1.c1)>=(rt1.c3)), ((rt1.c1) BETWEEN (t0.c0) AND (t0.c0)), (- (rt1.c1))))=((LIKELY(DISTINCT rt1.c2), t0.c51 COLLATE RTRIM, (t0.c0 IN ())))) DESC, x'' DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0 IN (t0.c51))) BETWEEN (CASE rt1.c3  WHEN '1804189160' THEN rt1.c1 ELSE t0.c0 END) AND (CAST(rt1.c1 AS TEXT)))) ORDER BY (((((rt1.c1)>=(rt1.c3)), ((rt1.c1) BETWEEN (t0.c0) AND (t0.c0)), (- (rt1.c1))))=((LIKELY(DISTINCT rt1.c2), t0.c51 COLLATE RTRIM, (t0.c0 IN ())))) DESC, x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((((rt1.c1 IN (rt1.c2))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN (((t0.c51) IS TRUE), (~ (0.04987468831504871))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN (((t0.c51) IS TRUE), (~ (0.04987468831504871))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN (((t0.c51) IS TRUE), (~ (0.04987468831504871))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((- (t0.c0)) IN (((t0.c51) IS TRUE), (~ (0.04987468831504871))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((- (t0.c0)) IN (((t0.c51) IS TRUE), (~ (0.04987468831504871))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((x'')) AND ((((rt1.c1) IS TRUE)))));
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (-4.74239511E8);
SELECT SUM(count) FROM (SELECT ((-4.74239511E8) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (-4.74239511E8);
SELECT SUM(count) FROM (SELECT ((-4.74239511E8) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, t0 WHERE (-4.74239511E8);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (t0.c51);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (rt1.c3);
SELECT ALL * FROM rt0, rt1 WHERE (CAST('[p7a\rP' AS BLOB)) ORDER BY TYPEOF(rt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('[p7a\rP' AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY TYPEOF(rt0.c0) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CAST('[p7a\rP' AS BLOB)) ORDER BY TYPEOF(rt0.c0) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('[p7a\rP' AS BLOB)) IS TRUE)  as count FROM rt0, rt1 ORDER BY TYPEOF(rt0.c0) DESC);
SELECT ALL * FROM rt0, rt1 WHERE (CAST('[p7a\rP' AS BLOB)) ORDER BY TYPEOF(rt0.c0) DESC;
SELECT * FROM rt1, t0, rt0 WHERE ((((((rt1.c3)>(rt0.c0)), NULLIF(DISTINCT t0.c51, rt1.c3), x'e1a8'))<=(((~ (x'')), ((rt1.c1) NOT BETWEEN (-1.525698987E9) AND (rt0.c1)), CASE '3\rxN'  WHEN rt1.c0 THEN rt1.c2 END)))) ORDER BY ((CAST(t0.c51 AS REAL))LIKE((((rt1.c0))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)>(rt0.c0)), NULLIF(DISTINCT t0.c51, rt1.c3), x'e1a8'))<=(((~ (x'')), ((rt1.c1) NOT BETWEEN (-1.525698987E9) AND (rt0.c1)), CASE '3\rxN'  WHEN rt1.c0 THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CAST(t0.c51 AS REAL))LIKE((((rt1.c0))<=((rt0.c2))))) ASC);
SELECT * FROM rt1, t0, rt0 WHERE ((((((rt1.c3)>(rt0.c0)), NULLIF(DISTINCT t0.c51, rt1.c3), x'e1a8'))<=(((~ (x'')), ((rt1.c1) NOT BETWEEN (-1.525698987E9) AND (rt0.c1)), CASE '3\rxN'  WHEN rt1.c0 THEN rt1.c2 END)))) ORDER BY ((CAST(t0.c51 AS REAL))LIKE((((rt1.c0))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)>(rt0.c0)), NULLIF(DISTINCT t0.c51, rt1.c3), x'e1a8'))<=(((~ (x'')), ((rt1.c1) NOT BETWEEN (-1.525698987E9) AND (rt0.c1)), CASE '3\rxN'  WHEN rt1.c0 THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CAST(t0.c51 AS REAL))LIKE((((rt1.c0))<=((rt0.c2))))) ASC);
SELECT * FROM rt1, t0, rt0 WHERE ((((((rt1.c3)>(rt0.c0)), NULLIF(DISTINCT t0.c51, rt1.c3), x'e1a8'))<=(((~ (x'')), ((rt1.c1) NOT BETWEEN (-1.525698987E9) AND (rt0.c1)), CASE '3\rxN'  WHEN rt1.c0 THEN rt1.c2 END)))) ORDER BY ((CAST(t0.c51 AS REAL))LIKE((((rt1.c0))<=((rt0.c2))))) ASC;
SELECT ALL * FROM rt1, t0 WHERE ((((0.30046189683362046) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.30046189683362046) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((0.30046189683362046) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.30046189683362046) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((0.30046189683362046) NOT NULL) IN ()));
SELECT * FROM rt1, rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END THEN ((rt0.c2)-(rt1.c2)) ELSE 0X3e00efa END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END THEN ((rt0.c2)-(rt1.c2)) ELSE 0x3e00efa END ASC);
SELECT * FROM rt1, rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END THEN ((rt0.c2)-(rt1.c2)) ELSE 0X3e00efa END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END THEN ((rt0.c2)-(rt1.c2)) ELSE 0x3e00efa END ASC);
SELECT * FROM rt1, rt0 WHERE (CAST((- (rt0.c2)) AS BLOB)) ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt0.c0 END THEN ((rt0.c2)-(rt1.c2)) ELSE 0X3e00efa END ASC;
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2)AND(NULL)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)AND(NULL)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2)AND(NULL)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)AND(NULL)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE ((((((rt1.c2)AND(NULL)))AND(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c0)))AND('1653385290')))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt1.c1 IN (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)AND(rt1.c0)))AND('1653385290')))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt1.c1 IN (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c0)))AND('1653385290')))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt1.c1 IN (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c3)AND(rt1.c0)))AND('1653385290')))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt1.c1 IN (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((((rt1.c3)AND(rt1.c0)))AND('1653385290')))AND(rt1.c1)))OR(rt1.c3))) NOT BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt1.c1 IN (rt1.c3)))));
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0);
SELECT ALL COUNT(*) FROM t0, rt1, rt0 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON -463954909 WHERE (0.44087860575902227) ORDER BY (((- (t0.c0))) NOT BETWEEN (CASE t0.c51  WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.44087860575902227) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON -463954909 ORDER BY (((- (t0.c0))) NOT BETWEEN (CASE t0.c51  WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON -463954909 WHERE (0.44087860575902227) ORDER BY (((- (t0.c0))) NOT BETWEEN (CASE t0.c51  WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.44087860575902227) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON -463954909 ORDER BY (((- (t0.c0))) NOT BETWEEN (CASE t0.c51  WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON -463954909 WHERE (0.44087860575902227) ORDER BY (((- (t0.c0))) NOT BETWEEN (CASE t0.c51  WHEN rt0.c0 THEN rt1.c1 END) AND (((rt0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) ASC;
SELECT * FROM rt0 WHERE (CAST((((rt0.c0))==((rt0.c2))) AS INTEGER)) ORDER BY CAST(((rt0.c0)||(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))=((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)||(rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0))==((rt0.c2))) AS INTEGER)) ORDER BY CAST(((rt0.c0)||(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))=((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0)||(rt0.c2)) AS BLOB)  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0))==((rt0.c2))) AS INTEGER)) ORDER BY CAST(((rt0.c0)||(rt0.c2)) AS BLOB)  NULLS FIRST;
SELECT * FROM t0 WHERE (('칳&' IN (CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c51 WHEN t0.c0 THEN t0.c51 END)));
SELECT SUM(count) FROM (SELECT ALL ((('칳&' IN (CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c51 WHEN t0.c0 THEN t0.c51 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('칳&' IN (CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c51 WHEN t0.c0 THEN t0.c51 END)));
SELECT SUM(count) FROM (SELECT ALL ((('칳&' IN (CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c51 WHEN t0.c0 THEN t0.c51 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('칳&' IN (CASE WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c51 WHEN t0.c0 THEN t0.c51 END)));
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))/(((((rt1.c0)AND(rt0.c1)))OR('j5>9')))) WHERE (CASE (~ (rt1.c0))  WHEN (~ (NULL)) THEN (rt1.c1 IN ()) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt0.c0)+(rt1.c3)) ELSE ((rt1.c1) IS TRUE) END) ORDER BY '1832022025' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN (~ (NULL)) THEN (rt1.c1 IN ()) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt0.c0)+(rt1.c3)) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))/(((((rt1.c0)AND(rt0.c1)))OR('j5>9')))) ORDER BY '1832022025' DESC);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))/(((((rt1.c0)AND(rt0.c1)))OR('j5>9')))) WHERE (CASE (~ (rt1.c0))  WHEN (~ (NULL)) THEN (rt1.c1 IN ()) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt0.c0)+(rt1.c3)) ELSE ((rt1.c1) IS TRUE) END) ORDER BY '1832022025' DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt1.c0))  WHEN (~ (NULL)) THEN (rt1.c1 IN ()) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt0.c0)+(rt1.c3)) ELSE ((rt1.c1) IS TRUE) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))/(((((rt1.c0)AND(rt0.c1)))OR('j5>9')))) ORDER BY '1832022025' DESC);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON ((CAST(rt1.c1 AS INTEGER))/(((((rt1.c0)AND(rt0.c1)))OR('j5>9')))) WHERE (CASE (~ (rt1.c0))  WHEN (~ (NULL)) THEN (rt1.c1 IN ()) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c1))) THEN rt0.c1 COLLATE NOCASE WHEN CAST(rt1.c0 AS NUMERIC) THEN ((rt0.c0)+(rt1.c3)) ELSE ((rt1.c1) IS TRUE) END) ORDER BY '1832022025' DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (NULL);
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CASE WHEN ((rt1.c0)IS NOT(x'985b')) THEN rt1.c0 ELSE 0.49296536826783943 END) ORDER BY (- (rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)IS NOT(x'985b')) THEN rt1.c0 ELSE 0.49296536826783943 END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CASE WHEN ((rt1.c0)IS NOT(x'985b')) THEN rt1.c0 ELSE 0.49296536826783943 END) ORDER BY (- (rt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0)IS NOT(x'985b')) THEN rt1.c0 ELSE 0.49296536826783943 END) IS TRUE)  as count FROM rt1 ORDER BY (- (rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt1 NOT INDEXED WHERE (CASE WHEN ((rt1.c0)IS NOT(x'985b')) THEN rt1.c0 ELSE 0.49296536826783943 END) ORDER BY (- (rt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((((((((rt0.c1)AND(rt1.c1)))OR(rt0.c1)), (+ (rt1.c2)), (- (rt0.c1))))==((LIKE(-1.32275041E8, rt0.c2, '0'), (((rt1.c0, rt0.c0, t0.c51))<=((rt1.c2, rt1.c2, rt1.c1))), (((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c0, rt1.c1, t0.c51)) AND ((rt1.c2, rt1.c0, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)AND(rt1.c1)))OR(rt0.c1)), (+ (rt1.c2)), (- (rt0.c1))))=((LIKE(-1.32275041E8, rt0.c2, '0'), (((rt1.c0, rt0.c0, t0.c51))<=((rt1.c2, rt1.c2, rt1.c1))), (((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c0, rt1.c1, t0.c51)) AND ((rt1.c2, rt1.c0, rt1.c2))))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((((((((rt0.c1)AND(rt1.c1)))OR(rt0.c1)), (+ (rt1.c2)), (- (rt0.c1))))==((LIKE(-1.32275041E8, rt0.c2, '0'), (((rt1.c0, rt0.c0, t0.c51))<=((rt1.c2, rt1.c2, rt1.c1))), (((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c0, rt1.c1, t0.c51)) AND ((rt1.c2, rt1.c0, rt1.c2)))))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1)AND(rt1.c1)))OR(rt0.c1)), (+ (rt1.c2)), (- (rt0.c1))))=((LIKE(-1.32275041E8, rt0.c2, '0'), (((rt1.c0, rt0.c0, t0.c51))<=((rt1.c2, rt1.c2, rt1.c1))), (((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c0, rt1.c1, t0.c51)) AND ((rt1.c2, rt1.c0, rt1.c2))))))) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt1, rt0 CROSS JOIN t0 ON rt0.c0 WHERE ((((((((rt0.c1)AND(rt1.c1)))OR(rt0.c1)), (+ (rt1.c2)), (- (rt0.c1))))==((LIKE(-1.32275041E8, rt0.c2, '0'), (((rt1.c0, rt0.c0, t0.c51))<=((rt1.c2, rt1.c2, rt1.c1))), (((rt1.c3, rt1.c3, t0.c0)) BETWEEN ((rt1.c0, rt1.c1, t0.c51)) AND ((rt1.c2, rt1.c0, rt1.c2)))))));
SELECT ALL * FROM t0, rt0 WHERE (((t0.c51) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c51) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 NOT INDEXED);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c51) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t0.c51) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 NOT INDEXED, rt0 NOT INDEXED);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c51) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CASE rt1.c3  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c2 END)));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ('MJbQ2l9z');
SELECT SUM(count) FROM (SELECT ALL (('MJbQ2l9z') IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ('MJbQ2l9z');
SELECT SUM(count) FROM (SELECT ALL (('MJbQ2l9z') IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE ('MJbQ2l9z');
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt0, t0, rt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE (rt1.c3);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1)))|(CASE t0.c51  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (t0.c51) AND (rt1.c0)) AS BLOB) ASC  NULLS LAST, x'', ((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))OR(((rt0.c1) NOT NULL))))OR(CASE rt0.c0  WHEN rt0.c0 THEN '243569805' END));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1)))|(CASE t0.c51  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(((rt1.c2) NOT BETWEEN (t0.c51) AND (rt1.c0)) AS BLOB) ASC  NULLS LAST, x'', ((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))OR(((rt0.c1) NOT NULL))))OR(CASE rt0.c0  WHEN rt0.c0 THEN '243569805' END)));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1)))|(CASE t0.c51  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (t0.c51) AND (rt1.c0)) AS BLOB) ASC  NULLS LAST, x'', ((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))OR(((rt0.c1) NOT NULL))))OR(CASE rt0.c0  WHEN rt0.c0 THEN '243569805' END));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN (rt1.c1)))|(CASE t0.c51  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY CAST(((rt1.c2) NOT BETWEEN (t0.c51) AND (rt1.c0)) AS BLOB) ASC  NULLS LAST, x'', ((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))OR(((rt0.c1) NOT NULL))))OR(CASE rt0.c0  WHEN rt0.c0 THEN '243569805' END)));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((((rt1.c3 IN (rt1.c1)))|(CASE t0.c51  WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY CAST(((rt1.c2) NOT BETWEEN (t0.c51) AND (rt1.c0)) AS BLOB) ASC  NULLS LAST, x'', ((((((((rt1.c1)OR(rt0.c1)))OR(rt1.c0)))OR(((rt0.c1) NOT NULL))))OR(CASE rt0.c0  WHEN rt0.c0 THEN '243569805' END));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (TRIM(rt1.c3 COLLATE RTRIM, (('') NOT BETWEEN (t0.c51) AND (rt1.c2)))) ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c51)*(t0.c51)) THEN CASE WHEN rt1.c1 THEN t0.c51 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c3 COLLATE RTRIM, (('') NOT BETWEEN (t0.c51) AND (rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c51)*(t0.c51)) THEN CASE WHEN rt1.c1 THEN t0.c51 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (TRIM(rt1.c3 COLLATE RTRIM, (('') NOT BETWEEN (t0.c51) AND (rt1.c2)))) ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c51)*(t0.c51)) THEN CASE WHEN rt1.c1 THEN t0.c51 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(rt1.c3 COLLATE RTRIM, (('') NOT BETWEEN (t0.c51) AND (rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c51)*(t0.c51)) THEN CASE WHEN rt1.c1 THEN t0.c51 END END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (TRIM(rt1.c3 COLLATE RTRIM, (('') NOT BETWEEN (t0.c51) AND (rt1.c2)))) ORDER BY CASE (t0.c0 IN ())  WHEN ((t0.c51)*(t0.c51)) THEN CASE WHEN rt1.c1 THEN t0.c51 END END ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((((NOT (rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY CAST(0.5681686255537195 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.5681686255537195 AS BLOB) DESC);
SELECT * FROM rt1 WHERE ((((NOT (rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY CAST(0.5681686255537195 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(0.5681686255537195 AS BLOB) DESC);
SELECT * FROM rt1 WHERE ((((NOT (rt1.c3))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1))))) ORDER BY CAST(0.5681686255537195 AS BLOB) DESC;
SELECT * FROM rt0, rt1, t0 WHERE (((((((t0.c51)AND(rt0.c1)))OR(rt1.c1)))LIKE(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c51)AND(rt0.c1)))OR(rt1.c1)))LIKE(rt1.c0))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((((((t0.c51)AND(rt0.c1)))OR(rt1.c1)))LIKE(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c51)AND(rt0.c1)))OR(rt1.c1)))LIKE(rt1.c0))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT * FROM rt0, rt1, t0 WHERE (((((((t0.c51)AND(rt0.c1)))OR(rt1.c1)))LIKE(rt1.c0)));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c51))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c51))) IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c51))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c51))) IN ())) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE (((((rt0.c0)) NOT BETWEEN ((t0.c51)) AND ((t0.c51))) IN ()));
SELECT * FROM t0 WHERE (((((t0.c51)>(t0.c0))) IS FALSE)) ORDER BY json_valid(t0.c51) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)>(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY json_valid(t0.c51) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c51)>(t0.c0))) IS FALSE)) ORDER BY json_valid(t0.c51) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c51)>(t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY json_valid(t0.c51) COLLATE BINARY);
SELECT * FROM t0 WHERE (((((t0.c51)>(t0.c0))) IS FALSE)) ORDER BY json_valid(t0.c51) COLLATE BINARY;
SELECT ALL * FROM rt1, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES() COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (TOTAL_CHANGES() COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((t0.c0) ISNULL)) ISNULL));
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((((((t0.c51)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c51)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((((((t0.c51)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c51)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (CAST(((((((((t0.c51)OR(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC));
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (rt1.c0);
SELECT * FROM rt1 WHERE (CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (((rt1.c1))>((rt1.c0))) ELSE (~ (rt1.c2)) END) ORDER BY ((~ (rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (((rt1.c1))>((rt1.c0))) ELSE (~ (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((~ (rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (((rt1.c1))>((rt1.c0))) ELSE (~ (rt1.c2)) END) ORDER BY ((~ (rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (((rt1.c1))>((rt1.c0))) ELSE (~ (rt1.c2)) END) IS TRUE)  as count FROM rt1 ORDER BY ((~ (rt1.c1)) IN ()) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE WHEN CAST(rt1.c1 AS NUMERIC) THEN (((rt1.c1))>((rt1.c0))) ELSE (~ (rt1.c2)) END) ORDER BY ((~ (rt1.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c51) BETWEEN ('1772665780') AND (t0.c51))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c51) BETWEEN ('1772665780') AND (t0.c51)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c51) BETWEEN ('1772665780') AND (t0.c51))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c51) BETWEEN ('1772665780') AND (t0.c51)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT ((t0.c51) BETWEEN ('1772665780') AND (t0.c51))));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (load_extension(t0.c0)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC)) BETWEEN (load_extension(t0.c0)) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS NUMERIC)) BETWEEN (load_extension(t0.c0)) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS NUMERIC)) BETWEEN (load_extension(t0.c0)) AND (t0.c0))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM rt0 WHERE (CAST((((('')OR(rt0.c1)))OR(x'')) AS TEXT)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((('')OR(rt0.c1)))OR(x'')) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((((('')OR(rt0.c1)))OR(x'')) AS TEXT)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((('')OR(rt0.c1)))OR(x'')) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((((('')OR(rt0.c1)))OR(x'')) AS TEXT)) ORDER BY ((rt0.c2 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL)) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END) NOT NULL)) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM rt0, t0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))AND((((t0.c51)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((0.6131022612352054) BETWEEN (rt0.c1) AND (rt1.c3)))))OR((~ (t0.c0)))))AND(json_array_length(0xffffffffb540676b))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE))) ORDER BY (((x'')) NOT BETWEEN (((((rt0.c1))>=((rt1.c0))))) AND ((t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt0.c0 AS NUMERIC))AND((((t0.c51)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((0.6131022612352054) BETWEEN (rt0.c1) AND (rt1.c3)))))OR((~ (t0.c0)))))AND(json_array_length(0Xffffffffb540676b))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((x'')) NOT BETWEEN (((((rt0.c1))>=((rt1.c0))))) AND ((t0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))AND((((t0.c51)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((0.6131022612352054) BETWEEN (rt0.c1) AND (rt1.c3)))))OR((~ (t0.c0)))))AND(json_array_length(0xffffffffb540676b))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE))) ORDER BY (((x'')) NOT BETWEEN (((((rt0.c1))>=((rt1.c0))))) AND ((t0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(rt0.c0 AS NUMERIC))AND((((t0.c51)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((0.6131022612352054) BETWEEN (rt0.c1) AND (rt1.c3)))))OR((~ (t0.c0)))))AND(json_array_length(0Xffffffffb540676b))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (((x'')) NOT BETWEEN (((((rt0.c1))>=((rt1.c0))))) AND ((t0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, rt1 WHERE (((((((((((((CAST(rt0.c0 AS NUMERIC))AND((((t0.c51)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND(((0.6131022612352054) BETWEEN (rt0.c1) AND (rt1.c3)))))OR((~ (t0.c0)))))AND(json_array_length(0xffffffffb540676b))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(rt1.c1 COLLATE NOCASE))) ORDER BY (((x'')) NOT BETWEEN (((((rt0.c1))>=((rt1.c0))))) AND ((t0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CASE rt1.c3  WHEN ((rt1.c0)+(rt0.c2)) THEN CASE rt1.c1  WHEN t0.c0 THEN rt0.c1 ELSE x'79a6' END END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((rt1.c0)+(rt0.c2)) THEN CASE rt1.c1  WHEN t0.c0 THEN rt0.c1 ELSE x'79a6' END END) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY rt0.c2);
SELECT ALL * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CASE rt1.c3  WHEN ((rt1.c0)+(rt0.c2)) THEN CASE rt1.c1  WHEN t0.c0 THEN rt0.c1 ELSE x'79a6' END END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN ((rt1.c0)+(rt0.c2)) THEN CASE rt1.c1  WHEN t0.c0 THEN rt0.c1 ELSE x'79a6' END END) IS TRUE)  as count FROM rt1, t0 NATURAL JOIN rt0 ORDER BY rt0.c2);
SELECT ALL * FROM rt1, t0 NATURAL JOIN rt0 WHERE (CASE rt1.c3  WHEN ((rt1.c0)+(rt0.c2)) THEN CASE rt1.c1  WHEN t0.c0 THEN rt0.c1 ELSE x'79a6' END END) ORDER BY rt0.c2;
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((rt1.c1) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY (((rt1.c1) IS FALSE) IN ()) DESC);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((rt1.c1) IS FALSE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY (((rt1.c1) IS FALSE) IN ()) DESC);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE NOCASE) ORDER BY (((rt1.c1) IS FALSE) IN ()) DESC;
SELECT * FROM rt1 WHERE (json_valid(rt1.c1) COLLATE BINARY) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (json_valid(rt1.c1) COLLATE BINARY) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_valid(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL) ASC  NULLS LAST);
SELECT * FROM rt1 WHERE (json_valid(rt1.c1) COLLATE BINARY) ORDER BY CAST(rt1.c0 COLLATE BINARY AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CAST(298435334 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(298435334 AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(298435334 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(298435334 AS NUMERIC)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CAST(298435334 AS NUMERIC));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS REAL))*(((rt0.c2)*(t0.c0)))) WHERE (((~ (t0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (t0.c0 IN ()), (((t0.c0)) BETWEEN ((t0.c51)) AND ((rt0.c0))), ((rt0.c0)>=(rt0.c2)), (~ (rt0.c0)), -1995048782, '') ASC, 0.701106565395132 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS REAL))*(((rt0.c2)*(t0.c0)))) ORDER BY COALESCE(DISTINCT (t0.c0 IN ()), (((t0.c0)) BETWEEN ((t0.c51)) AND ((rt0.c0))), ((rt0.c0)>=(rt0.c2)), (~ (rt0.c0)), -1995048782, '') ASC, 0.701106565395132 DESC);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS REAL))*(((rt0.c2)*(t0.c0)))) WHERE (((~ (t0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (t0.c0 IN ()), (((t0.c0)) BETWEEN ((t0.c51)) AND ((rt0.c0))), ((rt0.c0)>=(rt0.c2)), (~ (rt0.c0)), -1995048782, '') ASC, 0.701106565395132 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS REAL))*(((rt0.c2)*(t0.c0)))) ORDER BY COALESCE(DISTINCT (t0.c0 IN ()), (((t0.c0)) BETWEEN ((t0.c51)) AND ((rt0.c0))), ((rt0.c0)>=(rt0.c2)), (~ (rt0.c0)), -1995048782, '') ASC, 0.701106565395132 DESC);
SELECT * FROM rt0 FULL OUTER JOIN t0 ON ((CAST(rt0.c1 AS REAL))*(((rt0.c2)*(t0.c0)))) WHERE (((~ (t0.c0)) IN ())) ORDER BY COALESCE(DISTINCT (t0.c0 IN ()), (((t0.c0)) BETWEEN ((t0.c51)) AND ((rt0.c0))), ((rt0.c0)>=(rt0.c2)), (~ (rt0.c0)), -1995048782, '') ASC, 0.701106565395132 DESC;
SELECT ALL * FROM t0, rt1 WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((t0.c0) NOT NULL));
SELECT * FROM rt1, t0 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((rt1.c0) IS TRUE)) AND (((((t0.c0)OR(rt1.c3)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY) BETWEEN (((rt1.c0) IS TRUE)) AND (((((t0.c0)OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((rt1.c0) IS TRUE)) AND (((((t0.c0)OR(rt1.c3)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY) BETWEEN (((rt1.c0) IS TRUE)) AND (((((t0.c0)OR(rt1.c3)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((rt1.c3 COLLATE BINARY) BETWEEN (((rt1.c0) IS TRUE)) AND (((((t0.c0)OR(rt1.c3)))OR(rt1.c1)))));
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) AS BLOB) WHERE ((((COALESCE(rt1.c1, rt1.c2)))<=(((((NULL)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))) ORDER BY ((((x'4b7d')&('-1453480427'))) BETWEEN ((((rt0.c0, rt1.c3, t0.c0))=((rt0.c1, rt0.c2, t0.c51)))) AND (((rt1.c2)==(NULL)))) ASC  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(rt1.c1, rt1.c2)))<=(((((NULL)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) AS BLOB) ORDER BY ((((x'4b7d')&('-1453480427'))) BETWEEN ((((rt0.c0, rt1.c3, t0.c0))==((rt0.c1, rt0.c2, t0.c51)))) AND (((rt1.c2)=(NULL)))) ASC  NULLS FIRST, x'');
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) AS BLOB) WHERE ((((COALESCE(rt1.c1, rt1.c2)))<=(((((NULL)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))) ORDER BY ((((x'4b7d')&('-1453480427'))) BETWEEN ((((rt0.c0, rt1.c3, t0.c0))=((rt0.c1, rt0.c2, t0.c51)))) AND (((rt1.c2)==(NULL)))) ASC  NULLS FIRST, x'';
SELECT SUM(count) FROM (SELECT ALL (((((COALESCE(rt1.c1, rt1.c2)))<=(((((NULL)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) AS BLOB) ORDER BY ((((x'4b7d')&('-1453480427'))) BETWEEN ((((rt0.c0, rt1.c3, t0.c0))==((rt0.c1, rt0.c2, t0.c51)))) AND (((rt1.c2)=(NULL)))) ASC  NULLS FIRST, x'');
SELECT * FROM t0, rt1 LEFT OUTER JOIN rt0 ON CAST((((rt0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) AS BLOB) WHERE ((((COALESCE(rt1.c1, rt1.c2)))<=(((((NULL)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))) ORDER BY ((((x'4b7d')&('-1453480427'))) BETWEEN ((((rt0.c0, rt1.c3, t0.c0))=((rt0.c1, rt0.c2, t0.c51)))) AND (((rt1.c2)==(NULL)))) ASC  NULLS FIRST, x'';
SELECT * FROM t0 WHERE (CAST(CAST(t0.c51 AS NUMERIC) AS NUMERIC)) ORDER BY ((((t0.c51) BETWEEN (t0.c51) AND (t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND ((t0.c51 IN (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c51 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51) BETWEEN (t0.c51) AND (t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND ((t0.c51 IN (t0.c0)))) ASC);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c51 AS NUMERIC) AS NUMERIC)) ORDER BY ((((t0.c51) BETWEEN (t0.c51) AND (t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND ((t0.c51 IN (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c51 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c51) BETWEEN (t0.c51) AND (t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND ((t0.c51 IN (t0.c0)))) ASC);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c51 AS NUMERIC) AS NUMERIC)) ORDER BY ((((t0.c51) BETWEEN (t0.c51) AND (t0.c0))) NOT BETWEEN ((~ (t0.c0))) AND ((t0.c51 IN (t0.c0)))) ASC;
SELECT * FROM rt0, rt1, t0 WHERE (json_insert(((rt0.c1)AND(rt1.c1)), (rt0.c0 IN (rt1.c2)), rt0.c0 COLLATE NOCASE, rt1.c3, (rt0.c0 IN ()))) ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND('訃X,K\rRV')))AND(t0.c51)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c51)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN ((x'3db8')IS NOT(rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN (+ (t0.c0)) END  NULLS LAST, JULIANDAY(((((rt1.c3)AND(rt1.c2)))OR(rt0.c2)), rt1.c0, rt1.c1, (((rt1.c3))>((rt1.c1))), ((x'0889') BETWEEN (rt1.c1) AND (rt0.c1)), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END, ((((rt0.c2)OR(t0.c51)))AND(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c1)AND(rt1.c1)), (rt0.c0 IN (rt1.c2)), rt0.c0 COLLATE NOCASE, rt1.c3, (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND('訃X,K\rRV')))AND(t0.c51)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c51)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN ((x'3db8')IS NOT(rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN (+ (t0.c0)) END  NULLS LAST, JULIANDAY(((((rt1.c3)AND(rt1.c2)))OR(rt0.c2)), rt1.c0, rt1.c1, (((rt1.c3))>((rt1.c1))), ((x'0889') BETWEEN (rt1.c1) AND (rt0.c1)), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END, ((((rt0.c2)OR(t0.c51)))AND(rt1.c0)))  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (json_insert(((rt0.c1)AND(rt1.c1)), (rt0.c0 IN (rt1.c2)), rt0.c0 COLLATE NOCASE, rt1.c3, (rt0.c0 IN ()))) ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND('訃X,K\rRV')))AND(t0.c51)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c51)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN ((x'3db8')IS NOT(rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN (+ (t0.c0)) END  NULLS LAST, JULIANDAY(((((rt1.c3)AND(rt1.c2)))OR(rt0.c2)), rt1.c0, rt1.c1, (((rt1.c3))>((rt1.c1))), ((x'0889') BETWEEN (rt1.c1) AND (rt0.c1)), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END, ((((rt0.c2)OR(t0.c51)))AND(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c1)AND(rt1.c1)), (rt0.c0 IN (rt1.c2)), rt0.c0 COLLATE NOCASE, rt1.c3, (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND('訃X,K\rRV')))AND(t0.c51)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c51)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN ((x'3db8')IS NOT(rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN (+ (t0.c0)) END  NULLS LAST, JULIANDAY(((((rt1.c3)AND(rt1.c2)))OR(rt0.c2)), rt1.c0, rt1.c1, (((rt1.c3))>((rt1.c1))), ((x'0889') BETWEEN (rt1.c1) AND (rt0.c1)), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END, ((((rt0.c2)OR(t0.c51)))AND(rt1.c0)))  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (json_insert(((rt0.c1)AND(rt1.c1)), (rt0.c0 IN (rt1.c2)), rt0.c0 COLLATE NOCASE, rt1.c3, (rt0.c0 IN ()))) ORDER BY CASE rt1.c2 COLLATE NOCASE  WHEN ((((((((((((rt1.c1)OR(rt1.c0)))AND('訃X,K\rRV')))AND(t0.c51)))AND(rt1.c2)))AND(rt1.c2)))AND(t0.c51)) THEN NULL WHEN CAST(t0.c0 AS INTEGER) THEN ((x'3db8')IS NOT(rt0.c1)) WHEN CASE WHEN rt0.c1 THEN rt1.c2 END THEN (+ (t0.c0)) END  NULLS LAST, JULIANDAY(((((rt1.c3)AND(rt1.c2)))OR(rt0.c2)), rt1.c0, rt1.c1, (((rt1.c3))>((rt1.c1))), ((x'0889') BETWEEN (rt1.c1) AND (rt0.c1)), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt0.c1 END, ((((rt0.c2)OR(t0.c51)))AND(rt1.c0)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN (((-1054400647)LIKE(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (((-1054400647)LIKE(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN (((-1054400647)LIKE(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (((-1054400647)LIKE(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c0 IN (((-1054400647)LIKE(rt0.c1)), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51))!=((t0.c51))))LIKE(((t0.c51)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))<>((t0.c51))))LIKE(((t0.c51)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51))!=((t0.c51))))LIKE(((t0.c51)GLOB(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c51))<>((t0.c51))))LIKE(((t0.c51)GLOB(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c51))!=((t0.c51))))LIKE(((t0.c51)GLOB(t0.c0)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (0.07951583937373241)));
SELECT SUM(count) FROM (SELECT (((NOT (0.07951583937373241))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (0.07951583937373241)));
SELECT SUM(count) FROM (SELECT (((NOT (0.07951583937373241))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((NOT (0.07951583937373241)));
SELECT ALL * FROM t0 INNER JOIN rt1 ON UPPER((~ (rt1.c2))) WHERE (((IFNULL(DISTINCT rt1.c3, rt1.c0)) NOTNULL)) ORDER BY (((((rt1.c0 IN ()))OR(((rt1.c2)=(t0.c0)))))AND(CASE t0.c51  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c51 END)), ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c51))))))OR((- (rt1.c0))))  NULLS LAST, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN 0.5108451785803628 ELSE t0.c0 END)/(((('966844216', t0.c0, 0.19550550036374126)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c0, rt1.c1, t0.c51)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt1.c3, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON UPPER((~ (rt1.c2))) ORDER BY (((((rt1.c0 IN ()))OR(((rt1.c2)==(t0.c0)))))AND(CASE t0.c51  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c51 END)), ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c51))))))OR((- (rt1.c0))))  NULLS LAST, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN 0.5108451785803628 ELSE t0.c0 END)/(((('966844216', t0.c0, 0.19550550036374126)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c0, rt1.c1, t0.c51)))))  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt1 ON UPPER((~ (rt1.c2))) WHERE (((IFNULL(DISTINCT rt1.c3, rt1.c0)) NOTNULL)) ORDER BY (((((rt1.c0 IN ()))OR(((rt1.c2)=(t0.c0)))))AND(CASE t0.c51  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c51 END)), ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c51))))))OR((- (rt1.c0))))  NULLS LAST, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN 0.5108451785803628 ELSE t0.c0 END)/(((('966844216', t0.c0, 0.19550550036374126)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c0, rt1.c1, t0.c51)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT rt1.c3, rt1.c0)) NOTNULL)) IS TRUE)  as count FROM t0 INNER JOIN rt1 ON UPPER((~ (rt1.c2))) ORDER BY (((((rt1.c0 IN ()))OR(((rt1.c2)==(t0.c0)))))AND(CASE t0.c51  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c51 END)), ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c51))))))OR((- (rt1.c0))))  NULLS LAST, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN 0.5108451785803628 ELSE t0.c0 END)/(((('966844216', t0.c0, 0.19550550036374126)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c0, rt1.c1, t0.c51)))))  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN rt1 ON UPPER((~ (rt1.c2))) WHERE (((IFNULL(DISTINCT rt1.c3, rt1.c0)) NOTNULL)) ORDER BY (((((rt1.c0 IN ()))OR(((rt1.c2)=(t0.c0)))))AND(CASE t0.c51  WHEN rt1.c0 THEN rt1.c0 ELSE t0.c51 END)), ((((t0.c0 COLLATE RTRIM)AND((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((t0.c51))))))OR((- (rt1.c0))))  NULLS LAST, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN 0.5108451785803628 ELSE t0.c0 END)/(((('966844216', t0.c0, 0.19550550036374126)) NOT BETWEEN ((rt1.c2, NULL, rt1.c0)) AND ((rt1.c0, rt1.c1, t0.c51)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((+ (CAST(rt1.c3 AS REAL))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(NULLIF('{gwff', rt0.c2)))) ORDER BY ((((rt0.c0)&(rt0.c0)))|((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))IS NOT(NULLIF('{gwff', rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)&(rt0.c0)))|((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(NULLIF('{gwff', rt0.c2)))) ORDER BY ((((rt0.c0)&(rt0.c0)))|((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))IS NOT(NULLIF('{gwff', rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)&(rt0.c0)))|((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1)))IS NOT(NULLIF('{gwff', rt0.c2)))) ORDER BY ((((rt0.c0)&(rt0.c0)))|((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c0, rt0.c2))))) DESC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((NULL)||(rt1.c0)))/(((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c51))))) ORDER BY ((t0.c51)<=(rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)||(rt1.c0)))/(((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c51))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c51)<=(rt1.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((NULL)||(rt1.c0)))/(((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c51))))) ORDER BY ((t0.c51)<=(rt1.c3)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)||(rt1.c0)))/(((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c51))))) IS TRUE)  as count FROM t0, rt1 ORDER BY ((t0.c51)<=(rt1.c3)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((NULL)||(rt1.c0)))/(((((((((rt1.c1)AND(rt1.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c51))))) ORDER BY ((t0.c51)<=(rt1.c3)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_GET(0.9086359961894781) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_GET(0.9086359961894781));
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_GET(0.9086359961894781) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_GET(0.9086359961894781));
SELECT ALL COUNT(*) FROM rt1, rt0 INNER JOIN t0 ON SQLITE_COMPILEOPTION_GET(0.9086359961894781) WHERE (rt0.c0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))%((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))%((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))%((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))%((rt0.c0 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((CAST(rt0.c2 AS BLOB))%((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'61d4' WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'61d4');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'61d4' WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON x'61d4');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON x'61d4' WHERE ('');
SELECT ALL COUNT(*) FROM t0 WHERE (json_array_length(((t0.c51) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c51) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_array_length(((t0.c51) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((t0.c51) IS FALSE))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_array_length(((t0.c51) IS FALSE)));
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL)) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL)) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0, t0 WHERE (CAST(((rt0.c0)GLOB(rt1.c0)) AS REAL)) ORDER BY (NOT (((rt0.c2) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))))>(((((rt1.c0))=((rt1.c0))))))) ORDER BY ((CASE 0.189596457733486  WHEN rt1.c0 THEN rt0.c1 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))))>(((((rt1.c0))==((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE 0.189596457733486  WHEN rt1.c0 THEN rt0.c1 END) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))))>(((((rt1.c0))=((rt1.c0))))))) ORDER BY ((CASE 0.189596457733486  WHEN rt1.c0 THEN rt0.c1 END) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))))>(((((rt1.c0))==((rt1.c0))))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CASE 0.189596457733486  WHEN rt1.c0 THEN rt0.c1 END) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c2))))>(((((rt1.c0))=((rt1.c0))))))) ORDER BY ((CASE 0.189596457733486  WHEN rt1.c0 THEN rt0.c1 END) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (rt1.c0);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON UNICODE('-1848401111') WHERE (((((rt1.c1) BETWEEN (t0.c51) AND (t0.c0)))!=((NOT (rt1.c1))))) ORDER BY LIKELIHOOD(((x'7107720f')|(rt0.c2)), 0.409492232874338) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (t0.c51) AND (t0.c0)))!=((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON UNICODE('-1848401111') ORDER BY LIKELIHOOD(((x'7107720f')|(rt0.c2)), 0.409492232874338) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON UNICODE('-1848401111') WHERE (((((rt1.c1) BETWEEN (t0.c51) AND (t0.c0)))!=((NOT (rt1.c1))))) ORDER BY LIKELIHOOD(((x'7107720f')|(rt0.c2)), 0.409492232874338) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (t0.c51) AND (t0.c0)))!=((NOT (rt1.c1))))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON UNICODE('-1848401111') ORDER BY LIKELIHOOD(((x'7107720f')|(rt0.c2)), 0.409492232874338) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON UNICODE('-1848401111') WHERE (((((rt1.c1) BETWEEN (t0.c51) AND (t0.c0)))!=((NOT (rt1.c1))))) ORDER BY LIKELIHOOD(((x'7107720f')|(rt0.c2)), 0.409492232874338) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0)&(rt1.c1))) NOT BETWEEN (((((((((((((-847244893)AND('1664991752')))OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c3)))OR(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON CAST(((rt1.c1) NOT NULL) AS BLOB) WHERE ((((- (rt0.c0)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0)&(rt1.c1))) NOT BETWEEN (((((((((((((-847244893)AND('1664991752')))OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c3)))OR(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON CAST(((rt1.c1) NOT NULL) AS BLOB) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0)&(rt1.c1))) NOT BETWEEN (((((((((((((-847244893)AND('1664991752')))OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c3)))OR(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON CAST(((rt1.c1) NOT NULL) AS BLOB) WHERE ((((- (rt0.c0)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt1.c0)&(rt1.c1))) NOT BETWEEN (((((((((((((-847244893)AND('1664991752')))OR(rt0.c2)))OR(t0.c0)))AND(t0.c0)))OR(rt1.c3)))OR(rt0.c2))) AND (rt0.c1 COLLATE RTRIM)) RIGHT OUTER JOIN t0 ON CAST(((rt1.c1) NOT NULL) AS BLOB) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((('15921145') NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((0.19618345207552823)<>(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT ((('15921145') NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((0.19618345207552823)<>(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((('15921145') NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((0.19618345207552823)<>(rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((NOT ((('15921145') NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((0.19618345207552823)<>(rt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt1, rt0 WHERE ((NOT ((('15921145') NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((0.19618345207552823)<>(rt0.c1)) COLLATE NOCASE;
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON CASE ((-1.6946269E9)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2)) THEN CASE rt1.c2  WHEN t0.c51 THEN t0.c51 ELSE rt0.c0 END END INNER JOIN t0 ON ((((rt0.c1)LIKE(t0.c0))) NOTNULL) WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (TRIM(DISTINCT rt1.c3)) AND (((rt1.c0) ISNULL)))) ORDER BY (((rt1.c1 IN ())) BETWEEN (((rt0.c2)LIKE(rt1.c1))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c0))))  NULLS LAST, (+ (((t0.c0)>=('891729903')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) NOT BETWEEN (TRIM(DISTINCT rt1.c3)) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE ((-1.6946269E9)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2)) THEN CASE rt1.c2  WHEN t0.c51 THEN t0.c51 ELSE rt0.c0 END END INNER JOIN t0 ON ((((rt0.c1)LIKE(t0.c0))) NOTNULL) ORDER BY (((rt1.c1 IN ())) BETWEEN (((rt0.c2)LIKE(rt1.c1))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c0))))  NULLS LAST, (+ (((t0.c0)>=('891729903')))) ASC  NULLS FIRST);
SELECT * FROM rt0 FULL OUTER JOIN rt1 ON CASE ((-1.6946269E9)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2)) THEN CASE rt1.c2  WHEN t0.c51 THEN t0.c51 ELSE rt0.c0 END END INNER JOIN t0 ON ((((rt0.c1)LIKE(t0.c0))) NOTNULL) WHERE (((((rt1.c2) NOTNULL)) NOT BETWEEN (TRIM(DISTINCT rt1.c3)) AND (((rt1.c0) ISNULL)))) ORDER BY (((rt1.c1 IN ())) BETWEEN (((rt0.c2)LIKE(rt1.c1))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c0))))  NULLS LAST, (+ (((t0.c0)>=('891729903')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOTNULL)) NOT BETWEEN (TRIM(DISTINCT rt1.c3)) AND (((rt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CASE ((-1.6946269E9)*(rt0.c2))  WHEN ((rt0.c2) BETWEEN (rt1.c3) AND (rt1.c2)) THEN CASE rt1.c2  WHEN t0.c51 THEN t0.c51 ELSE rt0.c0 END END INNER JOIN t0 ON ((((rt0.c1)LIKE(t0.c0))) NOTNULL) ORDER BY (((rt1.c1 IN ())) BETWEEN (((rt0.c2)LIKE(rt1.c1))) AND (((((rt0.c1)OR(rt0.c1)))OR(t0.c0))))  NULLS LAST, (+ (((t0.c0)>=('891729903')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY ((((((((rt0.c2)OR(((t0.c51)GLOB(rt0.c2)))))AND(CASE WHEN t0.c0 THEN rt1.c3 END)))AND(((('2070702201', t0.c51, rt0.c2, t0.c51, rt0.c1)) BETWEEN ((rt0.c0, NULL, t0.c0, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c2, rt1.c3, rt1.c3))))))AND(NULL))  NULLS FIRST, ((((NULL COLLATE NOCASE)OR((rt1.c3 IN ()))))OR(INSTR('O7', rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((((rt0.c2)OR(((t0.c51)GLOB(rt0.c2)))))AND(CASE WHEN t0.c0 THEN rt1.c3 END)))AND(((('2070702201', t0.c51, rt0.c2, t0.c51, rt0.c1)) BETWEEN ((rt0.c0, NULL, t0.c0, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c2, rt1.c3, rt1.c3))))))AND(NULL))  NULLS FIRST, ((((NULL COLLATE NOCASE)OR((rt1.c3 IN ()))))OR(INSTR('O7', rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY ((((((((rt0.c2)OR(((t0.c51)GLOB(rt0.c2)))))AND(CASE WHEN t0.c0 THEN rt1.c3 END)))AND(((('2070702201', t0.c51, rt0.c2, t0.c51, rt0.c1)) BETWEEN ((rt0.c0, NULL, t0.c0, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c2, rt1.c3, rt1.c3))))))AND(NULL))  NULLS FIRST, ((((NULL COLLATE NOCASE)OR((rt1.c3 IN ()))))OR(INSTR('O7', rt0.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((((((((rt0.c2)OR(((t0.c51)GLOB(rt0.c2)))))AND(CASE WHEN t0.c0 THEN rt1.c3 END)))AND(((('2070702201', t0.c51, rt0.c2, t0.c51, rt0.c1)) BETWEEN ((rt0.c0, NULL, t0.c0, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c2, rt1.c3, rt1.c3))))))AND(NULL))  NULLS FIRST, ((((NULL COLLATE NOCASE)OR((rt1.c3 IN ()))))OR(INSTR('O7', rt0.c2))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (((rt0.c2) ISNULL)) ORDER BY ((((((((rt0.c2)OR(((t0.c51)GLOB(rt0.c2)))))AND(CASE WHEN t0.c0 THEN rt1.c3 END)))AND(((('2070702201', t0.c51, rt0.c2, t0.c51, rt0.c1)) BETWEEN ((rt0.c0, NULL, t0.c0, rt0.c1, rt1.c0)) AND ((rt1.c0, rt1.c1, rt0.c2, rt1.c3, rt1.c3))))))AND(NULL))  NULLS FIRST, ((((NULL COLLATE NOCASE)OR((rt1.c3 IN ()))))OR(INSTR('O7', rt0.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c3)IS NOT('')))<<(UNLIKELY(t0.c51))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT('')))<<(UNLIKELY(t0.c51)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c3)IS NOT('')))<<(UNLIKELY(t0.c51))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT('')))<<(UNLIKELY(t0.c51)))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT COUNT(*) FROM rt1, t0, rt0 WHERE (((((rt1.c3)IS NOT('')))<<(UNLIKELY(t0.c51))));
SELECT * FROM t0 WHERE (COALESCE(DISTINCT t0.c0, CAST(t0.c51 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0, CAST(t0.c51 AS REAL))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT t0.c0, CAST(t0.c51 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT t0.c0, CAST(t0.c51 AS REAL))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE(DISTINCT t0.c0, CAST(t0.c51 AS REAL)));
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON ((((rt1.c1))=((rt1.c3))) IN ()) WHERE ((- (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON ((((rt1.c1))==((rt1.c3))) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON ((((rt1.c1))=((rt1.c3))) IN ()) WHERE ((- (rt1.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0 INNER JOIN rt0 ON ((((rt1.c1))==((rt1.c3))) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN rt0 ON ((((rt1.c1))=((rt1.c3))) IN ()) WHERE ((- (rt1.c3 COLLATE BINARY)));
SELECT ALL * FROM rt0, t0 WHERE (((t0.c0)|(rt0.c2)) COLLATE RTRIM) ORDER BY ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM, x'';
SELECT SUM(count) FROM (SELECT ((((t0.c0)|(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM, x'');
SELECT ALL * FROM rt0, t0 WHERE (((t0.c0)|(rt0.c2)) COLLATE RTRIM) ORDER BY ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM, x'';
SELECT SUM(count) FROM (SELECT ((((t0.c0)|(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM, x'');
SELECT ALL * FROM rt0, t0 WHERE (((t0.c0)|(rt0.c2)) COLLATE RTRIM) ORDER BY ((t0.c0)IS NOT(t0.c0)) COLLATE RTRIM, x'';
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51)))<>((+ (t0.c0))))) ORDER BY (+ (t0.c51)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN (t0.c51)))<>((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c51)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51)))<>((+ (t0.c0))))) ORDER BY (+ (t0.c51)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c51 IN (t0.c51)))<>((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c51)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c51 IN (t0.c51)))<>((+ (t0.c0))))) ORDER BY (+ (t0.c51)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT ((rt1.c2) BETWEEN (t0.c51) AND (t0.c51))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt1.c2) BETWEEN (t0.c51) AND (t0.c51)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT ((rt1.c2) BETWEEN (t0.c51) AND (t0.c51))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt1.c2) BETWEEN (t0.c51) AND (t0.c51)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(DISTINCT ((rt1.c2) BETWEEN (t0.c51) AND (t0.c51))));
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NULL IN ()));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))<<(((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))<<(((x'') IS TRUE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))<<(((x'') IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))<<(((x'') IS TRUE)))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((t0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)))<<(((x'') IS TRUE))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY ((((((rt1.c2)==(rt1.c1)))AND((((rt0.c0, rt1.c3, rt1.c1, rt1.c1, rt0.c2))>((rt0.c1, rt0.c2, rt1.c3, rt1.c2, rt0.c1))))))AND(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)) AS NUMERIC) DESC  NULLS FIRST, CASE WHEN ((rt1.c1)-(0.6467481411504516)) THEN ((rt0.c0)GLOB(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((((rt1.c2)=(rt1.c1)))AND((((rt0.c0, rt1.c3, rt1.c1, rt1.c1, rt0.c2))>((rt0.c1, rt0.c2, rt1.c3, rt1.c2, rt0.c1))))))AND(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)) AS NUMERIC) DESC  NULLS FIRST, CASE WHEN ((rt1.c1)-(0.6467481411504516)) THEN ((rt0.c0)GLOB(rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY ((((((rt1.c2)==(rt1.c1)))AND((((rt0.c0, rt1.c3, rt1.c1, rt1.c1, rt0.c2))>((rt0.c1, rt0.c2, rt1.c3, rt1.c2, rt0.c1))))))AND(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)) AS NUMERIC) DESC  NULLS FIRST, CASE WHEN ((rt1.c1)-(0.6467481411504516)) THEN ((rt0.c0)GLOB(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 NATURAL JOIN rt1 ORDER BY ((((((rt1.c2)=(rt1.c1)))AND((((rt0.c0, rt1.c3, rt1.c1, rt1.c1, rt0.c2))>((rt0.c1, rt0.c2, rt1.c3, rt1.c2, rt0.c1))))))AND(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)) AS NUMERIC) DESC  NULLS FIRST, CASE WHEN ((rt1.c1)-(0.6467481411504516)) THEN ((rt0.c0)GLOB(rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY ((((((rt1.c2)==(rt1.c1)))AND((((rt0.c0, rt1.c3, rt1.c1, rt1.c1, rt0.c2))>((rt0.c1, rt0.c2, rt1.c3, rt1.c2, rt0.c1))))))AND(CAST(rt1.c0 AS NUMERIC)))  NULLS LAST, CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt1.c0)) AS NUMERIC) DESC  NULLS FIRST, CASE WHEN ((rt1.c1)-(0.6467481411504516)) THEN ((rt0.c0)GLOB(rt1.c0)) END  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c0 IN ())))<((LOWER(rt1.c2)))) FULL OUTER JOIN rt1 ON (((((((((+ (rt0.c1)))OR(t0.c51)))AND(((rt1.c3)>=(rt0.c1)))))AND(t0.c0 COLLATE NOCASE)))AND(rt0.c1)) WHERE (CASE rt0.c1 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN CASE WHEN rt1.c3 THEN rt0.c1 END ELSE rt0.c0 COLLATE NOCASE END) ORDER BY 0.9227784250586248  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN CASE WHEN rt1.c3 THEN rt0.c1 END ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c0 IN ())))<((LOWER(rt1.c2)))) FULL OUTER JOIN rt1 ON (((((((((+ (rt0.c1)))OR(t0.c51)))AND(((rt1.c3)>=(rt0.c1)))))AND(t0.c0 COLLATE NOCASE)))AND(rt0.c1)) ORDER BY 0.9227784250586248  NULLS LAST);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c0 IN ())))<((LOWER(rt1.c2)))) FULL OUTER JOIN rt1 ON (((((((((+ (rt0.c1)))OR(t0.c51)))AND(((rt1.c3)>=(rt0.c1)))))AND(t0.c0 COLLATE NOCASE)))AND(rt0.c1)) WHERE (CASE rt0.c1 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN CASE WHEN rt1.c3 THEN rt0.c1 END ELSE rt0.c0 COLLATE NOCASE END) ORDER BY 0.9227784250586248  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN t0.c0 COLLATE BINARY THEN CASE WHEN rt1.c3 THEN rt0.c1 END ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt1.c0 IN ())))<((LOWER(rt1.c2)))) FULL OUTER JOIN rt1 ON (((((((((+ (rt0.c1)))OR(t0.c51)))AND(((rt1.c3)>=(rt0.c1)))))AND(t0.c0 COLLATE NOCASE)))AND(rt0.c1)) ORDER BY 0.9227784250586248  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE WHEN NULLIF(rt1.c3, rt1.c0) THEN rt1.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(rt1.c3, rt1.c0) THEN rt1.c3 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN NULLIF(rt1.c3, rt1.c0) THEN rt1.c3 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(rt1.c3, rt1.c0) THEN rt1.c3 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN NULLIF(rt1.c3, rt1.c0) THEN rt1.c3 END);
SELECT * FROM rt0, rt1, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(t0.c51 COLLATE BINARY)))OR((+ (x''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)AND(t0.c51 COLLATE BINARY)))OR((+ (x''))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(t0.c51 COLLATE BINARY)))OR((+ (x''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE RTRIM)AND(t0.c51 COLLATE BINARY)))OR((+ (x''))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, rt1, t0 WHERE (((((rt0.c2 COLLATE RTRIM)AND(t0.c51 COLLATE BINARY)))OR((+ (x''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c3, rt1.c0))IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt1.c3, rt1.c0))IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1 ORDER BY (+ (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c3, rt1.c0))IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt1.c3, rt1.c0))IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1 ORDER BY (+ (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT * FROM rt1 WHERE (((NULLIF(rt1.c3, rt1.c0))IS(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c3 END))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c51)+(t0.c51)), ((t0.c51)GLOB(t0.c0)))) ORDER BY (- ((t0.c0 IN ()))) DESC, ((CAST(NULL AS BLOB))%(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c51)+(t0.c51)), ((t0.c51)GLOB(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c0 IN ()))) DESC, ((CAST(NULL AS BLOB))%(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c51)+(t0.c51)), ((t0.c51)GLOB(t0.c0)))) ORDER BY (- ((t0.c0 IN ()))) DESC, ((CAST(NULL AS BLOB))%(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT ((t0.c51)+(t0.c51)), ((t0.c51)GLOB(t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY (- ((t0.c0 IN ()))) DESC, ((CAST(NULL AS BLOB))%(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (NULLIF(DISTINCT ((t0.c51)+(t0.c51)), ((t0.c51)GLOB(t0.c0)))) ORDER BY (- ((t0.c0 IN ()))) DESC, ((CAST(NULL AS BLOB))%(t0.c0 COLLATE NOCASE));
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (rt0.c2);
SELECT * FROM rt1 INDEXED BY i55, t0, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOTNULL)) ORDER BY ((((((rt1.c0) BETWEEN (NULL) AND (t0.c51)))AND(((((((((t0.c51)OR(rt1.c0)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOTNULL)) IS TRUE)  as count FROM rt1 INDEXED BY i55, t0, rt0 ORDER BY ((((((rt1.c0) BETWEEN (NULL) AND (t0.c51)))AND(((((((((t0.c51)OR(rt1.c0)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c0) ISNULL))) ASC);
SELECT * FROM rt1 INDEXED BY i55, t0, rt0 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOTNULL)) ORDER BY ((((((rt1.c0) BETWEEN (NULL) AND (t0.c51)))AND(((((((((t0.c51)OR(rt1.c0)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c3))) NOTNULL)) IS TRUE)  as count FROM rt1 INDEXED BY i55, t0, rt0 ORDER BY ((((((rt1.c0) BETWEEN (NULL) AND (t0.c51)))AND(((((((((t0.c51)OR(rt1.c0)))AND(t0.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN CASE 'h\rLhz}'  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END THEN SQLITE_VERSION() WHEN ((((((((x'')OR(rt1.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt1.c0)) THEN CHAR(t0.c51, rt0.c1, '1324701588') WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c2)) THEN MIN(t0.c0, rt0.c1) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) THEN (~ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE 'h\rLhz}'  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END THEN SQLITE_VERSION() WHEN ((((((((x'')OR(rt1.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt1.c0)) THEN CHAR(t0.c51, rt0.c1, '1324701588') WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c2)) THEN MIN(t0.c0, rt0.c1) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) THEN (~ (rt1.c0)) END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN CASE 'h\rLhz}'  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END THEN SQLITE_VERSION() WHEN ((((((((x'')OR(rt1.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt1.c0)) THEN CHAR(t0.c51, rt0.c1, '1324701588') WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c2)) THEN MIN(t0.c0, rt0.c1) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) THEN (~ (rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE 'h\rLhz}'  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END THEN SQLITE_VERSION() WHEN ((((((((x'')OR(rt1.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt1.c0)) THEN CHAR(t0.c51, rt0.c1, '1324701588') WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c2)) THEN MIN(t0.c0, rt0.c1) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) THEN (~ (rt1.c0)) END) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE (CASE WHEN CASE 'h\rLhz}'  WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END THEN SQLITE_VERSION() WHEN ((((((((x'')OR(rt1.c0)))OR(rt0.c0)))OR(t0.c0)))AND(rt1.c0)) THEN CHAR(t0.c51, rt0.c1, '1324701588') WHEN ((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c1)))AND(rt0.c2)))OR(rt1.c2)) THEN MIN(t0.c0, rt0.c1) WHEN ((rt0.c2)<>(rt0.c0)) THEN ((rt1.c3) BETWEEN (rt0.c2) AND (rt1.c0)) WHEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt0.c1)) THEN (~ (rt1.c0)) END);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT * FROM t0, rt1, rt0 WHERE (1520835460);
SELECT SUM(count) FROM (SELECT ((1520835460) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (1520835460);
SELECT SUM(count) FROM (SELECT ((1520835460) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (1520835460);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((LIKELIHOOD(t0.c0, 0.4899695111752017))LIKE(HEX(t0.c0)))) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0))))<((((((t0.c0)AND(rt1.c0)))OR(rt1.c0))))) DESC, ((rtreenode(rt1.c0, rt1.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t0.c0, 0.4899695111752017))LIKE(HEX(t0.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0))))<((((((t0.c0)AND(rt1.c0)))OR(rt1.c0))))) DESC, ((rtreenode(rt1.c0, rt1.c3)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((LIKELIHOOD(t0.c0, 0.4899695111752017))LIKE(HEX(t0.c0)))) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0))))<((((((t0.c0)AND(rt1.c0)))OR(rt1.c0))))) DESC, ((rtreenode(rt1.c0, rt1.c3)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(t0.c0, 0.4899695111752017))LIKE(HEX(t0.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0))))<((((((t0.c0)AND(rt1.c0)))OR(rt1.c0))))) DESC, ((rtreenode(rt1.c0, rt1.c3)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((LIKELIHOOD(t0.c0, 0.4899695111752017))LIKE(HEX(t0.c0)))) ORDER BY (+ (((t0.c0) NOT BETWEEN (t0.c0) AND (NULL))))  NULLS LAST, (((((((rt1.c0)OR(rt1.c2)))AND(rt1.c0))))<((((((t0.c0)AND(rt1.c0)))OR(rt1.c0))))) DESC, ((rtreenode(rt1.c0, rt1.c3)) IS TRUE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((-1.383375264E9))>((rt0.c2))))AND((((rt0.c1)) NOT BETWEEN ((3.17494085E8)) AND ((rt0.c2))))))AND(CASE 0.7070188242065465  WHEN rt0.c0 THEN t0.c51 ELSE '413075057' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((-1.383375264E9))>((rt0.c2))))AND((((rt0.c1)) NOT BETWEEN ((3.17494085E8)) AND ((rt0.c2))))))AND(CASE 0.7070188242065465  WHEN rt0.c0 THEN t0.c51 ELSE '413075057' END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((-1.383375264E9))>((rt0.c2))))AND((((rt0.c1)) NOT BETWEEN ((3.17494085E8)) AND ((rt0.c2))))))AND(CASE 0.7070188242065465  WHEN rt0.c0 THEN t0.c51 ELSE '413075057' END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((-1.383375264E9))>((rt0.c2))))AND((((rt0.c1)) NOT BETWEEN ((3.17494085E8)) AND ((rt0.c2))))))AND(CASE 0.7070188242065465  WHEN rt0.c0 THEN t0.c51 ELSE '413075057' END))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((((-1.383375264E9))>((rt0.c2))))AND((((rt0.c1)) NOT BETWEEN ((3.17494085E8)) AND ((rt0.c2))))))AND(CASE 0.7070188242065465  WHEN rt0.c0 THEN t0.c51 ELSE '413075057' END)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST('-1433600777' AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1433600777' AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST('-1433600777' AS INTEGER)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('-1433600777' AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CAST('-1433600777' AS INTEGER)) NOT NULL));
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT * FROM t0 WHERE ((((t0.c0)-(t0.c51)) IN ((t0.c51 IN ()), t0.c51))) ORDER BY (((t0.c0 IN ())) NOTNULL) DESC  NULLS LAST, UPPER(DISTINCT ((-1.072431665E9)IS(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c51)) IN ((t0.c51 IN ()), t0.c51))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) NOTNULL) DESC  NULLS LAST, UPPER(DISTINCT ((-1.072431665E9)IS(t0.c0)))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0)-(t0.c51)) IN ((t0.c51 IN ()), t0.c51))) ORDER BY (((t0.c0 IN ())) NOTNULL) DESC  NULLS LAST, UPPER(DISTINCT ((-1.072431665E9)IS(t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)-(t0.c51)) IN ((t0.c51 IN ()), t0.c51))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) NOTNULL) DESC  NULLS LAST, UPPER(DISTINCT ((-1.072431665E9)IS(t0.c0)))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c0)-(t0.c51)) IN ((t0.c51 IN ()), t0.c51))) ORDER BY (((t0.c0 IN ())) NOTNULL) DESC  NULLS LAST, UPPER(DISTINCT ((-1.072431665E9)IS(t0.c0)))  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ (rt0.c2)));
SELECT * FROM rt0, t0 WHERE ((((x''))>((TRIM(DISTINCT t0.c0, t0.c51))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))AND(t0.c51)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x''))>((TRIM(DISTINCT t0.c0, t0.c51))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)AND(rt0.c2)))AND(t0.c51)) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE ((((x''))>((TRIM(DISTINCT t0.c0, t0.c51))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))AND(t0.c51)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x''))>((TRIM(DISTINCT t0.c0, t0.c51))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1)AND(rt0.c2)))AND(t0.c51)) COLLATE NOCASE);
SELECT * FROM rt0, t0 WHERE ((((x''))>((TRIM(DISTINCT t0.c0, t0.c51))))) ORDER BY ((((rt0.c1)AND(rt0.c2)))AND(t0.c51)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c1 COLLATE BINARY) ORDER BY (CAST(rt0.c2 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (CAST(rt0.c2 AS TEXT) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c1 COLLATE BINARY) ORDER BY (CAST(rt0.c2 AS TEXT) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY (CAST(rt0.c2 AS TEXT) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (rt1.c1 COLLATE BINARY) ORDER BY (CAST(rt0.c2 AS TEXT) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c51);
SELECT SUM(count) FROM (SELECT ALL ((t0.c51) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c51);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND((((t0.c51, t0.c51, NULL)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c51, t0.c0, t0.c0))))))OR(LAST_INSERT_ROWID()))) ORDER BY (((t0.c51 IN ()))*(t0.c51)) DESC, ((((json_array(t0.c51, t0.c51, t0.c0, t0.c51))AND(0.20218960245402762)))OR(CAST(t0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE RTRIM)AND((((t0.c51, t0.c51, NULL)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c51, t0.c0, t0.c0))))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51 IN ()))*(t0.c51)) DESC, ((((json_array(t0.c51, t0.c51, t0.c0, t0.c51))AND(0.20218960245402762)))OR(CAST(t0.c0 AS REAL))) ASC);
SELECT * FROM t0 WHERE (((((t0.c0 COLLATE RTRIM)AND((((t0.c51, t0.c51, NULL)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c51, t0.c0, t0.c0))))))OR(LAST_INSERT_ROWID()))) ORDER BY (((t0.c51 IN ()))*(t0.c51)) DESC, ((((json_array(t0.c51, t0.c51, t0.c0, t0.c51))AND(0.20218960245402762)))OR(CAST(t0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 COLLATE RTRIM)AND((((t0.c51, t0.c51, NULL)) BETWEEN ((t0.c51, t0.c51, t0.c51)) AND ((t0.c51, t0.c0, t0.c0))))))OR(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c51 IN ()))*(t0.c51)) DESC, ((((json_array(t0.c51, t0.c51, t0.c0, t0.c51))AND(0.20218960245402762)))OR(CAST(t0.c0 AS REAL))) ASC);
SELECT ALL * FROM rt1 WHERE (CASE (- (''))  WHEN ((rt1.c0)<>(rt1.c1)) THEN ((rt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (''))  WHEN ((rt1.c0)!=(rt1.c1)) THEN ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (''))  WHEN ((rt1.c0)<>(rt1.c1)) THEN ((rt1.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (''))  WHEN ((rt1.c0)!=(rt1.c1)) THEN ((rt1.c0) NOT NULL) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CASE (- (''))  WHEN ((rt1.c0)<>(rt1.c1)) THEN ((rt1.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c3, rt1.c2, '-0.0'))!=((rt1.c1, rt1.c1, rt1.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c2, '-0.0'))!=((rt1.c1, rt1.c1, rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c3, rt1.c2, '-0.0'))!=((rt1.c1, rt1.c1, rt1.c3)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3, rt1.c2, '-0.0'))!=((rt1.c1, rt1.c1, rt1.c3)))) IS TRUE)) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((((rt1.c3, rt1.c2, '-0.0'))!=((rt1.c1, rt1.c1, rt1.c3)))) IS TRUE));
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0x5db3023f)) AND ((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((0x5db3023f)) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0x5db3023f)) AND ((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((0x5db3023f)) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c2)) BETWEEN ((0x5db3023f)) AND ((((rt0.c1) IS TRUE)))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c1 END)))) ORDER BY ((((x'')&(rt0.c1))) BETWEEN ((((rt0.c1, rt1.c0, rt0.c0)) NOT BETWEEN (('-474239511', rt1.c2, t0.c0)) AND ((x'', t0.c51, x'9e32')))) AND (((rt1.c3)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c1 END)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((x'')&(rt0.c1))) BETWEEN ((((rt0.c1, rt1.c0, rt0.c0)) NOT BETWEEN (('-474239511', rt1.c2, t0.c0)) AND ((x'', t0.c51, x'9e32')))) AND (((rt1.c3)GLOB(rt0.c1)))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c1 END)))) ORDER BY ((((x'')&(rt0.c1))) BETWEEN ((((rt0.c1, rt1.c0, rt0.c0)) NOT BETWEEN (('-474239511', rt1.c2, t0.c0)) AND ((x'', t0.c51, x'9e32')))) AND (((rt1.c3)GLOB(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c1 END)))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((((x'')&(rt0.c1))) BETWEEN ((((rt0.c1, rt1.c0, rt0.c0)) NOT BETWEEN (('-474239511', rt1.c2, t0.c0)) AND ((x'', t0.c51, x'9e32')))) AND (((rt1.c3)GLOB(rt0.c1)))));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((rt0.c0)) NOT BETWEEN (((rt1.c1 IN ()))) AND ((CASE t0.c0  WHEN rt0.c2 THEN rt1.c1 END)))) ORDER BY ((((x'')&(rt0.c1))) BETWEEN ((((rt0.c1, rt1.c0, rt0.c0)) NOT BETWEEN (('-474239511', rt1.c2, t0.c0)) AND ((x'', t0.c51, x'9e32')))) AND (((rt1.c3)GLOB(rt0.c1))));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((((((t0.c0)AND(rt0.c1)))AND(0.9884030211110356)))AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (t0.c51) AND (rt0.c1))) AND ((rt1.c3 IN ()))) FULL OUTER JOIN t0 ON CAST((rt1.c1 IN (rt1.c3, rt1.c3)) AS INTEGER) WHERE (((rt1.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((((t0.c0)AND(rt0.c1)))AND(0.9884030211110356)))AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (t0.c51) AND (rt0.c1))) AND ((rt1.c3 IN ()))) FULL OUTER JOIN t0 ON CAST((rt1.c1 IN (rt1.c3, rt1.c3)) AS INTEGER));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON ((((((((((t0.c0)AND(rt0.c1)))AND(0.9884030211110356)))AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (t0.c51) AND (rt0.c1))) AND ((rt1.c3 IN ()))) FULL OUTER JOIN t0 ON CAST((rt1.c1 IN (rt1.c3, rt1.c3)) AS INTEGER) WHERE (((rt1.c2) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS TRUE)) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((((((t0.c0)AND(rt0.c1)))AND(0.9884030211110356)))AND(rt0.c2)))AND(rt0.c1))) BETWEEN (((rt0.c1) BETWEEN (t0.c51) AND (rt0.c1))) AND ((rt1.c3 IN ()))) FULL OUTER JOIN t0 ON CAST((rt1.c1 IN (rt1.c3, rt1.c3)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST((((t0.c51)) NOT BETWEEN ((rt1.c0)) AND ((t0.c51))) AS BLOB)) ORDER BY (((- (rt1.c3))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c51)) NOT BETWEEN ((rt1.c0)) AND ((t0.c51))) AS BLOB)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((- (rt1.c3))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST((((t0.c51)) NOT BETWEEN ((rt1.c0)) AND ((t0.c51))) AS BLOB)) ORDER BY (((- (rt1.c3))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (rt1.c2 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c51)) NOT BETWEEN ((rt1.c0)) AND ((t0.c51))) AS BLOB)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((- (rt1.c3))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (rt1.c2 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST((((t0.c51)) NOT BETWEEN ((rt1.c0)) AND ((t0.c51))) AS BLOB)) ORDER BY (((- (rt1.c3))) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND (rt1.c2 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE (('-482674907')<=(0x8e5787e))  WHEN t0.c0 THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END END) ORDER BY t0.c51  NULLS FIRST, (NOT (((t0.c0)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (('-482674907')<=(0x8e5787e))  WHEN t0.c0 THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY t0.c51  NULLS FIRST, (NOT (((t0.c0)<(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE (('-482674907')<=(0x8e5787e))  WHEN t0.c0 THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END END) ORDER BY t0.c51  NULLS FIRST, (NOT (((t0.c0)<(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE (('-482674907')<=(0x8e5787e))  WHEN t0.c0 THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY t0.c51  NULLS FIRST, (NOT (((t0.c0)<(t0.c0)))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE (('-482674907')<=(0x8e5787e))  WHEN t0.c0 THEN CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c0 THEN t0.c51 WHEN t0.c51 THEN t0.c0 END END) ORDER BY t0.c51  NULLS FIRST, (NOT (((t0.c0)<(t0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE ((((CAST(1025547394 AS TEXT)))<((((((t0.c0)AND(t0.c0)))AND('')))))) ORDER BY ((((((t0.c0)AND(t0.c51)))AND(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(1025547394 AS TEXT)))<((((((t0.c0)AND(t0.c0)))AND('')))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c51)))AND(t0.c0))) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((CAST(1025547394 AS TEXT)))<((((((t0.c0)AND(t0.c0)))AND('')))))) ORDER BY ((((((t0.c0)AND(t0.c51)))AND(t0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((CAST(1025547394 AS TEXT)))<((((((t0.c0)AND(t0.c0)))AND('')))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c51)))AND(t0.c0))) IS FALSE));
SELECT ALL * FROM t0 WHERE ((((CAST(1025547394 AS TEXT)))<((((((t0.c0)AND(t0.c0)))AND('')))))) ORDER BY ((((((t0.c0)AND(t0.c51)))AND(t0.c0))) IS FALSE);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c51)IS(-1198433388))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c51)IS(-1198433388))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt1.c0);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c51)IS(-1198433388))) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((((t0.c51)IS(-1198433388))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt1.c0);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((t0.c51)IS(-1198433388))) ORDER BY rt1.c0;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c2 COLLATE NOCASE)OR(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c1 AS REAL))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))))OR(CAST(NULL AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((t0.c0)%(rt1.c1)))LIKE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(rt1.c1)))LIKE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((t0.c0)%(rt1.c1)))LIKE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(rt1.c1)))LIKE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 WHERE (((((t0.c0)%(rt1.c1)))LIKE(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END)));
SELECT * FROM rt1 CROSS JOIN rt0 ON x'' COLLATE NOCASE FULL OUTER JOIN t0 ON (((- (t0.c0)))OR(rt1.c2)) WHERE ((((((rt0.c2) ISNULL), CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c3 END))=((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c2)))AND('[]')))OR(rt1.c3)), rt1.c3 COLLATE BINARY, ((rt1.c2) IS FALSE))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL), CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c3 END))=((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c2)))AND('[]')))OR(rt1.c3)), rt1.c3 COLLATE BINARY, ((rt1.c2) IS FALSE))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON x'' COLLATE NOCASE FULL OUTER JOIN t0 ON (((- (t0.c0)))OR(rt1.c2)) ORDER BY x'');
SELECT * FROM rt1 CROSS JOIN rt0 ON x'' COLLATE NOCASE FULL OUTER JOIN t0 ON (((- (t0.c0)))OR(rt1.c2)) WHERE ((((((rt0.c2) ISNULL), CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c3 END))=((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c2)))AND('[]')))OR(rt1.c3)), rt1.c3 COLLATE BINARY, ((rt1.c2) IS FALSE))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) ISNULL), CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c3 END))=((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c2)))AND('[]')))OR(rt1.c3)), rt1.c3 COLLATE BINARY, ((rt1.c2) IS FALSE))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON x'' COLLATE NOCASE FULL OUTER JOIN t0 ON (((- (t0.c0)))OR(rt1.c2)) ORDER BY x'');
SELECT * FROM rt1 CROSS JOIN rt0 ON x'' COLLATE NOCASE FULL OUTER JOIN t0 ON (((- (t0.c0)))OR(rt1.c2)) WHERE ((((((rt0.c2) ISNULL), CAST(rt1.c2 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c3 END))=((((((((((rt0.c1)OR(rt1.c1)))OR(rt0.c2)))AND('[]')))OR(rt1.c3)), rt1.c3 COLLATE BINARY, ((rt1.c2) IS FALSE))))) ORDER BY x'';
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c2, rt0.c1, rt1.c2))=((rt1.c1, rt0.c1, rt1.c0))) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c0 END)==(((rt1.c3)/(rt0.c2)))) ASC, CAST(LIKELIHOOD(x'', 0.5888537702970433) AS INTEGER) DESC  NULLS LAST, CAST((- (rt1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt1.c2))==((rt1.c1, rt0.c1, rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c0 END)=(((rt1.c3)/(rt0.c2)))) ASC, CAST(LIKELIHOOD(x'', 0.5888537702970433) AS INTEGER) DESC  NULLS LAST, CAST((- (rt1.c0)) AS BLOB) DESC);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c2, rt0.c1, rt1.c2))=((rt1.c1, rt0.c1, rt1.c0))) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c0 END)==(((rt1.c3)/(rt0.c2)))) ASC, CAST(LIKELIHOOD(x'', 0.5888537702970433) AS INTEGER) DESC  NULLS LAST, CAST((- (rt1.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c1, rt1.c2))==((rt1.c1, rt0.c1, rt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c0 END)=(((rt1.c3)/(rt0.c2)))) ASC, CAST(LIKELIHOOD(x'', 0.5888537702970433) AS INTEGER) DESC  NULLS LAST, CAST((- (rt1.c0)) AS BLOB) DESC);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c2, rt0.c1, rt1.c2))=((rt1.c1, rt0.c1, rt1.c0))) COLLATE BINARY) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c0 END)==(((rt1.c3)/(rt0.c2)))) ASC, CAST(LIKELIHOOD(x'', 0.5888537702970433) AS INTEGER) DESC  NULLS LAST, CAST((- (rt1.c0)) AS BLOB) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c1)AND(((rt1.c2)>=(rt1.c1)))))OR((((rt1.c2))>((rt1.c2))))))OR(rt1.c2 COLLATE BINARY)))AND(((((((((((((((((0.748307846605091)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(x'11ba')))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(((rt1.c2)>=(rt1.c1)))))OR((((rt1.c2))>((rt1.c2))))))OR(rt1.c2 COLLATE BINARY)))AND(((((((((((((((((0.748307846605091)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(x'11ba')))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c1)AND(((rt1.c2)>=(rt1.c1)))))OR((((rt1.c2))>((rt1.c2))))))OR(rt1.c2 COLLATE BINARY)))AND(((((((((((((((((0.748307846605091)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(x'11ba')))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c1)AND(((rt1.c2)>=(rt1.c1)))))OR((((rt1.c2))>((rt1.c2))))))OR(rt1.c2 COLLATE BINARY)))AND(((((((((((((((((0.748307846605091)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(x'11ba')))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c1)AND(((rt1.c2)>=(rt1.c1)))))OR((((rt1.c2))>((rt1.c2))))))OR(rt1.c2 COLLATE BINARY)))AND(((((((((((((((((0.748307846605091)OR(rt1.c3)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(x'11ba')))AND(rt1.c0)))));
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((((0x657ea1a8, rt1.c0, rt1.c1))>=((rt1.c3, t0.c51, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0X657ea1a8, rt1.c0, rt1.c1))>=((rt1.c3, t0.c51, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((((0x657ea1a8, rt1.c0, rt1.c1))>=((rt1.c3, t0.c51, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((0X657ea1a8, rt1.c0, rt1.c1))>=((rt1.c3, t0.c51, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT COUNT(*) FROM rt0, t0 NOT INDEXED, rt1 WHERE (((((0x657ea1a8, rt1.c0, rt1.c1))>=((rt1.c3, t0.c51, rt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((- (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c0))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ((- (rt0.c0))) AND (NULL))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1) NOT BETWEEN ((- (rt0.c0))) AND (NULL)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ('779734921');
SELECT SUM(count) FROM (SELECT ALL (('779734921') IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ('779734921');
SELECT SUM(count) FROM (SELECT ALL (('779734921') IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ('779734921');
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c51)) COLLATE RTRIM) ORDER BY ((t0.c51 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c51 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c51)) COLLATE RTRIM) ORDER BY ((t0.c51 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c51)) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((t0.c51 IN ()) IN ())  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) BETWEEN (t0.c0) AND (t0.c51)) COLLATE RTRIM) ORDER BY ((t0.c51 IN ()) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON (~ (((((((((rt1.c1)OR(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)))) WHERE (((CAST(rt0.c0 AS TEXT))/(x''))) ORDER BY CAST((- (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))/(x''))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON (~ (((((((((rt1.c1)OR(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)))) ORDER BY CAST((- (rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON (~ (((((((((rt1.c1)OR(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)))) WHERE (((CAST(rt0.c0 AS TEXT))/(x''))) ORDER BY CAST((- (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT))/(x''))) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t0 ON (~ (((((((((rt1.c1)OR(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)))) ORDER BY CAST((- (rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 CROSS JOIN t0 ON (~ (((((((((rt1.c1)OR(x'')))OR(rt0.c1)))OR(rt0.c1)))OR(rt1.c2)))) WHERE (((CAST(rt0.c0 AS TEXT))/(x''))) ORDER BY CAST((- (rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(NULL)))>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt0.c1)))AND(NULL)))>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(NULL)))>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt0.c1)))AND(NULL)))>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)OR(rt0.c1)))AND(NULL)))>(t0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ((LENGTH(rt1.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((LENGTH(rt1.c3) IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ((LENGTH(rt1.c3) IN ()));
SELECT SUM(count) FROM (SELECT (((LENGTH(rt1.c3) IN ())) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL * FROM rt1 NATURAL JOIN rt0 WHERE ((LENGTH(rt1.c3) IN ()));
SELECT * FROM rt0 INDEXED BY i58 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((rt0.c2 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((rt0.c2 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 INDEXED BY i58);
SELECT * FROM rt0 INDEXED BY i58 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((rt0.c2 IN (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((rt0.c2 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 INDEXED BY i58);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((((((rt0.c0)AND('-1711758386')))AND(rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) ORDER BY ((((CAST(rt1.c2 AS REAL))OR(SQLITE_SOURCE_ID())))OR(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((rt0.c0)AND('-1711758386')))AND(rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((CAST(rt1.c2 AS REAL))OR(SQLITE_SOURCE_ID())))OR(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((((((rt0.c0)AND('-1711758386')))AND(rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) ORDER BY ((((CAST(rt1.c2 AS REAL))OR(SQLITE_SOURCE_ID())))OR(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((rt0.c0)AND('-1711758386')))AND(rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((CAST(rt1.c2 AS REAL))OR(SQLITE_SOURCE_ID())))OR(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((rt1.c1)) BETWEEN ((((((rt0.c0)AND('-1711758386')))AND(rt0.c1)))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))) ORDER BY ((((CAST(rt1.c2 AS REAL))OR(SQLITE_SOURCE_ID())))OR(((rt0.c1)&(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))!=((rt0.c0 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c0)<>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c0)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c0)<>(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.8536690318338321 IN ())) ORDER BY ((((((((UNLIKELY(DISTINCT rt1.c2))OR(((rt1.c0)==(rt1.c1)))))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))))OR(((((rt1.c1)OR(x'ef61')))OR(rt1.c2)))), (0.4600965009302097 IN ()), (((rt1.c1 IN ())) BETWEEN (NULL) AND (rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((0.8536690318338321 IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((UNLIKELY(DISTINCT rt1.c2))OR(((rt1.c0)==(rt1.c1)))))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))))OR(((((rt1.c1)OR(x'ef61')))OR(rt1.c2)))), (0.4600965009302097 IN ()), (((rt1.c1 IN ())) BETWEEN (NULL) AND (rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.8536690318338321 IN ())) ORDER BY ((((((((UNLIKELY(DISTINCT rt1.c2))OR(((rt1.c0)==(rt1.c1)))))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))))OR(((((rt1.c1)OR(x'ef61')))OR(rt1.c2)))), (0.4600965009302097 IN ()), (((rt1.c1 IN ())) BETWEEN (NULL) AND (rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((0.8536690318338321 IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((((((UNLIKELY(DISTINCT rt1.c2))OR(((rt1.c0)==(rt1.c1)))))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))))OR(((((rt1.c1)OR(x'ef61')))OR(rt1.c2)))), (0.4600965009302097 IN ()), (((rt1.c1 IN ())) BETWEEN (NULL) AND (rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.8536690318338321 IN ())) ORDER BY ((((((((UNLIKELY(DISTINCT rt1.c2))OR(((rt1.c0)==(rt1.c1)))))AND((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(((((rt1.c1)OR(rt1.c3)))OR(rt1.c0)))))OR(((((rt1.c1)OR(x'ef61')))OR(rt1.c2)))), (0.4600965009302097 IN ()), (((rt1.c1 IN ())) BETWEEN (NULL) AND (rt1.c2 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY json_array(((rt0.c0) NOTNULL), TRIM(DISTINCT t0.c51)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY json_array(((rt0.c0) NOTNULL), TRIM(DISTINCT t0.c51)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY json_array(((rt0.c0) NOTNULL), TRIM(DISTINCT t0.c51)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY json_array(((rt0.c0) NOTNULL), TRIM(DISTINCT t0.c51)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY json_array(((rt0.c0) NOTNULL), TRIM(DISTINCT t0.c51)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN rt0.c2 END, rt0.c1))<((rt1.c2, (((rt0.c2))<=((t0.c0))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c2) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN rt0.c2 END, rt0.c1))<((rt1.c2, (((rt0.c2))<=((t0.c0))), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt0.c2) IS FALSE));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN rt0.c2 END, rt0.c1))<((rt1.c2, (((rt0.c2))<=((t0.c0))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c2) IS FALSE);
SELECT SUM(count) FROM (SELECT (((((((((rt1.c2)AND(rt0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN rt0.c2 END, rt0.c1))<((rt1.c2, (((rt0.c2))<=((t0.c0))), (NOT (rt0.c2)))))) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((rt0.c2) IS FALSE));
SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((((((rt1.c2)AND(rt0.c0)))AND(t0.c0)), CASE WHEN t0.c0 THEN rt0.c2 END, rt0.c1))<((rt1.c2, (((rt0.c2))<=((t0.c0))), (NOT (rt0.c2)))))) ORDER BY ((rt0.c2) IS FALSE);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)%((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)%((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)%((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((rt0.c2)%((rt0.c1 IN ()))));
SELECT * FROM rt1, rt0 WHERE (ROUND(((rt0.c1)>(rt0.c2)), ((rt1.c2)<=(rt1.c3)))) ORDER BY ((HEX(DISTINCT x'ecb0')) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c1)>(rt0.c2)), ((rt1.c2)<=(rt1.c3)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((HEX(DISTINCT x'ecb0')) ISNULL) ASC);
SELECT * FROM rt1, rt0 WHERE (ROUND(((rt0.c1)>(rt0.c2)), ((rt1.c2)<=(rt1.c3)))) ORDER BY ((HEX(DISTINCT x'ecb0')) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((ROUND(((rt0.c1)>(rt0.c2)), ((rt1.c2)<=(rt1.c3)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((HEX(DISTINCT x'ecb0')) ISNULL) ASC);
SELECT * FROM rt1, rt0 WHERE (ROUND(((rt0.c1)>(rt0.c2)), ((rt1.c2)<=(rt1.c3)))) ORDER BY ((HEX(DISTINCT x'ecb0')) ISNULL) ASC;
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((CAST(rt1.c2 AS BLOB)) NOTNULL));
SELECT ALL * FROM t0, rt1, rt0 WHERE ((+ (((((t0.c0)AND(rt0.c2)))OR(t0.c0))))) ORDER BY ((((rt1.c3) IS TRUE))OR((rt1.c2 IN ()))) ASC, rt1.c1  NULLS FIRST, ((((rt1.c3)>>(t0.c51))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(rt0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt1.c3) IS TRUE))OR((rt1.c2 IN ()))) ASC, rt1.c1  NULLS FIRST, ((((rt1.c3)>>(t0.c51))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((+ (((((t0.c0)AND(rt0.c2)))OR(t0.c0))))) ORDER BY ((((rt1.c3) IS TRUE))OR((rt1.c2 IN ()))) ASC, rt1.c1  NULLS FIRST, ((((rt1.c3)>>(t0.c51))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c0)AND(rt0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ((((rt1.c3) IS TRUE))OR((rt1.c2 IN ()))) ASC, rt1.c1  NULLS FIRST, ((((rt1.c3)>>(t0.c51))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE ((+ (((((t0.c0)AND(rt0.c2)))OR(t0.c0))))) ORDER BY ((((rt1.c3) IS TRUE))OR((rt1.c2 IN ()))) ASC, rt1.c1  NULLS FIRST, ((((rt1.c3)>>(t0.c51))) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c1 AS REAL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((t0.c51) IS TRUE)  WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c3)) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((rt1.c2 IN (rt1.c3))) AND (CASE WHEN t0.c51 THEN rt1.c3 WHEN '269490999' THEN rt1.c0 WHEN NULL THEN rt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c51) IS TRUE)  WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((+ (t0.c0))) NOT BETWEEN ((rt1.c2 IN (rt1.c3))) AND (CASE WHEN t0.c51 THEN rt1.c3 WHEN '269490999' THEN rt1.c0 WHEN NULL THEN rt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((t0.c51) IS TRUE)  WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c3)) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((rt1.c2 IN (rt1.c3))) AND (CASE WHEN t0.c51 THEN rt1.c3 WHEN '269490999' THEN rt1.c0 WHEN NULL THEN rt1.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c51) IS TRUE)  WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c3)) END) IS TRUE)  as count FROM rt1, t0 ORDER BY (((+ (t0.c0))) NOT BETWEEN ((rt1.c2 IN (rt1.c3))) AND (CASE WHEN t0.c51 THEN rt1.c3 WHEN '269490999' THEN rt1.c0 WHEN NULL THEN rt1.c1 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE ((t0.c51) IS TRUE)  WHEN rt1.c1 COLLATE BINARY THEN ((((rt1.c1)AND(t0.c0)))AND(rt1.c3)) END) ORDER BY (((+ (t0.c0))) NOT BETWEEN ((rt1.c2 IN (rt1.c3))) AND (CASE WHEN t0.c51 THEN rt1.c3 WHEN '269490999' THEN rt1.c0 WHEN NULL THEN rt1.c1 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.05630438506062996 IN ())) ORDER BY (((CAST(rt1.c2 AS INTEGER)))=(((((rt1.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c3)))))) ASC  NULLS LAST, (rt1.c0 IN ()), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))/(CASE rt1.c3  WHEN rt1.c3 THEN '' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.05630438506062996 IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER)))=(((((rt1.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c3)))))) ASC  NULLS LAST, (rt1.c0 IN ()), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))/(CASE rt1.c3  WHEN rt1.c3 THEN '' END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.05630438506062996 IN ())) ORDER BY (((CAST(rt1.c2 AS INTEGER)))=(((((rt1.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c3)))))) ASC  NULLS LAST, (rt1.c0 IN ()), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))/(CASE rt1.c3  WHEN rt1.c3 THEN '' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.05630438506062996 IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((CAST(rt1.c2 AS INTEGER)))=(((((rt1.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c3)))))) ASC  NULLS LAST, (rt1.c0 IN ()), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))/(CASE rt1.c3  WHEN rt1.c3 THEN '' END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((0.05630438506062996 IN ())) ORDER BY (((CAST(rt1.c2 AS INTEGER)))=(((((rt1.c1, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c3, rt1.c1, rt1.c2)) AND ((rt1.c1, rt1.c1, rt1.c3)))))) ASC  NULLS LAST, (rt1.c0 IN ()), ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)))/(CASE rt1.c3  WHEN rt1.c3 THEN '' END))  NULLS FIRST;
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((0Xffffffffe883820e IN ())) BETWEEN (((t0.c0)%(rt0.c0))) AND (((t0.c51)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffe883820e IN ())) BETWEEN (((t0.c0)%(rt0.c0))) AND (((t0.c51)<(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((0Xffffffffe883820e IN ())) BETWEEN (((t0.c0)%(rt0.c0))) AND (((t0.c51)<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffe883820e IN ())) BETWEEN (((t0.c0)%(rt0.c0))) AND (((t0.c51)<(rt0.c0))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE ((((0Xffffffffe883820e IN ())) BETWEEN (((t0.c0)%(rt0.c0))) AND (((t0.c51)<(rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c51 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c51 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c51 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c51 AS TEXT) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c51 AS TEXT) AS BLOB));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c0)-(rt1.c1))) BETWEEN (rt0.c1) AND (CASE rt1.c3  WHEN rt0.c0 THEN '' ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)-(rt1.c1))) BETWEEN (rt0.c1) AND (CASE rt1.c3  WHEN rt0.c0 THEN '' ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c0)-(rt1.c1))) BETWEEN (rt0.c1) AND (CASE rt1.c3  WHEN rt0.c0 THEN '' ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)-(rt1.c1))) BETWEEN (rt0.c1) AND (CASE rt1.c3  WHEN rt0.c0 THEN '' ELSE rt1.c3 END))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((((rt1.c0)-(rt1.c1))) BETWEEN (rt0.c1) AND (CASE rt1.c3  WHEN rt0.c0 THEN '' ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((t0.c51) IS TRUE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (CAST(t0.c51 AS INTEGER)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c51) IS TRUE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (CAST(t0.c51 AS INTEGER)))) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((t0.c51) IS TRUE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (CAST(t0.c51 AS INTEGER)))) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c51) IS TRUE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (CAST(t0.c51 AS INTEGER)))) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((((t0.c51) IS TRUE)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (CAST(t0.c51 AS INTEGER)))) ORDER BY t0.c0 DESC;
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<<(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<<(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)<<(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT (((+ ((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c2 IN ()) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((+ ((rt1.c0 IN ())))) ORDER BY CAST((rt1.c2 IN ()) AS INTEGER);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (highlight((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))), ((((rt1.c3)AND(rt1.c0)))AND(t0.c51)), 0x448928ed, t0.c0 COLLATE RTRIM)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))), ((((rt1.c3)AND(rt1.c0)))AND(t0.c51)), 0X448928ed, t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (highlight((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))), ((((rt1.c3)AND(rt1.c0)))AND(t0.c51)), 0x448928ed, t0.c0 COLLATE RTRIM)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))), ((((rt1.c3)AND(rt1.c0)))AND(t0.c51)), 0X448928ed, t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0, rt1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (highlight((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0))), ((((rt1.c3)AND(rt1.c0)))AND(t0.c51)), 0x448928ed, t0.c0 COLLATE RTRIM)) ORDER BY NULL ASC;
SELECT * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE rt1.c3  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c3 END COLLATE RTRIM);
SELECT * FROM t0, rt1, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN '190965788' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c51 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN '190965788' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c51 END AS TEXT)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN '190965788' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c51 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c1 THEN '190965788' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c51 END AS TEXT)) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT * FROM t0, rt1, rt0 WHERE (CAST(CASE WHEN rt0.c1 THEN '190965788' WHEN rt1.c3 THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c1 THEN t0.c51 END AS TEXT));
SELECT COUNT(*) FROM t0 WHERE ((((- (NULL)))>=(0xffffffffcef292a5)));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))>=(0xffffffffcef292a5))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((- (NULL)))>=(0xffffffffcef292a5)));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))>=(0xffffffffcef292a5))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((- (NULL)))>=(0xffffffffcef292a5)));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c0) ISNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (CAST(((t0.c0) ISNULL) AS BLOB));
SELECT ALL * FROM t0, rt1 WHERE (IFNULL((rt1.c1 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (t0.c0)))) ORDER BY (((+ (t0.c51)))>(0xffffffff8d580c37 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt1.c1 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (t0.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c51)))>(0Xffffffff8d580c37 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (IFNULL((rt1.c1 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (t0.c0)))) ORDER BY (((+ (t0.c51)))>(0xffffffff8d580c37 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((rt1.c1 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (t0.c0)))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((+ (t0.c51)))>(0Xffffffff8d580c37 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (IFNULL((rt1.c1 IN ()), ((rt1.c3) NOT BETWEEN (rt1.c2) AND (t0.c0)))) ORDER BY (((+ (t0.c51)))>(0xffffffff8d580c37 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((rt1.c1, rt1.c3, -1346341013))>((rt1.c2, rt1.c0, rt1.c0))), ((rt1.c2)=(rt1.c2)), -1.323831791E9))==((CAST(rt1.c1 AS NUMERIC), rt1.c2, ((rt1.c0)OR(rt1.c3)))))) ORDER BY ((CAST(rt1.c1 AS NUMERIC))LIKE(((x'')GLOB(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1, rt1.c3, -1346341013))>((rt1.c2, rt1.c0, rt1.c0))), ((rt1.c2)==(rt1.c2)), -1.323831791E9))=((CAST(rt1.c1 AS NUMERIC), rt1.c2, ((rt1.c0)OR(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS NUMERIC))LIKE(((x'')GLOB(rt1.c2)))));
SELECT * FROM rt1 WHERE (((((((rt1.c1, rt1.c3, -1346341013))>((rt1.c2, rt1.c0, rt1.c0))), ((rt1.c2)=(rt1.c2)), -1.323831791E9))==((CAST(rt1.c1 AS NUMERIC), rt1.c2, ((rt1.c0)OR(rt1.c3)))))) ORDER BY ((CAST(rt1.c1 AS NUMERIC))LIKE(((x'')GLOB(rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1, rt1.c3, -1346341013))>((rt1.c2, rt1.c0, rt1.c0))), ((rt1.c2)==(rt1.c2)), -1.323831791E9))=((CAST(rt1.c1 AS NUMERIC), rt1.c2, ((rt1.c0)OR(rt1.c3)))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c1 AS NUMERIC))LIKE(((x'')GLOB(rt1.c2)))));
SELECT * FROM rt1 WHERE (((((((rt1.c1, rt1.c3, -1346341013))>((rt1.c2, rt1.c0, rt1.c0))), ((rt1.c2)=(rt1.c2)), -1.323831791E9))==((CAST(rt1.c1 AS NUMERIC), rt1.c2, ((rt1.c0)OR(rt1.c3)))))) ORDER BY ((CAST(rt1.c1 AS NUMERIC))LIKE(((x'')GLOB(rt1.c2))));
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0 IN (rt0.c1)))<(((((((((rt0.c1)OR(t0.c0)))AND(0.2010171946029473)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c1)))<(((((((((rt0.c1)OR(t0.c0)))AND(0.2010171946029473)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0 IN (rt0.c1)))<(((((((((rt0.c1)OR(t0.c0)))AND(0.2010171946029473)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (rt0.c1)))<(((((((((rt0.c1)OR(t0.c0)))AND(0.2010171946029473)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((t0.c0 IN (rt0.c1)))<(((((((((rt0.c1)OR(t0.c0)))AND(0.2010171946029473)))AND(rt0.c2)))AND(rt0.c0)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((t0.c51 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))))) ORDER BY rt1.c1 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt1.c1 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((t0.c51 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))))) ORDER BY rt1.c1 COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c51 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY rt1.c1 COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM rt0, t0, rt1 WHERE ((((t0.c51 IN ())) NOT BETWEEN ((rt1.c0 IN ())) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2)))))) ORDER BY rt1.c1 COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((- (t0.c51))) BETWEEN (t0.c51 COLLATE BINARY) AND (((rt0.c2)&(rt1.c2))))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c51))) BETWEEN (t0.c51 COLLATE BINARY) AND (((rt0.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((- (t0.c51))) BETWEEN (t0.c51 COLLATE BINARY) AND (((rt0.c2)&(rt1.c2))))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c51))) BETWEEN (t0.c51 COLLATE BINARY) AND (((rt0.c2)&(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t0 ORDER BY t0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 WHERE ((((- (t0.c51))) BETWEEN (t0.c51 COLLATE BINARY) AND (((rt0.c2)&(rt1.c2))))) ORDER BY t0.c0 DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((x'')-((((rt1.c2))>((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-((((rt1.c2))>((x'')))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((x'')-((((rt1.c2))>((x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')-((((rt1.c2))>((x'')))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((x'')-((((rt1.c2))>((x''))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt0.c2 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt0.c2 IN ())) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ())) NOTNULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1))))<((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)))) ORDER BY (((rt0.c2 IN ())) NOTNULL) ASC;
SELECT * FROM rt0 WHERE (-58008473) ORDER BY rt0.c0 DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((-58008473) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ASC);
SELECT * FROM rt0 WHERE (-58008473) ORDER BY rt0.c0 DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ((-58008473) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ASC);
SELECT * FROM rt0 WHERE (-58008473) ORDER BY rt0.c0 DESC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) ASC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c51))))!=(((rt1.c2 IN ()))))) ORDER BY (+ (x''))  NULLS LAST, (((t0.c0)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND ((rt1.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c51))))<>(((rt1.c2 IN ()))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (x''))  NULLS LAST, (((t0.c0)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND ((rt1.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c51))))!=(((rt1.c2 IN ()))))) ORDER BY (+ (x''))  NULLS LAST, (((t0.c0)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND ((rt1.c3))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c51))))<>(((rt1.c2 IN ()))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (x''))  NULLS LAST, (((t0.c0)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND ((rt1.c3))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((rt1.c0) NOT BETWEEN (rt1.c1) AND (t0.c51))))!=(((rt1.c2 IN ()))))) ORDER BY (+ (x''))  NULLS LAST, (((t0.c0)) BETWEEN ((((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3)))) AND ((rt1.c3))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (t0.c51) AND (t0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE NOCASE)>((~ (rt1.c2)))) WHERE (((((rt0.c2) NOT NULL)) ISNULL)) ORDER BY ((((rt1.c0) NOT BETWEEN ('K)~7%D>(b') AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (CAST(rt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (t0.c51) AND (t0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE NOCASE)>((~ (rt1.c2)))) ORDER BY ((((rt1.c0) NOT BETWEEN ('K)~7%D>(b') AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (CAST(rt1.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (t0.c51) AND (t0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE NOCASE)>((~ (rt1.c2)))) WHERE (((((rt0.c2) NOT NULL)) ISNULL)) ORDER BY ((((rt1.c0) NOT BETWEEN ('K)~7%D>(b') AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (CAST(rt1.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) ISNULL)) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (t0.c51) AND (t0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE NOCASE)>((~ (rt1.c2)))) ORDER BY ((((rt1.c0) NOT BETWEEN ('K)~7%D>(b') AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (CAST(rt1.c2 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt0.c1) BETWEEN (t0.c51) AND (t0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c0 ELSE t0.c0 END) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1 COLLATE NOCASE)>((~ (rt1.c2)))) WHERE (((((rt0.c2) NOT NULL)) ISNULL)) ORDER BY ((((rt1.c0) NOT BETWEEN ('K)~7%D>(b') AND (rt1.c0))) NOT BETWEEN (CAST(rt1.c2 AS TEXT)) AND (CAST(rt1.c2 AS INTEGER)));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c1)))AND(rt0.c0))) IS FALSE));
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT * FROM t0 CROSS JOIN rt0 ON '덗''' RIGHT OUTER JOIN rt1 ON (- (rt1.c1 COLLATE NOCASE)) WHERE (((((rt0.c2)&(rt1.c1))) NOT BETWEEN (t0.c51 COLLATE BINARY) AND (((0.011350845147819255)||(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt1.c1))) NOT BETWEEN (t0.c51 COLLATE BINARY) AND (((0.011350845147819255)||(rt1.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '덗''' RIGHT OUTER JOIN rt1 ON (- (rt1.c1 COLLATE NOCASE)));
SELECT * FROM t0 CROSS JOIN rt0 ON '덗''' RIGHT OUTER JOIN rt1 ON (- (rt1.c1 COLLATE NOCASE)) WHERE (((((rt0.c2)&(rt1.c1))) NOT BETWEEN (t0.c51 COLLATE BINARY) AND (((0.011350845147819255)||(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt1.c1))) NOT BETWEEN (t0.c51 COLLATE BINARY) AND (((0.011350845147819255)||(rt1.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '덗''' RIGHT OUTER JOIN rt1 ON (- (rt1.c1 COLLATE NOCASE)));
SELECT * FROM t0 CROSS JOIN rt0 ON '덗''' RIGHT OUTER JOIN rt1 ON (- (rt1.c1 COLLATE NOCASE)) WHERE (((((rt0.c2)&(rt1.c1))) NOT BETWEEN (t0.c51 COLLATE BINARY) AND (((0.011350845147819255)||(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((2124473045)<(rt1.c0))) AND ((~ (x'7190'))))) ORDER BY (((((((rt1.c2))>((rt1.c3))))AND(((x'')*(rt1.c1)))))OR(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) BETWEEN (((2124473045)<(rt1.c0))) AND ((~ (x'7190'))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((((rt1.c2))>((rt1.c3))))AND(((x'')*(rt1.c1)))))OR(SQLITE_SOURCE_ID())));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((2124473045)<(rt1.c0))) AND ((~ (x'7190'))))) ORDER BY (((((((rt1.c2))>((rt1.c3))))AND(((x'')*(rt1.c1)))))OR(SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) BETWEEN (((2124473045)<(rt1.c0))) AND ((~ (x'7190'))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((((rt1.c2))>((rt1.c3))))AND(((x'')*(rt1.c1)))))OR(SQLITE_SOURCE_ID())));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (((rt1.c1 COLLATE NOCASE) BETWEEN (((2124473045)<(rt1.c0))) AND ((~ (x'7190'))))) ORDER BY (((((((rt1.c2))>((rt1.c3))))AND(((x'')*(rt1.c1)))))OR(SQLITE_SOURCE_ID()));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (CAST(rt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (CAST(rt1.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (CASE t0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c2 ELSE rt0.c2 END))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST('t墊' AS NUMERIC))IS NOT(((((((((((((t0.c51)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('t墊' AS NUMERIC))IS NOT(((((((((((((t0.c51)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c51))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST('t墊' AS NUMERIC))IS NOT(((((((((((((t0.c51)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c51)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('t墊' AS NUMERIC))IS NOT(((((((((((((t0.c51)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c51))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CAST('t墊' AS NUMERIC))IS NOT(((((((((((((t0.c51)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c51)))));
SELECT * FROM rt0 WHERE (((x'')-(((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'')-(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')-(((rt0.c2)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((x'')-(((rt0.c2)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((x'')-(((rt0.c2)LIKE(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY (((NOT (rt0.c0)))==((rt0.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))==((rt0.c0 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY (((NOT (rt0.c0)))==((rt0.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0)))==((rt0.c0 IN (rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END IN ())) ORDER BY (((NOT (rt0.c0)))==((rt0.c0 IN (rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN 0.19178826103820623 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END IN ())) ORDER BY (((rt1.c1, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), rt1.c1, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END, ((rt1.c2)OR(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL), ((rt1.c1)<>(rt1.c1)), rt1.c2, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, (((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))))) ASC  NULLS FIRST, ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))IS(((rt1.c2)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN 0.19178826103820623 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), rt1.c1, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END, ((rt1.c2)OR(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL), ((rt1.c1)<>(rt1.c1)), rt1.c2, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, (((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))))) ASC  NULLS FIRST, ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))IS(((rt1.c2)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN 0.19178826103820623 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END IN ())) ORDER BY (((rt1.c1, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), rt1.c1, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END, ((rt1.c2)OR(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL), ((rt1.c1)<>(rt1.c1)), rt1.c2, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, (((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))))) ASC  NULLS FIRST, ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))IS(((rt1.c2)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c2 WHEN 0.19178826103820623 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), rt1.c1, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END, ((rt1.c2)OR(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL), ((rt1.c1)<>(rt1.c1)), rt1.c2, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, (((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))))) ASC  NULLS FIRST, ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))IS(((rt1.c2)-(rt1.c2)))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN 0.19178826103820623 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c0 END IN ())) ORDER BY (((rt1.c1, rt1.c3, rt1.c3, rt1.c1, rt1.c3)) BETWEEN (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c0))), rt1.c1, (((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c1 END, ((rt1.c2)OR(rt1.c0)))) AND ((CAST(rt1.c2 AS REAL), ((rt1.c1)<>(rt1.c1)), rt1.c2, CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END, (((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, rt1.c3, rt1.c0)))))) ASC  NULLS FIRST, ((((((((((rt1.c1)OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c2)))IS(((rt1.c2)-(rt1.c2)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)OR(rt0.c2)) IN ((~ (x''))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(rt0.c2)) IN ((~ (x''))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)OR(rt0.c2)) IN ((~ (x''))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)OR(rt0.c2)) IN ((~ (x''))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE ((((t0.c0)OR(rt0.c2)) IN ((~ (x''))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.3965768719203281);
SELECT SUM(count) FROM (SELECT ((0.3965768719203281) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.3965768719203281);
SELECT SUM(count) FROM (SELECT ((0.3965768719203281) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT ALL * FROM t0, rt0, rt1 WHERE (0.3965768719203281);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((rt1.c3 IN ()))) AND (((rt1.c2 IN (rt1.c2, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((rt1.c3 IN ()))) AND (((rt1.c2 IN (rt1.c2, rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((rt1.c3 IN ()))) AND (((rt1.c2 IN (rt1.c2, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN (((rt1.c3 IN ()))) AND (((rt1.c2 IN (rt1.c2, rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)) BETWEEN (((rt1.c3 IN ()))) AND (((rt1.c2 IN (rt1.c2, rt1.c3))))));
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((x'8073', ((t0.c51)!=(rt0.c1)), (rt1.c3 IN ())))<=((((rt1.c2)IS(rt0.c2)), (((rt1.c0))<((rt0.c2))), (~ (t0.c51))))));
SELECT SUM(count) FROM (SELECT (((((x'8073', ((t0.c51)<>(rt0.c1)), (rt1.c3 IN ())))<=((((rt1.c2)IS(rt0.c2)), (((rt1.c0))<((rt0.c2))), (~ (t0.c51)))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((x'8073', ((t0.c51)!=(rt0.c1)), (rt1.c3 IN ())))<=((((rt1.c2)IS(rt0.c2)), (((rt1.c0))<((rt0.c2))), (~ (t0.c51))))));
SELECT SUM(count) FROM (SELECT (((((x'8073', ((t0.c51)<>(rt0.c1)), (rt1.c3 IN ())))<=((((rt1.c2)IS(rt0.c2)), (((rt1.c0))<((rt0.c2))), (~ (t0.c51)))))) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE ((((x'8073', ((t0.c51)!=(rt0.c1)), (rt1.c3 IN ())))<=((((rt1.c2)IS(rt0.c2)), (((rt1.c0))<((rt0.c2))), (~ (t0.c51))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE RTRIM);
SELECT * FROM rt0, t0 WHERE (-8.19883194E8);
SELECT SUM(count) FROM (SELECT ALL ((-8.19883194E8) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (-8.19883194E8);
SELECT SUM(count) FROM (SELECT ALL ((-8.19883194E8) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (-8.19883194E8);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END)<=(((rt1.c2)/(rt0.c2))))) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END)<=(((rt1.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 END) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END)<=(((rt1.c2)/(rt0.c2))))) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END)<=(((rt1.c2)/(rt0.c2))))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 END) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((CASE rt1.c0  WHEN rt1.c2 THEN rt0.c1 ELSE t0.c0 END)<=(((rt1.c2)/(rt0.c2))))) ORDER BY ((CASE WHEN t0.c51 THEN t0.c51 END) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((t0.c51)AND(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c51)))))OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c51)AND(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c51)))))OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((t0.c51)AND(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c51)))))OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c51)AND(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c51)))))OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((t0.c51)AND(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c51)))))OR(t0.c0)))OR(CAST(rt0.c1 AS BLOB))))AND(((rt0.c0) ISNULL))));
SELECT ALL * FROM t0 INDEXED BY i55, rt0 WHERE ((((rt0.c1)) BETWEEN ((0.7770725985911713)) AND ((((rt0.c2)/(rt0.c1)))))) ORDER BY (((rt0.c0, t0.c51, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c51 THEN rt0.c0 ELSE t0.c51 END, (t0.c0 IN ()))) AND ((((t0.c51)|(0.02343863420542469)), ((rt0.c1)<>('s\r')), CASE rt0.c1  WHEN t0.c51 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN x'6e06' WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END))) ASC  NULLS FIRST, (+ (((rt0.c0)==(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((0.7770725985911713)) AND ((((rt0.c2)/(rt0.c1)))))) IS TRUE)  as count FROM t0 INDEXED BY i55, rt0 ORDER BY (((rt0.c0, t0.c51, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c51 THEN rt0.c0 ELSE t0.c51 END, (t0.c0 IN ()))) AND ((((t0.c51)|(0.02343863420542469)), ((rt0.c1)!=('s\r')), CASE rt0.c1  WHEN t0.c51 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN x'6e06' WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END))) ASC  NULLS FIRST, (+ (((rt0.c0)==(t0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i55, rt0 WHERE ((((rt0.c1)) BETWEEN ((0.7770725985911713)) AND ((((rt0.c2)/(rt0.c1)))))) ORDER BY (((rt0.c0, t0.c51, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c51 THEN rt0.c0 ELSE t0.c51 END, (t0.c0 IN ()))) AND ((((t0.c51)|(0.02343863420542469)), ((rt0.c1)<>('s\r')), CASE rt0.c1  WHEN t0.c51 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN x'6e06' WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END))) ASC  NULLS FIRST, (+ (((rt0.c0)==(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((0.7770725985911713)) AND ((((rt0.c2)/(rt0.c1)))))) IS TRUE)  as count FROM t0 INDEXED BY i55, rt0 ORDER BY (((rt0.c0, t0.c51, rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB), CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c51 THEN rt0.c0 ELSE t0.c51 END, (t0.c0 IN ()))) AND ((((t0.c51)|(0.02343863420542469)), ((rt0.c1)!=('s\r')), CASE rt0.c1  WHEN t0.c51 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN t0.c51 THEN x'6e06' WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END))) ASC  NULLS FIRST, (+ (((rt0.c0)==(t0.c0)))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c51 WHEN t0.c51 THEN t0.c51 WHEN '0.9492480316596719' THEN t0.c51 ELSE t0.c51 END)<<(LTRIM(t0.c51, t0.c51)))) ORDER BY CAST(((t0.c0)==(t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t0.c51 WHEN t0.c51 THEN t0.c51 WHEN '0.9492480316596719' THEN t0.c51 ELSE t0.c51 END)<<(LTRIM(t0.c51, t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)==(t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c51 WHEN t0.c51 THEN t0.c51 WHEN '0.9492480316596719' THEN t0.c51 ELSE t0.c51 END)<<(LTRIM(t0.c51, t0.c51)))) ORDER BY CAST(((t0.c0)==(t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN t0.c51 WHEN t0.c51 THEN t0.c51 WHEN '0.9492480316596719' THEN t0.c51 ELSE t0.c51 END)<<(LTRIM(t0.c51, t0.c51)))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c0)==(t0.c0)) AS NUMERIC)  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN NULL THEN t0.c51 WHEN t0.c51 THEN t0.c51 WHEN '0.9492480316596719' THEN t0.c51 ELSE t0.c51 END)<<(LTRIM(t0.c51, t0.c51)))) ORDER BY CAST(((t0.c0)==(t0.c0)) AS NUMERIC)  NULLS LAST;
SELECT * FROM rt1, rt0, t0 WHERE (((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END) NOT NULL)) IS TRUE)  as count FROM rt1, rt0 NOT INDEXED, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((CASE rt0.c2  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c0 END) NOT NULL));
SELECT * FROM t0, rt0, rt1 WHERE (CAST((NOT (t0.c51)) AS BLOB)) ORDER BY CAST(CASE rt0.c2  WHEN t0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c51)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CAST(CASE rt0.c2  WHEN t0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB));
SELECT * FROM t0, rt0, rt1 WHERE (CAST((NOT (t0.c51)) AS BLOB)) ORDER BY CAST(CASE rt0.c2  WHEN t0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c51)) AS BLOB)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY CAST(CASE rt0.c2  WHEN t0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB));
SELECT * FROM t0, rt0, rt1 WHERE (CAST((NOT (t0.c51)) AS BLOB)) ORDER BY CAST(CASE rt0.c2  WHEN t0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c2 END AS BLOB);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c0) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN (rt1.c0 IN ()) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.20506272318115004)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN (rt1.c0 IN ()) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.20506272318115004)) END  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c0) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN (rt1.c0 IN ()) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.20506272318115004)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 NATURAL JOIN t0 ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN (rt1.c0 IN ()) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.20506272318115004)) END  NULLS LAST);
SELECT * FROM rt1 NATURAL JOIN t0 WHERE (rt1.c0) ORDER BY CASE CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END  WHEN (rt1.c0 IN ()) THEN ((rt1.c1) BETWEEN (rt1.c2) AND (0.20506272318115004)) END  NULLS LAST;
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c0) BETWEEN (rt1.c2) AND (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt1.c2) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c0) BETWEEN (rt1.c2) AND (NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt1.c2) AND (NULL))) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT * FROM rt1, rt0, t0 WHERE (((((t0.c0) BETWEEN (rt1.c2) AND (NULL))) IS FALSE));
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((json_insert(rt1.c1, rt1.c1, rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1)-(rt1.c3))))  NULLS FIRST, rt1.c3 DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((json_insert(rt1.c1, rt1.c1, rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1)-(rt1.c3))))  NULLS FIRST, rt1.c3 DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((json_insert(rt1.c1, rt1.c1, rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1)-(rt1.c3))))  NULLS FIRST, rt1.c3 DESC, rt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1 ORDER BY ((json_insert(rt1.c1, rt1.c1, rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1)-(rt1.c3))))  NULLS FIRST, rt1.c3 DESC, rt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (rt1.c2) ORDER BY ((json_insert(rt1.c1, rt1.c1, rt1.c2)) BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c3))) AND (((rt1.c1)-(rt1.c3))))  NULLS FIRST, rt1.c3 DESC, rt1.c1 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((- (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0))))) ORDER BY rt0.c0;
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((((t0.c51)) NOT BETWEEN ((((((t0.c51)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c51))));
SELECT SUM(count) FROM (SELECT (((((t0.c51)) NOT BETWEEN ((((((t0.c51)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c51)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((((t0.c51)) NOT BETWEEN ((((((t0.c51)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c51))));
SELECT SUM(count) FROM (SELECT (((((t0.c51)) NOT BETWEEN ((((((t0.c51)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c51)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON rt0.c1 WHERE ((((t0.c51)) NOT BETWEEN ((((((t0.c51)AND(t0.c0)))AND(t0.c0)))) AND ((t0.c51))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((((rt0.c0)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<((((rt0.c0)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((((rt0.c0)IS(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<((((rt0.c0)IS(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<((((rt0.c0)IS(rt0.c2))))));
SELECT * FROM rt0, t0, rt1 WHERE (TRIM((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) ORDER BY (+ ((((t0.c0, t0.c51, rt0.c2))<=((rt1.c3, '-449829069', rt1.c3))))), CAST(0Xffffffffcb5e3443 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (+ ((((t0.c0, t0.c51, rt0.c2))<=((rt1.c3, '-449829069', rt1.c3))))), CAST(0Xffffffffcb5e3443 AS BLOB)  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE (TRIM((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) ORDER BY (+ ((((t0.c0, t0.c51, rt0.c2))<=((rt1.c3, '-449829069', rt1.c3))))), CAST(0Xffffffffcb5e3443 AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (+ ((((t0.c0, t0.c51, rt0.c2))<=((rt1.c3, '-449829069', rt1.c3))))), CAST(0Xffffffffcb5e3443 AS BLOB)  NULLS LAST);
SELECT * FROM rt0, t0, rt1 WHERE (TRIM((((t0.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c2))))) ORDER BY (+ ((((t0.c0, t0.c51, rt0.c2))<=((rt1.c3, '-449829069', rt1.c3))))), CAST(0Xffffffffcb5e3443 AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(UNLIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(UNLIKELY(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST(UNLIKELY(rt0.c2) AS NUMERIC));
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0) IS TRUE)) AND (CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0) IS TRUE)) AND (CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0) IS TRUE)) AND (CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0) IS TRUE)) AND (CASE WHEN rt1.c0 THEN rt1.c1 END))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((CAST(rt1.c2 AS REAL)) BETWEEN (((rt1.c0) IS TRUE)) AND (CASE WHEN rt1.c0 THEN rt1.c1 END)));
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) WHERE (CAST((rt1.c0 IN ()) AS REAL)) ORDER BY 0.1406559925454528 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) ORDER BY 0.1406559925454528 ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) WHERE (CAST((rt1.c0 IN ()) AS REAL)) ORDER BY 0.1406559925454528 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS REAL)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) ORDER BY 0.1406559925454528 ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t0 ON rt1.c1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c1 AS TEXT) AS INTEGER) WHERE (CAST((rt1.c0 IN ()) AS REAL)) ORDER BY 0.1406559925454528 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c3)+(rt1.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)+(rt1.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c3)+(rt1.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)+(rt1.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c3)+(rt1.c2))) NOT BETWEEN (CASE rt0.c0  WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0))) NOT BETWEEN (rt0.c1) AND (((rt1.c3)-(rt1.c3))))) ORDER BY ((((((t0.c51)AND(NULL)))AND(rt1.c1))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c0)<(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0))) NOT BETWEEN (rt0.c1) AND (((rt1.c3)-(rt1.c3))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((t0.c51)AND(NULL)))AND(rt1.c1))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c0)<(rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0))) NOT BETWEEN (rt0.c1) AND (((rt1.c3)-(rt1.c3))))) ORDER BY ((((((t0.c51)AND(NULL)))AND(rt1.c1))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c0)<(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0))) NOT BETWEEN (rt0.c1) AND (((rt1.c3)-(rt1.c3))))) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY ((((((t0.c51)AND(NULL)))AND(rt1.c1))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c0)<(rt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t0, rt1 WHERE (((((((((((((((rt0.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c3)))OR(t0.c0)))OR(t0.c0)))OR(rt1.c0))) NOT BETWEEN (rt0.c1) AND (((rt1.c3)-(rt1.c3))))) ORDER BY ((((((t0.c51)AND(NULL)))AND(rt1.c1))) NOT BETWEEN ((+ (rt1.c3))) AND (((rt1.c0)<(rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c51, t0.c51))<((+ (t0.c0))))) ORDER BY (+ (((t0.c51)%(t0.c0))))  NULLS LAST, t0.c51;
SELECT SUM(count) FROM (SELECT ((((MIN(t0.c51, t0.c51))<((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c51)%(t0.c0))))  NULLS LAST, t0.c51);
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c51, t0.c51))<((+ (t0.c0))))) ORDER BY (+ (((t0.c51)%(t0.c0))))  NULLS LAST, t0.c51;
SELECT SUM(count) FROM (SELECT ((((MIN(t0.c51, t0.c51))<((+ (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((t0.c51)%(t0.c0))))  NULLS LAST, t0.c51);
SELECT ALL COUNT(*) FROM t0 WHERE (((MIN(t0.c51, t0.c51))<((+ (t0.c0))))) ORDER BY (+ (((t0.c51)%(t0.c0))))  NULLS LAST, t0.c51;
SELECT ALL * FROM t0, rt0, rt1 WHERE (CAST(((((((((x'')OR('')))OR(rt0.c1)))AND(t0.c0)))AND(rt1.c2)) AS NUMERIC)) ORDER BY 1605768528 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')OR('')))OR(rt0.c1)))AND(t0.c0)))AND(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY 1605768528 ASC);
SELECT ALL * FROM t0, rt0, rt1 WHERE (CAST(((((((((x'')OR('')))OR(rt0.c1)))AND(t0.c0)))AND(rt1.c2)) AS NUMERIC)) ORDER BY 1605768528 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((x'')OR('')))OR(rt0.c1)))AND(t0.c0)))AND(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY 1605768528 ASC);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c51)%(rt1.c3))))) ORDER BY (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) ASC, ((CAST(t0.c51 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c51)%(rt1.c3))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) ASC, ((CAST(t0.c51 AS REAL)) IS TRUE));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c51)%(rt1.c3))))) ORDER BY (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) ASC, ((CAST(t0.c51 AS REAL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c51)%(rt1.c3))))) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) ASC, ((CAST(t0.c51 AS REAL)) IS TRUE));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE ((~ (((t0.c51)%(rt1.c3))))) ORDER BY (((rt1.c0) BETWEEN (rt0.c0) AND (rt1.c0)) IN ()) ASC, ((CAST(t0.c51 AS REAL)) IS TRUE);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)>=(t0.c51)))OR(((((t0.c51)AND('')))AND(rt0.c1)))))OR((rt1.c0 IN ()))) INNER JOIN rt0 ON NULL WHERE ((((CAST(rt1.c3 AS REAL)))<=(((+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS REAL)))<=(((+ (rt0.c2)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)>=(t0.c51)))OR(((((t0.c51)AND('')))AND(rt0.c1)))))OR((rt1.c0 IN ()))) INNER JOIN rt0 ON NULL);
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)>=(t0.c51)))OR(((((t0.c51)AND('')))AND(rt0.c1)))))OR((rt1.c0 IN ()))) INNER JOIN rt0 ON NULL WHERE ((((CAST(rt1.c3 AS REAL)))<=(((+ (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS REAL)))<=(((+ (rt0.c2)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON ((((((rt1.c0)>=(t0.c51)))OR(((((t0.c51)AND('')))AND(rt0.c1)))))OR((rt1.c0 IN ()))) INNER JOIN rt0 ON NULL);
SELECT ALL * FROM rt1, rt0 WHERE (((UNLIKELY(rt0.c2)) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) AND (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c2)) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((UNLIKELY(rt0.c2)) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) AND (rt1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(rt0.c2)) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (((UNLIKELY(rt0.c2)) NOT BETWEEN (CASE rt0.c1  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) AND (rt1.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST('ឈ/' AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST('ឈ/' AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST('ឈ/' AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY CAST('ឈ/' AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) ORDER BY CAST('ឈ/' AS NUMERIC) ASC  NULLS LAST;
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0.8843182635663399 END) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0.8843182635663399 END) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM);
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0.8843182635663399 END) AND (((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0.8843182635663399 END) AND (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM);
SELECT * FROM t0, rt0 LEFT OUTER JOIN rt1 ON (((rt0.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) COLLATE RTRIM WHERE (((((((rt1.c2)OR(rt1.c3)))OR(rt0.c0))) NOT BETWEEN (CASE WHEN rt0.c0 THEN 0.8843182635663399 END) AND (((t0.c0) NOT NULL))));
SELECT * FROM rt1 WHERE (CASE WHEN TRIM(rt1.c2, rt1.c0) THEN CASE WHEN 'p%.' THEN rt1.c2 END WHEN rt1.c0 COLLATE NOCASE THEN UNLIKELY(rt1.c2) WHEN (rt1.c1 IN ()) THEN CASE WHEN -1.168270779E9 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(rt1.c2, rt1.c0) THEN CASE WHEN 'p%.' THEN rt1.c2 END WHEN rt1.c0 COLLATE NOCASE THEN UNLIKELY(rt1.c2) WHEN (rt1.c1 IN ()) THEN CASE WHEN -1.168270779E9 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END ELSE rt1.c1 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN TRIM(rt1.c2, rt1.c0) THEN CASE WHEN 'p%.' THEN rt1.c2 END WHEN rt1.c0 COLLATE NOCASE THEN UNLIKELY(rt1.c2) WHEN (rt1.c1 IN ()) THEN CASE WHEN -1.168270779E9 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(rt1.c2, rt1.c0) THEN CASE WHEN 'p%.' THEN rt1.c2 END WHEN rt1.c0 COLLATE NOCASE THEN UNLIKELY(rt1.c2) WHEN (rt1.c1 IN ()) THEN CASE WHEN -1.168270779E9 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END ELSE rt1.c1 END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN TRIM(rt1.c2, rt1.c0) THEN CASE WHEN 'p%.' THEN rt1.c2 END WHEN rt1.c0 COLLATE NOCASE THEN UNLIKELY(rt1.c2) WHEN (rt1.c1 IN ()) THEN CASE WHEN -1.168270779E9 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END ELSE rt1.c1 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, '')) NOT BETWEEN (('\\E0䃄K', '-1630954186', x'', (rt0.c0 IN ()), ((647184271) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS BLOB), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), (('iZ9\rH8J~o')&(rt0.c0)), ((rt0.c2)-(rt0.c2)), (rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, '')) NOT BETWEEN (('\\E0䃄K', '-1630954186', x'', (rt0.c0 IN ()), ((647184271) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS BLOB), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), (('iZ9\rH8J~o')&(rt0.c0)), ((rt0.c2)-(rt0.c2)), (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, '')) NOT BETWEEN (('\\E0䃄K', '-1630954186', x'', (rt0.c0 IN ()), ((647184271) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS BLOB), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), (('iZ9\rH8J~o')&(rt0.c0)), ((rt0.c2)-(rt0.c2)), (rt0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, '')) NOT BETWEEN (('\\E0䃄K', '-1630954186', x'', (rt0.c0 IN ()), ((647184271) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS BLOB), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), (('iZ9\rH8J~o')&(rt0.c0)), ((rt0.c2)-(rt0.c2)), (rt0.c2 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c1, rt0.c2, '')) NOT BETWEEN (('\\E0䃄K', '-1630954186', x'', (rt0.c0 IN ()), ((647184271) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((CAST(rt0.c1 AS BLOB), (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, rt0.c0))), (('iZ9\rH8J~o')&(rt0.c0)), ((rt0.c2)-(rt0.c2)), (rt0.c2 IN ())))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((QUOTE(rt1.c1))>>(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON rt1.c2 WHERE (NULL) ORDER BY TRIM(rt1.c1) ASC, (~ (CAST(t0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((QUOTE(rt1.c1))>>(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON rt1.c2 ORDER BY TRIM(rt1.c1) ASC, (~ (CAST(t0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((QUOTE(rt1.c1))>>(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON rt1.c2 WHERE (NULL) ORDER BY TRIM(rt1.c1) ASC, (~ (CAST(t0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON ((QUOTE(rt1.c1))>>(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON rt1.c2 ORDER BY TRIM(rt1.c1) ASC, (~ (CAST(t0.c0 AS NUMERIC))) DESC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN t0 ON ((QUOTE(rt1.c1))>>(rt1.c0 COLLATE BINARY)) RIGHT OUTER JOIN rt0 ON rt1.c2 WHERE (NULL) ORDER BY TRIM(rt1.c1) ASC, (~ (CAST(t0.c0 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((t0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((t0.c0)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (((t0.c0)<(rt0.c1)))));
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c2 END AS REAL));
SELECT * FROM rt1, t0, rt0 WHERE (CASE rt0.c0  WHEN x'58c2' THEN rt0.c1 WHEN t0.c51 THEN rt1.c0 WHEN '-1406590042' THEN t0.c51 WHEN t0.c51 THEN rt1.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN x'58c2' THEN rt0.c1 WHEN t0.c51 THEN rt1.c0 WHEN '-1406590042' THEN t0.c51 WHEN t0.c51 THEN rt1.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CASE rt0.c0  WHEN x'58c2' THEN rt0.c1 WHEN t0.c51 THEN rt1.c0 WHEN '-1406590042' THEN t0.c51 WHEN t0.c51 THEN rt1.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN x'58c2' THEN rt0.c1 WHEN t0.c51 THEN rt1.c0 WHEN '-1406590042' THEN t0.c51 WHEN t0.c51 THEN rt1.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM) IS TRUE)  as count FROM rt1, t0, rt0);
SELECT * FROM rt1, t0, rt0 WHERE (CASE rt0.c0  WHEN x'58c2' THEN rt0.c1 WHEN t0.c51 THEN rt1.c0 WHEN '-1406590042' THEN t0.c51 WHEN t0.c51 THEN rt1.c1 WHEN t0.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (TRIM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c51, -8.11743555E8, 0.8649747146854465)) AND ((t0.c0, t0.c51, t0.c51))), ((t0.c51) NOTNULL))) ORDER BY ((TRIM(t0.c51)) BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN NULL THEN t0.c51 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c51, -8.11743555E8, 0.8649747146854465)) AND ((t0.c0, t0.c51, t0.c51))), ((t0.c51) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c51)) BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN NULL THEN t0.c51 ELSE t0.c0 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (TRIM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c51, -8.11743555E8, 0.8649747146854465)) AND ((t0.c0, t0.c51, t0.c51))), ((t0.c51) NOTNULL))) ORDER BY ((TRIM(t0.c51)) BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN NULL THEN t0.c51 ELSE t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c51, -8.11743555E8, 0.8649747146854465)) AND ((t0.c0, t0.c51, t0.c51))), ((t0.c51) NOTNULL))) IS TRUE)  as count FROM t0 ORDER BY ((TRIM(t0.c51)) BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN NULL THEN t0.c51 ELSE t0.c0 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (TRIM((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c51, -8.11743555E8, 0.8649747146854465)) AND ((t0.c0, t0.c51, t0.c51))), ((t0.c51) NOTNULL))) ORDER BY ((TRIM(t0.c51)) BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN t0.c51 THEN t0.c51 WHEN t0.c51 THEN t0.c0 WHEN NULL THEN t0.c51 ELSE t0.c0 END)) ASC;
SELECT ALL * FROM rt0, rt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt0.c0)||(rt0.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c1, rt1.c3, t0.c51)) BETWEEN ((t0.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2))) IN ())) ORDER BY 'cz'  NULLS FIRST, ((((t0.c0)=('Vj^uA.\nH輲')))LIKE(rt1.c3 COLLATE RTRIM)) ASC  NULLS LAST, -2114675474 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c3, t0.c51)) BETWEEN ((t0.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2))) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY 'cz'  NULLS FIRST, ((((t0.c0)=('Vj^uA.\nH輲')))LIKE(rt1.c3 COLLATE RTRIM)) ASC  NULLS LAST, -2114675474 ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0 WHERE (((((rt1.c1, rt1.c3, t0.c51)) BETWEEN ((t0.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2))) IN ())) ORDER BY 'cz'  NULLS FIRST, ((((t0.c0)=('Vj^uA.\nH輲')))LIKE(rt1.c3 COLLATE RTRIM)) ASC  NULLS LAST, -2114675474 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c3, t0.c51)) BETWEEN ((t0.c0, rt1.c3, rt1.c1)) AND ((rt1.c0, rt1.c2, rt1.c2))) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY 'cz'  NULLS FIRST, ((((t0.c0)=('Vj^uA.\nH輲')))LIKE(rt1.c3 COLLATE RTRIM)) ASC  NULLS LAST, -2114675474 ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c2)+(0.5532042083193782)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(0.5532042083193782)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)+(0.5532042083193782)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(0.5532042083193782)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)+(0.5532042083193782)))OR(x'')));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c51 WHEN '-441015821' THEN t0.c0 END)) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c0)=(t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c51 WHEN '-441015821' THEN t0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c51 WHEN '-441015821' THEN t0.c0 END)) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c0)=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c0)=(t0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c51 WHEN '-441015821' THEN t0.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON (~ (CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c51 WHEN '-441015821' THEN t0.c0 END)) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))IS NOT(((rt0.c0)=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c51)AND(t0.c51)))AND(t0.c0))) BETWEEN (((t0.c51) NOTNULL)) AND (CASE 0Xc45c9fe  WHEN t0.c51 THEN 0.7638602299980526 END))) ORDER BY CAST(CASE t0.c51  WHEN t0.c51 THEN t0.c51 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)AND(t0.c51)))AND(t0.c0))) BETWEEN (((t0.c51) NOTNULL)) AND (CASE 0xc45c9fe  WHEN t0.c51 THEN 0.7638602299980526 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c51  WHEN t0.c51 THEN t0.c51 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c51)AND(t0.c51)))AND(t0.c0))) BETWEEN (((t0.c51) NOTNULL)) AND (CASE 0Xc45c9fe  WHEN t0.c51 THEN 0.7638602299980526 END))) ORDER BY CAST(CASE t0.c51  WHEN t0.c51 THEN t0.c51 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c51)AND(t0.c51)))AND(t0.c0))) BETWEEN (((t0.c51) NOTNULL)) AND (CASE 0xc45c9fe  WHEN t0.c51 THEN 0.7638602299980526 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c51  WHEN t0.c51 THEN t0.c51 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c51)AND(t0.c51)))AND(t0.c0))) BETWEEN (((t0.c51) NOTNULL)) AND (CASE 0Xc45c9fe  WHEN t0.c51 THEN 0.7638602299980526 END))) ORDER BY CAST(CASE t0.c51  WHEN t0.c51 THEN t0.c51 END AS BLOB)  NULLS FIRST;
SELECT * FROM t0, rt0, rt1 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN -474239511 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0x1e17a5d2 ELSE t0.c51 END IN (((t0.c51) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN -474239511 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0x1e17a5d2 ELSE t0.c51 END IN (((t0.c51) NOT BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN -474239511 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0x1e17a5d2 ELSE t0.c51 END IN (((t0.c51) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN -474239511 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0x1e17a5d2 ELSE t0.c51 END IN (((t0.c51) NOT BETWEEN (rt0.c2) AND (NULL))))) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN -474239511 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c0 THEN 0x1e17a5d2 ELSE t0.c51 END IN (((t0.c51) NOT BETWEEN (rt0.c2) AND (NULL)))));
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (- (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOTNULL)) IS TRUE)  as count FROM t0, rt0, rt1 ORDER BY (- (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, rt0, rt1 WHERE (((rt1.c0) NOTNULL)) ORDER BY (- (rt0.c2)) COLLATE RTRIM;
SELECT ALL * FROM rt1, t0, rt0 WHERE (((LOWER(rt0.c1))<=(((NULL) ISNULL)))) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c1))<=(((NULL) ISNULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((LOWER(rt0.c1))<=(((NULL) ISNULL)))) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c1))<=(((NULL) ISNULL)))) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY rt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt1, t0, rt0 WHERE (((LOWER(rt0.c1))<=(((NULL) ISNULL)))) ORDER BY rt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST((NOT (rt1.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2) IS TRUE) WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE (rt1.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2) IS TRUE) WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2) IS TRUE) WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE (rt1.c3 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2) IS TRUE) WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE (rt1.c3 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c0) IS TRUE) THEN ((rt1.c2) IS TRUE) WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) WHEN CAST(rt1.c1 AS INTEGER) THEN ((rt1.c2) IS FALSE) ELSE (rt1.c3 IN ()) END);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt1.c1, '-1844069124', rt1.c3)) BETWEEN (((x'' IN ()), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), CAST(rt1.c0 AS BLOB))) AND (((((t0.c0, t0.c51, rt1.c1, t0.c0, t0.c0)) NOT BETWEEN ((0x2491709b, rt0.c1, t0.c0, '', '	{W鍅UA''H?')) AND ((t0.c51, rt0.c1, rt0.c1, rt1.c1, t0.c51))), ((rt1.c1) ISNULL), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, '-1844069124', rt1.c3)) BETWEEN (((x'' IN ()), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), CAST(rt1.c0 AS BLOB))) AND (((((t0.c0, t0.c51, rt1.c1, t0.c0, t0.c0)) NOT BETWEEN ((0X2491709b, rt0.c1, t0.c0, '', '	{W鍅UA''H?')) AND ((t0.c51, rt0.c1, rt0.c1, rt1.c1, t0.c51))), ((rt1.c1) ISNULL), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt1.c1, '-1844069124', rt1.c3)) BETWEEN (((x'' IN ()), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), CAST(rt1.c0 AS BLOB))) AND (((((t0.c0, t0.c51, rt1.c1, t0.c0, t0.c0)) NOT BETWEEN ((0x2491709b, rt0.c1, t0.c0, '', '	{W鍅UA''H?')) AND ((t0.c51, rt0.c1, rt0.c1, rt1.c1, t0.c51))), ((rt1.c1) ISNULL), (rt1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, '-1844069124', rt1.c3)) BETWEEN (((x'' IN ()), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), CAST(rt1.c0 AS BLOB))) AND (((((t0.c0, t0.c51, rt1.c1, t0.c0, t0.c0)) NOT BETWEEN ((0X2491709b, rt0.c1, t0.c0, '', '	{W鍅UA''H?')) AND ((t0.c51, rt0.c1, rt0.c1, rt1.c1, t0.c51))), ((rt1.c1) ISNULL), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE ((((rt1.c1, '-1844069124', rt1.c3)) BETWEEN (((x'' IN ()), (((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))), CAST(rt1.c0 AS BLOB))) AND (((((t0.c0, t0.c51, rt1.c1, t0.c0, t0.c0)) NOT BETWEEN ((0x2491709b, rt0.c1, t0.c0, '', '	{W鍅UA''H?')) AND ((t0.c51, rt0.c1, rt0.c1, rt1.c1, t0.c51))), ((rt1.c1) ISNULL), (rt1.c1 IN ())))));
