-- Time: 2024/06/08 21:19:00
-- Database: database19
-- Database version: 3.40.0
-- seed value: 2392776219
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1, prefix = 132); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 12ms;
COMMIT; -- 2ms;
PRAGMA temp.recursive_triggers; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0Xffffffff99d5335e); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=(0Xffffffffbe53a478) WHERE (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x'' WHERE vt0.c0; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (x''), (NULL), ('-1101814664'); -- 1ms;
UPDATE vt0 SET c1=x'' WHERE ((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0) AND (vt0.c0 COLLATE NOCASE)); -- 0ms;
PRAGMA main.threads; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1442955127); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x''; -- 1ms;
UPDATE vt0 SET c1=x'545e', c1=x'' WHERE (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((((0.7362529023911765)>(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) IS FALSE))) AND ((((vt0.c0) IS TRUE), ((vt0.c0)<>(vt0.c0)), x''))); -- 1ms;
PRAGMA secure_delete; -- 0ms;
UPDATE vt0 SET c0='-882578292'; -- 1ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('-1714080930'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0xffffffffbe53a478); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43493'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1618'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='-243196666', c1=x'' WHERE (((vt0.c0) ISNULL) IN ()); -- 4ms;
DELETE FROM vt0 WHERE LTRIM(((((vt0.c0)AND(vt0.c0)))OR(0.32379764949958567))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1, c0)=(x'', x'010a', NULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
REINDEX  vt0; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1328040430,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 67822363); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES ('-806218937', '915263527'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c1)=(NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('O#DqWh㉠', x'') WHERE (('') NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
PRAGMA soft_heap_limit; -- 0ms;
REINDEX BINARY; -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-3957257,8');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1731891203);\n; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('''z'); -- 1ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (((((x'') NOT BETWEEN (x'7b27') AND (0.3937895393345707)))AND(((('0.3937895393345707', NULL, '503536498')) BETWEEN (('', x'', 0.5839228913533494)) AND ((NULL, -230003072, x'')))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE vt0 SET (c1, c0, c1)=('', 0.3937895393345707, NULL); -- 1ms;
CREATE TEMPORARY TABLE t0 (c0 REAL , c1 BLOB , c2 INT ); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i58 ON t0((~ (((c0) BETWEEN (c0) AND (c0)))) DESC,(((NOT (c0)))AND(CAST(c2 AS NUMERIC))) COLLATE RTRIM,c1); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c1)=(2072792594, 0.5839228913533494); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES ('575484509', 0xffffffff83c16406, x'c09c'), (((((0X14af956f)<=(NULL)))<<(PRINTF('1511231690', NULL, NULL))), '', '6Mꈗv?1訊9'), (x'b2ff', -1328040430, 1550591532); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i80 ON t0(((((CASE WHEN c2 THEN c0 END)OR(((c0) NOTNULL))))AND((- (c1)))) COLLATE NOCASE,CAST(CASE c1  WHEN c0 THEN c1 WHEN c1 THEN 0Xffffffff98c56ffd WHEN c1 THEN c2 ELSE c0 END AS INTEGER) COLLATE NOCASE,CAST((~ (c2)) AS BLOB) COLLATE BINARY ASC) WHERE c0; -- 0ms;
UPDATE rt0 SET c1=x'2ab0' WHERE ((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((x'', rt0.c1, rt0.c1))) IN ()); -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES (0.7148205593248588), (0.913626605656907), (x''); -- 0ms;
ANALYZE; -- 1ms;
UPDATE t0 SET c1=x''; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES ('6f'); -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.7148205593248588; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'4cad' WHERE ((((t0.c0)>(t0.c1)))GLOB(t0.c0)); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (x'', 'O#DqWh㉠', NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
END TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, content=''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '54878'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c1, c1)=(x'', -1.32804043E9, NULL); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1027649426); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 396128553); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0x34eaf867; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('ow	Nnᆽ', x''); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0x5fe66e38 WHERE (((((rt0.c0)IS NOT(rt0.c1))))>=((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 WHEN 0.6481136696703733 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.7362529023911765); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.mmap_size = 126652727062192273; -- 0ms;
ANALYZE i80; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0x7b8c4e12); -- 1ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr2 BEFORE INSERT ON t0 WHEN ((((t0.c1) IS TRUE))>=(((t0.c1)-(t0.c1)))) BEGIN SELECT RAISE(ROLLBACK, 'asdf');SELECT RAISE(IGNORE);UPDATE OR ABORT vt0 SET (c0)=(0.4542342303273994);END; -- 0ms;
PRAGMA default_cache_size = -962504737; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY RTRIM((NOT (t0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY RTRIM((NOT (t0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY RTRIM((NOT (t0.c1)));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY RTRIM((NOT (t0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (vt1.c0) ORDER BY RTRIM((NOT (t0.c1)));
SELECT COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((t0.c1)GLOB(vt0.c1)))LIKE(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((t0.c1)GLOB(vt0.c1)))LIKE(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((t0.c1)GLOB(vt0.c1)))LIKE(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON rt0.c0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((t0.c1)GLOB(vt0.c1)))LIKE(((t0.c0) NOT NULL))) RIGHT OUTER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c1) NOT BETWEEN ('1930774557') AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ('1930774557') AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c1) NOT BETWEEN ('1930774557') AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN ('1930774557') AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((rt0.c1) NOT BETWEEN ('1930774557') AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE (CAST(((((t0.c1)AND(t0.c1)))AND(t0.c0)) AS NUMERIC)) ORDER BY (- (CASE WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END)), vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c1)AND(t0.c1)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON CAST(x'' AS NUMERIC) ORDER BY (- (CASE WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END)), vt0.c1);
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE (CAST(((((t0.c1)AND(t0.c1)))AND(t0.c0)) AS NUMERIC)) ORDER BY (- (CASE WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END)), vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t0.c1)AND(t0.c1)))AND(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON CAST(x'' AS NUMERIC) ORDER BY (- (CASE WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END)), vt0.c1);
SELECT ALL * FROM t0, vt0 CROSS JOIN vt1 ON CAST(x'' AS NUMERIC) WHERE (CAST(((((t0.c1)AND(t0.c1)))AND(t0.c0)) AS NUMERIC)) ORDER BY (- (CASE WHEN t0.c1 THEN vt1.c0 ELSE t0.c1 END)), vt0.c1;
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((vt1.c0)<(rt0.c1)) COLLATE BINARY) ORDER BY ((((t0.c0)&(t0.c2)))>>(((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((((t0.c0)&(t0.c2)))>>(((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((vt1.c0)<(rt0.c1)) COLLATE BINARY) ORDER BY ((((t0.c0)&(t0.c2)))>>(((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY ((((t0.c0)&(t0.c2)))>>(((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (((vt1.c0)<(rt0.c1)) COLLATE BINARY) ORDER BY ((((t0.c0)&(t0.c2)))>>(((vt1.c0) BETWEEN (t0.c2) AND (t0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)|(rt0.c0))) BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON ((((rt0.c0, t0.c2, rt0.c0))==((t0.c1, x'', vt0.c0))) IN ()) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)|(rt0.c0))) BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON ((((rt0.c0, t0.c2, rt0.c0))=((t0.c1, x'', vt0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)|(rt0.c0))) BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON ((((rt0.c0, t0.c2, rt0.c0))==((t0.c1, x'', vt0.c0))) IN ()) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((((t0.c0)|(rt0.c0))) BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)) FULL OUTER JOIN rt0 ON ((((rt0.c0, t0.c2, rt0.c0))=((t0.c1, x'', vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.32379764949958567 AS TEXT) COLLATE RTRIM) ORDER BY 0.983710016247241 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.32379764949958567 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0.983710016247241 COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.32379764949958567 AS TEXT) COLLATE RTRIM) ORDER BY 0.983710016247241 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.32379764949958567 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0.983710016247241 COLLATE NOCASE COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(0.32379764949958567 AS TEXT) COLLATE RTRIM) ORDER BY 0.983710016247241 COLLATE NOCASE COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)LIKE(vt0.c1)))>=(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c1)))>=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)LIKE(vt0.c1)))>=(((vt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(vt0.c1)))>=(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)LIKE(vt0.c1)))>=(((vt0.c1) IS FALSE))));
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((((NULL) ISNULL))AND(t0.c1)))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) ISNULL))AND(t0.c1)))OR(x''))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((((NULL) ISNULL))AND(t0.c1)))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL) ISNULL))AND(t0.c1)))OR(x''))) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT * FROM vt0, rt0, t0, vt1 WHERE (((((((NULL) ISNULL))AND(t0.c1)))OR(x'')));
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(highlight(rt0.c0, rt0.c0, rt0.c1, t0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(highlight(rt0.c0, rt0.c0, rt0.c1, t0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(highlight(rt0.c0, rt0.c0, rt0.c1, t0.c2) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(highlight(rt0.c0, rt0.c0, rt0.c1, t0.c2) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(highlight(rt0.c0, rt0.c0, rt0.c1, t0.c2) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) WHERE ((vt1.c0 IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) WHERE ((vt1.c0 IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON CAST(((((rt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS BLOB) WHERE ((vt1.c0 IN ())) ORDER BY CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c1 COLLATE BINARY)OR(((((t0.c0)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1 COLLATE BINARY)OR(((((t0.c0)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c1 COLLATE BINARY)OR(((((t0.c0)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1 COLLATE BINARY)OR(((((t0.c0)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c1 COLLATE BINARY)OR(((((t0.c0)AND(t0.c1)))OR(t0.c2)))))OR(t0.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c0)/(vt0.c1)))==((0.6079204756189887 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(vt0.c1)))=((0.6079204756189887 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c0)/(vt0.c1)))==((0.6079204756189887 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)/(vt0.c1)))=((0.6079204756189887 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((((t0.c0)/(vt0.c1)))==((0.6079204756189887 IN ()))));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((vt1.c0) ISNULL) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(((vt1.c0) ISNULL) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((vt1.c0) ISNULL) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(((vt1.c0) ISNULL) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CAST(((vt1.c0) ISNULL) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c2 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1 INDEXED BY i80, vt0, t0 WHERE (x'') ORDER BY ((((vt0.c1)*(t0.c2))) NOT BETWEEN (0.32250826436583624) AND (NULL));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 INDEXED BY i80, vt0, t0 ORDER BY ((((vt0.c1)*(t0.c2))) NOT BETWEEN (0.32250826436583624) AND (NULL)));
SELECT COUNT(*) FROM vt1 INDEXED BY i80, vt0, t0 WHERE (x'') ORDER BY ((((vt0.c1)*(t0.c2))) NOT BETWEEN (0.32250826436583624) AND (NULL));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 INDEXED BY i80, vt0, t0 ORDER BY ((((vt0.c1)*(t0.c2))) NOT BETWEEN (0.32250826436583624) AND (NULL)));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (0.9939215789856514, (t0.c1 IN ())))) ORDER BY ((((t0.c0) ISNULL))LIKE(CAST(t0.c2 AS NUMERIC))), (((t0.c0)) BETWEEN ((((t0.c2)%(vt0.c0)))) AND ((((x'752b') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((- (t0.c2)))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (0.9939215789856514, (t0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) ISNULL))LIKE(CAST(t0.c2 AS NUMERIC))), (((t0.c0)) BETWEEN ((((t0.c2)%(vt0.c0)))) AND ((((x'752b') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((- (t0.c2)))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (0.9939215789856514, (t0.c1 IN ())))) ORDER BY ((((t0.c0) ISNULL))LIKE(CAST(t0.c2 AS NUMERIC))), (((t0.c0)) BETWEEN ((((t0.c2)%(vt0.c0)))) AND ((((x'752b') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((- (t0.c2)))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (0.9939215789856514, (t0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0) ISNULL))LIKE(CAST(t0.c2 AS NUMERIC))), (((t0.c0)) BETWEEN ((((t0.c2)%(vt0.c0)))) AND ((((x'752b') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((- (t0.c2)))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))));
SELECT * FROM t0, vt0 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))) IN (0.9939215789856514, (t0.c1 IN ())))) ORDER BY ((((t0.c0) ISNULL))LIKE(CAST(t0.c2 AS NUMERIC))), (((t0.c0)) BETWEEN ((((t0.c2)%(vt0.c0)))) AND ((((x'752b') NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ASC, (((- (t0.c2)))OR((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c2))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (rt0.c2)));
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(rt0.c0)))>(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(rt0.c0)))>(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(rt0.c0)))>(((NULL) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS NOT(rt0.c0)))>(((NULL) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((vt0.c1)IS NOT(rt0.c0)))>(((NULL) IS TRUE))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE 0.5873179650003576  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5873179650003576  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE 0.5873179650003576  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.5873179650003576  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE 0.5873179650003576  WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END) NOT NULL));
SELECT * FROM vt0 INDEXED BY i80, vt1, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INDEXED BY i80, vt1, rt0, t0);
SELECT * FROM vt0 INDEXED BY i80, vt1, rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 INDEXED BY i80, vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((t0.c1)||(vt1.c0))  WHEN t0.c1 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)||(vt1.c0))  WHEN t0.c1 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((t0.c1)||(vt1.c0))  WHEN t0.c1 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c1)||(vt1.c0))  WHEN t0.c1 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE (CASE ((t0.c1)||(vt1.c0))  WHEN t0.c1 THEN ((NULL) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('0.913626605656907') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.913626605656907') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('0.913626605656907') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('0.913626605656907') IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('0.913626605656907') ORDER BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((+ (vt1.c0)))) ASC;
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN (json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1), NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN (json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN (json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1), NULL))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((vt1.c0 IN ()) IN (json_array(vt0.c1, vt0.c1, vt0.c1, vt0.c1), NULL)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((~ (vt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS NUMERIC))<=(LIKELIHOOD(DISTINCT rt0.c2, 0.6945318799922882))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))<=(LIKELIHOOD(DISTINCT rt0.c2, 0.6945318799922882)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS NUMERIC))<=(LIKELIHOOD(DISTINCT rt0.c2, 0.6945318799922882))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))<=(LIKELIHOOD(DISTINCT rt0.c2, 0.6945318799922882)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c0 AS NUMERIC))<=(LIKELIHOOD(DISTINCT rt0.c2, 0.6945318799922882))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(NULL)))AND((~ (t0.c1)))))AND(t0.c1)))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c2)*(t0.c2)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))))) ORDER BY CAST(t0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(NULL)))AND((~ (t0.c1)))))AND(t0.c1)))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c2)*(t0.c2)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(NULL)))AND((~ (t0.c1)))))AND(t0.c1)))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c2)*(t0.c2)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))))) ORDER BY CAST(t0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(NULL)))AND((~ (t0.c1)))))AND(t0.c1)))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c2)*(t0.c2)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((((((((t0.c1)OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(t0.c1)))AND(NULL)))AND((~ (t0.c1)))))AND(t0.c1)))OR(((t0.c1)LIKE(t0.c0)))))OR(((t0.c2)*(t0.c2)))))OR(((((((((t0.c0)AND(t0.c0)))AND(t0.c1)))AND(t0.c0)))AND(t0.c1))))) ORDER BY CAST(t0.c0 AS REAL) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))*(ABS(DISTINCT t0.c1)))) ORDER BY UNLIKELY(((t0.c2) BETWEEN (x'') AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))*(ABS(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c2) BETWEEN (x'') AND (t0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))*(ABS(DISTINCT t0.c1)))) ORDER BY UNLIKELY(((t0.c2) BETWEEN (x'') AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOTNULL))*(ABS(DISTINCT t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c2) BETWEEN (x'') AND (t0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0) NOTNULL))*(ABS(DISTINCT t0.c1)))) ORDER BY UNLIKELY(((t0.c2) BETWEEN (x'') AND (t0.c1)));
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 COLLATE BINARY))>=((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY))>=((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 COLLATE BINARY))>=((((rt0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE BINARY))>=((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((rt0.c1 COLLATE BINARY))>=((((rt0.c1) IS TRUE)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>((((rt0.c1)LIKE(x''))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)GLOB(rt0.c2))))>((((rt0.c1)LIKE(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>((((rt0.c1)LIKE(x''))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)GLOB(rt0.c2))))>((((rt0.c1)LIKE(x'')))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2)GLOB(rt0.c2))))>((((rt0.c1)LIKE(x''))))));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 IN ()) IN (((t0.c0) NOT NULL), vt0.c0))) ORDER BY ((((((t0.c1)AND(vt0.c1)))AND(t0.c0)))OR((~ (t0.c2)))) DESC, CAST((-9.62504737E8 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN (((t0.c0) NOT NULL), vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c1)AND(vt0.c1)))AND(t0.c0)))OR((~ (t0.c2)))) DESC, CAST((-9.62504737E8 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 IN ()) IN (((t0.c0) NOT NULL), vt0.c0))) ORDER BY ((((((t0.c1)AND(vt0.c1)))AND(t0.c0)))OR((~ (t0.c2)))) DESC, CAST((-9.62504737E8 IN ()) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 IN ()) IN (((t0.c0) NOT NULL), vt0.c0))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((t0.c1)AND(vt0.c1)))AND(t0.c0)))OR((~ (t0.c2)))) DESC, CAST((-9.62504737E8 IN ()) AS TEXT)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c1 IN ()) IN (((t0.c0) NOT NULL), vt0.c0))) ORDER BY ((((((t0.c1)AND(vt0.c1)))AND(t0.c0)))OR((~ (t0.c2)))) DESC, CAST((-9.62504737E8 IN ()) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON TRIM((((x'', t0.c1, rt0.c1))<=((t0.c2, vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON CAST(((t0.c0)<>('o 	Nwᆽ')) AS BLOB) WHERE ((DATETIME(t0.c1, rt0.c1, NULL) IN ())) ORDER BY (((vt1.c0) NOTNULL) IN (0Xffffffffe009f383)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((DATETIME(t0.c1, rt0.c1, NULL) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON TRIM((((x'', t0.c1, rt0.c1))<=((t0.c2, vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON CAST(((t0.c0)<>('o 	Nwᆽ')) AS BLOB) ORDER BY (((vt1.c0) NOTNULL) IN (0Xffffffffe009f383)) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON TRIM((((x'', t0.c1, rt0.c1))<=((t0.c2, vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON CAST(((t0.c0)<>('o 	Nwᆽ')) AS BLOB) WHERE ((DATETIME(t0.c1, rt0.c1, NULL) IN ())) ORDER BY (((vt1.c0) NOTNULL) IN (0Xffffffffe009f383)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((DATETIME(t0.c1, rt0.c1, NULL) IN ())) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON TRIM((((x'', t0.c1, rt0.c1))<=((t0.c2, vt1.c0, vt1.c0)))) CROSS JOIN vt1 ON CAST(((t0.c0)<>('o 	Nwᆽ')) AS BLOB) ORDER BY (((vt1.c0) NOTNULL) IN (0Xffffffffe009f383)) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1)))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON ((rt0.c2)AND((rt0.c2 IN ()))) FULL OUTER JOIN rt0 ON ((TYPEOF(rt0.c2)) NOTNULL) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON ((rt0.c2)AND((rt0.c2 IN ()))) FULL OUTER JOIN rt0 ON ((TYPEOF(rt0.c2)) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON ((rt0.c2)AND((rt0.c2 IN ()))) FULL OUTER JOIN rt0 ON ((TYPEOF(rt0.c2)) NOTNULL) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON ((rt0.c2)AND((rt0.c2 IN ()))) FULL OUTER JOIN rt0 ON ((TYPEOF(rt0.c2)) NOTNULL));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON x'' LEFT OUTER JOIN t0 ON ((rt0.c2)AND((rt0.c2 IN ()))) FULL OUTER JOIN rt0 ON ((TYPEOF(rt0.c2)) NOTNULL) WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0, vt1 INDEXED BY i58 WHERE ((((((((((t0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c2)))AND(t0.c1)) IN ())) ORDER BY ((((t0.c2)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c2)))AND(t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1 INDEXED BY i58 ORDER BY ((((t0.c2)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 INDEXED BY i58 WHERE ((((((((((t0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c2)))AND(t0.c1)) IN ())) ORDER BY ((((t0.c2)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c1)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c2)))AND(t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt1 INDEXED BY i58 ORDER BY ((((t0.c2)OR(vt1.c0)))OR(vt1.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((0Xfffffffff07b4cf8)|((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((0Xfffffffff07b4cf8)|((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((0Xfffffffff07b4cf8)|((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((0Xfffffffff07b4cf8)|((t0.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((0Xfffffffff07b4cf8)|((t0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-256038459' COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-256038459' COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-256038459' COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('-256038459' COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('-256038459' COLLATE BINARY) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (('-1731891203' IN ()) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-1731891203' IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (('-1731891203' IN ()) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('-1731891203' IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (('-1731891203' IN ()) COLLATE BINARY) ORDER BY ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-741948008' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('-741948008' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-741948008' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('-741948008' COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-741948008' COLLATE RTRIM);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, 0.20271111209312476))) AND ((((rt0.c0)LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, 0.20271111209312476))) AND ((((rt0.c0)LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, 0.20271111209312476))) AND ((((rt0.c0)LIKE(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, 0.20271111209312476))) AND ((((rt0.c0)LIKE(t0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((IFNULL(rt0.c1, 0.20271111209312476))) AND ((((rt0.c0)LIKE(t0.c2))))));
SELECT ALL * FROM t0, vt0 WHERE ((+ (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY (NOT (json_array(vt0.c1, vt0.c0, NULL, t0.c0, t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (json_array(vt0.c1, vt0.c0, NULL, t0.c0, t0.c0, vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE ((+ (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))) ORDER BY (NOT (json_array(vt0.c1, vt0.c0, NULL, t0.c0, t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (json_array(vt0.c1, vt0.c0, NULL, t0.c0, t0.c0, vt0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (NULL))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)))AND(((t0.c0) NOT BETWEEN (t0.c1) AND (NULL)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c2) AND ('W''')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c2) AND ('W''')) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c2) AND ('W''')) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c2) BETWEEN (t0.c2) AND ('W''')) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((t0.c2) BETWEEN (t0.c2) AND ('W''')) IN ()));
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))>=(((t0.c2)||(vt0.c1))))) ORDER BY ((((CASE t0.c1  WHEN rt0.c1 THEN '-599651800' WHEN t0.c2 THEN '#DJUe,' WHEN t0.c0 THEN vt1.c0 ELSE rt0.c1 END)OR(((x'a720')&(rt0.c0)))))OR((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))>=(((t0.c2)||(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((CASE t0.c1  WHEN rt0.c1 THEN '-599651800' WHEN t0.c2 THEN '#DJUe,' WHEN t0.c0 THEN vt1.c0 ELSE rt0.c1 END)OR(((x'a720')&(rt0.c0)))))OR((~ (rt0.c0)))) ASC);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))>=(((t0.c2)||(vt0.c1))))) ORDER BY ((((CASE t0.c1  WHEN rt0.c1 THEN '-599651800' WHEN t0.c2 THEN '#DJUe,' WHEN t0.c0 THEN vt1.c0 ELSE rt0.c1 END)OR(((x'a720')&(rt0.c0)))))OR((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))>=(((t0.c2)||(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((CASE t0.c1  WHEN rt0.c1 THEN '-599651800' WHEN t0.c2 THEN '#DJUe,' WHEN t0.c0 THEN vt1.c0 ELSE rt0.c1 END)OR(((x'a720')&(rt0.c0)))))OR((~ (rt0.c0)))) ASC);
SELECT * FROM vt1, vt0, rt0, t0 WHERE ((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((rt0.c2))))>=(((t0.c2)||(vt0.c1))))) ORDER BY ((((CASE t0.c1  WHEN rt0.c1 THEN '-599651800' WHEN t0.c2 THEN '#DJUe,' WHEN t0.c0 THEN vt1.c0 ELSE rt0.c1 END)OR(((x'a720')&(rt0.c0)))))OR((~ (rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((t0.c2 IN ()), ((t0.c1)||(t0.c2)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt1.c0)LIKE(t0.c1)), (((rt0.c1, vt0.c1, vt0.c1))>((rt0.c2, t0.c0, rt0.c2))), (((('0.7148205593248588')OR(NULL)))OR(t0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN '-304970843' WHEN ((((rt0.c0)AND(vt1.c0)))OR(t0.c0)) THEN ((t0.c1)<<(rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((((((((vt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN x'83dc' THEN t0.c1 END THEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 END WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (rt0.c1)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((t0.c2 IN ()), ((t0.c1)||(t0.c2)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt1.c0)LIKE(t0.c1)), (((rt0.c1, vt0.c1, vt0.c1))>((rt0.c2, t0.c0, rt0.c2))), (((('0.7148205593248588')OR(NULL)))OR(t0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN '-304970843' WHEN ((((rt0.c0)AND(vt1.c0)))OR(t0.c0)) THEN ((t0.c1)<<(rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((((((((vt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN x'83dc' THEN t0.c1 END THEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 END WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((t0.c2 IN ()), ((t0.c1)||(t0.c2)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt1.c0)LIKE(t0.c1)), (((rt0.c1, vt0.c1, vt0.c1))>((rt0.c2, t0.c0, rt0.c2))), (((('0.7148205593248588')OR(NULL)))OR(t0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN '-304970843' WHEN ((((rt0.c0)AND(vt1.c0)))OR(t0.c0)) THEN ((t0.c1)<<(rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((((((((vt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN x'83dc' THEN t0.c1 END THEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 END WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (rt0.c1)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 LEFT OUTER JOIN vt0 ON ((((t0.c2 IN ()), ((t0.c1)||(t0.c2)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))>((((vt1.c0)LIKE(t0.c1)), (((rt0.c1, vt0.c1, vt0.c1))>((rt0.c2, t0.c0, rt0.c2))), (((('0.7148205593248588')OR(NULL)))OR(t0.c1))))) RIGHT OUTER JOIN vt1 ON CASE WHEN CAST(vt1.c0 AS TEXT) THEN '-304970843' WHEN ((((rt0.c0)AND(vt1.c0)))OR(t0.c0)) THEN ((t0.c1)<<(rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN ((((((((vt0.c0)OR(t0.c1)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) WHEN CASE rt0.c2  WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN rt0.c0 WHEN x'83dc' THEN t0.c1 END THEN CASE WHEN vt1.c0 THEN vt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c1 END WHEN CAST(vt0.c1 AS TEXT) THEN (NOT (rt0.c1)) END);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=((rt0.c2 IN (vt0.c0))))) ORDER BY (x'd5cb' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))>=((rt0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (x'd5cb' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=((rt0.c2 IN (vt0.c0))))) ORDER BY (x'd5cb' IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))>=((rt0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (x'd5cb' IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((CAST(vt1.c0 AS NUMERIC))>=((rt0.c2 IN (vt0.c0))))) ORDER BY (x'd5cb' IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN (vt0.c0)))OR((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN 0.554270919525869 ELSE vt0.c0 END)))AND(load_extension('', vt0.c1))))OR((NOT (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)GLOB(vt0.c1)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN (vt0.c0)))OR((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN 0.554270919525869 ELSE vt0.c0 END)))AND(load_extension('', vt0.c1))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)GLOB(vt0.c1)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c0 IN (vt0.c0)))OR((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN 0.554270919525869 ELSE vt0.c0 END)))AND(load_extension('', vt0.c1))))OR((NOT (vt0.c1))))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)GLOB(vt0.c1)))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN (vt0.c0)))OR((+ (vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN 0.554270919525869 ELSE vt0.c0 END)))AND(load_extension('', vt0.c1))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)GLOB(vt0.c1)))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (TRIM((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (TRIM((rt0.c1 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((rt0.c1 IN (rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0);
SELECT COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (TRIM((rt0.c1 IN (rt0.c0))));
SELECT * FROM vt1 NOT INDEXED WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) END) ORDER BY ((((vt1.c0)||(vt1.c0)))LIKE((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0)))LIKE((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT * FROM vt1 NOT INDEXED WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) END) ORDER BY ((((vt1.c0)||(vt1.c0)))LIKE((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)||(vt1.c0)))LIKE((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT * FROM vt1 NOT INDEXED WHERE (CASE WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN (vt1.c0)) END) ORDER BY ((((vt1.c0)||(vt1.c0)))LIKE((vt1.c0 IN (vt1.c0, vt1.c0))));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS INTEGER)))) ORDER BY ((((t0.c0)<(t0.c2))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((t0.c1 IN (t0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<(t0.c2))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((t0.c1 IN (t0.c1)))));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS INTEGER)))) ORDER BY ((((t0.c0)<(t0.c2))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((t0.c1 IN (t0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<(t0.c2))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((t0.c1 IN (t0.c1)))));
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS INTEGER)))) ORDER BY ((((t0.c0)<(t0.c2))) NOT BETWEEN (t0.c2 COLLATE NOCASE) AND ((t0.c1 IN (t0.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON 'o)S}' WHERE ((- (((x'')>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')>(t0.c0))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON 'o)S}');
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON 'o)S}' WHERE ((- (((x'')>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((x'')>(t0.c0))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN rt0 ON 'o)S}');
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN rt0 ON 'o)S}' WHERE ((- (((x'')>(t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1 COLLATE RTRIM) NOT NULL) WHERE (((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'055d') AND (((vt0.c1)OR(vt0.c1))))) ORDER BY PRINTF((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'055d') AND (((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c1 COLLATE RTRIM) NOT NULL) ORDER BY PRINTF((~ (NULL))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1 COLLATE RTRIM) NOT NULL) WHERE (((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'055d') AND (((vt0.c1)OR(vt0.c1))))) ORDER BY PRINTF((~ (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'055d') AND (((vt0.c1)OR(vt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((t0.c1 COLLATE RTRIM) NOT NULL) ORDER BY PRINTF((~ (NULL))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((t0.c1 COLLATE RTRIM) NOT NULL) WHERE (((((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'055d') AND (((vt0.c1)OR(vt0.c1))))) ORDER BY PRINTF((~ (NULL)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (LIKELY(((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))) ORDER BY (((((vt0.c0 IN (rt0.c2, rt0.c0)))OR(((((x'04ae6de2')AND(vt0.c0)))OR(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE 1.51123169E9 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((vt0.c0 IN (rt0.c2, rt0.c0)))OR(((((x'04ae6de2')AND(vt0.c0)))OR(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE 1.51123169E9 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (LIKELY(((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))) ORDER BY (((((vt0.c0 IN (rt0.c2, rt0.c0)))OR(((((x'04ae6de2')AND(vt0.c0)))OR(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE 1.51123169E9 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((vt0.c0 IN (rt0.c2, rt0.c0)))OR(((((x'04ae6de2')AND(vt0.c0)))OR(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE 1.51123169E9 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (LIKELY(((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))) ORDER BY (((((vt0.c0 IN (rt0.c2, rt0.c0)))OR(((((x'04ae6de2')AND(vt0.c0)))OR(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE 1.51123169E9 END))  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (((((t0.c2)*(vt1.c0))) ISNULL)) ORDER BY ((((t0.c2)IS(t0.c0)))<(((t0.c0)IS(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)*(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c2)IS(t0.c0)))<(((t0.c0)IS(t0.c0))))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (((((t0.c2)*(vt1.c0))) ISNULL)) ORDER BY ((((t0.c2)IS(t0.c0)))<(((t0.c0)IS(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)*(vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((t0.c2)IS(t0.c0)))<(((t0.c0)IS(t0.c0))))  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (((((t0.c2)*(vt1.c0))) ISNULL)) ORDER BY ((((t0.c2)IS(t0.c0)))<(((t0.c0)IS(t0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST((((rt0.c2, t0.c2, rt0.c0))>((t0.c1, t0.c2, vt1.c0))) AS REAL)) ORDER BY (((((((((('wP1')OR(rt0.c2)))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((t0.c0)>>(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, t0.c2, rt0.c0))>((t0.c1, t0.c2, vt1.c0))) AS REAL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((((((((('wP1')OR(rt0.c2)))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((t0.c0)>>(t0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST((((rt0.c2, t0.c2, rt0.c0))>((t0.c1, t0.c2, vt1.c0))) AS REAL)) ORDER BY (((((((((('wP1')OR(rt0.c2)))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((t0.c0)>>(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, t0.c2, rt0.c0))>((t0.c1, t0.c2, vt1.c0))) AS REAL)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((((((((('wP1')OR(rt0.c2)))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((t0.c0)>>(t0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt1 WHERE (CAST((((rt0.c2, t0.c2, rt0.c0))>((t0.c1, t0.c2, vt1.c0))) AS REAL)) ORDER BY (((((((((('wP1')OR(rt0.c2)))OR(rt0.c1)))AND(t0.c0)))OR(rt0.c0))) NOT BETWEEN (((rt0.c0) BETWEEN (t0.c0) AND (vt1.c0))) AND (((t0.c0)>>(t0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0, rt0 WHERE (LIKE(rt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (LIKE(rt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END)) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL * FROM vt0, t0, rt0 WHERE (LIKE(rt0.c0 COLLATE RTRIM, CASE WHEN x'' THEN t0.c1 ELSE rt0.c0 END));
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.11203074173832528))) AND (((vt1.c0)==(vt1.c0))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (~ (vt1.c0)) END ASC, '-806218937'  NULLS FIRST, CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.11203074173832528))) AND (((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (~ (vt1.c0)) END ASC, '-806218937'  NULLS FIRST, CHANGES());
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.11203074173832528))) AND (((vt1.c0)==(vt1.c0))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (~ (vt1.c0)) END ASC, '-806218937'  NULLS FIRST, CHANGES();
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.11203074173832528))) AND (((vt1.c0)==(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (~ (vt1.c0)) END ASC, '-806218937'  NULLS FIRST, CHANGES());
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.11203074173832528))) AND (((vt1.c0)==(vt1.c0))))) ORDER BY CASE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE NULL END THEN (~ (vt1.c0)) END ASC, '-806218937'  NULLS FIRST, CHANGES();
SELECT ALL * FROM vt0 WHERE (((0.2877022546304764) NOT NULL)) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.840306143608716)) THEN ((vt0.c1)LIKE(vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.2877022546304764) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.840306143608716)) THEN ((vt0.c1)LIKE(vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.2877022546304764) NOT NULL)) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.840306143608716)) THEN ((vt0.c1)LIKE(vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.2877022546304764) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.840306143608716)) THEN ((vt0.c1)LIKE(vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((0.2877022546304764) NOT NULL)) ORDER BY CASE WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)GLOB(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.840306143608716)) THEN ((vt0.c1)LIKE(vt0.c1)) WHEN vt0.c1 THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE '1717734921'  WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN '2072792594' WHEN t0.c1 THEN 0.10274155635248439 END) AND ((- (t0.c2))))) ORDER BY ((((0.6481136696703733) NOT BETWEEN (t0.c2) AND (t0.c1))) IS TRUE), x'cf01' ASC  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE '1717734921'  WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN '2072792594' WHEN t0.c1 THEN 0.10274155635248439 END) AND ((- (t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((0.6481136696703733) NOT BETWEEN (t0.c2) AND (t0.c1))) IS TRUE), x'cf01' ASC  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE '1717734921'  WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN '2072792594' WHEN t0.c1 THEN 0.10274155635248439 END) AND ((- (t0.c2))))) ORDER BY ((((0.6481136696703733) NOT BETWEEN (t0.c2) AND (t0.c1))) IS TRUE), x'cf01' ASC  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE '1717734921'  WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN '2072792594' WHEN t0.c1 THEN 0.10274155635248439 END) AND ((- (t0.c2))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((0.6481136696703733) NOT BETWEEN (t0.c2) AND (t0.c1))) IS TRUE), x'cf01' ASC  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((CAST(t0.c1 AS NUMERIC)) NOT BETWEEN (CASE '1717734921'  WHEN vt1.c0 THEN t0.c0 WHEN t0.c1 THEN '2072792594' WHEN t0.c1 THEN 0.10274155635248439 END) AND ((- (t0.c2))))) ORDER BY ((((0.6481136696703733) NOT BETWEEN (t0.c2) AND (t0.c1))) IS TRUE), x'cf01' ASC  NULLS LAST, ((((CAST(t0.c0 AS INTEGER))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c1))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (~ (((('>]Y-T')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) CROSS JOIN t0 ON ((((vt1.c0 IN (t0.c0)), ((rt0.c2)IS NOT(t0.c2)), ((rt0.c0)&(vt0.c1))))>(((('1185309513') NOTNULL), vt0.c1 COLLATE RTRIM, vt0.c0 COLLATE NOCASE))) WHERE ((('-123081028') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-123081028') NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (~ (((('>]Y-T')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) CROSS JOIN t0 ON ((((vt1.c0 IN (t0.c0)), ((rt0.c2)IS NOT(t0.c2)), ((rt0.c0)&(vt0.c1))))>(((('1185309513') NOTNULL), vt0.c1 COLLATE RTRIM, vt0.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (~ (((('>]Y-T')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) CROSS JOIN t0 ON ((((vt1.c0 IN (t0.c0)), ((rt0.c2)IS NOT(t0.c2)), ((rt0.c0)&(vt0.c1))))>(((('1185309513') NOTNULL), vt0.c1 COLLATE RTRIM, vt0.c0 COLLATE NOCASE))) WHERE ((('-123081028') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-123081028') NOTNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON rt0.c1 FULL OUTER JOIN rt0 ON (~ (((('>]Y-T')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) CROSS JOIN t0 ON ((((vt1.c0 IN (t0.c0)), ((rt0.c2)IS NOT(t0.c2)), ((rt0.c0)&(vt0.c1))))>(((('1185309513') NOTNULL), vt0.c1 COLLATE RTRIM, vt0.c0 COLLATE NOCASE))));
SELECT * FROM vt1 WHERE (LIKE((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), 'F')) ORDER BY (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)IS NOT(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), 'F')) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)IS NOT(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (LIKE((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), 'F')) ORDER BY (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)IS NOT(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKE((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), 'F')) IS TRUE)  as count FROM vt1 ORDER BY (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)IS NOT(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (LIKE((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CAST(vt1.c0 AS TEXT), 'F')) ORDER BY (((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)) IN (((vt1.c0)IS NOT(vt1.c0)))) ASC;
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON '\NUkI' FULL OUTER JOIN t0 ON CAST(((vt0.c1)&(vt0.c0)) AS INTEGER) INNER JOIN vt0 ON ((0.8036337772654234)%(((t0.c2)>(t0.c0)))) WHERE (CASE (NOT (vt0.c1))  WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN t0.c1 THEN 'Y!&' END ELSE ((((t0.c2)OR(rt0.c2)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN t0.c1 THEN 'Y!&' END ELSE ((((t0.c2)OR(rt0.c2)))AND(t0.c2)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON '\NUkI' FULL OUTER JOIN t0 ON CAST(((vt0.c1)&(vt0.c0)) AS INTEGER) INNER JOIN vt0 ON ((0.8036337772654234)%(((t0.c2)>(t0.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON '\NUkI' FULL OUTER JOIN t0 ON CAST(((vt0.c1)&(vt0.c0)) AS INTEGER) INNER JOIN vt0 ON ((0.8036337772654234)%(((t0.c2)>(t0.c0)))) WHERE (CASE (NOT (vt0.c1))  WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN t0.c1 THEN 'Y!&' END ELSE ((((t0.c2)OR(rt0.c2)))AND(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN CAST(rt0.c1 AS BLOB) THEN CASE WHEN t0.c1 THEN 'Y!&' END ELSE ((((t0.c2)OR(rt0.c2)))AND(t0.c2)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON '\NUkI' FULL OUTER JOIN t0 ON CAST(((vt0.c1)&(vt0.c0)) AS INTEGER) INNER JOIN vt0 ON ((0.8036337772654234)%(((t0.c2)>(t0.c0)))));
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c0)/(rt0.c2)))AND(((t0.c2)GLOB(rt0.c2)))))AND(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(rt0.c2)))AND(((t0.c2)GLOB(rt0.c2)))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c0)/(rt0.c2)))AND(((t0.c2)GLOB(rt0.c2)))))AND(TRIM(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)/(rt0.c2)))AND(((t0.c2)GLOB(rt0.c2)))))AND(TRIM(rt0.c1)))) IS TRUE)  as count FROM vt1, t0, rt0);
SELECT * FROM vt1, t0, rt0 WHERE (((((((vt1.c0)/(rt0.c2)))AND(((t0.c2)GLOB(rt0.c2)))))AND(TRIM(rt0.c1))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c1)))||(((t0.c0)IS('0.840306143608716')))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))||(((t0.c0)IS('0.840306143608716'))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c1)))||(((t0.c0)IS('0.840306143608716')))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c1)))||(((t0.c0)IS('0.840306143608716'))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((((~ (vt0.c1)))||(((t0.c0)IS('0.840306143608716')))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))%(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))%(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))%(CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1, vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1, vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1, vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (vt0.c1, vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (vt0.c1, vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN 0.48475534173679435 ELSE rt0.c2 END) AND (MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN 0.48475534173679435 ELSE rt0.c2 END) AND (MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN 0.48475534173679435 ELSE rt0.c2 END) AND (MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN 0.48475534173679435 ELSE rt0.c2 END) AND (MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN 0.48475534173679435 ELSE rt0.c2 END) AND (MIN(rt0.c1, rt0.c2, rt0.c0, rt0.c0))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (rt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(DISTINCT x'') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT x'') IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(DISTINCT x'') IN ()));
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT x'') IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((UPPER(DISTINCT x'') IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON json_array(((vt0.c0)IS(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) IS FALSE), x'e112') WHERE ((((~ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_array(((vt0.c0)IS(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) IS FALSE), x'e112') ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON json_array(((vt0.c0)IS(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) IS FALSE), x'e112') WHERE ((((~ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt1.c0)|(vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON json_array(((vt0.c0)IS(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) IS FALSE), x'e112') ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON json_array(((vt0.c0)IS(vt0.c1)), ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)), ((vt0.c1) IS FALSE), x'e112') WHERE ((((~ (vt1.c0))) BETWEEN (((vt0.c1)&(vt0.c1))) AND (((vt1.c0)|(vt1.c0))))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) THEN '-2098199642' ELSE CAST(-536218749 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) THEN '-2098199642' ELSE CAST(-536218749 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) THEN '-2098199642' ELSE CAST(-536218749 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) THEN '-2098199642' ELSE CAST(-536218749 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) THEN '-2098199642' ELSE CAST(-536218749 AS NUMERIC) END);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((rt0.c0, vt0.c1, rt0.c2, vt1.c0, rt0.c2))>((vt0.c1, rt0.c0, vt1.c0, rt0.c1, vt1.c0))))AND(((NULL) BETWEEN (vt0.c1) AND (x'')))))AND(((vt1.c0)<=(x'b818'))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, vt0.c1, rt0.c2, vt1.c0, rt0.c2))>((vt0.c1, rt0.c0, vt1.c0, rt0.c1, vt1.c0))))AND(((NULL) BETWEEN (vt0.c1) AND (x'')))))AND(((vt1.c0)<=(x'b818'))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((rt0.c0, vt0.c1, rt0.c2, vt1.c0, rt0.c2))>((vt0.c1, rt0.c0, vt1.c0, rt0.c1, vt1.c0))))AND(((NULL) BETWEEN (vt0.c1) AND (x'')))))AND(((vt1.c0)<=(x'b818'))))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0, vt0.c1, rt0.c2, vt1.c0, rt0.c2))>((vt0.c1, rt0.c0, vt1.c0, rt0.c1, vt1.c0))))AND(((NULL) BETWEEN (vt0.c1) AND (x'')))))AND(((vt1.c0)<=(x'b818'))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((((rt0.c0, vt0.c1, rt0.c2, vt1.c0, rt0.c2))>((vt0.c1, rt0.c0, vt1.c0, rt0.c1, vt1.c0))))AND(((NULL) BETWEEN (vt0.c1) AND (x'')))))AND(((vt1.c0)<=(x'b818'))))) ORDER BY vt1.c0  NULLS LAST;
SELECT * FROM t0 WHERE (((t0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (((LIKELY('0.7148205593248588'))>(((((t0.c1)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY('0.7148205593248588'))>(((((t0.c1)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((LIKELY('0.7148205593248588'))>(((((t0.c1)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY('0.7148205593248588'))>(((((t0.c1)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((LIKELY('0.7148205593248588'))>(((((t0.c1)OR(t0.c0)))OR(t0.c0)))));
SELECT * FROM vt1, t0, rt0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((t0.c0) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY ((t0.c0) ISNULL) ASC  NULLS FIRST);
SELECT * FROM vt1, t0, rt0 WHERE (CAST(t0.c1 AS INTEGER) COLLATE RTRIM) ORDER BY ((t0.c0) ISNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((0.48475534173679435))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((0.48475534173679435)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((0.48475534173679435))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((0.48475534173679435)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((0.48475534173679435))));
SELECT * FROM t0 WHERE (CAST(((t0.c1)>=(t0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)>=(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c1)>=(t0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)>=(t0.c2)) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c1)>=(t0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)<(x'1639')) THEN LAST_INSERT_ROWID() END) ORDER BY (((~ (0.1556005356384107)))/(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)<(x'1639')) THEN LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 ORDER BY (((~ (0.1556005356384107)))/(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)<(x'1639')) THEN LAST_INSERT_ROWID() END) ORDER BY (((~ (0.1556005356384107)))/(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)<(x'1639')) THEN LAST_INSERT_ROWID() END) IS TRUE)  as count FROM vt0 ORDER BY (((~ (0.1556005356384107)))/(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)<<(vt0.c1)) THEN ((vt0.c0)>>(vt0.c0)) WHEN ((vt0.c0)<(x'1639')) THEN LAST_INSERT_ROWID() END) ORDER BY (((~ (0.1556005356384107)))/(CAST(vt0.c1 AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON 'R),孲xvl' WHERE (((((TRIM(DISTINCT t0.c2))AND(((vt1.c0) NOT BETWEEN (t0.c2) AND ('966648235')))))AND(((((((((t0.c1)AND(vt1.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT t0.c2))AND(((vt1.c0) NOT BETWEEN (t0.c2) AND ('966648235')))))AND(((((((((t0.c1)AND(vt1.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON 'R),孲xvl');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON 'R),孲xvl' WHERE (((((TRIM(DISTINCT t0.c2))AND(((vt1.c0) NOT BETWEEN (t0.c2) AND ('966648235')))))AND(((((((((t0.c1)AND(vt1.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT t0.c2))AND(((vt1.c0) NOT BETWEEN (t0.c2) AND ('966648235')))))AND(((((((((t0.c1)AND(vt1.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON 'R),孲xvl');
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON 'R),孲xvl' WHERE (((((TRIM(DISTINCT t0.c2))AND(((vt1.c0) NOT BETWEEN (t0.c2) AND ('966648235')))))AND(((((((((t0.c1)AND(vt1.c0)))OR(t0.c1)))OR(t0.c0)))OR(t0.c2)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(DISTINCT t0.c1))<>(((((0.3265074242674304)OR(t0.c1)))OR(t0.c1))))) ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((CAST(t0.c0 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c1))<>(((((0.3265074242674304)OR(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((CAST(t0.c0 AS REAL)) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(DISTINCT t0.c1))<>(((((0.3265074242674304)OR(t0.c1)))OR(t0.c1))))) ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((CAST(t0.c0 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c1))<>(((((0.3265074242674304)OR(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((CAST(t0.c0 AS REAL)) IS FALSE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((TRIM(DISTINCT t0.c1))<>(((((0.3265074242674304)OR(t0.c1)))OR(t0.c1))))) ORDER BY CASE ((vt1.c0)<>(t0.c2))  WHEN CAST(vt1.c0 AS BLOB) THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0))) END ASC, ((CAST(t0.c0 AS REAL)) IS FALSE) ASC  NULLS LAST;
SELECT ALL * FROM t0, rt0 WHERE ((((((((((+ (rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(((((x'')OR(t0.c1)))OR(t0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(((((x'')OR(t0.c1)))OR(t0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))))AND(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((((((+ (rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(((((x'')OR(t0.c1)))OR(t0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(((((x'')OR(t0.c1)))OR(t0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))))AND(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((((((((((+ (rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))AND(((((x'')OR(t0.c1)))OR(t0.c2)))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c2))))))AND(rt0.c2)));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2))<>((vt1.c0)))) ISNULL)) ORDER BY (((+ (rt0.c2)))&(((vt1.c0)IS NOT(rt0.c0)))) DESC, (CAST(NULL AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((+ (rt0.c2)))&(((vt1.c0)IS NOT(rt0.c0)))) DESC, (CAST(NULL AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2))<>((vt1.c0)))) ISNULL)) ORDER BY (((+ (rt0.c2)))&(((vt1.c0)IS NOT(rt0.c0)))) DESC, (CAST(NULL AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2))<>((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((+ (rt0.c2)))&(((vt1.c0)IS NOT(rt0.c0)))) DESC, (CAST(NULL AS INTEGER) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2))<>((vt1.c0)))) ISNULL)) ORDER BY (((+ (rt0.c2)))&(((vt1.c0)IS NOT(rt0.c0)))) DESC, (CAST(NULL AS INTEGER) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (LAST_INSERT_ROWID());
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON (('&Q\rkvub!d')||(((vt0.c1)IS NOT(t0.c2)))) WHERE ((((t0.c2 IN (rt0.c1, t0.c1)))/(t0.c2))) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS LAST, CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN (rt0.c1, t0.c1)))/(t0.c2))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON (('&Q\rkvub!d')||(((vt0.c1)IS NOT(t0.c2)))) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS LAST, CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)) END ASC);
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON (('&Q\rkvub!d')||(((vt0.c1)IS NOT(t0.c2)))) WHERE ((((t0.c2 IN (rt0.c1, t0.c1)))/(t0.c2))) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS LAST, CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN (rt0.c1, t0.c1)))/(t0.c2))) IS TRUE)  as count FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON (('&Q\rkvub!d')||(((vt0.c1)IS NOT(t0.c2)))) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS LAST, CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)) END ASC);
SELECT * FROM rt0, t0, vt1 LEFT OUTER JOIN vt0 ON (('&Q\rkvub!d')||(((vt0.c1)IS NOT(t0.c2)))) WHERE ((((t0.c2 IN (rt0.c1, t0.c1)))/(t0.c2))) ORDER BY (((vt1.c0) NOT NULL) IN ())  NULLS LAST, CASE WHEN rt0.c2 COLLATE NOCASE THEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))AND(vt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c1 COLLATE RTRIM)AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE RTRIM)AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c1 COLLATE RTRIM)AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1 COLLATE RTRIM)AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((t0.c1 COLLATE RTRIM)AND(CAST(t0.c1 AS NUMERIC))))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2))))));
SELECT * FROM t0, vt0, rt0, vt1 WHERE (((NULL)>=(((((t0.c0)OR(t0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((((t0.c0)OR(t0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (((NULL)>=(((((t0.c0)OR(t0.c2)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>=(((((t0.c0)OR(t0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT * FROM t0, vt0, rt0, vt1 WHERE (((NULL)>=(((((t0.c0)OR(t0.c2)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) ISNULL)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) ISNULL));
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)/(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)/(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL)/(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT COUNT(*) FROM rt0, t0, vt0 WHERE (((((NULL)/(rt0.c2))) ISNULL));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0))))) WHERE ((((vt1.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0)/(vt1.c0)))) AND ((((NULL)>>(vt1.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)>=(0.9939215789856514)), (- (vt1.c0)))))) ORDER BY 'Y!&' DESC, (((NOT (vt0.c1)))-(((-1.420778985E9) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0)/(vt1.c0)))) AND ((((NULL)>>(vt1.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)>=(0.9939215789856514)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0))))) ORDER BY 'Y!&' DESC, (((NOT (vt0.c1)))-(((-1.420778985E9) IS FALSE))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0))))) WHERE ((((vt1.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0)/(vt1.c0)))) AND ((((NULL)>>(vt1.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)>=(0.9939215789856514)), (- (vt1.c0)))))) ORDER BY 'Y!&' DESC, (((NOT (vt0.c1)))-(((-1.420778985E9) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0)/(vt1.c0)))) AND ((((NULL)>>(vt1.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)>=(0.9939215789856514)), (- (vt1.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0))))) ORDER BY 'Y!&' DESC, (((NOT (vt0.c1)))-(((-1.420778985E9) IS FALSE))) ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0))))) WHERE ((((vt1.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) BETWEEN (((vt0.c1 IN ()), ((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt0.c0 AS REAL), (vt0.c0 IN ()), ((vt0.c0)/(vt1.c0)))) AND ((((NULL)>>(vt1.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))), ((vt0.c1)>=(0.9939215789856514)), (- (vt1.c0)))))) ORDER BY 'Y!&' DESC, (((NOT (vt0.c1)))-(((-1.420778985E9) IS FALSE))) ASC;
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM COLLATE RTRIM ASC, (NOT (((rt0.c2)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM COLLATE RTRIM ASC, (NOT (((rt0.c2)%(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM COLLATE RTRIM ASC, (NOT (((rt0.c2)%(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, t0, rt0, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM COLLATE RTRIM ASC, (NOT (((rt0.c2)%(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1, t0, rt0, vt0 WHERE (NULL) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) COLLATE RTRIM COLLATE RTRIM ASC, (NOT (((rt0.c2)%(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((vt0.c0)<>(vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c1) IS TRUE))<=(NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY x'' ASC  NULLS FIRST, (((t0.c1) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS TRUE))<=(NULLIF(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY x'' ASC  NULLS FIRST, (((t0.c1) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c1) IS TRUE))<=(NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY x'' ASC  NULLS FIRST, (((t0.c1) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS TRUE))<=(NULLIF(DISTINCT t0.c0, t0.c0)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY x'' ASC  NULLS FIRST, (((t0.c1) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM vt1, t0, rt0 WHERE (((((t0.c1) IS TRUE))<=(NULLIF(DISTINCT t0.c0, t0.c0)))) ORDER BY x'' ASC  NULLS FIRST, (((t0.c1) ISNULL) IN ());
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)-(vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)-(vt1.c0)))OR(((vt1.c0)=(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON (((0.913626605656907)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((rt0.c2)+('g{'))))) RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))=(vt0.c0 COLLATE RTRIM)) WHERE ((((- (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((0.913626605656907)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((rt0.c2)+('g{'))))) RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))=(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 CROSS JOIN vt1 ON (((0.913626605656907)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((rt0.c2)+('g{'))))) RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))=(vt0.c0 COLLATE RTRIM)) WHERE ((((- (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c2  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM t0, vt0 CROSS JOIN vt1 ON (((0.913626605656907)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((rt0.c2)+('g{'))))) RIGHT OUTER JOIN rt0 ON ((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))=(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((x'7087')/((t0.c2 IN ()))) DESC, ((((t0.c0 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND('-1101814664')))OR('㶺''6yEu	\n')))OR(rt0.c1)))))AND(COALESCE(rt0.c2, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((x'7087')/((t0.c2 IN ()))) DESC, ((((t0.c0 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND('-1101814664')))OR('㶺''6yEu	\n')))OR(rt0.c1)))))AND(COALESCE(rt0.c2, t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((x'7087')/((t0.c2 IN ()))) DESC, ((((t0.c0 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND('-1101814664')))OR('㶺''6yEu	\n')))OR(rt0.c1)))))AND(COALESCE(rt0.c2, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((x'7087')/((t0.c2 IN ()))) DESC, ((((t0.c0 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND('-1101814664')))OR('㶺''6yEu	\n')))OR(rt0.c1)))))AND(COALESCE(rt0.c2, t0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY ((x'7087')/((t0.c2 IN ()))) DESC, ((((t0.c0 COLLATE RTRIM)OR(((((((((t0.c0)AND(rt0.c2)))AND('-1101814664')))OR('㶺''6yEu	\n')))OR(rt0.c1)))))AND(COALESCE(rt0.c2, t0.c0))) ASC;
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOT NULL))))AND('_')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))OR(((vt1.c0) NOT NULL))))AND('_'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOT NULL))))AND('_')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN ()))OR(((vt1.c0) NOT NULL))))AND('_'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0 IN ()))OR(((vt1.c0) NOT NULL))))AND('_')));
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c1) ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c1) ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(t0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM rt0, vt0, t0 ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(t0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t0 WHERE (t0.c1) ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(t0.c0))  NULLS LAST;
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((((((CASE 'J2<&ll*r'  WHEN rt0.c1 THEN rt0.c1 END)OR(((vt1.c0)<=(x'')))))OR(((rt0.c2) IS TRUE))))OR(vt1.c0)))OR(((t0.c1) NOTNULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((((((CASE 'J2<&ll*r'  WHEN rt0.c1 THEN rt0.c1 END)OR(((vt1.c0)<=(x'')))))OR(((rt0.c2) IS TRUE))))OR(vt1.c0)))OR(((t0.c1) NOTNULL))));
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((((((CASE 'J2<&ll*r'  WHEN rt0.c1 THEN rt0.c1 END)OR(((vt1.c0)<=(x'')))))OR(((rt0.c2) IS TRUE))))OR(vt1.c0)))OR(((t0.c1) NOTNULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((((((CASE 'J2<&ll*r'  WHEN rt0.c1 THEN rt0.c1 END)OR(((vt1.c0)<=(x'')))))OR(((rt0.c2) IS TRUE))))OR(vt1.c0)))OR(((t0.c1) NOTNULL))));
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((((((((CASE 'J2<&ll*r'  WHEN rt0.c1 THEN rt0.c1 END)OR(((vt1.c0)<=(x'')))))OR(((rt0.c2) IS TRUE))))OR(vt1.c0)))OR(((t0.c1) NOTNULL))) WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS BLOB)) ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOT BETWEEN (x'') AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOT BETWEEN (x'') AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE ((+ (json_patch(t0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json_patch(t0.c1, vt1.c0)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE ((+ (json_patch(t0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((+ (json_patch(t0.c1, vt1.c0)))) IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 NOT INDEXED, vt0 WHERE ((+ (json_patch(t0.c1, vt1.c0))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE COLLATE RTRIM) ORDER BY vt1.c0;
SELECT ALL * FROM t0 WHERE ((0x4fa90813 IN (CASE WHEN t0.c0 THEN 0Xfffffffff07b4cf8 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)GLOB(t0.c2))))  NULLS FIRST, ((((((t0.c1)*(t0.c2)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))OR(((((t0.c2)AND(t0.c2)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT (((0X4fa90813 IN (CASE WHEN t0.c0 THEN 0Xfffffffff07b4cf8 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)GLOB(t0.c2))))  NULLS FIRST, ((((((t0.c1)*(t0.c2)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))OR(((((t0.c2)AND(t0.c2)))OR(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((0x4fa90813 IN (CASE WHEN t0.c0 THEN 0Xfffffffff07b4cf8 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)GLOB(t0.c2))))  NULLS FIRST, ((((((t0.c1)*(t0.c2)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))OR(((((t0.c2)AND(t0.c2)))OR(t0.c2))));
SELECT SUM(count) FROM (SELECT (((0X4fa90813 IN (CASE WHEN t0.c0 THEN 0Xfffffffff07b4cf8 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)GLOB(t0.c2))))  NULLS FIRST, ((((((t0.c1)*(t0.c2)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))OR(((((t0.c2)AND(t0.c2)))OR(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((0x4fa90813 IN (CASE WHEN t0.c0 THEN 0Xfffffffff07b4cf8 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END))) ORDER BY (((NOT (t0.c2))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (((t0.c2)GLOB(t0.c2))))  NULLS FIRST, ((((((t0.c1)*(t0.c2)))AND(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)))OR(((((t0.c2)AND(t0.c2)))OR(t0.c2))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON load_extension(((((((((t0.c2)AND(x'e408')))AND(0.5815405183064968)))OR(t0.c0)))AND(t0.c2))) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON load_extension(((((((((t0.c2)AND(x'e408')))AND(0.5815405183064968)))OR(t0.c0)))AND(t0.c2))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON load_extension(((((((((t0.c2)AND(x'e408')))AND(0.5815405183064968)))OR(t0.c0)))AND(t0.c2))) WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON load_extension(((((((((t0.c2)AND(x'e408')))AND(0.5815405183064968)))OR(t0.c0)))AND(t0.c2))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON load_extension(((((((((t0.c2)AND(x'e408')))AND(0.5815405183064968)))OR(t0.c0)))AND(t0.c2))) WHERE (vt1.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c0)-(rt0.c1)))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c2, rt0.c1, x'')))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0)-(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c2, rt0.c1, x'')))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c0)-(rt0.c1)))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c2, rt0.c1, x'')))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0)-(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c2, rt0.c1, x'')))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (TRIM(((rt0.c0)-(rt0.c1)))) ORDER BY (((((rt0.c2, rt0.c0, rt0.c2))>=((rt0.c2, rt0.c1, x'')))) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)) WHERE (((rt0.c1)/(t0.c0 COLLATE BINARY))) ORDER BY (((((rt0.c1 IN ()))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)) ORDER BY (((((rt0.c1 IN ()))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt0, vt1, t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)) WHERE (((rt0.c1)/(t0.c0 COLLATE BINARY))) ORDER BY (((((rt0.c1 IN ()))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)/(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)) ORDER BY (((((rt0.c1 IN ()))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt0, vt1, t0 INNER JOIN rt0 ON UPPER(DISTINCT CAST(t0.c0 AS NUMERIC)) WHERE (((rt0.c1)/(t0.c0 COLLATE BINARY))) ORDER BY (((((rt0.c1 IN ()))AND((~ (rt0.c1)))))OR(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(DISTINCT (+ (rt0.c1)))) ORDER BY UPPER(rt0.c2 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(rt0.c2 COLLATE BINARY)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(DISTINCT (+ (rt0.c1)))) ORDER BY UPPER(rt0.c2 COLLATE BINARY)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(rt0.c2 COLLATE BINARY)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (UPPER(DISTINCT (+ (rt0.c1)))) ORDER BY UPPER(rt0.c2 COLLATE BINARY)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((((((((('0.1556005356384107')AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))) AND ((rt0.c0))) FULL OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE NOCASE WHERE ((~ (((rt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((((((((('0.1556005356384107')AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))) AND ((rt0.c0))) FULL OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((((((((('0.1556005356384107')AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))) AND ((rt0.c0))) FULL OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE NOCASE WHERE ((~ (((rt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON (((rt0.c1)) BETWEEN (((((((((('0.1556005356384107')AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c0)))AND(vt0.c1)))) AND ((rt0.c0))) FULL OUTER JOIN vt1 ON ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(rt0.c1)))OR(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)||(x'0238')))AND(vt0.c0)))AND(((vt0.c1)+(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((~ (vt0.c0))))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)||(x'0238')))AND(vt0.c0)))AND(((vt0.c1)+(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)||(x'0238')))AND(vt0.c0)))AND(((vt0.c1)+(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((~ (vt0.c0))))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)||(x'0238')))AND(vt0.c0)))AND(((vt0.c1)+(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)||(x'0238')))AND(vt0.c0)))AND(((vt0.c1)+(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((~ (vt0.c0))))) ORDER BY CAST((~ (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ('-3957257');
SELECT SUM(count) FROM (SELECT (('-3957257') IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ('-3957257');
SELECT SUM(count) FROM (SELECT (('-3957257') IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ('-3957257');
SELECT ALL * FROM vt1, vt0 WHERE (CAST(rtreenode(vt1.c0, vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(vt1.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(rtreenode(vt1.c0, vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rtreenode(vt1.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (CAST(rtreenode(vt1.c0, vt0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (((vt0.c1, 0.7739307720738332, rt0.c0)) BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))OR(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((x'4d0b', '茴Z', ((t0.c1)IS(rt0.c0))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((t0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (((vt0.c1, 0.7739307720738332, rt0.c0)) BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))OR(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((x'4d0b', '茴Z', ((t0.c1)IS(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (((vt0.c1, 0.7739307720738332, rt0.c0)) BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))OR(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((x'4d0b', '茴Z', ((t0.c1)IS(rt0.c0))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((t0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((t0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t0 ON (((vt0.c1, 0.7739307720738332, rt0.c0)) BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))OR(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((x'4d0b', '茴Z', ((t0.c1)IS(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN t0 ON (((vt0.c1, 0.7739307720738332, rt0.c0)) BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))AND(NULL)))OR(t0.c0)), CAST(t0.c2 AS INTEGER), CASE WHEN vt0.c0 THEN t0.c0 END)) AND ((x'4d0b', '茴Z', ((t0.c1)IS(rt0.c0))))) WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((t0.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c2) IS FALSE), json_array_length('-1574091320'))) AND (('ow	nnᆽ', NULL, (((rt0.c1))<((rt0.c2))))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c2) IS FALSE), json_array_length('-1574091320'))) AND (('ow	nnᆽ', NULL, (((rt0.c1))<((rt0.c2))))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c2) IS FALSE), json_array_length('-1574091320'))) AND (('ow	nnᆽ', NULL, (((rt0.c1))<((rt0.c2))))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c2) IS FALSE), json_array_length('-1574091320'))) AND (('ow	nnᆽ', NULL, (((rt0.c1))<((rt0.c2))))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c1, rt0.c2, vt1.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE), ((rt0.c2) IS FALSE), json_array_length('-1574091320'))) AND (('ow	nnᆽ', NULL, (((rt0.c1))<((rt0.c2))))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c2 IN (t0.c1))) BETWEEN ((t0.c2 IN ())) AND (((t0.c0) IS FALSE)))) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c1))) BETWEEN ((t0.c2 IN ())) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0, rt0 ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c2 IN (t0.c1))) BETWEEN ((t0.c2 IN ())) AND (((t0.c0) IS FALSE)))) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (t0.c1))) BETWEEN ((t0.c2 IN ())) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0, vt1 NOT INDEXED, vt0, rt0 ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((((t0.c2 IN (t0.c1))) BETWEEN ((t0.c2 IN ())) AND (((t0.c0) IS FALSE)))) ORDER BY (- (((vt0.c1) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)<(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)<(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c2)));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)<(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)<(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))), rt0.c2)));
SELECT * FROM vt1 WHERE ((((((vt1.c0))<>((vt1.c0))))-((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt1.c0))))-((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<>((vt1.c0))))-((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<>((vt1.c0))))-((vt1.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<>((vt1.c0))))-((vt1.c0 IN (vt1.c0, vt1.c0)))));
SELECT * FROM vt0 WHERE ((((((vt0.c1)!=(vt0.c1))))<=((IFNULL(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)!=(vt0.c1))))<=((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)!=(vt0.c1))))<=((IFNULL(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)!=(vt0.c1))))<=((IFNULL(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)!=(vt0.c1))))<=((IFNULL(vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0) BETWEEN (HEX(vt1.c0)) AND (((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (HEX(vt1.c0)) AND (((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0) BETWEEN (HEX(vt1.c0)) AND (((rt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (HEX(vt1.c0)) AND (((rt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((rt0.c0) BETWEEN (HEX(vt1.c0)) AND (((rt0.c0)LIKE(rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((rt0.c2) NOTNULL) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKE(((t0.c2) IS FALSE), ((((t0.c1)AND(t0.c0)))OR(vt0.c0)), '㶺')) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c2) IS FALSE), ((((t0.c1)AND(t0.c0)))OR(vt0.c0)), '㶺')) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY t0.c2  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKE(((t0.c2) IS FALSE), ((((t0.c1)AND(t0.c0)))OR(vt0.c0)), '㶺')) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((t0.c2) IS FALSE), ((((t0.c1)AND(t0.c0)))OR(vt0.c0)), '㶺')) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY t0.c2  NULLS FIRST);
SELECT ALL * FROM vt0, t0, vt1 WHERE (LIKE(((t0.c2) IS FALSE), ((((t0.c1)AND(t0.c0)))OR(vt0.c0)), '㶺')) ORDER BY t0.c2  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((vt1.c0)>(rt0.c2))) AND (((((vt0.c1)AND(vt0.c1)))AND(rt0.c0))))) ORDER BY (((((vt0.c1)||(rt0.c1))))<((((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOT BETWEEN (((vt1.c0)>(rt0.c2))) AND (((((vt0.c1)AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((vt0.c1)||(rt0.c1))))<((((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c1))))) ASC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((vt1.c0)>(rt0.c2))) AND (((((vt0.c1)AND(vt0.c1)))AND(rt0.c0))))) ORDER BY (((((vt0.c1)||(rt0.c1))))<((((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1))) NOT BETWEEN (((vt1.c0)>(rt0.c2))) AND (((((vt0.c1)AND(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (((((vt0.c1)||(rt0.c1))))<((((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c1))))) ASC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((((+ (vt0.c1))) NOT BETWEEN (((vt1.c0)>(rt0.c2))) AND (((((vt0.c1)AND(vt0.c1)))AND(rt0.c0))))) ORDER BY (((((vt0.c1)||(rt0.c1))))<((((((((((vt1.c0)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c1))))) ASC;
SELECT * FROM vt0, rt0 WHERE (((((0.43589152833388367)OR(rt0.c2)))<(((rt0.c1) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((0.43589152833388367)OR(rt0.c2)))<(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt0, rt0 WHERE (((((0.43589152833388367)OR(rt0.c2)))<(((rt0.c1) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((0.43589152833388367)OR(rt0.c2)))<(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt0, rt0 WHERE (((((0.43589152833388367)OR(rt0.c2)))<(((rt0.c1) NOTNULL)))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOTNULL);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c1)), 0.13807237344731949));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)OR(rt0.c1)), 0.13807237344731949)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c1)), 0.13807237344731949));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((rt0.c2)OR(rt0.c1)), 0.13807237344731949)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (LIKELIHOOD(((rt0.c2)OR(rt0.c1)), 0.13807237344731949));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((-234944945)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((-234944945)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((-234944945)) AND ((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)) NOT BETWEEN ((-234944945)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)) NOT BETWEEN ((-234944945)) AND ((rt0.c1))) IN ()));
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS TEXT)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0X5d2c88ea FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (((((((0.5038466252681796)>=(rt0.c0)))AND(((rt0.c1) NOT NULL))))OR(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.5038466252681796)>=(rt0.c0)))AND(((rt0.c1) NOT NULL))))OR(NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON 0X5d2c88ea FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0X5d2c88ea FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (((((((0.5038466252681796)>=(rt0.c0)))AND(((rt0.c1) NOT NULL))))OR(NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((0.5038466252681796)>=(rt0.c0)))AND(((rt0.c1) NOT NULL))))OR(NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON 0X5d2c88ea FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0X5d2c88ea FULL OUTER JOIN vt0 ON (+ (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)) WHERE (((((((0.5038466252681796)>=(rt0.c0)))AND(((rt0.c1) NOT NULL))))OR(NULL COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((((((vt0.c0)OR(CAST(x'' AS BLOB))))AND(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '471699028' ELSE rt0.c2 END)))OR(((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))))OR(vt0.c0))) ORDER BY HEX(((x'') IS TRUE)) ASC, CASE WHEN (((vt1.c0, NULL, rt0.c2))=((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c1)||(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(CAST(x'' AS BLOB))))AND(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '471699028' ELSE rt0.c2 END)))OR(((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY HEX(((x'') IS TRUE)) ASC, CASE WHEN (((vt1.c0, NULL, rt0.c2))=((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c1)||(t0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((((((vt0.c0)OR(CAST(x'' AS BLOB))))AND(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '471699028' ELSE rt0.c2 END)))OR(((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))))OR(vt0.c0))) ORDER BY HEX(((x'') IS TRUE)) ASC, CASE WHEN (((vt1.c0, NULL, rt0.c2))=((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c1)||(t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(CAST(x'' AS BLOB))))AND(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '471699028' ELSE rt0.c2 END)))OR(((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY HEX(((x'') IS TRUE)) ASC, CASE WHEN (((vt1.c0, NULL, rt0.c2))=((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c1)||(t0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (((((((((vt0.c0)OR(CAST(x'' AS BLOB))))AND(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN rt0.c2 THEN '471699028' ELSE rt0.c2 END)))OR(((((rt0.c2)OR(vt0.c1)))AND(t0.c0)))))OR(vt0.c0))) ORDER BY HEX(((x'') IS TRUE)) ASC, CASE WHEN (((vt1.c0, NULL, rt0.c2))=((vt0.c1, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((rt0.c1)||(t0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)AND(vt0.c1))) AND (((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)AND(vt0.c1))) AND (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)AND(vt0.c1))) AND (((vt0.c1)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)AND(vt0.c1))) AND (((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((vt0.c0)AND(vt0.c1))) AND (((vt0.c1)<=(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE BINARY)OR(((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.c0 COLLATE BINARY)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((((((vt0.c1 IN ()))AND(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR(1.7976931348623157E308)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE BINARY)OR(((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE)) ORDER BY (((((((((vt0.c1 IN ()))AND(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR(1.7976931348623157E308)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE BINARY)OR(((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.c0 COLLATE BINARY)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((((((vt0.c1 IN ()))AND(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR(1.7976931348623157E308)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE BINARY)OR(((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE)) ORDER BY (((((((((vt0.c1 IN ()))AND(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR(1.7976931348623157E308)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0 COLLATE BINARY)OR(((('')) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))OR(vt1.c0 COLLATE NOCASE)) WHERE (((vt1.c0 COLLATE BINARY)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY (((((((((vt0.c1 IN ()))AND(vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE RTRIM)))OR(1.7976931348623157E308)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ABS(DISTINCT vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT vt1.c0) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ABS(DISTINCT vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ABS(DISTINCT vt1.c0) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY ABS(DISTINCT vt1.c0) DESC;
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(DISTINCT '', (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '', (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(DISTINCT '', (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '', (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (TRIM(DISTINCT '', (NOT (rt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((('-1459470918') BETWEEN (((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND ('814048707'))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((('-1459470918') BETWEEN (((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND ('814048707'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE ((('-1459470918') BETWEEN (((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND ('814048707'))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((('-1459470918') BETWEEN (((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND ('814048707'))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE ((('-1459470918') BETWEEN (((((vt0.c1)AND(rt0.c1)))AND(rt0.c1))) AND ('814048707'))) ORDER BY rt0.c0;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) NOT NULL) IN ()) WHERE (ABS(DISTINCT vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) NOT NULL) IN ()) WHERE (ABS(DISTINCT vt1.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((rt0.c0) NOT NULL) IN ()) WHERE (ABS(DISTINCT vt1.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((' >D?G', t0.c0, t0.c1)) AND ((0.968593966229621, t0.c1, t0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((' >D?G', t0.c0, t0.c1)) AND ((0.968593966229621, t0.c1, t0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((' >D?G', t0.c0, t0.c1)) AND ((0.968593966229621, t0.c1, t0.c2))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((' >D?G', t0.c0, t0.c1)) AND ((0.968593966229621, t0.c1, t0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((' >D?G', t0.c0, t0.c1)) AND ((0.968593966229621, t0.c1, t0.c2))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)|(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)|(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)|(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)|(rt0.c0)));
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (0.554270919525869);
SELECT SUM(count) FROM (SELECT ((0.554270919525869) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (0.554270919525869);
SELECT SUM(count) FROM (SELECT ((0.554270919525869) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT ALL * FROM rt0, vt1, t0, vt0 WHERE (0.554270919525869);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT * FROM vt0, t0, vt1 WHERE (CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN (vt1.c0 IN ()) END);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)AND(t0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ()))) AND ((((((((((((((vt0.c1)AND(vt0.c1)))AND(-741948008)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((((((((vt0.c1)OR(vt0.c0)))OR(0.45324476658963075)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ()))) AND ((((((((((((((vt0.c1)AND(vt0.c1)))AND(-741948008)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((((((((vt0.c1)OR(vt0.c0)))OR(0.45324476658963075)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ()))) AND ((((((((((((((vt0.c1)AND(vt0.c1)))AND(-741948008)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((((((((vt0.c1)OR(vt0.c0)))OR(0.45324476658963075)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ()))) AND ((((((((((((((vt0.c1)AND(vt0.c1)))AND(-741948008)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((((((((vt0.c1)OR(vt0.c0)))OR(0.45324476658963075)))AND(vt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL), (vt0.c0 IN ()))) AND ((((((((((((((vt0.c1)AND(vt0.c1)))AND(-741948008)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END, ((((((((vt0.c1)OR(vt0.c0)))OR(0.45324476658963075)))AND(vt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((t0.c1 IN ())) ORDER BY CASE '1913533622' COLLATE RTRIM  WHEN ((t0.c2)%(vt1.c0)) THEN ((rt0.c1) ISNULL) ELSE (vt0.c0 IN (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CASE '1913533622' COLLATE RTRIM  WHEN ((t0.c2)%(vt1.c0)) THEN ((rt0.c1) ISNULL) ELSE (vt0.c0 IN (t0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((t0.c1 IN ())) ORDER BY CASE '1913533622' COLLATE RTRIM  WHEN ((t0.c2)%(vt1.c0)) THEN ((rt0.c1) ISNULL) ELSE (vt0.c0 IN (t0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CASE '1913533622' COLLATE RTRIM  WHEN ((t0.c2)%(vt1.c0)) THEN ((rt0.c1) ISNULL) ELSE (vt0.c0 IN (t0.c0)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ((t0.c1 IN ())) ORDER BY CASE '1913533622' COLLATE RTRIM  WHEN ((t0.c2)%(vt1.c0)) THEN ((rt0.c1) ISNULL) ELSE (vt0.c0 IN (t0.c0)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (NULL) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT)  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN (NULL, ((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN (NULL, ((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN (NULL, ((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)*(vt1.c0)) IN (NULL, ((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)*(vt1.c0)) IN (NULL, ((vt1.c0) NOT NULL))));
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1))<((t0.c0))) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1))<((t0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1))<((t0.c0))) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1))<((t0.c0))) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2))) NOT BETWEEN ((((x'3431'))<=((-1677960961)))) AND (((((((((NULL)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c2))))) ORDER BY ((((vt0.c0)<=(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (1.550591532E9)) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOT BETWEEN ((((x'3431'))<=((-1677960961)))) AND (((((((((NULL)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)<=(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (1.550591532E9)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2))) NOT BETWEEN ((((x'3431'))<=((-1677960961)))) AND (((((((((NULL)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c2))))) ORDER BY ((((vt0.c0)<=(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (1.550591532E9)) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) NOT BETWEEN ((((x'3431'))<=((-1677960961)))) AND (((((((((NULL)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)<=(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (1.550591532E9)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((~ (t0.c2))) NOT BETWEEN ((((x'3431'))<=((-1677960961)))) AND (((((((((NULL)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(t0.c2))))) ORDER BY ((((vt0.c0)<=(t0.c0))) BETWEEN (t0.c1 COLLATE NOCASE) AND (1.550591532E9)) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c2) IS TRUE)) BETWEEN (((((t0.c2)OR(vt0.c0)))AND(rt0.c2))) AND (rt0.c1))) ORDER BY ((SUBSTR(rt0.c0, t0.c2))||(CAST(t0.c2 AS REAL))) ASC  NULLS FIRST, (~ (rt0.c1)) DESC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) BETWEEN (((((t0.c2)OR(vt0.c0)))AND(rt0.c2))) AND (rt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((SUBSTR(rt0.c0, t0.c2))||(CAST(t0.c2 AS REAL))) ASC  NULLS FIRST, (~ (rt0.c1)) DESC, vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c2) IS TRUE)) BETWEEN (((((t0.c2)OR(vt0.c0)))AND(rt0.c2))) AND (rt0.c1))) ORDER BY ((SUBSTR(rt0.c0, t0.c2))||(CAST(t0.c2 AS REAL))) ASC  NULLS FIRST, (~ (rt0.c1)) DESC, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE)) BETWEEN (((((t0.c2)OR(vt0.c0)))AND(rt0.c2))) AND (rt0.c1))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((SUBSTR(rt0.c0, t0.c2))||(CAST(t0.c2 AS REAL))) ASC  NULLS FIRST, (~ (rt0.c1)) DESC, vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((t0.c2) IS TRUE)) BETWEEN (((((t0.c2)OR(vt0.c0)))AND(rt0.c2))) AND (rt0.c1))) ORDER BY ((SUBSTR(rt0.c0, t0.c2))||(CAST(t0.c2 AS REAL))) ASC  NULLS FIRST, (~ (rt0.c1)) DESC, vt0.c0 ASC;
SELECT * FROM t0 WHERE ((NOT ('n(w|p2h' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT ('n(w|p2h' COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ('n(w|p2h' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT ('n(w|p2h' COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ('n(w|p2h' COLLATE RTRIM)));
SELECT ALL * FROM vt1, vt0, t0, rt0 INDEXED BY i58 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((0.1575286418394748) NOT BETWEEN (vt0.c1) AND ('-882578292')))AND(((0.4668740469202597)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 INDEXED BY i58 ORDER BY ((((0.1575286418394748) NOT BETWEEN (vt0.c1) AND ('-882578292')))AND(((0.4668740469202597)|(rt0.c1)))));
SELECT ALL * FROM vt1, vt0, t0, rt0 INDEXED BY i58 WHERE ((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((((0.1575286418394748) NOT BETWEEN (vt0.c1) AND ('-882578292')))AND(((0.4668740469202597)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 INDEXED BY i58 ORDER BY ((((0.1575286418394748) NOT BETWEEN (vt0.c1) AND ('-882578292')))AND(((0.4668740469202597)|(rt0.c1)))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) BETWEEN ((((t0.c2))<((t0.c2)))) AND (((t0.c0)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) BETWEEN ((((t0.c2))<((t0.c2)))) AND (((t0.c0)||(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) BETWEEN ((((t0.c2))<((t0.c2)))) AND (((t0.c0)||(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) BETWEEN ((((t0.c2))<((t0.c2)))) AND (((t0.c0)||(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END) BETWEEN ((((t0.c2))<((t0.c2)))) AND (((t0.c0)||(t0.c1)))));
SELECT * FROM vt1, t0, vt0, rt0 WHERE (((((t0.c2)<<(rt0.c0)))GLOB((- (rt0.c1))))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (vt0.c1) AND (SQLITE_COMPILEOPTION_USED(t0.c2))) ASC, ((CASE rt0.c1  WHEN rt0.c1 THEN x'' END) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<<(rt0.c0)))GLOB((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (vt0.c1) AND (SQLITE_COMPILEOPTION_USED(t0.c2))) ASC, ((CASE rt0.c1  WHEN rt0.c1 THEN x'' END) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC, x'' ASC);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (((((t0.c2)<<(rt0.c0)))GLOB((- (rt0.c1))))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (vt0.c1) AND (SQLITE_COMPILEOPTION_USED(t0.c2))) ASC, ((CASE rt0.c1  WHEN rt0.c1 THEN x'' END) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<<(rt0.c0)))GLOB((- (rt0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (vt0.c1) AND (SQLITE_COMPILEOPTION_USED(t0.c2))) ASC, ((CASE rt0.c1  WHEN rt0.c1 THEN x'' END) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC, x'' ASC);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (((((t0.c2)<<(rt0.c0)))GLOB((- (rt0.c1))))) ORDER BY ((((rt0.c2) NOTNULL)) BETWEEN (vt0.c1) AND (SQLITE_COMPILEOPTION_USED(t0.c2))) ASC, ((CASE rt0.c1  WHEN rt0.c1 THEN x'' END) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC, x'' ASC;
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((t0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) AND (((rt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) AND (((rt0.c1 IN ()))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((t0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) AND (((rt0.c1 IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) AND (((rt0.c1 IN ()))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (x'') ORDER BY (((t0.c1)) NOT BETWEEN ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)) AND (((rt0.c1 IN ()))))  NULLS LAST;
SELECT * FROM t0, rt0, vt1 WHERE (LIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (LIKELY(NULL));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(NULL)) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT * FROM t0, rt0, vt1 WHERE (LIKELY(NULL));
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN DATETIME(rt0.c1, vt1.c0, rt0.c2) THEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((''))) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CASE WHEN DATETIME(rt0.c1, vt1.c0, rt0.c2) THEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((''))) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN DATETIME(rt0.c1, vt1.c0, rt0.c2) THEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((''))) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CASE WHEN DATETIME(rt0.c1, vt1.c0, rt0.c2) THEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((''))) END);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (vt0.c0) ORDER BY CASE WHEN DATETIME(rt0.c1, vt1.c0, rt0.c2) THEN (((t0.c0)) BETWEEN ((rt0.c2)) AND ((''))) END;
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND ('')))) AND ((CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND ('')))) AND ((CAST(rt0.c2 AS NUMERIC)))));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND ('')))) AND ((CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND ('')))) AND ((CAST(rt0.c2 AS NUMERIC)))));
SELECT * FROM rt0 WHERE ((((rt0.c0)) BETWEEN ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((rt0.c1)))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND ('')))) AND ((CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ('') ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ('') ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ('') ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('.g뚥3q' COLLATE BINARY) ORDER BY CAST(t0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('.g뚥3q' COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('.g뚥3q' COLLATE BINARY) ORDER BY CAST(t0.c1 AS INTEGER) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('.g뚥3q' COLLATE BINARY) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST(t0.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('.g뚥3q' COLLATE BINARY) ORDER BY CAST(t0.c1 AS INTEGER) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 NATURAL JOIN t0 WHERE (((((('S(iG1999 1617 3')=(t0.c1))))<=((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('S(iG1999 1617 3')=(t0.c1))))<=((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 NATURAL JOIN t0 WHERE (((((('S(iG1999 1617 3')=(t0.c1))))<=((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((('S(iG1999 1617 3')=(t0.c1))))<=((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM vt1, vt0, rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 NATURAL JOIN t0 WHERE (((((('S(iG1999 1617 3')=(t0.c1))))<=((((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c0)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c0)=(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (((((vt1.c0)>=(vt1.c0))) NOT BETWEEN (((vt1.c0) NOTNULL)) AND (((rt0.c0)=(rt0.c0)))));
SELECT * FROM vt1, rt0 CROSS JOIN t0 ON COALESCE(CAST(0.1575286418394748 AS NUMERIC), ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) FULL OUTER JOIN vt0 ON t0.c2 WHERE (((((((((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))OR(t0.c1)))AND('232408671'))) NOT BETWEEN ((((vt0.c0))>=((rt0.c1)))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))OR(t0.c1)))AND('232408671'))) NOT BETWEEN ((((vt0.c0))>=((rt0.c1)))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON COALESCE(CAST(0.1575286418394748 AS NUMERIC), ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) FULL OUTER JOIN vt0 ON t0.c2);
SELECT * FROM vt1, rt0 CROSS JOIN t0 ON COALESCE(CAST(0.1575286418394748 AS NUMERIC), ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) FULL OUTER JOIN vt0 ON t0.c2 WHERE (((((((((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))OR(t0.c1)))AND('232408671'))) NOT BETWEEN ((((vt0.c0))>=((rt0.c1)))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c0)OR(x'')))OR(rt0.c0)))OR(x'')))OR(rt0.c1)))OR(t0.c1)))AND('232408671'))) NOT BETWEEN ((((vt0.c0))>=((rt0.c1)))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN t0 ON COALESCE(CAST(0.1575286418394748 AS NUMERIC), ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1))) FULL OUTER JOIN vt0 ON t0.c2);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT COUNT(*) FROM vt1, t0, rt0, vt0 WHERE (CAST((~ (t0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c0)))+(CAST(0.2731351143371439 AS INTEGER)))) ORDER BY t0.c2, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))+(CAST(0.2731351143371439 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY t0.c2, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c0)))+(CAST(0.2731351143371439 AS INTEGER)))) ORDER BY t0.c2, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)AND(rt0.c0)))+(CAST(0.2731351143371439 AS INTEGER)))) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY t0.c2, NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((((rt0.c2)AND(rt0.c0)))+(CAST(0.2731351143371439 AS INTEGER)))) ORDER BY t0.c2, NULL  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)/((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)/((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)/((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)/((NOT (rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CASE vt1.c0  WHEN 0.09299119929081878 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE vt1.c0  WHEN 0.09299119929081878 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CASE vt1.c0  WHEN 0.09299119929081878 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CASE vt1.c0  WHEN 0.09299119929081878 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (ABS(DISTINCT CASE vt1.c0  WHEN 0.09299119929081878 THEN vt1.c0 END));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (- ((((rt0.c0, t0.c2, ',clਨB')) BETWEEN ((x'', vt0.c0, rt0.c1)) AND ((t0.c2, rt0.c2, 148182802))))) CROSS JOIN vt1 ON ((((t0.c2) NOT NULL))>(((rt0.c0)%(t0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (- ((((rt0.c0, t0.c2, ',clਨB')) BETWEEN ((x'', vt0.c0, rt0.c1)) AND ((t0.c2, rt0.c2, 148182802))))) CROSS JOIN vt1 ON ((((t0.c2) NOT NULL))>(((rt0.c0)%(t0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (- ((((rt0.c0, t0.c2, ',clਨB')) BETWEEN ((x'', vt0.c0, rt0.c1)) AND ((t0.c2, rt0.c2, 148182802))))) CROSS JOIN vt1 ON ((((t0.c2) NOT NULL))>(((rt0.c0)%(t0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (- ((((rt0.c0, t0.c2, ',clਨB')) BETWEEN ((x'', vt0.c0, rt0.c1)) AND ((t0.c2, rt0.c2, 148182802))))) CROSS JOIN vt1 ON ((((t0.c2) NOT NULL))>(((rt0.c0)%(t0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN t0 ON (- ((((rt0.c0, t0.c2, ',clਨB')) BETWEEN ((x'', vt0.c0, rt0.c1)) AND ((t0.c2, rt0.c2, 148182802))))) CROSS JOIN vt1 ON ((((t0.c2) NOT NULL))>(((rt0.c0)%(t0.c0)))) WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, rt0.c2, rt0.c2))>((rt0.c0, t0.c2, t0.c2)))) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, rt0.c2))>((rt0.c0, t0.c2, t0.c2)))) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, rt0.c2, rt0.c2))>((rt0.c0, t0.c2, t0.c2)))) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, rt0.c2, rt0.c2))>((rt0.c0, t0.c2, t0.c2)))) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, rt0.c2, rt0.c2))>((rt0.c0, t0.c2, t0.c2)))) BETWEEN (vt1.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR(((t0.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR(((t0.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR(((t0.c0)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR(((t0.c0)IS(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(CASE WHEN t0.c0 THEN vt1.c0 END)))OR(((t0.c0)IS(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)LIKE(0.7362529023911765)))>=(((t0.c0) IS TRUE))) WHERE (TRIM(DISTINCT (((t0.c0))!=((vt0.c0))))) ORDER BY LIKELY(DISTINCT ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) DESC, ((t0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((t0.c0))!=((vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)LIKE(0.7362529023911765)))>=(((t0.c0) IS TRUE))) ORDER BY LIKELY(DISTINCT ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) DESC, ((t0.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)LIKE(0.7362529023911765)))>=(((t0.c0) IS TRUE))) WHERE (TRIM(DISTINCT (((t0.c0))!=((vt0.c0))))) ORDER BY LIKELY(DISTINCT ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) DESC, ((t0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((t0.c0))!=((vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)LIKE(0.7362529023911765)))>=(((t0.c0) IS TRUE))) ORDER BY LIKELY(DISTINCT ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) DESC, ((t0.c0) IS TRUE) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)LIKE(0.7362529023911765)))>=(((t0.c0) IS TRUE))) WHERE (TRIM(DISTINCT (((t0.c0))!=((vt0.c0))))) ORDER BY LIKELY(DISTINCT ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))) DESC, ((t0.c0) IS TRUE) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c2))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((NOT (((rt0.c1)AND(vt1.c0))))) ORDER BY CASE WHEN ((rt0.c0)&(NULL)) THEN (t0.c1 IN (vt0.c1)) WHEN ((0.21470943989560287)>(t0.c1)) THEN t0.c2 WHEN NULL THEN ((((t0.c1)OR(vt0.c1)))OR(rt0.c2)) END ASC  NULLS LAST, ((((vt0.c0)>>(NULL))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)AND(vt1.c0))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c2))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c0)&(NULL)) THEN (t0.c1 IN (vt0.c1)) WHEN ((0.21470943989560287)>(t0.c1)) THEN t0.c2 WHEN NULL THEN ((((t0.c1)OR(vt0.c1)))OR(rt0.c2)) END ASC  NULLS LAST, ((((vt0.c0)>>(NULL))) IS TRUE) DESC);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c2))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((NOT (((rt0.c1)AND(vt1.c0))))) ORDER BY CASE WHEN ((rt0.c0)&(NULL)) THEN (t0.c1 IN (vt0.c1)) WHEN ((0.21470943989560287)>(t0.c1)) THEN t0.c2 WHEN NULL THEN ((((t0.c1)OR(vt0.c1)))OR(rt0.c2)) END ASC  NULLS LAST, ((((vt0.c0)>>(NULL))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1)AND(vt1.c0))))) IS TRUE)  as count FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c2))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE NOCASE ORDER BY CASE WHEN ((rt0.c0)&(NULL)) THEN (t0.c1 IN (vt0.c1)) WHEN ((0.21470943989560287)>(t0.c1)) THEN t0.c2 WHEN NULL THEN ((((t0.c1)OR(vt0.c1)))OR(rt0.c2)) END ASC  NULLS LAST, ((((vt0.c0)>>(NULL))) IS TRUE) DESC);
SELECT COUNT(*) FROM rt0, t0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c2))) IS TRUE) RIGHT OUTER JOIN vt1 ON ((vt1.c0) NOT NULL) COLLATE NOCASE WHERE ((NOT (((rt0.c1)AND(vt1.c0))))) ORDER BY CASE WHEN ((rt0.c0)&(NULL)) THEN (t0.c1 IN (vt0.c1)) WHEN ((0.21470943989560287)>(t0.c1)) THEN t0.c2 WHEN NULL THEN ((((t0.c1)OR(vt0.c1)))OR(rt0.c2)) END ASC  NULLS LAST, ((((vt0.c0)>>(NULL))) IS TRUE) DESC;
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY ((((((((((vt0.c0)<(vt0.c1)))AND((t0.c2 IN (t0.c2)))))OR(CASE t0.c1  WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR((x'7037' IN (t0.c2)))))AND(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)<(vt0.c1)))AND((t0.c2 IN (t0.c2)))))OR(CASE t0.c1  WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR((x'7037' IN (t0.c2)))))AND(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY ((((((((((vt0.c0)<(vt0.c1)))AND((t0.c2 IN (t0.c2)))))OR(CASE t0.c1  WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR((x'7037' IN (t0.c2)))))AND(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)<(vt0.c1)))AND((t0.c2 IN (t0.c2)))))OR(CASE t0.c1  WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR((x'7037' IN (t0.c2)))))AND(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (NULL COLLATE BINARY) ORDER BY ((((((((((vt0.c0)<(vt0.c1)))AND((t0.c2 IN (t0.c2)))))OR(CASE t0.c1  WHEN t0.c2 THEN vt0.c1 ELSE vt0.c0 END)))OR((x'7037' IN (t0.c2)))))AND(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(t0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((((t0.c0)AND(t0.c0)))OR(t0.c1))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c1) NOTNULL))));
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c1)OR(vt1.c0))) ISNULL)) ORDER BY ((0xffffffffc6aaee50)<=(((x'')<>(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((0Xffffffffc6aaee50)<=(((x'')!=(t0.c1))))  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c1)OR(vt1.c0))) ISNULL)) ORDER BY ((0xffffffffc6aaee50)<=(((x'')<>(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((0Xffffffffc6aaee50)<=(((x'')!=(t0.c1))))  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((((t0.c1)OR(vt1.c0))) ISNULL)) ORDER BY ((0xffffffffc6aaee50)<=(((x'')<>(t0.c1))))  NULLS FIRST;
SELECT * FROM vt1, t0, vt0, rt0 WHERE ('') ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN ((((t0.c1)AND(0.20271111209312476)))OR(rt0.c1)) THEN '' END DESC, ((rt0.c2)<>((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN ((((t0.c1)AND(0.20271111209312476)))OR(rt0.c1)) THEN '' END DESC, ((rt0.c2)<>((rt0.c1 IN ()))) DESC);
SELECT * FROM vt1, t0, vt0, rt0 WHERE ('') ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN ((((t0.c1)AND(0.20271111209312476)))OR(rt0.c1)) THEN '' END DESC, ((rt0.c2)<>((rt0.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0, rt0 ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN ((((t0.c1)AND(0.20271111209312476)))OR(rt0.c1)) THEN '' END DESC, ((rt0.c2)<>((rt0.c1 IN ()))) DESC);
SELECT * FROM vt1, t0, vt0, rt0 WHERE ('') ORDER BY CASE CAST(rt0.c0 AS BLOB)  WHEN ((((t0.c1)AND(0.20271111209312476)))OR(rt0.c1)) THEN '' END DESC, ((rt0.c2)<>((rt0.c1 IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((((+ (t0.c0)))AND(((vt0.c1) NOT NULL))))AND(((rt0.c1)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((vt0.c1) NOT NULL))))AND(((rt0.c1)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((((+ (t0.c0)))AND(((vt0.c1) NOT NULL))))AND(((rt0.c1)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((vt0.c1) NOT NULL))))AND(((rt0.c1)>(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, vt1, t0, rt0 WHERE ((((((+ (t0.c0)))AND(((vt0.c1) NOT NULL))))AND(((rt0.c1)>(vt1.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((vt0.c1)>=((rt0.c2 IN ())))) ORDER BY LIKELY(DISTINCT ((vt1.c0)LIKE(vt0.c0))) DESC, '1717734921' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY LIKELY(DISTINCT ((vt1.c0)LIKE(vt0.c0))) DESC, '1717734921' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((vt0.c1)>=((rt0.c2 IN ())))) ORDER BY LIKELY(DISTINCT ((vt1.c0)LIKE(vt0.c0))) DESC, '1717734921' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=((rt0.c2 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY LIKELY(DISTINCT ((vt1.c0)LIKE(vt0.c0))) DESC, '1717734921' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((vt0.c1)>=((rt0.c2 IN ())))) ORDER BY LIKELY(DISTINCT ((vt1.c0)LIKE(vt0.c0))) DESC, '1717734921' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) AS BLOB)) ORDER BY ((((288004490)||(vt1.c0)))>(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((288004490)||(vt1.c0)))>(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) AS BLOB)) ORDER BY ((((288004490)||(vt1.c0)))>(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY ((((288004490)||(vt1.c0)))>(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (CAST(((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) AS BLOB)) ORDER BY ((((288004490)||(vt1.c0)))>(((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NULL)%(rt0.c0)))/(rt0.c0 COLLATE RTRIM)) WHERE (((json_remove(1631860302, rt0.c2)) NOT BETWEEN (1.51123169E9) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ORDER BY ((DATETIME(0.2771983566353914, 0.7332446715810739, rt0.c1)) BETWEEN ((((x''))==((vt1.c0)))) AND (CAST(rt0.c1 AS REAL))), ((0.9083321542363723 COLLATE BINARY)<<((('-1600346803')/(rt0.c2)))) ASC, (((NULL IN (rt0.c2))) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(1631860302, rt0.c2)) NOT BETWEEN (1.51123169E9) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((NULL)%(rt0.c0)))/(rt0.c0 COLLATE RTRIM)) ORDER BY ((DATETIME(0.2771983566353914, 0.7332446715810739, rt0.c1)) BETWEEN ((((x''))=((vt1.c0)))) AND (CAST(rt0.c1 AS REAL))), ((0.9083321542363723 COLLATE BINARY)<<((('-1600346803')/(rt0.c2)))) ASC, (((NULL IN (rt0.c2))) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NULL)%(rt0.c0)))/(rt0.c0 COLLATE RTRIM)) WHERE (((json_remove(1631860302, rt0.c2)) NOT BETWEEN (1.51123169E9) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ORDER BY ((DATETIME(0.2771983566353914, 0.7332446715810739, rt0.c1)) BETWEEN ((((x''))==((vt1.c0)))) AND (CAST(rt0.c1 AS REAL))), ((0.9083321542363723 COLLATE BINARY)<<((('-1600346803')/(rt0.c2)))) ASC, (((NULL IN (rt0.c2))) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(1631860302, rt0.c2)) NOT BETWEEN (1.51123169E9) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((NULL)%(rt0.c0)))/(rt0.c0 COLLATE RTRIM)) ORDER BY ((DATETIME(0.2771983566353914, 0.7332446715810739, rt0.c1)) BETWEEN ((((x''))=((vt1.c0)))) AND (CAST(rt0.c1 AS REAL))), ((0.9083321542363723 COLLATE BINARY)<<((('-1600346803')/(rt0.c2)))) ASC, (((NULL IN (rt0.c2))) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NULL)%(rt0.c0)))/(rt0.c0 COLLATE RTRIM)) WHERE (((json_remove(1631860302, rt0.c2)) NOT BETWEEN (1.51123169E9) AND ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) ORDER BY ((DATETIME(0.2771983566353914, 0.7332446715810739, rt0.c1)) BETWEEN ((((x''))==((vt1.c0)))) AND (CAST(rt0.c1 AS REAL))), ((0.9083321542363723 COLLATE BINARY)<<((('-1600346803')/(rt0.c2)))) ASC, (((NULL IN (rt0.c2))) BETWEEN (((vt1.c0)>(vt1.c0))) AND (((((rt0.c2)AND(rt0.c0)))AND(vt1.c0))));
SELECT * FROM vt1, t0, vt0, rt0 WHERE (TRIM(DISTINCT NULLIF(DISTINCT t0.c1, x''))) ORDER BY (CAST(x'' AS NUMERIC) IN ()) ASC, ((((rt0.c0)&(rt0.c0)))%(((((((((vt0.c1)AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULLIF(DISTINCT t0.c1, x''))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY (CAST(x'' AS NUMERIC) IN ()) ASC, ((((rt0.c0)&(rt0.c0)))%(((((((((vt0.c1)AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS FIRST);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (TRIM(DISTINCT NULLIF(DISTINCT t0.c1, x''))) ORDER BY (CAST(x'' AS NUMERIC) IN ()) ASC, ((((rt0.c0)&(rt0.c0)))%(((((((((vt0.c1)AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT NULLIF(DISTINCT t0.c1, x''))) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY (CAST(x'' AS NUMERIC) IN ()) ASC, ((((rt0.c0)&(rt0.c0)))%(((((((((vt0.c1)AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS FIRST);
SELECT * FROM vt1, t0, vt0, rt0 WHERE (TRIM(DISTINCT NULLIF(DISTINCT t0.c1, x''))) ORDER BY (CAST(x'' AS NUMERIC) IN ()) ASC, ((((rt0.c0)&(rt0.c0)))%(((((((((vt0.c1)AND(rt0.c1)))AND(vt1.c0)))OR(vt1.c0)))AND(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0))>((t0.c1))))>=((t0.c1 IN ()))) WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((t0.c0))>((t0.c1))))>=((t0.c1 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0))>((t0.c1))))>=((t0.c1 IN ()))) WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((((t0.c0))>((t0.c1))))>=((t0.c1 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON (((((t0.c0))>((t0.c1))))>=((t0.c1 IN ()))) WHERE (CASE ((t0.c0) ISNULL)  WHEN ((vt0.c0) IS FALSE) THEN ((t0.c1) NOTNULL) ELSE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0 ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (rt0.c0) ORDER BY CAST(((rt0.c1)<=(vt0.c0)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((ABS(t0.c2))) AND ((CASE t0.c0  WHEN '471699028' THEN t0.c0 END)))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((ABS(t0.c2))) AND ((CASE t0.c0  WHEN '471699028' THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((ABS(t0.c2))) AND ((CASE t0.c0  WHEN '471699028' THEN t0.c0 END)))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((ABS(t0.c2))) AND ((CASE t0.c0  WHEN '471699028' THEN t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((ABS(t0.c2))) AND ((CASE t0.c0  WHEN '471699028' THEN t0.c0 END)))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS BLOB)) ORDER BY ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))AND(((rt0.c1) NOT NULL))))AND(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))AND(((rt0.c1) NOT NULL))))AND(rt0.c1)) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS BLOB)) ORDER BY ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))AND(((rt0.c1) NOT NULL))))AND(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)%(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))AND(((rt0.c1) NOT NULL))))AND(rt0.c1)) ASC);
SELECT ALL * FROM rt0, t0 WHERE (CAST(((rt0.c0)%(rt0.c2)) AS BLOB)) ORDER BY ((((((((rt0.c2)AND(t0.c1)))AND(t0.c1)))AND(((rt0.c1) NOT NULL))))AND(rt0.c1)) ASC;
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c1)IS NOT(vt0.c0)))+(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((((vt0.c1)IS NOT(vt0.c0)))+(LOWER(DISTINCT rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c1)IS NOT(vt0.c0)))+(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, rt0, t0, vt0 ORDER BY ((((vt0.c1)IS NOT(vt0.c0)))+(LOWER(DISTINCT rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (t0.c2) ORDER BY ((((vt0.c1)IS NOT(vt0.c0)))+(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c0)), (('1717734921') IS FALSE))) AND ((987886631, (- (rt0.c2)), t0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c0)), (('1717734921') IS FALSE))) AND ((987886631, (- (rt0.c2)), t0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c0)), (('1717734921') IS FALSE))) AND ((987886631, (- (rt0.c2)), t0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c0)), (('1717734921') IS FALSE))) AND ((987886631, (- (rt0.c2)), t0.c1)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c0)), (('1717734921') IS FALSE))) AND ((987886631, (- (rt0.c2)), t0.c1))));
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))IS NOT((0.9083321542363723 IN (vt0.c0))))) ORDER BY '-961876400' ASC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))IS NOT((0.9083321542363723 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '-961876400' ASC, ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))IS NOT((0.9083321542363723 IN (vt0.c0))))) ORDER BY '-961876400' ASC, ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))IS NOT((0.9083321542363723 IN (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY '-961876400' ASC, ''  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))IS NOT((0.9083321542363723 IN (vt0.c0))))) ORDER BY '-961876400' ASC, ''  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((rt0.c2) NOT NULL)) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)<(vt0.c0)))>>((+ (vt0.c0)))) FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS BLOB))AND(((vt0.c1)IS NOT(rt0.c2)))))AND(CAST(t0.c1 AS BLOB))))OR(UPPER(DISTINCT vt0.c0))))AND(LOWER(DISTINCT t0.c2))) WHERE ((((((t0.c2)*(vt0.c0)), 0.05979842192778706, (((t0.c0)) BETWEEN ((0.8869108546330611)) AND ((t0.c1)))))==((rt0.c2 COLLATE NOCASE, 0.4542342303273994, CASE WHEN rt0.c1 THEN t0.c0 END)))) ORDER BY CASE WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c0)<=(t0.c1)) ELSE ((rt0.c2)!=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)*(vt0.c0)), 0.05979842192778706, (((t0.c0)) BETWEEN ((0.8869108546330611)) AND ((t0.c1)))))==((rt0.c2 COLLATE NOCASE, 0.4542342303273994, CASE WHEN rt0.c1 THEN t0.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)<(vt0.c0)))>>((+ (vt0.c0)))) FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS BLOB))AND(((vt0.c1)IS NOT(rt0.c2)))))AND(CAST(t0.c1 AS BLOB))))OR(UPPER(DISTINCT vt0.c0))))AND(LOWER(DISTINCT t0.c2))) ORDER BY CASE WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c0)<=(t0.c1)) ELSE ((rt0.c2)<>(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)<(vt0.c0)))>>((+ (vt0.c0)))) FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS BLOB))AND(((vt0.c1)IS NOT(rt0.c2)))))AND(CAST(t0.c1 AS BLOB))))OR(UPPER(DISTINCT vt0.c0))))AND(LOWER(DISTINCT t0.c2))) WHERE ((((((t0.c2)*(vt0.c0)), 0.05979842192778706, (((t0.c0)) BETWEEN ((0.8869108546330611)) AND ((t0.c1)))))==((rt0.c2 COLLATE NOCASE, 0.4542342303273994, CASE WHEN rt0.c1 THEN t0.c0 END)))) ORDER BY CASE WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c0)<=(t0.c1)) ELSE ((rt0.c2)!=(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)*(vt0.c0)), 0.05979842192778706, (((t0.c0)) BETWEEN ((0.8869108546330611)) AND ((t0.c1)))))==((rt0.c2 COLLATE NOCASE, 0.4542342303273994, CASE WHEN rt0.c1 THEN t0.c0 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((rt0.c1)<(vt0.c0)))>>((+ (vt0.c0)))) FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c1 AS BLOB))AND(((vt0.c1)IS NOT(rt0.c2)))))AND(CAST(t0.c1 AS BLOB))))OR(UPPER(DISTINCT vt0.c0))))AND(LOWER(DISTINCT t0.c2))) ORDER BY CASE WHEN ((t0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN ((rt0.c0)<=(t0.c1)) ELSE ((rt0.c2)<>(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('34626568')))))OR((+ (t0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) NOT BETWEEN ((NULL IN ())) AND (((((t0.c1)AND(rt0.c2)))AND(vt1.c0)))), ((((rt0.c2)LIKE(vt1.c0))) BETWEEN (rt0.c1) AND ((- (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('34626568')))))OR((+ (t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) NOT BETWEEN ((NULL IN ())) AND (((((t0.c1)AND(rt0.c2)))AND(vt1.c0)))), ((((rt0.c2)LIKE(vt1.c0))) BETWEEN (rt0.c1) AND ((- (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('34626568')))))OR((+ (t0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) NOT BETWEEN ((NULL IN ())) AND (((((t0.c1)AND(rt0.c2)))AND(vt1.c0)))), ((((rt0.c2)LIKE(vt1.c0))) BETWEEN (rt0.c1) AND ((- (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('34626568')))))OR((+ (t0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) NOT BETWEEN ((NULL IN ())) AND (((((t0.c1)AND(rt0.c2)))AND(vt1.c0)))), ((((rt0.c2)LIKE(vt1.c0))) BETWEEN (rt0.c1) AND ((- (t0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, t0 WHERE ((((((rt0.c1 IN ()))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND ('34626568')))))OR((+ (t0.c0))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t0.c2) AND (vt1.c0))) NOT BETWEEN ((NULL IN ())) AND (((((t0.c1)AND(rt0.c2)))AND(vt1.c0)))), ((((rt0.c2)LIKE(vt1.c0))) BETWEEN (rt0.c1) AND ((- (t0.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c1)))AND(CASE x'45bc'  WHEN t0.c1 THEN '0.5815405183064968' WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END)))OR((t0.c0 IN (t0.c1, x'4ab4')))) WHERE (PRINTF((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((+ (t0.c0)))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c1)))AND(CASE x'45bc'  WHEN t0.c1 THEN '0.5815405183064968' WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END)))OR((t0.c0 IN (t0.c1, x'4ab4')))));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c1)))AND(CASE x'45bc'  WHEN t0.c1 THEN '0.5815405183064968' WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END)))OR((t0.c0 IN (t0.c1, x'4ab4')))) WHERE (PRINTF((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((+ (t0.c0)))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt0 ON ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c1)))AND(CASE x'45bc'  WHEN t0.c1 THEN '0.5815405183064968' WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END)))OR((t0.c0 IN (t0.c1, x'4ab4')))));
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN rt0 ON ((((((((((((t0.c0)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c1)))AND(CASE x'45bc'  WHEN t0.c1 THEN '0.5815405183064968' WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN vt1.c0 THEN t0.c0 WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END)))OR((t0.c0 IN (t0.c1, x'4ab4')))) WHERE (PRINTF((+ (t0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((NOT (((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0xffffffff817d6067 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0xffffffff817d6067 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0xffffffff817d6067 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0xffffffff817d6067 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN 0xffffffff817d6067 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) ISNULL));
SELECT ALL * FROM vt1, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (CAST(t0.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((t0.c1)==(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY json_type(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)=(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json_type(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt1.c0 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((t0.c1)==(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY json_type(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1)=(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE CAST(t0.c2 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY json_type(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt1.c0 END) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN ((t0.c1)==(t0.c1)) THEN ((vt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)) ELSE CAST(t0.c2 AS NUMERIC) END) ORDER BY json_type(CASE vt0.c0  WHEN x'' THEN vt0.c1 ELSE vt1.c0 END) ASC  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.c0) ORDER BY (((vt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((rt0.c1)>=(t0.c0)) THEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END END CROSS JOIN rt0 ON CASE WHEN t0.c2 COLLATE BINARY THEN ABS(t0.c1) END WHERE (((t0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((rt0.c1)>=(t0.c0)) THEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END END CROSS JOIN rt0 ON CASE WHEN t0.c2 COLLATE BINARY THEN ABS(t0.c1) END);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((rt0.c1)>=(t0.c0)) THEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END END CROSS JOIN rt0 ON CASE WHEN t0.c2 COLLATE BINARY THEN ABS(t0.c1) END WHERE (((t0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((rt0.c1)>=(t0.c0)) THEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END END CROSS JOIN rt0 ON CASE WHEN t0.c2 COLLATE BINARY THEN ABS(t0.c1) END);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((rt0.c1)>=(t0.c0)) THEN CASE WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END END CROSS JOIN rt0 ON CASE WHEN t0.c2 COLLATE BINARY THEN ABS(t0.c1) END WHERE (((t0.c0) NOT NULL) COLLATE NOCASE);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c2))>=((t0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2))>=((t0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c2))>=((t0.c1))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c2))>=((t0.c1))) AS BLOB)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST((((t0.c2))>=((t0.c1))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (ABS(DISTINCT (('j}梡y') NOT NULL))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT), ((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()) ASC, (+ (0.6804929631203346)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (('j}梡y') NOT NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT), ((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()) ASC, (+ (0.6804929631203346)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (ABS(DISTINCT (('j}梡y') NOT NULL))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT), ((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()) ASC, (+ (0.6804929631203346)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (('j}梡y') NOT NULL))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT), ((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()) ASC, (+ (0.6804929631203346)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (ABS(DISTINCT (('j}梡y') NOT NULL))) ORDER BY CAST(rt0.c2 COLLATE BINARY AS TEXT), ((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c0, NULL)) AND ((rt0.c2, rt0.c2, rt0.c1))) IN ()) ASC, (+ (0.6804929631203346)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)%(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)%(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)%(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)%(vt0.c0)))OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c1  NULLS FIRST;
SELECT * FROM t0, vt1, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT * FROM t0, vt1, rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0);
SELECT * FROM t0, vt1, rt0, vt0 WHERE (x'');
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) NOTNULL))) AND ((vt1.c0))));
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((rt0.c1)>(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((rt0.c1)>(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, rt0, vt0);
SELECT ALL * FROM vt1, t0, rt0, vt0 WHERE (((((rt0.c1)>(rt0.c1))) IS FALSE));
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (CAST(0.9048591930725594 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (CAST(0.9048591930725594 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (CAST(0.9048591930725594 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (CAST(0.9048591930725594 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c1) NOT BETWEEN (CAST(0.9048591930725594 AS BLOB)) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (((t0.c1)IS NOT(t0.c0))) AND (COALESCE(DISTINCT t0.c0, x'abe7', t0.c0, t0.c2, vt0.c0, t0.c2)))) ORDER BY (((vt0.c0 IN ()))>((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<=(t0.c2))) BETWEEN (((t0.c1)IS NOT(t0.c0))) AND (COALESCE(DISTINCT t0.c0, x'abe7', t0.c0, t0.c2, vt0.c0, t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))>((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (((t0.c1)IS NOT(t0.c0))) AND (COALESCE(DISTINCT t0.c0, x'abe7', t0.c0, t0.c2, vt0.c0, t0.c2)))) ORDER BY (((vt0.c0 IN ()))>((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<=(t0.c2))) BETWEEN (((t0.c1)IS NOT(t0.c0))) AND (COALESCE(DISTINCT t0.c0, x'abe7', t0.c0, t0.c2, vt0.c0, t0.c2)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ()))>((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (((t0.c1)IS NOT(t0.c0))) AND (COALESCE(DISTINCT t0.c0, x'abe7', t0.c0, t0.c2, vt0.c0, t0.c2)))) ORDER BY (((vt0.c0 IN ()))>((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2)))))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)&(vt0.c1))) AND (NULL))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)&(vt0.c1))) AND (9.15263527E8));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)&(vt0.c1))) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)&(vt0.c1))) AND (9.15263527E8)));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)&(vt0.c1))) AND (NULL))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)&(vt0.c1))) AND (9.15263527E8));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)&(vt0.c1))) AND (NULL))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)&(vt0.c1))) AND (9.15263527E8)));
SELECT * FROM vt0, vt1 WHERE (((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c0)&(vt0.c1))) AND (NULL))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1)&(vt0.c1))) AND (9.15263527E8));
SELECT ALL * FROM vt0, vt1 WHERE (CAST((('j}梡y') BETWEEN ('0.9048591930725594') AND (vt1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((((NULL)OR(vt0.c1)))OR(vt1.c0))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('j}梡y') BETWEEN ('0.9048591930725594') AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((((NULL)OR(vt0.c1)))OR(vt1.c0))) AND (vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((('j}梡y') BETWEEN ('0.9048591930725594') AND (vt1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((((NULL)OR(vt0.c1)))OR(vt1.c0))) AND (vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('j}梡y') BETWEEN ('0.9048591930725594') AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((((NULL)OR(vt0.c1)))OR(vt1.c0))) AND (vt1.c0))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST((('j}梡y') BETWEEN ('0.9048591930725594') AND (vt1.c0)) AS NUMERIC)) ORDER BY ((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((((NULL)OR(vt0.c1)))OR(vt1.c0))) AND (vt1.c0))  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN 0.3309515324929154 THEN 0Xffffffffe7e84cc1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN 0.3309515324929154 THEN 0xffffffffe7e84cc1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN 0.3309515324929154 THEN 0Xffffffffe7e84cc1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT((rt0.c2 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN 0.3309515324929154 THEN 0xffffffffe7e84cc1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT((rt0.c2 IN (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN 0.3309515324929154 THEN 0Xffffffffe7e84cc1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)IS NOT((rt0.c2 IN (rt0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))<=((vt0.c1))))&(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1))))&(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))<=((vt0.c1))))&(LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1))))&(LOWER(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((((vt0.c1))<=((vt0.c1))))&(LOWER(vt0.c0))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff8a9ca570))))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0, t0.c1, t0.c2, t0.c1, vt0.c0))<>((t0.c2, t0.c1, t0.c1, t0.c2, t0.c2)))))) ORDER BY ((('0.7362529023911765')) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, 25657243))) AND ((t0.c0))) DESC, ((((((((vt0.c1 COLLATE RTRIM)AND(((0.3924020653990886) BETWEEN (t0.c0) AND (t0.c0)))))AND(0.968593966229621)))OR(x'e8cff34a411c')))OR(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0, t0.c1, t0.c2, t0.c1, vt0.c0))<>((t0.c2, t0.c1, t0.c1, t0.c2, t0.c2)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff8a9ca570))))) ORDER BY ((('0.7362529023911765')) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, 25657243))) AND ((t0.c0))) DESC, ((((((((vt0.c1 COLLATE RTRIM)AND(((0.3924020653990886) BETWEEN (t0.c0) AND (t0.c0)))))AND(0.968593966229621)))OR(x'e8cff34a411c')))OR(vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff8a9ca570))))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0, t0.c1, t0.c2, t0.c1, vt0.c0))<>((t0.c2, t0.c1, t0.c1, t0.c2, t0.c2)))))) ORDER BY ((('0.7362529023911765')) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, 25657243))) AND ((t0.c0))) DESC, ((((((((vt0.c1 COLLATE RTRIM)AND(((0.3924020653990886) BETWEEN (t0.c0) AND (t0.c0)))))AND(0.968593966229621)))OR(x'e8cff34a411c')))OR(vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0, t0.c1, t0.c2, t0.c1, vt0.c0))<>((t0.c2, t0.c1, t0.c1, t0.c2, t0.c2)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff8a9ca570))))) ORDER BY ((('0.7362529023911765')) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, 25657243))) AND ((t0.c0))) DESC, ((((((((vt0.c1 COLLATE RTRIM)AND(((0.3924020653990886) BETWEEN (t0.c0) AND (t0.c0)))))AND(0.968593966229621)))OR(x'e8cff34a411c')))OR(vt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c0)) NOT BETWEEN ((t0.c2 COLLATE RTRIM)) AND ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0Xffffffff8a9ca570))))) WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)||((((vt0.c0, t0.c1, t0.c2, t0.c1, vt0.c0))<>((t0.c2, t0.c1, t0.c1, t0.c2, t0.c2)))))) ORDER BY ((('0.7362529023911765')) NOT BETWEEN ((IFNULL(DISTINCT vt0.c1, 25657243))) AND ((t0.c0))) DESC, ((((((((vt0.c1 COLLATE RTRIM)AND(((0.3924020653990886) BETWEEN (t0.c0) AND (t0.c0)))))AND(0.968593966229621)))OR(x'e8cff34a411c')))OR(vt0.c1 COLLATE NOCASE));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((- (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c0 COLLATE RTRIM)) WHERE (TIME((rt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND ('')), (- (rt0.c2)))) ORDER BY (((rt0.c0)) BETWEEN ((('-1714080930' IN ()))) AND ((UNLIKELY(DISTINCT vt0.c0)))), (((((('㶺''6YEU	\N')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME((rt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND ('')), (- (rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((- (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c0)) BETWEEN ((('-1714080930' IN ()))) AND ((UNLIKELY(DISTINCT vt0.c0)))), (((((('㶺''6YEU	\N')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((- (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c0 COLLATE RTRIM)) WHERE (TIME((rt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND ('')), (- (rt0.c2)))) ORDER BY (((rt0.c0)) BETWEEN ((('-1714080930' IN ()))) AND ((UNLIKELY(DISTINCT vt0.c0)))), (((((('㶺''6YEU	\N')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME((rt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND ('')), (- (rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((- (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c0 COLLATE RTRIM)) ORDER BY (((rt0.c0)) BETWEEN ((('-1714080930' IN ()))) AND ((UNLIKELY(DISTINCT vt0.c0)))), (((((('㶺''6YEU	\N')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (((((- (rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(rt0.c0 COLLATE RTRIM)) WHERE (TIME((rt0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND ('')), (- (rt0.c2)))) ORDER BY (((rt0.c0)) BETWEEN ((('-1714080930' IN ()))) AND ((UNLIKELY(DISTINCT vt0.c0)))), (((((('㶺''6YEU	\N')AND(rt0.c0)))AND(vt0.c0))) BETWEEN (CASE vt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS TEXT))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((NULL)OR((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TRIM((t0.c2 IN ())) DESC, (vt0.c0 COLLATE NOCASE IN ((+ (t0.c2)), ((vt1.c0)IS(vt0.c1)))) ASC  NULLS LAST, CASE WHEN TRIM(DISTINCT '0.5038466252681796') THEN ((vt0.c1)*(t0.c0)) ELSE ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) END  NULLS LAST, ((UPPER(DISTINCT '{T\nd}r')) BETWEEN ((vt0.c1 IN (t0.c1))) AND (((x'')<>(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY TRIM((t0.c2 IN ())) DESC, (vt0.c0 COLLATE NOCASE IN ((+ (t0.c2)), ((vt1.c0)IS(vt0.c1)))) ASC  NULLS LAST, CASE WHEN TRIM(DISTINCT '0.5038466252681796') THEN ((vt0.c1)*(t0.c0)) ELSE ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) END  NULLS LAST, ((UPPER(DISTINCT '{T\nd}r')) BETWEEN ((vt0.c1 IN (t0.c1))) AND (((x'')!=(t0.c0)))) ASC);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((NULL)OR((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TRIM((t0.c2 IN ())) DESC, (vt0.c0 COLLATE NOCASE IN ((+ (t0.c2)), ((vt1.c0)IS(vt0.c1)))) ASC  NULLS LAST, CASE WHEN TRIM(DISTINCT '0.5038466252681796') THEN ((vt0.c1)*(t0.c0)) ELSE ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) END  NULLS LAST, ((UPPER(DISTINCT '{T\nd}r')) BETWEEN ((vt0.c1 IN (t0.c1))) AND (((x'')<>(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)OR((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY TRIM((t0.c2 IN ())) DESC, (vt0.c0 COLLATE NOCASE IN ((+ (t0.c2)), ((vt1.c0)IS(vt0.c1)))) ASC  NULLS LAST, CASE WHEN TRIM(DISTINCT '0.5038466252681796') THEN ((vt0.c1)*(t0.c0)) ELSE ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) END  NULLS LAST, ((UPPER(DISTINCT '{T\nd}r')) BETWEEN ((vt0.c1 IN (t0.c1))) AND (((x'')!=(t0.c0)))) ASC);
SELECT COUNT(*) FROM vt1, t0 NATURAL JOIN vt0 WHERE (((((NULL)OR((((vt0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))))))OR(CAST(vt0.c1 AS INTEGER)))) ORDER BY TRIM((t0.c2 IN ())) DESC, (vt0.c0 COLLATE NOCASE IN ((+ (t0.c2)), ((vt1.c0)IS(vt0.c1)))) ASC  NULLS LAST, CASE WHEN TRIM(DISTINCT '0.5038466252681796') THEN ((vt0.c1)*(t0.c0)) ELSE ((t0.c2) BETWEEN (t0.c2) AND (t0.c0)) END  NULLS LAST, ((UPPER(DISTINCT '{T\nd}r')) BETWEEN ((vt0.c1 IN (t0.c1))) AND (((x'')<>(t0.c0)))) ASC;
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)AND(((0.909045569203499)IS(vt0.c1))))) ORDER BY (NULL IN ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(((0.909045569203499)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NULL IN ((t0.c0 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)AND(((0.909045569203499)IS(vt0.c1))))) ORDER BY (NULL IN ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)AND(((0.909045569203499)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (NULL IN ((t0.c0 IN ()))));
SELECT ALL * FROM vt0, t0 WHERE (((vt0.c0)AND(((0.909045569203499)IS(vt0.c1))))) ORDER BY (NULL IN ((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c1)))-(COALESCE(t0.c2, t0.c0)))) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((0xffffffffdfcbef5c) NOT BETWEEN (t0.c2) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))OR(t0.c1)))-(COALESCE(t0.c2, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE)AND(((0xffffffffdfcbef5c) NOT BETWEEN (t0.c2) AND (t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c1)))-(COALESCE(t0.c2, t0.c0)))) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((0xffffffffdfcbef5c) NOT BETWEEN (t0.c2) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)OR(t0.c2)))OR(t0.c1)))-(COALESCE(t0.c2, t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE)AND(((0xffffffffdfcbef5c) NOT BETWEEN (t0.c2) AND (t0.c1)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)OR(t0.c2)))OR(t0.c1)))-(COALESCE(t0.c2, t0.c0)))) ORDER BY ((t0.c2 COLLATE NOCASE)AND(((0xffffffffdfcbef5c) NOT BETWEEN (t0.c2) AND (t0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON TOTAL_CHANGES() RIGHT OUTER JOIN rt0 ON vt0.c1 WHERE (LTRIM(t0.c0 COLLATE BINARY)) ORDER BY (+ ((-1460703756 IN (rt0.c1, rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON TOTAL_CHANGES() RIGHT OUTER JOIN rt0 ON vt0.c1 ORDER BY (+ ((-1460703756 IN (rt0.c1, rt0.c1)))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON TOTAL_CHANGES() RIGHT OUTER JOIN rt0 ON vt0.c1 WHERE (LTRIM(t0.c0 COLLATE BINARY)) ORDER BY (+ ((-1460703756 IN (rt0.c1, rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(t0.c0 COLLATE BINARY)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON TOTAL_CHANGES() RIGHT OUTER JOIN rt0 ON vt0.c1 ORDER BY (+ ((-1460703756 IN (rt0.c1, rt0.c1)))) DESC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON TOTAL_CHANGES() RIGHT OUTER JOIN rt0 ON vt0.c1 WHERE (LTRIM(t0.c0 COLLATE BINARY)) ORDER BY (+ ((-1460703756 IN (rt0.c1, rt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((t0.c0, t0.c0, rt0.c1))) COLLATE BINARY) ORDER BY STRFTIME(0.6804929631203346, CASE WHEN vt1.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END, ((0Xffffffffa053ba25)<<(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((t0.c0, t0.c0, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY STRFTIME(0.6804929631203346, CASE WHEN vt1.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END, ((0Xffffffffa053ba25)<<(t0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((t0.c0, t0.c0, rt0.c1))) COLLATE BINARY) ORDER BY STRFTIME(0.6804929631203346, CASE WHEN vt1.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END, ((0Xffffffffa053ba25)<<(t0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((t0.c0, t0.c0, rt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY STRFTIME(0.6804929631203346, CASE WHEN vt1.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END, ((0Xffffffffa053ba25)<<(t0.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE ((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((t0.c2, vt0.c1, vt0.c0)) AND ((t0.c0, t0.c0, rt0.c1))) COLLATE BINARY) ORDER BY STRFTIME(0.6804929631203346, CASE WHEN vt1.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c1 WHEN vt0.c0 THEN t0.c2 ELSE vt0.c1 END, ((0Xffffffffa053ba25)<<(t0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)>=(rt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)>=(rt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>=(rt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)>=(rt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT * FROM rt0, t0, vt1 WHERE (((TYPEOF('㶺''6yeu	\n'))>=((- (rt0.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST, (((NOT (0.3924020653990886)))IS NOT(((rt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF('㶺''6yeu	\n'))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST, (((NOT (0.3924020653990886)))IS NOT(((rt0.c1) IS FALSE))) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((TYPEOF('㶺''6yeu	\n'))>=((- (rt0.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST, (((NOT (0.3924020653990886)))IS NOT(((rt0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((TYPEOF('㶺''6yeu	\n'))>=((- (rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST, (((NOT (0.3924020653990886)))IS NOT(((rt0.c1) IS FALSE))) ASC);
SELECT * FROM rt0, t0, vt1 WHERE (((TYPEOF('㶺''6yeu	\n'))>=((- (rt0.c0))))) ORDER BY (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE RTRIM DESC  NULLS FIRST, (((NOT (0.3924020653990886)))IS NOT(((rt0.c1) IS FALSE))) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE NOCASE COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (t0.c2)) COLLATE NOCASE) ORDER BY CASE '1563199722'  WHEN rt0.c2 THEN ((('-1300358358')) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN DATETIME(rt0.c0, rt0.c2, rt0.c2) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE x'' END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (- ('1631860302')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE '1563199722'  WHEN rt0.c2 THEN ((('-1300358358')) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN DATETIME(rt0.c0, rt0.c2, rt0.c2) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE x'' END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (- ('1631860302')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (t0.c2)) COLLATE NOCASE) ORDER BY CASE '1563199722'  WHEN rt0.c2 THEN ((('-1300358358')) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN DATETIME(rt0.c0, rt0.c2, rt0.c2) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE x'' END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (- ('1631860302')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE '1563199722'  WHEN rt0.c2 THEN ((('-1300358358')) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN DATETIME(rt0.c0, rt0.c2, rt0.c2) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE x'' END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (- ('1631860302')) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((- (t0.c2)) COLLATE NOCASE) ORDER BY CASE '1563199722'  WHEN rt0.c2 THEN ((('-1300358358')) BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN DATETIME(rt0.c0, rt0.c2, rt0.c2) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) THEN ((t0.c0) NOT NULL) WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE x'' END THEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN CAST(rt0.c1 AS NUMERIC) THEN (- ('1631860302')) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LIKELY(DISTINCT NULL) IN (((((1972754340)AND(t0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT NULL) IN (((((1972754340)AND(t0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LIKELY(DISTINCT NULL) IN (((((1972754340)AND(t0.c2)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(DISTINCT NULL) IN (((((1972754340)AND(t0.c2)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LIKELY(DISTINCT NULL) IN (((((1972754340)AND(t0.c2)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((0x14d3f297)) AND (((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((0x14d3f297)) AND (((t0.c2 IN ()))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((0x14d3f297)) AND (((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((0x14d3f297)) AND (((t0.c2 IN ()))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((0x14d3f297)) AND (((t0.c2 IN ())))));
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT ALL * FROM rt0, t0 WHERE (COALESCE(DISTINCT CAST(rt0.c1 AS REAL), CASE WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c1 END)OR(x'')))AND(CAST(t0.c0 AS NUMERIC))) WHERE ((('0.3309515324929154') NOT BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c0)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((('0.3309515324929154') NOT BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c1 END)OR(x'')))AND(CAST(t0.c0 AS NUMERIC))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c1 END)OR(x'')))AND(CAST(t0.c0 AS NUMERIC))) WHERE ((('0.3309515324929154') NOT BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c0)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((('0.3309515324929154') NOT BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c0)>>(t0.c2))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c1 END)OR(x'')))AND(CAST(t0.c0 AS NUMERIC))));
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((CASE t0.c0  WHEN vt1.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN t0.c1 END)OR(x'')))AND(CAST(t0.c0 AS NUMERIC))) WHERE ((('0.3309515324929154') NOT BETWEEN (((t0.c2) IS FALSE)) AND (((vt0.c0)>>(t0.c2)))));
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c1)AND(rt0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0, vt0, rt0);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (((((((((((((rt0.c1)AND(rt0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c1)))AND(rt0.c0)))OR(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c1)<=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c1)<=(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<=(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CAST(((vt0.c1)<=(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN t0.c1 END))) ORDER BY LTRIM(t0.c0 COLLATE BINARY, LIKE('1256266994', t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) ORDER BY LTRIM(t0.c0 COLLATE BINARY, LIKE('1256266994', t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN t0.c1 END))) ORDER BY LTRIM(t0.c0 COLLATE BINARY, LIKE('1256266994', t0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) ORDER BY LTRIM(t0.c0 COLLATE BINARY, LIKE('1256266994', t0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 RIGHT OUTER JOIN t0 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(CAST(vt1.c0 AS TEXT))))OR(CASE WHEN vt0.c1 THEN t0.c1 END))) ORDER BY LTRIM(t0.c0 COLLATE BINARY, LIKE('1256266994', t0.c2)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)>=(t0.c1)))<(CAST(t0.c1 AS BLOB))), vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((rt0.c2)>=(t0.c1)))<(CAST(t0.c1 AS BLOB))), vt0.c1);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)>=(t0.c1)))<(CAST(t0.c1 AS BLOB))), vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((((rt0.c2)>=(t0.c1)))<(CAST(t0.c1 AS BLOB))), vt0.c1);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (x'') ORDER BY ((((rt0.c2)>=(t0.c1)))<(CAST(t0.c1 AS BLOB))), vt0.c1;
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) THEN ('ar' IN (t0.c1, rt0.c2)) ELSE ((vt1.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) THEN ('ar' IN (t0.c1, rt0.c2)) ELSE ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) THEN ('ar' IN (t0.c1, rt0.c2)) ELSE ((vt1.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) THEN ('ar' IN (t0.c1, rt0.c2)) ELSE ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, rt0, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE (CASE CAST(rt0.c1 AS NUMERIC)  WHEN ((((rt0.c2)AND(rt0.c0)))OR(t0.c2)) THEN ('ar' IN (t0.c1, rt0.c2)) ELSE ((vt1.c0) IS FALSE) END);
SELECT * FROM t0, vt1, rt0 WHERE ((t0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((t0.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT * FROM t0, vt1, rt0 WHERE ((t0.c1 COLLATE RTRIM IN ()));
SELECT ALL * FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c1 THEN NULL END  WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) END CROSS JOIN rt0 ON CAST((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS INTEGER) WHERE (CAST(x'' AS REAL)) ORDER BY ((t0.c0)*((vt0.c0 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c1 THEN NULL END  WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) END CROSS JOIN rt0 ON CAST((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS INTEGER) ORDER BY ((t0.c0)*((vt0.c0 IN (rt0.c0)))) DESC);
SELECT ALL * FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c1 THEN NULL END  WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) END CROSS JOIN rt0 ON CAST((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS INTEGER) WHERE (CAST(x'' AS REAL)) ORDER BY ((t0.c0)*((vt0.c0 IN (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS REAL)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c1 THEN NULL END  WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) END CROSS JOIN rt0 ON CAST((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS INTEGER) ORDER BY ((t0.c0)*((vt0.c0 IN (rt0.c0)))) DESC);
SELECT ALL * FROM vt0, vt1 NOT INDEXED LEFT OUTER JOIN t0 ON CASE CASE WHEN t0.c1 THEN vt1.c0 WHEN vt0.c1 THEN t0.c1 WHEN vt0.c1 THEN NULL END  WHEN (rt0.c1 IN ()) THEN (rt0.c2 IN ()) END CROSS JOIN rt0 ON CAST((((t0.c1)) BETWEEN ((vt0.c1)) AND ((t0.c2))) AS INTEGER) WHERE (CAST(x'' AS REAL)) ORDER BY ((t0.c0)*((vt0.c0 IN (rt0.c0)))) DESC;
SELECT ALL * FROM vt1 CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE ((t0.c0)*(t0.c0)) END WHERE (CASE (((vt1.c0))!=((t0.c0)))  WHEN (t0.c0 IN ()) THEN json_array_length(t0.c1) ELSE CAST(t0.c1 AS TEXT) END) ORDER BY CAST(((0.340198850848911)IS(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0))<>((t0.c0)))  WHEN (t0.c0 IN ()) THEN json_array_length(t0.c1) ELSE CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE ((t0.c0)*(t0.c0)) END ORDER BY CAST(((0.340198850848911)IS(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE ((t0.c0)*(t0.c0)) END WHERE (CASE (((vt1.c0))!=((t0.c0)))  WHEN (t0.c0 IN ()) THEN json_array_length(t0.c1) ELSE CAST(t0.c1 AS TEXT) END) ORDER BY CAST(((0.340198850848911)IS(vt1.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0))<>((t0.c0)))  WHEN (t0.c0 IN ()) THEN json_array_length(t0.c1) ELSE CAST(t0.c1 AS TEXT) END) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE ((t0.c0)*(t0.c0)) END ORDER BY CAST(((0.340198850848911)IS(vt1.c0)) AS INTEGER));
SELECT ALL * FROM vt1 CROSS JOIN t0 ON CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS BLOB) ELSE ((t0.c0)*(t0.c0)) END WHERE (CASE (((vt1.c0))!=((t0.c0)))  WHEN (t0.c0 IN ()) THEN json_array_length(t0.c1) ELSE CAST(t0.c1 AS TEXT) END) ORDER BY CAST(((0.340198850848911)IS(vt1.c0)) AS INTEGER);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON 0X7b8c4e12 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON 0X7b8c4e12);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON 0X7b8c4e12 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c0 THEN t0.c0 END AS BLOB)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON 0X7b8c4e12);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON 0X7b8c4e12 WHERE (CAST(CASE WHEN t0.c0 THEN t0.c0 END AS BLOB));
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)<(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)<(t0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(t0.c1))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt0);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (((((vt0.c0)<(t0.c1))) NOT NULL));
SELECT * FROM vt0 WHERE (CASE ((((vt0.c1)AND(-243196666)))OR(vt0.c1))  WHEN ((1550591532) NOT NULL) THEN ((((vt0.c0)AND('461583016')))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)AND(-243196666)))OR(vt0.c1))  WHEN ((1550591532) NOT NULL) THEN ((((vt0.c0)AND('461583016')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c1)AND(-243196666)))OR(vt0.c1))  WHEN ((1550591532) NOT NULL) THEN ((((vt0.c0)AND('461583016')))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c1)AND(-243196666)))OR(vt0.c1))  WHEN ((1550591532) NOT NULL) THEN ((((vt0.c0)AND('461583016')))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((((vt0.c1)AND(-243196666)))OR(vt0.c1))  WHEN ((1550591532) NOT NULL) THEN ((((vt0.c0)AND('461583016')))AND(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON 2.8800449E8 WHERE (((((((((vt0.c0)AND(((t0.c0) IS FALSE))))OR((- (t0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))OR(0.12560200331460836)))AND(rt0.c2))))) ORDER BY (((((vt0.c1)>(rt0.c2)), ABS(t0.c0), (vt0.c0 IN ())))!=((((rt0.c0) IS TRUE), ((NULL)IS(rt0.c1)), (+ (rt0.c1))))) ASC  NULLS FIRST, (((((rt0.c1) BETWEEN (t0.c0) AND (0.8926120386405668))))<((((x'') BETWEEN (t0.c1) AND (t0.c1)))))  NULLS LAST, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c0) IS FALSE))))OR((- (t0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))OR(0.12560200331460836)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON 2.8800449E8 ORDER BY (((((vt0.c1)>(rt0.c2)), ABS(t0.c0), (vt0.c0 IN ())))<>((((rt0.c0) IS TRUE), ((NULL)IS(rt0.c1)), (+ (rt0.c1))))) ASC  NULLS FIRST, (((((rt0.c1) BETWEEN (t0.c0) AND (0.8926120386405668))))<((((x'') BETWEEN (t0.c1) AND (t0.c1)))))  NULLS LAST, LAST_INSERT_ROWID() DESC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON 2.8800449E8 WHERE (((((((((vt0.c0)AND(((t0.c0) IS FALSE))))OR((- (t0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))OR(0.12560200331460836)))AND(rt0.c2))))) ORDER BY (((((vt0.c1)>(rt0.c2)), ABS(t0.c0), (vt0.c0 IN ())))!=((((rt0.c0) IS TRUE), ((NULL)IS(rt0.c1)), (+ (rt0.c1))))) ASC  NULLS FIRST, (((((rt0.c1) BETWEEN (t0.c0) AND (0.8926120386405668))))<((((x'') BETWEEN (t0.c1) AND (t0.c1)))))  NULLS LAST, LAST_INSERT_ROWID() DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((t0.c0) IS FALSE))))OR((- (t0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))OR(0.12560200331460836)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt0 ON 2.8800449E8 ORDER BY (((((vt0.c1)>(rt0.c2)), ABS(t0.c0), (vt0.c0 IN ())))<>((((rt0.c0) IS TRUE), ((NULL)IS(rt0.c1)), (+ (rt0.c1))))) ASC  NULLS FIRST, (((((rt0.c1) BETWEEN (t0.c0) AND (0.8926120386405668))))<((((x'') BETWEEN (t0.c1) AND (t0.c1)))))  NULLS LAST, LAST_INSERT_ROWID() DESC);
SELECT ALL COUNT(*) FROM vt0, t0 CROSS JOIN rt0 ON 2.8800449E8 WHERE (((((((((vt0.c0)AND(((t0.c0) IS FALSE))))OR((- (t0.c2)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((((((t0.c2)AND(t0.c1)))OR(vt0.c0)))OR(0.12560200331460836)))AND(rt0.c2))))) ORDER BY (((((vt0.c1)>(rt0.c2)), ABS(t0.c0), (vt0.c0 IN ())))!=((((rt0.c0) IS TRUE), ((NULL)IS(rt0.c1)), (+ (rt0.c1))))) ASC  NULLS FIRST, (((((rt0.c1) BETWEEN (t0.c0) AND (0.8926120386405668))))<((((x'') BETWEEN (t0.c1) AND (t0.c1)))))  NULLS LAST, LAST_INSERT_ROWID() DESC;
SELECT * FROM vt1, vt0, t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT * FROM vt1, vt0, t0, rt0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))) ISNULL)) ORDER BY MIN(vt0.c0 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN ('1608937016') AND (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY MIN(vt0.c0 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN ('1608937016') AND (t0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))) ISNULL)) ORDER BY MIN(vt0.c0 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN ('1608937016') AND (t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY MIN(vt0.c0 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN ('1608937016') AND (t0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE ((((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))) ISNULL)) ORDER BY MIN(vt0.c0 COLLATE RTRIM, ((vt0.c1) NOT BETWEEN ('1608937016') AND (t0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))IS(((x'd284')LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(((x'd284')LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))IS(((x'd284')LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))IS(((x'd284')LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))IS(((x'd284')LIKE(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE ((rt0.c1 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE ((rt0.c1 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY vt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1, t0 WHERE ((rt0.c1 IN ())) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((t0.c2))>((t0.c0))))AND(((t0.c2)*(t0.c1)))))AND(((t0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c2))>((t0.c0))))AND(((t0.c2)*(t0.c1)))))AND(((t0.c2) NOT NULL))) ASC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((t0.c2))>((t0.c0))))AND(((t0.c2)*(t0.c1)))))AND(((t0.c2) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c2))>((t0.c0))))AND(((t0.c2)*(t0.c1)))))AND(((t0.c2) NOT NULL))) ASC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (((((((t0.c2))>((t0.c0))))AND(((t0.c2)*(t0.c1)))))AND(((t0.c2) NOT NULL))) ASC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1)<<(vt0.c1)))) AND ((vt0.c0 COLLATE BINARY))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB)) ORDER BY (vt0.c0 IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)), CAST(((vt0.c0) IS TRUE) AS BLOB), CASE WHEN ((rt0.c1)|(x'38dc')) THEN ((rt0.c2)%(-2.34944945E8)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)), CAST(((vt0.c0) IS TRUE) AS BLOB), CASE WHEN ((rt0.c1)|(x'38dc')) THEN ((rt0.c2)%(-2.34944945E8)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB)) ORDER BY (vt0.c0 IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)), CAST(((vt0.c0) IS TRUE) AS BLOB), CASE WHEN ((rt0.c1)|(x'38dc')) THEN ((rt0.c2)%(-2.34944945E8)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (vt0.c0 IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)), CAST(((vt0.c0) IS TRUE) AS BLOB), CASE WHEN ((rt0.c1)|(x'38dc')) THEN ((rt0.c2)%(-2.34944945E8)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS BLOB)) ORDER BY (vt0.c0 IN (CASE vt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END)), CAST(((vt0.c0) IS TRUE) AS BLOB), CASE WHEN ((rt0.c1)|(x'38dc')) THEN ((rt0.c2)%(-2.34944945E8)) ELSE ((rt0.c2) BETWEEN (vt0.c1) AND (rt0.c1)) END;
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (((((((vt0.c0))<((t0.c1)))))<=((((t0.c2)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((t0.c1)))))<=((((t0.c2)IS(vt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (((((((vt0.c0))<((t0.c1)))))<=((((t0.c2)IS(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))<((t0.c1)))))<=((((t0.c2)IS(vt0.c1)))))) IS TRUE)  as count FROM rt0, t0, vt0, vt1);
SELECT ALL * FROM rt0, t0, vt0, vt1 WHERE (((((((vt0.c0))<((t0.c1)))))<=((((t0.c2)IS(vt0.c1))))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((-2.30003072E8)) AND ((t0.c1))))&(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) ORDER BY NULLIF(t0.c1, t0.c0);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((-2.30003072E8)) AND ((t0.c1))))&(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c1, t0.c0));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((-2.30003072E8)) AND ((t0.c1))))&(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) ORDER BY NULLIF(t0.c1, t0.c0);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((-2.30003072E8)) AND ((t0.c1))))&(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM t0 ORDER BY NULLIF(t0.c1, t0.c0));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) BETWEEN ((-2.30003072E8)) AND ((t0.c1))))&(CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) ORDER BY NULLIF(t0.c1, t0.c0);
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (t0.c0 IN ()), t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (t0.c0 IN ()), t0.c1)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (t0.c0 IN ()), t0.c1));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (t0.c0 IN ()), t0.c1)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (IFNULL(DISTINCT (t0.c0 IN ()), t0.c1));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE (CASE ABS(rt0.c1)  WHEN t0.c0 THEN ((vt0.c1) NOTNULL) END) ORDER BY ((((vt0.c1)*(vt0.c1)))%(0.43589152833388367)) ASC, t0.c0 DESC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c1)  WHEN t0.c0 THEN ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((vt0.c1)*(vt0.c1)))%(0.43589152833388367)) ASC, t0.c0 DESC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE (CASE ABS(rt0.c1)  WHEN t0.c0 THEN ((vt0.c1) NOTNULL) END) ORDER BY ((((vt0.c1)*(vt0.c1)))%(0.43589152833388367)) ASC, t0.c0 DESC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ABS(rt0.c1)  WHEN t0.c0 THEN ((vt0.c1) NOTNULL) END) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((vt0.c1)*(vt0.c1)))%(0.43589152833388367)) ASC, t0.c0 DESC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE (CASE ABS(rt0.c1)  WHEN t0.c0 THEN ((vt0.c1) NOTNULL) END) ORDER BY ((((vt0.c1)*(vt0.c1)))%(0.43589152833388367)) ASC, t0.c0 DESC, ((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (t0.c2) AND (vt0.c1))) AND (CASE WHEN rt0.c1 THEN vt0.c1 END)) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (- (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (- (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (- (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (- (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (- (t0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN t0 ON (- (((rt0.c2)AND(vt0.c1)))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE t0.c2  WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c1)IS NOT(t0.c1)))) INNER JOIN vt0 ON CAST(CASE t0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN 0X7f7c2ad3 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END AS TEXT) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (- (((rt0.c2)AND(vt0.c1)))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE t0.c2  WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c1)IS NOT(t0.c1)))) INNER JOIN vt0 ON CAST(CASE t0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN 0X7f7c2ad3 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END AS TEXT));
SELECT * FROM vt1 FULL OUTER JOIN t0 ON (- (((rt0.c2)AND(vt0.c1)))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE t0.c2  WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c1)IS NOT(t0.c1)))) INNER JOIN vt0 ON CAST(CASE t0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN 0X7f7c2ad3 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END AS TEXT) WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON (- (((rt0.c2)AND(vt0.c1)))) CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN t0.c2 ELSE t0.c0 END)AND(CASE t0.c2  WHEN rt0.c1 THEN rt0.c2 END)))OR(((rt0.c1)IS NOT(t0.c1)))) INNER JOIN vt0 ON CAST(CASE t0.c2  WHEN rt0.c2 THEN t0.c1 WHEN t0.c0 THEN 0X7f7c2ad3 WHEN rt0.c0 THEN t0.c2 ELSE rt0.c1 END AS TEXT));
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((vt0.c0)AND(t0.c1)))OR(t0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(t0.c1)))OR(t0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((vt0.c0)AND(t0.c1)))OR(t0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(t0.c1)))OR(t0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT ALL * FROM t0, rt0, vt0 WHERE (((((((((vt0.c0)AND(t0.c1)))OR(t0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))-(vt1.c0))) ORDER BY CASE WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN 0.5644840992713912 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))-(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN 0.5644840992713912 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))-(vt1.c0))) ORDER BY CASE WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN 0.5644840992713912 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))-(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN 0.5644840992713912 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))-(vt1.c0))) ORDER BY CASE WHEN vt1.c0 THEN CASE WHEN vt0.c0 THEN 0.5644840992713912 END ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (CAST(vt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((vt0.c0) IS FALSE) COLLATE BINARY) ORDER BY (NOT (CAST(vt0.c1 AS NUMERIC)));
SELECT * FROM t0, vt0, rt0 WHERE (x'1b83') ORDER BY HEX(DISTINCT CASE WHEN x'f15e' THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((x'1b83') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY HEX(DISTINCT CASE WHEN x'f15e' THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (x'1b83') ORDER BY HEX(DISTINCT CASE WHEN x'f15e' THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT SUM(count) FROM (SELECT ((x'1b83') IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY HEX(DISTINCT CASE WHEN x'f15e' THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC);
SELECT * FROM t0, vt0, rt0 WHERE (x'1b83') ORDER BY HEX(DISTINCT CASE WHEN x'f15e' THEN t0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END) DESC;
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE 'KMb'  WHEN vt0.c1 THEN vt1.c0 END)GLOB(CASE WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((CASE 'KMb'  WHEN vt0.c1 THEN vt1.c0 END)GLOB(CASE WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE 'KMb'  WHEN vt0.c1 THEN vt1.c0 END)GLOB(CASE WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (vt0.c0))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 ORDER BY ((CASE 'KMb'  WHEN vt0.c1 THEN vt1.c0 END)GLOB(CASE WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0 WHERE ((- ((+ (vt0.c0))))) ORDER BY ((CASE 'KMb'  WHEN vt0.c1 THEN vt1.c0 END)GLOB(CASE WHEN t0.c1 THEN rt0.c2 END)) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(json_object(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(json_object(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(json_object(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))-(json_object(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (TRIM(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), (((t0.c1, vt0.c1, vt1.c0)) BETWEEN ((rt0.c0, x'f821', vt1.c0)) AND ((0.45324476658963075, vt1.c0, rt0.c0))))) ORDER BY (((((vt0.c0, rt0.c1, t0.c2))<>((rt0.c1, t0.c2, rt0.c1))))>>((((t0.c0, vt0.c0, rt0.c2))==((0.3020473942892118, vt0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), (((t0.c1, vt0.c1, vt1.c0)) BETWEEN ((rt0.c0, x'f821', vt1.c0)) AND ((0.45324476658963075, vt1.c0, rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((((vt0.c0, rt0.c1, t0.c2))!=((rt0.c1, t0.c2, rt0.c1))))>>((((t0.c0, vt0.c0, rt0.c2))=((0.3020473942892118, vt0.c1, vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (TRIM(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), (((t0.c1, vt0.c1, vt1.c0)) BETWEEN ((rt0.c0, x'f821', vt1.c0)) AND ((0.45324476658963075, vt1.c0, rt0.c0))))) ORDER BY (((((vt0.c0, rt0.c1, t0.c2))<>((rt0.c1, t0.c2, rt0.c1))))>>((((t0.c0, vt0.c0, rt0.c2))==((0.3020473942892118, vt0.c1, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), (((t0.c1, vt0.c1, vt1.c0)) BETWEEN ((rt0.c0, x'f821', vt1.c0)) AND ((0.45324476658963075, vt1.c0, rt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1 ORDER BY (((((vt0.c0, rt0.c1, t0.c2))!=((rt0.c1, t0.c2, rt0.c1))))>>((((t0.c0, vt0.c0, rt0.c2))=((0.3020473942892118, vt0.c1, vt0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE (TRIM(((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), (((t0.c1, vt0.c1, vt1.c0)) BETWEEN ((rt0.c0, x'f821', vt1.c0)) AND ((0.45324476658963075, vt1.c0, rt0.c0))))) ORDER BY (((((vt0.c0, rt0.c1, t0.c2))<>((rt0.c1, t0.c2, rt0.c1))))>>((((t0.c0, vt0.c0, rt0.c2))==((0.3020473942892118, vt0.c1, vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('1256266994' COLLATE BINARY) ORDER BY ((('258374436')/(vt0.c1)) IN (rt0.c2)) DESC  NULLS LAST, ((((t0.c0 COLLATE RTRIM)OR(CHAR(rt0.c1, t0.c1, 'Y''d9i', rt0.c2, vt0.c1))))AND((((t0.c2))>=((t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (('1256266994' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((('258374436')/(vt0.c1)) IN (rt0.c2)) DESC  NULLS LAST, ((((t0.c0 COLLATE RTRIM)OR(CHAR(rt0.c1, t0.c1, 'Y''d9i', rt0.c2, vt0.c1))))AND((((t0.c2))>=((t0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('1256266994' COLLATE BINARY) ORDER BY ((('258374436')/(vt0.c1)) IN (rt0.c2)) DESC  NULLS LAST, ((((t0.c0 COLLATE RTRIM)OR(CHAR(rt0.c1, t0.c1, 'Y''d9i', rt0.c2, vt0.c1))))AND((((t0.c2))>=((t0.c1))))) DESC;
SELECT SUM(count) FROM (SELECT (('1256266994' COLLATE BINARY) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY ((('258374436')/(vt0.c1)) IN (rt0.c2)) DESC  NULLS LAST, ((((t0.c0 COLLATE RTRIM)OR(CHAR(rt0.c1, t0.c1, 'Y''d9i', rt0.c2, vt0.c1))))AND((((t0.c2))>=((t0.c1))))) DESC);
SELECT COUNT(*) FROM vt0, t0, rt0 WHERE ('1256266994' COLLATE BINARY) ORDER BY ((('258374436')/(vt0.c1)) IN (rt0.c2)) DESC  NULLS LAST, ((((t0.c0 COLLATE RTRIM)OR(CHAR(rt0.c1, t0.c1, 'Y''d9i', rt0.c2, vt0.c1))))AND((((t0.c2))>=((t0.c1))))) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (x'ff67dc1c');
SELECT SUM(count) FROM (SELECT ALL ((x'ff67dc1c') IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (x'ff67dc1c');
SELECT SUM(count) FROM (SELECT ALL ((x'ff67dc1c') IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (x'ff67dc1c');
SELECT ALL * FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c0) NOT NULL)) ORDER BY (+ (rt0.c2))  NULLS LAST, CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON rt0.c1 ORDER BY (+ (rt0.c2))  NULLS LAST, CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) ASC);
SELECT ALL * FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c0) NOT NULL)) ORDER BY (+ (rt0.c2))  NULLS LAST, CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON rt0.c1 ORDER BY (+ (rt0.c2))  NULLS LAST, CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) ASC);
SELECT ALL * FROM vt1, vt0, rt0 FULL OUTER JOIN t0 ON rt0.c1 WHERE (((t0.c0) NOT NULL)) ORDER BY (+ (rt0.c2))  NULLS LAST, CAST(CAST(vt1.c0 AS INTEGER) AS BLOB) ASC;
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN 0Xffffffffcecee7c3 WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN CAST(t0.c1 AS NUMERIC) WHEN ABS(DISTINCT t0.c1) THEN (~ (t0.c1)) ELSE ((t0.c0)OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN 0xffffffffcecee7c3 WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN CAST(t0.c1 AS NUMERIC) WHEN ABS(DISTINCT t0.c1) THEN (~ (t0.c1)) ELSE ((t0.c0)OR(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN 0Xffffffffcecee7c3 WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN CAST(t0.c1 AS NUMERIC) WHEN ABS(DISTINCT t0.c1) THEN (~ (t0.c1)) ELSE ((t0.c0)OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN 0xffffffffcecee7c3 WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN CAST(t0.c1 AS NUMERIC) WHEN ABS(DISTINCT t0.c1) THEN (~ (t0.c1)) ELSE ((t0.c0)OR(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c0  WHEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))) THEN 0Xffffffffcecee7c3 WHEN CASE WHEN t0.c1 THEN t0.c2 END THEN CAST(t0.c1 AS NUMERIC) WHEN ABS(DISTINCT t0.c1) THEN (~ (t0.c1)) ELSE ((t0.c0)OR(t0.c2)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))||(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))||(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))||(((vt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0)*(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))||(((vt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))  WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) ELSE ((vt1.c0)*(vt1.c0)) END) ORDER BY ((CAST(vt1.c0 AS BLOB))||(((vt1.c0) NOT NULL))) ASC;
SELECT * FROM vt0 WHERE ((NOT ('SB' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT ('SB' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ('SB' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT ('SB' COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT ('SB' COLLATE RTRIM)));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((rt0.c1) NOT NULL) WHEN ((((rt0.c2)OR(x'')))AND(vt1.c0)) THEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN t0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN t0.c2 THEN 'ć''Q#' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END ELSE ((rt0.c0)!=(vt1.c0)) END CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS REAL))OR(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)IS NOT(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)IS NOT(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((rt0.c1) NOT NULL) WHEN ((((rt0.c2)OR(x'')))AND(vt1.c0)) THEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN t0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN t0.c2 THEN 'ć''Q#' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END ELSE ((rt0.c0)<>(vt1.c0)) END CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS REAL))OR(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((rt0.c1) NOT NULL) WHEN ((((rt0.c2)OR(x'')))AND(vt1.c0)) THEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN t0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN t0.c2 THEN 'ć''Q#' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END ELSE ((rt0.c0)!=(vt1.c0)) END CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS REAL))OR(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)IS NOT(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)IS NOT(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN vt1 ON CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((rt0.c1) NOT NULL) WHEN ((((rt0.c2)OR(x'')))AND(vt1.c0)) THEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN t0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN t0.c2 THEN 'ć''Q#' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END ELSE ((rt0.c0)<>(vt1.c0)) END CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS REAL))OR(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0, rt0 INNER JOIN vt1 ON CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((rt0.c1) NOT NULL) WHEN ((((rt0.c2)OR(x'')))AND(vt1.c0)) THEN ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN t0.c2 COLLATE NOCASE THEN CASE vt1.c0  WHEN t0.c2 THEN 'ć''Q#' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c1 END ELSE ((rt0.c0)!=(vt1.c0)) END CROSS JOIN t0 ON ((((((((CAST(t0.c0 AS REAL))OR(((rt0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)))))OR((- (vt0.c0)))))AND(CASE WHEN vt0.c1 THEN vt1.c0 END)))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)) WHERE (((CASE WHEN rt0.c2 THEN t0.c2 WHEN t0.c2 THEN vt1.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END)IS NOT(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT * FROM rt0, vt0, vt1 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM rt0 WHERE ((-234944945 IN ())) ORDER BY 0.3358198337118087 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((-234944945 IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.3358198337118087 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((-234944945 IN ())) ORDER BY 0.3358198337118087 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((-234944945 IN ())) IS TRUE)  as count FROM rt0 ORDER BY 0.3358198337118087 ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((-234944945 IN ())) ORDER BY 0.3358198337118087 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, t0, rt0, vt1);
SELECT ALL * FROM vt0, t0, rt0, vt1 WHERE (NULL);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((t0.c1 IN ()))%(((t0.c2)IS(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))%(((t0.c2)IS(t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((t0.c1 IN ()))%(((t0.c2)IS(t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))%(((t0.c2)IS(t0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((t0.c1 IN ()))%(((t0.c2)IS(t0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(rt0.c1)))OR(((vt0.c1)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(rt0.c1)))OR(((vt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(rt0.c1)))OR(((vt0.c1)>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(rt0.c1)))OR(((vt0.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((((NOT (vt0.c0)))AND((NOT (vt0.c1)))))OR(CAST(vt0.c0 AS TEXT))))AND(rt0.c1)))OR(((vt0.c1)>(rt0.c0)))));
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))!=(((((vt0.c1))<>((t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))!=(((((vt0.c1))<>((t0.c2))))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))!=(((((vt0.c1))<>((t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))!=(((((vt0.c1))<>((t0.c2))))))) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (((((((vt1.c0)) BETWEEN ((t0.c2)) AND ((vt0.c1)))))!=(((((vt0.c1))<>((t0.c2)))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c1 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt0.c1))=((vt0.c1))) WHEN ((vt0.c1)<<(NULL)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c1 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt0.c1))==((vt0.c1))) WHEN ((vt0.c1)<<(NULL)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c1 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt0.c1))=((vt0.c1))) WHEN ((vt0.c1)<<(NULL)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c1 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt0.c1))==((vt0.c1))) WHEN ((vt0.c1)<<(NULL)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c1 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN (((vt0.c1))=((vt0.c1))) WHEN ((vt0.c1)<<(NULL)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM WHERE ((CASE WHEN vt0.c1 THEN vt1.c0 END IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt1.c0 END IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM WHERE ((CASE WHEN vt0.c1 THEN vt1.c0 END IN ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt0.c1 THEN vt1.c0 END IN ((+ (vt0.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c1)GLOB(vt1.c0)) COLLATE RTRIM WHERE ((CASE WHEN vt0.c1 THEN vt1.c0 END IN ((+ (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_insert(rt0.c0, x'', ''))GLOB(((rt0.c1) BETWEEN (vt1.c0) AND ('-2078493650')))) WHERE ('-1452910268');
SELECT SUM(count) FROM (SELECT ALL (('-1452910268') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((json_insert(rt0.c0, x'', ''))GLOB(((rt0.c1) BETWEEN (vt1.c0) AND ('-2078493650')))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_insert(rt0.c0, x'', ''))GLOB(((rt0.c1) BETWEEN (vt1.c0) AND ('-2078493650')))) WHERE ('-1452910268');
SELECT SUM(count) FROM (SELECT ALL (('-1452910268') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((json_insert(rt0.c0, x'', ''))GLOB(((rt0.c1) BETWEEN (vt1.c0) AND ('-2078493650')))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((json_insert(rt0.c0, x'', ''))GLOB(((rt0.c1) BETWEEN (vt1.c0) AND ('-2078493650')))) WHERE ('-1452910268');
SELECT * FROM rt0 WHERE (MIN((((x''))<((rt0.c0))), ((rt0.c1)IS NOT(rt0.c0)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((MIN((((x''))<((rt0.c0))), ((rt0.c1)IS NOT(rt0.c0)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MIN((((x''))<((rt0.c0))), ((rt0.c1)IS NOT(rt0.c0)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((MIN((((x''))<((rt0.c0))), ((rt0.c1)IS NOT(rt0.c0)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN ()))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (MIN((((x''))<((rt0.c0))), ((rt0.c1)IS NOT(rt0.c0)), CAST(rt0.c0 AS BLOB), (rt0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c1) ORDER BY CAST('MPXK' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY CAST('MPXK' AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c1) ORDER BY CAST('MPXK' AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1 ORDER BY CAST('MPXK' AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c1) ORDER BY CAST('MPXK' AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt1, rt0 WHERE ((x'264b' IN (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((x'264b' IN (SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((x'264b' IN (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((x'264b' IN (SQLITE_COMPILEOPTION_USED(rt0.c2)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL * FROM t0, vt1, rt0 WHERE ((x'264b' IN (SQLITE_COMPILEOPTION_USED(rt0.c2))));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (0.17830437408308952 IN ()) WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt1.c0)=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt1.c0)==(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (0.17830437408308952 IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (0.17830437408308952 IN ()) WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt1.c0)=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt1.c0)==(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (0.17830437408308952 IN ()));
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (0.17830437408308952 IN ()) WHERE (CASE WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt1.c0)=(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0))<((((((rt0.c1)AND(t0.c0)))OR(t0.c1)))))) ORDER BY LOWER(DISTINCT (+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((((rt0.c1)AND(t0.c0)))OR(t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LOWER(DISTINCT (+ (t0.c1))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0))<((((((rt0.c1)AND(t0.c0)))OR(t0.c1)))))) ORDER BY LOWER(DISTINCT (+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<((((((rt0.c1)AND(t0.c0)))OR(t0.c1)))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY LOWER(DISTINCT (+ (t0.c1))) ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ((((rt0.c0))<((((((rt0.c1)AND(t0.c0)))OR(t0.c1)))))) ORDER BY LOWER(DISTINCT (+ (t0.c1))) ASC;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (LENGTH(t0.c2) IN ()) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c2)))<>((((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2))<((t0.c2, t0.c2, x'6066', t0.c2, t0.c1)))))) ORDER BY (((vt1.c0, vt1.c0, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 END, ((vt1.c0)LIKE(t0.c0)), ((((((((t0.c0)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))) AND ((',x*', CASE t0.c1  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END, (t0.c0 IN ())))), (((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), t0.c0 COLLATE NOCASE))<=(('MJ_㉝I', (NOT (t0.c0)), ((t0.c2)!=(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c2)))!=((((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2))<((t0.c2, t0.c2, x'6066', t0.c2, t0.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (LENGTH(t0.c2) IN ()) ORDER BY (((vt1.c0, vt1.c0, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 END, ((vt1.c0)LIKE(t0.c0)), ((((((((t0.c0)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))) AND ((',x*', CASE t0.c1  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END, (t0.c0 IN ())))), (((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), t0.c0 COLLATE NOCASE))<=(('MJ_㉝I', (NOT (t0.c0)), ((t0.c2)!=(t0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (LENGTH(t0.c2) IN ()) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c2)))<>((((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2))<((t0.c2, t0.c2, x'6066', t0.c2, t0.c1)))))) ORDER BY (((vt1.c0, vt1.c0, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 END, ((vt1.c0)LIKE(t0.c0)), ((((((((t0.c0)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))) AND ((',x*', CASE t0.c1  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END, (t0.c0 IN ())))), (((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), t0.c0 COLLATE NOCASE))<=(('MJ_㉝I', (NOT (t0.c0)), ((t0.c2)!=(t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c2)))!=((((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2))<((t0.c2, t0.c2, x'6066', t0.c2, t0.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (LENGTH(t0.c2) IN ()) ORDER BY (((vt1.c0, vt1.c0, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 END, ((vt1.c0)LIKE(t0.c0)), ((((((((t0.c0)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))) AND ((',x*', CASE t0.c1  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END, (t0.c0 IN ())))), (((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), t0.c0 COLLATE NOCASE))<=(('MJ_㉝I', (NOT (t0.c0)), ((t0.c2)!=(t0.c0))))) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (LENGTH(t0.c2) IN ()) WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c2)))<>((((t0.c2, t0.c1, t0.c1, t0.c1, t0.c2))<((t0.c2, t0.c2, x'6066', t0.c2, t0.c1)))))) ORDER BY (((vt1.c0, vt1.c0, t0.c2)) BETWEEN ((CASE WHEN t0.c1 THEN t0.c0 END, ((vt1.c0)LIKE(t0.c0)), ((((((((t0.c0)OR(t0.c2)))OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))) AND ((',x*', CASE t0.c1  WHEN t0.c0 THEN vt1.c0 ELSE t0.c2 END, (t0.c0 IN ())))), (((((((((((t0.c0)OR(vt1.c0)))AND(t0.c0)))AND(vt1.c0)))OR(vt1.c0)), ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2)), t0.c0 COLLATE NOCASE))<=(('MJ_㉝I', (NOT (t0.c0)), ((t0.c2)!=(t0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((8.14048707E8)!=(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((((t0.c2)OR(t0.c2)))OR(vt0.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(((t0.c2)||(t0.c2)))))OR(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((8.14048707E8)<>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY ((((((((((((t0.c2)OR(t0.c2)))OR(vt0.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(((t0.c2)||(t0.c2)))))OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((8.14048707E8)!=(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((((t0.c2)OR(t0.c2)))OR(vt0.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(((t0.c2)||(t0.c2)))))OR(CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((8.14048707E8)<>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1 NATURAL JOIN vt0 ORDER BY ((((((((((((t0.c2)OR(t0.c2)))OR(vt0.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(((t0.c2)||(t0.c2)))))OR(CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM t0, vt1 NATURAL JOIN vt0 WHERE (((8.14048707E8)!=(vt0.c1)) COLLATE RTRIM) ORDER BY ((((((((((((t0.c2)OR(t0.c2)))OR(vt0.c0)))OR(t0.c2)))OR(CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)))AND(((t0.c2)||(t0.c2)))))OR(CAST(vt1.c0 AS TEXT)));
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(x''))) NOTNULL)) ORDER BY ((((0.32406451292455407) NOT NULL)) IS TRUE) ASC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(x''))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((0.32406451292455407) NOT NULL)) IS TRUE) ASC  NULLS LAST, t0.c0 DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(x''))) NOTNULL)) ORDER BY ((((0.32406451292455407) NOT NULL)) IS TRUE) ASC  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>=(x''))) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY ((((0.32406451292455407) NOT NULL)) IS TRUE) ASC  NULLS LAST, t0.c0 DESC);
SELECT ALL * FROM t0, vt0, rt0 WHERE (((((rt0.c0)>=(x''))) NOTNULL)) ORDER BY ((((0.32406451292455407) NOT NULL)) IS TRUE) ASC  NULLS LAST, t0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c1 END) ORDER BY (-1969445520 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (-1969445520 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c1 END) ORDER BY (-1969445520 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (-1969445520 IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)IS NOT(vt0.c1)) ELSE vt0.c1 END) ORDER BY (-1969445520 IN ()) ASC;
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)%(vt0.c0)) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((vt1.c0)%(vt0.c0)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)%(vt0.c0)) ELSE (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((vt1.c0)%(vt0.c0)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON x'');
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON x'' WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0)%(vt0.c0)) ELSE (~ (vt0.c0)) END);
SELECT * FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)-(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)-(t0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)-(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt0.c1)-(t0.c2)))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (TRIM(DISTINCT ((rt0.c1)-(t0.c2))));
SELECT * FROM rt0, t0, vt0 WHERE ('1185309513');
SELECT SUM(count) FROM (SELECT (('1185309513') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ('1185309513');
SELECT SUM(count) FROM (SELECT (('1185309513') IS TRUE)  as count FROM rt0, t0, vt0);
SELECT * FROM rt0, t0, vt0 WHERE ('1185309513');
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))>((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))>((vt0.c1))) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))>((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))>((vt0.c1))) END) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((NULL) NOT NULL) WHERE (CASE WHEN ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)) THEN ((vt1.c0) NOTNULL) ELSE (((vt1.c0))>((vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((- (vt0.c0)))AND(RTRIM(rt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((0Xffffffffa810d663)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c1 IN ())))<((vt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(RTRIM(rt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((0xffffffffa810d663)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1 IN ())))<((vt0.c1 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((- (vt0.c0)))AND(RTRIM(rt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((0Xffffffffa810d663)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c1 IN ())))<((vt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))AND(RTRIM(rt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((0xffffffffa810d663)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1 IN ())))<((vt0.c1 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((- (vt0.c0)))AND(RTRIM(rt0.c0))))AND((((vt0.c0)) NOT BETWEEN ((0Xffffffffa810d663)) AND ((vt0.c0)))))) ORDER BY ((((vt0.c1 IN ())))<((vt0.c1 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c0)/(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c0)/(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c0)/(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c0)/(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT * FROM vt0, t0, rt0 WHERE (((((vt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c0)/(t0.c0))) AND (CASE WHEN rt0.c1 THEN t0.c1 ELSE rt0.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE ((((DATE(rt0.c0, rt0.c2, rt0.c1)))<=((((rt0.c0)<(rt0.c2)))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0) ISNULL), (rt0.c0 IN ()), ((((rt0.c2)AND(715945116)))OR(rt0.c2)), (+ (rt0.c0))))<((((rt0.c2) ISNULL), ((rt0.c1)<(rt0.c2)), ((rt0.c0) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((DATE(rt0.c0, rt0.c2, rt0.c1)))<=((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0) ISNULL), (rt0.c0 IN ()), ((((rt0.c2)AND(715945116)))OR(rt0.c2)), (+ (rt0.c0))))<((((rt0.c2) ISNULL), ((rt0.c1)<(rt0.c2)), ((rt0.c0) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((DATE(rt0.c0, rt0.c2, rt0.c1)))<=((((rt0.c0)<(rt0.c2)))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0) ISNULL), (rt0.c0 IN ()), ((((rt0.c2)AND(715945116)))OR(rt0.c2)), (+ (rt0.c0))))<((((rt0.c2) ISNULL), ((rt0.c1)<(rt0.c2)), ((rt0.c0) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC, rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((DATE(rt0.c0, rt0.c2, rt0.c1)))<=((((rt0.c0)<(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0) ISNULL), (rt0.c0 IN ()), ((((rt0.c2)AND(715945116)))OR(rt0.c2)), (+ (rt0.c0))))<((((rt0.c2) ISNULL), ((rt0.c1)<(rt0.c2)), ((rt0.c0) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC, rt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((DATE(rt0.c0, rt0.c2, rt0.c1)))<=((((rt0.c0)<(rt0.c2)))))) ORDER BY (((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END, ((rt0.c0) ISNULL), (rt0.c0 IN ()), ((((rt0.c2)AND(715945116)))OR(rt0.c2)), (+ (rt0.c0))))<((((rt0.c2) ISNULL), ((rt0.c1)<(rt0.c2)), ((rt0.c0) NOT NULL), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) ASC, rt0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (-1122233964) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c1, t0.c1, vt0.c0))<>((vt0.c1, vt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((-1122233964) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c1, t0.c1, vt0.c0))<>((vt0.c1, vt0.c0, rt0.c0))))));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (-1122233964) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c1, t0.c1, vt0.c0))<>((vt0.c1, vt0.c0, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((-1122233964) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c1, t0.c1, vt0.c0))<>((vt0.c1, vt0.c0, rt0.c0))))));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (-1122233964) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN ((+ (rt0.c0))) AND ((((t0.c1, t0.c1, vt0.c0))<>((vt0.c1, vt0.c0, rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0Xffffffffb6006052);
SELECT SUM(count) FROM (SELECT ((0Xffffffffb6006052) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0Xffffffffb6006052);
SELECT SUM(count) FROM (SELECT ((0Xffffffffb6006052) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0Xffffffffb6006052);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)OR(t0.c1))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))))) ORDER BY (~ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c1))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)OR(t0.c1))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))))) ORDER BY (~ (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(t0.c1))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt0.c0)OR(t0.c1))) NOT BETWEEN (t0.c0) AND ((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c2)))))) ORDER BY (~ (t0.c0))  NULLS FIRST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE NOCASE) ORDER BY (((((((((rt0.c1 IN (rt0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(((((((((rt0.c1)AND(0.32588677985527914)))AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(rt0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))&(((t0.c1)>>(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY (((((((((rt0.c1 IN (rt0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(((((((((rt0.c1)AND(0.32588677985527914)))AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(rt0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))&(((t0.c1)>>(t0.c2)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE NOCASE) ORDER BY (((((((((rt0.c1 IN (rt0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(((((((((rt0.c1)AND(0.32588677985527914)))AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(rt0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))&(((t0.c1)>>(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 ORDER BY (((((((((rt0.c1 IN (rt0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(((((((((rt0.c1)AND(0.32588677985527914)))AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(rt0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))&(((t0.c1)>>(t0.c2)))) DESC);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE ((~ (rt0.c1)) COLLATE NOCASE) ORDER BY (((((((((rt0.c1 IN (rt0.c0)))AND(((t0.c1)AND(t0.c0)))))OR(((((((((rt0.c1)AND(0.32588677985527914)))AND(rt0.c0)))OR(t0.c0)))AND(t0.c0)))))OR(rt0.c0 COLLATE NOCASE)))OR(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((((((rt0.c1)AND(t0.c0)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)))&(((t0.c1)>>(t0.c2)))) DESC;
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c1);
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN t0.c1 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE x'' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN t0.c1 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE x'' END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN t0.c1 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE x'' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN t0.c1 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE x'' END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE CASE WHEN vt0.c0 THEN vt0.c1 END  WHEN ((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1)) THEN t0.c1 COLLATE NOCASE ELSE CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE x'' END END);
SELECT ALL * FROM rt0, t0, vt0 WHERE (0Xffffffffcf8e5ad6);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffcf8e5ad6) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (0Xffffffffcf8e5ad6);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffcf8e5ad6) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL * FROM rt0, t0, vt0 WHERE (0Xffffffffcf8e5ad6);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON (((t0.c1) IS TRUE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE (CASE WHEN ((((t0.c2)OR(rt0.c0)))OR(NULL)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0)GLOB(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c2)OR(rt0.c0)))OR(NULL)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0)GLOB(t0.c2)) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((t0.c1) IS TRUE) IN ()) CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON (((t0.c1) IS TRUE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE (CASE WHEN ((((t0.c2)OR(rt0.c0)))OR(NULL)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0)GLOB(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t0.c2)OR(rt0.c0)))OR(NULL)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0)GLOB(t0.c2)) END) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON (((t0.c1) IS TRUE) IN ()) CROSS JOIN vt1 ON vt1.c0);
SELECT ALL * FROM t0, rt0 CROSS JOIN vt0 ON (((t0.c1) IS TRUE) IN ()) CROSS JOIN vt1 ON vt1.c0 WHERE (CASE WHEN ((((t0.c2)OR(rt0.c0)))OR(NULL)) THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c0)GLOB(t0.c2)) END);
SELECT ALL * FROM rt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((592107028)>>(rt0.c1))) AND (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND ((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) NOT BETWEEN (((592107028)>>(rt0.c1))) AND (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND ((- (rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((592107028)>>(rt0.c1))) AND (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND ((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS BLOB)) NOT BETWEEN (((592107028)>>(rt0.c1))) AND (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND ((- (rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((592107028)>>(rt0.c1))) AND (((rt0.c0) NOT BETWEEN ('') AND (rt0.c2))))) ORDER BY ((rt0.c2) NOT BETWEEN (((rt0.c1)/(rt0.c0))) AND ((- (rt0.c1)))) ASC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '0.2731351143371439' WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON '0.2731351143371439');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '0.2731351143371439' WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON '0.2731351143371439');
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON '0.2731351143371439' WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.43589152833388367');
SELECT SUM(count) FROM (SELECT (('0.43589152833388367') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.43589152833388367');
SELECT SUM(count) FROM (SELECT (('0.43589152833388367') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.43589152833388367');
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c1)) AS NUMERIC)) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR(NULL)) ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c1)) AS NUMERIC)) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR(NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)LIKE(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR(NULL)) ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (CAST(((vt0.c0)LIKE(vt0.c1)) AS NUMERIC)) ORDER BY ((((vt1.c0 COLLATE RTRIM)AND(((vt0.c0) IS TRUE))))OR(NULL)) ASC;
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c2))IS NOT(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0)OR(0X1ac29153)))OR(rt0.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c2))IS NOT(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(0X1ac29153)))OR(rt0.c1))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c2))IS NOT(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0)OR(0X1ac29153)))OR(rt0.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c2, rt0.c2))IS NOT(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(0X1ac29153)))OR(rt0.c1))) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((IFNULL(rt0.c2, rt0.c2))IS NOT(((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))))) ORDER BY ((((((rt0.c0)OR(0X1ac29153)))OR(rt0.c1))) IS TRUE) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (-1468681333);
SELECT SUM(count) FROM (SELECT ((-1468681333) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (-1468681333);
SELECT SUM(count) FROM (SELECT ((-1468681333) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (-1468681333);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (CASE WHEN -1188429561 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN vt0 ON (((CAST(t0.c0 AS INTEGER)))<((((((((((t0.c1)OR(rt0.c2)))AND('0.983710016247241')))AND(t0.c0)))OR(vt0.c0))))) WHERE (((((t0.c1)/(vt0.c0)))>=(((t0.c1)&(t0.c1))))) ORDER BY t0.c0 DESC  NULLS LAST, t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)/(vt0.c0)))>=(((t0.c1)&(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (CASE WHEN -1188429561 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN vt0 ON (((CAST(t0.c0 AS INTEGER)))<((((((((((t0.c1)OR(rt0.c2)))AND('0.983710016247241')))AND(t0.c0)))OR(vt0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, t0.c2 ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (CASE WHEN -1188429561 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN vt0 ON (((CAST(t0.c0 AS INTEGER)))<((((((((((t0.c1)OR(rt0.c2)))AND('0.983710016247241')))AND(t0.c0)))OR(vt0.c0))))) WHERE (((((t0.c1)/(vt0.c0)))>=(((t0.c1)&(t0.c1))))) ORDER BY t0.c0 DESC  NULLS LAST, t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)/(vt0.c0)))>=(((t0.c1)&(t0.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (CASE WHEN -1188429561 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN vt0 ON (((CAST(t0.c0 AS INTEGER)))<((((((((((t0.c1)OR(rt0.c2)))AND('0.983710016247241')))AND(t0.c0)))OR(vt0.c0))))) ORDER BY t0.c0 DESC  NULLS LAST, t0.c2 ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (CASE WHEN -1188429561 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()) CROSS JOIN vt0 ON (((CAST(t0.c0 AS INTEGER)))<((((((((((t0.c1)OR(rt0.c2)))AND('0.983710016247241')))AND(t0.c0)))OR(vt0.c0))))) WHERE (((((t0.c1)/(vt0.c0)))>=(((t0.c1)&(t0.c1))))) ORDER BY t0.c0 DESC  NULLS LAST, t0.c2 ASC;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (',x*');
SELECT SUM(count) FROM (SELECT ALL ((',x*') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (',x*');
SELECT SUM(count) FROM (SELECT ALL ((',x*') IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE (',x*');
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS NUMERIC))&(vt1.c0))) ORDER BY ((((LIKELIHOOD(rt0.c1, 0.3157319159071641))OR((NOT (rt0.c0)))))OR(((rt0.c2)>=(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))&(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((LIKELIHOOD(rt0.c1, 0.3157319159071641))OR((NOT (rt0.c0)))))OR(((rt0.c2)>=(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS NUMERIC))&(vt1.c0))) ORDER BY ((((LIKELIHOOD(rt0.c1, 0.3157319159071641))OR((NOT (rt0.c0)))))OR(((rt0.c2)>=(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS NUMERIC))&(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((LIKELIHOOD(rt0.c1, 0.3157319159071641))OR((NOT (rt0.c0)))))OR(((rt0.c2)>=(rt0.c1)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(rt0.c0 AS NUMERIC))&(vt1.c0))) ORDER BY ((((LIKELIHOOD(rt0.c1, 0.3157319159071641))OR((NOT (rt0.c0)))))OR(((rt0.c2)>=(rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((NULLIF(rt0.c1, t0.c0))<=(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, t0.c0))<=(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((NULLIF(rt0.c1, t0.c0))<=(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(rt0.c1, t0.c0))<=(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE (((NULLIF(rt0.c1, t0.c0))<=(CAST(rt0.c1 AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))|((vt1.c0 IN ()))));
SELECT * FROM vt1, t0, vt0, rt0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN ())) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM vt1, t0, vt0, rt0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN ())) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM vt1, t0, vt0, rt0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c0)) IN ())) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (highlight(rt0.c1 COLLATE RTRIM, ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), json_patch(rt0.c1, rt0.c0), (((rt0.c2))!=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c1 COLLATE RTRIM, ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), json_patch(rt0.c1, rt0.c0), (((rt0.c2))<>((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (highlight(rt0.c1 COLLATE RTRIM, ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), json_patch(rt0.c1, rt0.c0), (((rt0.c2))!=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c1 COLLATE RTRIM, ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), json_patch(rt0.c1, rt0.c0), (((rt0.c2))<>((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 NATURAL JOIN t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c2))))IS NOT(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c2))))IS NOT(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 NATURAL JOIN t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c2))))IS NOT(CAST(t0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c2))))IS NOT(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 NATURAL JOIN t0 WHERE ((((((rt0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c2))))IS NOT(CAST(t0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(-220577639)))AND(t0.c1))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)OR(-220577639)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(-220577639)))AND(t0.c1))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL (((- (((((vt1.c0)OR(-220577639)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c0);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(-220577639)))AND(t0.c1))))) ORDER BY vt1.c0;
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((((((rt0.c2) IS TRUE))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1)))))OR((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1)))))OR((NOT (t0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((((((rt0.c2) IS TRUE))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1)))))OR((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2) IS TRUE))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1)))))OR((NOT (t0.c1))))) IS TRUE)  as count FROM vt1, rt0, t0, vt0);
SELECT COUNT(*) FROM vt1, rt0, t0, vt0 WHERE (((((((rt0.c2) IS TRUE))AND(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1)))))OR((NOT (t0.c1)))));
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c1))))) ORDER BY (+ (((vt0.c0)LIKE(vt0.c0)))), ((LOWER(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((NULL)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)LIKE(vt0.c0)))), ((LOWER(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((NULL)%(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c1))))) ORDER BY (+ (((vt0.c0)LIKE(vt0.c0)))), ((LOWER(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((NULL)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0)LIKE(vt0.c0)))), ((LOWER(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((NULL)%(vt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)), (~ (vt0.c1))))) ORDER BY (+ (((vt0.c0)LIKE(vt0.c0)))), ((LOWER(DISTINCT vt0.c1)) BETWEEN (((vt0.c0)GLOB(vt0.c1))) AND (((NULL)%(vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((NULL)GLOB(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((NULL)GLOB(((vt1.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM t0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt1 WHERE (((NULL)GLOB(((vt1.c0) ISNULL))));
SELECT * FROM vt1 CROSS JOIN vt0 ON (((CASE WHEN vt0.c0 THEN vt1.c0 END, rt0.c0 COLLATE NOCASE, ((vt1.c0)AND(rt0.c1))))>((rt0.c0, ((vt0.c1) NOTNULL), ((vt0.c1)>(rt0.c1))))) FULL OUTER JOIN rt0 ON TRIM(-2.122489753E9) WHERE (CAST((NOT ('K1QN')) AS REAL)) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('K1QN')) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((CASE WHEN vt0.c0 THEN vt1.c0 END, rt0.c0 COLLATE NOCASE, ((vt1.c0)AND(rt0.c1))))>((rt0.c0, ((vt0.c1) NOTNULL), ((vt0.c1)>(rt0.c1))))) FULL OUTER JOIN rt0 ON TRIM(-2.122489753E9) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS FALSE) ASC);
SELECT * FROM vt1 CROSS JOIN vt0 ON (((CASE WHEN vt0.c0 THEN vt1.c0 END, rt0.c0 COLLATE NOCASE, ((vt1.c0)AND(rt0.c1))))>((rt0.c0, ((vt0.c1) NOTNULL), ((vt0.c1)>(rt0.c1))))) FULL OUTER JOIN rt0 ON TRIM(-2.122489753E9) WHERE (CAST((NOT ('K1QN')) AS REAL)) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('K1QN')) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON (((CASE WHEN vt0.c0 THEN vt1.c0 END, rt0.c0 COLLATE NOCASE, ((vt1.c0)AND(rt0.c1))))>((rt0.c0, ((vt0.c1) NOTNULL), ((vt0.c1)>(rt0.c1))))) FULL OUTER JOIN rt0 ON TRIM(-2.122489753E9) ORDER BY ((((vt1.c0)IS NOT(vt0.c1))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c2))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END END DESC, CAST(1.631860302E9 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END END DESC, CAST(1.631860302E9 AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c2))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END END DESC, CAST(1.631860302E9 AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (t0.c2))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END END DESC, CAST(1.631860302E9 AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c2))) ORDER BY CASE WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS NUMERIC) ELSE CASE WHEN rt0.c2 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END END DESC, CAST(1.631860302E9 AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (UPPER(((((vt1.c0)AND(0.5714206584004747)))OR(vt0.c1)))) ORDER BY ((IFNULL(vt0.c1, '-238716055'))+(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt1.c0)AND(0.5714206584004747)))OR(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((IFNULL(vt0.c1, '-238716055'))+(vt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (UPPER(((((vt1.c0)AND(0.5714206584004747)))OR(vt0.c1)))) ORDER BY ((IFNULL(vt0.c1, '-238716055'))+(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt1.c0)AND(0.5714206584004747)))OR(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY ((IFNULL(vt0.c1, '-238716055'))+(vt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t0, vt1 WHERE (UPPER(((((vt1.c0)AND(0.5714206584004747)))OR(vt0.c1)))) ORDER BY ((IFNULL(vt0.c1, '-238716055'))+(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN (((t0.c2 IN (x'')))) AND ((((vt0.c1)>(vt1.c0)))))) ORDER BY ((HEX(t0.c0))>=(((t0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((t0.c2 IN (x'')))) AND ((((vt0.c1)>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((HEX(t0.c0))>=(((t0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN (((t0.c2 IN (x'')))) AND ((((vt0.c1)>(vt1.c0)))))) ORDER BY ((HEX(t0.c0))>=(((t0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN (((t0.c2 IN (x'')))) AND ((((vt0.c1)>(vt1.c0)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((HEX(t0.c0))>=(((t0.c0) IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt0.c1)) NOT BETWEEN (((t0.c2 IN (x'')))) AND ((((vt0.c1)>(vt1.c0)))))) ORDER BY ((HEX(t0.c0))>=(((t0.c0) IS FALSE))) ASC;
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((((x'')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((x'')<<(rt0.c0))))) ORDER BY (+ ((+ (rt0.c0)))) ASC  NULLS LAST, (((((rt0.c1)&(rt0.c1))))<((t0.c2))) DESC, (((('0c{C')AND(((x'')||(rt0.c1)))))AND(((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')<<(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ ((+ (rt0.c0)))) ASC  NULLS LAST, (((((rt0.c1)&(rt0.c1))))<((t0.c2))) DESC, (((('0c{C')AND(((x'')||(rt0.c1)))))AND(((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((x'')<<(rt0.c0))))) ORDER BY (+ ((+ (rt0.c0)))) ASC  NULLS LAST, (((((rt0.c1)&(rt0.c1))))<((t0.c2))) DESC, (((('0c{C')AND(((x'')||(rt0.c1)))))AND(((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')<<(rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (+ ((+ (rt0.c0)))) ASC  NULLS LAST, (((((rt0.c1)&(rt0.c1))))<((t0.c2))) DESC, (((('0c{C')AND(((x'')||(rt0.c1)))))AND(((rt0.c2) IS FALSE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((NOT (((x'')<<(rt0.c0))))) ORDER BY (+ ((+ (rt0.c0)))) ASC  NULLS LAST, (((((rt0.c1)&(rt0.c1))))<((t0.c2))) DESC, (((('0c{C')AND(((x'')||(rt0.c1)))))AND(((rt0.c2) IS FALSE))) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((((((((vt0.c0)AND(((vt1.c0)%(t0.c1)))))AND(((vt1.c0)*(rt0.c2)))))OR(((vt0.c0)*(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM)>((((t0.c1, rt0.c0, rt0.c2))<>((vt1.c0, t0.c2, t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt1.c0)%(t0.c1)))))AND(((vt1.c0)*(rt0.c2)))))OR(((vt0.c0)*(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((rt0.c2 COLLATE RTRIM)>((((t0.c1, rt0.c0, rt0.c2))!=((vt1.c0, t0.c2, t0.c1)))))  NULLS LAST);
SELECT * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((((((((vt0.c0)AND(((vt1.c0)%(t0.c1)))))AND(((vt1.c0)*(rt0.c2)))))OR(((vt0.c0)*(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM)>((((t0.c1, rt0.c0, rt0.c2))<>((vt1.c0, t0.c2, t0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(((vt1.c0)%(t0.c1)))))AND(((vt1.c0)*(rt0.c2)))))OR(((vt0.c0)*(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((rt0.c2 COLLATE RTRIM)>((((t0.c1, rt0.c0, rt0.c2))!=((vt1.c0, t0.c2, t0.c1)))))  NULLS LAST);
SELECT * FROM vt1, vt0 NOT INDEXED, rt0, t0 WHERE (((((((((vt0.c0)AND(((vt1.c0)%(t0.c1)))))AND(((vt1.c0)*(rt0.c2)))))OR(((vt0.c0)*(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY ((rt0.c2 COLLATE RTRIM)>((((t0.c1, rt0.c0, rt0.c2))<>((vt1.c0, t0.c2, t0.c1)))))  NULLS LAST;
SELECT * FROM t0, rt0, vt0, vt1 WHERE (vt0.c1) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN vt0.c1 THEN ((t0.c2) ISNULL) ELSE t0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN vt0.c1 THEN ((t0.c2) ISNULL) ELSE t0.c1 COLLATE RTRIM END);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (vt0.c1) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN vt0.c1 THEN ((t0.c2) ISNULL) ELSE t0.c1 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN vt0.c1 THEN ((t0.c2) ISNULL) ELSE t0.c1 COLLATE RTRIM END);
SELECT * FROM t0, rt0, vt0, vt1 WHERE (vt0.c1) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN vt0.c1 THEN ((t0.c2) ISNULL) ELSE t0.c1 COLLATE RTRIM END;
SELECT * FROM vt1 CROSS JOIN rt0 ON CAST(CAST(t0.c1 AS INTEGER) AS REAL) RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CAST('-1475291549' AS BLOB))) AND ((x''))) WHERE ((((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))OR(((((t0.c0)AND(t0.c1)))OR(x'')))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))OR(((((t0.c0)AND(t0.c1)))OR(x'')))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(CAST(t0.c1 AS INTEGER) AS REAL) RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CAST('-1475291549' AS BLOB))) AND ((x''))));
SELECT * FROM vt1 CROSS JOIN rt0 ON CAST(CAST(t0.c1 AS INTEGER) AS REAL) RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CAST('-1475291549' AS BLOB))) AND ((x''))) WHERE ((((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))OR(((((t0.c0)AND(t0.c1)))OR(x'')))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))OR(((((t0.c0)AND(t0.c1)))OR(x'')))))OR((~ (t0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CAST(CAST(t0.c1 AS INTEGER) AS REAL) RIGHT OUTER JOIN t0 ON (((t0.c1)) BETWEEN ((CAST('-1475291549' AS BLOB))) AND ((x''))));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((MAX(rt0.c2, t0.c2)) BETWEEN (((((t0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(rt0.c2, t0.c2)) BETWEEN (((((t0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((MAX(rt0.c2, t0.c2)) BETWEEN (((((t0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((MAX(rt0.c2, t0.c2)) BETWEEN (((((t0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((NOT (vt1.c0))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (((MAX(rt0.c2, t0.c2)) BETWEEN (((((t0.c2)AND(rt0.c0)))OR(rt0.c0))) AND ((NOT (vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((TRIM(t0.c0, t0.c2)))!=(((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(t0.c0, t0.c2)))<>(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((TRIM(t0.c0, t0.c2)))!=(((vt0.c0 IN (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((TRIM(t0.c0, t0.c2)))<>(((vt0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((TRIM(t0.c0, t0.c2)))!=(((vt0.c0 IN (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST('OCFW' AS REAL))||((+ (rt0.c1))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((CAST('OCFW' AS REAL))||((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '');
SELECT ALL * FROM rt0, vt0 WHERE (((CAST('OCFW' AS REAL))||((+ (rt0.c1))))) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((CAST('OCFW' AS REAL))||((+ (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY '');
SELECT ALL * FROM rt0, vt0 WHERE (((CAST('OCFW' AS REAL))||((+ (rt0.c1))))) ORDER BY '';
SELECT * FROM t0, rt0, vt0 WHERE ((~ (((vt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((~ (((vt0.c0)IS(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0)IS(rt0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT * FROM t0, rt0, vt0 WHERE ((~ (((vt0.c0)IS(rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON DATETIME(((rt0.c2) IS TRUE), CAST(rt0.c2 AS REAL), ((rt0.c1) IS FALSE)) WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON DATETIME(((rt0.c2) IS TRUE), CAST(rt0.c2 AS REAL), ((rt0.c1) IS FALSE)));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON DATETIME(((rt0.c2) IS TRUE), CAST(rt0.c2 AS REAL), ((rt0.c1) IS FALSE)) WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1, vt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON DATETIME(((rt0.c2) IS TRUE), CAST(rt0.c2 AS REAL), ((rt0.c1) IS FALSE)));
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON DATETIME(((rt0.c2) IS TRUE), CAST(rt0.c2 AS REAL), ((rt0.c1) IS FALSE)) WHERE ((((((rt0.c1, vt0.c1, rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0, vt0.c0, rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c1)))) BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)GLOB(vt0.c0)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((t0.c0)==(t0.c0)) IN ()) WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0) NOT NULL) WHEN vt0.c1 THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND('-806218937')) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.4430120629654034 WHEN ((vt0.c1)-(t0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((t0.c1) IS TRUE) END) ORDER BY HEX(t0.c2 COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0) NOT NULL) WHEN vt0.c1 THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND('-806218937')) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.4430120629654034 WHEN ((vt0.c1)-(t0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c0)==(t0.c0)) IN ()) ORDER BY HEX(t0.c2 COLLATE NOCASE) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((t0.c0)==(t0.c0)) IN ()) WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0) NOT NULL) WHEN vt0.c1 THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND('-806218937')) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.4430120629654034 WHEN ((vt0.c1)-(t0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((t0.c1) IS TRUE) END) ORDER BY HEX(t0.c2 COLLATE NOCASE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0) NOT NULL) WHEN vt0.c1 THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND('-806218937')) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.4430120629654034 WHEN ((vt0.c1)-(t0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((t0.c1) IS TRUE) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((t0.c0)==(t0.c0)) IN ()) ORDER BY HEX(t0.c2 COLLATE NOCASE) ASC  NULLS LAST);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON (((t0.c0)==(t0.c0)) IN ()) WHERE (CASE WHEN ((t0.c2) IS FALSE) THEN ((t0.c0) NOT NULL) WHEN vt0.c1 THEN t0.c2 COLLATE RTRIM WHEN ((t0.c2)AND('-806218937')) THEN t0.c1 WHEN ((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) THEN 0.4430120629654034 WHEN ((vt0.c1)-(t0.c2)) THEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END ELSE ((t0.c1) IS TRUE) END) ORDER BY HEX(t0.c2 COLLATE NOCASE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN (((rt0.c0)||(t0.c0))) AND (CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c0)||(t0.c0))) AND (CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN (((rt0.c0)||(t0.c0))) AND (CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (((rt0.c0)||(t0.c0))) AND (CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0 WHERE (((vt0.c0) BETWEEN (((rt0.c0)||(t0.c0))) AND (CASE t0.c0  WHEN vt1.c0 THEN rt0.c1 END))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1)<(rt0.c2)))))OR(CASE WHEN t0.c1 THEN vt1.c0 END)) INNER JOIN rt0 ON ((rt0.c2) IS FALSE) COLLATE NOCASE COLLATE BINARY WHERE (CASE WHEN ((t0.c0)LIKE(vt1.c0)) THEN '	⼙' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)LIKE(vt1.c0)) THEN '	⼙' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1)<(rt0.c2)))))OR(CASE WHEN t0.c1 THEN vt1.c0 END)) INNER JOIN rt0 ON ((rt0.c2) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1)<(rt0.c2)))))OR(CASE WHEN t0.c1 THEN vt1.c0 END)) INNER JOIN rt0 ON ((rt0.c2) IS FALSE) COLLATE NOCASE COLLATE BINARY WHERE (CASE WHEN ((t0.c0)LIKE(vt1.c0)) THEN '	⼙' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)LIKE(vt1.c0)) THEN '	⼙' END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON t0.c1 RIGHT OUTER JOIN vt1 ON ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1)<(rt0.c2)))))OR(CASE WHEN t0.c1 THEN vt1.c0 END)) INNER JOIN rt0 ON ((rt0.c2) IS FALSE) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1)))>=(((vt0.c0)|(rt0.c2)))) INNER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<(DATE(vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0))) WHERE (((CAST(vt0.c0 AS BLOB))>=(load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>=(load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1)))>=(((vt0.c0)|(rt0.c2)))) INNER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<(DATE(vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0))));
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1)))>=(((vt0.c0)|(rt0.c2)))) INNER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<(DATE(vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0))) WHERE (((CAST(vt0.c0 AS BLOB))>=(load_extension(rt0.c2, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))>=(load_extension(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1)))>=(((vt0.c0)|(rt0.c2)))) INNER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<(DATE(vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0))));
SELECT * FROM vt0 INNER JOIN rt0 ON (((+ (rt0.c1)))>=(((vt0.c0)|(rt0.c2)))) INNER JOIN vt1 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<(DATE(vt0.c0, rt0.c0, rt0.c2, rt0.c0, vt1.c0))) WHERE (((CAST(vt0.c0 AS BLOB))>=(load_extension(rt0.c2, rt0.c0))));
SELECT * FROM rt0 WHERE (CAST(json_array_length(rt0.c0) AS BLOB)) ORDER BY rt0.c2, CAST((NOT ('1520688087')) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CAST((NOT ('1520688087')) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(json_array_length(rt0.c0) AS BLOB)) ORDER BY rt0.c2, CAST((NOT ('1520688087')) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(rt0.c0) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2, CAST((NOT ('1520688087')) AS BLOB) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(json_array_length(rt0.c0) AS BLOB)) ORDER BY rt0.c2, CAST((NOT ('1520688087')) AS BLOB) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND((((t0.c1, vt0.c0, rt0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c2)) AND ((0x4a4ab818, vt1.c0, t0.c1))))))AND(((vt0.c0) IS FALSE)))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)  NULLS FIRST, (((t0.c0))=((rt0.c0))) COLLATE BINARY DESC, (- (CAST(rt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND((((t0.c1, vt0.c0, rt0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c2)) AND ((0x4a4ab818, vt1.c0, t0.c1))))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)  NULLS FIRST, (((t0.c0))=((rt0.c0))) COLLATE BINARY DESC, (- (CAST(rt0.c1 AS INTEGER))) ASC);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND((((t0.c1, vt0.c0, rt0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c2)) AND ((0x4a4ab818, vt1.c0, t0.c1))))))AND(((vt0.c0) IS FALSE)))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)  NULLS FIRST, (((t0.c0))=((rt0.c0))) COLLATE BINARY DESC, (- (CAST(rt0.c1 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND((((t0.c1, vt0.c0, rt0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c2)) AND ((0x4a4ab818, vt1.c0, t0.c1))))))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)  NULLS FIRST, (((t0.c0))=((rt0.c0))) COLLATE BINARY DESC, (- (CAST(rt0.c1 AS INTEGER))) ASC);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE (((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))AND((((t0.c1, vt0.c0, rt0.c2)) BETWEEN ((vt0.c1, vt0.c0, t0.c2)) AND ((0x4a4ab818, vt1.c0, t0.c1))))))AND(((vt0.c0) IS FALSE)))) ORDER BY ((vt1.c0 COLLATE RTRIM) NOTNULL)  NULLS FIRST, (((t0.c0))=((rt0.c0))) COLLATE BINARY DESC, (- (CAST(rt0.c1 AS INTEGER))) ASC;
SELECT * FROM vt1, vt0, rt0, t0 NOT INDEXED WHERE ((- (CASE WHEN '-812754218' THEN t0.c2 ELSE vt1.c0 END))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN '-812754218' THEN t0.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS REAL)  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 NOT INDEXED WHERE ((- (CASE WHEN '-812754218' THEN t0.c2 ELSE vt1.c0 END))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN '-812754218' THEN t0.c2 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS REAL)  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 NOT INDEXED WHERE ((- (CASE WHEN '-812754218' THEN t0.c2 ELSE vt1.c0 END))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS REAL)  NULLS FIRST;
SELECT * FROM rt0, vt1, t0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY CASE (~ (rt0.c0))  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)) THEN (((0X2f9862c1, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN CASE NULL  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-1440737770' WHEN vt1.c0 THEN -1440324150 END THEN (rt0.c0 IN ()) ELSE CAST('Hs]J5Q3^☷' AS BLOB) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (~ (rt0.c0))  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)) THEN (((0x2f9862c1, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN CASE NULL  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-1440737770' WHEN vt1.c0 THEN -1440324150 END THEN (rt0.c0 IN ()) ELSE CAST('Hs]J5Q3^☷' AS BLOB) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY CASE (~ (rt0.c0))  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)) THEN (((0X2f9862c1, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN CASE NULL  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-1440737770' WHEN vt1.c0 THEN -1440324150 END THEN (rt0.c0 IN ()) ELSE CAST('Hs]J5Q3^☷' AS BLOB) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (~ (rt0.c0))  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)) THEN (((0x2f9862c1, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN CASE NULL  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-1440737770' WHEN vt1.c0 THEN -1440324150 END THEN (rt0.c0 IN ()) ELSE CAST('Hs]J5Q3^☷' AS BLOB) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c0))) NOTNULL)) ORDER BY CASE (~ (rt0.c0))  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)AND(rt0.c0)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c0)))AND(vt1.c0)) THEN (((0X2f9862c1, vt1.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) WHEN CASE NULL  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '-1440737770' WHEN vt1.c0 THEN -1440324150 END THEN (rt0.c0 IN ()) ELSE CAST('Hs]J5Q3^☷' AS BLOB) END ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((t0.c2)|(t0.c1)), vt0.c0 COLLATE NOCASE, ((t0.c2) BETWEEN (-1.452910268E9) AND (-808006914))))=((-2.098199642E9, CASE WHEN vt1.c0 THEN t0.c1 WHEN x'' THEN vt0.c0 WHEN 3.49434519E8 THEN vt0.c0 END, (NOT (vt0.c1)))))) ORDER BY CAST((t0.c1 IN ()) AS REAL)  NULLS LAST, NULL ASC  NULLS FIRST, CAST(t0.c0 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(t0.c1)), vt0.c0 COLLATE NOCASE, ((t0.c2) BETWEEN (-1.452910268E9) AND (-808006914))))==((-2.098199642E9, CASE WHEN vt1.c0 THEN t0.c1 WHEN x'' THEN vt0.c0 WHEN 3.49434519E8 THEN vt0.c0 END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((t0.c1 IN ()) AS REAL)  NULLS LAST, NULL ASC  NULLS FIRST, CAST(t0.c0 AS REAL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((t0.c2)|(t0.c1)), vt0.c0 COLLATE NOCASE, ((t0.c2) BETWEEN (-1.452910268E9) AND (-808006914))))=((-2.098199642E9, CASE WHEN vt1.c0 THEN t0.c1 WHEN x'' THEN vt0.c0 WHEN 3.49434519E8 THEN vt0.c0 END, (NOT (vt0.c1)))))) ORDER BY CAST((t0.c1 IN ()) AS REAL)  NULLS LAST, NULL ASC  NULLS FIRST, CAST(t0.c0 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)|(t0.c1)), vt0.c0 COLLATE NOCASE, ((t0.c2) BETWEEN (-1.452910268E9) AND (-808006914))))==((-2.098199642E9, CASE WHEN vt1.c0 THEN t0.c1 WHEN x'' THEN vt0.c0 WHEN 3.49434519E8 THEN vt0.c0 END, (NOT (vt0.c1)))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CAST((t0.c1 IN ()) AS REAL)  NULLS LAST, NULL ASC  NULLS FIRST, CAST(t0.c0 AS REAL) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((((t0.c2)|(t0.c1)), vt0.c0 COLLATE NOCASE, ((t0.c2) BETWEEN (-1.452910268E9) AND (-808006914))))=((-2.098199642E9, CASE WHEN vt1.c0 THEN t0.c1 WHEN x'' THEN vt0.c0 WHEN 3.49434519E8 THEN vt0.c0 END, (NOT (vt0.c1)))))) ORDER BY CAST((t0.c1 IN ()) AS REAL)  NULLS LAST, NULL ASC  NULLS FIRST, CAST(t0.c0 AS REAL) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0, vt1 INDEXED BY i58, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1 INDEXED BY i58, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1 INDEXED BY i58, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, t0, vt1 INDEXED BY i58, vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ((vt0.c1 IN ())))) ORDER BY json_insert(vt0.c0, (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('えC^')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(vt0.c0, (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('えC^'))));
SELECT * FROM vt0 WHERE ((((vt0.c0) ISNULL) IN ((vt0.c1 IN ())))) ORDER BY json_insert(vt0.c0, (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('えC^')));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) ISNULL) IN ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY json_insert(vt0.c0, (((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((x'', vt0.c0, vt0.c1))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('えC^'))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt0 NOT INDEXED RIGHT OUTER JOIN vt0 ON ((vt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c1)IS NOT(rt0.c0 COLLATE NOCASE)) WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) BETWEEN (x'') AND (t0.c1)))) AND (((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1) BETWEEN (x'') AND (t0.c1)))) AND (((t0.c2 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) BETWEEN (x'') AND (t0.c1)))) AND (((t0.c2 IN ())))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1) BETWEEN (x'') AND (t0.c1)))) AND (((t0.c2 IN ()))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c1) BETWEEN (x'') AND (t0.c1)))) AND (((t0.c2 IN ())))));
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY rt0.c2, ((((t0.c1) BETWEEN (NULL) AND (x'')))IS(((rt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)) AND ((((vt0.c1)>=(x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY rt0.c2, ((((t0.c1) BETWEEN (NULL) AND (x'')))IS(((rt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)) AND ((((vt0.c1)>=(x''))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY rt0.c2, ((((t0.c1) BETWEEN (NULL) AND (x'')))IS(((rt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)) AND ((((vt0.c1)>=(x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM rt0, vt1, t0, vt0 ORDER BY rt0.c2, ((((t0.c1) BETWEEN (NULL) AND (x'')))IS(((rt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)) AND ((((vt0.c1)>=(x''))))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1, t0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS REAL)) ORDER BY rt0.c2, ((((t0.c1) BETWEEN (NULL) AND (x'')))IS(((rt0.c0) NOT BETWEEN (t0.c1) AND (vt0.c1)))) DESC  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)) AND ((((vt0.c1)>=(x''))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<<(CAST(t0.c1 AS REAL))) INNER JOIN vt0 ON NULLIF(((t0.c2)==(t0.c1)), t0.c0) FULL OUTER JOIN t0 ON ((t0.c1 COLLATE RTRIM) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<<(CAST(t0.c1 AS REAL))) INNER JOIN vt0 ON NULLIF(((t0.c2)=(t0.c1)), t0.c0) FULL OUTER JOIN t0 ON ((t0.c1 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<<(CAST(t0.c1 AS REAL))) INNER JOIN vt0 ON NULLIF(((t0.c2)==(t0.c1)), t0.c0) FULL OUTER JOIN t0 ON ((t0.c1 COLLATE RTRIM) NOTNULL) WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<<(CAST(t0.c1 AS REAL))) INNER JOIN vt0 ON NULLIF(((t0.c2)=(t0.c1)), t0.c0) FULL OUTER JOIN t0 ON ((t0.c1 COLLATE RTRIM) NOTNULL));
SELECT ALL * FROM rt0, t0 WHERE ((- (((t0.c2) IS FALSE)))) ORDER BY (((+ (t0.c0)))||((NOT (t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (t0.c0)))||((NOT (t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((- (((t0.c2) IS FALSE)))) ORDER BY (((+ (t0.c0)))||((NOT (t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((+ (t0.c0)))||((NOT (t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE ((- (((t0.c2) IS FALSE)))) ORDER BY (((+ (t0.c0)))||((NOT (t0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((-1296747891) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((-1296747891) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((-1296747891) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((-1296747891) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (rt0.c1))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((-1296747891) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (rt0.c1)));
SELECT * FROM vt0, t0 WHERE ((CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt0.c1 END IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((CASE WHEN x'' THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c0 ELSE vt0.c1 END IN ()));
SELECT COUNT(*) FROM vt0, t0 WHERE ('1003468453');
SELECT SUM(count) FROM (SELECT (('1003468453') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('1003468453');
SELECT SUM(count) FROM (SELECT (('1003468453') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('1003468453');
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((- (t0.c1)));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT vt0.c1))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((TYPEOF(DISTINCT vt0.c1))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE ((((((0.6307331415025597) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c0)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((0.6307331415025597) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE ((((((0.6307331415025597) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c0)||(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((0.6307331415025597) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c0)||(vt0.c1)))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt0.c1 IN ()) COLLATE BINARY WHERE ((((((0.6307331415025597) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<((((vt0.c0)||(vt0.c1))))));
SELECT * FROM vt0, rt0, vt1 WHERE (((NULL)OR(((vt0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((vt0.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((NULL)OR(((vt0.c0)+(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((vt0.c0)+(vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (((NULL)OR(((vt0.c0)+(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0) ORDER BY x'c830' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY x'c830' ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0) ORDER BY x'c830' ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY x'c830' ASC);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (rt0.c0) ORDER BY x'c830' ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(0Xffffffffd83d94a4))AND(t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((ABS(0xffffffffd83d94a4))AND(t0.c1)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(0Xffffffffd83d94a4))AND(t0.c1)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((ABS(0xffffffffd83d94a4))AND(t0.c1)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY ((ABS(0Xffffffffd83d94a4))AND(t0.c1)) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((NULL) NOT NULL))AND((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN vt0 ON ((((t0.c2)/(vt0.c0))) IS TRUE) WHERE (((((((((((0.4043960784968943)AND(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR('u>F}>n')))<=((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((0.4043960784968943)AND(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR('u>F}>n')))<=((- (t0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((NULL) NOT NULL))AND((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN vt0 ON ((((t0.c2)/(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((NULL) NOT NULL))AND((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN vt0 ON ((((t0.c2)/(vt0.c0))) IS TRUE) WHERE (((((((((((0.4043960784968943)AND(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR('u>F}>n')))<=((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((0.4043960784968943)AND(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR('u>F}>n')))<=((- (t0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((NULL) NOT NULL))AND((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN vt0 ON ((((t0.c2)/(vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((((NULL) NOT NULL))AND((rt0.c1 IN ()))) LEFT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN vt0 ON ((((t0.c2)/(vt0.c0))) IS TRUE) WHERE (((((((((((0.4043960784968943)AND(vt0.c1)))AND(rt0.c0)))AND(vt1.c0)))OR('u>F}>n')))<=((- (t0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE RTRIM))) ORDER BY LIKELIHOOD((rt0.c0 IN (rt0.c2)), 0.6970225791868844) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY LIKELIHOOD((rt0.c0 IN (rt0.c2)), 0.6970225791868844) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE RTRIM))) ORDER BY LIKELIHOOD((rt0.c0 IN (rt0.c2)), 0.6970225791868844) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY LIKELIHOOD((rt0.c0 IN (rt0.c2)), 0.6970225791868844) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c1 COLLATE RTRIM))) ORDER BY LIKELIHOOD((rt0.c0 IN (rt0.c2)), 0.6970225791868844) DESC;
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CAST(((t0.c0) ISNULL) AS INTEGER));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((0.30267981558853696)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(ABS(vt0.c1))) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY 'nb';
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((0.30267981558853696)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(ABS(vt0.c1))) ORDER BY 'nb');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((0.30267981558853696)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(ABS(vt0.c1))) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY 'nb';
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((((0.30267981558853696)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(ABS(vt0.c1))) ORDER BY 'nb');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((((0.30267981558853696)AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(ABS(vt0.c1))) WHERE ((CAST(vt0.c0 AS TEXT) IN ())) ORDER BY 'nb';
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ())) IS TRUE) RIGHT OUTER JOIN vt1 ON CASE ((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))  WHEN CAST('' AS INTEGER) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN (+ (rt0.c0)) WHEN (~ (vt1.c0)) THEN rt0.c1 COLLATE RTRIM END WHERE ((json_extract('', '', rt0.c0, vt0.c0) IN (((NULL)/(vt0.c1)), ((1.608937016E9)IS(vt0.c1))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((json_extract('', '', rt0.c0, vt0.c0) IN (((NULL)/(vt0.c1)), ((1.608937016E9)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ())) IS TRUE) RIGHT OUTER JOIN vt1 ON CASE ((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))  WHEN CAST('' AS INTEGER) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN (+ (rt0.c0)) WHEN (~ (vt1.c0)) THEN rt0.c1 COLLATE RTRIM END ORDER BY ((vt0.c0 IN ()) IN ()) DESC);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ())) IS TRUE) RIGHT OUTER JOIN vt1 ON CASE ((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))  WHEN CAST('' AS INTEGER) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN (+ (rt0.c0)) WHEN (~ (vt1.c0)) THEN rt0.c1 COLLATE RTRIM END WHERE ((json_extract('', '', rt0.c0, vt0.c0) IN (((NULL)/(vt0.c1)), ((1.608937016E9)IS(vt0.c1))))) ORDER BY ((vt0.c0 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((json_extract('', '', rt0.c0, vt0.c0) IN (((NULL)/(vt0.c1)), ((1.608937016E9)IS(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ())) IS TRUE) RIGHT OUTER JOIN vt1 ON CASE ((((rt0.c2)AND(vt0.c1)))OR(rt0.c2))  WHEN CAST('' AS INTEGER) THEN ((rt0.c2) IS TRUE) WHEN ((((((((rt0.c0)OR(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c1)) THEN (+ (rt0.c0)) WHEN (~ (vt1.c0)) THEN rt0.c1 COLLATE RTRIM END ORDER BY ((vt0.c0 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))OR(LIKELIHOOD(vt1.c0, 0.6502379011854802)))) ORDER BY (((vt1.c0))>((((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))OR(LIKELIHOOD(vt1.c0, 0.6502379011854802)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>((((vt1.c0)!=(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))OR(LIKELIHOOD(vt1.c0, 0.6502379011854802)))) ORDER BY (((vt1.c0))>((((vt1.c0)!=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))OR(LIKELIHOOD(vt1.c0, 0.6502379011854802)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0))>((((vt1.c0)!=(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)AND(CASE vt1.c0  WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)))OR(LIKELIHOOD(vt1.c0, 0.6502379011854802)))) ORDER BY (((vt1.c0))>((((vt1.c0)!=(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CASE (- (t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN vt1.c0 WHEN ((vt0.c0) IS TRUE) THEN rt0.c0 WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN 1837332537 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN vt1.c0 WHEN ((vt0.c0) IS TRUE) THEN rt0.c0 WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN 1837332537 END) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CASE (- (t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN vt1.c0 WHEN ((vt0.c0) IS TRUE) THEN rt0.c0 WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN 1837332537 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN vt1.c0 WHEN ((vt0.c0) IS TRUE) THEN rt0.c0 WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN 1837332537 END) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (CASE (- (t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c1)) THEN vt1.c0 WHEN ((vt0.c0) IS TRUE) THEN rt0.c0 WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c1)) THEN 1837332537 END);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((((NULL IN (rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))OR(((vt0.c1)&(rt0.c2)))))OR(((vt0.c1) BETWEEN (1815217107) AND (vt0.c1))))) ORDER BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))=((((x'')>>(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((NULL IN (rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))OR(((vt0.c1)&(rt0.c2)))))OR(((vt0.c1) BETWEEN (1815217107) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))==((((x'')>>(vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((((NULL IN (rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))OR(((vt0.c1)&(rt0.c2)))))OR(((vt0.c1) BETWEEN (1815217107) AND (vt0.c1))))) ORDER BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))=((((x'')>>(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((NULL IN (rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))OR(((vt0.c1)&(rt0.c2)))))OR(((vt0.c1) BETWEEN (1815217107) AND (vt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))==((((x'')>>(vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((((NULL IN (rt0.c2)))AND(rt0.c1 COLLATE RTRIM)))AND(rt0.c2)))OR(((vt0.c1)&(rt0.c2)))))OR(((vt0.c1) BETWEEN (1815217107) AND (vt0.c1))))) ORDER BY (((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0))))=((((x'')>>(vt1.c0))))) DESC;
SELECT * FROM vt0 WHERE ('<)') ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('<)') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ('<)') ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (('<)') IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ('<)') ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS TRUE), (((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)) IN ());
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (TIME(((vt0.c0) NOT BETWEEN (0.37351272884098885) AND (vt0.c0)), CAST(vt1.c0 AS INTEGER), vt1.c0, vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))) ORDER BY (LAST_INSERT_ROWID() IN ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOT BETWEEN (0.37351272884098885) AND (vt0.c0)), CAST(vt1.c0 AS INTEGER), vt1.c0, vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (LAST_INSERT_ROWID() IN ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (TIME(((vt0.c0) NOT BETWEEN (0.37351272884098885) AND (vt0.c0)), CAST(vt1.c0 AS INTEGER), vt1.c0, vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))) ORDER BY (LAST_INSERT_ROWID() IN ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((TIME(((vt0.c0) NOT BETWEEN (0.37351272884098885) AND (vt0.c0)), CAST(vt1.c0 AS INTEGER), vt1.c0, vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (LAST_INSERT_ROWID() IN ((NOT (vt0.c1)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (TIME(((vt0.c0) NOT BETWEEN (0.37351272884098885) AND (vt0.c0)), CAST(vt1.c0 AS INTEGER), vt1.c0, vt1.c0, ((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))) ORDER BY (LAST_INSERT_ROWID() IN ((NOT (vt0.c1))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c1 WHERE (((GLOB('2138843859', vt0.c1)) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END) AND (((t0.c0) NOT BETWEEN (0.5084743349933395) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((GLOB('2138843859', vt0.c1)) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END) AND (((t0.c0) NOT BETWEEN (0.5084743349933395) AND (t0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c1 WHERE (((GLOB('2138843859', vt0.c1)) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END) AND (((t0.c0) NOT BETWEEN (0.5084743349933395) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((GLOB('2138843859', vt0.c1)) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END) AND (((t0.c0) NOT BETWEEN (0.5084743349933395) AND (t0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON vt0.c1);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON vt0.c1 WHERE (((GLOB('2138843859', vt0.c1)) NOT BETWEEN (CASE t0.c1  WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END) AND (((t0.c0) NOT BETWEEN (0.5084743349933395) AND (t0.c2)))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (x'83b0') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'83b0') IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c0)-(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (x'83b0') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'83b0') IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c0)-(vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (x'83b0') ORDER BY ((vt1.c0 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END) AND (((rt0.c0)-(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN 0.8135062271151592 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (~ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 ELSE (t0.c0 IN (t0.c0, t0.c1)) END) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))>('CV' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN 0.8135062271151592 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (~ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 ELSE (t0.c0 IN (t0.c0, t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))>('CV' COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN 0.8135062271151592 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (~ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 ELSE (t0.c0 IN (t0.c0, t0.c1)) END) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))>('CV' COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN 0.8135062271151592 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (~ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 ELSE (t0.c0 IN (t0.c0, t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))>('CV' COLLATE BINARY)));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN 0.8135062271151592 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END THEN (~ (t0.c1)) WHEN CAST(t0.c2 AS REAL) THEN t0.c2 ELSE (t0.c0 IN (t0.c0, t0.c1)) END) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))>('CV' COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c2) ISNULL) AS BLOB)) ORDER BY CASE ((t0.c2)>=(rt0.c1))  WHEN ((vt0.c0)%(t0.c2)) THEN TRIM(vt0.c1, t0.c1) ELSE CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE ((t0.c2)>=(rt0.c1))  WHEN ((vt0.c0)%(t0.c2)) THEN TRIM(vt0.c1, t0.c1) ELSE CAST(vt0.c0 AS REAL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c2) ISNULL) AS BLOB)) ORDER BY CASE ((t0.c2)>=(rt0.c1))  WHEN ((vt0.c0)%(t0.c2)) THEN TRIM(vt0.c1, t0.c1) ELSE CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY CASE ((t0.c2)>=(rt0.c1))  WHEN ((vt0.c0)%(t0.c2)) THEN TRIM(vt0.c1, t0.c1) ELSE CAST(vt0.c0 AS REAL) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (CAST(((t0.c2) ISNULL) AS BLOB)) ORDER BY CASE ((t0.c2)>=(rt0.c1))  WHEN ((vt0.c0)%(t0.c2)) THEN TRIM(vt0.c1, t0.c1) ELSE CAST(vt0.c0 AS REAL) END DESC  NULLS LAST;
SELECT * FROM vt1, vt0, t0 WHERE (TRIM((- (t0.c1)))) ORDER BY ((((((((t0.c1 COLLATE BINARY)OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)/(8.14048707E8)))))AND(((t0.c1)/('-643244123')))))AND(((((vt1.c0)AND(t0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (t0.c1)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((t0.c1 COLLATE BINARY)OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)/(8.14048707E8)))))AND(((t0.c1)/('-643244123')))))AND(((((vt1.c0)AND(t0.c2)))OR(t0.c1)))));
SELECT * FROM vt1, vt0, t0 WHERE (TRIM((- (t0.c1)))) ORDER BY ((((((((t0.c1 COLLATE BINARY)OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)/(8.14048707E8)))))AND(((t0.c1)/('-643244123')))))AND(((((vt1.c0)AND(t0.c2)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((- (t0.c1)))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((((((((t0.c1 COLLATE BINARY)OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)/(8.14048707E8)))))AND(((t0.c1)/('-643244123')))))AND(((((vt1.c0)AND(t0.c2)))OR(t0.c1)))));
SELECT * FROM vt1, vt0, t0 WHERE (TRIM((- (t0.c1)))) ORDER BY ((((((((t0.c1 COLLATE BINARY)OR(CAST(t0.c0 AS TEXT))))AND(((t0.c0)/(8.14048707E8)))))AND(((t0.c1)/('-643244123')))))AND(((((vt1.c0)AND(t0.c2)))OR(t0.c1))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((x'')AND(((((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND(((((vt1.c0)OR(t0.c2)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND(((((vt1.c0)OR(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((x'')AND(((((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND(((((vt1.c0)OR(t0.c2)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')AND(((((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND(((((vt1.c0)OR(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((x'')AND(((((((((t0.c2)OR(vt0.c1)))AND(t0.c0)))OR(t0.c0)))OR(NULL)))))AND(((((vt1.c0)OR(t0.c2)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((((vt0.c1) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((((vt0.c1) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((((vt0.c1) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS TRUE)) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((((vt0.c1) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (((rt0.c0) IS TRUE)) ORDER BY (((vt0.c0)) BETWEEN ((((t0.c0)<>(t0.c1)))) AND ((((vt0.c1) ISNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((json_type(vt1.c0)) IS TRUE)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (-292007641) AND (1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (-292007641) AND (1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((json_type(vt1.c0)) IS TRUE)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (-292007641) AND (1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_type(vt1.c0)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (-292007641) AND (1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((json_type(vt1.c0)) IS TRUE)) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (-292007641) AND (1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 CROSS JOIN rt0 ON (~ (rt0.c1)) WHERE (((((((t0.c1)*(vt0.c1)))AND((((rt0.c1))>((t0.c0))))))AND(LAST_INSERT_ROWID()))) ORDER BY (((rt0.c0))<>(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)*(vt0.c1)))AND((((rt0.c1))>((t0.c0))))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, t0, vt0 CROSS JOIN rt0 ON (~ (rt0.c1)) ORDER BY (((rt0.c0))<>(((rt0.c1 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 CROSS JOIN rt0 ON (~ (rt0.c1)) WHERE (((((((t0.c1)*(vt0.c1)))AND((((rt0.c1))>((t0.c0))))))AND(LAST_INSERT_ROWID()))) ORDER BY (((rt0.c0))<>(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)*(vt0.c1)))AND((((rt0.c1))>((t0.c0))))))AND(LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1, t0, vt0 CROSS JOIN rt0 ON (~ (rt0.c1)) ORDER BY (((rt0.c0))<>(((rt0.c1 IN ()))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 CROSS JOIN rt0 ON (~ (rt0.c1)) WHERE (((((((t0.c1)*(vt0.c1)))AND((((rt0.c1))>((t0.c0))))))AND(LAST_INSERT_ROWID()))) ORDER BY (((rt0.c0))<>(((rt0.c1 IN ()))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY ((((0.16498466789307853)AND(CAST(t0.c1 AS TEXT))))AND(((vt0.c0)OR(vt0.c1)))) ASC  NULLS LAST, CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((((0.16498466789307853)AND(CAST(t0.c1 AS TEXT))))AND(((vt0.c0)OR(vt0.c1)))) ASC  NULLS LAST, CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)) END DESC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY ((((0.16498466789307853)AND(CAST(t0.c1 AS TEXT))))AND(((vt0.c0)OR(vt0.c1)))) ASC  NULLS LAST, CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM vt0, t0, vt1, rt0 ORDER BY ((((0.16498466789307853)AND(CAST(t0.c1 AS TEXT))))AND(((vt0.c0)OR(vt0.c1)))) ASC  NULLS LAST, CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)) END DESC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE ((- (rt0.c2))) ORDER BY ((((0.16498466789307853)AND(CAST(t0.c1 AS TEXT))))AND(((vt0.c0)OR(vt0.c1)))) ASC  NULLS LAST, CASE WHEN CASE WHEN t0.c0 THEN rt0.c1 END THEN ((t0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c1)))AND(vt0.c0)))LIKE(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))LIKE(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c1)))AND(vt0.c0)))LIKE(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ((((((((NULL)OR(vt0.c1)))AND(vt0.c0)))LIKE(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)OR(vt0.c1)))AND(vt0.c0)))LIKE(SQLITE_VERSION())));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (((CASE WHEN t0.c2 THEN rt0.c0 END) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c2) NOT NULL))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CASE t0.c0  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CASE t0.c0  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CASE t0.c0  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CASE t0.c0  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS TEXT)) AND (CASE t0.c0  WHEN t0.c2 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((t0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((t0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c1 IN ()) IN ()));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CAST((t0.c0 IN ()) AS TEXT)) ORDER BY ((t0.c1 IN ()) IN ());
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((CASE WHEN t0.c1 THEN -9.62504737E8 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND (((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN -9.62504737E8 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND (((t0.c1 IN ())))));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((CASE WHEN t0.c1 THEN -9.62504737E8 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND (((t0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c1 THEN -9.62504737E8 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, t0, vt1 ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND (((t0.c1 IN ())))));
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE (((CASE WHEN t0.c1 THEN -9.62504737E8 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) ORDER BY (((t0.c1)) NOT BETWEEN (((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) AND (((t0.c1 IN ()))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c1) IS FALSE))GLOB(t0.c2)) CROSS JOIN rt0 ON ((((vt0.c1 IN ())))==((rt0.c1))) WHERE (((CASE NULL  WHEN t0.c0 THEN x'' ELSE rt0.c2 END)*((t0.c0 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN x'' ELSE rt0.c2 END)*((t0.c0 IN (t0.c2))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c1) IS FALSE))GLOB(t0.c2)) CROSS JOIN rt0 ON ((((vt0.c1 IN ())))==((rt0.c1))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c1) IS FALSE))GLOB(t0.c2)) CROSS JOIN rt0 ON ((((vt0.c1 IN ())))==((rt0.c1))) WHERE (((CASE NULL  WHEN t0.c0 THEN x'' ELSE rt0.c2 END)*((t0.c0 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE NULL  WHEN t0.c0 THEN x'' ELSE rt0.c2 END)*((t0.c0 IN (t0.c2))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c1) IS FALSE))GLOB(t0.c2)) CROSS JOIN rt0 ON ((((vt0.c1 IN ())))==((rt0.c1))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((t0.c1) IS FALSE))GLOB(t0.c2)) CROSS JOIN rt0 ON ((((vt0.c1 IN ())))==((rt0.c1))) WHERE (((CASE NULL  WHEN t0.c0 THEN x'' ELSE rt0.c2 END)*((t0.c0 IN (t0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '34626568', vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '34626568', vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '34626568', vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '34626568', vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '34626568', vt1.c0  NULLS LAST;
SELECT * FROM rt0 INNER JOIN t0 ON ((x'cb53') NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON (NOT (((rt0.c0)OR(rt0.c1)))) WHERE (((t0.c2)&(t0.c0)) COLLATE NOCASE) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, ((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END)AND(CASE t0.c1  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END)))OR((~ (rt0.c0))))  NULLS FIRST, CASE WHEN LIKE(rt0.c2, 0.2756557425439152, 'y') THEN QUOTE(rt0.c1) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)&(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((x'cb53') NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON (NOT (((rt0.c0)OR(rt0.c1)))) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, ((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END)AND(CASE t0.c1  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END)))OR((~ (rt0.c0))))  NULLS FIRST, CASE WHEN LIKE(rt0.c2, 0.2756557425439152, 'y') THEN QUOTE(rt0.c1) ELSE t0.c0 END);
SELECT * FROM rt0 INNER JOIN t0 ON ((x'cb53') NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON (NOT (((rt0.c0)OR(rt0.c1)))) WHERE (((t0.c2)&(t0.c0)) COLLATE NOCASE) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, ((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END)AND(CASE t0.c1  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END)))OR((~ (rt0.c0))))  NULLS FIRST, CASE WHEN LIKE(rt0.c2, 0.2756557425439152, 'y') THEN QUOTE(rt0.c1) ELSE t0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)&(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((x'cb53') NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON (NOT (((rt0.c0)OR(rt0.c1)))) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, ((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END)AND(CASE t0.c1  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END)))OR((~ (rt0.c0))))  NULLS FIRST, CASE WHEN LIKE(rt0.c2, 0.2756557425439152, 'y') THEN QUOTE(rt0.c1) ELSE t0.c0 END);
SELECT * FROM rt0 INNER JOIN t0 ON ((x'cb53') NOT BETWEEN ((NOT (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)) CROSS JOIN vt0 ON (NOT (((rt0.c0)OR(rt0.c1)))) WHERE (((t0.c2)&(t0.c0)) COLLATE NOCASE) ORDER BY (t0.c0 IN ()) COLLATE RTRIM, ((((CASE rt0.c1  WHEN t0.c2 THEN rt0.c0 END)AND(CASE t0.c1  WHEN t0.c2 THEN rt0.c1 ELSE vt0.c0 END)))OR((~ (rt0.c0))))  NULLS FIRST, CASE WHEN LIKE(rt0.c2, 0.2756557425439152, 'y') THEN QUOTE(rt0.c1) ELSE t0.c0 END;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((CAST(vt0.c1 AS TEXT))OR(LIKELY(DISTINCT vt0.c1))))OR(vt1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON (~ (rt0.c1)) COLLATE BINARY WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((CAST(vt0.c1 AS TEXT))OR(LIKELY(DISTINCT vt0.c1))))OR(vt1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON (~ (rt0.c1)) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((CAST(vt0.c1 AS TEXT))OR(LIKELY(DISTINCT vt0.c1))))OR(vt1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON (~ (rt0.c1)) COLLATE BINARY WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((CAST(vt0.c1 AS TEXT))OR(LIKELY(DISTINCT vt0.c1))))OR(vt1.c0 COLLATE NOCASE)) RIGHT OUTER JOIN vt1 ON (~ (rt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('-1130659861') ORDER BY (+ (((t0.c2)!=(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1130659861') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (((t0.c2)!=(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('-1130659861') ORDER BY (+ (((t0.c2)!=(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1130659861') IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (+ (((t0.c2)!=(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0, vt0 WHERE ('-1130659861') ORDER BY (+ (((t0.c2)!=(rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY (((rt0.c2)==(rt0.c1)) IN ((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0x347ed659 END)), '^A'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)==(rt0.c1)) IN ((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0x347ed659 END)), '^A'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY (((rt0.c2)==(rt0.c1)) IN ((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0x347ed659 END)), '^A'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)==(rt0.c1)) IN ((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0x347ed659 END)), '^A'  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS BLOB)) ORDER BY (((rt0.c2)==(rt0.c1)) IN ((NOT (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c0 END)) ASC, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN 0x347ed659 END)), '^A'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ ((+ (vt1.c0))))) ORDER BY (- (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c1)>(rt0.c2)) AS TEXT) WHERE (TRIM((((t0.c2))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c2))<((rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c1)>(rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c1)>(rt0.c2)) AS TEXT) WHERE (TRIM((((t0.c2))<((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TRIM((((t0.c2))<((rt0.c0))))) IS TRUE)  as count FROM rt0, t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c1)>(rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0, vt1 RIGHT OUTER JOIN vt0 ON CAST(((t0.c1)>(rt0.c2)) AS TEXT) WHERE (TRIM((((t0.c2))<((rt0.c0)))));
SELECT * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) CROSS JOIN vt0 ON ((((((((((t0.c1)%(t0.c1)))AND(NULL COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(t0.c2)))))AND(((t0.c1) IS FALSE))))OR(((vt1.c0) NOT BETWEEN (NULL) AND (t0.c2)))) LEFT OUTER JOIN vt1 ON ((0.5956922375287965)||((vt0.c1 IN (t0.c0, t0.c0)))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt0.c0))))) ORDER BY ((t0.c2)AND(t0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) CROSS JOIN vt0 ON ((((((((((t0.c1)%(t0.c1)))AND(NULL COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(t0.c2)))))AND(((t0.c1) IS FALSE))))OR(((vt1.c0) NOT BETWEEN (NULL) AND (t0.c2)))) LEFT OUTER JOIN vt1 ON ((0.5956922375287965)||((vt0.c1 IN (t0.c0, t0.c0)))) ORDER BY ((t0.c2)AND(t0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) CROSS JOIN vt0 ON ((((((((((t0.c1)%(t0.c1)))AND(NULL COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(t0.c2)))))AND(((t0.c1) IS FALSE))))OR(((vt1.c0) NOT BETWEEN (NULL) AND (t0.c2)))) LEFT OUTER JOIN vt1 ON ((0.5956922375287965)||((vt0.c1 IN (t0.c0, t0.c0)))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt0.c0))))) ORDER BY ((t0.c2)AND(t0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) CROSS JOIN vt0 ON ((((((((((t0.c1)%(t0.c1)))AND(NULL COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(t0.c2)))))AND(((t0.c1) IS FALSE))))OR(((vt1.c0) NOT BETWEEN (NULL) AND (t0.c2)))) LEFT OUTER JOIN vt1 ON ((0.5956922375287965)||((vt0.c1 IN (t0.c0, t0.c0)))) ORDER BY ((t0.c2)AND(t0.c2 COLLATE BINARY)) DESC);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON UPPER(DISTINCT ((rt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c2))) CROSS JOIN vt0 ON ((((((((((t0.c1)%(t0.c1)))AND(NULL COLLATE RTRIM)))OR(((((rt0.c2)AND(t0.c0)))OR(t0.c2)))))AND(((t0.c1) IS FALSE))))OR(((vt1.c0) NOT BETWEEN (NULL) AND (t0.c2)))) LEFT OUTER JOIN vt1 ON ((0.5956922375287965)||((vt0.c1 IN (t0.c0, t0.c0)))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c0 END) BETWEEN (((t0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (((vt1.c0)&(vt0.c0))))) ORDER BY ((t0.c2)AND(t0.c2 COLLATE BINARY)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0)))>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))>(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0)))>(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0)))>(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- ('oF|')) INNER JOIN rt0 ON vt0.c1 WHERE ((((((vt0.c0 IN (rt0.c0)))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c0)))OR(-1207920300)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (rt0.c0)))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c0)))OR(-1207920300)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- ('oF|')) INNER JOIN rt0 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- ('oF|')) INNER JOIN rt0 ON vt0.c1 WHERE ((((((vt0.c0 IN (rt0.c0)))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c0)))OR(-1207920300)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN (rt0.c0)))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c0)))OR(-1207920300)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x'')))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (- ('oF|')) INNER JOIN rt0 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (- ('oF|')) INNER JOIN rt0 ON vt0.c1 WHERE ((((((vt0.c0 IN (rt0.c0)))AND(((((((((((((t0.c1)AND(t0.c1)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))AND(t0.c0)))OR(-1207920300)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x''))))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c0)))AND(t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND(t0.c0))) ISNULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOTNULL)) ORDER BY vt0.c1 DESC;
SELECT * FROM t0 CROSS JOIN vt1 ON (((NULL))==((vt1.c0))) FULL OUTER JOIN rt0 ON ((t0.c1)>=(t0.c1)) COLLATE RTRIM WHERE ((((((- (rt0.c0)))AND(((t0.c1)>>(rt0.c0)))))AND((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, rt0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))AND(((t0.c1)>>(rt0.c0)))))AND((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, rt0.c2, t0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((NULL))=((vt1.c0))) FULL OUTER JOIN rt0 ON ((t0.c1)>=(t0.c1)) COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN vt1 ON (((NULL))==((vt1.c0))) FULL OUTER JOIN rt0 ON ((t0.c1)>=(t0.c1)) COLLATE RTRIM WHERE ((((((- (rt0.c0)))AND(((t0.c1)>>(rt0.c0)))))AND((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, rt0.c2, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c0)))AND(((t0.c1)>>(rt0.c0)))))AND((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, rt0.c2, t0.c2)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((NULL))=((vt1.c0))) FULL OUTER JOIN rt0 ON ((t0.c1)>=(t0.c1)) COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN vt1 ON (((NULL))==((vt1.c0))) FULL OUTER JOIN rt0 ON ((t0.c1)>=(t0.c1)) COLLATE RTRIM WHERE ((((((- (rt0.c0)))AND(((t0.c1)>>(rt0.c0)))))AND((((NULL, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, rt0.c1)) AND ((t0.c1, rt0.c2, t0.c2))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((vt1.c0) IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE 'NJ_9' END)))AND(IFNULL(t0.c1, vt1.c0))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c2)OR(t0.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE 'NJ_9' END)))AND(IFNULL(t0.c1, vt1.c0))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c2)OR(t0.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((vt1.c0) IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE 'NJ_9' END)))AND(IFNULL(t0.c1, vt1.c0))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c2)OR(t0.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0) IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE 'NJ_9' END)))AND(IFNULL(t0.c1, vt1.c0))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c2)OR(t0.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((vt1.c0) IS TRUE))AND(CASE WHEN t0.c2 THEN t0.c0 ELSE 'NJ_9' END)))AND(IFNULL(t0.c1, vt1.c0))))AND(CAST(t0.c0 AS INTEGER))))AND(((((t0.c2)OR(t0.c1)))OR(vt1.c0)))));
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((((vt0.c1)|(t0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)>>(vt1.c0)))<<(UPPER('-1146906593'))) ASC  NULLS LAST, 0.3874762921026893 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(t0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((rt0.c1)>>(vt1.c0)))<<(UPPER('-1146906593'))) ASC  NULLS LAST, 0.3874762921026893 DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((((vt0.c1)|(t0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)>>(vt1.c0)))<<(UPPER('-1146906593'))) ASC  NULLS LAST, 0.3874762921026893 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)|(t0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY ((((rt0.c1)>>(vt1.c0)))<<(UPPER('-1146906593'))) ASC  NULLS LAST, 0.3874762921026893 DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0, t0 WHERE (((((vt0.c1)|(t0.c2))) NOT BETWEEN (rt0.c1) AND (rt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c1)>>(vt1.c0)))<<(UPPER('-1146906593'))) ASC  NULLS LAST, 0.3874762921026893 DESC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (0.45364277216906324);
SELECT SUM(count) FROM (SELECT ALL ((0.45364277216906324) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (0.45364277216906324);
SELECT SUM(count) FROM (SELECT ALL ((0.45364277216906324) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (0.45364277216906324);
SELECT COUNT(*) FROM vt0 WHERE (json((((('0.840306143608716')AND(vt0.c0)))AND(vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json((((('0.840306143608716')AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (json((((('0.840306143608716')AND(vt0.c0)))AND(vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json((((('0.840306143608716')AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c0))))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (json((((('0.840306143608716')AND(vt0.c0)))AND(vt0.c1)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c1)) AND (((+ (vt0.c0))))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (((t0.c1 IN ()) IN (((rt0.c1) NOTNULL)))) ORDER BY '' ASC  NULLS LAST, (+ ((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((rt0.c2, t0.c1, rt0.c1)) AND ((t0.c0, '0.2877022546304764', rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY '' ASC  NULLS LAST, (+ ((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((rt0.c2, t0.c1, rt0.c1)) AND ((t0.c0, '0.2877022546304764', rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c1 IN ()) IN (((rt0.c1) NOTNULL)))) ORDER BY '' ASC  NULLS LAST, (+ ((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((rt0.c2, t0.c1, rt0.c1)) AND ((t0.c0, '0.2877022546304764', rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt0 ORDER BY '' ASC  NULLS LAST, (+ ((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((rt0.c2, t0.c1, rt0.c1)) AND ((t0.c0, '0.2877022546304764', rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((t0.c1 IN ()) IN (((rt0.c1) NOTNULL)))) ORDER BY '' ASC  NULLS LAST, (+ ((((rt0.c1, rt0.c0, t0.c1)) NOT BETWEEN ((rt0.c2, t0.c1, rt0.c1)) AND ((t0.c0, '0.2877022546304764', rt0.c1)))))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE ((+ ((('-1188429561')-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1188429561')-(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((+ ((('-1188429561')-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((('-1188429561')-(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((+ ((('-1188429561')-(rt0.c1)))));
SELECT * FROM vt0 INDEXED BY i58, t0 WHERE (((((vt0.c1)IS(vt0.c0)))IS NOT(((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))IS NOT(((t0.c2) BETWEEN (vt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i58, t0);
SELECT * FROM vt0 INDEXED BY i58, t0 WHERE (((((vt0.c1)IS(vt0.c0)))IS NOT(((t0.c2) BETWEEN (vt0.c1) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)IS(vt0.c0)))IS NOT(((t0.c2) BETWEEN (vt0.c1) AND (t0.c2))))) IS TRUE)  as count FROM vt0 INDEXED BY i58, t0);
SELECT * FROM rt0 CROSS JOIN vt1 ON (NOT ((vt1.c0 IN ()))) FULL OUTER JOIN t0 ON ((CASE t0.c1  WHEN 0Xffffffffab50a217 THEN rt0.c1 END)IS NOT(((t0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((((((((rt0.c0)AND(t0.c1)))AND(vt1.c0)))AND(t0.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND (''))) ORDER BY ((((0.94749910382343) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE 0.11813515997466251  WHEN vt1.c0 THEN x'' END) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c1)))AND(vt1.c0)))AND(t0.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND (''))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT ((vt1.c0 IN ()))) FULL OUTER JOIN t0 ON ((CASE t0.c1  WHEN 0xffffffffab50a217 THEN rt0.c1 END)IS NOT(((t0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY ((((0.94749910382343) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE 0.11813515997466251  WHEN vt1.c0 THEN x'' END) AND (x'')) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON (NOT ((vt1.c0 IN ()))) FULL OUTER JOIN t0 ON ((CASE t0.c1  WHEN 0Xffffffffab50a217 THEN rt0.c1 END)IS NOT(((t0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((((((((rt0.c0)AND(t0.c1)))AND(vt1.c0)))AND(t0.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND (''))) ORDER BY ((((0.94749910382343) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE 0.11813515997466251  WHEN vt1.c0 THEN x'' END) AND (x'')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)AND(t0.c1)))AND(vt1.c0)))AND(t0.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND (''))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (NOT ((vt1.c0 IN ()))) FULL OUTER JOIN t0 ON ((CASE t0.c1  WHEN 0xffffffffab50a217 THEN rt0.c1 END)IS NOT(((t0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY ((((0.94749910382343) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE 0.11813515997466251  WHEN vt1.c0 THEN x'' END) AND (x'')) DESC);
SELECT * FROM rt0 CROSS JOIN vt1 ON (NOT ((vt1.c0 IN ()))) FULL OUTER JOIN t0 ON ((CASE t0.c1  WHEN 0Xffffffffab50a217 THEN rt0.c1 END)IS NOT(((t0.c0) IS TRUE))) LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (((((((((((rt0.c0)AND(t0.c1)))AND(vt1.c0)))AND(t0.c0)))OR(rt0.c2))) NOT BETWEEN ((+ (rt0.c1))) AND (''))) ORDER BY ((((0.94749910382343) BETWEEN (rt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE 0.11813515997466251  WHEN vt1.c0 THEN x'' END) AND (x'')) DESC;
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (CASE WHEN ((x'')/(vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN (((t0.c0, t0.c2, t0.c0, rt0.c2, NULL)) BETWEEN ((t0.c2, vt0.c0, vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, t0.c0, t0.c2, vt1.c0, vt1.c0))) THEN -352901328 WHEN ((vt1.c0)IS NOT(t0.c1)) THEN CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'')/(vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN (((t0.c0, t0.c2, t0.c0, rt0.c2, NULL)) BETWEEN ((t0.c2, vt0.c0, vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, t0.c0, t0.c2, vt1.c0, vt1.c0))) THEN -352901328 WHEN ((vt1.c0)IS NOT(t0.c1)) THEN CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (CASE WHEN ((x'')/(vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN (((t0.c0, t0.c2, t0.c0, rt0.c2, NULL)) BETWEEN ((t0.c2, vt0.c0, vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, t0.c0, t0.c2, vt1.c0, vt1.c0))) THEN -352901328 WHEN ((vt1.c0)IS NOT(t0.c1)) THEN CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'')/(vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN (((t0.c0, t0.c2, t0.c0, rt0.c2, NULL)) BETWEEN ((t0.c2, vt0.c0, vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, t0.c0, t0.c2, vt1.c0, vt1.c0))) THEN -352901328 WHEN ((vt1.c0)IS NOT(t0.c1)) THEN CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, vt1, t0, rt0);
SELECT ALL * FROM vt0, vt1, t0, rt0 WHERE (CASE WHEN ((x'')/(vt0.c1)) THEN t0.c0 COLLATE RTRIM WHEN (((t0.c0, t0.c2, t0.c0, rt0.c2, NULL)) BETWEEN ((t0.c2, vt0.c0, vt0.c1, vt0.c1, rt0.c2)) AND ((rt0.c1, t0.c0, t0.c2, vt1.c0, vt1.c0))) THEN -352901328 WHEN ((vt1.c0)IS NOT(t0.c1)) THEN CASE vt0.c0  WHEN t0.c1 THEN vt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR(((((t0.c1)AND(t0.c2)))OR(t0.c0)), (rt0.c1 IN (rt0.c1)))) ORDER BY TRIM((NOT ('1377955417'))) ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((((t0.c1)AND(t0.c2)))OR(t0.c0)), (rt0.c1 IN (rt0.c1)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, rt0, vt0 ORDER BY TRIM((NOT ('1377955417'))) ASC);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR(((((t0.c1)AND(t0.c2)))OR(t0.c0)), (rt0.c1 IN (rt0.c1)))) ORDER BY TRIM((NOT ('1377955417'))) ASC;
SELECT SUM(count) FROM (SELECT ((SUBSTR(((((t0.c1)AND(t0.c2)))OR(t0.c0)), (rt0.c1 IN (rt0.c1)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, rt0, vt0 ORDER BY TRIM((NOT ('1377955417'))) ASC);
SELECT COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (SUBSTR(((((t0.c1)AND(t0.c2)))OR(t0.c0)), (rt0.c1 IN (rt0.c1)))) ORDER BY TRIM((NOT ('1377955417'))) ASC;
SELECT * FROM t0 WHERE (('-1e500' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1e500' COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('-1e500' COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1e500' COLLATE BINARY IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (('-1e500' COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (TRIM(ABS(t0.c2), ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(ABS(t0.c2), ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (TRIM(ABS(t0.c2), ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(ABS(t0.c2), ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (TRIM(ABS(t0.c2), ((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))) ORDER BY (((rt0.c0) IS TRUE) IN ()) DESC;
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((QUOTE(0.3309515324929154))&(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(0.3309515324929154))&(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((QUOTE(0.3309515324929154))&(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(0.3309515324929154))&(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT * FROM vt1, rt0, vt0, t0 WHERE (((QUOTE(0.3309515324929154))&(((rt0.c1) NOT NULL))));
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c1)) THEN (((t0.c1))<((vt0.c1))) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c1)) THEN (((t0.c1))<((vt0.c1))) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c1)) THEN (((t0.c1))<((vt0.c1))) ELSE CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c1)) THEN (((t0.c1))<((vt0.c1))) ELSE CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (CASE WHEN ((((t0.c0)OR(vt0.c1)))AND(t0.c1)) THEN (((t0.c1))<((vt0.c1))) ELSE CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((DATETIME(NULL, rt0.c0, t0.c0))AND(((rt0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c1) IS FALSE))) FULL OUTER JOIN t0 ON (((((237011822) ISNULL), ((rt0.c2)AND(rt0.c0)), NULL COLLATE BINARY))>=((((vt1.c0) ISNULL), CAST(t0.c1 AS BLOB), ((((vt1.c0)AND(vt1.c0)))OR(t0.c1))))) WHERE (((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c0 END)AND(COALESCE(t0.c2, rt0.c2))))AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, (- (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, (rt0.c1 IN ()) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c0 END)AND(COALESCE(t0.c2, rt0.c2))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((DATETIME(NULL, rt0.c0, t0.c0))AND(((rt0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c1) IS FALSE))) FULL OUTER JOIN t0 ON (((((237011822) ISNULL), ((rt0.c2)AND(rt0.c0)), NULL COLLATE BINARY))>=((((vt1.c0) ISNULL), CAST(t0.c1 AS BLOB), ((((vt1.c0)AND(vt1.c0)))OR(t0.c1))))) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, (- (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, (rt0.c1 IN ()) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON ((((DATETIME(NULL, rt0.c0, t0.c0))AND(((rt0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c1) IS FALSE))) FULL OUTER JOIN t0 ON (((((237011822) ISNULL), ((rt0.c2)AND(rt0.c0)), NULL COLLATE BINARY))>=((((vt1.c0) ISNULL), CAST(t0.c1 AS BLOB), ((((vt1.c0)AND(vt1.c0)))OR(t0.c1))))) WHERE (((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c0 END)AND(COALESCE(t0.c2, rt0.c2))))AND(rt0.c0 COLLATE BINARY))) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, (- (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, (rt0.c1 IN ()) COLLATE BINARY COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE rt0.c0 END)AND(COALESCE(t0.c2, rt0.c2))))AND(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((DATETIME(NULL, rt0.c0, t0.c0))AND(((rt0.c1) BETWEEN (t0.c2) AND (t0.c1)))))OR(((t0.c1) IS FALSE))) FULL OUTER JOIN t0 ON (((((237011822) ISNULL), ((rt0.c2)AND(rt0.c0)), NULL COLLATE BINARY))>=((((vt1.c0) ISNULL), CAST(t0.c1 AS BLOB), ((((vt1.c0)AND(vt1.c0)))OR(t0.c1))))) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))OR(t0.c0))) NOT BETWEEN (((vt1.c0) IS TRUE)) AND (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) ASC  NULLS LAST, (- (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, (rt0.c1 IN ()) COLLATE BINARY COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2) ISNULL))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(t0.c0)))OR(t0.c1)) AS TEXT) CROSS JOIN t0 ON CASE ((vt1.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)LIKE(t0.c1)) ELSE ((t0.c0)>>(t0.c1)) END WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (-1820429536))) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((t0.c2)OR(vt0.c0)))OR(t0.c1)))) DESC, ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (-1820429536))) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(t0.c0)))OR(t0.c1)) AS TEXT) CROSS JOIN t0 ON CASE ((vt1.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)LIKE(t0.c1)) ELSE ((t0.c0)>>(t0.c1)) END ORDER BY ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((t0.c2)OR(vt0.c0)))OR(t0.c1)))) DESC, ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(t0.c0)))OR(t0.c1)) AS TEXT) CROSS JOIN t0 ON CASE ((vt1.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)LIKE(t0.c1)) ELSE ((t0.c0)>>(t0.c1)) END WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (-1820429536))) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((t0.c2)OR(vt0.c0)))OR(t0.c1)))) DESC, ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT BETWEEN (t0.c2) AND (-1820429536))) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(t0.c0)))OR(t0.c1)) AS TEXT) CROSS JOIN t0 ON CASE ((vt1.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)LIKE(t0.c1)) ELSE ((t0.c0)>>(t0.c1)) END ORDER BY ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((t0.c2)OR(vt0.c0)))OR(t0.c1)))) DESC, ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(((((vt0.c1)AND(t0.c0)))OR(t0.c1)) AS TEXT) CROSS JOIN t0 ON CASE ((vt1.c0)OR(vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)LIKE(t0.c1)) ELSE ((t0.c0)>>(t0.c1)) END WHERE (((((t0.c1) NOT BETWEEN (t0.c2) AND (-1820429536))) NOT BETWEEN ((~ (t0.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((((t0.c2) NOT BETWEEN (vt0.c1) AND (t0.c0)))OR(((t0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((t0.c2)OR(vt0.c0)))OR(t0.c1)))) DESC, ((((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c2))) NOTNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('^A'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('^A'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('^A'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('^A'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('^A'))) NOT NULL));
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)  NULLS FIRST, (((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN 0xffffffff894bee3f ELSE NULL END)))OR(((((x'')OR(rt0.c2)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)  NULLS FIRST, (((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN 0Xffffffff894bee3f ELSE NULL END)))OR(((((x'')OR(rt0.c2)))AND(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)  NULLS FIRST, (((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN 0xffffffff894bee3f ELSE NULL END)))OR(((((x'')OR(rt0.c2)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)  NULLS FIRST, (((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN 0Xffffffff894bee3f ELSE NULL END)))OR(((((x'')OR(rt0.c2)))AND(vt0.c1))))  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (vt0.c0) ORDER BY CAST(((vt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)  NULLS FIRST, (((((rt0.c1 IN ()))OR(CASE WHEN vt0.c0 THEN 0xffffffff894bee3f ELSE NULL END)))OR(((((x'')OR(rt0.c2)))AND(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '	⼙' CROSS JOIN vt0 ON (+ ((((rt0.c2))=((rt0.c0))))) WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((rt0.c0, 0.3924020653990886, x'3a15'))==((vt0.c1, rt0.c2, rt0.c1)))) AND (((((vt0.c1)AND(vt0.c1)))OR(rt0.c0))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN ((((rt0.c0, 0.3924020653990886, x'3a15'))==((vt0.c1, rt0.c2, rt0.c1)))) AND (((((vt0.c1)AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '	⼙' CROSS JOIN vt0 ON (+ ((((rt0.c2))==((rt0.c0))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '	⼙' CROSS JOIN vt0 ON (+ ((((rt0.c2))=((rt0.c0))))) WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((rt0.c0, 0.3924020653990886, x'3a15'))==((vt0.c1, rt0.c2, rt0.c1)))) AND (((((vt0.c1)AND(vt0.c1)))OR(rt0.c0))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOT BETWEEN ((((rt0.c0, 0.3924020653990886, x'3a15'))==((vt0.c1, rt0.c2, rt0.c1)))) AND (((((vt0.c1)AND(vt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON '	⼙' CROSS JOIN vt0 ON (+ ((((rt0.c2))==((rt0.c0))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON '	⼙' CROSS JOIN vt0 ON (+ ((((rt0.c2))=((rt0.c0))))) WHERE ((((NOT (vt1.c0))) NOT BETWEEN ((((rt0.c0, 0.3924020653990886, x'3a15'))==((vt0.c1, rt0.c2, rt0.c1)))) AND (((((vt0.c1)AND(vt0.c1)))OR(rt0.c0))))) ORDER BY CAST(((vt0.c1)LIKE(vt1.c0)) AS TEXT);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LENGTH(vt1.c0) IN (((t0.c2)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((LENGTH(vt1.c0) IN (((t0.c2)%(t0.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LENGTH(vt1.c0) IN (((t0.c2)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((LENGTH(vt1.c0) IN (((t0.c2)%(t0.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((LENGTH(vt1.c0) IN (((t0.c2)%(t0.c1)))));
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE (+ (t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE (+ (t0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE (+ (t0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0, rt0 ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE (+ (t0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt0 WHERE (CAST(HEX(DISTINCT vt0.c0) AS NUMERIC)) ORDER BY CASE WHEN x'' THEN vt0.c0 COLLATE RTRIM ELSE (+ (t0.c1)) END  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE ((t0.c2 COLLATE RTRIM IN (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE RTRIM IN (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((t0.c2 COLLATE RTRIM IN (((t0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((t0.c2 COLLATE RTRIM IN (((t0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((t0.c2 COLLATE RTRIM IN (((t0.c1) NOTNULL))));
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(UPPER(t0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(t0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(UPPER(t0.c2) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(t0.c2) AS TEXT)) IS TRUE)  as count FROM rt0, vt0, t0, vt1);
SELECT * FROM rt0, vt0, t0, vt1 WHERE (CAST(UPPER(t0.c2) AS TEXT));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))<=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))<=((vt1.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<=((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))<=((vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1)+(t0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c1)AND(x'a795')))OR(t0.c0)) IN (((t0.c2) IS TRUE)))  NULLS FIRST, (- ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)+(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1)AND(x'a795')))OR(t0.c0)) IN (((t0.c2) IS TRUE)))  NULLS FIRST, (- ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1)+(t0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c1)AND(x'a795')))OR(t0.c0)) IN (((t0.c2) IS TRUE)))  NULLS FIRST, (- ((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)+(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((vt0.c1)AND(x'a795')))OR(t0.c0)) IN (((t0.c2) IS TRUE)))  NULLS FIRST, (- ((t0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CAST(((t0.c1)+(t0.c0)) AS NUMERIC)) ORDER BY (((((vt0.c1)AND(x'a795')))OR(t0.c0)) IN (((t0.c2) IS TRUE)))  NULLS FIRST, (- ((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((((((((((t0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(((t0.c0) IS TRUE))))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(((t0.c0) IS TRUE))))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((((((((((t0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(((t0.c0) IS TRUE))))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(((t0.c0) IS TRUE))))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, t0, vt1 WHERE (((((((((((((t0.c0)AND(rt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(((t0.c0) IS TRUE))))AND(vt1.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE ((~ (0.3530099647854712))) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))=((0.20473792357095))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.3530099647854712))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))==((0.20473792357095))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (0.3530099647854712))) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))=((0.20473792357095))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0.3530099647854712))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))==((0.20473792357095))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((~ (0.3530099647854712))) ORDER BY (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))))=((0.20473792357095))) DESC  NULLS FIRST;
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (CASE WHEN t0.c1 THEN rt0.c1 END IN ()) INNER JOIN vt0 ON x'0d72' WHERE (((0.8931840043289946) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.8931840043289946) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (CASE WHEN t0.c1 THEN rt0.c1 END IN ()) INNER JOIN vt0 ON x'0d72');
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (CASE WHEN t0.c1 THEN rt0.c1 END IN ()) INNER JOIN vt0 ON x'0d72' WHERE (((0.8931840043289946) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((0.8931840043289946) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (CASE WHEN t0.c1 THEN rt0.c1 END IN ()) INNER JOIN vt0 ON x'0d72');
SELECT * FROM rt0, t0 CROSS JOIN vt1 ON (CASE WHEN t0.c1 THEN rt0.c1 END IN ()) INNER JOIN vt0 ON x'0d72' WHERE (((0.8931840043289946) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((((((((vt0.c0)AND(t0.c2)))AND(t0.c2)))OR(vt0.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET('|Bqu'))IS NOT(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)AND(((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))))AND((+ (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET('|Bqu'))IS NOT(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((((((vt1.c0 COLLATE RTRIM)AND(((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))))AND((+ (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET('|Bqu'))IS NOT(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)AND(((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))))AND((+ (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, NULL DESC;
SELECT SUM(count) FROM (SELECT ((((SQLITE_COMPILEOPTION_GET('|Bqu'))IS NOT(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0, t0 ORDER BY ((((((((vt1.c0 COLLATE RTRIM)AND(((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))))AND((+ (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, NULL DESC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0 WHERE (((SQLITE_COMPILEOPTION_GET('|Bqu'))IS NOT(CAST(vt1.c0 AS TEXT)))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)AND(((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c1)))))AND((+ (rt0.c0)))))AND(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)))))AND((vt0.c0 IN (vt0.c0))))  NULLS FIRST, NULL DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((PRINTF(rt0.c1))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, ((rt0.c2)IS((((rt0.c0, 0.35606820834239716, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((PRINTF(rt0.c1))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, ((rt0.c2)IS((((rt0.c0, 0.35606820834239716, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((PRINTF(rt0.c1))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, ((rt0.c2)IS((((rt0.c0, 0.35606820834239716, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((PRINTF(rt0.c1))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, ((rt0.c2)IS((((rt0.c0, 0.35606820834239716, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((PRINTF(rt0.c1))<<(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, ((rt0.c2)IS((((rt0.c0, 0.35606820834239716, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c2)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON (((rt0.c0)>=(t0.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (((rt0.c0)>=(t0.c2)) IN ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON (((rt0.c0)>=(t0.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON (((rt0.c0)>=(t0.c2)) IN ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON (((rt0.c0)>=(t0.c2)) IN ((rt0.c0 IN ()))) WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, vt0.c0)))))>=((((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, vt0.c0)))))>=((((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, vt0.c0)))))>=((((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, vt0.c0)))))>=((((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM t0, rt0, vt0);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (((((((rt0.c1, rt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, vt0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, vt0.c0)))))>=((((rt0.c2) BETWEEN (t0.c0) AND (vt0.c0))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0, t0.c0, t0.c2))<>((t0.c0, t0.c2, vt1.c0)))))>((((t0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c0, t0.c2))!=((t0.c0, t0.c2, vt1.c0)))))>((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0, t0.c0, t0.c2))<>((t0.c0, t0.c2, vt1.c0)))))>((((t0.c1) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0, t0.c0, t0.c2))!=((t0.c0, t0.c2, vt1.c0)))))>((((t0.c1) IS TRUE))))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0, t0.c0, t0.c2))<>((t0.c0, t0.c2, vt1.c0)))))>((((t0.c1) IS TRUE)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED((NOT (rt0.c1))) WHERE (CAST((((rt0.c2))<>((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<>((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED((NOT (rt0.c1))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED((NOT (rt0.c1))) WHERE (CAST((((rt0.c2))<>((rt0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2))<>((rt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED((NOT (rt0.c1))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON SQLITE_COMPILEOPTION_USED((NOT (rt0.c1))) WHERE (CAST((((rt0.c2))<>((rt0.c0))) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY LIKE(t0.c1, ((((t0.c1)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKE(t0.c1, ((((t0.c1)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY LIKE(t0.c1, ((((t0.c1)OR(vt0.c0)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKE(t0.c1, ((((t0.c1)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS REAL)) ORDER BY LIKE(t0.c1, ((((t0.c1)OR(vt0.c0)))AND(vt0.c0)));
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT ALL * FROM rt0 CROSS JOIN t0 ON json_insert((- (rt0.c0)), (t0.c0 IN ()), rt0.c0 COLLATE NOCASE) WHERE ((((NOT (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_insert((- (rt0.c0)), (t0.c0 IN ()), rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM rt0 CROSS JOIN t0 ON json_insert((- (rt0.c0)), (t0.c0 IN ()), rt0.c0 COLLATE NOCASE) WHERE ((((NOT (t0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON json_insert((- (rt0.c0)), (t0.c0 IN ()), rt0.c0 COLLATE NOCASE));
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(NULL)))AND(vt1.c0))))) ORDER BY (0.5408425446447838 IN ()) DESC  NULLS LAST, 'k' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (0.5408425446447838 IN ()) DESC  NULLS LAST, 'k' DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(NULL)))AND(vt1.c0))))) ORDER BY (0.5408425446447838 IN ()) DESC  NULLS LAST, 'k' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(NULL)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (0.5408425446447838 IN ()) DESC  NULLS LAST, 'k' DESC);
SELECT * FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (((((vt1.c0)AND(NULL)))AND(vt1.c0))))) ORDER BY (0.5408425446447838 IN ()) DESC  NULLS LAST, 'k' DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CHAR(vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY CHAR(vt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CHAR(vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY CHAR(vt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (vt0.c0) ORDER BY CHAR(vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((',demRzl' IN ()), (((vt0.c0))=((vt0.c0))), ((0.8229178017395647)<=(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((0.04910348780680651, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((',demRzl' IN ()), (((vt0.c0))==((vt0.c0))), ((0.8229178017395647)<=(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((0.04910348780680651, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((',demRzl' IN ()), (((vt0.c0))=((vt0.c0))), ((0.8229178017395647)<=(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((0.04910348780680651, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((((',demRzl' IN ()), (((vt0.c0))==((vt0.c0))), ((0.8229178017395647)<=(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((0.04910348780680651, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((',demRzl' IN ()), (((vt0.c0))=((vt0.c0))), ((0.8229178017395647)<=(vt0.c1))))<((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((x'', vt0.c1, vt0.c1)) AND ((0.04910348780680651, vt0.c1, vt0.c0))), vt0.c1 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (x'5440') ORDER BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c2)||(t0.c1)) WHEN rt0.c1 THEN ((((rt0.c2)OR('Q^')))OR(t0.c1)) ELSE ((vt1.c0)<=(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'5440') IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c2)||(t0.c1)) WHEN rt0.c1 THEN ((((rt0.c2)OR('Q^')))OR(t0.c1)) ELSE ((vt1.c0)<=(x'')) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (x'5440') ORDER BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c2)||(t0.c1)) WHEN rt0.c1 THEN ((((rt0.c2)OR('Q^')))OR(t0.c1)) ELSE ((vt1.c0)<=(x'')) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'5440') IS TRUE)  as count FROM t0, vt1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c2)||(t0.c1)) WHEN rt0.c1 THEN ((((rt0.c2)OR('Q^')))OR(t0.c1)) ELSE ((vt1.c0)<=(x'')) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0 WHERE (x'5440') ORDER BY CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)) THEN vt0.c1 COLLATE RTRIM WHEN CAST(t0.c1 AS BLOB) THEN ((rt0.c2)||(t0.c1)) WHEN rt0.c1 THEN ((((rt0.c2)OR('Q^')))OR(t0.c1)) ELSE ((vt1.c0)<=(x'')) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON NULL WHERE (((((((NULL)AND(rt0.c0)))OR(vt0.c1)))>=((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt0.c0)))OR(vt0.c1)))>=((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON NULL WHERE (((((((NULL)AND(rt0.c0)))OR(vt0.c1)))>=((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(rt0.c0)))OR(vt0.c1)))>=((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt0, vt1 RIGHT OUTER JOIN t0 ON (NOT (t0.c0)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON NULL WHERE (((((((NULL)AND(rt0.c0)))OR(vt0.c1)))>=((NOT (rt0.c0)))));
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0) ISNULL))OR(((0Xffffffffb27e1b2a) BETWEEN (rt0.c0) AND ('570087642')))))AND(((rt0.c1)<>(t0.c2)))))AND(((t0.c2) NOT NULL))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(((0Xffffffffb27e1b2a) BETWEEN (rt0.c0) AND ('570087642')))))AND(((rt0.c1)<>(t0.c2)))))AND(((t0.c2) NOT NULL))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0) ISNULL))OR(((0Xffffffffb27e1b2a) BETWEEN (rt0.c0) AND ('570087642')))))AND(((rt0.c1)<>(t0.c2)))))AND(((t0.c2) NOT NULL))))AND(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) ISNULL))OR(((0Xffffffffb27e1b2a) BETWEEN (rt0.c0) AND ('570087642')))))AND(((rt0.c1)<>(t0.c2)))))AND(((t0.c2) NOT NULL))))AND(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN t0);
SELECT * FROM rt0, vt0 NATURAL JOIN t0 WHERE (((((((((((vt0.c0) ISNULL))OR(((0Xffffffffb27e1b2a) BETWEEN (rt0.c0) AND ('570087642')))))AND(((rt0.c1)<>(t0.c2)))))AND(((t0.c2) NOT NULL))))AND(((rt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(rt0.c1)))OR((- (t0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((rt0.c2, -6.43244123E8, t0.c1)) BETWEEN (((((rt0.c0))>=((t0.c1))), rt0.c1, '1288106726')) AND (((rt0.c0 IN (rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(rt0.c1)))OR((- (t0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, -6.43244123E8, t0.c1)) BETWEEN (((((rt0.c0))>=((t0.c1))), rt0.c1, '1288106726')) AND (((rt0.c0 IN (rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), HEX(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(rt0.c1)))OR((- (t0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((rt0.c2, -6.43244123E8, t0.c1)) BETWEEN (((((rt0.c0))>=((t0.c1))), rt0.c1, '1288106726')) AND (((rt0.c0 IN (rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), HEX(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(rt0.c1)))OR((- (t0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, -6.43244123E8, t0.c1)) BETWEEN (((((rt0.c0))>=((t0.c1))), rt0.c1, '1288106726')) AND (((rt0.c0 IN (rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), HEX(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((((((((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))AND(rt0.c1)))OR((- (t0.c1)))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) ORDER BY (((rt0.c2, -6.43244123E8, t0.c1)) BETWEEN (((((rt0.c0))>=((t0.c1))), rt0.c1, '1288106726')) AND (((rt0.c0 IN (rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)), HEX(rt0.c2))));
SELECT * FROM t0 INNER JOIN rt0 ON json_quote(0xffffffffa9665944) LEFT OUTER JOIN vt0 ON NULL WHERE (x'0229');
SELECT SUM(count) FROM (SELECT ALL ((x'0229') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON json_quote(0Xffffffffa9665944) LEFT OUTER JOIN vt0 ON NULL);
SELECT * FROM t0 INNER JOIN rt0 ON json_quote(0xffffffffa9665944) LEFT OUTER JOIN vt0 ON NULL WHERE (x'0229');
SELECT SUM(count) FROM (SELECT ALL ((x'0229') IS TRUE)  as count FROM t0 INNER JOIN rt0 ON json_quote(0Xffffffffa9665944) LEFT OUTER JOIN vt0 ON NULL);
SELECT * FROM t0 INNER JOIN rt0 ON json_quote(0xffffffffa9665944) LEFT OUTER JOIN vt0 ON NULL WHERE (x'0229');
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0)AND(vt0.c1 COLLATE RTRIM)) WHERE ((((t0.c1)) BETWEEN ((((((((((vt0.c0)AND(t0.c1)))AND('-309269677')))OR(t0.c1)))OR(t0.c1)))) AND ((COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((((((((vt0.c0)AND(t0.c1)))AND('-309269677')))OR(t0.c1)))OR(t0.c1)))) AND ((COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0)AND(vt0.c1 COLLATE RTRIM)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0)AND(vt0.c1 COLLATE RTRIM)) WHERE ((((t0.c1)) BETWEEN ((((((((((vt0.c0)AND(t0.c1)))AND('-309269677')))OR(t0.c1)))OR(t0.c1)))) AND ((COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((((((((((vt0.c0)AND(t0.c1)))AND('-309269677')))OR(t0.c1)))OR(t0.c1)))) AND ((COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, t0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0)AND(vt0.c1 COLLATE RTRIM)));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON ((vt0.c0)AND(vt0.c1 COLLATE RTRIM)) WHERE ((((t0.c1)) BETWEEN ((((((((((vt0.c0)AND(t0.c1)))AND('-309269677')))OR(t0.c1)))OR(t0.c1)))) AND ((COALESCE(DISTINCT t0.c1, t0.c1, t0.c2, t0.c1)))));
SELECT * FROM rt0, vt1, vt0 WHERE ((- (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1))))) ORDER BY (((rt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN (TRIM('	#ፇ')) AND ('V'));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN (TRIM('	#ፇ')) AND ('V')));
SELECT * FROM rt0, vt1, vt0 WHERE ((- (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1))))) ORDER BY (((rt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN (TRIM('	#ፇ')) AND ('V'));
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN (TRIM('	#ፇ')) AND ('V')));
SELECT * FROM rt0, vt1, vt0 WHERE ((- (((((((((rt0.c0)OR(rt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1))))) ORDER BY (((rt0.c1)IS NOT(vt0.c1)) IN ()) ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt0.c1 END) BETWEEN (TRIM('	#ፇ')) AND ('V'));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c0)>>(t0.c1)))GLOB('702045983')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(t0.c1)))GLOB('702045983'))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c0)>>(t0.c1)))GLOB('702045983')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(t0.c1)))GLOB('702045983'))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE (((((vt0.c0)>>(t0.c1)))GLOB('702045983')));
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON (((+ (rt0.c1))) NOTNULL) CROSS JOIN vt0 ON (+ (((rt0.c0) ISNULL))) WHERE (UNLIKELY(((t0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c1) IS FALSE))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (((+ (rt0.c1))) NOTNULL) CROSS JOIN vt0 ON (+ (((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON (((+ (rt0.c1))) NOTNULL) CROSS JOIN vt0 ON (+ (((rt0.c0) ISNULL))) WHERE (UNLIKELY(((t0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((t0.c1) IS FALSE))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN t0 ON (((+ (rt0.c1))) NOTNULL) CROSS JOIN vt0 ON (+ (((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1, rt0 INNER JOIN t0 ON (((+ (rt0.c1))) NOTNULL) CROSS JOIN vt0 ON (+ (((rt0.c0) ISNULL))) WHERE (UNLIKELY(((t0.c1) IS FALSE)));
SELECT * FROM t0 WHERE ('-1241489326') ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (('-1241489326') IS TRUE)  as count FROM t0 ORDER BY t0.c2);
SELECT * FROM t0 WHERE ('-1241489326') ORDER BY t0.c2;
SELECT SUM(count) FROM (SELECT (('-1241489326') IS TRUE)  as count FROM t0 ORDER BY t0.c2);
SELECT * FROM t0 WHERE ('-1241489326') ORDER BY t0.c2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))) AND (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) IS FALSE)) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c0))) AND (CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((LIKELY(DISTINCT t0.c0)) NOTNULL)) ORDER BY ((1185309513)|(CAST(t0.c2 AS REAL))) DESC, CASE WHEN ((t0.c1)OR(-5.40283044E8)) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST, (((~ (t0.c2))) NOT BETWEEN (HEX(DISTINCT t0.c2)) AND (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT t0.c0)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((1185309513)|(CAST(t0.c2 AS REAL))) DESC, CASE WHEN ((t0.c1)OR(-5.40283044E8)) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST, (((~ (t0.c2))) NOT BETWEEN (HEX(DISTINCT t0.c2)) AND (t0.c2)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((LIKELY(DISTINCT t0.c0)) NOTNULL)) ORDER BY ((1185309513)|(CAST(t0.c2 AS REAL))) DESC, CASE WHEN ((t0.c1)OR(-5.40283044E8)) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST, (((~ (t0.c2))) NOT BETWEEN (HEX(DISTINCT t0.c2)) AND (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT t0.c0)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 ORDER BY ((1185309513)|(CAST(t0.c2 AS REAL))) DESC, CASE WHEN ((t0.c1)OR(-5.40283044E8)) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST, (((~ (t0.c2))) NOT BETWEEN (HEX(DISTINCT t0.c2)) AND (t0.c2)) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((LIKELY(DISTINCT t0.c0)) NOTNULL)) ORDER BY ((1185309513)|(CAST(t0.c2 AS REAL))) DESC, CASE WHEN ((t0.c1)OR(-5.40283044E8)) THEN CAST(t0.c0 AS TEXT) END ASC  NULLS LAST, (((~ (t0.c2))) NOT BETWEEN (HEX(DISTINCT t0.c2)) AND (t0.c2)) ASC;
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c2))==((((t0.c2)<=(t0.c1)))))) ORDER BY CAST(0.3924020653990886 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))==((((t0.c2)<=(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CAST(0.3924020653990886 AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c2))==((((t0.c2)<=(t0.c1)))))) ORDER BY CAST(0.3924020653990886 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))==((((t0.c2)<=(t0.c1)))))) IS TRUE)  as count FROM rt0, vt0, t0, vt1 ORDER BY CAST(0.3924020653990886 AS TEXT)  NULLS FIRST);
SELECT * FROM rt0, vt0, t0, vt1 WHERE ((((rt0.c2))==((((t0.c2)<=(t0.c1)))))) ORDER BY CAST(0.3924020653990886 AS TEXT)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0, t0);
SELECT ALL * FROM vt1, rt0, vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND((rt0.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND((rt0.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))AND(CAST(rt0.c2 AS TEXT))))AND((rt0.c0 IN ())))) ORDER BY ((rt0.c2 COLLATE RTRIM)/(CAST(rt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (TYPEOF(rt0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULL) AND (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (TYPEOF(rt0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULL) AND (TYPEOF(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (TYPEOF(rt0.c0)))) ORDER BY NULL;
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((MAX(vt0.c1, t0.c1) IN ())) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (t0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((MAX(vt0.c1, t0.c1) IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN (t0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((MAX(vt0.c1, t0.c1) IN ())) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (t0.c2 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((MAX(vt0.c1, t0.c1) IN ())) IS TRUE)  as count FROM rt0, t0, vt1, vt0 ORDER BY (((vt0.c0)AND(vt0.c0)) IN (t0.c2 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, t0, vt1, vt0 WHERE ((MAX(vt0.c1, t0.c1) IN ())) ORDER BY (((vt0.c0)AND(vt0.c0)) IN (t0.c2 COLLATE RTRIM)) ASC;
SELECT * FROM t0 INDEXED BY i58, vt1, vt0 WHERE ((((+ (t0.c2)))LIKE(((t0.c1)LIKE(vt0.c1))))) ORDER BY (((((t0.c0 IN ()))OR((((vt0.c1))==((t0.c1))))))OR(((-1849044293) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c2)))LIKE(((t0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i58, vt1, vt0 ORDER BY (((((t0.c0 IN ()))OR((((vt0.c1))=((t0.c1))))))OR(((-1849044293) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 INDEXED BY i58, vt1, vt0 WHERE ((((+ (t0.c2)))LIKE(((t0.c1)LIKE(vt0.c1))))) ORDER BY (((((t0.c0 IN ()))OR((((vt0.c1))==((t0.c1))))))OR(((-1849044293) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c2)))LIKE(((t0.c1)LIKE(vt0.c1))))) IS TRUE)  as count FROM t0 INDEXED BY i58, vt1, vt0 ORDER BY (((((t0.c0 IN ()))OR((((vt0.c1))=((t0.c1))))))OR(((-1849044293) NOTNULL)))  NULLS LAST);
SELECT * FROM t0 INDEXED BY i58, vt1, vt0 WHERE ((((+ (t0.c2)))LIKE(((t0.c1)LIKE(vt0.c1))))) ORDER BY (((((t0.c0 IN ()))OR((((vt0.c1))==((t0.c1))))))OR(((-1849044293) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) CROSS JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c1 END)IS NOT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY ((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)<(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) CROSS JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c1 END)IS NOT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) ORDER BY ((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)<(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*((vt0.c1 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) CROSS JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c1 END)IS NOT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY ((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)<(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*((vt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) CROSS JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c1 END)IS NOT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) ORDER BY ((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)<(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*((vt0.c1 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((vt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) IN ()) CROSS JOIN vt0 ON ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c1 END)IS NOT(((rt0.c2) BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (x'') ORDER BY ((CASE t0.c0  WHEN rt0.c2 THEN t0.c0 ELSE rt0.c0 END)<(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, ((((((vt0.c0)OR(rt0.c0)))AND(rt0.c2)))*((vt0.c1 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY CAST(vt0.c1 AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0.9097234899995085 WHERE (((json_type(rt0.c0))IS NOT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END))) ORDER BY RTRIM(((rt0.c2)<(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((json_type(rt0.c0))IS NOT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON 0.9097234899995085 ORDER BY RTRIM(((rt0.c2)<(rt0.c1))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0.9097234899995085 WHERE (((json_type(rt0.c0))IS NOT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END))) ORDER BY RTRIM(((rt0.c2)<(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((json_type(rt0.c0))IS NOT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON 0.9097234899995085 ORDER BY RTRIM(((rt0.c2)<(rt0.c1))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON 0.9097234899995085 WHERE (((json_type(rt0.c0))IS NOT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END))) ORDER BY RTRIM(((rt0.c2)<(rt0.c1)));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((((((((((((vt1.c0)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(((((((((t0.c1)AND(vt1.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))))OR(((vt1.c0)*(t0.c1)))))OR(CAST(t0.c1 AS TEXT))))AND((~ (t0.c1)))))OR((t0.c1 IN ())))) ORDER BY (((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c2))))>(((t0.c2 IN (t0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((vt1.c0)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(((((((((t0.c1)AND(vt1.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))))OR(((vt1.c0)*(t0.c1)))))OR(CAST(t0.c1 AS TEXT))))AND((~ (t0.c1)))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c2))))>(((t0.c2 IN (t0.c2, t0.c0))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((((((((((((vt1.c0)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(((((((((t0.c1)AND(vt1.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))))OR(((vt1.c0)*(t0.c1)))))OR(CAST(t0.c1 AS TEXT))))AND((~ (t0.c1)))))OR((t0.c1 IN ())))) ORDER BY (((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c2))))>(((t0.c2 IN (t0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((((vt1.c0)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(((((((((t0.c1)AND(vt1.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))))OR(((vt1.c0)*(t0.c1)))))OR(CAST(t0.c1 AS TEXT))))AND((~ (t0.c1)))))OR((t0.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 ORDER BY (((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c2))))>(((t0.c2 IN (t0.c2, t0.c0))))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((((((((((((((((((((vt1.c0)OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))OR(t0.c0)))OR(((((((((t0.c1)AND(vt1.c0)))AND(t0.c1)))OR(t0.c0)))OR(t0.c1)))))OR(((vt1.c0)*(t0.c1)))))OR(CAST(t0.c1 AS TEXT))))AND((~ (t0.c1)))))OR((t0.c1 IN ())))) ORDER BY (((((((((((vt1.c0)AND(t0.c0)))OR(vt1.c0)))OR(t0.c1)))OR(t0.c2))))>(((t0.c2 IN (t0.c2, t0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN vt1 ON '%T' FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)OR(NULL)) WHERE ((((NOT (t0.c0)))>>(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((+ (rt0.c2))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END) AND ((NOT ('-646169918')))) DESC  NULLS LAST, ((NULL)AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>>(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN vt1 ON '%T' FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)OR(NULL)) ORDER BY (((+ (rt0.c2))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END) AND ((NOT ('-646169918')))) DESC  NULLS LAST, ((NULL)AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN vt1 ON '%T' FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)OR(NULL)) WHERE ((((NOT (t0.c0)))>>(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((+ (rt0.c2))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END) AND ((NOT ('-646169918')))) DESC  NULLS LAST, ((NULL)AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0)))>>(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)OR(rt0.c2)) AS TEXT) RIGHT OUTER JOIN vt1 ON '%T' FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)OR(NULL)) ORDER BY (((+ (rt0.c2))) BETWEEN (CASE WHEN vt1.c0 THEN t0.c1 ELSE rt0.c2 END) AND ((NOT ('-646169918')))) DESC  NULLS LAST, ((NULL)AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS FIRST, CAST(CAST(t0.c1 AS INTEGER) AS BLOB) ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c1)<(t0.c2)) THEN t0.c0 END) ORDER BY (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN ((t0.c1)<(t0.c2)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0))));
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c1)<(t0.c2)) THEN t0.c0 END) ORDER BY (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE t0.c2  WHEN ((t0.c1)<(t0.c2)) THEN t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0))));
SELECT ALL * FROM t0 WHERE (CASE t0.c2  WHEN ((t0.c1)<(t0.c2)) THEN t0.c0 END) ORDER BY (((t0.c2)) NOT BETWEEN ((((t0.c2) ISNULL))) AND ((t0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((- (vt0.c1))) IS FALSE)) ORDER BY (((((((t0.c1)OR(vt1.c0)))OR(t0.c1))))<=((CASE WHEN x'' THEN vt0.c1 ELSE rt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (((((((t0.c1)OR(vt1.c0)))OR(t0.c1))))<=((CASE WHEN x'' THEN vt0.c1 ELSE rt0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((- (vt0.c1))) IS FALSE)) ORDER BY (((((((t0.c1)OR(vt1.c0)))OR(t0.c1))))<=((CASE WHEN x'' THEN vt0.c1 ELSE rt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1, t0 ORDER BY (((((((t0.c1)OR(vt1.c0)))OR(t0.c1))))<=((CASE WHEN x'' THEN vt0.c1 ELSE rt0.c0 END))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1, t0 WHERE ((((- (vt0.c1))) IS FALSE)) ORDER BY (((((((t0.c1)OR(vt1.c0)))OR(t0.c1))))<=((CASE WHEN x'' THEN vt0.c1 ELSE rt0.c0 END))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY -438211272  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY -438211272  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE RTRIM) ORDER BY -438211272  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY -438211272  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('1913533622');
SELECT SUM(count) FROM (SELECT (('1913533622') IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('1913533622');
SELECT SUM(count) FROM (SELECT (('1913533622') IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ('1913533622');
SELECT * FROM vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (CASE WHEN vt1.c0 THEN rt0.c2 END IN ()) ASC);
SELECT * FROM vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c2 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (CASE WHEN vt1.c0 THEN rt0.c2 END IN ()) ASC);
SELECT * FROM vt1, vt0, rt0 WHERE (vt0.c1) ORDER BY (CASE WHEN vt1.c0 THEN rt0.c2 END IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((NULL)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))))OR(((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c1)))OR('2081994410')))))OR(((t0.c1)<('1e500')))))AND((((NULL, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))))OR(((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c1)))OR('2081994410')))))OR(((t0.c1)<('1e500')))))AND((((NULL, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((NULL)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))))OR(((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c1)))OR('2081994410')))))OR(((t0.c1)<('1e500')))))AND((((NULL, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))))OR(((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c1)))OR('2081994410')))))OR(((t0.c1)<('1e500')))))AND((((NULL, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0)))))) IS TRUE)  as count FROM rt0, t0, vt0);
SELECT ALL COUNT(*) FROM rt0, t0, vt0 WHERE (((((((((NULL)AND(((vt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)))))OR(((((((((rt0.c2)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c1)))OR('2081994410')))))OR(((t0.c1)<('1e500')))))AND((((NULL, rt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c1, vt0.c1)) AND ((rt0.c0, rt0.c2, vt0.c0))))));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((- (vt0.c0)))OR((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))OR((NOT (vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((- (vt0.c0)))OR((NOT (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))OR((NOT (vt0.c1))))  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY (((- (vt0.c0)))OR((NOT (vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((vt1.c0)<=(rt0.c1)))LIKE(((0.6481136696703733)<(rt0.c1))))) ORDER BY ((t0.c1)LIKE(COALESCE(t0.c1, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(rt0.c1)))LIKE(((0.6481136696703733)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((t0.c1)LIKE(COALESCE(t0.c1, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((vt1.c0)<=(rt0.c1)))LIKE(((0.6481136696703733)<(rt0.c1))))) ORDER BY ((t0.c1)LIKE(COALESCE(t0.c1, rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<=(rt0.c1)))LIKE(((0.6481136696703733)<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1, t0 ORDER BY ((t0.c1)LIKE(COALESCE(t0.c1, rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1, t0 WHERE (((((vt1.c0)<=(rt0.c1)))LIKE(((0.6481136696703733)<(rt0.c1))))) ORDER BY ((t0.c1)LIKE(COALESCE(t0.c1, rt0.c1))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE WHEN vt0.c1 THEN t0.c1 ELSE vt0.c1 END))>=((((((vt1.c0)AND(-1.468681333E9)))OR(vt1.c0)))))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, '-1726148924')) AND ((vt1.c0, vt0.c0, '559024528'))))))AND(t0.c2));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN t0.c1 ELSE vt0.c1 END))>=((((((vt1.c0)AND(-1.468681333E9)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, '-1726148924')) AND ((vt1.c0, vt0.c0, '559024528'))))))AND(t0.c2)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE WHEN vt0.c1 THEN t0.c1 ELSE vt0.c1 END))>=((((((vt1.c0)AND(-1.468681333E9)))OR(vt1.c0)))))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, '-1726148924')) AND ((vt1.c0, vt0.c0, '559024528'))))))AND(t0.c2));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN t0.c1 ELSE vt0.c1 END))>=((((((vt1.c0)AND(-1.468681333E9)))OR(vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, '-1726148924')) AND ((vt1.c0, vt0.c0, '559024528'))))))AND(t0.c2)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE WHEN vt0.c1 THEN t0.c1 ELSE vt0.c1 END))>=((((((vt1.c0)AND(-1.468681333E9)))OR(vt1.c0)))))) ORDER BY ((((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))OR((((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((t0.c0, vt1.c0, '-1726148924')) AND ((vt1.c0, vt0.c0, '559024528'))))))AND(t0.c2));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((COALESCE(vt1.c0, vt1.c0, rt0.c2, vt0.c0))LIKE((((rt0.c2))>((rt0.c0))))) CROSS JOIN vt1 ON rt0.c2 WHERE ((((vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 END)) AND (('dkl''')))) ORDER BY CAST(((((0.6996085789652827)AND(vt0.c0)))OR('')) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 END)) AND (('dkl''')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((COALESCE(vt1.c0, vt1.c0, rt0.c2, vt0.c0))LIKE((((rt0.c2))>((rt0.c0))))) CROSS JOIN vt1 ON rt0.c2 ORDER BY CAST(((((0.6996085789652827)AND(vt0.c0)))OR('')) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((COALESCE(vt1.c0, vt1.c0, rt0.c2, vt0.c0))LIKE((((rt0.c2))>((rt0.c0))))) CROSS JOIN vt1 ON rt0.c2 WHERE ((((vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 END)) AND (('dkl''')))) ORDER BY CAST(((((0.6996085789652827)AND(vt0.c0)))OR('')) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE rt0.c1  WHEN vt0.c1 THEN rt0.c0 END)) AND (('dkl''')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((COALESCE(vt1.c0, vt1.c0, rt0.c2, vt0.c0))LIKE((((rt0.c2))>((rt0.c0))))) CROSS JOIN vt1 ON rt0.c2 ORDER BY CAST(((((0.6996085789652827)AND(vt0.c0)))OR('')) AS NUMERIC) DESC  NULLS LAST);
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))));
SELECT * FROM vt0, t0 FULL OUTER JOIN rt0 ON (NOT (((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE x'1d02'  WHEN (vt0.c0 IN (t0.c0)) THEN ((((((((t0.c1)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c1)))OR(t0.c1)) END) ORDER BY (((t0.c2, vt0.c1, vt1.c0)) BETWEEN (('-1328040430', ((((t0.c1)OR(t0.c1)))AND('w!o,+6')), vt0.c1 COLLATE NOCASE)) AND (((((vt1.c0, vt1.c0, t0.c2))<>((t0.c0, vt0.c1, vt0.c0))), LIKELIHOOD(t0.c2, 0.33127903579816986), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(t0.c1 AS BLOB))>(((((((((vt0.c0)AND(t0.c1)))AND('E''xX')))AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'1d02'  WHEN (vt0.c0 IN (t0.c0)) THEN ((((((((t0.c1)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c2, vt0.c1, vt1.c0)) BETWEEN (('-1328040430', ((((t0.c1)OR(t0.c1)))AND('w!o,+6')), vt0.c1 COLLATE NOCASE)) AND (((((vt1.c0, vt1.c0, t0.c2))!=((t0.c0, vt0.c1, vt0.c0))), LIKELIHOOD(t0.c2, 0.33127903579816986), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(t0.c1 AS BLOB))>(((((((((vt0.c0)AND(t0.c1)))AND('E''xX')))AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE x'1d02'  WHEN (vt0.c0 IN (t0.c0)) THEN ((((((((t0.c1)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c1)))OR(t0.c1)) END) ORDER BY (((t0.c2, vt0.c1, vt1.c0)) BETWEEN (('-1328040430', ((((t0.c1)OR(t0.c1)))AND('w!o,+6')), vt0.c1 COLLATE NOCASE)) AND (((((vt1.c0, vt1.c0, t0.c2))<>((t0.c0, vt0.c1, vt0.c0))), LIKELIHOOD(t0.c2, 0.33127903579816986), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(t0.c1 AS BLOB))>(((((((((vt0.c0)AND(t0.c1)))AND('E''xX')))AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x'1d02'  WHEN (vt0.c0 IN (t0.c0)) THEN ((((((((t0.c1)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c1)))OR(t0.c1)) END) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c2, vt0.c1, vt1.c0)) BETWEEN (('-1328040430', ((((t0.c1)OR(t0.c1)))AND('w!o,+6')), vt0.c1 COLLATE NOCASE)) AND (((((vt1.c0, vt1.c0, t0.c2))!=((t0.c0, vt0.c1, vt0.c0))), LIKELIHOOD(t0.c2, 0.33127903579816986), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(t0.c1 AS BLOB))>(((((((((vt0.c0)AND(t0.c1)))AND('E''xX')))AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CASE x'1d02'  WHEN (vt0.c0 IN (t0.c0)) THEN ((((((((t0.c1)OR(vt1.c0)))AND(t0.c0)))AND(vt0.c1)))OR(t0.c1)) END) ORDER BY (((t0.c2, vt0.c1, vt1.c0)) BETWEEN (('-1328040430', ((((t0.c1)OR(t0.c1)))AND('w!o,+6')), vt0.c1 COLLATE NOCASE)) AND (((((vt1.c0, vt1.c0, t0.c2))<>((t0.c0, vt0.c1, vt0.c0))), LIKELIHOOD(t0.c2, 0.33127903579816986), CAST(t0.c0 AS NUMERIC))))  NULLS LAST, ((CAST(t0.c1 AS BLOB))>(((((((((vt0.c0)AND(t0.c1)))AND('E''xX')))AND(vt1.c0)))OR(vt0.c0))))  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END)) AND ((((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 COLLATE RTRIM))<((((x'')OR(t0.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c1) IS TRUE) THEN x'' END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE RTRIM))<((((x'')OR(t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c1) IS TRUE) THEN x'' END ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 COLLATE RTRIM))<((((x'')OR(t0.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c1) IS TRUE) THEN x'' END ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE RTRIM))<((((x'')OR(t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c1) IS TRUE) THEN x'' END ASC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((t0.c2 COLLATE RTRIM))<((((x'')OR(t0.c0)))))) ORDER BY CASE (t0.c2 IN ())  WHEN ((t0.c1) IS TRUE) THEN x'' END ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((~ ('0yR9'))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ ('0yR9'))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((~ ('0yR9'))))>=(((vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ((((((~ ('0yR9'))))>=(((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((~ ('0yR9'))))>=(((vt0.c0 IN ())))));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON (((('1385004776')*(vt1.c0)))+((~ (rt0.c0)))) WHERE (CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON (((('1385004776')*(vt1.c0)))+((~ (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON (((('1385004776')*(vt1.c0)))+((~ (rt0.c0)))) WHERE (CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c2 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON (((('1385004776')*(vt1.c0)))+((~ (rt0.c0)))));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON (((('1385004776')*(vt1.c0)))+((~ (rt0.c0)))) WHERE (CAST(CAST(rt0.c2 AS TEXT) AS INTEGER));
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (t0.c1 IN (t0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN (t0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (t0.c1 IN (t0.c2)) THEN rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN (t0.c2)) THEN rt0.c2 END) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN vt0);
SELECT * FROM t0, rt0 NATURAL JOIN vt0 WHERE (CASE WHEN (t0.c1 IN (t0.c2)) THEN rt0.c2 END);
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT (NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT (NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (NOT (vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LOWER(DISTINCT (NOT (vt0.c1))));
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(t0.c2)))AND(UPPER(rt0.c0))) FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt0.c0)==(t0.c2))) WHERE (('1717734921' IN ())) ORDER BY JULIANDAY((rt0.c2 IN ()), ((t0.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('1717734921' IN ())) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(t0.c2)))AND(UPPER(rt0.c0))) FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt0.c0)=(t0.c2))) ORDER BY JULIANDAY((rt0.c2 IN ()), ((t0.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(t0.c2)))AND(UPPER(rt0.c0))) FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt0.c0)==(t0.c2))) WHERE (('1717734921' IN ())) ORDER BY JULIANDAY((rt0.c2 IN ()), ((t0.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((('1717734921' IN ())) IS TRUE)  as count FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(t0.c2)))AND(UPPER(rt0.c0))) FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt0.c0)=(t0.c2))) ORDER BY JULIANDAY((rt0.c2 IN ()), ((t0.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)/(t0.c2)))AND(UPPER(rt0.c0))) FULL OUTER JOIN vt1 ON LOWER(DISTINCT ((rt0.c0)==(t0.c2))) WHERE (('1717734921' IN ())) ORDER BY JULIANDAY((rt0.c2 IN ()), ((t0.c0) IS TRUE), (vt1.c0 IN ()))  NULLS FIRST;
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((rt0.c2 IN (rt0.c2))) IS TRUE) INNER JOIN rt0 ON (~ (((vt0.c1)IS(rt0.c1)))) WHERE ((((((t0.c2))<>((rt0.c1)))) NOT BETWEEN (NULLIF(t0.c1, vt1.c0)) AND (((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))<>((rt0.c1)))) NOT BETWEEN (NULLIF(t0.c1, vt1.c0)) AND (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((rt0.c2 IN (rt0.c2))) IS TRUE) INNER JOIN rt0 ON (~ (((vt0.c1)IS(rt0.c1)))));
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((rt0.c2 IN (rt0.c2))) IS TRUE) INNER JOIN rt0 ON (~ (((vt0.c1)IS(rt0.c1)))) WHERE ((((((t0.c2))<>((rt0.c1)))) NOT BETWEEN (NULLIF(t0.c1, vt1.c0)) AND (((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2))<>((rt0.c1)))) NOT BETWEEN (NULLIF(t0.c1, vt1.c0)) AND (((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON (((rt0.c2 IN (rt0.c2))) IS TRUE) INNER JOIN rt0 ON (~ (((vt0.c1)IS(rt0.c1)))));
SELECT * FROM vt0, vt1 INNER JOIN t0 ON (((rt0.c2 IN (rt0.c2))) IS TRUE) INNER JOIN rt0 ON (~ (((vt0.c1)IS(rt0.c1)))) WHERE ((((((t0.c2))<>((rt0.c1)))) NOT BETWEEN (NULLIF(t0.c1, vt1.c0)) AND (((t0.c0)IS NOT(t0.c0)))));
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c1 AS NUMERIC)))>((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC)))>((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c1 AS NUMERIC)))>((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC)))>((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((CAST(rt0.c1 AS NUMERIC)))>((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt1.c0))<>((vt1.c0)))))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))<((CASE vt0.c1  WHEN 0X2412274f THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt1.c0))<>((vt1.c0)))))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))<((CASE vt0.c1  WHEN 0x2412274f THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt1.c0))<>((vt1.c0)))))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))<((CASE vt0.c1  WHEN 0X2412274f THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt1.c0))<>((vt1.c0)))))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))<((CASE vt0.c1  WHEN 0x2412274f THEN vt1.c0 ELSE vt1.c0 END))) DESC);
SELECT * FROM vt0, vt1 WHERE (vt0.c0) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND ((((vt1.c0))<>((vt1.c0)))))  NULLS LAST, (((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))<((CASE vt0.c1  WHEN 0X2412274f THEN vt1.c0 ELSE vt1.c0 END))) DESC;
SELECT * FROM vt0, vt1 CROSS JOIN t0 ON ((x'990d250799da')IS(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)=(((((t0.c0)OR(t0.c0)))OR(rt0.c0)))) WHERE (vt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((x'990d250799da')IS(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)=(((((t0.c0)OR(t0.c0)))OR(rt0.c0)))) ORDER BY x'');
SELECT * FROM vt0, vt1 CROSS JOIN t0 ON ((x'990d250799da')IS(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)=(((((t0.c0)OR(t0.c0)))OR(rt0.c0)))) WHERE (vt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN t0 ON ((x'990d250799da')IS(((((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))OR(t0.c1)))AND(vt0.c0)))) FULL OUTER JOIN rt0 ON ((vt0.c1 COLLATE RTRIM)=(((((t0.c0)OR(t0.c0)))OR(rt0.c0)))) ORDER BY x'');
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((0.8007981449896675) BETWEEN (t0.c1) AND (t0.c1)))AND(ABS(t0.c1))))AND(NULL)) WHERE (((json_array_length(t0.c2, vt1.c0)) NOTNULL)) ORDER BY vt1.c0 ASC, (((('')+(rt0.c1)))-((- (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c2, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON ((((((0.8007981449896675) BETWEEN (t0.c1) AND (t0.c1)))AND(ABS(t0.c1))))AND(NULL)) ORDER BY vt1.c0 ASC, (((('')+(rt0.c1)))-((- (t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((0.8007981449896675) BETWEEN (t0.c1) AND (t0.c1)))AND(ABS(t0.c1))))AND(NULL)) WHERE (((json_array_length(t0.c2, vt1.c0)) NOTNULL)) ORDER BY vt1.c0 ASC, (((('')+(rt0.c1)))-((- (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(t0.c2, vt1.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, t0 CROSS JOIN vt1 ON ((((((0.8007981449896675) BETWEEN (t0.c1) AND (t0.c1)))AND(ABS(t0.c1))))AND(NULL)) ORDER BY vt1.c0 ASC, (((('')+(rt0.c1)))-((- (t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 CROSS JOIN vt1 ON ((((((0.8007981449896675) BETWEEN (t0.c1) AND (t0.c1)))AND(ABS(t0.c1))))AND(NULL)) WHERE (((json_array_length(t0.c2, vt1.c0)) NOTNULL)) ORDER BY vt1.c0 ASC, (((('')+(rt0.c1)))-((- (t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((NOT (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((NOT (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2))) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((NOT (t0.c2)));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((json_object(vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((('', vt0.c0 COLLATE RTRIM, (('dkl''') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN '1550591532' THEN '-1460703756' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, CASE '-1130659861'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, GLOB(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (-1479689655) AND (vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND (ABS(vt0.c0))) DESC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST, vt0.c0  NULLS LAST, (((NULL, vt0.c0, vt1.c0, vt1.c0, NULL)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC), 0xffffffffd7491367, '', CAST('349434519' AS INTEGER))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)-(0.08233912885855776)), (('.')%(vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((('', vt0.c0 COLLATE RTRIM, (('dkl''') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN '1550591532' THEN '-1460703756' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, CASE '-1130659861'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, GLOB(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((json_object(vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c1) BETWEEN (-1479689655) AND (vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND (ABS(vt0.c0))) DESC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST, vt0.c0  NULLS LAST, (((NULL, vt0.c0, vt1.c0, vt1.c0, NULL)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC), 0xffffffffd7491367, '', CAST('349434519' AS INTEGER))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)-(0.08233912885855776)), (('.')%(vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN '' END))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((json_object(vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((('', vt0.c0 COLLATE RTRIM, (('dkl''') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN '1550591532' THEN '-1460703756' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, CASE '-1130659861'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, GLOB(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (-1479689655) AND (vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND (ABS(vt0.c0))) DESC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST, vt0.c0  NULLS LAST, (((NULL, vt0.c0, vt1.c0, vt1.c0, NULL)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC), 0xffffffffd7491367, '', CAST('349434519' AS INTEGER))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)-(0.08233912885855776)), (('.')%(vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN '' END)));
SELECT SUM(count) FROM (SELECT ALL ((((('', vt0.c0 COLLATE RTRIM, (('dkl''') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN '1550591532' THEN '-1460703756' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, CASE '-1130659861'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, GLOB(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((json_object(vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) ORDER BY ((((vt0.c1) BETWEEN (-1479689655) AND (vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND (ABS(vt0.c0))) DESC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST, vt0.c0  NULLS LAST, (((NULL, vt0.c0, vt1.c0, vt1.c0, NULL)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC), 0xffffffffd7491367, '', CAST('349434519' AS INTEGER))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)-(0.08233912885855776)), (('.')%(vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN '' END))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON ((json_object(vt0.c1, vt0.c1, vt1.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN (((vt0.c0) NOTNULL)) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) WHERE (((('', vt0.c0 COLLATE RTRIM, (('dkl''') NOT BETWEEN (vt0.c0) AND (vt0.c0))))>=((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN '1550591532' THEN '-1460703756' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END, CASE '-1130659861'  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, GLOB(vt0.c0, vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (-1479689655) AND (vt1.c0))) BETWEEN (LAST_INSERT_ROWID()) AND (ABS(vt0.c0))) DESC  NULLS FIRST, CASE WHEN CAST(vt1.c0 AS TEXT) THEN ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST, vt0.c0  NULLS LAST, (((NULL, vt0.c0, vt1.c0, vt1.c0, NULL)) BETWEEN ((CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 END, CAST(vt0.c0 AS NUMERIC), 0xffffffffd7491367, '', CAST('349434519' AS INTEGER))) AND ((vt1.c0 COLLATE RTRIM, ((vt1.c0)-(0.08233912885855776)), (('.')%(vt0.c0)), ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN '' END)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN (('-260354824' COLLATE RTRIM)) AND (((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (('-260354824' COLLATE RTRIM)) AND (((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN (('-260354824' COLLATE RTRIM)) AND (((t0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (('-260354824' COLLATE RTRIM)) AND (((t0.c0 IN ()))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN (('-260354824' COLLATE RTRIM)) AND (((t0.c0 IN ())))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN (((('w6?+RCZU?')>=(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END)))) ORDER BY (- ((+ (vt0.c0))))  NULLS LAST, CAST(x'f22443f7' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((('w6?+RCZU?')>=(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- ((+ (vt0.c0))))  NULLS LAST, CAST(x'f22443f7' AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN (((('w6?+RCZU?')>=(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END)))) ORDER BY (- ((+ (vt0.c0))))  NULLS LAST, CAST(x'f22443f7' AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((('w6?+RCZU?')>=(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- ((+ (vt0.c0))))  NULLS LAST, CAST(x'f22443f7' AS BLOB));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0)) BETWEEN (((('w6?+RCZU?')>=(rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c0 THEN vt0.c1 END)))) ORDER BY (- ((+ (vt0.c0))))  NULLS LAST, CAST(x'f22443f7' AS BLOB);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) ORDER BY (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) ORDER BY (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN CASE WHEN rt0.c1 THEN rt0.c0 END END) ORDER BY (- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(t0.c2 COLLATE NOCASE)))OR((- (-9.62504737E8)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1))))) ORDER BY ((((t0.c0)=(vt0.c1))) IS FALSE) ASC  NULLS LAST, IFNULL(CASE vt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt0.c0 END, rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(t0.c2 COLLATE NOCASE)))OR((- (-9.62504737E8)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c0)=(vt0.c1))) IS FALSE) ASC  NULLS LAST, IFNULL(CASE vt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt0.c0 END, rt0.c1)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(t0.c2 COLLATE NOCASE)))OR((- (-9.62504737E8)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1))))) ORDER BY ((((t0.c0)=(vt0.c1))) IS FALSE) ASC  NULLS LAST, IFNULL(CASE vt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt0.c0 END, rt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(t0.c2 COLLATE NOCASE)))OR((- (-9.62504737E8)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1))))) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY ((((t0.c0)=(vt0.c1))) IS FALSE) ASC  NULLS LAST, IFNULL(CASE vt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt0.c0 END, rt0.c1)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE ((((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(t0.c2 COLLATE NOCASE)))OR((- (-9.62504737E8)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c1))))) ORDER BY ((((t0.c0)=(vt0.c1))) IS FALSE) ASC  NULLS LAST, IFNULL(CASE vt0.c0  WHEN NULL THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN t0.c1 THEN rt0.c0 END, rt0.c1)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT JULIANDAY(rt0.c0, rt0.c0, NULL, rt0.c2, vt0.c0))) ORDER BY CAST((- ('1859717633')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT JULIANDAY(rt0.c0, rt0.c0, NULL, rt0.c2, vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((- ('1859717633')) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT JULIANDAY(rt0.c0, rt0.c0, NULL, rt0.c2, vt0.c0))) ORDER BY CAST((- ('1859717633')) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT JULIANDAY(rt0.c0, rt0.c0, NULL, rt0.c2, vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST((- ('1859717633')) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(DISTINCT JULIANDAY(rt0.c0, rt0.c0, NULL, rt0.c2, vt0.c0))) ORDER BY CAST((- ('1859717633')) AS TEXT)  NULLS LAST;
SELECT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1);
SELECT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN vt1);
SELECT * FROM rt0, vt0 NATURAL JOIN vt1 WHERE (rt0.c2 COLLATE NOCASE);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)|(t0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)&(vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)|(t0.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)&(vt0.c0)))AND(CAST(vt0.c1 AS REAL))))OR(((vt0.c0)|(t0.c1)))));
SELECT * FROM rt0, vt1 WHERE (CAST(((NULL)<>(rt0.c1)) AS TEXT)) ORDER BY ((((((rt0.c1)|(rt0.c1)))AND(rt0.c1)))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)!=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY ((((((rt0.c1)|(rt0.c1)))AND(rt0.c1)))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CAST(((NULL)<>(rt0.c1)) AS TEXT)) ORDER BY ((((((rt0.c1)|(rt0.c1)))AND(rt0.c1)))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)!=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED ORDER BY ((((((rt0.c1)|(rt0.c1)))AND(rt0.c1)))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CAST(((NULL)<>(rt0.c1)) AS TEXT)) ORDER BY ((((((rt0.c1)|(rt0.c1)))AND(rt0.c1)))OR(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END))  NULLS FIRST;
SELECT * FROM t0, vt0, vt1, rt0 WHERE (t0.c1) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM t0, vt0, vt1, rt0 WHERE (t0.c1) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0, vt0, vt1, rt0 ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC);
SELECT * FROM t0, vt0, vt1, rt0 WHERE (t0.c1) ORDER BY (((rt0.c1) NOT NULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((+ (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((+ (t0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (t0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((+ (t0.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((((t0.c0) NOT NULL)) BETWEEN (CASE WHEN vt0.c0 THEN vt1.c0 END) AND (((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) INNER JOIN rt0 ON CAST('' AS NUMERIC) WHERE (((((NULL)>(vt1.c0)))<>(((0x540da29a)&(vt1.c0))))) ORDER BY 0Xffffffff8c954e01 DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(vt1.c0)))!=(((0x540da29a)&(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) INNER JOIN rt0 ON CAST('' AS NUMERIC) ORDER BY 0xffffffff8c954e01 DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) INNER JOIN rt0 ON CAST('' AS NUMERIC) WHERE (((((NULL)>(vt1.c0)))<>(((0x540da29a)&(vt1.c0))))) ORDER BY 0Xffffffff8c954e01 DESC;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(vt1.c0)))!=(((0x540da29a)&(vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) INNER JOIN rt0 ON CAST('' AS NUMERIC) ORDER BY 0xffffffff8c954e01 DESC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON ((CAST(vt1.c0 AS TEXT)) IS FALSE) INNER JOIN rt0 ON CAST('' AS NUMERIC) WHERE (((((NULL)>(vt1.c0)))<>(((0x540da29a)&(vt1.c0))))) ORDER BY 0Xffffffff8c954e01 DESC;
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((NOT (vt0.c0)))AND(((rt0.c2)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))AND(((rt0.c2)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((NOT (vt0.c0)))AND(((rt0.c2)IS(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))AND(((rt0.c2)IS(t0.c0))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1 WHERE ((((NOT (vt0.c0)))AND(((rt0.c2)IS(t0.c0)))));
SELECT ALL * FROM vt0, t0, rt0 WHERE (((LOWER(rt0.c2)) NOTNULL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((LOWER(rt0.c2)) NOTNULL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2)) NOTNULL)) IS TRUE)  as count FROM vt0, t0, rt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt0 WHERE (((LOWER(rt0.c2)) NOTNULL)) ORDER BY vt0.c1  NULLS FIRST;
SELECT * FROM t0 WHERE (((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(t0.c0))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((NULL)OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))))OR(t0.c0)));
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY LIKE(vt1.c0, vt1.c0, 'w') COLLATE NOCASE DESC  NULLS LAST, ((0.1886891887542005) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LIKE(vt1.c0, vt1.c0, 'w') COLLATE NOCASE DESC  NULLS LAST, ((0.1886891887542005) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY LIKE(vt1.c0, vt1.c0, 'w') COLLATE NOCASE DESC  NULLS LAST, ((0.1886891887542005) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LIKE(vt1.c0, vt1.c0, 'w') COLLATE NOCASE DESC  NULLS LAST, ((0.1886891887542005) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((~ ((rt0.c2 IN ())))) ORDER BY LIKE(vt1.c0, vt1.c0, 'w') COLLATE NOCASE DESC  NULLS LAST, ((0.1886891887542005) IS TRUE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((NULL)>=(rt0.c0)))>((rt0.c0 IN (t0.c2, t0.c2)))) FULL OUTER JOIN vt1 ON ((('0.32250826436583624') BETWEEN (rt0.c2) AND (t0.c2)) IN ()) WHERE (CASE 'za_L0*T䳁'  WHEN rt0.c2 COLLATE NOCASE THEN 0.5636485707455818 ELSE ABS(rt0.c0) END) ORDER BY ((vt1.c0 IN (t0.c1)) IN ())  NULLS LAST, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'za_L0*T䳁'  WHEN rt0.c2 COLLATE NOCASE THEN 0.5636485707455818 ELSE ABS(rt0.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((NULL)>=(rt0.c0)))>((rt0.c0 IN (t0.c2, t0.c2)))) FULL OUTER JOIN vt1 ON ((('0.32250826436583624') BETWEEN (rt0.c2) AND (t0.c2)) IN ()) ORDER BY ((vt1.c0 IN (t0.c1)) IN ())  NULLS LAST, t0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((NULL)>=(rt0.c0)))>((rt0.c0 IN (t0.c2, t0.c2)))) FULL OUTER JOIN vt1 ON ((('0.32250826436583624') BETWEEN (rt0.c2) AND (t0.c2)) IN ()) WHERE (CASE 'za_L0*T䳁'  WHEN rt0.c2 COLLATE NOCASE THEN 0.5636485707455818 ELSE ABS(rt0.c0) END) ORDER BY ((vt1.c0 IN (t0.c1)) IN ())  NULLS LAST, t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE 'za_L0*T䳁'  WHEN rt0.c2 COLLATE NOCASE THEN 0.5636485707455818 ELSE ABS(rt0.c0) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((((NULL)>=(rt0.c0)))>((rt0.c0 IN (t0.c2, t0.c2)))) FULL OUTER JOIN vt1 ON ((('0.32250826436583624') BETWEEN (rt0.c2) AND (t0.c2)) IN ()) ORDER BY ((vt1.c0 IN (t0.c1)) IN ())  NULLS LAST, t0.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((((NULL)>=(rt0.c0)))>((rt0.c0 IN (t0.c2, t0.c2)))) FULL OUTER JOIN vt1 ON ((('0.32250826436583624') BETWEEN (rt0.c2) AND (t0.c2)) IN ()) WHERE (CASE 'za_L0*T䳁'  WHEN rt0.c2 COLLATE NOCASE THEN 0.5636485707455818 ELSE ABS(rt0.c0) END) ORDER BY ((vt1.c0 IN (t0.c1)) IN ())  NULLS LAST, t0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (+ (3.49434519E8)) WHERE (LIKELIHOOD(CAST(t0.c1 AS REAL), 0.8498757828777782));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(t0.c1 AS REAL), 0.8498757828777782)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON (+ (3.49434519E8)));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (+ (3.49434519E8)) WHERE (LIKELIHOOD(CAST(t0.c1 AS REAL), 0.8498757828777782));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(t0.c1 AS REAL), 0.8498757828777782)) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt1 ON (+ (3.49434519E8)));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt1 ON (+ (3.49434519E8)) WHERE (LIKELIHOOD(CAST(t0.c1 AS REAL), 0.8498757828777782));
SELECT ALL * FROM rt0 NOT INDEXED, vt1, t0 WHERE (CAST(UPPER(t0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c1) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, vt1, t0 WHERE (CAST(UPPER(t0.c1) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(t0.c1) AS TEXT)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL * FROM rt0 NOT INDEXED, vt1, t0 WHERE (CAST(UPPER(t0.c1) AS TEXT));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', rt0.c1 COLLATE RTRIM))>=(((vt0.c0 IN ()), (((t0.c0))<((rt0.c2))), CAST(rt0.c0 AS BLOB)))) WHERE ((((((vt0.c0)=(t0.c0)), CAST(vt0.c1 AS TEXT), ((t0.c1)IS(rt0.c0))))=(((NULL IN ()), rt0.c0, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c1))))))) ORDER BY 0.5020728016643098 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)==(t0.c0)), CAST(vt0.c1 AS TEXT), ((t0.c1)IS(rt0.c0))))==(((NULL IN ()), rt0.c0, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', rt0.c1 COLLATE RTRIM))>=(((vt0.c0 IN ()), (((t0.c0))<((rt0.c2))), CAST(rt0.c0 AS BLOB)))) ORDER BY 0.5020728016643098 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', rt0.c1 COLLATE RTRIM))>=(((vt0.c0 IN ()), (((t0.c0))<((rt0.c2))), CAST(rt0.c0 AS BLOB)))) WHERE ((((((vt0.c0)=(t0.c0)), CAST(vt0.c1 AS TEXT), ((t0.c1)IS(rt0.c0))))=(((NULL IN ()), rt0.c0, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c1))))))) ORDER BY 0.5020728016643098 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)==(t0.c0)), CAST(vt0.c1 AS TEXT), ((t0.c1)IS(rt0.c0))))==(((NULL IN ()), rt0.c0, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON rt0.c0 RIGHT OUTER JOIN rt0 ON ((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'', rt0.c1 COLLATE RTRIM))>=(((vt0.c0 IN ()), (((t0.c0))<((rt0.c2))), CAST(rt0.c0 AS BLOB)))) ORDER BY 0.5020728016643098 ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS TEXT)) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) ISNULL) DESC;
SELECT ALL * FROM rt0 INDEXED BY i58, vt0 WHERE ('d35~BgOz');
SELECT SUM(count) FROM (SELECT (('d35~BgOz') IS TRUE)  as count FROM rt0 INDEXED BY i58, vt0);
SELECT ALL * FROM rt0 INDEXED BY i58, vt0 WHERE ('d35~BgOz');
SELECT SUM(count) FROM (SELECT (('d35~BgOz') IS TRUE)  as count FROM rt0 INDEXED BY i58, vt0);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((rt0.c1)GLOB(0.743592191119022)) IN ())) ORDER BY rt0.c2 ASC  NULLS FIRST, ((t0.c1) BETWEEN (((t0.c0)<=('-516818336'))) AND (((rt0.c2)IS NOT(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)GLOB(0.743592191119022)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY rt0.c2 ASC  NULLS FIRST, ((t0.c1) BETWEEN (((t0.c0)<=('-516818336'))) AND (((rt0.c2)IS NOT(t0.c1)))) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((rt0.c1)GLOB(0.743592191119022)) IN ())) ORDER BY rt0.c2 ASC  NULLS FIRST, ((t0.c1) BETWEEN (((t0.c0)<=('-516818336'))) AND (((rt0.c2)IS NOT(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)GLOB(0.743592191119022)) IN ())) IS TRUE)  as count FROM t0, rt0, vt1 ORDER BY rt0.c2 ASC  NULLS FIRST, ((t0.c1) BETWEEN (((t0.c0)<=('-516818336'))) AND (((rt0.c2)IS NOT(t0.c1)))) ASC);
SELECT ALL * FROM t0, rt0, vt1 WHERE ((((rt0.c1)GLOB(0.743592191119022)) IN ())) ORDER BY rt0.c2 ASC  NULLS FIRST, ((t0.c1) BETWEEN (((t0.c0)<=('-516818336'))) AND (((rt0.c2)IS NOT(t0.c1)))) ASC;
SELECT ALL * FROM vt0 NOT INDEXED, vt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN '-1459470918' THEN rt0.c2 ELSE vt1.c0 END  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c2)<<(vt0.c0)) END) ORDER BY ((0.21470943989560287) BETWEEN (CASE WHEN '6pH4' THEN rt0.c1 END) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((((((vt0.c1)-('-123081028')))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, 'nt'))))))OR(0.8977796182362109))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN '-1459470918' THEN rt0.c2 ELSE vt1.c0 END  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c2)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((0.21470943989560287) BETWEEN (CASE WHEN '6pH4' THEN rt0.c1 END) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((((((vt0.c1)-('-123081028')))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, 'nt'))))))OR(0.8977796182362109))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, vt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN '-1459470918' THEN rt0.c2 ELSE vt1.c0 END  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c2)<<(vt0.c0)) END) ORDER BY ((0.21470943989560287) BETWEEN (CASE WHEN '6pH4' THEN rt0.c1 END) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((((((vt0.c1)-('-123081028')))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, 'nt'))))))OR(0.8977796182362109))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN '-1459470918' THEN rt0.c2 ELSE vt1.c0 END  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c2)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((0.21470943989560287) BETWEEN (CASE WHEN '6pH4' THEN rt0.c1 END) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((((((vt0.c1)-('-123081028')))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, 'nt'))))))OR(0.8977796182362109))  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, vt1, rt0 WHERE (CASE CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN '-1459470918' THEN rt0.c2 ELSE vt1.c0 END  WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)) ELSE ((rt0.c2)<<(vt0.c0)) END) ORDER BY ((0.21470943989560287) BETWEEN (CASE WHEN '6pH4' THEN rt0.c1 END) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) DESC  NULLS LAST, ((((((vt0.c1)-('-123081028')))OR((((rt0.c1, rt0.c0, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, 'nt'))))))OR(0.8977796182362109))  NULLS LAST;
