-- Time: 2024/06/09 04:11:20
-- Database: database77
-- Database version: 3.40.0
-- seed value: 1033600977
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB COLLATE RTRIM , +c4 REAL ); -- 2ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET c0=0.8522363873735304 WHERE rt0.c4; -- 0ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
VACUUM main; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(x'd9d9', ''); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
UPDATE OR IGNORE rt0 SET c0='-785517541' WHERE HEX(DISTINCT ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0))); -- 0ms;
UPDATE OR IGNORE rt0 SET c3='0.8522363873735304' WHERE ((((rt0.c2) IS FALSE))IS NOT(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c2, c2)=(x'', '-53658424', 0.16253956311125184) WHERE ((((rt0.c0)GLOB(rt0.c1))) BETWEEN (((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) AND (((rt0.c0)>=(rt0.c3)))); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 2ms;
PRAGMA short_column_names; -- 0ms;
ANALYZE; -- 1ms;
ANALYZE; -- 0ms;
REINDEX NOCASE; -- 0ms;
ANALYZE temp; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL WHERE (((rt0.c1 IN (rt0.c4)))%(TIME(rt0.c2, '-53658424', rt0.c3))); -- 0ms;
UPDATE rt0 SET c1=NULL; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((NULL) IS FALSE) FROM rt0; -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.5336010378275734; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1, c4)=(NULL, NULL, x'6aca1a65'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL WHERE x'' COLLATE RTRIM; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET (c2, c1, c4)=(x'', NULL, x'') WHERE (- ((rt0.c3 IN (rt0.c4, rt0.c4)))); -- 6ms;
UPDATE OR FAIL rt0 SET c2='\_E', c4=x'' WHERE CAST(rt0.c2 AS BLOB); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr4 INSTEAD OF DELETE ON v0 BEGIN SELECT RAISE(ABORT, 'asdf');SELECT RAISE(IGNORE);END; -- 1ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET c4='-785517541'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
UPDATE rt0 SET c2=NULL WHERE rt0.c4; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2, c0) VALUES (0.34975540613439626, NULL, x'', 0.34588331368521075); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
UPDATE rt0 SET (c4)=('\_e') WHERE ((TRIM(DISTINCT 'WS'))GLOB((((0xffffffff83b03499)) BETWEEN ((rt0.c1)) AND ((rt0.c4))))); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT rt0 SET c2=-1098956002; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (0.34975540613439626), ('118378721'), (0Xffffffffd12df41b); -- 9ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, -875122472, '', NULL, 1.18378721E8), ('~Z', -7.85517541E8, 0.7225039167492626, '僡ᛔ[aT', NULL), (0.8974733854380961, x'', NULL, NULL, x'1bc5'); -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 INTEGER UNIQUE ON CONFLICT REPLACE PRIMARY KEY NOT NULL ); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4); -- 4ms;
UPDATE OR IGNORE rt1 SET c4=-7.85517541E8, c0=x'' WHERE ((((rt1.c0)*(rt1.c4)))<(((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c0)))); -- 0ms;
UPDATE rt1 SET (c4)=('879596715'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt1 SET (c0)=(x'abd0') WHERE CASE (((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((NULL)))  WHEN CASE rt1.c0  WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c2 END THEN ((rt1.c3)IS NOT(rt1.c2)) WHEN ((rt1.c2)+(rt1.c4)) THEN rt1.c4 WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) THEN CAST(rt1.c2 AS INTEGER) END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i31 ON t0(x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET c0=277467194; -- 1ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 4ms;
UPDATE OR IGNORE t0 SET (c0)=(-37523984) WHERE NULL; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit = 2009543704651262306; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2, c3) VALUES (x'0784', NULL, 83975470); -- 0ms;
ANALYZE; -- 3ms;
PRAGMA main.ignore_check_constraints = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(x'') WHERE ((((rt0.c2)AND((rt0.c3 IN (rt0.c0, rt0.c4)))))OR(((rt0.c1)!=(rt0.c0)))); -- 1ms;
UPDATE OR FAIL rt1 SET (c4)=('1567592409') WHERE HEX(DISTINCT ((NULL) NOT BETWEEN (rt1.c0) AND (rt1.c1))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET (c4)=(-5.00230444E8) WHERE rt0.c0; -- 0ms;
COMMIT TRANSACTION; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt0, v0, rt1 WHERE (((v0.c0 COLLATE BINARY)<=(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)<=(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((v0.c0 COLLATE BINARY)<=(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)<=(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4))))) IS TRUE)  as count FROM rt0, v0, rt1);
SELECT ALL * FROM rt0, v0, rt1 WHERE (((v0.c0 COLLATE BINARY)<=(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c4)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((((v0.c0)AND(rt0.c1)))AND(rt0.c2)) AS TEXT)) ORDER BY TYPEOF(DISTINCT (((rt0.c1))<((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(rt0.c1)))AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY TYPEOF(DISTINCT (((rt0.c1))<((rt0.c2)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((((v0.c0)AND(rt0.c1)))AND(rt0.c2)) AS TEXT)) ORDER BY TYPEOF(DISTINCT (((rt0.c1))<((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(rt0.c1)))AND(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY TYPEOF(DISTINCT (((rt0.c1))<((rt0.c2)))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE (CAST(((((v0.c0)AND(rt0.c1)))AND(rt0.c2)) AS TEXT)) ORDER BY TYPEOF(DISTINCT (((rt0.c1))<((rt0.c2))));
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (CASE ((((rt0.c4)OR(rt0.c3)))OR(v0.c0))  WHEN (~ (rt0.c3)) THEN ((rt0.c4)>=(t0.c0)) ELSE (((((((((((('-37523984')OR(v0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c4)OR(rt0.c3)))OR(v0.c0))  WHEN (~ (rt0.c3)) THEN ((rt0.c4)>=(t0.c0)) ELSE (((((((((((('-37523984')OR(v0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY '' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (CASE ((((rt0.c4)OR(rt0.c3)))OR(v0.c0))  WHEN (~ (rt0.c3)) THEN ((rt0.c4)>=(t0.c0)) ELSE (((((((((((('-37523984')OR(v0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY '' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c4)OR(rt0.c3)))OR(v0.c0))  WHEN (~ (rt0.c3)) THEN ((rt0.c4)>=(t0.c0)) ELSE (((((((((((('-37523984')OR(v0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM v0, rt0, t0 ORDER BY '' ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE (CASE ((((rt0.c4)OR(rt0.c3)))OR(v0.c0))  WHEN (~ (rt0.c3)) THEN ((rt0.c4)>=(t0.c0)) ELSE (((((((((((('-37523984')OR(v0.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c2)) END) ORDER BY '' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (HEX(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3))));
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<=(x''))) ORDER BY (((((rt0.c2, rt0.c4, rt0.c4))>=(('', rt1.c1, rt0.c1)))) NOT NULL)  NULLS LAST, ((1399240700) NOT BETWEEN ('1038890205') AND (CAST(rt1.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<=(x''))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY (((((rt0.c2, rt0.c4, rt0.c4))>=(('', rt1.c1, rt0.c1)))) NOT NULL)  NULLS LAST, ((1399240700) NOT BETWEEN ('1038890205') AND (CAST(rt1.c2 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<=(x''))) ORDER BY (((((rt0.c2, rt0.c4, rt0.c4))>=(('', rt1.c1, rt0.c1)))) NOT NULL)  NULLS LAST, ((1399240700) NOT BETWEEN ('1038890205') AND (CAST(rt1.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<=(x''))) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN rt0 ON x'' ORDER BY (((((rt0.c2, rt0.c4, rt0.c4))>=(('', rt1.c1, rt0.c1)))) NOT NULL)  NULLS LAST, ((1399240700) NOT BETWEEN ('1038890205') AND (CAST(rt1.c2 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM t0, rt1 LEFT OUTER JOIN rt0 ON x'' WHERE (((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt0.c1)))<=(x''))) ORDER BY (((((rt0.c2, rt0.c4, rt0.c4))>=(('', rt1.c1, rt0.c1)))) NOT NULL)  NULLS LAST, ((1399240700) NOT BETWEEN ('1038890205') AND (CAST(rt1.c2 AS NUMERIC))) DESC;
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)&(rt0.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c4))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)&(rt0.c4))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)&(rt0.c4))) NOTNULL)) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE (((((rt0.c2)&(rt0.c4))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)!=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c1)<>(rt0.c3)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)!=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((rt1.c1)<>(rt0.c3)))) IS TRUE)  as count FROM v0, rt1, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 WHERE (LIKELY(DISTINCT ((rt1.c1)!=(rt0.c3))));
SELECT * FROM rt0, v0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT * FROM rt0, v0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT * FROM rt0, v0, t0, rt1 WHERE (t0.c0);
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c0)))-((NOT (rt0.c2)))) WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt0.c1)<=(rt0.c1)))>=((((rt0.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, t0.c0)) AND ((rt0.c1, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c0)))-((NOT (rt0.c2)))) ORDER BY ((((rt0.c1)<=(rt0.c1)))>=((((rt0.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, t0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c0)))-((NOT (rt0.c2)))) WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt0.c1)<=(rt0.c1)))>=((((rt0.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, t0.c0)) AND ((rt0.c1, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c0)))-((NOT (rt0.c2)))) ORDER BY ((((rt0.c1)<=(rt0.c1)))>=((((rt0.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, t0.c0)) AND ((rt0.c1, v0.c0, v0.c0))))));
SELECT ALL * FROM v0, rt0 FULL OUTER JOIN t0 ON ((((rt0.c2)IS NOT(rt0.c0)))-((NOT (rt0.c2)))) WHERE (((rt0.c4 COLLATE NOCASE) IS FALSE)) ORDER BY ((((rt0.c1)<=(rt0.c1)))>=((((rt0.c0, rt0.c4, rt0.c3)) BETWEEN ((rt0.c3, rt0.c3, t0.c0)) AND ((rt0.c1, v0.c0, v0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()), CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)<>(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((((rt0.c1) IS FALSE))!=(((rt0.c0)IS NOT(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()), CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)<>(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((((rt0.c1) IS FALSE))!=(((rt0.c0)IS NOT(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()), CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)<>(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((((rt0.c1) IS FALSE))!=(((rt0.c0)IS NOT(rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()), CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)<>(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((((rt0.c1) IS FALSE))!=(((rt0.c0)IS NOT(rt0.c4)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)) IN ()), CASE ((rt0.c4)&(rt0.c0))  WHEN ((rt0.c3)<>(rt0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) END, ((((rt0.c1) IS FALSE))!=(((rt0.c0)IS NOT(rt0.c4)))) ASC;
SELECT ALL * FROM v0, t0, rt0 WHERE ((~ ((((rt0.c0, rt0.c2, v0.c0))<((t0.c0, v0.c0, t0.c0)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c2, v0.c0))<((t0.c0, v0.c0, t0.c0)))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE ((~ ((((rt0.c0, rt0.c2, v0.c0))<((t0.c0, v0.c0, t0.c0)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c0, rt0.c2, v0.c0))<((t0.c0, v0.c0, t0.c0)))))) IS TRUE)  as count FROM v0, t0, rt0 ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST);
SELECT ALL * FROM v0, t0, rt0 WHERE ((~ ((((rt0.c0, rt0.c2, v0.c0))<((t0.c0, v0.c0, t0.c0)))))) ORDER BY ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN ((t0.c0 IN ())) AND (IFNULL(DISTINCT rt0.c4, rt0.c1)))  NULLS FIRST;
SELECT * FROM rt0 WHERE ('-1487099971' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1487099971' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1487099971' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1487099971' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1487099971' COLLATE NOCASE);
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOTNULL) IN ())) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE ((((rt1.c1) NOTNULL) IN ()));
SELECT * FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (x'');
SELECT ALL * FROM t0, v0, rt1 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((NULL)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((NULL)<>(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((NULL)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((NULL)<>(v0.c0))))) IS TRUE)  as count FROM t0, v0, rt1);
SELECT ALL * FROM t0, v0, rt1 WHERE (((rt1.c4 COLLATE NOCASE) BETWEEN ((t0.c0 IN ())) AND (((NULL)!=(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOTNULL)) ORDER BY CASE UNLIKELY(v0.c0)  WHEN v0.c0 THEN CAST(v0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE UNLIKELY(v0.c0)  WHEN v0.c0 THEN CAST(v0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOTNULL)) ORDER BY CASE UNLIKELY(v0.c0)  WHEN v0.c0 THEN CAST(v0.c0 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY CASE UNLIKELY(v0.c0)  WHEN v0.c0 THEN CAST(v0.c0 AS BLOB) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))AND(v0.c0))) NOTNULL)) ORDER BY CASE UNLIKELY(v0.c0)  WHEN v0.c0 THEN CAST(v0.c0 AS BLOB) END  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2)-(rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2)-(rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c3);
SELECT ALL COUNT(*) FROM v0, rt1 FULL OUTER JOIN rt0 ON rt0.c3 WHERE (((rt0.c2)-(rt0.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)), json_quote(rt0.c3), (rt0.c4 IN ())))>(('315739802', ((v0.c0) IS FALSE), CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)))) ORDER BY ((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4))) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) AND (((rt1.c1)>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)), json_quote(rt0.c3), (rt0.c4 IN ())))>(('315739802', ((v0.c0) IS FALSE), CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4))) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) AND (((rt1.c1)>(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)), json_quote(rt0.c3), (rt0.c4 IN ())))>(('315739802', ((v0.c0) IS FALSE), CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)))) ORDER BY ((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4))) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) AND (((rt1.c1)>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)), json_quote(rt0.c3), (rt0.c4 IN ())))>(('315739802', ((v0.c0) IS FALSE), CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt1, rt0, v0 ORDER BY ((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4))) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) AND (((rt1.c1)>(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE ((((((rt1.c2) BETWEEN (rt1.c2) AND (rt0.c0)), json_quote(rt0.c3), (rt0.c4 IN ())))>(('315739802', ((v0.c0) IS FALSE), CASE rt1.c3  WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c1 END)))) ORDER BY ((((((rt0.c0)OR(rt1.c2)))OR(rt1.c4))) NOT BETWEEN (((((rt0.c3)AND(rt0.c3)))OR(rt0.c4))) AND (((rt1.c1)>(rt0.c0)))) ASC;
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)+(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)+(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)+(t0.c0)) COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((rt1.c4)|(rt1.c0)) COLLATE BINARY) ORDER BY rt1.c3 DESC, (~ (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4)|(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC, (~ (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))) ASC);
SELECT * FROM rt1 WHERE (((rt1.c4)|(rt1.c0)) COLLATE BINARY) ORDER BY rt1.c3 DESC, (~ (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt1.c4)|(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 DESC, (~ (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))) ASC);
SELECT * FROM rt1 WHERE (((rt1.c4)|(rt1.c0)) COLLATE BINARY) ORDER BY rt1.c3 DESC, (~ (((((rt1.c1)AND(rt1.c4)))OR(rt1.c4)))) ASC;
SELECT * FROM rt0, rt1 WHERE ((('1') NOT NULL)) ORDER BY 0.20452606894431014 ASC;
SELECT SUM(count) FROM (SELECT ALL (((('1') NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.20452606894431014 ASC);
SELECT * FROM rt0, rt1 WHERE ((('1') NOT NULL)) ORDER BY 0.20452606894431014 ASC;
SELECT SUM(count) FROM (SELECT ALL (((('1') NOT NULL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.20452606894431014 ASC);
SELECT * FROM rt0, rt1 WHERE ((('1') NOT NULL)) ORDER BY 0.20452606894431014 ASC;
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS TEXT)) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS TEXT)) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY rt1.c4);
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS TEXT)) ORDER BY rt1.c4;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS TEXT)) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY rt1.c4);
SELECT COUNT(*) FROM v0, rt1, t0, rt0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) AS TEXT)) ORDER BY rt1.c4;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN (('),ቈT5 㓝z8')) AND ((v0.c0)))) AND ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN (('),ቈT5 㓝z8')) AND ((v0.c0)))) AND ((v0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN (('),ቈT5 㓝z8')) AND ((v0.c0)))) AND ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN (('),ቈT5 㓝z8')) AND ((v0.c0)))) AND ((v0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((((v0.c0)) BETWEEN (('),ቈT5 㓝z8')) AND ((v0.c0)))) AND ((v0.c0 IN ()))) ASC;
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((((v0.c0) IS TRUE)) IS FALSE));
SELECT ALL * FROM rt1 WHERE ((- (CASE 0.39360461220447795  WHEN rt1.c0 THEN rt1.c3 ELSE 'ꥐI' END))) ORDER BY (((rt1.c3 IN ()))||(ABS(rt1.c0)))  NULLS LAST, ((0xffffffffbaaf9aaa) NOT NULL);
SELECT SUM(count) FROM (SELECT (((- (CASE 0.39360461220447795  WHEN rt1.c0 THEN rt1.c3 ELSE 'ꥐI' END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 IN ()))||(ABS(rt1.c0)))  NULLS LAST, ((0Xffffffffbaaf9aaa) NOT NULL));
SELECT ALL * FROM rt1 WHERE ((- (CASE 0.39360461220447795  WHEN rt1.c0 THEN rt1.c3 ELSE 'ꥐI' END))) ORDER BY (((rt1.c3 IN ()))||(ABS(rt1.c0)))  NULLS LAST, ((0xffffffffbaaf9aaa) NOT NULL);
SELECT SUM(count) FROM (SELECT (((- (CASE 0.39360461220447795  WHEN rt1.c0 THEN rt1.c3 ELSE 'ꥐI' END))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c3 IN ()))||(ABS(rt1.c0)))  NULLS LAST, ((0Xffffffffbaaf9aaa) NOT NULL));
SELECT ALL * FROM rt1 WHERE ((- (CASE 0.39360461220447795  WHEN rt1.c0 THEN rt1.c3 ELSE 'ꥐI' END))) ORDER BY (((rt1.c3 IN ()))||(ABS(rt1.c0)))  NULLS LAST, ((0xffffffffbaaf9aaa) NOT NULL);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE RTRIM) NOTNULL) WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))LIKE(IFNULL(DISTINCT rt0.c0, NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE RTRIM) NOTNULL) ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))LIKE(IFNULL(DISTINCT rt0.c0, NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE RTRIM) NOTNULL) WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))LIKE(IFNULL(DISTINCT rt0.c0, NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)LIKE(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE RTRIM) NOTNULL) ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))LIKE(IFNULL(DISTINCT rt0.c0, NULL))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 LEFT OUTER JOIN v0 ON ((rt0.c1 COLLATE RTRIM) NOTNULL) WHERE ((((rt0.c1)LIKE(rt0.c2)) IN ())) ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(t0.c0)))OR(rt0.c2)))AND(rt0.c2)))LIKE(IFNULL(DISTINCT rt0.c0, NULL))) DESC;
SELECT * FROM rt0, t0, rt1 WHERE (CASE CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t0.c0 THEN rt0.c2 END  WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (((rt0.c3, t0.c0, rt0.c3))<((rt1.c3, rt0.c2, t0.c0))) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'cc7c')) WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt1.c3) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t0.c0 THEN rt0.c2 END  WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (((rt0.c3, t0.c0, rt0.c3))<((rt1.c3, rt0.c2, t0.c0))) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'cc7c')) WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt1.c3) NOTNULL) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CASE CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t0.c0 THEN rt0.c2 END  WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (((rt0.c3, t0.c0, rt0.c3))<((rt1.c3, rt0.c2, t0.c0))) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'cc7c')) WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt1.c3) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t0.c0 THEN rt0.c2 END  WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (((rt0.c3, t0.c0, rt0.c3))<((rt1.c3, rt0.c2, t0.c0))) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'cc7c')) WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt1.c3) NOTNULL) END) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT * FROM rt0, t0, rt1 WHERE (CASE CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN t0.c0 THEN rt0.c2 END  WHEN NULL THEN CAST(t0.c0 AS BLOB) WHEN (((rt0.c3, t0.c0, rt0.c3))<((rt1.c3, rt0.c2, t0.c0))) THEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'cc7c')) WHEN ((rt0.c0)<<(rt0.c1)) THEN ((rt1.c3) NOTNULL) END);
SELECT * FROM v0, rt1 NOT INDEXED WHERE ((((0.15352338621248884) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY v0.c0 ASC  NULLS FIRST, CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN v0.c0 END THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN x'' ELSE rt1.c4 END ELSE (((rt1.c1))=((rt1.c2))) END, LOWER(('-1172985520' IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.15352338621248884) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY v0.c0 ASC  NULLS FIRST, CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN v0.c0 END THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN x'' ELSE rt1.c4 END ELSE (((rt1.c1))=((rt1.c2))) END, LOWER(('-1172985520' IN ()))  NULLS FIRST);
SELECT * FROM v0, rt1 NOT INDEXED WHERE ((((0.15352338621248884) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY v0.c0 ASC  NULLS FIRST, CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN v0.c0 END THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN x'' ELSE rt1.c4 END ELSE (((rt1.c1))=((rt1.c2))) END, LOWER(('-1172985520' IN ()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.15352338621248884) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) IS TRUE)  as count FROM v0, rt1 ORDER BY v0.c0 ASC  NULLS FIRST, CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN v0.c0 END THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN x'' ELSE rt1.c4 END ELSE (((rt1.c1))=((rt1.c2))) END, LOWER(('-1172985520' IN ()))  NULLS FIRST);
SELECT * FROM v0, rt1 NOT INDEXED WHERE ((((0.15352338621248884) NOT BETWEEN (rt1.c2) AND (rt1.c1)) IN ())) ORDER BY v0.c0 ASC  NULLS FIRST, CASE WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN v0.c0 END THEN CASE rt1.c2  WHEN v0.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN x'' ELSE rt1.c4 END ELSE (((rt1.c1))=((rt1.c2))) END, LOWER(('-1172985520' IN ()))  NULLS FIRST;
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY (- ((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY (- ((+ (rt1.c0)))));
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY (- ((+ (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1, v0 ORDER BY (- ((+ (rt1.c0)))));
SELECT ALL * FROM rt1, v0 WHERE (rt1.c2) ORDER BY (- ((+ (rt1.c0))));
SELECT COUNT(*) FROM rt0 WHERE (''') 4ꞽ2unZ' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((''') 4ꞽ2unZ' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (''') 4ꞽ2unZ' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((''') 4ꞽ2unZ' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (''') 4ꞽ2unZ' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOTNULL))))  NULLS FIRST, ((((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))<>(((t0.c0)IS(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOTNULL))))  NULLS FIRST, ((((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))!=(((t0.c0)IS(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOTNULL))))  NULLS FIRST, ((((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))<>(((t0.c0)IS(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOTNULL))))  NULLS FIRST, ((((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))!=(((t0.c0)IS(v0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT (t0.c0 COLLATE RTRIM))) ORDER BY ((((- (t0.c0))))<=((((t0.c0) NOTNULL))))  NULLS FIRST, ((((((((((t0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))<>(((t0.c0)IS(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (rt0.c4) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (rt0.c4) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (rt0.c4) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (rt0.c4) AND ((NULL IN ())))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((NULL) NOT BETWEEN (rt0.c4) AND ((NULL IN ()))));
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c1 END))<=((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c1 END))<=((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c1 END))<=((((rt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c1 END))<=((((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE ((((CASE v0.c0  WHEN rt1.c4 THEN rt1.c1 END))<=((((rt1.c0) NOTNULL)))));
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(PRINTF(t0.c0, rt1.c1, rt1.c2) AS TEXT)) ORDER BY (NOT ((((rt0.c2))>((rt1.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(t0.c0, rt1.c1, rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT ((((rt0.c2))>((rt1.c4))))) DESC);
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(PRINTF(t0.c0, rt1.c1, rt1.c2) AS TEXT)) ORDER BY (NOT ((((rt0.c2))>((rt1.c4))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(PRINTF(t0.c0, rt1.c1, rt1.c2) AS TEXT)) IS TRUE)  as count FROM rt0, t0, rt1 ORDER BY (NOT ((((rt0.c2))>((rt1.c4))))) DESC);
SELECT ALL * FROM rt0, t0, rt1 WHERE (CAST(PRINTF(t0.c0, rt1.c1, rt1.c2) AS TEXT)) ORDER BY (NOT ((((rt0.c2))>((rt1.c4))))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_VERSION())+(((((t0.c0)OR(t0.c0)))OR(x'5b6c'))))) ORDER BY t0.c0 ASC, (- (((NULL)>=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())+(((((t0.c0)OR(t0.c0)))OR(x'5b6c'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC, (- (((NULL)>=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_VERSION())+(((((t0.c0)OR(t0.c0)))OR(x'5b6c'))))) ORDER BY t0.c0 ASC, (- (((NULL)>=(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())+(((((t0.c0)OR(t0.c0)))OR(x'5b6c'))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC, (- (((NULL)>=(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((SQLITE_VERSION())+(((((t0.c0)OR(t0.c0)))OR(x'5b6c'))))) ORDER BY t0.c0 ASC, (- (((NULL)>=(t0.c0))));
SELECT ALL * FROM t0, rt1, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (t0.c0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))>=(((rt0.c2)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))>=(((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))>=(((rt0.c2)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))>=(((rt0.c2)<>(rt0.c2))))) IS TRUE)  as count FROM v0, t0, rt1, rt0);
SELECT * FROM v0, t0, rt1, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt1.c2) AND (rt0.c0)))>=(((rt0.c2)!=(rt0.c2)))));
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287) ORDER BY ((((rt1.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.19782231138273287) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY ((((rt1.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287) ORDER BY ((((rt1.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.19782231138273287) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY ((((rt1.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287) ORDER BY ((((rt1.c2) NOT NULL)) BETWEEN (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))) AND (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (x'9905') ORDER BY json_patch(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)), CAST(t0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((x'9905') IS TRUE)  as count FROM rt0, t0, v0 ORDER BY json_patch(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)), CAST(t0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (x'9905') ORDER BY json_patch(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)), CAST(t0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((x'9905') IS TRUE)  as count FROM rt0, t0, v0 ORDER BY json_patch(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)), CAST(t0.c0 AS TEXT)));
SELECT COUNT(*) FROM rt0, t0, v0 WHERE (x'9905') ORDER BY json_patch(((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c1)), CAST(t0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE ((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0X73613b5e ELSE rt1.c2 END))<=((((rt0.c4) BETWEEN (v0.c0) AND (rt1.c0)))))) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0X73613b5e ELSE rt1.c2 END))<=((((rt0.c4) BETWEEN (v0.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE ((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0X73613b5e ELSE rt1.c2 END))<=((((rt0.c4) BETWEEN (v0.c0) AND (rt1.c0)))))) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0X73613b5e ELSE rt1.c2 END))<=((((rt0.c4) BETWEEN (v0.c0) AND (rt1.c0)))))) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0, v0, rt1 WHERE ((((CASE rt0.c1  WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt0.c3 WHEN t0.c0 THEN 0X73613b5e ELSE rt1.c2 END))<=((((rt0.c4) BETWEEN (v0.c0) AND (rt1.c0)))))) ORDER BY CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) AS BLOB) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (0.5336010378275734) AND (((rt1.c0)|(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (0.5336010378275734) AND (((rt1.c0)|(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (0.5336010378275734) AND (((rt1.c0)|(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (0.5336010378275734) AND (((rt1.c0)|(rt0.c3))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((CAST(rt1.c4 AS TEXT)) NOT BETWEEN (0.5336010378275734) AND (((rt1.c0)|(rt0.c3)))));
SELECT ALL * FROM rt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, t0, v0);
SELECT ALL * FROM rt0, t0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 NOT INDEXED, v0 WHERE (((rt0.c3)<<(((0.9672548155749627)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)<<(((0.9672548155749627)AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 NOT INDEXED, v0 WHERE (((rt0.c3)<<(((0.9672548155749627)AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)<<(((0.9672548155749627)AND(rt0.c3))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT ALL COUNT(*) FROM t0, rt0, rt1 NOT INDEXED, v0 WHERE (((rt0.c3)<<(((0.9672548155749627)AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN v0 ON CAST(rt0.c4 COLLATE NOCASE AS REAL) WHERE ('~Z') ORDER BY ((((rt0.c1) IS TRUE))&(TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT (('~Z') IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN v0 ON CAST(rt0.c4 COLLATE NOCASE AS REAL) ORDER BY ((((rt0.c1) IS TRUE))&(TYPEOF(t0.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN v0 ON CAST(rt0.c4 COLLATE NOCASE AS REAL) WHERE ('~Z') ORDER BY ((((rt0.c1) IS TRUE))&(TYPEOF(t0.c0)));
SELECT SUM(count) FROM (SELECT (('~Z') IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN v0 ON CAST(rt0.c4 COLLATE NOCASE AS REAL) ORDER BY ((((rt0.c1) IS TRUE))&(TYPEOF(t0.c0))));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON x'' RIGHT OUTER JOIN v0 ON CAST(rt0.c4 COLLATE NOCASE AS REAL) WHERE ('~Z') ORDER BY ((((rt0.c1) IS TRUE))&(TYPEOF(t0.c0)));
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS NUMERIC)) ORDER BY ABS((~ (rt1.c2))) ASC  NULLS FIRST, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ABS((~ (rt1.c2))) ASC  NULLS FIRST, rt1.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS NUMERIC)) ORDER BY ABS((~ (rt1.c2))) ASC  NULLS FIRST, rt1.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY ABS((~ (rt1.c2))) ASC  NULLS FIRST, rt1.c4  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE (CAST((rt1.c0 IN (rt1.c1)) AS NUMERIC)) ORDER BY ABS((~ (rt1.c2))) ASC  NULLS FIRST, rt1.c4  NULLS LAST;
SELECT * FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)GLOB((rt1.c0 IN ()))) WHERE (CASE WHEN 0Xffffffffcade08c9 THEN ((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c4)) ELSE ((rt1.c3) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffffcade08c9 THEN ((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c4)) ELSE ((rt1.c3) IS TRUE) END) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)GLOB((rt1.c0 IN ()))));
SELECT * FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)GLOB((rt1.c0 IN ()))) WHERE (CASE WHEN 0Xffffffffcade08c9 THEN ((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c4)) ELSE ((rt1.c3) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0Xffffffffcade08c9 THEN ((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c4)) ELSE ((rt1.c3) IS TRUE) END) IS TRUE)  as count FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)GLOB((rt1.c0 IN ()))));
SELECT * FROM rt1, t0 LEFT OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)GLOB((rt1.c0 IN ()))) WHERE (CASE WHEN 0Xffffffffcade08c9 THEN ((rt0.c3) BETWEEN (rt1.c3) AND (rt0.c4)) ELSE ((rt1.c3) IS TRUE) END);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3))>=((rt1.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>=((rt1.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3))>=((rt1.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3))>=((rt1.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3))>=((rt1.c3))) COLLATE RTRIM);
SELECT * FROM t0, rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c0)>=('-866085611')) THEN rt1.c3 WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c3)LIKE(t0.c0)) WHEN rt0.c1 COLLATE BINARY THEN (- (rt1.c0)) END WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c0)>=('-866085611')) THEN rt1.c3 WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c3)LIKE(t0.c0)) WHEN rt0.c1 COLLATE BINARY THEN (- (rt1.c0)) END);
SELECT * FROM t0, rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c0)>=('-866085611')) THEN rt1.c3 WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c3)LIKE(t0.c0)) WHEN rt0.c1 COLLATE BINARY THEN (- (rt1.c0)) END WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c0)>=('-866085611')) THEN rt1.c3 WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c3)LIKE(t0.c0)) WHEN rt0.c1 COLLATE BINARY THEN (- (rt1.c0)) END);
SELECT * FROM t0, rt0 INNER JOIN rt1 ON CASE WHEN ((rt1.c0)>=('-866085611')) THEN rt1.c3 WHEN (rt0.c0 IN (rt0.c1)) THEN ((rt0.c3)LIKE(t0.c0)) WHEN rt0.c1 COLLATE BINARY THEN (- (rt1.c0)) END WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c0) AND (NULL)) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) ORDER BY ((((rt0.c4)OR(rt0.c1)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)OR(rt0.c1)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) ORDER BY ((((rt0.c4)OR(rt0.c1)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)OR(rt0.c1)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY) ISNULL)) ORDER BY ((((rt0.c4)OR(rt0.c1)))IS NOT(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY rt0.c4 ASC, (((((((t0.c0)AND(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE RTRIM))), ((((rt0.c3) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c4 ASC, (((((((t0.c0)AND(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE RTRIM))), ((((rt0.c3) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY rt0.c4 ASC, (((((((t0.c0)AND(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE RTRIM))), ((((rt0.c3) IS TRUE)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c4 ASC, (((((((t0.c0)AND(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE RTRIM))), ((((rt0.c3) IS TRUE)) ISNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY rt0.c4 ASC, (((((((t0.c0)AND(rt0.c2)))AND(rt0.c3))))>=((rt0.c3 COLLATE RTRIM))), ((((rt0.c3) IS TRUE)) ISNULL);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CAST(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY CASE x''  WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((((rt0.c0)AND(t0.c0)))OR(rt0.c0)) ELSE t0.c0 END DESC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY CASE x''  WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((((rt0.c0)AND(t0.c0)))OR(rt0.c0)) ELSE t0.c0 END DESC  NULLS LAST, rt1.c1);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CAST(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY CASE x''  WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((((rt0.c0)AND(t0.c0)))OR(rt0.c0)) ELSE t0.c0 END DESC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY CASE x''  WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((((rt0.c0)AND(t0.c0)))OR(rt0.c0)) ELSE t0.c0 END DESC  NULLS LAST, rt1.c1);
SELECT COUNT(*) FROM rt1, rt0, t0, v0 WHERE (CAST(((rt1.c2) NOT BETWEEN (v0.c0) AND (rt0.c2)) AS NUMERIC)) ORDER BY CASE x''  WHEN ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN ((((rt0.c0)AND(t0.c0)))OR(rt0.c0)) ELSE t0.c0 END DESC  NULLS LAST, rt1.c1;
SELECT COUNT(*) FROM v0, rt1 WHERE ((~ (json_patch(v0.c0, x'31bc'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_patch(v0.c0, x'31bc')))) IS TRUE)  as count FROM v0, rt1);
SELECT COUNT(*) FROM v0, rt1 WHERE ((~ (json_patch(v0.c0, x'31bc'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_patch(v0.c0, x'31bc')))) IS TRUE)  as count FROM v0, rt1);
SELECT * FROM v0 WHERE ('-736779702');
SELECT SUM(count) FROM (SELECT ALL (('-736779702') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('-736779702');
SELECT SUM(count) FROM (SELECT ALL (('-736779702') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('-736779702');
SELECT ALL * FROM t0, v0 WHERE ('808370056');
SELECT SUM(count) FROM (SELECT (('808370056') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('808370056');
SELECT SUM(count) FROM (SELECT (('808370056') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('808370056');
SELECT * FROM v0 WHERE (LIKE(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKE(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKE(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKE(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKE(v0.c0, CASE v0.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM t0 WHERE (GLOB(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (GLOB(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((GLOB(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (GLOB(((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)), (t0.c0 IN ())));
SELECT COUNT(*) FROM rt0, v0, t0, rt1 WHERE (((((GLOB(rt1.c3, rt1.c4))AND((rt1.c1 IN ()))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(rt1.c3, rt1.c4))AND((rt1.c1 IN ()))))OR(rt0.c3))) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT COUNT(*) FROM rt0, v0, t0, rt1 WHERE (((((GLOB(rt1.c3, rt1.c4))AND((rt1.c1 IN ()))))OR(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((GLOB(rt1.c3, rt1.c4))AND((rt1.c1 IN ()))))OR(rt0.c3))) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT COUNT(*) FROM rt0, v0, t0, rt1 WHERE (((((GLOB(rt1.c3, rt1.c4))AND((rt1.c1 IN ()))))OR(rt0.c3)));
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE (CASE WHEN LENGTH(rt1.c1) THEN ((NULL)|(rt1.c2)) WHEN rt0.c3 THEN (rt0.c3 IN (rt0.c1, rt0.c4)) WHEN ((rt1.c4)<>(x'c2e1')) THEN (NOT (rt0.c3)) END) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LENGTH(rt1.c1) THEN ((NULL)|(rt1.c2)) WHEN rt0.c3 THEN (rt0.c3 IN (rt0.c1, rt0.c4)) WHEN ((rt1.c4)<>(x'c2e1')) THEN (NOT (rt0.c3)) END) IS TRUE)  as count FROM v0, t0, rt1, rt0 ORDER BY ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE (CASE WHEN LENGTH(rt1.c1) THEN ((NULL)|(rt1.c2)) WHEN rt0.c3 THEN (rt0.c3 IN (rt0.c1, rt0.c4)) WHEN ((rt1.c4)<>(x'c2e1')) THEN (NOT (rt0.c3)) END) ORDER BY ((NULL) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LENGTH(rt1.c1) THEN ((NULL)|(rt1.c2)) WHEN rt0.c3 THEN (rt0.c3 IN (rt0.c1, rt0.c4)) WHEN ((rt1.c4)<>(x'c2e1')) THEN (NOT (rt0.c3)) END) IS TRUE)  as count FROM v0, t0, rt1, rt0 ORDER BY ((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0, rt1, rt0 WHERE (CASE WHEN LENGTH(rt1.c1) THEN ((NULL)|(rt1.c2)) WHEN rt0.c3 THEN (rt0.c3 IN (rt0.c1, rt0.c4)) WHEN ((rt1.c4)<>(x'c2e1')) THEN (NOT (rt0.c3)) END) ORDER BY ((NULL) NOT NULL);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS REAL)) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((CAST(rt1.c4 AS REAL)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1, v0 WHERE (NULL COLLATE BINARY) ORDER BY TRIM(((' %<)R4O') NOTNULL)) DESC  NULLS LAST, '1038890205' ASC, (((t0.c0) NOTNULL) IN (CAST(rt1.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY TRIM(((' %<)R4O') NOTNULL)) DESC  NULLS LAST, '1038890205' ASC, (((t0.c0) NOTNULL) IN (CAST(rt1.c2 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1, v0 WHERE (NULL COLLATE BINARY) ORDER BY TRIM(((' %<)R4O') NOTNULL)) DESC  NULLS LAST, '1038890205' ASC, (((t0.c0) NOTNULL) IN (CAST(rt1.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY TRIM(((' %<)R4O') NOTNULL)) DESC  NULLS LAST, '1038890205' ASC, (((t0.c0) NOTNULL) IN (CAST(rt1.c2 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1, v0 WHERE (NULL COLLATE BINARY) ORDER BY TRIM(((' %<)R4O') NOTNULL)) DESC  NULLS LAST, '1038890205' ASC, (((t0.c0) NOTNULL) IN (CAST(rt1.c2 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE (0.3408683061479246);
SELECT SUM(count) FROM (SELECT ((0.3408683061479246) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE (0.3408683061479246);
SELECT SUM(count) FROM (SELECT ((0.3408683061479246) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON NULL);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON NULL WHERE (0.3408683061479246);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt0.c3)>>(rt0.c0)))=(((rt0.c4)*(rt0.c2)))) WHERE (((((rt1.c1)&(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt0.c3)>>(rt0.c0)))=(((rt0.c4)*(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt0.c3)>>(rt0.c0)))=(((rt0.c4)*(rt0.c2)))) WHERE (((((rt1.c1)&(rt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((rt0.c3)>>(rt0.c0)))=(((rt0.c4)*(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((rt0.c3)>>(rt0.c0)))=(((rt0.c4)*(rt0.c2)))) WHERE (((((rt1.c1)&(rt1.c0))) NOT NULL));
SELECT ALL * FROM rt1, v0 WHERE ((- (rt1.c2))) ORDER BY ((v0.c0)%((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c2))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c0)%((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE ((- (rt1.c2))) ORDER BY ((v0.c0)%((- (rt1.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (rt1.c2))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((v0.c0)%((- (rt1.c2))))  NULLS LAST);
SELECT ALL * FROM rt1, v0 WHERE ((- (rt1.c2))) ORDER BY ((v0.c0)%((- (rt1.c2))))  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (CASE ((v0.c0)>=(t0.c0))  WHEN ((t0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE CHANGES() END) ORDER BY CAST(COALESCE(v0.c0, v0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(t0.c0))  WHEN ((t0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE CHANGES() END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(COALESCE(v0.c0, v0.c0) AS TEXT) ASC);
SELECT ALL * FROM v0, t0 WHERE (CASE ((v0.c0)>=(t0.c0))  WHEN ((t0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE CHANGES() END) ORDER BY CAST(COALESCE(v0.c0, v0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(t0.c0))  WHEN ((t0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE CHANGES() END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(COALESCE(v0.c0, v0.c0) AS TEXT) ASC);
SELECT ALL * FROM v0, t0 WHERE (CASE ((v0.c0)>=(t0.c0))  WHEN ((t0.c0)||(v0.c0)) THEN ((v0.c0) NOT NULL) ELSE CHANGES() END) ORDER BY CAST(COALESCE(v0.c0, v0.c0) AS TEXT) ASC;
SELECT * FROM rt1 WHERE (((((rt1.c4) NOT NULL))>=(LIKELIHOOD(rt1.c4, 0.2678412221918546))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT NULL))>=(LIKELIHOOD(rt1.c4, 0.2678412221918546)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4) NOT NULL))>=(LIKELIHOOD(rt1.c4, 0.2678412221918546))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) NOT NULL))>=(LIKELIHOOD(rt1.c4, 0.2678412221918546)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4) NOT NULL))>=(LIKELIHOOD(rt1.c4, 0.2678412221918546))));
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)<>(v0.c0))))) ORDER BY CASE COALESCE(DISTINCT v0.c0, v0.c0)  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN NULL THEN (- (v0.c0)) WHEN v0.c0 THEN (v0.c0 IN ()) WHEN ((NULL)+(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE COALESCE(DISTINCT v0.c0, v0.c0)  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN NULL THEN (- (v0.c0)) WHEN v0.c0 THEN (v0.c0 IN ()) WHEN ((NULL)+(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)<>(v0.c0))))) ORDER BY CASE COALESCE(DISTINCT v0.c0, v0.c0)  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN NULL THEN (- (v0.c0)) WHEN v0.c0 THEN (v0.c0 IN ()) WHEN ((NULL)+(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE COALESCE(DISTINCT v0.c0, v0.c0)  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN NULL THEN (- (v0.c0)) WHEN v0.c0 THEN (v0.c0 IN ()) WHEN ((NULL)+(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) ISNULL)) BETWEEN (((((v0.c0)AND(v0.c0)))AND(v0.c0))) AND (((v0.c0)<>(v0.c0))))) ORDER BY CASE COALESCE(DISTINCT v0.c0, v0.c0)  WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) WHEN NULL THEN (- (v0.c0)) WHEN v0.c0 THEN (v0.c0 IN ()) WHEN ((NULL)+(v0.c0)) THEN ((v0.c0) IS TRUE) WHEN CAST(v0.c0 AS TEXT) THEN v0.c0 COLLATE NOCASE END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ ((NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ ((NOT (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt0.c4))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ ((NOT (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)>=(rt1.c4)))))) ORDER BY ((rt1.c4 COLLATE RTRIM)%('0.9672548155749627'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)>=(rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c4 COLLATE RTRIM)%('0.9672548155749627')));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)>=(rt1.c4)))))) ORDER BY ((rt1.c4 COLLATE RTRIM)%('0.9672548155749627'));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)>=(rt1.c4)))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c4 COLLATE RTRIM)%('0.9672548155749627')));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0)) BETWEEN ((((rt1.c2) NOTNULL))) AND ((((rt1.c1)>=(rt1.c4)))))) ORDER BY ((rt1.c4 COLLATE RTRIM)%('0.9672548155749627'));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))IS(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))IS(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))IS(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))IS(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))IS(((v0.c0)%(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))>=(((v0.c0)%(rt0.c3)))) WHERE (((((rt0.c4) NOT BETWEEN (0.02588258884915784) AND (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (0.02588258884915784) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))>=(((v0.c0)%(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))>=(((v0.c0)%(rt0.c3)))) WHERE (((((rt0.c4) NOT BETWEEN (0.02588258884915784) AND (rt0.c3))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) NOT BETWEEN (0.02588258884915784) AND (rt0.c3))) ISNULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))>=(((v0.c0)%(rt0.c3)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)))OR(v0.c0)))>=(((v0.c0)%(rt0.c3)))) WHERE (((((rt0.c4) NOT BETWEEN (0.02588258884915784) AND (rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON x'6fc1' WHERE (((((rt1.c1, rt1.c4, rt0.c3))<((rt1.c0, rt0.c0, t0.c0))) IN ((((rt1.c2)) BETWEEN ((1.038890205E9)) AND ((rt1.c2)))))) ORDER BY (((rt1.c4 IN ()))IS NOT(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c4, rt0.c3))<((rt1.c0, rt0.c0, t0.c0))) IN ((((rt1.c2)) BETWEEN ((1.038890205E9)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN rt1 ON x'6fc1' ORDER BY (((rt1.c4 IN ()))IS NOT(CAST(rt0.c1 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON x'6fc1' WHERE (((((rt1.c1, rt1.c4, rt0.c3))<((rt1.c0, rt0.c0, t0.c0))) IN ((((rt1.c2)) BETWEEN ((1.038890205E9)) AND ((rt1.c2)))))) ORDER BY (((rt1.c4 IN ()))IS NOT(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1, rt1.c4, rt0.c3))<((rt1.c0, rt0.c0, t0.c0))) IN ((((rt1.c2)) BETWEEN ((1.038890205E9)) AND ((rt1.c2)))))) IS TRUE)  as count FROM v0, t0, rt0 CROSS JOIN rt1 ON x'6fc1' ORDER BY (((rt1.c4 IN ()))IS NOT(CAST(rt0.c1 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 CROSS JOIN rt1 ON x'6fc1' WHERE (((((rt1.c1, rt1.c4, rt0.c3))<((rt1.c0, rt0.c0, t0.c0))) IN ((((rt1.c2)) BETWEEN ((1.038890205E9)) AND ((rt1.c2)))))) ORDER BY (((rt1.c4 IN ()))IS NOT(CAST(rt0.c1 AS BLOB)))  NULLS LAST;
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY NULL DESC);
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY NULL DESC);
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE ((((UNLIKELY(rt0.c2)))>=((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(rt0.c2)))>=((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE ((((UNLIKELY(rt0.c2)))>=((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((((UNLIKELY(rt0.c2)))>=((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4)))))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE ((((UNLIKELY(rt0.c2)))>=((((((rt1.c2)AND(rt1.c4)))AND(rt1.c4))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE (((((rt0.c3)GLOB(rt0.c1))) IS FALSE)) ORDER BY (((+ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c3 AS TEXT))), HEX(rt0.c1) COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, (((NULL IN (rt0.c1)))<<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN '-2085604199' WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)GLOB(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) ORDER BY (((+ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c3 AS TEXT))), HEX(rt0.c1) COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, (((NULL IN (rt0.c1)))<<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN '-2085604199' WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE (((((rt0.c3)GLOB(rt0.c1))) IS FALSE)) ORDER BY (((+ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c3 AS TEXT))), HEX(rt0.c1) COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, (((NULL IN (rt0.c1)))<<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN '-2085604199' WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)GLOB(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) ORDER BY (((+ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c3 AS TEXT))), HEX(rt0.c1) COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, (((NULL IN (rt0.c1)))<<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN '-2085604199' WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END)) DESC);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST((- (rt0.c0)) AS TEXT) WHERE (((((rt0.c3)GLOB(rt0.c1))) IS FALSE)) ORDER BY (((+ (rt0.c3))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END) AND (CAST(rt0.c3 AS TEXT))), HEX(rt0.c1) COLLATE NOCASE COLLATE BINARY DESC  NULLS FIRST, (((NULL IN (rt0.c1)))<<(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN '-2085604199' WHEN rt0.c4 THEN rt0.c2 ELSE t0.c0 END)) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LIKELY(rt1.c1) AS INTEGER)) ORDER BY ((((0x6e4fa1b2)%(rt1.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, rt1.c1))) DESC  NULLS LAST, (NOT ((((rt1.c2, rt1.c1, rt1.c2))<((rt1.c3, rt1.c1, NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((0x6e4fa1b2)%(rt1.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, rt1.c1))) DESC  NULLS LAST, (NOT ((((rt1.c2, rt1.c1, rt1.c2))<((rt1.c3, rt1.c1, NULL)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LIKELY(rt1.c1) AS INTEGER)) ORDER BY ((((0x6e4fa1b2)%(rt1.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, rt1.c1))) DESC  NULLS LAST, (NOT ((((rt1.c2, rt1.c1, rt1.c2))<((rt1.c3, rt1.c1, NULL)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELY(rt1.c1) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((((0x6e4fa1b2)%(rt1.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, rt1.c1))) DESC  NULLS LAST, (NOT ((((rt1.c2, rt1.c1, rt1.c2))<((rt1.c3, rt1.c1, NULL)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(LIKELY(rt1.c1) AS INTEGER)) ORDER BY ((((0x6e4fa1b2)%(rt1.c0))) NOT BETWEEN (x'') AND (IFNULL(DISTINCT NULL, rt1.c1))) DESC  NULLS LAST, (NOT ((((rt1.c2, rt1.c1, rt1.c2))<((rt1.c3, rt1.c1, NULL)))))  NULLS LAST;
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((('277467194', rt1.c4, rt1.c3)) BETWEEN (((~ (0.4495794362051564)), v0.c0 COLLATE NOCASE, 'VC')) AND ((((((t0.c0)AND(rt1.c3)))AND(rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c2)<(0x1be3555a345c6962))))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((('277467194', rt1.c4, rt1.c3)) BETWEEN (((~ (0.4495794362051564)), v0.c0 COLLATE NOCASE, 'VC')) AND ((((((t0.c0)AND(rt1.c3)))AND(rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c2)<(0X1be3555a345c6962))))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((('277467194', rt1.c4, rt1.c3)) BETWEEN (((~ (0.4495794362051564)), v0.c0 COLLATE NOCASE, 'VC')) AND ((((((t0.c0)AND(rt1.c3)))AND(rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c2)<(0x1be3555a345c6962))))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((('277467194', rt1.c4, rt1.c3)) BETWEEN (((~ (0.4495794362051564)), v0.c0 COLLATE NOCASE, 'VC')) AND ((((((t0.c0)AND(rt1.c3)))AND(rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c2)<(0X1be3555a345c6962))))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN v0 ON ((('277467194', rt1.c4, rt1.c3)) BETWEEN (((~ (0.4495794362051564)), v0.c0 COLLATE NOCASE, 'VC')) AND ((((((t0.c0)AND(rt1.c3)))AND(rt1.c0)), CASE WHEN rt1.c3 THEN rt1.c2 END, ((rt1.c2)<(0x1be3555a345c6962))))) WHERE (CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM t0, rt1 WHERE ('k!');
SELECT SUM(count) FROM (SELECT ALL (('k!') IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ('k!');
SELECT SUM(count) FROM (SELECT ALL (('k!') IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE ('k!');
SELECT * FROM v0 WHERE ((+ ((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ ((('') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((('') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ ((('') NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((+ ((('') NOTNULL))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (x''))) AND (((rt0.c4)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (x''))) AND (((rt0.c4)>=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (x''))) AND (((rt0.c4)>=(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (x''))) AND (((rt0.c4)>=(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3 IN ())) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c3) AND (x''))) AND (((rt0.c4)>=(rt0.c4)))));
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (MAX((+ (rt0.c4)), ((rt1.c1) NOTNULL), (rt0.c0 IN ()), ((rt1.c2)GLOB(rt0.c1)))) ORDER BY CAST(rt0.c2 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MAX((+ (rt0.c4)), ((rt1.c1) NOTNULL), (rt0.c0 IN ()), ((rt1.c2)GLOB(rt0.c1)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CAST(rt0.c2 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (MAX((+ (rt0.c4)), ((rt1.c1) NOTNULL), (rt0.c0 IN ()), ((rt1.c2)GLOB(rt0.c1)))) ORDER BY CAST(rt0.c2 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MAX((+ (rt0.c4)), ((rt1.c1) NOTNULL), (rt0.c0 IN ()), ((rt1.c2)GLOB(rt0.c1)))) IS TRUE)  as count FROM v0, rt1, rt0 ORDER BY CAST(rt0.c2 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt1, rt0 WHERE (MAX((+ (rt0.c4)), ((rt1.c1) NOTNULL), (rt0.c0 IN ()), ((rt1.c2)GLOB(rt0.c1)))) ORDER BY CAST(rt0.c2 AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)||(0.11388772382170742))) ORDER BY (- ((~ (rt0.c1))))  NULLS FIRST, CAST(((rt0.c4) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)||(0.11388772382170742))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((~ (rt0.c1))))  NULLS FIRST, CAST(((rt0.c4) IS TRUE) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)||(0.11388772382170742))) ORDER BY (- ((~ (rt0.c1))))  NULLS FIRST, CAST(((rt0.c4) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)||(0.11388772382170742))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((~ (rt0.c1))))  NULLS FIRST, CAST(((rt0.c4) IS TRUE) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)||(0.11388772382170742))) ORDER BY (- ((~ (rt0.c1))))  NULLS FIRST, CAST(((rt0.c4) IS TRUE) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c1)) THEN NULL END) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))||(((rt0.c2) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)<<(rt0.c1)) THEN NULL END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))||(((rt0.c2) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c1)) THEN NULL END) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))||(((rt0.c2) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)<<(rt0.c1)) THEN NULL END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))||(((rt0.c2) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN ((rt0.c3)<<(rt0.c1)) THEN NULL END) ORDER BY (((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))||(((rt0.c2) NOT NULL))) DESC  NULLS LAST;
SELECT ALL * FROM t0, rt1, v0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (((rt1.c1)<=(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (((rt1.c1)<=(x''))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (((rt1.c1)<=(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (((rt1.c1)<=(x''))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (((CAST(rt1.c1 AS TEXT)) BETWEEN (((v0.c0) BETWEEN (rt1.c0) AND (rt1.c3))) AND (((rt1.c1)<=(x'')))));
SELECT * FROM rt0, t0, rt1, v0 NOT INDEXED WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (~ (rt0.c3)) END) ORDER BY 'BYrNu';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY 'BYrNu');
SELECT * FROM rt0, t0, rt1, v0 NOT INDEXED WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (~ (rt0.c3)) END) ORDER BY 'BYrNu';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) ISNULL) THEN (~ (rt0.c3)) END) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY 'BYrNu');
SELECT * FROM rt0, t0, rt1, v0 NOT INDEXED WHERE (CASE WHEN ((rt1.c2) ISNULL) THEN (~ (rt0.c3)) END) ORDER BY 'BYrNu';
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, rt1 ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (CAST(NULL AS INTEGER)) ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c4)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY rt1.c2  NULLS LAST, ((((rt1.c4)*(rt1.c1)))>>(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST, ((((rt1.c4)*(rt1.c1)))>>(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY rt1.c2  NULLS LAST, ((((rt1.c4)*(rt1.c1)))>>(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c4))));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST, ((((rt1.c4)*(rt1.c1)))>>(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))));
SELECT COUNT(*) FROM rt1 WHERE (((NULL COLLATE RTRIM) IS TRUE)) ORDER BY rt1.c2  NULLS LAST, ((((rt1.c4)*(rt1.c1)))>>(((((((((rt1.c0)OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c4)))AND(rt1.c4))));
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(rt0.c2, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CASE rt1.c2  WHEN rt0.c1 THEN rt0.c3 END)<(((((rt0.c4)AND(rt0.c2)))OR(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2, NULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((CASE rt1.c2  WHEN rt0.c1 THEN rt0.c3 END)<(((((rt0.c4)AND(rt0.c2)))OR(rt1.c1)))) ASC);
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(rt0.c2, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CASE rt1.c2  WHEN rt0.c1 THEN rt0.c3 END)<(((((rt0.c4)AND(rt0.c2)))OR(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c2, NULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY ((CASE rt1.c2  WHEN rt0.c1 THEN rt0.c3 END)<(((((rt0.c4)AND(rt0.c2)))OR(rt1.c1)))) ASC);
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(rt0.c2, NULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CASE rt1.c2  WHEN rt0.c1 THEN rt0.c3 END)<(((((rt0.c4)AND(rt0.c2)))OR(rt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt0.c3)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt0.c3)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt0.c3)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt0.c3)IS(v0.c0))))) IS TRUE)  as count FROM v0, rt1, t0, rt0);
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (((rt0.c4 COLLATE NOCASE) BETWEEN (t0.c0) AND (((rt0.c3)IS(v0.c0)))));
SELECT ALL * FROM t0 WHERE (CASE (+ (-8.91418423E8))  WHEN ((t0.c0)<=(t0.c0)) THEN (((t0.c0))<=((x''))) ELSE t0.c0 END) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (-8.91418423E8))  WHEN ((t0.c0)<=(t0.c0)) THEN (((t0.c0))<=((x''))) ELSE t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE (+ (-8.91418423E8))  WHEN ((t0.c0)<=(t0.c0)) THEN (((t0.c0))<=((x''))) ELSE t0.c0 END) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (-8.91418423E8))  WHEN ((t0.c0)<=(t0.c0)) THEN (((t0.c0))<=((x''))) ELSE t0.c0 END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) IS TRUE)) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CASE (+ (-8.91418423E8))  WHEN ((t0.c0)<=(t0.c0)) THEN (((t0.c0))<=((x''))) ELSE t0.c0 END) ORDER BY ((((t0.c0) IS TRUE)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY t0.c0 ASC;
SELECT * FROM t0, rt1 WHERE ((((~ (rt1.c3))) NOT BETWEEN ((~ (rt1.c1))) AND ((rt1.c2 IN ())))) ORDER BY CAST(MIN(NULL, t0.c0, rt1.c0, rt1.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3))) NOT BETWEEN ((~ (rt1.c1))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(MIN(NULL, t0.c0, rt1.c0, rt1.c0) AS NUMERIC));
SELECT * FROM t0, rt1 WHERE ((((~ (rt1.c3))) NOT BETWEEN ((~ (rt1.c1))) AND ((rt1.c2 IN ())))) ORDER BY CAST(MIN(NULL, t0.c0, rt1.c0, rt1.c0) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c3))) NOT BETWEEN ((~ (rt1.c1))) AND ((rt1.c2 IN ())))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(MIN(NULL, t0.c0, rt1.c0, rt1.c0) AS NUMERIC));
SELECT * FROM t0, rt1 WHERE ((((~ (rt1.c3))) NOT BETWEEN ((~ (rt1.c1))) AND ((rt1.c2 IN ())))) ORDER BY CAST(MIN(NULL, t0.c0, rt1.c0, rt1.c0) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt1, t0, v0, rt0 WHERE (((json_array_length(rt0.c4))!=(((rt0.c4)*(rt1.c0))))) ORDER BY ABS(DISTINCT rt1.c1 COLLATE NOCASE), (((((rt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND('JS'));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c4))<>(((rt0.c4)*(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY ABS(DISTINCT rt1.c1 COLLATE NOCASE), (((((rt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND('JS')));
SELECT ALL COUNT(*) FROM rt1, t0, v0, rt0 WHERE (((json_array_length(rt0.c4))!=(((rt0.c4)*(rt1.c0))))) ORDER BY ABS(DISTINCT rt1.c1 COLLATE NOCASE), (((((rt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND('JS'));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c4))<>(((rt0.c4)*(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY ABS(DISTINCT rt1.c1 COLLATE NOCASE), (((((rt1.c0 IN ()))AND(CAST(rt0.c0 AS NUMERIC))))AND('JS')));
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c4 ELSE rt0.c0 END) BETWEEN (((rt1.c0) NOT NULL)) AND (((((((((v0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c3)))OR(t0.c0))))) ORDER BY LOWER(((x'')!=(rt1.c4)))  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c4 ELSE rt0.c0 END) BETWEEN (((rt1.c0) NOT NULL)) AND (((((((((v0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0, t0 ORDER BY LOWER(((x'')<>(rt1.c4)))  NULLS LAST, rt0.c0 ASC);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c4 ELSE rt0.c0 END) BETWEEN (((rt1.c0) NOT NULL)) AND (((((((((v0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c3)))OR(t0.c0))))) ORDER BY LOWER(((x'')!=(rt1.c4)))  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c4 ELSE rt0.c0 END) BETWEEN (((rt1.c0) NOT NULL)) AND (((((((((v0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt1, v0 NOT INDEXED, rt0, t0 ORDER BY LOWER(((x'')<>(rt1.c4)))  NULLS LAST, rt0.c0 ASC);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c4 ELSE rt0.c0 END) BETWEEN (((rt1.c0) NOT NULL)) AND (((((((((v0.c0)AND(rt0.c2)))AND(rt1.c3)))OR(rt0.c3)))OR(t0.c0))))) ORDER BY LOWER(((x'')!=(rt1.c4)))  NULLS LAST, rt0.c0 ASC;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON 0.12887868582567852 INNER JOIN v0 ON (((((rt0.c4)<=(rt1.c0))))<=((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt1.c0))))) WHERE (((((('')>(rt0.c4))))<((rt1.c0 COLLATE BINARY)))) ORDER BY (~ (SQLITE_COMPILEOPTION_USED(rt0.c4))) ASC  NULLS LAST, (('-1806015001') BETWEEN ((- (rt0.c1))) AND ((rt1.c1 IN (rt0.c1, rt0.c1)))) DESC, ((LTRIM(rt0.c0, v0.c0)) BETWEEN ((-3.7523984E7 IN ())) AND (rt1.c4 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')>(rt0.c4))))<((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON 0.12887868582567852 INNER JOIN v0 ON (((((rt0.c4)<=(rt1.c0))))<=((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt1.c0))))) ORDER BY (~ (SQLITE_COMPILEOPTION_USED(rt0.c4))) ASC  NULLS LAST, (('-1806015001') BETWEEN ((- (rt0.c1))) AND ((rt1.c1 IN (rt0.c1, rt0.c1)))) DESC, ((LTRIM(rt0.c0, v0.c0)) BETWEEN ((-3.7523984E7 IN ())) AND (rt1.c4 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON 0.12887868582567852 INNER JOIN v0 ON (((((rt0.c4)<=(rt1.c0))))<=((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt1.c0))))) WHERE (((((('')>(rt0.c4))))<((rt1.c0 COLLATE BINARY)))) ORDER BY (~ (SQLITE_COMPILEOPTION_USED(rt0.c4))) ASC  NULLS LAST, (('-1806015001') BETWEEN ((- (rt0.c1))) AND ((rt1.c1 IN (rt0.c1, rt0.c1)))) DESC, ((LTRIM(rt0.c0, v0.c0)) BETWEEN ((-3.7523984E7 IN ())) AND (rt1.c4 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((('')>(rt0.c4))))<((rt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON 0.12887868582567852 INNER JOIN v0 ON (((((rt0.c4)<=(rt1.c0))))<=((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt1.c0))))) ORDER BY (~ (SQLITE_COMPILEOPTION_USED(rt0.c4))) ASC  NULLS LAST, (('-1806015001') BETWEEN ((- (rt0.c1))) AND ((rt1.c1 IN (rt0.c1, rt0.c1)))) DESC, ((LTRIM(rt0.c0, v0.c0)) BETWEEN ((-3.7523984E7 IN ())) AND (rt1.c4 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON 0.12887868582567852 INNER JOIN v0 ON (((((rt0.c4)<=(rt1.c0))))<=((((rt0.c1) NOT BETWEEN (v0.c0) AND (rt1.c0))))) WHERE (((((('')>(rt0.c4))))<((rt1.c0 COLLATE BINARY)))) ORDER BY (~ (SQLITE_COMPILEOPTION_USED(rt0.c4))) ASC  NULLS LAST, (('-1806015001') BETWEEN ((- (rt0.c1))) AND ((rt1.c1 IN (rt0.c1, rt0.c1)))) DESC, ((LTRIM(rt0.c0, v0.c0)) BETWEEN ((-3.7523984E7 IN ())) AND (rt1.c4 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((rt1.c1) NOTNULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((rt1.c3 IN (rt1.c4)) IN ())) ORDER BY (((('-672585287')OR(((rt0.c0)|(t0.c0)))))AND((NOT (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY (((('-672585287')OR(((rt0.c0)|(t0.c0)))))AND((NOT (rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((rt1.c3 IN (rt1.c4)) IN ())) ORDER BY (((('-672585287')OR(((rt0.c0)|(t0.c0)))))AND((NOT (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3 IN (rt1.c4)) IN ())) IS TRUE)  as count FROM rt0, t0, rt1, v0 ORDER BY (((('-672585287')OR(((rt0.c0)|(t0.c0)))))AND((NOT (rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0, rt1, v0 WHERE (((rt1.c3 IN (rt1.c4)) IN ())) ORDER BY (((('-672585287')OR(((rt0.c0)|(t0.c0)))))AND((NOT (rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt0.c2)<(rt1.c2)))IS NOT(((v0.c0)=(rt1.c1)))) WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt0.c2)<(rt1.c2)))IS NOT(((v0.c0)==(rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt0.c2)<(rt1.c2)))IS NOT(((v0.c0)=(rt1.c1)))) WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt0.c2)<(rt1.c2)))IS NOT(((v0.c0)==(rt1.c1)))));
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON ((((rt0.c2)<(rt1.c2)))IS NOT(((v0.c0)=(rt1.c1)))) WHERE ((('') NOT NULL));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c0)<<(v0.c0))) NOT NULL)) ORDER BY ((1.18378721E8)|(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((1.18378721E8)|(CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c0)<<(v0.c0))) NOT NULL)) ORDER BY ((1.18378721E8)|(CAST(v0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<<(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((1.18378721E8)|(CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c0)<<(v0.c0))) NOT NULL)) ORDER BY ((1.18378721E8)|(CAST(v0.c0 AS TEXT)));
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE ((((CASE WHEN rt0.c4 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE v0.c0 END, rt0.c3, CASE rt0.c1  WHEN rt1.c3 THEN rt0.c3 END))>=((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)), 0.694804346150553, t0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c3)/(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'd5a6')+(load_extension(rt0.c2, rt0.c1))) DESC  NULLS FIRST, ((((rt1.c0) NOTNULL))GLOB(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c4 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE v0.c0 END, rt0.c3, CASE rt0.c1  WHEN rt1.c3 THEN rt0.c3 END))>=((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)), 0.694804346150553, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, v0, rt0, t0 ORDER BY ((((rt0.c3)/(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'd5a6')+(load_extension(rt0.c2, rt0.c1))) DESC  NULLS FIRST, ((((rt1.c0) NOTNULL))GLOB(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE ((((CASE WHEN rt0.c4 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE v0.c0 END, rt0.c3, CASE rt0.c1  WHEN rt1.c3 THEN rt0.c3 END))>=((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)), 0.694804346150553, t0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c3)/(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'd5a6')+(load_extension(rt0.c2, rt0.c1))) DESC  NULLS FIRST, ((((rt1.c0) NOTNULL))GLOB(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt0.c4 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE v0.c0 END, rt0.c3, CASE rt0.c1  WHEN rt1.c3 THEN rt0.c3 END))>=((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)), 0.694804346150553, t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1, v0, rt0, t0 ORDER BY ((((rt0.c3)/(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'd5a6')+(load_extension(rt0.c2, rt0.c1))) DESC  NULLS FIRST, ((((rt1.c0) NOTNULL))GLOB(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE ((((CASE WHEN rt0.c4 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN rt0.c4 THEN rt1.c1 ELSE v0.c0 END, rt0.c3, CASE rt0.c1  WHEN rt1.c3 THEN rt0.c3 END))>=((((((v0.c0)OR(rt0.c0)))AND(rt0.c0)), 0.694804346150553, t0.c0 COLLATE RTRIM)))) ORDER BY ((((rt0.c3)/(v0.c0))) ISNULL) ASC  NULLS FIRST, ((x'd5a6')+(load_extension(rt0.c2, rt0.c1))) DESC  NULLS FIRST, ((((rt1.c0) NOTNULL))GLOB(((((((((rt0.c4)AND(rt1.c4)))AND(rt0.c3)))AND(rt0.c2)))AND(rt1.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1) ORDER BY (((((rt0.c0) IS FALSE)))<>((((((rt1.c1)AND(rt0.c3)))OR(rt0.c3)))))  NULLS FIRST, TRIM(DISTINCT ((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)), (rt0.c0 IN ())), ((rt1.c1 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((rt0.c0) IS FALSE)))!=((((((rt1.c1)AND(rt0.c3)))OR(rt0.c3)))))  NULLS FIRST, TRIM(DISTINCT ((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)), (rt0.c0 IN ())), ((rt1.c1 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1) ORDER BY (((((rt0.c0) IS FALSE)))<>((((((rt1.c1)AND(rt0.c3)))OR(rt0.c3)))))  NULLS FIRST, TRIM(DISTINCT ((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)), (rt0.c0 IN ())), ((rt1.c1 COLLATE RTRIM) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((rt0.c0) IS FALSE)))!=((((((rt1.c1)AND(rt0.c3)))OR(rt0.c3)))))  NULLS FIRST, TRIM(DISTINCT ((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)), (rt0.c0 IN ())), ((rt1.c1 COLLATE RTRIM) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, rt0 WHERE (rt1.c1) ORDER BY (((((rt0.c0) IS FALSE)))<>((((((rt1.c1)AND(rt0.c3)))OR(rt0.c3)))))  NULLS FIRST, TRIM(DISTINCT ((((rt0.c0)AND(rt1.c1)))AND(rt1.c2)), (rt0.c0 IN ())), ((rt1.c1 COLLATE RTRIM) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i31, v0, t0 WHERE (CASE ((rt1.c4) NOTNULL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4) NOTNULL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c3)) END) IS TRUE)  as count FROM rt1 INDEXED BY i31, v0, t0);
SELECT ALL COUNT(*) FROM rt1 INDEXED BY i31, v0, t0 WHERE (CASE ((rt1.c4) NOTNULL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c4) NOTNULL)  WHEN CAST(rt1.c2 AS NUMERIC) THEN (+ (rt1.c3)) END) IS TRUE)  as count FROM rt1 INDEXED BY i31, v0, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)>(CAST(rt0.c3 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)>(CAST(rt0.c3 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)>(CAST(rt0.c3 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt0, rt1, t0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)>(CAST(rt0.c3 AS NUMERIC)))  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t0 WHERE (((rt0.c0 COLLATE RTRIM) IS TRUE)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)>(CAST(rt0.c3 AS NUMERIC)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((- (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE ((- (rt0.c2)) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((- (IFNULL(DISTINCT v0.c0, '')))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT v0.c0, '')))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM v0 WHERE ((- (IFNULL(DISTINCT v0.c0, '')))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT v0.c0, '')))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC);
SELECT * FROM v0 WHERE ((- (IFNULL(DISTINCT v0.c0, '')))) ORDER BY (v0.c0 COLLATE RTRIM IN ()) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, ''))<((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, ''))<((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, ''))<((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, ''))<((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, ''))<((v0.c0, v0.c0, v0.c0))) COLLATE NOCASE) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (x'') ORDER BY x'2528' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 ORDER BY x'2528' COLLATE NOCASE ASC);
SELECT ALL * FROM v0, t0 WHERE (x'') ORDER BY x'2528' COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0 ORDER BY x'2528' COLLATE NOCASE ASC);
SELECT ALL * FROM v0, t0 WHERE (x'') ORDER BY x'2528' COLLATE NOCASE ASC;
SELECT * FROM v0, t0 WHERE (TYPEOF(DISTINCT ((v0.c0)AND(v0.c0)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE RTRIM)));
SELECT * FROM v0, t0 WHERE (TYPEOF(DISTINCT ((v0.c0)AND(v0.c0)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE RTRIM)));
SELECT * FROM v0, t0 WHERE (TYPEOF(DISTINCT ((v0.c0)AND(v0.c0)))) ORDER BY (((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c0)))) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND (t0.c0 COLLATE RTRIM));
SELECT * FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c0))) NOT BETWEEN (t0.c0) AND (((((t0.c0)AND(t0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))|(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))|(CAST(t0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))|(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))|(CAST(t0.c0 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (x'') ORDER BY ((((((t0.c0)OR(t0.c0)))OR(t0.c0)))|(CAST(t0.c0 AS REAL)))  NULLS FIRST;
SELECT * FROM rt1, t0, v0 WHERE (((rtreenode(rt1.c4, rt1.c4))=((((rt1.c1, rt1.c3, NULL)) NOT BETWEEN ((v0.c0, rt1.c3, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1)))))) ORDER BY COALESCE(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND('1038890205')))AND('')), CAST(rt1.c0 AS REAL), ((0.06277247141931463) NOTNULL), LOWER(DISTINCT rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt1.c4, rt1.c4))==((((rt1.c1, rt1.c3, NULL)) NOT BETWEEN ((v0.c0, rt1.c3, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY COALESCE(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND('1038890205')))AND('')), CAST(rt1.c0 AS REAL), ((0.06277247141931463) NOTNULL), LOWER(DISTINCT rt1.c2)) DESC  NULLS LAST);
SELECT * FROM rt1, t0, v0 WHERE (((rtreenode(rt1.c4, rt1.c4))=((((rt1.c1, rt1.c3, NULL)) NOT BETWEEN ((v0.c0, rt1.c3, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1)))))) ORDER BY COALESCE(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND('1038890205')))AND('')), CAST(rt1.c0 AS REAL), ((0.06277247141931463) NOTNULL), LOWER(DISTINCT rt1.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rtreenode(rt1.c4, rt1.c4))==((((rt1.c1, rt1.c3, NULL)) NOT BETWEEN ((v0.c0, rt1.c3, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY COALESCE(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND('1038890205')))AND('')), CAST(rt1.c0 AS REAL), ((0.06277247141931463) NOTNULL), LOWER(DISTINCT rt1.c2)) DESC  NULLS LAST);
SELECT * FROM rt1, t0, v0 WHERE (((rtreenode(rt1.c4, rt1.c4))=((((rt1.c1, rt1.c3, NULL)) NOT BETWEEN ((v0.c0, rt1.c3, v0.c0)) AND ((rt1.c0, v0.c0, rt1.c1)))))) ORDER BY COALESCE(((((((((rt1.c3)AND(rt1.c3)))AND(rt1.c3)))AND('1038890205')))AND('')), CAST(rt1.c0 AS REAL), ((0.06277247141931463) NOTNULL), LOWER(DISTINCT rt1.c2)) DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (IFNULL(DISTINCT rt1.c1 COLLATE NOCASE, ((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c2))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (+ (rt1.c3)) WHERE ((((rt1.c2)<<(rt1.c0)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<<(rt1.c0)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (+ (rt1.c3)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (+ (rt1.c3)) WHERE ((((rt1.c2)<<(rt1.c0)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)<<(rt1.c0)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (+ (rt1.c3)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (+ (rt1.c3)) WHERE ((((rt1.c2)<<(rt1.c0)) IN ((((rt1.c0)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN t0 ON (((CASE WHEN rt1.c2 THEN x'' END, ((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c3)), ((rt0.c4)||(-976570142))))!=((CAST(rt0.c1 AS REAL), (((rt0.c1))>((rt0.c1))), ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c4)))AND(t0.c0)))OR(''))))) FULL OUTER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN (((NOT (rt1.c0)))) AND (((+ (rt1.c3))))) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON (((CASE WHEN rt1.c2 THEN x'' END, ((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c3)), ((rt0.c4)||(-976570142))))!=((CAST(rt0.c1 AS REAL), (((rt0.c1))>((rt0.c1))), ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c4)))AND(t0.c0)))OR(''))))) FULL OUTER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN (((NOT (rt1.c0)))) AND (((+ (rt1.c3))))));
SELECT COUNT(*) FROM v0, rt0 INNER JOIN t0 ON (((CASE WHEN rt1.c2 THEN x'' END, ((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c3)), ((rt0.c4)||(-976570142))))!=((CAST(rt0.c1 AS REAL), (((rt0.c1))>((rt0.c1))), ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c4)))AND(t0.c0)))OR(''))))) FULL OUTER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN (((NOT (rt1.c0)))) AND (((+ (rt1.c3))))) WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 INNER JOIN t0 ON (((CASE WHEN rt1.c2 THEN x'' END, ((rt1.c1) NOT BETWEEN (rt0.c3) AND (rt1.c3)), ((rt0.c4)||(-976570142))))!=((CAST(rt0.c1 AS REAL), (((rt0.c1))>((rt0.c1))), ((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c4)))AND(t0.c0)))OR(''))))) FULL OUTER JOIN rt1 ON (((rt0.c3)) NOT BETWEEN (((NOT (rt1.c0)))) AND (((+ (rt1.c3))))));
SELECT * FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (NULL);
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(CASE WHEN v0.c0 THEN v0.c0 WHEN 1.567592409E9 THEN v0.c0 WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)) ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN ((v0.c0)=(rt0.c4)) THEN ((((rt0.c4)OR(rt1.c3)))AND(NULL)) WHEN ((rt0.c1)||(rt1.c0)) THEN rt1.c0 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 WHEN 83975470 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 END ELSE MAX(rt1.c4, rt1.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN v0.c0 THEN v0.c0 WHEN 1.567592409E9 THEN v0.c0 WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN ((v0.c0)=(rt0.c4)) THEN ((((rt0.c4)OR(rt1.c3)))AND(NULL)) WHEN ((rt0.c1)||(rt1.c0)) THEN rt1.c0 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 WHEN 83975470 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 END ELSE MAX(rt1.c4, rt1.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(CASE WHEN v0.c0 THEN v0.c0 WHEN 1.567592409E9 THEN v0.c0 WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)) ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN ((v0.c0)=(rt0.c4)) THEN ((((rt0.c4)OR(rt1.c3)))AND(NULL)) WHEN ((rt0.c1)||(rt1.c0)) THEN rt1.c0 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 WHEN 83975470 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 END ELSE MAX(rt1.c4, rt1.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN v0.c0 THEN v0.c0 WHEN 1.567592409E9 THEN v0.c0 WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)) IS TRUE)  as count FROM rt0, rt1, v0 ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN ((v0.c0)=(rt0.c4)) THEN ((((rt0.c4)OR(rt1.c3)))AND(NULL)) WHEN ((rt0.c1)||(rt1.c0)) THEN rt1.c0 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 WHEN 83975470 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 END ELSE MAX(rt1.c4, rt1.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0, rt1, v0 WHERE (TRIM(CASE WHEN v0.c0 THEN v0.c0 WHEN 1.567592409E9 THEN v0.c0 WHEN rt0.c2 THEN rt1.c3 ELSE NULL END)) ORDER BY CASE ((rt0.c3) IS FALSE)  WHEN ((v0.c0)=(rt0.c4)) THEN ((((rt0.c4)OR(rt1.c3)))AND(NULL)) WHEN ((rt0.c1)||(rt1.c0)) THEN rt1.c0 COLLATE RTRIM WHEN (rt1.c3 IN ()) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c4 WHEN 83975470 THEN rt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN v0.c0 THEN rt1.c1 END ELSE MAX(rt1.c4, rt1.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM t0, v0, rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0, rt1.c4, rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), ((((rt0.c1)AND(rt1.c0)))OR(v0.c0)), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, x''))) WHERE (INSTR('DZtHQ賖''', ((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c0))) BETWEEN (((rt1.c3)*(rt0.c4))) AND (0xffffffffd415a24a)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR('DZtHQ賖''', ((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) IS TRUE)  as count FROM t0, v0, rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0, rt1.c4, rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), ((((rt0.c1)AND(rt1.c0)))OR(v0.c0)), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, x''))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c0))) BETWEEN (((rt1.c3)*(rt0.c4))) AND (0xffffffffd415a24a)) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0, rt1.c4, rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), ((((rt0.c1)AND(rt1.c0)))OR(v0.c0)), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, x''))) WHERE (INSTR('DZtHQ賖''', ((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c0))) BETWEEN (((rt1.c3)*(rt0.c4))) AND (0xffffffffd415a24a)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((INSTR('DZtHQ賖''', ((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) IS TRUE)  as count FROM t0, v0, rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0, rt1.c4, rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), ((((rt0.c1)AND(rt1.c0)))OR(v0.c0)), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, x''))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c0))) BETWEEN (((rt1.c3)*(rt0.c4))) AND (0xffffffffd415a24a)) ASC  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1 LEFT OUTER JOIN rt0 ON (((rt0.c0, rt1.c4, rt0.c0)) NOT BETWEEN (((rt0.c2 IN ()), ((((rt0.c1)AND(rt1.c0)))OR(v0.c0)), ((rt0.c4) NOTNULL))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)), rt0.c2 COLLATE NOCASE, x''))) WHERE (INSTR('DZtHQ賖''', ((t0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))) ORDER BY ((((rt0.c4) NOT BETWEEN (rt1.c2) AND (rt0.c0))) BETWEEN (((rt1.c3)*(rt0.c4))) AND (0xffffffffd415a24a)) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((TOTAL_CHANGES())AND((rt1.c4 IN (rt1.c4)))))AND((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TOTAL_CHANGES())AND((rt1.c4 IN (rt1.c4)))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((TOTAL_CHANGES())AND((rt1.c4 IN (rt1.c4)))))AND((rt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((TOTAL_CHANGES())AND((rt1.c4 IN (rt1.c4)))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((TOTAL_CHANGES())AND((rt1.c4 IN (rt1.c4)))))AND((rt1.c0 IN ()))));
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt1.c0 IN (rt0.c2))))>((CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN (rt0.c2))))>((CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt1.c0 IN (rt0.c2))))>((CAST(rt0.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN (rt0.c2))))>((CAST(rt0.c2 AS INTEGER))))) IS TRUE)  as count FROM t0, rt1, rt0);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((((rt1.c0 IN (rt0.c2))))>((CAST(rt0.c2 AS INTEGER)))));
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.2923308432818984 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.2923308432818984 END IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.2923308432818984 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.2923308432818984 END IN ())) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 0.2923308432818984 END IN ()));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON (+ (NULL)) COLLATE BINARY WHERE ((((((('-736779702')<(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)))OR(((v0.c0)<(rt0.c1))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-736779702')<(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)))OR(((v0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON (+ (NULL)) COLLATE BINARY ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON (+ (NULL)) COLLATE BINARY WHERE ((((((('-736779702')<(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)))OR(((v0.c0)<(rt0.c1))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-736779702')<(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)))OR(((v0.c0)<(rt0.c1))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t0 ON (+ (NULL)) COLLATE BINARY ORDER BY '' DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t0 ON (+ (NULL)) COLLATE BINARY WHERE ((((((('-736779702')<(rt0.c2)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 END)))OR(((v0.c0)<(rt0.c1))))) ORDER BY '' DESC  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) WHERE (((((((rt1.c3)OR(rt1.c0)))OR(rt0.c4)))<(((t0.c0) NOT BETWEEN (x'') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c0)))OR(rt0.c4)))<(((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((rt0.c0) NOT NULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) WHERE (((((((rt1.c3)OR(rt1.c0)))OR(rt0.c4)))<(((t0.c0) NOT BETWEEN (x'') AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)OR(rt1.c0)))OR(rt0.c4)))<(((t0.c0) NOT BETWEEN (x'') AND (rt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((rt0.c0) NOT NULL));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN t0 ON ((rt0.c0) NOT NULL) WHERE (((((((rt1.c3)OR(rt1.c0)))OR(rt0.c4)))<(((t0.c0) NOT BETWEEN (x'') AND (rt1.c0)))));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c4, rt0.c4, rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((rt1.c3)>>(rt1.c3)), 0.9733568146101503, ((((rt0.c0)OR(rt1.c1)))OR(rt1.c3)), (rt0.c1 IN ('')))) AND ((rt1.c1, ((rt1.c4)!=(v0.c0)), rt1.c2, rt1.c1 COLLATE NOCASE, rt1.c0 COLLATE BINARY))) INNER JOIN v0 ON ((((rt0.c1)/(rt1.c4)))>(((rt0.c4)>=(rt0.c0)))) WHERE (((((((rt1.c2)AND(rt1.c0)))OR(t0.c0)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c0)))OR(t0.c0)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c4, rt0.c4, rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((rt1.c3)>>(rt1.c3)), 0.9733568146101503, ((((rt0.c0)OR(rt1.c1)))OR(rt1.c3)), (rt0.c1 IN ('')))) AND ((rt1.c1, ((rt1.c4)!=(v0.c0)), rt1.c2, rt1.c1 COLLATE NOCASE, rt1.c0 COLLATE BINARY))) INNER JOIN v0 ON ((((rt0.c1)/(rt1.c4)))>(((rt0.c4)>=(rt0.c0)))));
SELECT COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c4, rt0.c4, rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((rt1.c3)>>(rt1.c3)), 0.9733568146101503, ((((rt0.c0)OR(rt1.c1)))OR(rt1.c3)), (rt0.c1 IN ('')))) AND ((rt1.c1, ((rt1.c4)!=(v0.c0)), rt1.c2, rt1.c1 COLLATE NOCASE, rt1.c0 COLLATE BINARY))) INNER JOIN v0 ON ((((rt0.c1)/(rt1.c4)))>(((rt0.c4)>=(rt0.c0)))) WHERE (((((((rt1.c2)AND(rt1.c0)))OR(t0.c0)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)AND(rt1.c0)))OR(t0.c0)))AND(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t0 ON (((rt0.c4, rt0.c4, rt1.c2, rt1.c2, rt1.c3)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((rt1.c3)>>(rt1.c3)), 0.9733568146101503, ((((rt0.c0)OR(rt1.c1)))OR(rt1.c3)), (rt0.c1 IN ('')))) AND ((rt1.c1, ((rt1.c4)!=(v0.c0)), rt1.c2, rt1.c1 COLLATE NOCASE, rt1.c0 COLLATE BINARY))) INNER JOIN v0 ON ((((rt0.c1)/(rt1.c4)))>(((rt0.c4)>=(rt0.c0)))));
SELECT ALL * FROM v0 WHERE (0.12887868582567852) ORDER BY CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOTNULL) ELSE (((v0.c0))<((v0.c0))) END ASC, v0.c0 ASC  NULLS LAST, CASE WHEN ((v0.c0) IS FALSE) THEN 277467194 ELSE v0.c0 END, CASE ((v0.c0)|(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.12887868582567852) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOTNULL) ELSE (((v0.c0))<((v0.c0))) END ASC, v0.c0 ASC  NULLS LAST, CASE WHEN ((v0.c0) IS FALSE) THEN 277467194 ELSE v0.c0 END, CASE ((v0.c0)|(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC);
SELECT ALL * FROM v0 WHERE (0.12887868582567852) ORDER BY CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOTNULL) ELSE (((v0.c0))<((v0.c0))) END ASC, v0.c0 ASC  NULLS LAST, CASE WHEN ((v0.c0) IS FALSE) THEN 277467194 ELSE v0.c0 END, CASE ((v0.c0)|(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.12887868582567852) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOTNULL) ELSE (((v0.c0))<((v0.c0))) END ASC, v0.c0 ASC  NULLS LAST, CASE WHEN ((v0.c0) IS FALSE) THEN 277467194 ELSE v0.c0 END, CASE ((v0.c0)|(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC);
SELECT ALL * FROM v0 WHERE (0.12887868582567852) ORDER BY CASE WHEN ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0) NOTNULL) ELSE (((v0.c0))<((v0.c0))) END ASC, v0.c0 ASC  NULLS LAST, CASE WHEN ((v0.c0) IS FALSE) THEN 277467194 ELSE v0.c0 END, CASE ((v0.c0)|(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (+ (v0.c0)) WHEN (- (v0.c0)) THEN v0.c0 COLLATE RTRIM ELSE CAST(v0.c0 AS REAL) END ASC;
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, v0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, v0, rt0, rt1);
SELECT ALL COUNT(*) FROM t0, v0, rt0, rt1 WHERE ((CAST(rt1.c1 AS NUMERIC) IN ()));
SELECT ALL * FROM rt1 WHERE (((HEX(DISTINCT rt1.c4)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c4) AND (0.5466391240472597))) AND (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END)OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(rt1.c1 COLLATE RTRIM))  NULLS FIRST, (NOT (CAST(rt1.c2 AS REAL)))  NULLS FIRST, ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c4))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CAST(rt1.c4 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt1.c4)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c4) AND (0.5466391240472597))) AND (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END)OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(rt1.c1 COLLATE RTRIM))  NULLS FIRST, (NOT (CAST(rt1.c2 AS REAL)))  NULLS FIRST, ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c4))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CAST(rt1.c4 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((HEX(DISTINCT rt1.c4)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c4) AND (0.5466391240472597))) AND (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END)OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(rt1.c1 COLLATE RTRIM))  NULLS FIRST, (NOT (CAST(rt1.c2 AS REAL)))  NULLS FIRST, ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c4))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CAST(rt1.c4 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT rt1.c4)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c4) AND (0.5466391240472597))) AND (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END)OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(rt1.c1 COLLATE RTRIM))  NULLS FIRST, (NOT (CAST(rt1.c2 AS REAL)))  NULLS FIRST, ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c4))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CAST(rt1.c4 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((HEX(DISTINCT rt1.c4)) BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c4) AND (0.5466391240472597))) AND (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))) ORDER BY ((((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c4 END)OR(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)))))AND(rt1.c1 COLLATE RTRIM))  NULLS FIRST, (NOT (CAST(rt1.c2 AS REAL)))  NULLS FIRST, ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c4))) NOT BETWEEN (CAST(rt1.c4 AS NUMERIC)) AND (CAST(rt1.c4 AS REAL))) ASC  NULLS LAST;
SELECT * FROM rt0, t0, rt1, v0 WHERE (CAST((- (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (NULL)) AS REAL)) IS TRUE)  as count FROM rt0, t0, rt1, v0 NOT INDEXED);
SELECT * FROM rt0, t0, rt1, v0 WHERE (CAST((- (NULL)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (NULL)) AS REAL)) IS TRUE)  as count FROM rt0, t0, rt1, v0 NOT INDEXED);
SELECT * FROM rt0, t0, rt1, v0 WHERE (CAST((- (NULL)) AS REAL));
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c2 END, ((rt1.c1)LIKE(rt1.c2)), (NOT (rt0.c1)))) AND ((CASE WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), ((LOWER(DISTINCT rt1.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c2 END, ((rt1.c1)LIKE(rt1.c2)), (NOT (rt0.c1)))) AND ((CASE WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), ((LOWER(DISTINCT rt1.c2)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c2 END, ((rt1.c1)LIKE(rt1.c2)), (NOT (rt0.c1)))) AND ((CASE WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), ((LOWER(DISTINCT rt1.c2)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c2 END, ((rt1.c1)LIKE(rt1.c2)), (NOT (rt0.c1)))) AND ((CASE WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), ((LOWER(DISTINCT rt1.c2)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, rt1 WHERE (rt1.c1) ORDER BY (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((CASE WHEN rt0.c2 THEN rt1.c4 ELSE rt0.c2 END, ((rt1.c1)LIKE(rt1.c2)), (NOT (rt0.c1)))) AND ((CASE WHEN rt1.c3 THEN rt1.c4 END, ((rt1.c4)>(rt0.c0)), CASE WHEN rt1.c1 THEN rt1.c1 WHEN v0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c3 END))), ((LOWER(DISTINCT rt1.c2)) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (UPPER(1692811717));
SELECT SUM(count) FROM (SELECT ((UPPER(1692811717)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (UPPER(1692811717));
SELECT SUM(count) FROM (SELECT ((UPPER(1692811717)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (UPPER(1692811717));
SELECT * FROM t0 WHERE ((NOT ((((t0.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((((t0.c0))<=((t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((t0.c0))<=((t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((((t0.c0))<=((t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN ())))!=(((((t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY (((((~ (t0.c0)))AND(((t0.c0)-(t0.c0)))))AND(t0.c0)) DESC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN '83975470' ELSE t0.c0 END)<>(LIKELIHOOD(DISTINCT t0.c0, 0.42963921092133894)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))!=(((((t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c0)))AND(((t0.c0)-(t0.c0)))))AND(t0.c0)) DESC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN '83975470' ELSE t0.c0 END)!=(LIKELIHOOD(DISTINCT t0.c0, 0.42963921092133894)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN ())))!=(((((t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY (((((~ (t0.c0)))AND(((t0.c0)-(t0.c0)))))AND(t0.c0)) DESC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN '83975470' ELSE t0.c0 END)<>(LIKELIHOOD(DISTINCT t0.c0, 0.42963921092133894)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))!=(((((t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY (((((~ (t0.c0)))AND(((t0.c0)-(t0.c0)))))AND(t0.c0)) DESC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN '83975470' ELSE t0.c0 END)!=(LIKELIHOOD(DISTINCT t0.c0, 0.42963921092133894)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN ())))!=(((((t0.c0, t0.c0, t0.c0, x'', t0.c0))>=((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))))))) ORDER BY (((((~ (t0.c0)))AND(((t0.c0)-(t0.c0)))))AND(t0.c0)) DESC  NULLS LAST, ((CASE t0.c0  WHEN t0.c0 THEN '83975470' ELSE t0.c0 END)<>(LIKELIHOOD(DISTINCT t0.c0, 0.42963921092133894)))  NULLS FIRST;
SELECT * FROM v0, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((((rt1.c0) ISNULL), (v0.c0 IN ()), ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((- (rt1.c4)), RTRIM(rt0.c1), ((rt1.c3) ISNULL)))) RIGHT OUTER JOIN rt0 ON CAST(('-1487099971' IN ()) AS INTEGER) WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((((rt1.c0) ISNULL), (v0.c0 IN ()), ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((- (rt1.c4)), RTRIM(rt0.c1), ((rt1.c3) ISNULL)))) RIGHT OUTER JOIN rt0 ON CAST(('-1487099971' IN ()) AS INTEGER));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((((rt1.c0) ISNULL), (v0.c0 IN ()), ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((- (rt1.c4)), RTRIM(rt0.c1), ((rt1.c3) ISNULL)))) RIGHT OUTER JOIN rt0 ON CAST(('-1487099971' IN ()) AS INTEGER) WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (((rt0.c0, rt0.c3, rt0.c1)) BETWEEN ((((rt1.c0) ISNULL), (v0.c0 IN ()), ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND (((- (rt1.c4)), RTRIM(rt0.c1), ((rt1.c3) ISNULL)))) RIGHT OUTER JOIN rt0 ON CAST(('-1487099971' IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, rt1, rt0 CROSS JOIN t0 ON ((rt1.c2)||(CAST(rt1.c3 AS INTEGER))) WHERE ((((~ (0xfffffffffccd3cc8)))>=(rt0.c4))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c0)) END DESC  NULLS FIRST, ((rt1.c4) BETWEEN ('R*\ta') AND (((rt1.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0Xfffffffffccd3cc8)))>=(rt0.c4))) IS TRUE)  as count FROM v0, rt1, rt0 CROSS JOIN t0 ON ((rt1.c2)||(CAST(rt1.c3 AS INTEGER))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c0)) END DESC  NULLS FIRST, ((rt1.c4) BETWEEN ('R*\ta') AND (((rt1.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 CROSS JOIN t0 ON ((rt1.c2)||(CAST(rt1.c3 AS INTEGER))) WHERE ((((~ (0xfffffffffccd3cc8)))>=(rt0.c4))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c0)) END DESC  NULLS FIRST, ((rt1.c4) BETWEEN ('R*\ta') AND (((rt1.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0Xfffffffffccd3cc8)))>=(rt0.c4))) IS TRUE)  as count FROM v0, rt1, rt0 CROSS JOIN t0 ON ((rt1.c2)||(CAST(rt1.c3 AS INTEGER))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c0)) END DESC  NULLS FIRST, ((rt1.c4) BETWEEN ('R*\ta') AND (((rt1.c1) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM v0, rt1, rt0 CROSS JOIN t0 ON ((rt1.c2)||(CAST(rt1.c3 AS INTEGER))) WHERE ((((~ (0xfffffffffccd3cc8)))>=(rt0.c4))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt1.c0)<(rt0.c0)) END DESC  NULLS FIRST, ((rt1.c4) BETWEEN ('R*\ta') AND (((rt1.c1) IS TRUE))) ASC;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 IN ())) ISNULL) WHERE (((rt1.c1)<<(rt1.c0)) COLLATE RTRIM) ORDER BY CAST(rt1.c2 AS BLOB) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<<(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 IN ())) ISNULL) ORDER BY CAST(rt1.c2 AS BLOB) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 IN ())) ISNULL) WHERE (((rt1.c1)<<(rt1.c0)) COLLATE RTRIM) ORDER BY CAST(rt1.c2 AS BLOB) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)<<(rt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 IN ())) ISNULL) ORDER BY CAST(rt1.c2 AS BLOB) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON (((rt1.c3 IN ())) ISNULL) WHERE (((rt1.c1)<<(rt1.c0)) COLLATE RTRIM) ORDER BY CAST(rt1.c2 AS BLOB) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE NULL  WHEN (rt1.c4 IN ()) THEN LOWER(rt1.c0) ELSE 0x41c5f022 END) ORDER BY PRINTF(NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (rt1.c4 IN ()) THEN LOWER(rt1.c0) ELSE 0x41c5f022 END) IS TRUE)  as count FROM rt1, t0 ORDER BY PRINTF(NULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE NULL  WHEN (rt1.c4 IN ()) THEN LOWER(rt1.c0) ELSE 0x41c5f022 END) ORDER BY PRINTF(NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN (rt1.c4 IN ()) THEN LOWER(rt1.c0) ELSE 0x41c5f022 END) IS TRUE)  as count FROM rt1, t0 ORDER BY PRINTF(NULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE NULL  WHEN (rt1.c4 IN ()) THEN LOWER(rt1.c0) ELSE 0x41c5f022 END) ORDER BY PRINTF(NULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c3))<>((rt0.c1)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (QUOTE(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c1)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c3))<>((rt0.c1)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (QUOTE(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c1)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (QUOTE(rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c3))<>((rt0.c1)))) BETWEEN (CAST(rt0.c3 AS TEXT)) AND (QUOTE(rt0.c0))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c4, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c4))))AND((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (t0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3, rt0.c1, rt0.c4, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c4))))AND((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (t0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c4, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c4))))AND((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (t0.c0) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3, rt0.c1, rt0.c4, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c4))))AND((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (t0.c0) AND (rt0.c4))))) IS TRUE)  as count FROM t0, v0, rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE ((((((((rt0.c3, rt0.c1, rt0.c4, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, v0.c0, v0.c0, rt0.c0, rt0.c3)) AND ((rt0.c2, x'', rt0.c2, rt0.c0, rt0.c4))))AND((v0.c0 IN ()))))AND(((v0.c0) BETWEEN (t0.c0) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((x''))<=((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=((rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((x''))<=((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))<=((rt0.c1)))) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((x''))<=((rt0.c1))));
SELECT ALL * FROM rt1 WHERE ((LIKELY(rt1.c2) IN (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt1.c2) IN (((x'') NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((LIKELY(rt1.c2) IN (((x'') NOTNULL))));
SELECT SUM(count) FROM (SELECT (((LIKELY(rt1.c2) IN (((x'') NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((LIKELY(rt1.c2) IN (((x'') NOTNULL))));
SELECT * FROM rt0 NOT INDEXED, rt1, v0, t0 WHERE (CASE (rt0.c3 IN ())  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 ELSE t0.c0 END ELSE ((v0.c0)GLOB(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN ())  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 ELSE t0.c0 END ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT * FROM rt0 NOT INDEXED, rt1, v0, t0 WHERE (CASE (rt0.c3 IN ())  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 ELSE t0.c0 END ELSE ((v0.c0)GLOB(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c3 IN ())  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 ELSE t0.c0 END ELSE ((v0.c0)GLOB(v0.c0)) END) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT * FROM rt0 NOT INDEXED, rt1, v0, t0 WHERE (CASE (rt0.c3 IN ())  WHEN CAST(rt1.c4 AS REAL) THEN CASE rt0.c1  WHEN rt1.c3 THEN rt0.c4 ELSE t0.c0 END ELSE ((v0.c0)GLOB(v0.c0)) END);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c0 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c0 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))||(((rt0.c1)/(rt0.c4))))) ORDER BY CAST((rt0.c1 IN (x'')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))||(((rt0.c1)/(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN (x'')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))||(((rt0.c1)/(rt0.c4))))) ORDER BY CAST((rt0.c1 IN (x'')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB))||(((rt0.c1)/(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((rt0.c1 IN (x'')) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB))||(((rt0.c1)/(rt0.c4))))) ORDER BY CAST((rt0.c1 IN (x'')) AS NUMERIC);
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON ((rt0.c3)IS(rt1.c4)) COLLATE RTRIM COLLATE RTRIM WHERE (rt1.c0) ORDER BY ((((NULL) NOTNULL)) ISNULL)  NULLS LAST, CAST(((rt1.c1)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON ((rt0.c3)IS(rt1.c4)) COLLATE RTRIM COLLATE RTRIM ORDER BY ((((NULL) NOTNULL)) ISNULL)  NULLS LAST, CAST(((rt1.c1)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON ((rt0.c3)IS(rt1.c4)) COLLATE RTRIM COLLATE RTRIM WHERE (rt1.c0) ORDER BY ((((NULL) NOTNULL)) ISNULL)  NULLS LAST, CAST(((rt1.c1)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, v0 CROSS JOIN rt0 ON ((rt0.c3)IS(rt1.c4)) COLLATE RTRIM COLLATE RTRIM ORDER BY ((((NULL) NOTNULL)) ISNULL)  NULLS LAST, CAST(((rt1.c1)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, v0 CROSS JOIN rt0 ON ((rt0.c3)IS(rt1.c4)) COLLATE RTRIM COLLATE RTRIM WHERE (rt1.c0) ORDER BY ((((NULL) NOTNULL)) ISNULL)  NULLS LAST, CAST(((rt1.c1)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 INNER JOIN v0 ON -1.098956002E9 RIGHT OUTER JOIN rt1 ON '-37523984' WHERE (rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON -1.098956002E9 RIGHT OUTER JOIN rt1 ON '-37523984');
SELECT ALL * FROM rt0, t0 INNER JOIN v0 ON -1.098956002E9 RIGHT OUTER JOIN rt1 ON '-37523984' WHERE (rt1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt1.c4 COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 INNER JOIN v0 ON -1.098956002E9 RIGHT OUTER JOIN rt1 ON '-37523984');
SELECT ALL * FROM rt0, t0 INNER JOIN v0 ON -1.098956002E9 RIGHT OUTER JOIN rt1 ON '-37523984' WHERE (rt1.c4 COLLATE BINARY);
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c1) AND (((rt0.c2)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL), CASE WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (- (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN rt0.c0 COLLATE BINARY THEN NULLIF(DISTINCT rt0.c4, rt0.c1) ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c1) AND (((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL), CASE WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (- (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN rt0.c0 COLLATE BINARY THEN NULLIF(DISTINCT rt0.c4, rt0.c1) ELSE rt0.c0 END);
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c1) AND (((rt0.c2)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL), CASE WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (- (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN rt0.c0 COLLATE BINARY THEN NULLIF(DISTINCT rt0.c4, rt0.c1) ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (rt0.c1) AND (((rt0.c2)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL), CASE WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (- (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN rt0.c0 COLLATE BINARY THEN NULLIF(DISTINCT rt0.c4, rt0.c1) ELSE rt0.c0 END);
SELECT * FROM rt0 WHERE (((NULL) BETWEEN (rt0.c1) AND (((rt0.c2)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL), CASE WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN (- (rt0.c2)) THEN CAST(rt0.c0 AS INTEGER) WHEN rt0.c0 COLLATE BINARY THEN NULLIF(DISTINCT rt0.c4, rt0.c1) ELSE rt0.c0 END;
SELECT ALL COUNT(*) FROM v0 WHERE (0.5076265155837395);
SELECT SUM(count) FROM (SELECT ALL ((0.5076265155837395) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.5076265155837395);
SELECT SUM(count) FROM (SELECT ALL ((0.5076265155837395) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0.5076265155837395);
SELECT ALL * FROM t0, rt1, v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(CAST(rt1.c3 AS INTEGER))))AND('-37523984')));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR(CAST(rt1.c3 AS INTEGER))))AND('-37523984'))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(CAST(rt1.c3 AS INTEGER))))AND('-37523984')));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS TEXT))OR(CAST(rt1.c3 AS INTEGER))))AND('-37523984'))) IS TRUE)  as count FROM t0, rt1, v0);
SELECT ALL * FROM t0, rt1, v0 WHERE (((((CAST(v0.c0 AS TEXT))OR(CAST(rt1.c3 AS INTEGER))))AND('-37523984')));
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, 0.1870721916334882))GLOB((rt0.c3 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, 0.1870721916334882))GLOB((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, 0.1870721916334882))GLOB((rt0.c3 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT rt0.c0, 0.1870721916334882))GLOB((rt0.c3 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((TRIM(DISTINCT rt0.c0, 0.1870721916334882))GLOB((rt0.c3 IN (rt0.c2)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c3 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS INTEGER) COLLATE BINARY);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END))) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))==((- (v0.c0)))) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))==((- (v0.c0)))) DESC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END))) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))==((- (v0.c0)))) DESC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))==((- (v0.c0)))) DESC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE ((- (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END))) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c0)))==((- (v0.c0)))) DESC, NULL  NULLS LAST;
SELECT * FROM v0 WHERE (LIKELIHOOD((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.789676360187462));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.789676360187462)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELIHOOD((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.789676360187462));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.789676360187462)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELIHOOD((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))), 0.789676360187462));
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((((rt0.c3))!=((rt0.c3)))) AND ('683774598')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((((rt0.c3))<>((rt0.c3)))) AND ('683774598'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((((rt0.c3))!=((rt0.c3)))) AND ('683774598')));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((((rt0.c3))<>((rt0.c3)))) AND ('683774598'))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) BETWEEN ((((rt0.c3))!=((rt0.c3)))) AND ('683774598')));
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ (((rt0.c3)LIKE(rt1.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY x'');
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ (((rt0.c3)LIKE(rt1.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY x'');
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE ((~ (((rt0.c3)LIKE(rt1.c0))))) ORDER BY x'';
SELECT * FROM rt1, v0, rt0, t0 WHERE (((((NULLIF(rt0.c4, 1641892763))OR(((rt0.c1) BETWEEN (rt0.c2) AND ('en')))))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c4, 1641892763))OR(((rt0.c1) BETWEEN (rt0.c2) AND ('en')))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT * FROM rt1, v0, rt0, t0 WHERE (((((NULLIF(rt0.c4, 1641892763))OR(((rt0.c1) BETWEEN (rt0.c2) AND ('en')))))OR((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(rt0.c4, 1641892763))OR(((rt0.c1) BETWEEN (rt0.c2) AND ('en')))))OR((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT * FROM rt1, v0, rt0, t0 WHERE (((((NULLIF(rt0.c4, 1641892763))OR(((rt0.c1) BETWEEN (rt0.c2) AND ('en')))))OR((NOT (rt0.c0)))));
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ())) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ())) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((v0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN ABS(rt0.c1) WHEN rt0.c3 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4)<<(rt0.c2)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c4 AS BLOB))))OR(8.08370056E8)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOTNULL) THEN ABS(rt0.c1) WHEN rt0.c3 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4)<<(rt0.c2)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c4 AS BLOB))))OR(8.08370056E8)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN ABS(rt0.c1) WHEN rt0.c3 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4)<<(rt0.c2)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c4 AS BLOB))))OR(8.08370056E8)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOTNULL) THEN ABS(rt0.c1) WHEN rt0.c3 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4)<<(rt0.c2)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c4 AS BLOB))))OR(8.08370056E8)) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOTNULL) THEN ABS(rt0.c1) WHEN rt0.c3 THEN CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 END WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c4)<<(rt0.c2)) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END) ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(CAST(rt0.c4 AS BLOB))))OR(8.08370056E8)) ASC;
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON ('-2085604199' IN ('2146263599', ((((((((rt0.c4)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c0)))OR(t0.c0)))) WHERE (CASE WHEN (NOT (rt0.c0)) THEN rt0.c3 COLLATE BINARY END) ORDER BY LIKELY(((0.33066429636563766)=('1103491106'))), ((((rt1.c3) ISNULL))<>(CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ('-2085604199' IN ('2146263599', ((((((((rt0.c4)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c0)))OR(t0.c0)))) ORDER BY LIKELY(((0.33066429636563766)==('1103491106'))), ((((rt1.c3) ISNULL))<>(CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON ('-2085604199' IN ('2146263599', ((((((((rt0.c4)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c0)))OR(t0.c0)))) WHERE (CASE WHEN (NOT (rt0.c0)) THEN rt0.c3 COLLATE BINARY END) ORDER BY LIKELY(((0.33066429636563766)=('1103491106'))), ((((rt1.c3) ISNULL))<>(CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (rt0.c0)) THEN rt0.c3 COLLATE BINARY END) IS TRUE)  as count FROM rt1, rt0 CROSS JOIN t0 ON ('-2085604199' IN ('2146263599', ((((((((rt0.c4)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c0)))OR(t0.c0)))) ORDER BY LIKELY(((0.33066429636563766)==('1103491106'))), ((((rt1.c3) ISNULL))<>(CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 CROSS JOIN t0 ON ('-2085604199' IN ('2146263599', ((((((((rt0.c4)AND(rt1.c3)))AND(rt0.c2)))OR(rt1.c0)))OR(t0.c0)))) WHERE (CASE WHEN (NOT (rt0.c0)) THEN rt0.c3 COLLATE BINARY END) ORDER BY LIKELY(((0.33066429636563766)=('1103491106'))), ((((rt1.c3) ISNULL))<>(CAST(rt0.c3 AS BLOB))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((- (((rt0.c2)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((- (((rt0.c2)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)<(v0.c0))))) IS TRUE)  as count FROM v0, rt0, t0);
SELECT COUNT(*) FROM v0, rt0, t0 WHERE ((- (((rt0.c2)<(v0.c0)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS TEXT), ((NULL)>(rt0.c2))))=((rt0.c2, CAST(rt0.c2 AS REAL), ((rt0.c2) IS TRUE)))) INNER JOIN t0 ON ((('-1e500' IN ()))IS(((rt1.c3)|(rt0.c3)))) WHERE (CAST('5j%G' AS REAL)) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST('5j%G' AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS TEXT), ((NULL)>(rt0.c2))))=((rt0.c2, CAST(rt0.c2 AS REAL), ((rt0.c2) IS TRUE)))) INNER JOIN t0 ON ((('-1e500' IN ()))IS(((rt1.c3)|(rt0.c3)))) ORDER BY rt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS TEXT), ((NULL)>(rt0.c2))))=((rt0.c2, CAST(rt0.c2 AS REAL), ((rt0.c2) IS TRUE)))) INNER JOIN t0 ON ((('-1e500' IN ()))IS(((rt1.c3)|(rt0.c3)))) WHERE (CAST('5j%G' AS REAL)) ORDER BY rt0.c1 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST('5j%G' AS REAL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN rt0 ON (((CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS TEXT), ((NULL)>(rt0.c2))))=((rt0.c2, CAST(rt0.c2 AS REAL), ((rt0.c2) IS TRUE)))) INNER JOIN t0 ON ((('-1e500' IN ()))IS(((rt1.c3)|(rt0.c3)))) ORDER BY rt0.c1 COLLATE BINARY);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN rt0 ON (((CAST(rt1.c0 AS BLOB), CAST(rt1.c3 AS TEXT), ((NULL)>(rt0.c2))))=((rt0.c2, CAST(rt0.c2 AS REAL), ((rt0.c2) IS TRUE)))) INNER JOIN t0 ON ((('-1e500' IN ()))IS(((rt1.c3)|(rt0.c3)))) WHERE (CAST('5j%G' AS REAL)) ORDER BY rt0.c1 COLLATE BINARY;
SELECT ALL * FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)));
SELECT ALL * FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)) WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)));
SELECT ALL * FROM v0 INNER JOIN t0 ON ((((t0.c0) NOT NULL)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (v0.c0)) WHERE (v0.c0);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((((((((('-736779702')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(x'ea6f')))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1)|(rt0.c4)))) LEFT OUTER JOIN v0 ON (+ (((rt1.c0)!=(rt0.c3)))) CROSS JOIN t0 ON (v0.c0 IN (rt0.c4)) COLLATE NOCASE WHERE (((t0.c0)-(rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((((((((('-736779702')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(x'ea6f')))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1)|(rt0.c4)))) LEFT OUTER JOIN v0 ON (+ (((rt1.c0)<>(rt0.c3)))) CROSS JOIN t0 ON (v0.c0 IN (rt0.c4)) COLLATE NOCASE);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((((((((('-736779702')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(x'ea6f')))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1)|(rt0.c4)))) LEFT OUTER JOIN v0 ON (+ (((rt1.c0)!=(rt0.c3)))) CROSS JOIN t0 ON (v0.c0 IN (rt0.c4)) COLLATE NOCASE WHERE (((t0.c0)-(rt1.c3)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)-(rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((((((((((('-736779702')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(x'ea6f')))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1)|(rt0.c4)))) LEFT OUTER JOIN v0 ON (+ (((rt1.c0)<>(rt0.c3)))) CROSS JOIN t0 ON (v0.c0 IN (rt0.c4)) COLLATE NOCASE);
SELECT * FROM rt1 FULL OUTER JOIN rt0 ON (((((((((((('-736779702')OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(x'ea6f')))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c1)|(rt0.c4)))) LEFT OUTER JOIN v0 ON (+ (((rt1.c0)!=(rt0.c3)))) CROSS JOIN t0 ON (v0.c0 IN (rt0.c4)) COLLATE NOCASE WHERE (((t0.c0)-(rt1.c3)) COLLATE NOCASE);
SELECT * FROM rt0, t0, v0, rt1 WHERE ((((rt0.c4 IN ())) IS FALSE)) ORDER BY (((((rt1.c4))=((t0.c0))))>=(((rt1.c4) NOTNULL)))  NULLS FIRST, ((rt0.c0)<>(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY (((((rt1.c4))=((t0.c0))))>=(((rt1.c4) NOTNULL)))  NULLS FIRST, ((rt0.c0)!=(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1 WHERE ((((rt0.c4 IN ())) IS FALSE)) ORDER BY (((((rt1.c4))=((t0.c0))))>=(((rt1.c4) NOTNULL)))  NULLS FIRST, ((rt0.c0)<>(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY (((((rt1.c4))=((t0.c0))))>=(((rt1.c4) NOTNULL)))  NULLS FIRST, ((rt0.c0)!=(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1 WHERE ((((rt0.c4 IN ())) IS FALSE)) ORDER BY (((((rt1.c4))=((t0.c0))))>=(((rt1.c4) NOTNULL)))  NULLS FIRST, ((rt0.c0)<>(rt1.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (t0.c0))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((NOT ((+ (t0.c0)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('㨦') ORDER BY (((v0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((((((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(0.20452606894431014)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('㨦') IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((((((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(0.20452606894431014)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('㨦') ORDER BY (((v0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((((((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(0.20452606894431014)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('㨦') IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((((((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(0.20452606894431014)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ('㨦') ORDER BY (((v0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((((((((((((v0.c0)AND(v0.c0)))AND(t0.c0)))OR(0.20452606894431014)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))))  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (x'6b92')))LIKE(CAST(rt0.c2 AS INTEGER)))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (x'6b92')))LIKE(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()));
SELECT * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (x'6b92')))LIKE(CAST(rt0.c2 AS INTEGER)))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (x'6b92')))LIKE(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()));
SELECT * FROM rt0, v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (x'6b92')))LIKE(CAST(rt0.c2 AS INTEGER)))) ORDER BY (rt0.c2 IN ());
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c3)%(rt0.c4)) WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)-(rt0.c3)) THEN ((rt0.c3) ISNULL) ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN ((rt0.c3)%(rt0.c4)) WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)-(rt0.c3)) THEN ((rt0.c3) ISNULL) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c3)%(rt0.c4)) WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)-(rt0.c3)) THEN ((rt0.c3) ISNULL) ELSE rt0.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN ((rt0.c3)%(rt0.c4)) WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)-(rt0.c3)) THEN ((rt0.c3) ISNULL) ELSE rt0.c3 END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN ((rt0.c3)%(rt0.c4)) WHEN rt0.c0 THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)-(rt0.c3)) THEN ((rt0.c3) ISNULL) ELSE rt0.c3 END);
SELECT * FROM t0 CROSS JOIN rt1 ON ((((((rt1.c0)<<(rt1.c2)))AND((NOT (rt1.c3)))))OR(NULL)) CROSS JOIN v0 ON '-53658424' INNER JOIN rt0 ON ((((((rt1.c2))!=((rt1.c2)))))>=(('-730909532'))) WHERE (((rt1.c2)OR(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((((rt1.c0)<<(rt1.c2)))AND((NOT (rt1.c3)))))OR(NULL)) CROSS JOIN v0 ON '-53658424' INNER JOIN rt0 ON ((((((rt1.c2))!=((rt1.c2)))))>=(('-730909532'))));
SELECT * FROM t0 CROSS JOIN rt1 ON ((((((rt1.c0)<<(rt1.c2)))AND((NOT (rt1.c3)))))OR(NULL)) CROSS JOIN v0 ON '-53658424' INNER JOIN rt0 ON ((((((rt1.c2))!=((rt1.c2)))))>=(('-730909532'))) WHERE (((rt1.c2)OR(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)OR(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON ((((((rt1.c0)<<(rt1.c2)))AND((NOT (rt1.c3)))))OR(NULL)) CROSS JOIN v0 ON '-53658424' INNER JOIN rt0 ON ((((((rt1.c2))!=((rt1.c2)))))>=(('-730909532'))));
SELECT * FROM t0 CROSS JOIN rt1 ON ((((((rt1.c0)<<(rt1.c2)))AND((NOT (rt1.c3)))))OR(NULL)) CROSS JOIN v0 ON '-53658424' INNER JOIN rt0 ON ((((((rt1.c2))!=((rt1.c2)))))>=(('-730909532'))) WHERE (((rt1.c2)OR(t0.c0)) COLLATE NOCASE);
SELECT * FROM v0, rt1, t0, rt0 WHERE (((rt0.c0)||(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c4 IN (rt1.c3)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (rt0.c4 IN (rt1.c3)) COLLATE RTRIM DESC);
SELECT * FROM v0, rt1, t0, rt0 WHERE (((rt0.c0)||(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c4 IN (rt1.c3)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (rt0.c4 IN (rt1.c3)) COLLATE RTRIM DESC);
SELECT * FROM v0, rt1, t0, rt0 WHERE (((rt0.c0)||(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt0.c4 IN (rt1.c3)) COLLATE RTRIM DESC;
SELECT * FROM rt1, rt0, v0, t0 WHERE (x'') ORDER BY NULL  NULLS LAST, (((rt1.c0 IN (rt1.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY NULL  NULLS LAST, (((rt1.c0 IN (rt1.c0))) NOTNULL) ASC);
SELECT * FROM rt1, rt0, v0, t0 WHERE (x'') ORDER BY NULL  NULLS LAST, (((rt1.c0 IN (rt1.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY NULL  NULLS LAST, (((rt1.c0 IN (rt1.c0))) NOTNULL) ASC);
SELECT * FROM rt1, rt0, v0, t0 WHERE (x'') ORDER BY NULL  NULLS LAST, (((rt1.c0 IN (rt1.c0))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((NULL)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((NULL)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((NULL)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((NULL)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((((v0.c0)) BETWEEN ((v0.c0)) AND ((''))))OR(((((NULL)AND(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3))>((x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3))>((x''))) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3))>((x''))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3))>((x''))) COLLATE BINARY) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3))>((x''))) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)<>(rt0.c4)))-(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<>(rt0.c4)))-(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)<>(rt0.c4)))-(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c4)<>(rt0.c4)))-(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((((rt0.c4)<>(rt0.c4)))-(((((rt0.c3)OR(rt1.c1)))OR(rt1.c1)))));
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((v0.c0) NOT NULL))IS NOT(((rt0.c1)=(rt0.c4)))) CROSS JOIN v0 ON v0.c0 WHERE ((- (LOWER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(DISTINCT v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((v0.c0) NOT NULL))IS NOT(((rt0.c1)==(rt0.c4)))) CROSS JOIN v0 ON v0.c0);
SELECT * FROM t0 RIGHT OUTER JOIN rt0 ON ((((v0.c0) NOT NULL))IS NOT(((rt0.c1)=(rt0.c4)))) CROSS JOIN v0 ON v0.c0 WHERE ((- (LOWER(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(DISTINCT v0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((v0.c0) NOT NULL))IS NOT(((rt0.c1)==(rt0.c4)))) CROSS JOIN v0 ON v0.c0);
SELECT * FROM v0, rt0, rt1, t0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT * FROM v0, rt0, rt1, t0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT * FROM v0, rt0, rt1, t0 WHERE (CAST((~ (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN (- (rt0.c0)) THEN x'' WHEN (rt0.c0 IN ()) THEN (- ('cB')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN (- (rt0.c0)) THEN x'' WHEN (rt0.c0 IN ()) THEN (- ('cB')) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN (- (rt0.c0)) THEN x'' WHEN (rt0.c0 IN ()) THEN (- ('cB')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (NOT (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN (- (rt0.c0)) THEN x'' WHEN (rt0.c0 IN ()) THEN (- ('cB')) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY CASE WHEN (NOT (rt0.c2)) THEN rt0.c3 COLLATE NOCASE WHEN (- (rt0.c0)) THEN x'' WHEN (rt0.c0 IN ()) THEN (- ('cB')) END DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (0xffffffffc9634988)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (0Xffffffffc9634988))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (0xffffffffc9634988)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (0Xffffffffc9634988))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END) BETWEEN ((rt0.c3 IN (rt0.c0))) AND (0xffffffffc9634988)));
SELECT ALL COUNT(*) FROM v0, t0, rt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN (CAST(rt1.c0 AS BLOB))) WHERE (UNLIKELY((NOT (rt1.c2)))) ORDER BY (((rt0.c2 IN (v0.c0))) BETWEEN (CHANGES()) AND (CASE WHEN t0.c0 THEN rt1.c4 END)) ASC  NULLS FIRST, (NULLIF(rt0.c2, rt0.c0) IN ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((NOT (rt1.c2)))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN (CAST(rt1.c0 AS BLOB))) ORDER BY (((rt0.c2 IN (v0.c0))) BETWEEN (CHANGES()) AND (CASE WHEN t0.c0 THEN rt1.c4 END)) ASC  NULLS FIRST, (NULLIF(rt0.c2, rt0.c0) IN ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN (CAST(rt1.c0 AS BLOB))) WHERE (UNLIKELY((NOT (rt1.c2)))) ORDER BY (((rt0.c2 IN (v0.c0))) BETWEEN (CHANGES()) AND (CASE WHEN t0.c0 THEN rt1.c4 END)) ASC  NULLS FIRST, (NULLIF(rt0.c2, rt0.c0) IN ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY((NOT (rt1.c2)))) IS TRUE)  as count FROM v0, t0, rt0 FULL OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN (CAST(rt1.c0 AS BLOB))) ORDER BY (((rt0.c2 IN (v0.c0))) BETWEEN (CHANGES()) AND (CASE WHEN t0.c0 THEN rt1.c4 END)) ASC  NULLS FIRST, (NULLIF(rt0.c2, rt0.c0) IN ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0, rt0 NOT INDEXED FULL OUTER JOIN rt1 ON (((rt1.c0) BETWEEN (rt0.c2) AND (rt1.c0)) IN (CAST(rt1.c0 AS BLOB))) WHERE (UNLIKELY((NOT (rt1.c2)))) ORDER BY (((rt0.c2 IN (v0.c0))) BETWEEN (CHANGES()) AND (CASE WHEN t0.c0 THEN rt1.c4 END)) ASC  NULLS FIRST, (NULLIF(rt0.c2, rt0.c0) IN ((((rt1.c2)) BETWEEN ((NULL)) AND ((rt0.c0))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c4)<=(rt1.c4))) AND ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c4)<=(rt1.c4))) AND ((NOT (rt1.c3))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c4)<=(rt1.c4))) AND ((NOT (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c4)<=(rt1.c4))) AND ((NOT (rt1.c3))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL COUNT(*) FROM v0, rt1 WHERE (((CASE v0.c0  WHEN v0.c0 THEN rt1.c1 END) NOT BETWEEN (((rt1.c4)<=(rt1.c4))) AND ((NOT (rt1.c3)))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON '416530231' LEFT OUTER JOIN rt0 ON '-1806015001' RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((LENGTH(rt1.c3))) AND (((rt1.c1 IN ())))) WHERE ((((rt0.c4 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) NOTNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON '416530231' LEFT OUTER JOIN rt0 ON '-1806015001' RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((LENGTH(rt1.c3))) AND (((rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON '416530231' LEFT OUTER JOIN rt0 ON '-1806015001' RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((LENGTH(rt1.c3))) AND (((rt1.c1 IN ())))) WHERE ((((rt0.c4 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) NOTNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON '416530231' LEFT OUTER JOIN rt0 ON '-1806015001' RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((LENGTH(rt1.c3))) AND (((rt1.c1 IN ())))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED LEFT OUTER JOIN t0 ON '416530231' LEFT OUTER JOIN rt0 ON '-1806015001' RIGHT OUTER JOIN rt1 ON (((rt0.c0)) BETWEEN ((LENGTH(rt1.c3))) AND (((rt1.c1 IN ())))) WHERE ((((rt0.c4 IN ())) NOTNULL));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c4))) AND (NULL))) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 0.03333257396956346))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((rt0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c4))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 0.03333257396956346))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((rt0.c2)==(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c4))) AND (NULL))) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 0.03333257396956346))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((rt0.c2)=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c4))) AND (NULL))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 0.03333257396956346))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((rt0.c2)==(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c4))) AND (NULL))) ORDER BY (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 0.03333257396956346))))AND(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 END)))OR(((rt0.c2)=(rt0.c0))));
SELECT * FROM v0, rt1, rt0, t0 NOT INDEXED WHERE (((((rt1.c0) NOT NULL)) BETWEEN (CASE -723380223  WHEN 0.694804346150553 THEN rt0.c4 END) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) BETWEEN (CASE -723380223  WHEN 0.694804346150553 THEN rt0.c4 END) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT * FROM v0, rt1, rt0, t0 NOT INDEXED WHERE (((((rt1.c0) NOT NULL)) BETWEEN (CASE -723380223  WHEN 0.694804346150553 THEN rt0.c4 END) AND ((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) BETWEEN (CASE -723380223  WHEN 0.694804346150553 THEN rt0.c4 END) AND ((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT * FROM v0, rt1, rt0, t0 NOT INDEXED WHERE (((((rt1.c0) NOT NULL)) BETWEEN (CASE -723380223  WHEN 0.694804346150553 THEN rt0.c4 END) AND ((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM v0 WHERE ((LIKE('', v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKE('', v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((LIKE('', v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LIKE('', v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((LIKE('', v0.c0) IN ()));
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))OR(rt1.c4)))) AND ((((rt0.c1)OR(rt1.c0)))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))OR(rt1.c4)))) AND ((((rt0.c1)OR(rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))OR(rt1.c4)))) AND ((((rt0.c1)OR(rt1.c0)))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))OR(rt1.c4)))) AND ((((rt0.c1)OR(rt1.c0)))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c4)))OR(rt1.c4)))) AND ((((rt0.c1)OR(rt1.c0)))))) ORDER BY ((CAST(rt0.c3 AS REAL)) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE INNER JOIN v0 ON ((t0.c0)/(CASE rt1.c3  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c4 END)) INNER JOIN rt1 ON (((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c3 END) AND (CAST(rt0.c2 AS REAL))) WHERE (((rt0.c4) NOT BETWEEN (((rt0.c3)>>('fG'))) AND (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c4)))AND(t0.c0))))) ORDER BY x'', rt1.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (((rt0.c3)>>('fG'))) AND (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c4)))AND(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE INNER JOIN v0 ON ((t0.c0)/(CASE rt1.c3  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c4 END)) INNER JOIN rt1 ON (((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c3 END) AND (CAST(rt0.c2 AS REAL))) ORDER BY x'', rt1.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE INNER JOIN v0 ON ((t0.c0)/(CASE rt1.c3  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c4 END)) INNER JOIN rt1 ON (((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c3 END) AND (CAST(rt0.c2 AS REAL))) WHERE (((rt0.c4) NOT BETWEEN (((rt0.c3)>>('fG'))) AND (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c4)))AND(t0.c0))))) ORDER BY x'', rt1.c4 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) NOT BETWEEN (((rt0.c3)>>('fG'))) AND (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c4)))AND(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE INNER JOIN v0 ON ((t0.c0)/(CASE rt1.c3  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c4 END)) INNER JOIN rt1 ON (((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c3 END) AND (CAST(rt0.c2 AS REAL))) ORDER BY x'', rt1.c4 ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)) COLLATE NOCASE INNER JOIN v0 ON ((t0.c0)/(CASE rt1.c3  WHEN rt1.c2 THEN rt0.c0 ELSE rt0.c4 END)) INNER JOIN rt1 ON (((((t0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2)))) BETWEEN (CASE WHEN rt0.c1 THEN rt1.c3 END) AND (CAST(rt0.c2 AS REAL))) WHERE (((rt0.c4) NOT BETWEEN (((rt0.c3)>>('fG'))) AND (((((((((rt0.c3)AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c4)))AND(t0.c0))))) ORDER BY x'', rt1.c4 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((t0.c0)AND(t0.c0)))));
SELECT * FROM t0 NOT INDEXED CROSS JOIN v0 ON ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))==((((rt1.c0, rt1.c4, t0.c0)) BETWEEN ((v0.c0, NULL, NULL)) AND ((v0.c0, rt1.c4, v0.c0))))) LEFT OUTER JOIN rt1 ON ((((t0.c0)IS(rt1.c4))) NOT BETWEEN (0x4798e13c COLLATE RTRIM) AND (rt1.c4 COLLATE BINARY)) WHERE (((CAST(rt1.c3 AS NUMERIC))GLOB(((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS NUMERIC))GLOB(((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))==((((rt1.c0, rt1.c4, t0.c0)) BETWEEN ((v0.c0, NULL, NULL)) AND ((v0.c0, rt1.c4, v0.c0))))) LEFT OUTER JOIN rt1 ON ((((t0.c0)IS(rt1.c4))) NOT BETWEEN (0x4798e13c COLLATE RTRIM) AND (rt1.c4 COLLATE BINARY)) ORDER BY rt1.c2);
SELECT * FROM t0 NOT INDEXED CROSS JOIN v0 ON ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))==((((rt1.c0, rt1.c4, t0.c0)) BETWEEN ((v0.c0, NULL, NULL)) AND ((v0.c0, rt1.c4, v0.c0))))) LEFT OUTER JOIN rt1 ON ((((t0.c0)IS(rt1.c4))) NOT BETWEEN (0x4798e13c COLLATE RTRIM) AND (rt1.c4 COLLATE BINARY)) WHERE (((CAST(rt1.c3 AS NUMERIC))GLOB(((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c3 AS NUMERIC))GLOB(((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))==((((rt1.c0, rt1.c4, t0.c0)) BETWEEN ((v0.c0, NULL, NULL)) AND ((v0.c0, rt1.c4, v0.c0))))) LEFT OUTER JOIN rt1 ON ((((t0.c0)IS(rt1.c4))) NOT BETWEEN (0x4798e13c COLLATE RTRIM) AND (rt1.c4 COLLATE BINARY)) ORDER BY rt1.c2);
SELECT * FROM t0 NOT INDEXED CROSS JOIN v0 ON ((((((rt1.c0)AND(rt1.c2)))OR(rt1.c2)))==((((rt1.c0, rt1.c4, t0.c0)) BETWEEN ((v0.c0, NULL, NULL)) AND ((v0.c0, rt1.c4, v0.c0))))) LEFT OUTER JOIN rt1 ON ((((t0.c0)IS(rt1.c4))) NOT BETWEEN (0x4798e13c COLLATE RTRIM) AND (rt1.c4 COLLATE BINARY)) WHERE (((CAST(rt1.c3 AS NUMERIC))GLOB(((((rt1.c1)OR(rt1.c0)))OR(rt1.c4))))) ORDER BY rt1.c2;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0))>((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((+ (v0.c0))))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))  NULLS FIRST, ((v0.c0)%((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0))>((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((+ (v0.c0))))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))  NULLS FIRST, ((v0.c0)%((v0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0))>((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((+ (v0.c0))))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))  NULLS FIRST, ((v0.c0)%((v0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0))>((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((+ (v0.c0))))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))  NULLS FIRST, ((v0.c0)%((v0.c0 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN ((((v0.c0))>((v0.c0)))) AND (CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((+ (v0.c0))))>=((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))))  NULLS FIRST, ((v0.c0)%((v0.c0 IN ()))) DESC;
SELECT * FROM rt0, v0, rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT * FROM rt0, v0, rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c0 AS REAL)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT * FROM rt0, v0, rt1, t0 WHERE ((NOT (CAST(rt1.c0 AS REAL))));
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) ISNULL))) AND ((CAST(rt1.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN ((((rt1.c2) ISNULL))) AND ((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) ISNULL))) AND ((CAST(rt1.c2 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3)) NOT BETWEEN ((((rt1.c2) ISNULL))) AND ((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT COUNT(*) FROM rt0, rt1, v0 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) ISNULL))) AND ((CAST(rt1.c2 AS INTEGER)))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((0.5413497565507439 IN ())) NOT BETWEEN ((((x''))=((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((0.5413497565507439 IN ())) NOT BETWEEN ((((x''))=((rt0.c3)))) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((0.5413497565507439 IN ())) NOT BETWEEN ((((x''))=((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (((0.5413497565507439 IN ())) NOT BETWEEN ((((x''))=((rt0.c3)))) AND ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (((0.5413497565507439 IN ())) NOT BETWEEN ((((x''))=((rt0.c3)))) AND ((rt0.c2 IN ())));
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND ('''')))<>((rt0.c1 IN ())))) ORDER BY ((0.5368265710159529) NOT BETWEEN (((((NULL)AND(rt0.c3)))AND(rt0.c3))) AND (rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c1) AND ('''')))<>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((0.5368265710159529) NOT BETWEEN (((((NULL)AND(rt0.c3)))AND(rt0.c3))) AND (rt0.c4 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND ('''')))<>((rt0.c1 IN ())))) ORDER BY ((0.5368265710159529) NOT BETWEEN (((((NULL)AND(rt0.c3)))AND(rt0.c3))) AND (rt0.c4 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (rt0.c1) AND ('''')))<>((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((0.5368265710159529) NOT BETWEEN (((((NULL)AND(rt0.c3)))AND(rt0.c3))) AND (rt0.c4 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((((rt0.c3) BETWEEN (rt0.c1) AND ('''')))<>((rt0.c1 IN ())))) ORDER BY ((0.5368265710159529) NOT BETWEEN (((((NULL)AND(rt0.c3)))AND(rt0.c3))) AND (rt0.c4 COLLATE RTRIM));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN '-1745700799' ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) ISNULL) THEN '-1745700799' ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN '-1745700799' ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) ISNULL) THEN '-1745700799' ELSE t0.c0 END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0) ISNULL) THEN '-1745700799' ELSE t0.c0 END);
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN (rt0.c0 IN ()) THEN '僡ᛔ[AT' ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN (rt0.c0 IN ()) THEN '僡ᛔ[AT' ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN (rt0.c0 IN ()) THEN '僡ᛔ[AT' ELSE rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN (rt0.c0 IN ()) THEN '僡ᛔ[AT' ELSE rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)));
SELECT ALL COUNT(*) FROM v0, t0 FULL OUTER JOIN rt0 ON ((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))|(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)) WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c0))) THEN ((rt0.c0)GLOB(rt0.c0)) WHEN (rt0.c0 IN ()) THEN '僡ᛔ[AT' ELSE rt0.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (t0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((((- (rt1.c2)))OR(((rt0.c0)IS(rt1.c3)))))OR((+ (rt1.c3))))) ORDER BY '-748252195'  NULLS FIRST, STRFTIME(v0.c0 COLLATE RTRIM, CAST(rt0.c2 AS NUMERIC), (((v0.c0, rt0.c0, NULL))<((rt0.c0, rt0.c4, v0.c0))), (t0.c0 IN ()), CAST(rt0.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c2)))OR(((rt0.c0)IS(rt1.c3)))))OR((+ (rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY '-748252195'  NULLS FIRST, STRFTIME(v0.c0 COLLATE RTRIM, CAST(rt0.c2 AS NUMERIC), (((v0.c0, rt0.c0, NULL))<((rt0.c0, rt0.c4, v0.c0))), (t0.c0 IN ()), CAST(rt0.c4 AS BLOB)));
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((((- (rt1.c2)))OR(((rt0.c0)IS(rt1.c3)))))OR((+ (rt1.c3))))) ORDER BY '-748252195'  NULLS FIRST, STRFTIME(v0.c0 COLLATE RTRIM, CAST(rt0.c2 AS NUMERIC), (((v0.c0, rt0.c0, NULL))<((rt0.c0, rt0.c4, v0.c0))), (t0.c0 IN ()), CAST(rt0.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c2)))OR(((rt0.c0)IS(rt1.c3)))))OR((+ (rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY '-748252195'  NULLS FIRST, STRFTIME(v0.c0 COLLATE RTRIM, CAST(rt0.c2 AS NUMERIC), (((v0.c0, rt0.c0, NULL))<((rt0.c0, rt0.c4, v0.c0))), (t0.c0 IN ()), CAST(rt0.c4 AS BLOB)));
SELECT COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((((((- (rt1.c2)))OR(((rt0.c0)IS(rt1.c3)))))OR((+ (rt1.c3))))) ORDER BY '-748252195'  NULLS FIRST, STRFTIME(v0.c0 COLLATE RTRIM, CAST(rt0.c2 AS NUMERIC), (((v0.c0, rt0.c0, NULL))<((rt0.c0, rt0.c4, v0.c0))), (t0.c0 IN ()), CAST(rt0.c4 AS BLOB));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (- ((~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- ((~ (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (- ((~ (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 ORDER BY (- ((~ (rt1.c1)))));
SELECT ALL * FROM rt1 WHERE (rt1.c0) ORDER BY (- ((~ (rt1.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(DISTINCT t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(LOWER(DISTINCT t0.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0, rt0 NOT INDEXED WHERE ('1567592409') ORDER BY NULLIF((rt0.c4 IN ()), COALESCE(DISTINCT rt0.c0, rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1567592409') IS TRUE)  as count FROM t0, v0, rt0 ORDER BY NULLIF((rt0.c4 IN ()), COALESCE(DISTINCT rt0.c0, rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, rt0 NOT INDEXED WHERE ('1567592409') ORDER BY NULLIF((rt0.c4 IN ()), COALESCE(DISTINCT rt0.c0, rt0.c4))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('1567592409') IS TRUE)  as count FROM t0, v0, rt0 ORDER BY NULLIF((rt0.c4 IN ()), COALESCE(DISTINCT rt0.c0, rt0.c4))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, rt0 NOT INDEXED WHERE ('1567592409') ORDER BY NULLIF((rt0.c4 IN ()), COALESCE(DISTINCT rt0.c0, rt0.c4))  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ABS(((rt1.c4)/(v0.c0))) WHERE (((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c3)))=((rt1.c4 IN (-5.3658424E7)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c3)))==((rt1.c4 IN (-5.3658424E7))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ABS(((rt1.c4)/(v0.c0))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ABS(((rt1.c4)/(v0.c0))) WHERE (((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c3)))=((rt1.c4 IN (-5.3658424E7)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c3)))==((rt1.c4 IN (-5.3658424E7))))) IS TRUE)  as count FROM v0 CROSS JOIN rt1 ON ABS(((rt1.c4)/(v0.c0))));
SELECT ALL * FROM v0 CROSS JOIN rt1 ON ABS(((rt1.c4)/(v0.c0))) WHERE (((((rt1.c0) NOT BETWEEN (v0.c0) AND (rt1.c3)))=((rt1.c4 IN (-5.3658424E7)))));
SELECT * FROM t0, v0, rt1, rt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((rt0.c4) BETWEEN (rt1.c4) AND (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c4) AND (t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, v0, rt1, rt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((rt0.c4) BETWEEN (rt1.c4) AND (t0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY ((rt0.c4) BETWEEN (rt1.c4) AND (t0.c0)) COLLATE RTRIM);
SELECT * FROM t0, v0, rt1, rt0 WHERE (CAST(x'' AS TEXT)) ORDER BY ((rt0.c4) BETWEEN (rt1.c4) AND (t0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (- (x'')) RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c3)))AND(v0.c0)))OR(NULL)))OR(rt1.c3)) AS INTEGER)) ORDER BY (load_extension(x'', rt1.c0) IN (NULL COLLATE BINARY, '545174441'));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c3)))AND(v0.c0)))OR(NULL)))OR(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- (x'')) RIGHT OUTER JOIN v0 ON rt1.c1 ORDER BY (load_extension(x'', rt1.c0) IN (NULL COLLATE BINARY, '545174441')));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (- (x'')) RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c3)))AND(v0.c0)))OR(NULL)))OR(rt1.c3)) AS INTEGER)) ORDER BY (load_extension(x'', rt1.c0) IN (NULL COLLATE BINARY, '545174441'));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c3)))AND(v0.c0)))OR(NULL)))OR(rt1.c3)) AS INTEGER)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- (x'')) RIGHT OUTER JOIN v0 ON rt1.c1 ORDER BY (load_extension(x'', rt1.c0) IN (NULL COLLATE BINARY, '545174441')));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON (- (x'')) RIGHT OUTER JOIN v0 ON rt1.c1 WHERE (CAST(((((((((rt0.c1)OR(rt0.c3)))AND(v0.c0)))OR(NULL)))OR(rt1.c3)) AS INTEGER)) ORDER BY (load_extension(x'', rt1.c0) IN (NULL COLLATE BINARY, '545174441'));
SELECT * FROM v0, t0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt0.c3 IN ()) THEN (~ (rt1.c3)) WHEN rt0.c2 THEN ((v0.c0)AND(v0.c0)) WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) THEN CASE WHEN rt0.c2 THEN rt1.c0 END END LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END AS INTEGER) WHERE (((((('*vjRb')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))) NOTNULL)) ORDER BY CASE ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN x'' END;
SELECT SUM(count) FROM (SELECT ((((((('*vjRb')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt0.c3 IN ()) THEN (~ (rt1.c3)) WHEN rt0.c2 THEN ((v0.c0)AND(v0.c0)) WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) THEN CASE WHEN rt0.c2 THEN rt1.c0 END END LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END AS INTEGER) ORDER BY CASE ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN x'' END);
SELECT * FROM v0, t0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt0.c3 IN ()) THEN (~ (rt1.c3)) WHEN rt0.c2 THEN ((v0.c0)AND(v0.c0)) WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) THEN CASE WHEN rt0.c2 THEN rt1.c0 END END LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END AS INTEGER) WHERE (((((('*vjRb')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))) NOTNULL)) ORDER BY CASE ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN x'' END;
SELECT SUM(count) FROM (SELECT ((((((('*vjRb')) BETWEEN ((rt1.c2)) AND ((rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt0.c3 IN ()) THEN (~ (rt1.c3)) WHEN rt0.c2 THEN ((v0.c0)AND(v0.c0)) WHEN (((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c2))) THEN CASE WHEN rt0.c2 THEN rt1.c0 END END LEFT OUTER JOIN rt0 ON CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE v0.c0 END AS INTEGER) ORDER BY CASE ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c2))  WHEN rt0.c2 COLLATE NOCASE THEN x'' END);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4)/(rt0.c3)))>>(0.7623537141551142))) ORDER BY ((CAST(rt0.c2 AS INTEGER))LIKE((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)/(rt0.c3)))>>(0.7623537141551142))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CAST(rt0.c2 AS INTEGER))LIKE((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4)/(rt0.c3)))>>(0.7623537141551142))) ORDER BY ((CAST(rt0.c2 AS INTEGER))LIKE((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)/(rt0.c3)))>>(0.7623537141551142))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((CAST(rt0.c2 AS INTEGER))LIKE((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1 WHERE (((((rt1.c4)/(rt0.c3)))>>(0.7623537141551142))) ORDER BY ((CAST(rt0.c2 AS INTEGER))LIKE((((rt1.c1)) BETWEEN ((rt0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (CAST(((t0.c0)IS(rt0.c3)) AS REAL)) ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CAST(((t0.c0)IS(rt0.c3)) AS REAL)) ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)IS(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CAST(((t0.c0)IS(rt0.c3)) AS REAL)) ORDER BY (((rt0.c1 IN ())) IS TRUE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1 WHERE (((((((((((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)))OR('')))OR(((rt1.c1)|(rt1.c4)))))OR(((rt1.c0)>=(rt1.c4)))))AND(rt1.c1)))AND((rt1.c1 IN ()))))AND(((rt1.c0)LIKE(rt1.c3))))) ORDER BY CASE WHEN ((t0.c0)-(rt1.c3)) THEN QUOTE(rt1.c1) ELSE 0.19782231138273287 END DESC, NULL ASC, CASE WHEN t0.c0 THEN rt1.c4 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)))OR('')))OR(((rt1.c1)|(rt1.c4)))))OR(((rt1.c0)>=(rt1.c4)))))AND(rt1.c1)))AND((rt1.c1 IN ()))))AND(((rt1.c0)LIKE(rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN ((t0.c0)-(rt1.c3)) THEN QUOTE(rt1.c1) ELSE 0.19782231138273287 END DESC, NULL ASC, CASE WHEN t0.c0 THEN rt1.c4 END COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1 WHERE (((((((((((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)))OR('')))OR(((rt1.c1)|(rt1.c4)))))OR(((rt1.c0)>=(rt1.c4)))))AND(rt1.c1)))AND((rt1.c1 IN ()))))AND(((rt1.c0)LIKE(rt1.c3))))) ORDER BY CASE WHEN ((t0.c0)-(rt1.c3)) THEN QUOTE(rt1.c1) ELSE 0.19782231138273287 END DESC, NULL ASC, CASE WHEN t0.c0 THEN rt1.c4 END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)))OR('')))OR(((rt1.c1)|(rt1.c4)))))OR(((rt1.c0)>=(rt1.c4)))))AND(rt1.c1)))AND((rt1.c1 IN ()))))AND(((rt1.c0)LIKE(rt1.c3))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE WHEN ((t0.c0)-(rt1.c3)) THEN QUOTE(rt1.c1) ELSE 0.19782231138273287 END DESC, NULL ASC, CASE WHEN t0.c0 THEN rt1.c4 END COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, rt1 WHERE (((((((((((((((((rt1.c4)OR(rt1.c3)))OR(rt1.c0)))OR('')))OR(((rt1.c1)|(rt1.c4)))))OR(((rt1.c0)>=(rt1.c4)))))AND(rt1.c1)))AND((rt1.c1 IN ()))))AND(((rt1.c0)LIKE(rt1.c3))))) ORDER BY CASE WHEN ((t0.c0)-(rt1.c3)) THEN QUOTE(rt1.c1) ELSE 0.19782231138273287 END DESC, NULL ASC, CASE WHEN t0.c0 THEN rt1.c4 END COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((0.005057863072023605, '-1197042270', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.005057863072023605, '-1197042270', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((0.005057863072023605, '-1197042270', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.005057863072023605, '-1197042270', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((0.005057863072023605, '-1197042270', t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))*(((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT * FROM t0, rt1 INNER JOIN v0 ON (- ((t0.c0 IN ()))) WHERE (CASE CAST(rt1.c3 AS TEXT)  WHEN ((v0.c0) IS TRUE) THEN rt1.c0 COLLATE RTRIM ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c3 AS TEXT)  WHEN ((v0.c0) IS TRUE) THEN rt1.c0 COLLATE RTRIM ELSE v0.c0 END) IS TRUE)  as count FROM t0, rt1 NOT INDEXED INNER JOIN v0 ON (- ((t0.c0 IN ()))));
SELECT * FROM t0, rt1 INNER JOIN v0 ON (- ((t0.c0 IN ()))) WHERE (CASE CAST(rt1.c3 AS TEXT)  WHEN ((v0.c0) IS TRUE) THEN rt1.c0 COLLATE RTRIM ELSE v0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt1.c3 AS TEXT)  WHEN ((v0.c0) IS TRUE) THEN rt1.c0 COLLATE RTRIM ELSE v0.c0 END) IS TRUE)  as count FROM t0, rt1 NOT INDEXED INNER JOIN v0 ON (- ((t0.c0 IN ()))));
SELECT * FROM t0, rt1 INNER JOIN v0 ON (- ((t0.c0 IN ()))) WHERE (CASE CAST(rt1.c3 AS TEXT)  WHEN ((v0.c0) IS TRUE) THEN rt1.c0 COLLATE RTRIM ELSE v0.c0 END);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN ('557236414') AND (0.06277247141931463)) AS INTEGER)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT), CAST(LOWER(rt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) NOT BETWEEN ('557236414') AND (0.06277247141931463)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT), CAST(LOWER(rt0.c0) AS TEXT)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN ('557236414') AND (0.06277247141931463)) AS INTEGER)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT), CAST(LOWER(rt0.c0) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c3) NOT BETWEEN ('557236414') AND (0.06277247141931463)) AS INTEGER)) IS TRUE)  as count FROM v0, rt0 ORDER BY CAST((rt0.c0 IN ()) AS TEXT), CAST(LOWER(rt0.c0) AS TEXT)  NULLS LAST);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c3) NOT BETWEEN ('557236414') AND (0.06277247141931463)) AS INTEGER)) ORDER BY CAST((rt0.c0 IN ()) AS TEXT), CAST(LOWER(rt0.c0) AS TEXT)  NULLS LAST;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((ABS(t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, LIKELIHOOD(((t0.c0)&(t0.c0)), 0.42230220630488957)  NULLS FIRST, (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((ABS(t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, LIKELIHOOD(((t0.c0)&(t0.c0)), 0.42230220630488957)  NULLS FIRST, (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((ABS(t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, LIKELIHOOD(((t0.c0)&(t0.c0)), 0.42230220630488957)  NULLS FIRST, (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((ABS(t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, LIKELIHOOD(((t0.c0)&(t0.c0)), 0.42230220630488957)  NULLS FIRST, (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ()));
SELECT * FROM t0 WHERE (t0.c0) ORDER BY ((((ABS(t0.c0))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))) DESC, LIKELIHOOD(((t0.c0)&(t0.c0)), 0.42230220630488957)  NULLS FIRST, (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) IN ());
SELECT * FROM rt1 WHERE (((((x'')OR((+ (rt1.c0)))))OR(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((+ (rt1.c0)))))OR(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((x'')OR((+ (rt1.c0)))))OR(((rt1.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR((+ (rt1.c0)))))OR(((rt1.c3) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((x'')OR((+ (rt1.c0)))))OR(((rt1.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))IS(((t0.c0)<<(t0.c0))))) ORDER BY ((QUOTE(t0.c0))-(((t0.c0)==(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))IS(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((QUOTE(t0.c0))-(((t0.c0)==(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))IS(((t0.c0)<<(t0.c0))))) ORDER BY ((QUOTE(t0.c0))-(((t0.c0)==(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))IS(((t0.c0)<<(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((QUOTE(t0.c0))-(((t0.c0)==(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))IS(((t0.c0)<<(t0.c0))))) ORDER BY ((QUOTE(t0.c0))-(((t0.c0)==(t0.c0)))) ASC;
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((((t0.c0)OR(v0.c0)))AND(rt0.c3)) IN (((rt0.c4) ISNULL), ((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(v0.c0)))AND(rt0.c3)) IN (((rt0.c4) ISNULL), ((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((((t0.c0)OR(v0.c0)))AND(rt0.c3)) IN (((rt0.c4) ISNULL), ((rt1.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(v0.c0)))AND(rt0.c3)) IN (((rt0.c4) ISNULL), ((rt1.c1) IS FALSE)))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL * FROM v0, rt0, rt1, t0 WHERE ((((((t0.c0)OR(v0.c0)))AND(rt0.c3)) IN (((rt0.c4) ISNULL), ((rt1.c1) IS FALSE))));
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (CAST((((v0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (CAST((((v0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS BLOB)) IS TRUE)  as count FROM v0, t0, rt0);
SELECT COUNT(*) FROM v0, t0, rt0 WHERE (CAST((((v0.c0, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c2))) AS BLOB));
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((rt1.c4) IS FALSE) THEN ((rt1.c3) NOT NULL) END) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c4) IS FALSE) THEN ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((rt1.c4) IS FALSE) THEN ((rt1.c3) NOT NULL) END) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c4) IS FALSE) THEN ((rt1.c3) NOT NULL) END) IS TRUE)  as count FROM rt1, v0 ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT ALL * FROM rt1, v0 WHERE (CASE WHEN ((rt1.c4) IS FALSE) THEN ((rt1.c3) NOT NULL) END) ORDER BY ((((v0.c0) NOT NULL))+(((v0.c0) BETWEEN (v0.c0) AND (rt1.c2))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (((rt0.c4 IN ()))AND(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c4 IN ()))AND(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, v0 WHERE ((((+ (rt0.c0))) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0))))) ORDER BY (((rt0.c4 IN ()))AND(((v0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c0))) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c4 IN ()))AND(((v0.c0) IS TRUE))));
SELECT ALL * FROM v0, t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM v0, t0, rt1);
SELECT ALL * FROM v0, t0, rt1 WHERE (rt1.c3);
SELECT * FROM t0, rt1, rt0 NATURAL JOIN v0 WHERE ((- (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1, rt0 NATURAL JOIN v0);
SELECT * FROM t0, rt1, rt0 NATURAL JOIN v0 WHERE ((- (CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, rt1, rt0 NATURAL JOIN v0);
SELECT * FROM t0, rt1, rt0 NATURAL JOIN v0 WHERE ((- (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt1.c3) IS FALSE)))) ORDER BY ABS(DISTINCT ((((((((rt0.c2)OR(rt1.c2)))OR('')))OR(rt0.c1)))AND(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ABS(DISTINCT ((((((((rt0.c2)OR(rt1.c2)))OR('')))OR(rt0.c1)))AND(rt1.c4))));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt1.c3) IS FALSE)))) ORDER BY ABS(DISTINCT ((((((((rt0.c2)OR(rt1.c2)))OR('')))OR(rt0.c1)))AND(rt1.c4)));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c3) IS FALSE)))) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY ABS(DISTINCT ((((((((rt0.c2)OR(rt1.c2)))OR('')))OR(rt0.c1)))AND(rt1.c4))));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE ((~ (((rt1.c3) IS FALSE)))) ORDER BY ABS(DISTINCT ((((((((rt0.c2)OR(rt1.c2)))OR('')))OR(rt0.c1)))AND(rt1.c4)));
SELECT * FROM rt1 CROSS JOIN v0 ON COALESCE(DISTINCT ((((((((rt1.c3)AND(1227704432)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)), ((0.6373822456977081) NOT BETWEEN ('-721410803') AND (t0.c0))) INNER JOIN t0 ON ((((t0.c0)LIKE(rt1.c0))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE WHEN ((((((((((((rt1.c4)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN (~ (rt1.c2)) WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN CASE 0.5652897109765094  WHEN x'b47d' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN NULL END WHEN ((t0.c0)>('-500230444')) THEN ((rt1.c4)>(rt1.c2)) ELSE 0X3f8b4ffa END, ((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (t0.c0) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON COALESCE(DISTINCT ((((((((rt1.c3)AND(1227704432)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)), ((0.6373822456977081) NOT BETWEEN ('-721410803') AND (t0.c0))) INNER JOIN t0 ON ((((t0.c0)LIKE(rt1.c0))) NOT NULL) ORDER BY CASE WHEN ((((((((((((rt1.c4)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN (~ (rt1.c2)) WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN CASE 0.5652897109765094  WHEN x'b47d' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN NULL END WHEN ((t0.c0)>('-500230444')) THEN ((rt1.c4)>(rt1.c2)) ELSE 0X3f8b4ffa END, ((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (t0.c0) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN v0 ON COALESCE(DISTINCT ((((((((rt1.c3)AND(1227704432)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)), ((0.6373822456977081) NOT BETWEEN ('-721410803') AND (t0.c0))) INNER JOIN t0 ON ((((t0.c0)LIKE(rt1.c0))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE WHEN ((((((((((((rt1.c4)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN (~ (rt1.c2)) WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN CASE 0.5652897109765094  WHEN x'b47d' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN NULL END WHEN ((t0.c0)>('-500230444')) THEN ((rt1.c4)>(rt1.c2)) ELSE 0X3f8b4ffa END, ((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (t0.c0) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON COALESCE(DISTINCT ((((((((rt1.c3)AND(1227704432)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)), ((0.6373822456977081) NOT BETWEEN ('-721410803') AND (t0.c0))) INNER JOIN t0 ON ((((t0.c0)LIKE(rt1.c0))) NOT NULL) ORDER BY CASE WHEN ((((((((((((rt1.c4)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN (~ (rt1.c2)) WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN CASE 0.5652897109765094  WHEN x'b47d' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN NULL END WHEN ((t0.c0)>('-500230444')) THEN ((rt1.c4)>(rt1.c2)) ELSE 0X3f8b4ffa END, ((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (t0.c0) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN v0 ON COALESCE(DISTINCT ((((((((rt1.c3)AND(1227704432)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)), ((0.6373822456977081) NOT BETWEEN ('-721410803') AND (t0.c0))) INNER JOIN t0 ON ((((t0.c0)LIKE(rt1.c0))) NOT NULL) WHERE (rt1.c4) ORDER BY CASE WHEN ((((((((((((rt1.c4)AND(t0.c0)))OR(v0.c0)))OR(t0.c0)))AND(t0.c0)))AND(rt1.c1)))OR(rt1.c2)) THEN (~ (rt1.c2)) WHEN ((((((((rt1.c4)OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c2)) THEN CASE 0.5652897109765094  WHEN x'b47d' THEN rt1.c0 WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c1 THEN NULL END WHEN ((t0.c0)>('-500230444')) THEN ((rt1.c4)>(rt1.c2)) ELSE 0X3f8b4ffa END, ((CASE WHEN t0.c0 THEN NULL END) NOT BETWEEN (t0.c0) AND (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON HEX(((((((((rt0.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c1)))AND(v0.c0))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON HEX(((((((((rt0.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c1)))AND(v0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON HEX(((((((((rt0.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c1)))AND(v0.c0))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON HEX(((((((((rt0.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c1)))AND(v0.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON HEX(((((((((rt0.c0)OR(NULL)))AND(rt0.c3)))OR(rt0.c1)))AND(v0.c0))) WHERE (rt0.c1);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((rt1.c4 COLLATE NOCASE) NOT BETWEEN (((v0.c0)|(rt0.c3))) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE NOCASE) NOT BETWEEN (((v0.c0)|(rt0.c3))) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((rt1.c4 COLLATE NOCASE) NOT BETWEEN (((v0.c0)|(rt0.c3))) AND (rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4 COLLATE NOCASE) NOT BETWEEN (((v0.c0)|(rt0.c3))) AND (rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT ALL * FROM rt1, v0, rt0, t0 WHERE (((rt1.c4 COLLATE NOCASE) NOT BETWEEN (((v0.c0)|(rt0.c3))) AND (rt0.c3 COLLATE BINARY)));
SELECT COUNT(*) FROM t0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(CASE v0.c0  WHEN v0.c0 THEN 'IV>G}/%?g' WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(0.20452606894431014)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))OR(CASE v0.c0  WHEN v0.c0 THEN 'IV>G}/%?g' WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(0.20452606894431014))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(CASE v0.c0  WHEN v0.c0 THEN 'IV>G}/%?g' WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(0.20452606894431014)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS NUMERIC))OR(CASE v0.c0  WHEN v0.c0 THEN 'IV>G}/%?g' WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(0.20452606894431014))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((CAST(v0.c0 AS NUMERIC))OR(CASE v0.c0  WHEN v0.c0 THEN 'IV>G}/%?g' WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN v0.c0 END)))OR(0.20452606894431014)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (NOT (v0.c0)) COLLATE RTRIM WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((rt1.c2 COLLATE RTRIM) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (NOT (v0.c0)) COLLATE RTRIM ORDER BY ((rt1.c2 COLLATE RTRIM) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (NOT (v0.c0)) COLLATE RTRIM WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((rt1.c2 COLLATE RTRIM) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS BLOB)) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON (NOT (v0.c0)) COLLATE RTRIM ORDER BY ((rt1.c2 COLLATE RTRIM) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON (NOT (v0.c0)) COLLATE RTRIM WHERE (CAST(rt1.c3 AS BLOB)) ORDER BY ((rt1.c2 COLLATE RTRIM) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (((rt1.c4) IS TRUE)) AND (rt0.c4)) WHERE (((((rt1.c1)LIKE(rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (((rt1.c4) IS TRUE)) AND (rt0.c4)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (((rt1.c4) IS TRUE)) AND (rt0.c4)) WHERE (((((rt1.c1)LIKE(rt0.c4))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)LIKE(rt0.c4))) IS FALSE)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (((rt1.c4) IS TRUE)) AND (rt0.c4)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (((rt1.c4) IS TRUE)) AND (rt0.c4)) WHERE (((((rt1.c1)LIKE(rt0.c4))) IS FALSE));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY rt1.c2 DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c4) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2 DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c4) ORDER BY rt1.c2 DESC;
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE WHEN ((((v0.c0)AND(rt1.c4)))AND(rt1.c1)) THEN (+ (rt1.c2)) WHEN ((rt1.c4) NOT NULL) THEN (+ (rt1.c2)) WHEN 0.39360461220447795 THEN CASE rt1.c3  WHEN v0.c0 THEN 0.5336010378275734 ELSE rt1.c4 END END) ORDER BY (((rt1.c4, 0.6170305369277376, rt1.c4)) NOT BETWEEN ((rt1.c2, (((rt1.c2))<((v0.c0))), ((rt1.c4)<<(rt1.c3)))) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN 0.9277161375908156 THEN rt1.c3 END, ((v0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CASE 0x3448fcf6  WHEN rt1.c0 THEN rt1.c4 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)AND(rt1.c4)))AND(rt1.c1)) THEN (+ (rt1.c2)) WHEN ((rt1.c4) NOT NULL) THEN (+ (rt1.c2)) WHEN 0.39360461220447795 THEN CASE rt1.c3  WHEN v0.c0 THEN 0.5336010378275734 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c4, 0.6170305369277376, rt1.c4)) NOT BETWEEN ((rt1.c2, (((rt1.c2))<((v0.c0))), ((rt1.c4)<<(rt1.c3)))) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN 0.9277161375908156 THEN rt1.c3 END, ((v0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CASE 0X3448fcf6  WHEN rt1.c0 THEN rt1.c4 END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE WHEN ((((v0.c0)AND(rt1.c4)))AND(rt1.c1)) THEN (+ (rt1.c2)) WHEN ((rt1.c4) NOT NULL) THEN (+ (rt1.c2)) WHEN 0.39360461220447795 THEN CASE rt1.c3  WHEN v0.c0 THEN 0.5336010378275734 ELSE rt1.c4 END END) ORDER BY (((rt1.c4, 0.6170305369277376, rt1.c4)) NOT BETWEEN ((rt1.c2, (((rt1.c2))<((v0.c0))), ((rt1.c4)<<(rt1.c3)))) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN 0.9277161375908156 THEN rt1.c3 END, ((v0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CASE 0x3448fcf6  WHEN rt1.c0 THEN rt1.c4 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((v0.c0)AND(rt1.c4)))AND(rt1.c1)) THEN (+ (rt1.c2)) WHEN ((rt1.c4) NOT NULL) THEN (+ (rt1.c2)) WHEN 0.39360461220447795 THEN CASE rt1.c3  WHEN v0.c0 THEN 0.5336010378275734 ELSE rt1.c4 END END) IS TRUE)  as count FROM rt1, v0 ORDER BY (((rt1.c4, 0.6170305369277376, rt1.c4)) NOT BETWEEN ((rt1.c2, (((rt1.c2))<((v0.c0))), ((rt1.c4)<<(rt1.c3)))) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN 0.9277161375908156 THEN rt1.c3 END, ((v0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CASE 0X3448fcf6  WHEN rt1.c0 THEN rt1.c4 END)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, v0 WHERE (CASE WHEN ((((v0.c0)AND(rt1.c4)))AND(rt1.c1)) THEN (+ (rt1.c2)) WHEN ((rt1.c4) NOT NULL) THEN (+ (rt1.c2)) WHEN 0.39360461220447795 THEN CASE rt1.c3  WHEN v0.c0 THEN 0.5336010378275734 ELSE rt1.c4 END END) ORDER BY (((rt1.c4, 0.6170305369277376, rt1.c4)) NOT BETWEEN ((rt1.c2, (((rt1.c2))<((v0.c0))), ((rt1.c4)<<(rt1.c3)))) AND ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c4 WHEN 0.9277161375908156 THEN rt1.c3 END, ((v0.c0) BETWEEN (rt1.c1) AND (rt1.c4)), CASE 0x3448fcf6  WHEN rt1.c0 THEN rt1.c4 END)))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c3 THEN NULL WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY (~ (rt1.c2 COLLATE NOCASE)), NULLIF(DISTINCT ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((((rt1.c0)OR(rt1.c2)))AND('557236414'))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c2  WHEN rt1.c3 THEN NULL WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ (rt1.c2 COLLATE NOCASE)), NULLIF(DISTINCT ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((((rt1.c0)OR(rt1.c2)))AND('557236414'))) DESC);
SELECT * FROM rt1, t0 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c3 THEN NULL WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY (~ (rt1.c2 COLLATE NOCASE)), NULLIF(DISTINCT ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((((rt1.c0)OR(rt1.c2)))AND('557236414'))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt1.c2  WHEN rt1.c3 THEN NULL WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1, t0 ORDER BY (~ (rt1.c2 COLLATE NOCASE)), NULLIF(DISTINCT ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((((rt1.c0)OR(rt1.c2)))AND('557236414'))) DESC);
SELECT * FROM rt1, t0 WHERE ((NOT (CASE rt1.c2  WHEN rt1.c3 THEN NULL WHEN t0.c0 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 END))) ORDER BY (~ (rt1.c2 COLLATE NOCASE)), NULLIF(DISTINCT ((((rt1.c4)AND(rt1.c4)))AND(rt1.c3)), ((((rt1.c0)OR(rt1.c2)))AND('557236414'))) DESC;
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.5048111783655216 WHEN t0.c0 THEN t0.c0 WHEN '-730909532' THEN '1489658193' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.5048111783655216 WHEN t0.c0 THEN t0.c0 WHEN '-730909532' THEN '1489658193' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.5048111783655216 WHEN t0.c0 THEN t0.c0 WHEN '-730909532' THEN '1489658193' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN 0.5048111783655216 WHEN t0.c0 THEN t0.c0 WHEN '-730909532' THEN '1489658193' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN 0.5048111783655216 WHEN t0.c0 THEN t0.c0 WHEN '-730909532' THEN '1489658193' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN NULL ELSE t0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE (SUBSTR((((rt1.c4))==((rt1.c4))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY (((((((rt1.c1))<((rt1.c1))))OR((~ (rt1.c4)))))AND(json_quote(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((((rt1.c4))=((rt1.c4))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1))<((rt1.c1))))OR((~ (rt1.c4)))))AND(json_quote(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (SUBSTR((((rt1.c4))==((rt1.c4))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY (((((((rt1.c1))<((rt1.c1))))OR((~ (rt1.c4)))))AND(json_quote(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((SUBSTR((((rt1.c4))=((rt1.c4))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY (((((((rt1.c1))<((rt1.c1))))OR((~ (rt1.c4)))))AND(json_quote(rt1.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (SUBSTR((((rt1.c4))==((rt1.c4))), ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)))) ORDER BY (((((((rt1.c1))<((rt1.c1))))OR((~ (rt1.c4)))))AND(json_quote(rt1.c0)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT rt1.c4))IS((rt0.c0 IN ()))) INNER JOIN rt1 ON 0.7912337556492953 WHERE (TYPEOF(DISTINCT rt1.c3)) ORDER BY (NULLIF(rt0.c3, rt0.c3) IN (x'' COLLATE BINARY, rt1.c1));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c3)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT rt1.c4))IS((rt0.c0 IN ()))) INNER JOIN rt1 ON 0.7912337556492953 ORDER BY (NULLIF(rt0.c3, rt0.c3) IN (x'' COLLATE BINARY, rt1.c1)));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT rt1.c4))IS((rt0.c0 IN ()))) INNER JOIN rt1 ON 0.7912337556492953 WHERE (TYPEOF(DISTINCT rt1.c3)) ORDER BY (NULLIF(rt0.c3, rt0.c3) IN (x'' COLLATE BINARY, rt1.c1));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT rt1.c3)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((TRIM(DISTINCT rt1.c4))IS((rt0.c0 IN ()))) INNER JOIN rt1 ON 0.7912337556492953 ORDER BY (NULLIF(rt0.c3, rt0.c3) IN (x'' COLLATE BINARY, rt1.c1)));
SELECT * FROM t0, v0, rt0 WHERE (rt0.c2) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM t0, v0, rt0 WHERE (rt0.c2) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY NULL ASC  NULLS LAST);
SELECT * FROM t0, v0, rt0 WHERE (rt0.c2) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS NUMERIC)))<>((TRIM(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC)))!=((TRIM(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS NUMERIC)))<>((TRIM(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c1 AS NUMERIC)))!=((TRIM(rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON rt0.c2);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON rt0.c2 WHERE ((((CAST(rt0.c1 AS NUMERIC)))<>((TRIM(rt0.c3)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CASE WHEN (+ (rt0.c1)) THEN ((rt0.c4) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ABS(v0.c0) END CROSS JOIN rt0 ON rt1.c4 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), '1621162540'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CASE WHEN (+ (rt0.c1)) THEN ((rt0.c4) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ABS(v0.c0) END CROSS JOIN rt0 ON rt1.c4 INNER JOIN rt1 ON x'' ORDER BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), '1621162540'  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CASE WHEN (+ (rt0.c1)) THEN ((rt0.c4) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ABS(v0.c0) END CROSS JOIN rt0 ON rt1.c4 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), '1621162540'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CASE WHEN (+ (rt0.c1)) THEN ((rt0.c4) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ABS(v0.c0) END CROSS JOIN rt0 ON rt1.c4 INNER JOIN rt1 ON x'' ORDER BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), '1621162540'  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON CASE WHEN (+ (rt0.c1)) THEN ((rt0.c4) BETWEEN (rt1.c3) AND (t0.c0)) ELSE ABS(v0.c0) END CROSS JOIN rt0 ON rt1.c4 INNER JOIN rt1 ON x'' WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_GET(CAST(rt0.c2 AS NUMERIC)), '1621162540'  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((- (rt0.c4)) IN ()) INNER JOIN t0 ON rt1.c1 CROSS JOIN rt1 ON ((((~ (rt1.c2))))>=((CAST(v0.c0 AS NUMERIC)))) WHERE ((((((rt1.c0)) NOT BETWEEN ((315739802)) AND ((rt0.c1))))AND(TRIM(rt0.c3, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((315739802)) AND ((rt0.c1))))AND(TRIM(rt0.c3, v0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((- (rt0.c4)) IN ()) INNER JOIN t0 ON rt1.c1 CROSS JOIN rt1 ON ((((~ (rt1.c2))))>=((CAST(v0.c0 AS NUMERIC)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((- (rt0.c4)) IN ()) INNER JOIN t0 ON rt1.c1 CROSS JOIN rt1 ON ((((~ (rt1.c2))))>=((CAST(v0.c0 AS NUMERIC)))) WHERE ((((((rt1.c0)) NOT BETWEEN ((315739802)) AND ((rt0.c1))))AND(TRIM(rt0.c3, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)) NOT BETWEEN ((315739802)) AND ((rt0.c1))))AND(TRIM(rt0.c3, v0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((- (rt0.c4)) IN ()) INNER JOIN t0 ON rt1.c1 CROSS JOIN rt1 ON ((((~ (rt1.c2))))>=((CAST(v0.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, t0, rt1 WHERE ((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, t0, rt1 WHERE ((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0 NOT INDEXED, t0, rt1 WHERE ((((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c2)) IN ()));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)LIKE(rt0.c1))) NOTNULL) FULL OUTER JOIN v0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL) CROSS JOIN rt1 ON (((rt1.c4)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0))) WHERE (CASE (- (rt1.c3))  WHEN (((rt0.c4, rt1.c3, rt1.c2))<=((rt0.c0, t0.c0, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) ORDER BY ((((((NULL) ISNULL))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c3))  WHEN (((rt0.c4, rt1.c3, rt1.c2))<=((rt0.c0, t0.c0, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)LIKE(rt0.c1))) NOTNULL) FULL OUTER JOIN v0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL) CROSS JOIN rt1 ON (((rt1.c4)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0))) ORDER BY ((((((NULL) ISNULL))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)LIKE(rt0.c1))) NOTNULL) FULL OUTER JOIN v0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL) CROSS JOIN rt1 ON (((rt1.c4)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0))) WHERE (CASE (- (rt1.c3))  WHEN (((rt0.c4, rt1.c3, rt1.c2))<=((rt0.c0, t0.c0, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) ORDER BY ((((((NULL) ISNULL))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (- (rt1.c3))  WHEN (((rt0.c4, rt1.c3, rt1.c2))<=((rt0.c0, t0.c0, rt0.c1))) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((rt1.c2)LIKE(rt0.c1))) NOTNULL) FULL OUTER JOIN v0 ON ((((rt0.c4) BETWEEN (rt1.c0) AND (v0.c0))) ISNULL) CROSS JOIN rt1 ON (((rt1.c4)) NOT BETWEEN (((rt0.c1 IN ()))) AND ((rt0.c0))) ORDER BY ((((((NULL) ISNULL))OR(rt0.c3 COLLATE NOCASE)))AND(rt0.c2))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))&(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))&(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))&(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))&(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)))&(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)));
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN 0.4085121297792912 THEN rt1.c3 ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((v0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.4085121297792912 THEN rt1.c3 ELSE CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt1, rt0, t0 NATURAL JOIN v0 ORDER BY ((v0.c0) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN 0.4085121297792912 THEN rt1.c3 ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((v0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.4085121297792912 THEN rt1.c3 ELSE CAST(rt1.c2 AS REAL) END) IS TRUE)  as count FROM rt1, rt0, t0 NATURAL JOIN v0 ORDER BY ((v0.c0) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM rt1, rt0, t0 NATURAL JOIN v0 WHERE (CASE WHEN 0.4085121297792912 THEN rt1.c3 ELSE CAST(rt1.c2 AS REAL) END) ORDER BY ((v0.c0) IS FALSE) ASC;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c2 ELSE '2275922' END)!=(rt0.c4 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c2 ELSE '2275922' END)!=(rt0.c4 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c2 ELSE '2275922' END)!=(rt0.c4 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c2 ELSE '2275922' END)!=(rt0.c4 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY ((CASE rt0.c3  WHEN NULL THEN rt0.c2 ELSE '2275922' END)!=(rt0.c4 COLLATE NOCASE));
SELECT ALL * FROM t0 CROSS JOIN rt0 ON '-736779702' WHERE (LIKELY(x'4f7d')) ORDER BY (NOT (((rt0.c4)+(rt0.c4)))) ASC  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE SUBSTR(t0.c0, rt0.c1) END ASC, (- (0.8522363873735304)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'4f7d')) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '-736779702' ORDER BY (NOT (((rt0.c4)+(rt0.c4)))) ASC  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE SUBSTR(t0.c0, rt0.c1) END ASC, (- (0.8522363873735304)) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON '-736779702' WHERE (LIKELY(x'4f7d')) ORDER BY (NOT (((rt0.c4)+(rt0.c4)))) ASC  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE SUBSTR(t0.c0, rt0.c1) END ASC, (- (0.8522363873735304)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(x'4f7d')) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '-736779702' ORDER BY (NOT (((rt0.c4)+(rt0.c4)))) ASC  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE SUBSTR(t0.c0, rt0.c1) END ASC, (- (0.8522363873735304)) ASC);
SELECT ALL * FROM t0 CROSS JOIN rt0 ON '-736779702' WHERE (LIKELY(x'4f7d')) ORDER BY (NOT (((rt0.c4)+(rt0.c4)))) ASC  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END THEN (((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))) ELSE SUBSTR(t0.c0, rt0.c1) END ASC, (- (0.8522363873735304)) ASC;
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN t0 ON ABS(((t0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((('-916239992') ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN '' ELSE rt1.c0 END) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt1.c4 ELSE 0.4255408587531251 END)) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON ABS(((t0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((('-916239992') ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN '' ELSE rt1.c0 END) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt1.c4 ELSE 0.4255408587531251 END)) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (NULL))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN t0 ON ABS(((t0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((('-916239992') ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN '' ELSE rt1.c0 END) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt1.c4 ELSE 0.4255408587531251 END)) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON ABS(((t0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((('-916239992') ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN '' ELSE rt1.c0 END) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt1.c4 ELSE 0.4255408587531251 END)) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (NULL))  NULLS FIRST);
SELECT ALL * FROM rt1, v0 RIGHT OUTER JOIN t0 ON ABS(((t0.c0) NOTNULL)) RIGHT OUTER JOIN rt0 ON (((('-916239992') ISNULL)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN '' ELSE rt1.c0 END) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt1.c4 ELSE 0.4255408587531251 END)) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c2 END) AND (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON LOWER(CAST(rt0.c3 AS BLOB)) WHERE (CAST(CAST(rt0.c4 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS REAL) AS REAL)) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON LOWER(CAST(rt0.c3 AS BLOB)));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON LOWER(CAST(rt0.c3 AS BLOB)) WHERE (CAST(CAST(rt0.c4 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c4 AS REAL) AS REAL)) IS TRUE)  as count FROM v0, rt1 RIGHT OUTER JOIN rt0 ON LOWER(CAST(rt0.c3 AS BLOB)));
SELECT COUNT(*) FROM v0, rt1 RIGHT OUTER JOIN rt0 ON LOWER(CAST(rt0.c3 AS BLOB)) WHERE (CAST(CAST(rt0.c4 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)%(rt0.c1)) AS NUMERIC) INNER JOIN t0 ON CAST((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))) AS TEXT) WHERE ((((((rt0.c4, rt1.c3, rt0.c0))<=((rt0.c2, rt0.c4, rt1.c0)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c3 COLLATE RTRIM))) ORDER BY CASE NULL  WHEN 0Xfffffffffe78c2d8 THEN t0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt1.c3, rt0.c0))<=((rt0.c2, rt0.c4, rt1.c0)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)%(rt0.c1)) AS NUMERIC) INNER JOIN t0 ON CAST((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))) AS TEXT) ORDER BY CASE NULL  WHEN 0xfffffffffe78c2d8 THEN t0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)%(rt0.c1)) AS NUMERIC) INNER JOIN t0 ON CAST((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))) AS TEXT) WHERE ((((((rt0.c4, rt1.c3, rt0.c0))<=((rt0.c2, rt0.c4, rt1.c0)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c3 COLLATE RTRIM))) ORDER BY CASE NULL  WHEN 0Xfffffffffe78c2d8 THEN t0.c0 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4, rt1.c3, rt0.c0))<=((rt0.c2, rt0.c4, rt1.c0)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)%(rt0.c1)) AS NUMERIC) INNER JOIN t0 ON CAST((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))) AS TEXT) ORDER BY CASE NULL  WHEN 0xfffffffffe78c2d8 THEN t0.c0 END COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, rt0 RIGHT OUTER JOIN v0 ON CAST(((rt0.c3)%(rt0.c1)) AS NUMERIC) INNER JOIN t0 ON CAST((((rt1.c1)) NOT BETWEEN ((t0.c0)) AND ((rt1.c4))) AS TEXT) WHERE ((((((rt0.c4, rt1.c3, rt0.c0))<=((rt0.c2, rt0.c4, rt1.c0)))) BETWEEN (rt1.c3 COLLATE BINARY) AND (rt0.c3 COLLATE RTRIM))) ORDER BY CASE NULL  WHEN 0Xfffffffffe78c2d8 THEN t0.c0 END COLLATE BINARY;
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, rt0 ORDER BY (- (rt0.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 WHERE (((rt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (- (rt0.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM rt1, v0 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS TEXT)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, v0 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS TEXT)) IS TRUE)  as count FROM rt1, v0 ORDER BY rt1.c1 ASC);
SELECT * FROM rt1, v0 WHERE (CAST(rt1.c1 AS TEXT)) ORDER BY rt1.c1 ASC;
SELECT * FROM rt1 WHERE ((- (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c0 END)));
SELECT * FROM t0 FULL OUTER JOIN v0 ON (+ (CAST(rt1.c2 AS BLOB))) INNER JOIN rt1 ON '' WHERE ((+ (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ (CAST(rt1.c2 AS BLOB))) INNER JOIN rt1 ON '');
SELECT * FROM t0 FULL OUTER JOIN v0 ON (+ (CAST(rt1.c2 AS BLOB))) INNER JOIN rt1 ON '' WHERE ((+ (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (+ (CAST(rt1.c2 AS BLOB))) INNER JOIN rt1 ON '');
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((CASE -723380223  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN NULL THEN rt0.c2 END IN (rt1.c0 COLLATE BINARY))) ORDER BY ((((t0.c0)<=(rt0.c4))) BETWEEN (((rt0.c3) IS FALSE)) AND (CASE '-736779702'  WHEN rt1.c3 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE -723380223  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN NULL THEN rt0.c2 END IN (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY ((((t0.c0)<=(rt0.c4))) BETWEEN (((rt0.c3) IS FALSE)) AND (CASE '-736779702'  WHEN rt1.c3 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((CASE -723380223  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN NULL THEN rt0.c2 END IN (rt1.c0 COLLATE BINARY))) ORDER BY ((((t0.c0)<=(rt0.c4))) BETWEEN (((rt0.c3) IS FALSE)) AND (CASE '-736779702'  WHEN rt1.c3 THEN rt0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CASE -723380223  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN NULL THEN rt0.c2 END IN (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY ((((t0.c0)<=(rt0.c4))) BETWEEN (((rt0.c3) IS FALSE)) AND (CASE '-736779702'  WHEN rt1.c3 THEN rt0.c2 END)) ASC);
SELECT ALL COUNT(*) FROM rt0, rt1, t0, v0 WHERE ((CASE -723380223  WHEN rt1.c1 THEN t0.c0 WHEN rt0.c0 THEN rt1.c0 WHEN NULL THEN rt0.c2 END IN (rt1.c0 COLLATE BINARY))) ORDER BY ((((t0.c0)<=(rt0.c4))) BETWEEN (((rt0.c3) IS FALSE)) AND (CASE '-736779702'  WHEN rt1.c3 THEN rt0.c2 END)) ASC;
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (CAST(((rt1.c3)==(NULL)) AS NUMERIC)) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)=(NULL)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((CAST(rt1.c4 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (CAST(((rt1.c3)==(NULL)) AS NUMERIC)) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c3)=(NULL)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((CAST(rt1.c4 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE (CAST(((rt1.c3)==(NULL)) AS NUMERIC)) ORDER BY ((CAST(rt1.c4 AS BLOB)) NOT NULL);
SELECT COUNT(*) FROM t0, v0 WHERE (((((0.46962959711978414)+(t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.46962959711978414)+(t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((0.46962959711978414)+(t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((0.46962959711978414)+(t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((((0.46962959711978414)+(t0.c0)))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)));
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT ALL COUNT(*) FROM rt1, v0, t0, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS NUMERIC));
SELECT * FROM rt1 WHERE (((x'0e90') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'0e90') NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'0e90') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'0e90') NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((x'0e90') NOT NULL));
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON x'' WHERE (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (((t0.c0)AND(rt1.c3))) AND (((rt1.c0) ISNULL))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN v0 ON x'' ORDER BY ((rt1.c4) NOT BETWEEN (((t0.c0)AND(rt1.c3))) AND (((rt1.c0) ISNULL))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON x'' WHERE (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (((t0.c0)AND(rt1.c3))) AND (((rt1.c0) ISNULL))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN v0 ON x'' ORDER BY ((rt1.c4) NOT BETWEEN (((t0.c0)AND(rt1.c3))) AND (((rt1.c0) ISNULL))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN v0 ON x'' WHERE (((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c3)) COLLATE NOCASE) ORDER BY ((rt1.c4) NOT BETWEEN (((t0.c0)AND(rt1.c3))) AND (((rt1.c0) ISNULL))), CAST(CASE rt1.c2  WHEN rt1.c0 THEN t0.c0 WHEN v0.c0 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c3 END AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt1, v0, t0 CROSS JOIN rt0 ON ((((rt1.c2)+(rt1.c1))) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt0.c2 THEN '' END)) WHERE (((((rt1.c0)OR(CAST(rt0.c3 AS TEXT))))AND(((rt1.c2)OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(CAST(rt0.c3 AS TEXT))))AND(((rt1.c2)OR(rt1.c4))))) IS TRUE)  as count FROM rt1, v0, t0 CROSS JOIN rt0 ON ((((rt1.c2)+(rt1.c1))) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt0.c2 THEN '' END)));
SELECT COUNT(*) FROM rt1, v0, t0 CROSS JOIN rt0 ON ((((rt1.c2)+(rt1.c1))) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt0.c2 THEN '' END)) WHERE (((((rt1.c0)OR(CAST(rt0.c3 AS TEXT))))AND(((rt1.c2)OR(rt1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(CAST(rt0.c3 AS TEXT))))AND(((rt1.c2)OR(rt1.c4))))) IS TRUE)  as count FROM rt1, v0, t0 CROSS JOIN rt0 ON ((((rt1.c2)+(rt1.c1))) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt0.c2 THEN '' END)));
SELECT COUNT(*) FROM rt1, v0, t0 CROSS JOIN rt0 ON ((((rt1.c2)+(rt1.c1))) NOT BETWEEN ((- (rt0.c1))) AND (CASE WHEN rt0.c2 THEN '' END)) WHERE (((((rt1.c0)OR(CAST(rt0.c3 AS TEXT))))AND(((rt1.c2)OR(rt1.c4)))));
SELECT * FROM t0, rt0, rt1, v0 WHERE (TYPEOF((- (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((- (rt1.c0)))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (TYPEOF((- (rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((- (rt1.c0)))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (TYPEOF((- (rt1.c0))));
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '(^''FwpT*7')) AND ((t0.c0, t0.c0, t0.c0))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '(^''FwpT*7')) AND ((t0.c0, t0.c0, t0.c0))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '(^''FwpT*7')) AND ((t0.c0, t0.c0, t0.c0))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '(^''FwpT*7')) AND ((t0.c0, t0.c0, t0.c0))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, '(^''FwpT*7')) AND ((t0.c0, t0.c0, t0.c0))))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0 COLLATE BINARY)))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(TRIM(t0.c0))));
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY ((((rt0.c4) IS TRUE))==(CASE rt0.c4  WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 END)), (~ (rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c4) IS TRUE))=(CASE rt0.c4  WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 END)), (~ (rt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY ((((rt0.c4) IS TRUE))==(CASE rt0.c4  WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 END)), (~ (rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY ((((rt0.c4) IS TRUE))=(CASE rt0.c4  WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 END)), (~ (rt0.c1 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((- (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY ((((rt0.c4) IS TRUE))==(CASE rt0.c4  WHEN rt0.c0 THEN NULL WHEN rt0.c4 THEN NULL WHEN rt0.c2 THEN rt0.c2 END)), (~ (rt0.c1 COLLATE RTRIM))  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON CASE WHEN ((((rt0.c3)OR(t0.c0)))AND(rt0.c2)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c3 END ELSE ((rt1.c3)-(rt0.c1)) END LEFT OUTER JOIN v0 ON (((((rt1.c3)OR(rt1.c3)))OR(rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))AND(v0.c0)))) WHERE ((~ (json(0.1427574705696637)))) ORDER BY CASE WHEN (((rt1.c0))<(('-652503016'))) THEN 1.62116254E9 WHEN CAST(t0.c0 AS INTEGER) THEN ((v0.c0) BETWEEN (rt1.c4) AND (rt0.c4)) WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN ((rt1.c4) NOTNULL) THEN (((rt0.c1, rt1.c3, '1447729098'))<((rt1.c4, rt0.c4, rt1.c4))) WHEN (t0.c0 IN ()) THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (json(0.1427574705696637)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON CASE WHEN ((((rt0.c3)OR(t0.c0)))AND(rt0.c2)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c3 END ELSE ((rt1.c3)-(rt0.c1)) END LEFT OUTER JOIN v0 ON (((((rt1.c3)OR(rt1.c3)))OR(rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))AND(v0.c0)))) ORDER BY CASE WHEN (((rt1.c0))<(('-652503016'))) THEN 1.62116254E9 WHEN CAST(t0.c0 AS INTEGER) THEN ((v0.c0) BETWEEN (rt1.c4) AND (rt0.c4)) WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN ((rt1.c4) NOTNULL) THEN (((rt0.c1, rt1.c3, '1447729098'))<((rt1.c4, rt0.c4, rt1.c4))) WHEN (t0.c0 IN ()) THEN ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON CASE WHEN ((((rt0.c3)OR(t0.c0)))AND(rt0.c2)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c3 END ELSE ((rt1.c3)-(rt0.c1)) END LEFT OUTER JOIN v0 ON (((((rt1.c3)OR(rt1.c3)))OR(rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))AND(v0.c0)))) WHERE ((~ (json(0.1427574705696637)))) ORDER BY CASE WHEN (((rt1.c0))<(('-652503016'))) THEN 1.62116254E9 WHEN CAST(t0.c0 AS INTEGER) THEN ((v0.c0) BETWEEN (rt1.c4) AND (rt0.c4)) WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN ((rt1.c4) NOTNULL) THEN (((rt0.c1, rt1.c3, '1447729098'))<((rt1.c4, rt0.c4, rt1.c4))) WHEN (t0.c0 IN ()) THEN ((rt0.c0) NOTNULL) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (json(0.1427574705696637)))) IS TRUE)  as count FROM rt1, rt0 FULL OUTER JOIN t0 ON CASE WHEN ((((rt0.c3)OR(t0.c0)))AND(rt0.c2)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c3 END ELSE ((rt1.c3)-(rt0.c1)) END LEFT OUTER JOIN v0 ON (((((rt1.c3)OR(rt1.c3)))OR(rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))AND(v0.c0)))) ORDER BY CASE WHEN (((rt1.c0))<(('-652503016'))) THEN 1.62116254E9 WHEN CAST(t0.c0 AS INTEGER) THEN ((v0.c0) BETWEEN (rt1.c4) AND (rt0.c4)) WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN ((rt1.c4) NOTNULL) THEN (((rt0.c1, rt1.c3, '1447729098'))<((rt1.c4, rt0.c4, rt1.c4))) WHEN (t0.c0 IN ()) THEN ((rt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt1, rt0 FULL OUTER JOIN t0 ON CASE WHEN ((((rt0.c3)OR(t0.c0)))AND(rt0.c2)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c3 ELSE rt0.c3 END ELSE ((rt1.c3)-(rt0.c1)) END LEFT OUTER JOIN v0 ON (((((rt1.c3)OR(rt1.c3)))OR(rt0.c0)) IN (((((t0.c0)OR(rt0.c2)))AND(v0.c0)))) WHERE ((~ (json(0.1427574705696637)))) ORDER BY CASE WHEN (((rt1.c0))<(('-652503016'))) THEN 1.62116254E9 WHEN CAST(t0.c0 AS INTEGER) THEN ((v0.c0) BETWEEN (rt1.c4) AND (rt0.c4)) WHEN ((rt1.c4) NOT BETWEEN (t0.c0) AND (rt0.c0)) THEN (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c4))) WHEN ((rt1.c4) NOTNULL) THEN (((rt0.c1, rt1.c3, '1447729098'))<((rt1.c4, rt0.c4, rt1.c4))) WHEN (t0.c0 IN ()) THEN ((rt0.c0) NOTNULL) END;
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((v0.c0)<(0.9316884148244521)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((((~ (v0.c0))))<((((v0.c0) ISNULL)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) IS TRUE), ((((v0.c0 COLLATE BINARY)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))OR(((v0.c0)<(0.9316884148244521)))))OR(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((~ (v0.c0))))<((((v0.c0) ISNULL)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) IS TRUE), ((((v0.c0 COLLATE BINARY)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((v0.c0)<(0.9316884148244521)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((((~ (v0.c0))))<((((v0.c0) ISNULL)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) IS TRUE), ((((v0.c0 COLLATE BINARY)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) IS TRUE))OR(((v0.c0)<(0.9316884148244521)))))OR(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((~ (v0.c0))))<((((v0.c0) ISNULL)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) IS TRUE), ((((v0.c0 COLLATE BINARY)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0) IS TRUE))OR(((v0.c0)<(0.9316884148244521)))))OR(((v0.c0)<<(v0.c0))))) ORDER BY ((((~ (v0.c0))))<((((v0.c0) ISNULL)))) DESC, ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE NULL END) IS TRUE), ((((v0.c0 COLLATE BINARY)OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1 WHERE (CAST(((x'') NOT BETWEEN (v0.c0) AND (rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'') NOT BETWEEN (v0.c0) AND (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1 WHERE (CAST(((x'') NOT BETWEEN (v0.c0) AND (rt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((x'') NOT BETWEEN (v0.c0) AND (rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, v0, t0, rt1 WHERE (CAST(((x'') NOT BETWEEN (v0.c0) AND (rt1.c0)) AS NUMERIC));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((x'')%(rt1.c1)))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN ('-736779702') AND (((v0.c0)<=(rt0.c4)))) WHERE ((((v0.c0, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), LIKELIHOOD(DISTINCT v0.c0, 0.36003465310527494), 1.103491106E9)) AND ((((rt1.c2)GLOB(rt1.c0)), ((rt1.c0)LIKE(rt1.c4)), ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c4 END))<((((rt0.c2)/(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), LIKELIHOOD(DISTINCT v0.c0, 0.36003465310527494), 1.103491106E9)) AND ((((rt1.c2)GLOB(rt1.c0)), ((rt1.c0)LIKE(rt1.c4)), ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((x'')%(rt1.c1)))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN ('-736779702') AND (((v0.c0)<=(rt0.c4)))) ORDER BY (((CASE rt1.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c4 END))<((((rt0.c2)/(rt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((x'')%(rt1.c1)))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN ('-736779702') AND (((v0.c0)<=(rt0.c4)))) WHERE ((((v0.c0, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), LIKELIHOOD(DISTINCT v0.c0, 0.36003465310527494), 1.103491106E9)) AND ((((rt1.c2)GLOB(rt1.c0)), ((rt1.c0)LIKE(rt1.c4)), ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c4 END))<((((rt0.c2)/(rt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), LIKELIHOOD(DISTINCT v0.c0, 0.36003465310527494), 1.103491106E9)) AND ((((rt1.c2)GLOB(rt1.c0)), ((rt1.c0)LIKE(rt1.c4)), ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((x'')%(rt1.c1)))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN ('-736779702') AND (((v0.c0)<=(rt0.c4)))) ORDER BY (((CASE rt1.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c4 END))<((((rt0.c2)/(rt1.c0)))))  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt1 ON (NOT (((x'')%(rt1.c1)))) RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c1 AS BLOB)) BETWEEN ('-736779702') AND (((v0.c0)<=(rt0.c4)))) WHERE ((((v0.c0, rt1.c0, rt0.c0)) NOT BETWEEN ((((rt1.c0) ISNULL), LIKELIHOOD(DISTINCT v0.c0, 0.36003465310527494), 1.103491106E9)) AND ((((rt1.c2)GLOB(rt1.c0)), ((rt1.c0)LIKE(rt1.c4)), ((rt1.c4) NOT BETWEEN (rt1.c1) AND (rt0.c1)))))) ORDER BY (((CASE rt1.c0  WHEN rt0.c1 THEN NULL ELSE rt0.c4 END))<((((rt0.c2)/(rt1.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((((((((t0.c0)OR(')%>z*ck,i')))OR(0.6248043769955173)))OR(v0.c0)))AND(118378721)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((t0.c0)OR(')%>z*ck,i')))OR(0.6248043769955173)))OR(v0.c0)))AND(118378721)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((((((((t0.c0)OR(')%>z*ck,i')))OR(0.6248043769955173)))OR(v0.c0)))AND(118378721)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((t0.c0)OR(')%>z*ck,i')))OR(0.6248043769955173)))OR(v0.c0)))AND(118378721)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c0 COLLATE BINARY) NOTNULL)) ORDER BY ((((((((t0.c0)OR(')%>z*ck,i')))OR(0.6248043769955173)))OR(v0.c0)))AND(118378721)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON json_quote(t0.c0 COLLATE BINARY) INNER JOIN rt0 ON '5e' CROSS JOIN t0 ON (((~ (rt1.c0)))&(((rt1.c0)>>(rt0.c0)))) WHERE ((- ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON json_quote(t0.c0 COLLATE BINARY) INNER JOIN rt0 ON '5e' CROSS JOIN t0 ON (((~ (rt1.c0)))&(((rt1.c0)>>(rt0.c0)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN v0 ON json_quote(t0.c0 COLLATE BINARY) INNER JOIN rt0 ON '5e' CROSS JOIN t0 ON (((~ (rt1.c0)))&(((rt1.c0)>>(rt0.c0)))) WHERE ((- ((NOT (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c2))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN v0 ON json_quote(t0.c0 COLLATE BINARY) INNER JOIN rt0 ON '5e' CROSS JOIN t0 ON (((~ (rt1.c0)))&(((rt1.c0)>>(rt0.c0)))));
SELECT * FROM t0, v0 WHERE ((((SQLITE_VERSION(), '', t0.c0 COLLATE NOCASE))<=((CAST(v0.c0 AS TEXT), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION(), '', t0.c0 COLLATE NOCASE))<=((CAST(v0.c0 AS TEXT), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((SQLITE_VERSION(), '', t0.c0 COLLATE NOCASE))<=((CAST(v0.c0 AS TEXT), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((SQLITE_VERSION(), '', t0.c0 COLLATE NOCASE))<=((CAST(v0.c0 AS TEXT), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((SQLITE_VERSION(), '', t0.c0 COLLATE NOCASE))<=((CAST(v0.c0 AS TEXT), (t0.c0 IN (t0.c0)), CAST(t0.c0 AS REAL)))));
SELECT * FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((- (t0.c0)))))OR(((t0.c0)||(2001506412)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))AND((- (t0.c0)))))OR(((t0.c0)||(2001506412))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((- (t0.c0)))))OR(((t0.c0)||(2001506412)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS NUMERIC))AND((- (t0.c0)))))OR(((t0.c0)||(2001506412))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((CAST(v0.c0 AS NUMERIC))AND((- (t0.c0)))))OR(((t0.c0)||(2001506412)))));
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((('TB3o' IN ()))<=((((('')OR(t0.c0)))OR(rt1.c3)))) WHERE (((((rt1.c2)GLOB(t0.c0))) BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) AND (CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY ((LIKELY(rt1.c3))IS NOT(((rt0.c0)&(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(t0.c0))) BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) AND (CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((('TB3o' IN ()))<=((((('')OR(t0.c0)))OR(rt1.c3)))) ORDER BY ((LIKELY(rt1.c3))IS NOT(((rt0.c0)&(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((('TB3o' IN ()))<=((((('')OR(t0.c0)))OR(rt1.c3)))) WHERE (((((rt1.c2)GLOB(t0.c0))) BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) AND (CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY ((LIKELY(rt1.c3))IS NOT(((rt0.c0)&(rt1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)GLOB(t0.c0))) BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) AND (CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((('TB3o' IN ()))<=((((('')OR(t0.c0)))OR(rt1.c3)))) ORDER BY ((LIKELY(rt1.c3))IS NOT(((rt0.c0)&(rt1.c4)))) ASC  NULLS FIRST);
SELECT * FROM rt1, rt0 LEFT OUTER JOIN t0 ON ((('TB3o' IN ()))<=((((('')OR(t0.c0)))OR(rt1.c3)))) WHERE (((((rt1.c2)GLOB(t0.c0))) BETWEEN (((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) AND (CASE rt1.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END))) ORDER BY ((LIKELY(rt1.c3))IS NOT(((rt0.c0)&(rt1.c4)))) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE ((((((- (rt1.c0)))OR((rt1.c1 IN ()))))OR(((rt1.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt1.c0)))OR((rt1.c1 IN ()))))OR(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE ((((((- (rt1.c0)))OR((rt1.c1 IN ()))))OR(((rt1.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt1.c0)))OR((rt1.c1 IN ()))))OR(((rt1.c4) NOT NULL)))) IS TRUE)  as count FROM v0, rt1, rt0, t0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE ((((((- (rt1.c0)))OR((rt1.c1 IN ()))))OR(((rt1.c4) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((('9g')/(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('9g')/(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((('9g')/(rt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('9g')/(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0, t0, rt1 WHERE ((((('9g')/(rt0.c0))) ISNULL));
SELECT * FROM t0, rt0, rt1, v0 WHERE ((((rt0.c2 COLLATE RTRIM, (rt1.c3 IN ()), (rt1.c4 IN ())))<((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, x'', ((rt1.c4) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, (rt1.c3 IN ()), (rt1.c4 IN ())))<((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, x'', ((rt1.c4) IS TRUE))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE ((((rt0.c2 COLLATE RTRIM, (rt1.c3 IN ()), (rt1.c4 IN ())))<((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, x'', ((rt1.c4) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE RTRIM, (rt1.c3 IN ()), (rt1.c4 IN ())))<((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, x'', ((rt1.c4) IS TRUE))))) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE ((((rt0.c2 COLLATE RTRIM, (rt1.c3 IN ()), (rt1.c4 IN ())))<((CASE t0.c0  WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c0 END, x'', ((rt1.c4) IS TRUE)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0)OR(t0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0)OR(t0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((t0.c0)OR(t0.c0)))OR(v0.c0))) IS TRUE)) ORDER BY v0.c0;
SELECT ALL * FROM t0, v0 WHERE ((((v0.c0 IN (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c0 IN (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((((v0.c0 IN (t0.c0))) ISNULL));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c0)))AND(t0.c0)))AND(v0.c0))) BETWEEN (NULL) AND ((((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))))) FULL OUTER JOIN rt1 ON (~ ('774326109')) WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN rt1.c3 WHEN (rt1.c1 IN ()) THEN (((rt1.c0))<>((rt1.c2))) WHEN CASE rt1.c3  WHEN 1227704432 THEN v0.c0 END THEN ((v0.c0) ISNULL) ELSE rt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOTNULL) THEN rt1.c3 WHEN (rt1.c1 IN ()) THEN (((rt1.c0))<>((rt1.c2))) WHEN CASE rt1.c3  WHEN 1227704432 THEN v0.c0 END THEN ((v0.c0) ISNULL) ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c0)))AND(t0.c0)))AND(v0.c0))) BETWEEN (NULL) AND ((((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))))) FULL OUTER JOIN rt1 ON (~ ('774326109')));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON ((((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c0)))AND(t0.c0)))AND(v0.c0))) BETWEEN (NULL) AND ((((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))))) FULL OUTER JOIN rt1 ON (~ ('774326109')) WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN rt1.c3 WHEN (rt1.c1 IN ()) THEN (((rt1.c0))<>((rt1.c2))) WHEN CASE rt1.c3  WHEN 1227704432 THEN v0.c0 END THEN ((v0.c0) ISNULL) ELSE rt1.c3 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) NOTNULL) THEN rt1.c3 WHEN (rt1.c1 IN ()) THEN (((rt1.c0))<>((rt1.c2))) WHEN CASE rt1.c3  WHEN 1227704432 THEN v0.c0 END THEN ((v0.c0) ISNULL) ELSE rt1.c3 COLLATE BINARY END) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((((((((((rt1.c4)OR(rt1.c3)))AND(rt1.c0)))AND(t0.c0)))AND(v0.c0))) BETWEEN (NULL) AND ((((rt1.c0)) BETWEEN ((t0.c0)) AND ((rt1.c0))))) FULL OUTER JOIN rt1 ON (~ ('774326109')));
SELECT COUNT(*) FROM rt1, v0 WHERE (ABS(rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt1.c3 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (ABS(rt1.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt1.c3 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, v0);
SELECT COUNT(*) FROM rt1, v0 WHERE (ABS(rt1.c3 COLLATE NOCASE));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON ((((((rt1.c1))>((rt1.c0)))))==((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0))))) WHERE (UPPER(((rt1.c2)&(NULL))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c2)&(NULL)))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN v0 ON ((((((rt1.c1))>((rt1.c0)))))=((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0))))));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON ((((((rt1.c1))>((rt1.c0)))))==((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0))))) WHERE (UPPER(((rt1.c2)&(NULL))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c2)&(NULL)))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN v0 ON ((((((rt1.c1))>((rt1.c0)))))=((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0))))));
SELECT COUNT(*) FROM rt1, t0 CROSS JOIN v0 ON ((((((rt1.c1))>((rt1.c0)))))==((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c4)))AND(rt1.c0))))) WHERE (UPPER(((rt1.c2)&(NULL))));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON UNLIKELY(load_extension(rt1.c1)) WHERE (((((((0.5652897109765094)<<(rt1.c1)))OR(t0.c0)))AND((rt1.c2 IN ())))) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END AS REAL), ((ROUND(t0.c0, rt1.c3)) NOT BETWEEN (TRIM(rt1.c0, rt1.c4)) AND (((x'') ISNULL)))  NULLS LAST, CASE (- (NULL))  WHEN ((rt1.c3) IS FALSE) THEN TRIM(DISTINCT t0.c0) ELSE rt1.c4 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5652897109765094)<<(rt1.c1)))OR(t0.c0)))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON UNLIKELY(load_extension(rt1.c1)) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END AS REAL), ((ROUND(t0.c0, rt1.c3)) NOT BETWEEN (TRIM(rt1.c0, rt1.c4)) AND (((x'') ISNULL)))  NULLS LAST, CASE (- (NULL))  WHEN ((rt1.c3) IS FALSE) THEN TRIM(DISTINCT t0.c0) ELSE rt1.c4 END DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON UNLIKELY(load_extension(rt1.c1)) WHERE (((((((0.5652897109765094)<<(rt1.c1)))OR(t0.c0)))AND((rt1.c2 IN ())))) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END AS REAL), ((ROUND(t0.c0, rt1.c3)) NOT BETWEEN (TRIM(rt1.c0, rt1.c4)) AND (((x'') ISNULL)))  NULLS LAST, CASE (- (NULL))  WHEN ((rt1.c3) IS FALSE) THEN TRIM(DISTINCT t0.c0) ELSE rt1.c4 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0.5652897109765094)<<(rt1.c1)))OR(t0.c0)))AND((rt1.c2 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON UNLIKELY(load_extension(rt1.c1)) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END AS REAL), ((ROUND(t0.c0, rt1.c3)) NOT BETWEEN (TRIM(rt1.c0, rt1.c4)) AND (((x'') ISNULL)))  NULLS LAST, CASE (- (NULL))  WHEN ((rt1.c3) IS FALSE) THEN TRIM(DISTINCT t0.c0) ELSE rt1.c4 END DESC  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON UNLIKELY(load_extension(rt1.c1)) WHERE (((((((0.5652897109765094)<<(rt1.c1)))OR(t0.c0)))AND((rt1.c2 IN ())))) ORDER BY CAST(CASE rt1.c0  WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 ELSE t0.c0 END AS REAL), ((ROUND(t0.c0, rt1.c3)) NOT BETWEEN (TRIM(rt1.c0, rt1.c4)) AND (((x'') ISNULL)))  NULLS LAST, CASE (- (NULL))  WHEN ((rt1.c3) IS FALSE) THEN TRIM(DISTINCT t0.c0) ELSE rt1.c4 END DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2) IS TRUE) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE (((rt1.c4, '1447729098', rt1.c4))>=((0X196e322f, rt1.c0, rt1.c0)))  WHEN CAST(rt1.c4 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN ABS(DISTINCT rt1.c0) THEN CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END WHEN ((0.10646408227176352) ISNULL) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) WHEN ((rt1.c2)|(rt1.c4)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c3)+(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c4, '1447729098', rt1.c4))>=((0X196e322f, rt1.c0, rt1.c0)))  WHEN CAST(rt1.c4 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN ABS(DISTINCT rt1.c0) THEN CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END WHEN ((0.10646408227176352) ISNULL) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) WHEN ((rt1.c2)|(rt1.c4)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c3)+(rt1.c1)) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE (((rt1.c4, '1447729098', rt1.c4))>=((0X196e322f, rt1.c0, rt1.c0)))  WHEN CAST(rt1.c4 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN ABS(DISTINCT rt1.c0) THEN CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END WHEN ((0.10646408227176352) ISNULL) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) WHEN ((rt1.c2)|(rt1.c4)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c3)+(rt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((rt1.c4, '1447729098', rt1.c4))>=((0X196e322f, rt1.c0, rt1.c0)))  WHEN CAST(rt1.c4 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN ABS(DISTINCT rt1.c0) THEN CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END WHEN ((0.10646408227176352) ISNULL) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) WHEN ((rt1.c2)|(rt1.c4)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c3)+(rt1.c1)) END) IS TRUE)  as count FROM rt1, t0);
SELECT ALL COUNT(*) FROM rt1, t0 WHERE (CASE (((rt1.c4, '1447729098', rt1.c4))>=((0X196e322f, rt1.c0, rt1.c0)))  WHEN CAST(rt1.c4 AS REAL) THEN rt1.c3 COLLATE NOCASE WHEN ABS(DISTINCT rt1.c0) THEN CASE WHEN t0.c0 THEN rt1.c3 WHEN t0.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END WHEN (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c0))) THEN CASE t0.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN t0.c0 WHEN rt1.c1 THEN rt1.c0 END WHEN ((0.10646408227176352) ISNULL) THEN (((rt1.c3)) NOT BETWEEN ((t0.c0)) AND ((rt1.c0))) WHEN ((rt1.c2)|(rt1.c4)) THEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE ((rt1.c3)+(rt1.c1)) END);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c3));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c1, rt0.c3)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c3));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT rt0.c1, rt0.c3)) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (NULLIF(DISTINCT rt0.c1, rt0.c3));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), NULL, (- (v0.c0)), (~ (v0.c0)))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0) ISNULL), NULL, (- (v0.c0)), (~ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), NULL, (- (v0.c0)), (~ (v0.c0)))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((v0.c0) ISNULL), NULL, (- (v0.c0)), (~ (v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (CAST(v0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0) ISNULL), NULL, (- (v0.c0)), (~ (v0.c0)))) ORDER BY ((((v0.c0)LIKE(v0.c0))) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (CAST(v0.c0 AS REAL)));
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c0) NOTNULL))<((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c0) NOTNULL))<((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))<((NOT (t0.c0))))) IS TRUE)  as count FROM v0, t0, rt0);
SELECT * FROM v0, t0, rt0 WHERE (((((rt0.c0) NOTNULL))<((NOT (t0.c0)))));
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (DATE((- (rt0.c2)), (((rt1.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, 'RGh㌏bF', rt1.c4, rt0.c0)) AND ((NULL, rt1.c4, rt0.c0, rt0.c3, rt1.c2))), '83975470')) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE((- (rt0.c2)), (((rt1.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, 'RGh㌏bF', rt1.c4, rt0.c0)) AND ((NULL, rt1.c4, rt0.c0, rt0.c3, rt1.c2))), '83975470')) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (DATE((- (rt0.c2)), (((rt1.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, 'RGh㌏bF', rt1.c4, rt0.c0)) AND ((NULL, rt1.c4, rt0.c0, rt0.c3, rt1.c2))), '83975470')) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((DATE((- (rt0.c2)), (((rt1.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, 'RGh㌏bF', rt1.c4, rt0.c0)) AND ((NULL, rt1.c4, rt0.c0, rt0.c3, rt1.c2))), '83975470')) IS TRUE)  as count FROM rt1, rt0, t0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (DATE((- (rt0.c2)), (((rt1.c1, rt1.c2, rt0.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, 'RGh㌏bF', rt1.c4, rt0.c0)) AND ((NULL, rt1.c4, rt0.c0, rt0.c3, rt1.c2))), '83975470')) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (rt0.c3);
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (rt0.c4) ORDER BY (((((rt1.c4, rt0.c0, rt0.c1))<((t0.c0, v0.c0, rt0.c2))))<=(TRIM(rt1.c1, v0.c0))), (((((rt1.c1, t0.c0, x'', v0.c0, rt0.c0))==((NULL, rt0.c1, rt1.c2, rt1.c4, 0X5142c7df)))) IS FALSE), ((rt1.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (((((rt1.c4, rt0.c0, rt0.c1))<((t0.c0, v0.c0, rt0.c2))))<=(TRIM(rt1.c1, v0.c0))), (((((rt1.c1, t0.c0, x'', v0.c0, rt0.c0))=((NULL, rt0.c1, rt1.c2, rt1.c4, 0X5142c7df)))) IS FALSE), ((rt1.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (rt0.c4) ORDER BY (((((rt1.c4, rt0.c0, rt0.c1))<((t0.c0, v0.c0, rt0.c2))))<=(TRIM(rt1.c1, v0.c0))), (((((rt1.c1, t0.c0, x'', v0.c0, rt0.c0))==((NULL, rt0.c1, rt1.c2, rt1.c4, 0X5142c7df)))) IS FALSE), ((rt1.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM v0, rt1, t0, rt0 ORDER BY (((((rt1.c4, rt0.c0, rt0.c1))<((t0.c0, v0.c0, rt0.c2))))<=(TRIM(rt1.c1, v0.c0))), (((((rt1.c1, t0.c0, x'', v0.c0, rt0.c0))=((NULL, rt0.c1, rt1.c2, rt1.c4, 0X5142c7df)))) IS FALSE), ((rt1.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt1, t0, rt0 WHERE (rt0.c4) ORDER BY (((((rt1.c4, rt0.c0, rt0.c1))<((t0.c0, v0.c0, rt0.c2))))<=(TRIM(rt1.c1, v0.c0))), (((((rt1.c1, t0.c0, x'', v0.c0, rt0.c0))==((NULL, rt0.c1, rt1.c2, rt1.c4, 0X5142c7df)))) IS FALSE), ((rt1.c3) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c4 END) AND (CAST(rt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN t0 ON json_valid(((rt0.c3) ISNULL)) WHERE (((((rt1.c1)<=(rt1.c4)))||(2.146263599E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<=(rt1.c4)))||(2.146263599E9))) IS TRUE)  as count FROM v0, rt0, rt1 LEFT OUTER JOIN t0 ON json_valid(((rt0.c3) ISNULL)));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN t0 ON json_valid(((rt0.c3) ISNULL)) WHERE (((((rt1.c1)<=(rt1.c4)))||(2.146263599E9)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<=(rt1.c4)))||(2.146263599E9))) IS TRUE)  as count FROM v0, rt0, rt1 LEFT OUTER JOIN t0 ON json_valid(((rt0.c3) ISNULL)));
SELECT ALL COUNT(*) FROM v0, rt0, rt1 LEFT OUTER JOIN t0 ON json_valid(((rt0.c3) ISNULL)) WHERE (((((rt1.c1)<=(rt1.c4)))||(2.146263599E9)));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0, rt1);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0, rt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))LIKE('-723380223')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0)))LIKE('-723380223'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))LIKE('-723380223')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0)))LIKE('-723380223'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0)))LIKE('-723380223')));
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (((((CAST(x'' AS INTEGER))AND(0.8329958243557108)))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS INTEGER))AND(0.8329958243557108)))AND((+ (v0.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (((((CAST(x'' AS INTEGER))AND(0.8329958243557108)))AND((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS INTEGER))AND(0.8329958243557108)))AND((+ (v0.c0))))) IS TRUE)  as count FROM t0, rt0 NATURAL JOIN v0);
SELECT ALL * FROM t0, rt0 NATURAL JOIN v0 WHERE (((((CAST(x'' AS INTEGER))AND(0.8329958243557108)))AND((+ (v0.c0)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0) IS TRUE)) ORDER BY LOWER(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0) IS TRUE)) ORDER BY LOWER(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0) IS TRUE)) ORDER BY LOWER(((((rt1.c1)AND(rt1.c0)))OR(rt1.c2))) ASC  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((CAST('-1172985520' AS NUMERIC)) IS FALSE)) ORDER BY CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('-1172985520' AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) ASC);
SELECT * FROM v0, t0 WHERE (((CAST('-1172985520' AS NUMERIC)) IS FALSE)) ORDER BY CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('-1172985520' AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) ASC);
SELECT * FROM v0, t0 WHERE (((CAST('-1172985520' AS NUMERIC)) IS FALSE)) ORDER BY CAST(((v0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS NUMERIC) ASC;
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((NOT (t0.c0))) NOTNULL));
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((rt0.c2)AND('5E')))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))>=((LOWER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND('5E')))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))>=((LOWER(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((rt0.c2)AND('5E')))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))>=((LOWER(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND('5E')))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))>=((LOWER(rt0.c3))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((((((((((rt0.c2)AND('5E')))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))))>=((LOWER(rt0.c3)))));
SELECT ALL * FROM rt0, v0, t0 WHERE ((((- (v0.c0)))IS(0.8053423594838157))) ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS(0.8053423594838157))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0, t0 WHERE ((((- (v0.c0)))IS(0.8053423594838157))) ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS(0.8053423594838157))) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0, t0 WHERE ((((- (v0.c0)))IS(0.8053423594838157))) ORDER BY CASE WHEN ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, v0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) COLLATE RTRIM WHERE (CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, v0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, t0, v0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) COLLATE RTRIM WHERE (CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, v0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, t0, v0 CROSS JOIN rt0 ON ((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c2)) COLLATE RTRIM WHERE (CAST(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (((((((((((NULL)AND(t0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c0))) NOT BETWEEN (json_patch(t0.c0, rt0.c3)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(t0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c0))) NOT BETWEEN (json_patch(t0.c0, rt0.c3)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (((((((((((NULL)AND(t0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c0))) NOT BETWEEN (json_patch(t0.c0, rt0.c3)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((((NULL)AND(t0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c0))) NOT BETWEEN (json_patch(t0.c0, rt0.c3)) AND (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0, rt0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM t0, v0, rt0 WHERE (((((((((((NULL)AND(t0.c0)))AND(rt0.c4)))AND(v0.c0)))OR(rt0.c0))) NOT BETWEEN (json_patch(t0.c0, rt0.c3)) AND (CAST(rt0.c1 AS NUMERIC)))) ORDER BY t0.c0;
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (TRIM(rt1.c1) COLLATE RTRIM) ORDER BY CAST(((0X22ba52)<(rt0.c4)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY CAST(((0X22ba52)<(rt0.c4)) AS TEXT));
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (TRIM(rt1.c1) COLLATE RTRIM) ORDER BY CAST(((0X22ba52)<(rt0.c4)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((TRIM(rt1.c1) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY CAST(((0X22ba52)<(rt0.c4)) AS TEXT));
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (TRIM(rt1.c1) COLLATE RTRIM) ORDER BY CAST(((0X22ba52)<(rt0.c4)) AS TEXT);
SELECT * FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON (((((rt1.c4)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE (((rt1.c2 COLLATE BINARY)>=((((rt0.c2))>((rt1.c1)))))) ORDER BY ((((CASE x''  WHEN rt1.c3 THEN rt1.c4 END)OR(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)))))OR(CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)>=((((rt0.c2))>((rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON (((((rt1.c4)AND(rt0.c0)))AND(rt0.c1)) IN ()) ORDER BY ((((CASE x''  WHEN rt1.c3 THEN rt1.c4 END)OR(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)))))OR(CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT * FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON (((((rt1.c4)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE (((rt1.c2 COLLATE BINARY)>=((((rt0.c2))>((rt1.c1)))))) ORDER BY ((((CASE x''  WHEN rt1.c3 THEN rt1.c4 END)OR(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)))))OR(CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)>=((((rt0.c2))>((rt1.c1)))))) IS TRUE)  as count FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON (((((rt1.c4)AND(rt0.c0)))AND(rt0.c1)) IN ()) ORDER BY ((((CASE x''  WHEN rt1.c3 THEN rt1.c4 END)OR(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)))))OR(CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS LAST);
SELECT * FROM rt1, v0, t0 LEFT OUTER JOIN rt0 ON (((((rt1.c4)AND(rt0.c0)))AND(rt0.c1)) IN ()) WHERE (((rt1.c2 COLLATE BINARY)>=((((rt0.c2))>((rt1.c1)))))) ORDER BY ((((CASE x''  WHEN rt1.c3 THEN rt1.c4 END)OR(((rt1.c1) BETWEEN (rt0.c4) AND (rt1.c1)))))OR(CASE WHEN rt1.c4 THEN rt0.c3 ELSE rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('QZ') ORDER BY CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN MIN(rt1.c3, rt1.c3) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c4)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (('QZ') IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN MIN(rt1.c3, rt1.c3) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c4)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt1 WHERE ('QZ') ORDER BY CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN MIN(rt1.c3, rt1.c3) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c4)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END;
SELECT SUM(count) FROM (SELECT (('QZ') IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN MIN(rt1.c3, rt1.c3) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c4)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM rt1 WHERE ('QZ') ORDER BY CASE WHEN ((rt1.c1) BETWEEN (rt1.c3) AND (rt1.c1)) THEN ((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c4)) WHEN LIKELY(DISTINCT rt1.c2) THEN MIN(rt1.c3, rt1.c3) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c4)) THEN CASE rt1.c1  WHEN NULL THEN rt1.c3 END ELSE rt1.c4 COLLATE NOCASE END;
SELECT ALL * FROM v0, rt0 WHERE ((- (((rt0.c3)||(rt0.c0))))) ORDER BY 2001506412  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)||(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 2001506412  NULLS FIRST);
SELECT ALL * FROM v0, rt0 WHERE ((- (((rt0.c3)||(rt0.c0))))) ORDER BY 2001506412  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c3)||(rt0.c0))))) IS TRUE)  as count FROM v0, rt0 ORDER BY 2001506412  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, rt1, t0 INNER JOIN v0 ON NULL WHERE (((((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2))) BETWEEN (((rt1.c0)LIKE(NULL))) AND ((('') NOTNULL)))) ORDER BY (((((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt0.c0, rt0.c1, rt0.c4, rt0.c4, 0.5428605393948593))=((0.5033917485206051, 0.08166880616131111, rt0.c0, rt0.c4, 0.5413497565507439))))))OR(CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c3 COLLATE NOCASE)))AND(((rt1.c3)LIKE(rt0.c0)))))OR(CAST(rt1.c0 AS REAL))))AND(((t0.c0)IS(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2))) BETWEEN (((rt1.c0)LIKE(NULL))) AND ((('') NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, t0 INNER JOIN v0 ON NULL ORDER BY (((((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt0.c0, rt0.c1, rt0.c4, rt0.c4, 0.5428605393948593))=((0.5033917485206051, 0.08166880616131111, rt0.c0, rt0.c4, 0.5413497565507439))))))OR(CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c3 COLLATE NOCASE)))AND(((rt1.c3)LIKE(rt0.c0)))))OR(CAST(rt1.c0 AS REAL))))AND(((t0.c0)IS(rt1.c2))))  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 INNER JOIN v0 ON NULL WHERE (((((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2))) BETWEEN (((rt1.c0)LIKE(NULL))) AND ((('') NOTNULL)))) ORDER BY (((((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt0.c0, rt0.c1, rt0.c4, rt0.c4, 0.5428605393948593))=((0.5033917485206051, 0.08166880616131111, rt0.c0, rt0.c4, 0.5413497565507439))))))OR(CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c3 COLLATE NOCASE)))AND(((rt1.c3)LIKE(rt0.c0)))))OR(CAST(rt1.c0 AS REAL))))AND(((t0.c0)IS(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2))) BETWEEN (((rt1.c0)LIKE(NULL))) AND ((('') NOTNULL)))) IS TRUE)  as count FROM rt0, rt1, t0 INNER JOIN v0 ON NULL ORDER BY (((((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt0.c0, rt0.c1, rt0.c4, rt0.c4, 0.5428605393948593))=((0.5033917485206051, 0.08166880616131111, rt0.c0, rt0.c4, 0.5413497565507439))))))OR(CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c3 COLLATE NOCASE)))AND(((rt1.c3)LIKE(rt0.c0)))))OR(CAST(rt1.c0 AS REAL))))AND(((t0.c0)IS(rt1.c2))))  NULLS FIRST);
SELECT * FROM rt0, rt1, t0 INNER JOIN v0 ON NULL WHERE (((((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c2))) BETWEEN (((rt1.c0)LIKE(NULL))) AND ((('') NOTNULL)))) ORDER BY (((((((((((((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))AND((((rt0.c0, rt0.c1, rt0.c4, rt0.c4, 0.5428605393948593))=((0.5033917485206051, 0.08166880616131111, rt0.c0, rt0.c4, 0.5413497565507439))))))OR(CASE WHEN rt1.c3 THEN rt0.c1 ELSE rt0.c0 END)))OR(rt0.c3 COLLATE NOCASE)))AND(((rt1.c3)LIKE(rt0.c0)))))OR(CAST(rt1.c0 AS REAL))))AND(((t0.c0)IS(rt1.c2))))  NULLS FIRST;
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (((v0.c0) ISNULL))) INNER JOIN v0 ON (((t0.c0)IS(rt1.c2)) IN (((((-2122129533)AND(rt1.c3)))OR(rt1.c0)))) WHERE ((+ (CAST(rt1.c1 AS NUMERIC)))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 WHEN v0.c0 THEN v0.c0 WHEN '0.5076265155837395' THEN rt1.c2 END)LIKE((+ (rt1.c4)))) ASC, rt1.c3 ASC, ((CASE WHEN v0.c0 THEN rt1.c1 END)>>((- (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (((v0.c0) ISNULL))) INNER JOIN v0 ON (((t0.c0)IS(rt1.c2)) IN (((((-2122129533)AND(rt1.c3)))OR(rt1.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 WHEN v0.c0 THEN v0.c0 WHEN '0.5076265155837395' THEN rt1.c2 END)LIKE((+ (rt1.c4)))) ASC, rt1.c3 ASC, ((CASE WHEN v0.c0 THEN rt1.c1 END)>>((- (rt1.c3)))));
SELECT * FROM rt1 LEFT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (((v0.c0) ISNULL))) INNER JOIN v0 ON (((t0.c0)IS(rt1.c2)) IN (((((-2122129533)AND(rt1.c3)))OR(rt1.c0)))) WHERE ((+ (CAST(rt1.c1 AS NUMERIC)))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 WHEN v0.c0 THEN v0.c0 WHEN '0.5076265155837395' THEN rt1.c2 END)LIKE((+ (rt1.c4)))) ASC, rt1.c3 ASC, ((CASE WHEN v0.c0 THEN rt1.c1 END)>>((- (rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt1.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (((v0.c0) ISNULL))) INNER JOIN v0 ON (((t0.c0)IS(rt1.c2)) IN (((((-2122129533)AND(rt1.c3)))OR(rt1.c0)))) ORDER BY ((CASE WHEN v0.c0 THEN rt1.c3 WHEN v0.c0 THEN v0.c0 WHEN '0.5076265155837395' THEN rt1.c2 END)LIKE((+ (rt1.c4)))) ASC, rt1.c3 ASC, ((CASE WHEN v0.c0 THEN rt1.c1 END)>>((- (rt1.c3)))));
SELECT ALL * FROM rt1, t0, rt0 RIGHT OUTER JOIN v0 ON (((((rt1.c0))<((rt0.c3))))IS(((rt1.c1)IS NOT(rt0.c2)))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt1, t0, rt0 RIGHT OUTER JOIN v0 ON (((((rt1.c0))<((rt0.c3))))IS(((rt1.c1)IS NOT(rt0.c2)))));
SELECT ALL * FROM rt1, t0, rt0 RIGHT OUTER JOIN v0 ON (((((rt1.c0))<((rt0.c3))))IS(((rt1.c1)IS NOT(rt0.c2)))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN rt0.c3 END AS BLOB)) IS TRUE)  as count FROM rt1, t0, rt0 RIGHT OUTER JOIN v0 ON (((((rt1.c0))<((rt0.c3))))IS(((rt1.c1)IS NOT(rt0.c2)))));
SELECT ALL * FROM rt1, t0, rt0 RIGHT OUTER JOIN v0 ON (((((rt1.c0))<((rt0.c3))))IS(((rt1.c1)IS NOT(rt0.c2)))) WHERE (CAST(CASE WHEN v0.c0 THEN rt0.c3 END AS BLOB));
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))||(x'aa21'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER))||(x'aa21'))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))||(x'aa21'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS INTEGER))||(x'aa21'))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 COLLATE BINARY))>=((((((t0.c0)AND(t0.c0)))AND(t0.c0)))))) ORDER BY ((CAST(t0.c0 AS INTEGER))||(x'aa21'))  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE (NULL) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE (NULL) ORDER BY rt1.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY rt1.c4  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE (NULL) ORDER BY rt1.c4  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0X5def08f4 THEN -1997848240 ELSE rt0.c1 END)OR((((rt0.c0))>((rt0.c1))))))AND(((rt0.c1)||(rt0.c0))))) ORDER BY (- (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN 0X5def08f4 THEN -1997848240 ELSE rt0.c1 END)OR((((rt0.c0))>((rt0.c1))))))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c2 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0X5def08f4 THEN -1997848240 ELSE rt0.c1 END)OR((((rt0.c0))>((rt0.c1))))))AND(((rt0.c1)||(rt0.c0))))) ORDER BY (- (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN 0X5def08f4 THEN -1997848240 ELSE rt0.c1 END)OR((((rt0.c0))>((rt0.c1))))))AND(((rt0.c1)||(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (- (CAST(rt0.c2 AS INTEGER))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0X5def08f4 THEN -1997848240 ELSE rt0.c1 END)OR((((rt0.c0))>((rt0.c1))))))AND(((rt0.c1)||(rt0.c0))))) ORDER BY (- (CAST(rt0.c2 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (MIN(TYPEOF(DISTINCT -1.490677176E9), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(TYPEOF(DISTINCT -1.490677176E9), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (MIN(TYPEOF(DISTINCT -1.490677176E9), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((MIN(TYPEOF(DISTINCT -1.490677176E9), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (MIN(TYPEOF(DISTINCT -1.490677176E9), ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1))));
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))) AND (NULL COLLATE BINARY))) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))) AND (NULL COLLATE BINARY))) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c0)) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c4))) AND (NULL COLLATE BINARY))) ORDER BY (- (rt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (MIN(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (MIN(v0.c0, v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)IS NOT(v0.c0))) NOT BETWEEN (CAST(v0.c0 AS NUMERIC)) AND (MIN(v0.c0, v0.c0, v0.c0, v0.c0))));
SELECT ALL * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0, NULL))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR((rt0.c1 IN (rt0.c3)))))OR((rt0.c1 IN (rt0.c4))))) ORDER BY CAST(((rt0.c3) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(DISTINCT rt0.c0, NULL))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR((rt0.c1 IN (rt0.c3)))))OR((rt0.c1 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) IS TRUE) AS REAL));
SELECT ALL * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0, NULL))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR((rt0.c1 IN (rt0.c3)))))OR((rt0.c1 IN (rt0.c4))))) ORDER BY CAST(((rt0.c3) IS TRUE) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(DISTINCT rt0.c0, NULL))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR((rt0.c1 IN (rt0.c3)))))OR((rt0.c1 IN (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) IS TRUE) AS REAL));
SELECT ALL * FROM rt0 WHERE (((((((((TRIM(DISTINCT rt0.c0, NULL))OR(rt0.c3)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)))OR((rt0.c1 IN (rt0.c3)))))OR((rt0.c1 IN (rt0.c4))))) ORDER BY CAST(((rt0.c3) IS TRUE) AS REAL);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c2) IS TRUE))LIKE(((rt1.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))LIKE(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c2) IS TRUE))LIKE(((rt1.c4) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) IS TRUE))LIKE(((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1, v0);
SELECT ALL * FROM rt1, v0 WHERE (((((rt1.c2) IS TRUE))LIKE(((rt1.c4) IS FALSE))));
SELECT ALL * FROM rt1, t0, v0, rt0 WHERE (t0.c0) ORDER BY ((((LOWER(rt1.c2))OR(((((rt1.c1)AND(rt0.c3)))AND(rt0.c4)))))AND(((((rt0.c0)AND('')))OR(rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY ((((LOWER(rt1.c2))OR(((((rt1.c1)AND(rt0.c3)))AND(rt0.c4)))))AND(((((rt0.c0)AND('')))OR(rt1.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, v0, rt0 WHERE (t0.c0) ORDER BY ((((LOWER(rt1.c2))OR(((((rt1.c1)AND(rt0.c3)))AND(rt0.c4)))))AND(((((rt0.c0)AND('')))OR(rt1.c4)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0, v0, rt0 ORDER BY ((((LOWER(rt1.c2))OR(((((rt1.c1)AND(rt0.c3)))AND(rt0.c4)))))AND(((((rt0.c0)AND('')))OR(rt1.c4)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, t0, v0, rt0 WHERE (t0.c0) ORDER BY ((((LOWER(rt1.c2))OR(((((rt1.c1)AND(rt0.c3)))AND(rt0.c4)))))AND(((((rt0.c0)AND('')))OR(rt1.c4)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c4)IS(rt0.c2))) AND ('775968008'))) ORDER BY CASE ((rt0.c1)||(rt0.c4))  WHEN x'a858e520' THEN LOWER(rt0.c4) ELSE ((rt0.c0)-(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c4)IS(rt0.c2))) AND ('775968008'))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)||(rt0.c4))  WHEN x'a858e520' THEN LOWER(rt0.c4) ELSE ((rt0.c0)-(NULL)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c4)IS(rt0.c2))) AND ('775968008'))) ORDER BY CASE ((rt0.c1)||(rt0.c4))  WHEN x'a858e520' THEN LOWER(rt0.c4) ELSE ((rt0.c0)-(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c4)IS(rt0.c2))) AND ('775968008'))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)||(rt0.c4))  WHEN x'a858e520' THEN LOWER(rt0.c4) ELSE ((rt0.c0)-(NULL)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOT BETWEEN (((rt0.c4)IS(rt0.c2))) AND ('775968008'))) ORDER BY CASE ((rt0.c1)||(rt0.c4))  WHEN x'a858e520' THEN LOWER(rt0.c4) ELSE ((rt0.c0)-(NULL)) END  NULLS LAST;
SELECT * FROM t0 INDEXED BY i31 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) WHERE (rt0.c2) ORDER BY (+ (('-2019600369' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INDEXED BY i31 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) ORDER BY (+ (('-2019600369' IN ()))) ASC);
SELECT * FROM t0 INDEXED BY i31 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) WHERE (rt0.c2) ORDER BY (+ (('-2019600369' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0 INDEXED BY i31 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) ORDER BY (+ (('-2019600369' IN ()))) ASC);
SELECT * FROM t0 INDEXED BY i31 CROSS JOIN rt0 ON CAST((rt0.c1 IN ()) AS REAL) WHERE (rt0.c2) ORDER BY (+ (('-2019600369' IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (MIN(((rt1.c0)IS NOT(rt1.c3)), (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((0.7464174412416149))))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt1.c0)IS NOT(rt1.c3)), (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((0.7464174412416149))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c2))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (MIN(((rt1.c0)IS NOT(rt1.c3)), (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((0.7464174412416149))))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(((rt1.c0)IS NOT(rt1.c3)), (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((0.7464174412416149))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c2))) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (MIN(((rt1.c0)IS NOT(rt1.c3)), (((rt1.c2)) BETWEEN ((rt0.c3)) AND ((0.7464174412416149))))) ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt1.c2))) NOTNULL) DESC;
SELECT ALL * FROM t0 WHERE (((0.6373822456977081 COLLATE BINARY) IS FALSE)) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))<>(t0.c0 COLLATE RTRIM)) DESC, (((t0.c0 IN ()))||((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6373822456977081 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))!=(t0.c0 COLLATE RTRIM)) DESC, (((t0.c0 IN ()))||((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((0.6373822456977081 COLLATE BINARY) IS FALSE)) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))<>(t0.c0 COLLATE RTRIM)) DESC, (((t0.c0 IN ()))||((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.6373822456977081 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))!=(t0.c0 COLLATE RTRIM)) DESC, (((t0.c0 IN ()))||((t0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((0.6373822456977081 COLLATE BINARY) IS FALSE)) ORDER BY ((((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))<>(t0.c0 COLLATE RTRIM)) DESC, (((t0.c0 IN ()))||((t0.c0 IN ()))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (((ABS(rt1.c1)) NOT BETWEEN ((((NULL, t0.c0, rt1.c4))>((rt1.c2, rt1.c4, rt1.c0)))) AND ((rt1.c3 IN (v0.c0))))) ORDER BY ((rt1.c4) BETWEEN (((rt1.c3)IS NOT(rt1.c3))) AND (((rt1.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c1)) NOT BETWEEN ((((NULL, t0.c0, rt1.c4))>((rt1.c2, rt1.c4, rt1.c0)))) AND ((rt1.c3 IN (v0.c0))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((rt1.c4) BETWEEN (((rt1.c3)IS NOT(rt1.c3))) AND (((rt1.c3) NOT NULL))));
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (((ABS(rt1.c1)) NOT BETWEEN ((((NULL, t0.c0, rt1.c4))>((rt1.c2, rt1.c4, rt1.c0)))) AND ((rt1.c3 IN (v0.c0))))) ORDER BY ((rt1.c4) BETWEEN (((rt1.c3)IS NOT(rt1.c3))) AND (((rt1.c3) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt1.c1)) NOT BETWEEN ((((NULL, t0.c0, rt1.c4))>((rt1.c2, rt1.c4, rt1.c0)))) AND ((rt1.c3 IN (v0.c0))))) IS TRUE)  as count FROM rt1, t0, v0 ORDER BY ((rt1.c4) BETWEEN (((rt1.c3)IS NOT(rt1.c3))) AND (((rt1.c3) NOT NULL))));
SELECT COUNT(*) FROM rt1, t0, v0 WHERE (((ABS(rt1.c1)) NOT BETWEEN ((((NULL, t0.c0, rt1.c4))>((rt1.c2, rt1.c4, rt1.c0)))) AND ((rt1.c3 IN (v0.c0))))) ORDER BY ((rt1.c4) BETWEEN (((rt1.c3)IS NOT(rt1.c3))) AND (((rt1.c3) NOT NULL)));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (- ((((v0.c0))>=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (- ((((v0.c0))>=((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (- ((((v0.c0))>=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NOT INDEXED ORDER BY (- ((((v0.c0))>=((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (- ((((v0.c0))>=((v0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json_quote(t0.c0) THEN CAST(t0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(t0.c0) THEN CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json_quote(t0.c0) THEN CAST(t0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_quote(t0.c0) THEN CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN json_quote(t0.c0) THEN CAST(t0.c0 AS BLOB) END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT * FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE '黐\'  WHEN rt0.c1 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE '黐\'  WHEN rt0.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE '黐\'  WHEN rt0.c1 THEN rt1.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE '黐\'  WHEN rt0.c1 THEN rt1.c3 END))) IS TRUE)  as count FROM rt0, t0, v0, rt1);
SELECT * FROM rt0, t0, v0 NOT INDEXED, rt1 WHERE (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c0))) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE '黐\'  WHEN rt0.c1 THEN rt1.c3 END)));
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((- ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c3 IN ())))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE ((- ((rt0.c3 IN ()))));
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1 COLLATE NOCASE) ORDER BY ((COALESCE(NULL, rt1.c0, t0.c0, rt1.c1)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY ((COALESCE(NULL, rt1.c0, t0.c0, rt1.c1)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((rt1.c0 IN ()))));
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1 COLLATE NOCASE) ORDER BY ((COALESCE(NULL, rt1.c0, t0.c0, rt1.c1)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((rt1.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY ((COALESCE(NULL, rt1.c0, t0.c0, rt1.c1)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((rt1.c0 IN ()))));
SELECT ALL * FROM rt1, t0 WHERE (rt1.c1 COLLATE NOCASE) ORDER BY ((COALESCE(NULL, rt1.c0, t0.c0, rt1.c1)) BETWEEN (CAST(rt1.c3 AS TEXT)) AND ((rt1.c0 IN ())));
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c1 END)OR(NULL)))OR(((((v0.c0)AND(rt1.c0)))OR(rt0.c0)))))AND((rt1.c1 IN (rt0.c1)))))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((QUOTE(rt1.c0)) NOTNULL)  NULLS FIRST, ((NULL)<<(rt0.c3 COLLATE NOCASE)) DESC, (((((((((rt1.c2 IN ()))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt1.c4)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c4)))))AND(((x'') BETWEEN (rt1.c0) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c1 END)OR(NULL)))OR(((((v0.c0)AND(rt1.c0)))OR(rt0.c0)))))AND((rt1.c1 IN (rt0.c1)))))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((QUOTE(rt1.c0)) NOTNULL)  NULLS FIRST, ((NULL)<<(rt0.c3 COLLATE NOCASE)) DESC, (((((((((rt1.c2 IN ()))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt1.c4)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c4)))))AND(((x'') BETWEEN (rt1.c0) AND (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c1 END)OR(NULL)))OR(((((v0.c0)AND(rt1.c0)))OR(rt0.c0)))))AND((rt1.c1 IN (rt0.c1)))))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((QUOTE(rt1.c0)) NOTNULL)  NULLS FIRST, ((NULL)<<(rt0.c3 COLLATE NOCASE)) DESC, (((((((((rt1.c2 IN ()))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt1.c4)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c4)))))AND(((x'') BETWEEN (rt1.c0) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c1 END)OR(NULL)))OR(((((v0.c0)AND(rt1.c0)))OR(rt0.c0)))))AND((rt1.c1 IN (rt0.c1)))))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM rt0, v0, rt1 ORDER BY ((QUOTE(rt1.c0)) NOTNULL)  NULLS FIRST, ((NULL)<<(rt0.c3 COLLATE NOCASE)) DESC, (((((((((rt1.c2 IN ()))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt1.c4)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c4)))))AND(((x'') BETWEEN (rt1.c0) AND (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0, rt1 WHERE (((((((((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt1.c1 END)OR(NULL)))OR(((((v0.c0)AND(rt1.c0)))OR(rt0.c0)))))AND((rt1.c1 IN (rt0.c1)))))OR(((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((QUOTE(rt1.c0)) NOTNULL)  NULLS FIRST, ((NULL)<<(rt0.c3 COLLATE NOCASE)) DESC, (((((((((rt1.c2 IN ()))AND(((rt0.c3) NOT BETWEEN (NULL) AND (rt1.c4)))))OR(rt0.c4 COLLATE RTRIM)))OR(((rt0.c1)IS NOT(rt0.c4)))))AND(((x'') BETWEEN (rt1.c0) AND (rt1.c2)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0 IN ()))AND(((rt0.c0) NOTNULL))))OR(rt1.c4 COLLATE NOCASE))) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((rt0.c0) NOTNULL))))OR(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0 IN ()))AND(((rt0.c0) NOTNULL))))OR(rt1.c4 COLLATE NOCASE))) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN ()))AND(((rt0.c0) NOTNULL))))OR(rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt1, v0, rt0 ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1, v0, rt0 WHERE ((((((t0.c0 IN ()))AND(((rt0.c0) NOTNULL))))OR(rt1.c4 COLLATE NOCASE))) ORDER BY ((rt1.c1) NOTNULL) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) NOT NULL)) ORDER BY (x'' COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (x'' COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) NOT NULL)) ORDER BY (x'' COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c2))) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY (x'' COLLATE NOCASE IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) NOT NULL)) ORDER BY (x'' COLLATE NOCASE IN ()) ASC  NULLS LAST;
SELECT * FROM v0, rt1, t0 WHERE (((rt1.c0) NOT BETWEEN ((('bs0')>=(rt1.c4))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))))) ORDER BY UPPER(v0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT BETWEEN ((('bs0')>=(rt1.c4))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY UPPER(v0.c0) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, rt1, t0 WHERE (((rt1.c0) NOT BETWEEN ((('bs0')>=(rt1.c4))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))))) ORDER BY UPPER(v0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT BETWEEN ((('bs0')>=(rt1.c4))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM v0, rt1, t0 ORDER BY UPPER(v0.c0) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM v0, rt1, t0 WHERE (((rt1.c0) NOT BETWEEN ((('bs0')>=(rt1.c4))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (rt1.c3))))) ORDER BY UPPER(v0.c0) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON x'' WHERE (-2085604199) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2085604199) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON x'' ORDER BY ((rt0.c3 COLLATE RTRIM)IS(((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON x'' WHERE (-2085604199) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2085604199) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON x'' ORDER BY ((rt0.c3 COLLATE RTRIM)IS(((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN t0 ON x'' WHERE (-2085604199) ORDER BY ((rt0.c3 COLLATE RTRIM)IS(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN v0 ON CASE WHEN CASE WHEN rt0.c4 THEN '877198582' WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN v0.c0 END THEN rt0.c3 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE ((rt0.c4)+(0.2991091588115583))  WHEN (rt1.c0 IN (v0.c0, rt0.c1)) THEN ((('-1786232323'))==((t0.c0))) END RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN 0xce5e41b WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM WHERE (((CASE WHEN '0.9277161375908156' THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)|((((rt1.c3))<((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '0.9277161375908156' THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)|((((rt1.c3))<((rt1.c2)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CASE WHEN CASE WHEN rt0.c4 THEN '877198582' WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN v0.c0 END THEN rt0.c3 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE ((rt0.c4)+(0.2991091588115583))  WHEN (rt1.c0 IN (v0.c0, rt0.c1)) THEN ((('-1786232323'))==((t0.c0))) END RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN 0xce5e41b WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM);
SELECT ALL * FROM rt1 INNER JOIN v0 ON CASE WHEN CASE WHEN rt0.c4 THEN '877198582' WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN v0.c0 END THEN rt0.c3 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE ((rt0.c4)+(0.2991091588115583))  WHEN (rt1.c0 IN (v0.c0, rt0.c1)) THEN ((('-1786232323'))==((t0.c0))) END RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN 0xce5e41b WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM WHERE (((CASE WHEN '0.9277161375908156' THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)|((((rt1.c3))<((rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '0.9277161375908156' THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END)|((((rt1.c3))<((rt1.c2)))))) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON CASE WHEN CASE WHEN rt0.c4 THEN '877198582' WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c1 THEN v0.c0 END THEN rt0.c3 COLLATE BINARY END FULL OUTER JOIN t0 ON CASE ((rt0.c4)+(0.2991091588115583))  WHEN (rt1.c0 IN (v0.c0, rt0.c1)) THEN ((('-1786232323'))==((t0.c0))) END RIGHT OUTER JOIN rt0 ON CASE WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN 0xce5e41b WHEN rt0.c0 THEN rt1.c1 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE NULL  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB));
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c2)IS NOT(v0.c0)))=((+ (v0.c0)))) FULL OUTER JOIN t0 ON 0X7d33f9b2 WHERE (((t0.c0 COLLATE RTRIM)<<(((v0.c0) NOT BETWEEN (2.001506412E9) AND (rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<<(((v0.c0) NOT BETWEEN (2.001506412E9) AND (rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c2)IS NOT(v0.c0)))==((+ (v0.c0)))) FULL OUTER JOIN t0 ON 0X7d33f9b2 ORDER BY CAST(rt0.c3 COLLATE RTRIM AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c2)IS NOT(v0.c0)))=((+ (v0.c0)))) FULL OUTER JOIN t0 ON 0X7d33f9b2 WHERE (((t0.c0 COLLATE RTRIM)<<(((v0.c0) NOT BETWEEN (2.001506412E9) AND (rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE RTRIM AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE RTRIM)<<(((v0.c0) NOT BETWEEN (2.001506412E9) AND (rt0.c2))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((((rt0.c2)IS NOT(v0.c0)))==((+ (v0.c0)))) FULL OUTER JOIN t0 ON 0X7d33f9b2 ORDER BY CAST(rt0.c3 COLLATE RTRIM AS NUMERIC) DESC);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON ((((rt0.c2)IS NOT(v0.c0)))=((+ (v0.c0)))) FULL OUTER JOIN t0 ON 0X7d33f9b2 WHERE (((t0.c0 COLLATE RTRIM)<<(((v0.c0) NOT BETWEEN (2.001506412E9) AND (rt0.c2))))) ORDER BY CAST(rt0.c3 COLLATE RTRIM AS NUMERIC) DESC;
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON ((rt1.c4 IN (rt0.c1)) IN (((v0.c0) NOT NULL))) WHERE (0.4639220908365508) ORDER BY COALESCE(TYPEOF(rt1.c3), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((0.4639220908365508) IS TRUE)  as count FROM rt0, rt1, t0 CROSS JOIN v0 ON ((rt1.c4 IN (rt0.c1)) IN (((v0.c0) NOT NULL))) ORDER BY COALESCE(TYPEOF(rt1.c3), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 END));
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON ((rt1.c4 IN (rt0.c1)) IN (((v0.c0) NOT NULL))) WHERE (0.4639220908365508) ORDER BY COALESCE(TYPEOF(rt1.c3), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((0.4639220908365508) IS TRUE)  as count FROM rt0, rt1, t0 CROSS JOIN v0 ON ((rt1.c4 IN (rt0.c1)) IN (((v0.c0) NOT NULL))) ORDER BY COALESCE(TYPEOF(rt1.c3), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 END));
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON ((rt1.c4 IN (rt0.c1)) IN (((v0.c0) NOT NULL))) WHERE (0.4639220908365508) ORDER BY COALESCE(TYPEOF(rt1.c3), CASE v0.c0  WHEN rt0.c4 THEN rt0.c0 END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY END WHERE ((- (rt0.c2))) ORDER BY CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY END ORDER BY CAST(NULL AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY END WHERE ((- (rt0.c2))) ORDER BY CAST(NULL AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY END ORDER BY CAST(NULL AS BLOB));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON CASE ((rt0.c1) NOT NULL)  WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 COLLATE BINARY END WHERE ((- (rt0.c2))) ORDER BY CAST(NULL AS BLOB);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)|(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)|(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL)|(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((+ (((NULL)|(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((0.33066429636563766 IN (v0.c0, t0.c0)))/((((v0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.33066429636563766 IN (v0.c0, t0.c0)))/((((v0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((0.33066429636563766 IN (v0.c0, t0.c0)))/((((v0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.33066429636563766 IN (v0.c0, t0.c0)))/((((v0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((0.33066429636563766 IN (v0.c0, t0.c0)))/((((v0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, v0.c0))))));
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt1.c2)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(rt1.c2)))OR(rt0.c2))) ISNULL)) IS TRUE)  as count FROM t0, rt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM t0, rt1, rt0 WHERE (((((((t0.c0)OR(rt1.c2)))OR(rt0.c2))) ISNULL));
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt1.c2) AND (((rt1.c4)||(t0.c0))))) ORDER BY ((((rt0.c4)AND(rt1.c3)))OR(x'da27')) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (rt1.c2) AND (((rt1.c4)||(t0.c0))))) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY ((((rt0.c4)AND(rt1.c3)))OR(x'da27')) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt1.c2) AND (((rt1.c4)||(t0.c0))))) ORDER BY ((((rt0.c4)AND(rt1.c3)))OR(x'da27')) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) BETWEEN (rt1.c2) AND (((rt1.c4)||(t0.c0))))) IS TRUE)  as count FROM t0, v0, rt1, rt0 ORDER BY ((((rt0.c4)AND(rt1.c3)))OR(x'da27')) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, v0, rt1, rt0 WHERE (((rt0.c2 COLLATE NOCASE) BETWEEN (rt1.c2) AND (((rt1.c4)||(t0.c0))))) ORDER BY ((((rt0.c4)AND(rt1.c3)))OR(x'da27')) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t0, rt0, v0, rt1 WHERE (((((rt0.c3)||(rt1.c1)))<=((rt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt1.c1)))<=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY x'' DESC);
SELECT ALL * FROM t0, rt0, v0, rt1 WHERE (((((rt0.c3)||(rt1.c1)))<=((rt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt1.c1)))<=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY x'' DESC);
SELECT ALL * FROM t0, rt0, v0, rt1 WHERE (((((rt0.c3)||(rt1.c1)))<=((rt0.c1 IN ())))) ORDER BY x'' DESC;
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (CASE (rt1.c2 IN (rt0.c4))  WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS BLOB) ELSE '' END) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN (rt0.c4))  WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS BLOB) ELSE '' END) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (CASE (rt1.c2 IN (rt0.c4))  WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS BLOB) ELSE '' END) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c2 IN (rt0.c4))  WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS BLOB) ELSE '' END) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, v0, t0 WHERE (CASE (rt1.c2 IN (rt0.c4))  WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS BLOB) ELSE '' END) ORDER BY ((CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c0 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt1.c4) AND (rt1.c1))) AND ((- (rt1.c2)))) DESC  NULLS FIRST;
SELECT * FROM v0, rt0 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN rt1 ON (rt0.c3 COLLATE BINARY IN ()) WHERE ((((rt0.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (-961827080)), CAST(rt0.c3 AS NUMERIC), CASE NULL  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c0 THEN rt1.c4 WHEN rt0.c0 THEN '' END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END, ((t0.c0) NOTNULL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(v0.c0)))OR(x'')) ELSE rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (-961827080)), CAST(rt0.c3 AS NUMERIC), CASE NULL  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c0 THEN rt1.c4 WHEN rt0.c0 THEN '' END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END, ((t0.c0) NOTNULL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN rt1 ON (rt0.c3 COLLATE BINARY IN ()) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(v0.c0)))OR(x'')) ELSE rt0.c0 END ASC  NULLS LAST);
SELECT * FROM v0, rt0 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN rt1 ON (rt0.c3 COLLATE BINARY IN ()) WHERE ((((rt0.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (-961827080)), CAST(rt0.c3 AS NUMERIC), CASE NULL  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c0 THEN rt1.c4 WHEN rt0.c0 THEN '' END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END, ((t0.c0) NOTNULL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(v0.c0)))OR(x'')) ELSE rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (-961827080)), CAST(rt0.c3 AS NUMERIC), CASE NULL  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c0 THEN rt1.c4 WHEN rt0.c0 THEN '' END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END, ((t0.c0) NOTNULL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN rt1 ON (rt0.c3 COLLATE BINARY IN ()) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(v0.c0)))OR(x'')) ELSE rt0.c0 END ASC  NULLS LAST);
SELECT * FROM v0, rt0 FULL OUTER JOIN t0 ON rt0.c1 RIGHT OUTER JOIN rt1 ON (rt0.c3 COLLATE BINARY IN ()) WHERE ((((rt0.c2, rt1.c3, rt1.c4)) NOT BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (-961827080)), CAST(rt0.c3 AS NUMERIC), CASE NULL  WHEN rt1.c3 THEN rt1.c3 WHEN t0.c0 THEN rt1.c4 WHEN rt0.c0 THEN '' END)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt0.c3 WHEN t0.c0 THEN rt0.c0 END, ((t0.c0) NOTNULL), CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN rt1.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN ((((rt1.c2)OR(v0.c0)))OR(x'')) ELSE rt0.c0 END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c1 END))) ORDER BY (((((((((((rt1.c3))>=((rt1.c1))))AND((~ (rt0.c0)))))OR(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END)))OR(216392731 COLLATE BINARY)))OR(0.11400720846548851)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt1.c3))>=((rt1.c1))))AND((~ (rt0.c0)))))OR(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END)))OR(216392731 COLLATE BINARY)))OR(0.11400720846548851)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c1 END))) ORDER BY (((((((((((rt1.c3))>=((rt1.c1))))AND((~ (rt0.c0)))))OR(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END)))OR(216392731 COLLATE BINARY)))OR(0.11400720846548851)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((((((((((rt1.c3))>=((rt1.c1))))AND((~ (rt0.c0)))))OR(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END)))OR(216392731 COLLATE BINARY)))OR(0.11400720846548851)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt0.c4) BETWEEN (rt1.c0) AND (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c1 END) AND (CASE rt0.c2  WHEN rt1.c2 THEN rt1.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt1.c4 THEN rt0.c1 END))) ORDER BY (((((((((((rt1.c3))>=((rt1.c1))))AND((~ (rt0.c0)))))OR(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END)))OR(216392731 COLLATE BINARY)))OR(0.11400720846548851)) DESC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c3 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c3 IN ()))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 END)) AND (((rt0.c3 IN ())))));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(-7.30909532E8 AS INTEGER)) AND (((-1862297750) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(-7.30909532E8 AS INTEGER)) AND (((-1862297750) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(-7.30909532E8 AS INTEGER)) AND (((-1862297750) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(-7.30909532E8 AS INTEGER)) AND (((-1862297750) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE BINARY) NOT BETWEEN (CAST(-7.30909532E8 AS INTEGER)) AND (((-1862297750) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((NOT (rt1.c3)))&(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN x'' THEN rt1.c3 WHEN rt0.c3 THEN t0.c0 ELSE rt1.c1 END))) ORDER BY (((((rt0.c1)>>(x'07cc'))))<=((CAST(rt1.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c3)))&(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN x'' THEN rt1.c3 WHEN rt0.c3 THEN t0.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((((rt0.c1)>>(x'07cc'))))<=((CAST(rt1.c1 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((NOT (rt1.c3)))&(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN x'' THEN rt1.c3 WHEN rt0.c3 THEN t0.c0 ELSE rt1.c1 END))) ORDER BY (((((rt0.c1)>>(x'07cc'))))<=((CAST(rt1.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c3)))&(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN x'' THEN rt1.c3 WHEN rt0.c3 THEN t0.c0 ELSE rt1.c1 END))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY (((((rt0.c1)>>(x'07cc'))))<=((CAST(rt1.c1 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM v0, rt1, rt0, t0 WHERE ((((NOT (rt1.c3)))&(CASE rt1.c0  WHEN NULL THEN rt0.c1 WHEN x'' THEN rt1.c3 WHEN rt0.c3 THEN t0.c0 ELSE rt1.c1 END))) ORDER BY (((((rt0.c1)>>(x'07cc'))))<=((CAST(rt1.c1 AS NUMERIC)))) ASC;
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (CAST(CASE NULL  WHEN NULL THEN t0.c0 ELSE t0.c0 END AS REAL)) ORDER BY -513902597 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN NULL THEN t0.c0 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY -513902597 ASC);
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (CAST(CASE NULL  WHEN NULL THEN t0.c0 ELSE t0.c0 END AS REAL)) ORDER BY -513902597 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE NULL  WHEN NULL THEN t0.c0 ELSE t0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY -513902597 ASC);
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(t0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0, v0);
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(t0.c0) AS TEXT)) IS TRUE)  as count FROM rt1, rt0, t0, v0);
SELECT ALL * FROM rt1, rt0, t0, v0 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CASE WHEN ((rt0.c3)|(rt0.c4)) THEN ((rt1.c4)%(rt0.c4)) WHEN (+ (rt1.c3)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (NOT (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)|(rt0.c4)) THEN ((rt1.c4)%(rt0.c4)) WHEN (+ (rt1.c3)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (NOT (rt1.c4)) END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CASE WHEN ((rt0.c3)|(rt0.c4)) THEN ((rt1.c4)%(rt0.c4)) WHEN (+ (rt1.c3)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (NOT (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c3)|(rt0.c4)) THEN ((rt1.c4)%(rt0.c4)) WHEN (+ (rt1.c3)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (NOT (rt1.c4)) END) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT ALL COUNT(*) FROM rt1, rt0, v0 WHERE (CASE WHEN ((rt0.c3)|(rt0.c4)) THEN ((rt1.c4)%(rt0.c4)) WHEN (+ (rt1.c3)) THEN (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((NULL))) WHEN ((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c1)) THEN (rt0.c0 IN ()) ELSE (NOT (rt1.c4)) END);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS NOT(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS NOT(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS NOT(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2)IS NOT(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c2)IS NOT(rt1.c0)) COLLATE BINARY);
SELECT * FROM t0, rt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM t0, rt0, rt1);
SELECT * FROM t0, rt0, rt1 WHERE ((rt1.c1 IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON (('-500230444')AND(((rt1.c0)&(rt1.c3)))) WHERE ((rt1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, t0, v0 LEFT OUTER JOIN rt0 ON (('-500230444')AND(((rt1.c0)&(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON (('-500230444')AND(((rt1.c0)&(rt1.c3)))) WHERE ((rt1.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, t0, v0 LEFT OUTER JOIN rt0 ON (('-500230444')AND(((rt1.c0)&(rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED, v0 LEFT OUTER JOIN rt0 ON (('-500230444')AND(((rt1.c0)&(rt1.c3)))) WHERE ((rt1.c2 COLLATE BINARY IN ()));
SELECT * FROM rt0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt0.c1)&(-672585287))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN rt1.c3 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c2)=(rt0.c4)) THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN x'' ELSE rt0.c3 END ELSE rt1.c1 END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), (((rt0.c0)>=(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt0.c1)&(-672585287))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN rt1.c3 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c2)==(rt0.c4)) THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN x'' ELSE rt0.c3 END ELSE rt1.c1 END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), (((rt0.c0)>=(rt1.c4)) IN ())  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt0.c1)&(-672585287))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN rt1.c3 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c2)=(rt0.c4)) THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN x'' ELSE rt0.c3 END ELSE rt1.c1 END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), (((rt0.c0)>=(rt1.c4)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt0.c1)&(-672585287))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE WHEN (rt1.c1 IN ()) THEN rt1.c3 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c2)==(rt0.c4)) THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN x'' ELSE rt0.c3 END ELSE rt1.c1 END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), (((rt0.c0)>=(rt1.c4)) IN ())  NULLS FIRST);
SELECT * FROM rt0, rt1 WHERE (((((rt1.c2 COLLATE RTRIM)AND(((((rt0.c3)AND(rt1.c3)))AND(rt1.c4)))))AND(((rt0.c1)&(-672585287))))) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN rt1.c3 COLLATE NOCASE WHEN ((rt0.c2)OR(rt0.c3)) THEN CASE WHEN rt1.c0 THEN rt1.c3 END WHEN ((rt1.c2)=(rt0.c4)) THEN CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt1.c1 THEN x'' ELSE rt0.c3 END ELSE rt1.c1 END ASC  NULLS FIRST, CAST(rt0.c2 COLLATE BINARY AS NUMERIC), (((rt0.c0)>=(rt1.c4)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (json(((t0.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((t0.c0)<<(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json(((t0.c0)<<(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((t0.c0)<<(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json(((t0.c0)<<(t0.c0))));
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((x'') BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((x'') BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((x'') BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (CASE t0.c0  WHEN rt0.c0 THEN rt0.c4 ELSE v0.c0 END)));
SELECT ALL * FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((((- (rt1.c1))) IS TRUE)) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((((- (rt1.c1))) IS TRUE)) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1, rt0 RIGHT OUTER JOIN v0 ON LIKELY((rt0.c1 IN ())) WHERE ((((- (rt1.c1))) IS TRUE)) ORDER BY CAST(t0.c0 AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, rt0, rt1 WHERE (CASE WHEN CAST(0.9935569077775707 AS BLOB) THEN CAST('-1490677176' AS NUMERIC) WHEN (- (rt1.c3)) THEN ((rt0.c2)==(rt1.c0)) WHEN ((rt0.c2)||(NULL)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) DESC, 0.9411962325492872;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.9935569077775707 AS BLOB) THEN CAST('-1490677176' AS NUMERIC) WHEN (- (rt1.c3)) THEN ((rt0.c2)=(rt1.c0)) WHEN ((rt0.c2)||(NULL)) THEN ((rt0.c3)<=(rt0.c3)) END) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt0, rt1 ORDER BY (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) DESC, 0.9411962325492872);
SELECT COUNT(*) FROM t0, v0, rt0, rt1 WHERE (CASE WHEN CAST(0.9935569077775707 AS BLOB) THEN CAST('-1490677176' AS NUMERIC) WHEN (- (rt1.c3)) THEN ((rt0.c2)==(rt1.c0)) WHEN ((rt0.c2)||(NULL)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) DESC, 0.9411962325492872;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0.9935569077775707 AS BLOB) THEN CAST('-1490677176' AS NUMERIC) WHEN (- (rt1.c3)) THEN ((rt0.c2)=(rt1.c0)) WHEN ((rt0.c2)||(NULL)) THEN ((rt0.c3)<=(rt0.c3)) END) IS TRUE)  as count FROM t0 NOT INDEXED, v0, rt0, rt1 ORDER BY (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) DESC, 0.9411962325492872);
SELECT COUNT(*) FROM t0, v0, rt0, rt1 WHERE (CASE WHEN CAST(0.9935569077775707 AS BLOB) THEN CAST('-1490677176' AS NUMERIC) WHEN (- (rt1.c3)) THEN ((rt0.c2)==(rt1.c0)) WHEN ((rt0.c2)||(NULL)) THEN ((rt0.c3)<=(rt0.c3)) END) ORDER BY (~ (((rt0.c0) BETWEEN (v0.c0) AND (rt0.c3)))) DESC, 0.9411962325492872;
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((rt0.c3 COLLATE BINARY)/(LIKELIHOOD(rt1.c2, 0.4823235305693371))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)/(LIKELIHOOD(rt1.c2, 0.4823235305693371)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((rt0.c3 COLLATE BINARY)/(LIKELIHOOD(rt1.c2, 0.4823235305693371))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE BINARY)/(LIKELIHOOD(rt1.c2, 0.4823235305693371)))) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL * FROM rt0, v0, rt1, t0 WHERE (((rt0.c3 COLLATE BINARY)/(LIKELIHOOD(rt1.c2, 0.4823235305693371))));
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((rt0.c0)<=(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((rt0.c0)<=(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt0, rt1, v0);
SELECT * FROM t0, rt0, rt1, v0 WHERE (((((rt0.c0)<=(rt0.c1))) ISNULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((((rt0.c2, t0.c0, x''))<=((rt1.c2, rt0.c3, rt0.c3))))OR('0.9733568146101503')) LEFT OUTER JOIN rt0 ON CASE ((NULL)+(rt0.c2))  WHEN CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN t0.c0 THEN x'0be3' ELSE rt0.c1 END THEN GLOB(rt1.c4, rt1.c2) END LEFT OUTER JOIN t0 ON ((MAX(rt0.c0, rt1.c1))<(((('0.10646408227176352'))<=((rt0.c4))))) WHERE ((((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))AND(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)))OR(((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c1)))AND(t0.c0)))AND(rt1.c0)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))AND(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)))OR(((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c1)))AND(t0.c0)))AND(rt1.c0)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((((rt0.c2, t0.c0, x''))<=((rt1.c2, rt0.c3, rt0.c3))))OR('0.9733568146101503')) LEFT OUTER JOIN rt0 ON CASE ((NULL)+(rt0.c2))  WHEN CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN t0.c0 THEN x'0be3' ELSE rt0.c1 END THEN GLOB(rt1.c4, rt1.c2) END LEFT OUTER JOIN t0 ON ((MAX(rt0.c0, rt1.c1))<(((('0.10646408227176352'))<=((rt0.c4))))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN v0 ON (((((rt0.c2, t0.c0, x''))<=((rt1.c2, rt0.c3, rt0.c3))))OR('0.9733568146101503')) LEFT OUTER JOIN rt0 ON CASE ((NULL)+(rt0.c2))  WHEN CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN t0.c0 THEN x'0be3' ELSE rt0.c1 END THEN GLOB(rt1.c4, rt1.c2) END LEFT OUTER JOIN t0 ON ((MAX(rt0.c0, rt1.c1))<(((('0.10646408227176352'))<=((rt0.c4))))) WHERE ((((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))AND(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)))OR(((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c1)))AND(t0.c0)))AND(rt1.c0)))))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c1))))AND(rt1.c4 COLLATE RTRIM)))OR(rt1.c0)))OR(((((((((rt1.c4)AND(rt1.c3)))AND(rt0.c1)))AND(t0.c0)))AND(rt1.c0)))))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN v0 ON (((((rt0.c2, t0.c0, x''))<=((rt1.c2, rt0.c3, rt0.c3))))OR('0.9733568146101503')) LEFT OUTER JOIN rt0 ON CASE ((NULL)+(rt0.c2))  WHEN CASE WHEN rt1.c2 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c1 WHEN t0.c0 THEN x'0be3' ELSE rt0.c1 END THEN GLOB(rt1.c4, rt1.c2) END LEFT OUTER JOIN t0 ON ((MAX(rt0.c0, rt1.c1))<(((('0.10646408227176352'))<=((rt0.c4))))));
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0);
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY rt1.c3, ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))+(((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c2)))), CASE (~ (rt1.c2))  WHEN ((rt1.c0)<>('-785517541')) THEN ((NULL) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c3, ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))+(((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c2)))), CASE (~ (rt1.c2))  WHEN ((rt1.c0)<>('-785517541')) THEN ((NULL) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY rt1.c3, ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))+(((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c2)))), CASE (~ (rt1.c2))  WHEN ((rt1.c0)<>('-785517541')) THEN ((NULL) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c3, ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))+(((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c2)))), CASE (~ (rt1.c2))  WHEN ((rt1.c0)<>('-785517541')) THEN ((NULL) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (NULL) ORDER BY rt1.c3, ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))+(((((((((((((t0.c0)AND(rt1.c1)))AND(rt1.c4)))AND(rt1.c3)))AND(t0.c0)))AND(t0.c0)))AND(rt1.c2)))), CASE (~ (rt1.c2))  WHEN ((rt1.c0)<>('-785517541')) THEN ((NULL) IS FALSE) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (x'e57f') ORDER BY load_extension(rt1.c3, rt0.c4) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'e57f') IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY load_extension(rt1.c3, rt0.c4) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (x'e57f') ORDER BY load_extension(rt1.c3, rt0.c4) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'e57f') IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY load_extension(rt1.c3, rt0.c4) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, rt1, t0 WHERE (x'e57f') ORDER BY load_extension(rt1.c3, rt0.c4) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt1, rt0, v0, t0 WHERE ((((((- (t0.c0)))OR((rt0.c2 IN ()))))OR(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR((rt0.c2 IN ()))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE ((((((- (t0.c0)))OR((rt0.c2 IN ()))))OR(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((- (t0.c0)))OR((rt0.c2 IN ()))))OR(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0, v0, t0);
SELECT * FROM rt1, rt0, v0, t0 WHERE ((((((- (t0.c0)))OR((rt0.c2 IN ()))))OR(rt1.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((NULL))!=((((rt0.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON UNLIKELY(json_array(t0.c0, rt0.c3)) WHERE (CAST(rt1.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((NULL))<>((((rt0.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON UNLIKELY(json_array(t0.c0, rt0.c3)));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON (((NULL))!=((((rt0.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON UNLIKELY(json_array(t0.c0, rt0.c3)) WHERE (CAST(rt1.c3 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c3 AS INTEGER)) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((NULL))<>((((rt0.c0)<=(rt1.c1))))) FULL OUTER JOIN rt1 ON UNLIKELY(json_array(t0.c0, rt0.c3)));
SELECT ALL * FROM rt0, rt1, v0, t0 WHERE (((CAST(rt1.c4 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT ALL * FROM rt0, rt1, v0, t0 WHERE (((CAST(rt1.c4 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT ALL * FROM rt0, rt1, v0, t0 WHERE (((CAST(rt1.c4 AS TEXT)) NOTNULL));
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((((NULL)!=(rt1.c2)), ((((t0.c0)OR(t0.c0)))AND(rt1.c0)), '544205263')) AND ((rt1.c1, ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c3)), (((rt1.c3))>((rt1.c4))))))) ORDER BY CAST(rt1.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((((NULL)<>(rt1.c2)), ((((t0.c0)OR(t0.c0)))AND(rt1.c0)), '544205263')) AND ((rt1.c1, ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c3)), (((rt1.c3))>((rt1.c4))))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c0 AS TEXT) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((((NULL)!=(rt1.c2)), ((((t0.c0)OR(t0.c0)))AND(rt1.c0)), '544205263')) AND ((rt1.c1, ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c3)), (((rt1.c3))>((rt1.c4))))))) ORDER BY CAST(rt1.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((((NULL)<>(rt1.c2)), ((((t0.c0)OR(t0.c0)))AND(rt1.c0)), '544205263')) AND ((rt1.c1, ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c3)), (((rt1.c3))>((rt1.c4))))))) IS TRUE)  as count FROM rt1, t0 ORDER BY CAST(rt1.c0 AS TEXT) ASC);
SELECT COUNT(*) FROM rt1, t0 WHERE ((((t0.c0, rt1.c2, rt1.c0)) NOT BETWEEN ((((NULL)!=(rt1.c2)), ((((t0.c0)OR(t0.c0)))AND(rt1.c0)), '544205263')) AND ((rt1.c1, ((rt1.c2) NOT BETWEEN (t0.c0) AND (rt1.c3)), (((rt1.c3))>((rt1.c4))))))) ORDER BY CAST(rt1.c0 AS TEXT) ASC;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)/(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)/(NULL)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)/(NULL)) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c2)/(NULL)) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))<=(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))<=(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))<=(CAST(NULL AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))<=(CAST(NULL AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))<=(CAST(NULL AS BLOB))));
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c3))))<>(((rt0.c0) NOTNULL)))) ORDER BY (((~ ('1806378810'))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c3))))!=(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ ('1806378810'))) ISNULL) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c3))))<>(((rt0.c0) NOTNULL)))) ORDER BY (((~ ('1806378810'))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c3))))!=(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((~ ('1806378810'))) ISNULL) DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c3))))<>(((rt0.c0) NOTNULL)))) ORDER BY (((~ ('1806378810'))) ISNULL) DESC;
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN v0 ON rt0.c3 CROSS JOIN rt1 ON ((((rt1.c0)%(rt1.c4)))<<(((rt0.c3)>=(rt0.c1)))) WHERE (CASE WHEN (- (rt0.c3)) THEN ',ys	\l-' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN ',ys	\l-' END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON rt0.c3 CROSS JOIN rt1 ON ((((rt1.c0)%(rt1.c4)))<<(((rt0.c3)>=(rt0.c1)))));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN v0 ON rt0.c3 CROSS JOIN rt1 ON ((((rt1.c0)%(rt1.c4)))<<(((rt0.c3)>=(rt0.c1)))) WHERE (CASE WHEN (- (rt0.c3)) THEN ',ys	\l-' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c3)) THEN ',ys	\l-' END) IS TRUE)  as count FROM rt0, t0 LEFT OUTER JOIN v0 ON rt0.c3 CROSS JOIN rt1 ON ((((rt1.c0)%(rt1.c4)))<<(((rt0.c3)>=(rt0.c1)))));
SELECT ALL * FROM rt0, t0 LEFT OUTER JOIN v0 ON rt0.c3 CROSS JOIN rt1 ON ((((rt1.c0)%(rt1.c4)))<<(((rt0.c3)>=(rt0.c1)))) WHERE (CASE WHEN (- (rt0.c3)) THEN ',ys	\l-' END);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, v0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c4)))OR(v0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt1.c2 END)))) ORDER BY '-1487099971' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c4)))OR(v0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt1.c2 END)))) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY '-1487099971' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, v0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c4)))OR(v0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt1.c2 END)))) ORDER BY '-1487099971' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c4)))OR(v0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt1.c2 END)))) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY '-1487099971' ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0, v0, rt1 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c2)AND(rt1.c4)))OR(v0.c0)))) AND ((CASE WHEN rt0.c3 THEN rt1.c2 END)))) ORDER BY '-1487099971' ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)>('')))*(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>('')))*(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>('')))*(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>('')))*(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>('')))*(CAST(v0.c0 AS INTEGER))));
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY ',2JrB9' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ',2JrB9' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY ',2JrB9' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ',2JrB9' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE NOCASE COLLATE RTRIM) ORDER BY ',2JrB9' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY ((((((((((((1.489658193E9)OR(rt0.c0)))AND(rt0.c1)))AND(UNICODE(t0.c0))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 END)))OR('0.5413497565507439')))AND(((rt1.c4)<>(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((((((((((1.489658193E9)OR(rt0.c0)))AND(rt0.c1)))AND(UNICODE(t0.c0))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 END)))OR('0.5413497565507439')))AND(((rt1.c4)!=(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY ((((((((((((1.489658193E9)OR(rt0.c0)))AND(rt0.c1)))AND(UNICODE(t0.c0))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 END)))OR('0.5413497565507439')))AND(((rt1.c4)<>(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY ((((((((((((1.489658193E9)OR(rt0.c0)))AND(rt0.c1)))AND(UNICODE(t0.c0))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 END)))OR('0.5413497565507439')))AND(((rt1.c4)!=(rt0.c3))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((NOT ((NOT (rt1.c1))))) ORDER BY ((((((((((((1.489658193E9)OR(rt0.c0)))AND(rt0.c1)))AND(UNICODE(t0.c0))))AND(CASE rt1.c0  WHEN rt1.c1 THEN rt0.c4 END)))OR('0.5413497565507439')))AND(((rt1.c4)<>(rt0.c3))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ()))));
SELECT ALL * FROM t0, rt1, rt0 CROSS JOIN v0 ON ((LOWER(DISTINCT rt0.c3)) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((0x5015d2e))))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0 CROSS JOIN v0 ON ((LOWER(DISTINCT rt0.c3)) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((0x5015d2e))))));
SELECT ALL * FROM t0, rt1, rt0 CROSS JOIN v0 ON ((LOWER(DISTINCT rt0.c3)) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((0x5015d2e))))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t0, rt1 NOT INDEXED, rt0 CROSS JOIN v0 ON ((LOWER(DISTINCT rt0.c3)) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((0x5015d2e))))));
SELECT ALL * FROM t0, rt1, rt0 CROSS JOIN v0 ON ((LOWER(DISTINCT rt0.c3)) NOT BETWEEN ((- (rt0.c1))) AND ((((rt0.c0)) BETWEEN ((rt1.c4)) AND ((0x5015d2e))))) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL))<>(((rt0.c1) BETWEEN (rt0.c4) AND ('557236414'))))) ORDER BY x'5200';
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<>(((rt0.c1) BETWEEN (rt0.c4) AND ('557236414'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'5200');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL))<>(((rt0.c1) BETWEEN (rt0.c4) AND ('557236414'))))) ORDER BY x'5200';
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<>(((rt0.c1) BETWEEN (rt0.c4) AND ('557236414'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'5200');
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL))<>(((rt0.c1) BETWEEN (rt0.c4) AND ('557236414'))))) ORDER BY x'5200';
SELECT * FROM t0, rt0 WHERE (CAST((((((((('TァU#\nqꑄ5')OR(x'4c77')))AND(x'')))OR(rt0.c2)))AND(rt0.c1)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.35172670690543106 COLLATE RTRIM THEN (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('TァU#\nqꑄ5')OR(x'4c77')))AND(x'')))OR(rt0.c2)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.35172670690543106 COLLATE RTRIM THEN (rt0.c0 IN ()) END ASC);
SELECT * FROM t0, rt0 WHERE (CAST((((((((('TァU#\nqꑄ5')OR(x'4c77')))AND(x'')))OR(rt0.c2)))AND(rt0.c1)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.35172670690543106 COLLATE RTRIM THEN (rt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((((((('TァU#\nqꑄ5')OR(x'4c77')))AND(x'')))OR(rt0.c2)))AND(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.35172670690543106 COLLATE RTRIM THEN (rt0.c0 IN ()) END ASC);
SELECT * FROM t0, rt0 WHERE (CAST((((((((('TァU#\nqꑄ5')OR(x'4c77')))AND(x'')))OR(rt0.c2)))AND(rt0.c1)) AS TEXT)) ORDER BY CASE CASE WHEN rt0.c4 THEN rt0.c3 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN 0.35172670690543106 COLLATE RTRIM THEN (rt0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN ('-976570142') AND (((rt1.c1) IS TRUE)))) ORDER BY (((rt1.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT BETWEEN ('-976570142') AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY (((rt1.c3) NOTNULL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN ('-976570142') AND (((rt1.c1) IS TRUE)))) ORDER BY (((rt1.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT BETWEEN ('-976570142') AND (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, rt0, v0, t0 ORDER BY (((rt1.c3) NOTNULL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0, v0, t0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN ('-976570142') AND (((rt1.c1) IS TRUE)))) ORDER BY (((rt1.c3) NOTNULL) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 CROSS JOIN rt0 ON UPPER(DISTINCT t0.c0 COLLATE BINARY) WHERE ((((rt0.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON UPPER(DISTINCT t0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0, v0 CROSS JOIN rt0 ON UPPER(DISTINCT t0.c0 COLLATE BINARY) WHERE ((((rt0.c0 IN (v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM t0, v0 CROSS JOIN rt0 ON UPPER(DISTINCT t0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM t0, v0 CROSS JOIN rt0 ON UPPER(DISTINCT t0.c0 COLLATE BINARY) WHERE ((((rt0.c0 IN (v0.c0))) NOTNULL));
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN ((('') NOTNULL)) AND (-1143539358)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) BETWEEN ((('') NOTNULL)) AND (-1143539358))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN ((('') NOTNULL)) AND (-1143539358)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) BETWEEN ((('') NOTNULL)) AND (-1143539358))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN ((('') NOTNULL)) AND (-1143539358)));
SELECT * FROM rt1, v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM rt1, v0, t0);
SELECT * FROM rt1, v0, t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ())))) ORDER BY ((x'' COLLATE NOCASE)<(((0.707291057576157)<(1903618135)))), (IFNULL(t0.c0, t0.c0) IN ()), '545174441';
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((x'' COLLATE NOCASE)<(((0.707291057576157)<(1903618135)))), (IFNULL(t0.c0, t0.c0) IN ()), '545174441');
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ())))) ORDER BY ((x'' COLLATE NOCASE)<(((0.707291057576157)<(1903618135)))), (IFNULL(t0.c0, t0.c0) IN ()), '545174441';
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((x'' COLLATE NOCASE)<(((0.707291057576157)<(1903618135)))), (IFNULL(t0.c0, t0.c0) IN ()), '545174441');
SELECT * FROM t0 WHERE ((~ ((t0.c0 IN ())))) ORDER BY ((x'' COLLATE NOCASE)<(((0.707291057576157)<(1903618135)))), (IFNULL(t0.c0, t0.c0) IN ()), '545174441';
SELECT * FROM t0, rt0, v0, rt1 WHERE (rt0.c4) ORDER BY CHAR(((t0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY CHAR(((t0.c0) ISNULL))  NULLS LAST);
SELECT * FROM t0, rt0, v0, rt1 WHERE (rt0.c4) ORDER BY CHAR(((t0.c0) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM t0, rt0, v0, rt1 ORDER BY CHAR(((t0.c0) ISNULL))  NULLS LAST);
SELECT * FROM t0, rt0, v0, rt1 WHERE (rt0.c4) ORDER BY CHAR(((t0.c0) ISNULL))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt0.c2 INNER JOIN t0 ON CASE WHEN ((t0.c0)OR(v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE CAST(rt0.c3 AS NUMERIC) END WHERE (((((rt0.c3) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) ORDER BY ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt0.c2 INNER JOIN t0 ON CASE WHEN ((t0.c0)OR(v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE CAST(rt0.c3 AS NUMERIC) END ORDER BY ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt0.c2 INNER JOIN t0 ON CASE WHEN ((t0.c0)OR(v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE CAST(rt0.c3 AS NUMERIC) END WHERE (((((rt0.c3) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) ORDER BY ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt0.c2 INNER JOIN t0 ON CASE WHEN ((t0.c0)OR(v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE CAST(rt0.c3 AS NUMERIC) END ORDER BY ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN v0 ON rt0.c2 INNER JOIN t0 ON CASE WHEN ((t0.c0)OR(v0.c0)) THEN ((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) ELSE CAST(rt0.c3 AS NUMERIC) END WHERE (((((rt0.c3) NOT BETWEEN (rt1.c3) AND (t0.c0))) ISNULL)) ORDER BY ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c1))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM v0, rt1, t0, rt0 WHERE (((((rt0.c2)>('-978498943')))+((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>('-978498943')))+((- (rt0.c4))))) IS TRUE)  as count FROM v0, rt1, t0, rt0);
SELECT ALL * FROM v0, rt1, t0, rt0 WHERE (((((rt0.c2)>('-978498943')))+((- (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>('-978498943')))+((- (rt0.c4))))) IS TRUE)  as count FROM v0, rt1, t0, rt0);
SELECT ALL * FROM v0, rt1, t0, rt0 WHERE (((((rt0.c2)>('-978498943')))+((- (rt0.c4)))));
SELECT * FROM v0, t0 LEFT OUTER JOIN rt0 ON QUOTE((rt1.c0 IN (t0.c0))) CROSS JOIN rt1 ON (NOT (rt1.c4 COLLATE RTRIM)) WHERE ((NOT (NULLIF(t0.c0, 0.8191505514156588))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(t0.c0, 0.8191505514156588)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt0 ON QUOTE((rt1.c0 IN (t0.c0))) CROSS JOIN rt1 ON (NOT (rt1.c4 COLLATE RTRIM)));
SELECT * FROM v0, t0 LEFT OUTER JOIN rt0 ON QUOTE((rt1.c0 IN (t0.c0))) CROSS JOIN rt1 ON (NOT (rt1.c4 COLLATE RTRIM)) WHERE ((NOT (NULLIF(t0.c0, 0.8191505514156588))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (NULLIF(t0.c0, 0.8191505514156588)))) IS TRUE)  as count FROM v0, t0 LEFT OUTER JOIN rt0 ON QUOTE((rt1.c0 IN (t0.c0))) CROSS JOIN rt1 ON (NOT (rt1.c4 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN NULL THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN NULL THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN NULL THEN rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN NULL THEN rt0.c1 END IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN NULL THEN rt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (0x33ffe03) AND (rt0.c3))) BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) AND (((((v0.c0)AND(rt0.c3)))OR(x'')))) WHERE ((((((- (rt0.c4)))AND(CAST(rt0.c1 AS REAL))))AND(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c4)))AND(CAST(rt0.c1 AS REAL))))AND(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (0x33ffe03) AND (rt0.c3))) BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) AND (((((v0.c0)AND(rt0.c3)))OR(x'')))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (0x33ffe03) AND (rt0.c3))) BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) AND (((((v0.c0)AND(rt0.c3)))OR(x'')))) WHERE ((((((- (rt0.c4)))AND(CAST(rt0.c1 AS REAL))))AND(CAST(rt1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c4)))AND(CAST(rt0.c1 AS REAL))))AND(CAST(rt1.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (0x33ffe03) AND (rt0.c3))) BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) AND (((((v0.c0)AND(rt0.c3)))OR(x'')))));
SELECT ALL COUNT(*) FROM rt0, rt1 RIGHT OUTER JOIN v0 ON ((((rt1.c4) BETWEEN (0x33ffe03) AND (rt0.c3))) BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) AND (((((v0.c0)AND(rt0.c3)))OR(x'')))) WHERE ((((((- (rt0.c4)))AND(CAST(rt0.c1 AS REAL))))AND(CAST(rt1.c1 AS BLOB))));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((- (rt0.c1)))+(CASE WHEN rt0.c2 THEN t0.c0 END)) FULL OUTER JOIN t0 ON (TYPEOF(rt0.c1) IN ()) WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c0)))OR('byrnu')))OR(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c0)))OR('byrnu')))OR(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((- (rt0.c1)))+(CASE WHEN rt0.c2 THEN t0.c0 END)) FULL OUTER JOIN t0 ON (TYPEOF(rt0.c1) IN ()) ORDER BY rt0.c2 DESC);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((- (rt0.c1)))+(CASE WHEN rt0.c2 THEN t0.c0 END)) FULL OUTER JOIN t0 ON (TYPEOF(rt0.c1) IN ()) WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c0)))OR('byrnu')))OR(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c4) NOT BETWEEN (rt0.c0) AND (t0.c0)))OR('byrnu')))OR(((rt0.c0) BETWEEN (t0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((- (rt0.c1)))+(CASE WHEN rt0.c2 THEN t0.c0 END)) FULL OUTER JOIN t0 ON (TYPEOF(rt0.c1) IN ()) ORDER BY rt0.c2 DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (('-513902597') NOT NULL) FULL OUTER JOIN rt1 ON (((('-531087994')IS NOT(rt1.c4)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)) WHERE (((((rt1.c4)GLOB(v0.c0))) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (((rt0.c0 IN ()))%((('') NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)GLOB(v0.c0))) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (('-513902597') NOT NULL) FULL OUTER JOIN rt1 ON (((('-531087994')IS NOT(rt1.c4)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)) ORDER BY (((rt0.c0 IN ()))%((('') NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (('-513902597') NOT NULL) FULL OUTER JOIN rt1 ON (((('-531087994')IS NOT(rt1.c4)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)) WHERE (((((rt1.c4)GLOB(v0.c0))) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (((rt0.c0 IN ()))%((('') NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)GLOB(v0.c0))) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c0)IS(rt1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (('-513902597') NOT NULL) FULL OUTER JOIN rt1 ON (((('-531087994')IS NOT(rt1.c4)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)) ORDER BY (((rt0.c0 IN ()))%((('') NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (('-513902597') NOT NULL) FULL OUTER JOIN rt1 ON (((('-531087994')IS NOT(rt1.c4)))<(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)) WHERE (((((rt1.c4)GLOB(v0.c0))) BETWEEN ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (((rt1.c0)IS(rt1.c2))))) ORDER BY (((rt0.c0 IN ()))%((('') NOT BETWEEN (rt1.c4) AND (rt1.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TRIM(((0.13032296567250856) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((0.13032296567250856) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((0.13032296567250856) BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((0.13032296567250856) BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((0.13032296567250856) BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE ((rt0.c2 IN ()) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))<(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c1) IS FALSE), 0.8376736889206517) FULL OUTER JOIN rt1 ON (~ (((v0.c0)<<(rt0.c3)))) WHERE (((((((rt0.c3) BETWEEN (rt0.c4) AND (0.14810597742937637)))OR(((rt1.c1) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST(0.7225039167492626 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN (rt0.c4) AND (0.14810597742937637)))OR(((rt1.c1) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))<(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c1) IS FALSE), 0.8376736889206517) FULL OUTER JOIN rt1 ON (~ (((v0.c0)<<(rt0.c3)))) ORDER BY CAST(0.7225039167492626 AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))<(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c1) IS FALSE), 0.8376736889206517) FULL OUTER JOIN rt1 ON (~ (((v0.c0)<<(rt0.c3)))) WHERE (((((((rt0.c3) BETWEEN (rt0.c4) AND (0.14810597742937637)))OR(((rt1.c1) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST(0.7225039167492626 AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3) BETWEEN (rt0.c4) AND (0.14810597742937637)))OR(((rt1.c1) BETWEEN (NULL) AND (rt0.c1)))))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((CAST(rt0.c0 AS REAL))<(CASE WHEN rt1.c2 THEN rt0.c4 ELSE rt0.c0 END)) CROSS JOIN v0 ON LIKELIHOOD(DISTINCT ((rt1.c1) IS FALSE), 0.8376736889206517) FULL OUTER JOIN rt1 ON (~ (((v0.c0)<<(rt0.c3)))) ORDER BY CAST(0.7225039167492626 AS TEXT) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE (NOT (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (NOT (v0.c0)) THEN ((v0.c0)<(v0.c0)) ELSE (NOT (v0.c0)) END);
SELECT * FROM rt1, t0, rt0, v0 WHERE (rt1.c0) ORDER BY CAST(PRINTF(rt0.c3) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0, rt0 NOT INDEXED, v0 ORDER BY CAST(PRINTF(rt0.c3) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt1, t0, rt0, v0 WHERE (rt1.c0) ORDER BY CAST(PRINTF(rt0.c3) AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, t0, rt0 NOT INDEXED, v0 ORDER BY CAST(PRINTF(rt0.c3) AS INTEGER) ASC  NULLS LAST);
SELECT * FROM rt1, t0, rt0, v0 WHERE (rt1.c0) ORDER BY CAST(PRINTF(rt0.c3) AS INTEGER) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0X9c82bfd, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0x9c82bfd, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0X9c82bfd, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0x9c82bfd, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((0X9c82bfd, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))));
SELECT * FROM rt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ())) ORDER BY (((rt1.c4)IS(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)IS(rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ())) ORDER BY (((rt1.c4)IS(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 IN (rt1.c1)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)IS(rt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (((rt1.c2 IN (rt1.c1)) IN ())) ORDER BY (((rt1.c4)IS(rt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (t0.c0 IN (rt1.c1)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT (t0.c0 IN (rt1.c1)))) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (TYPEOF(DISTINCT (t0.c0 IN (rt1.c1))));
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))-(((t0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0)))-(((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))-(((t0.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0)))-(((t0.c0)||(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 IN (t0.c0)))-(((t0.c0)||(t0.c0)))));
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((~ (((rt1.c4) IS FALSE)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (rt1.c1) AND (((83975470) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (rt1.c1) AND (((83975470) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((~ (((rt1.c4) IS FALSE)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (rt1.c1) AND (((83975470) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM t0, rt0, rt1, v0 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (rt1.c1) AND (((83975470) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0, rt1, v0 WHERE ((~ (((rt1.c4) IS FALSE)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (rt1.c1) AND (((83975470) BETWEEN (rt1.c0) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt1, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (((((rt1.c3))<>((rt1.c0))))OR(((((((((x'')OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c3))!=((rt1.c0))))OR(((((((((x'')OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (((((rt1.c3))<>((rt1.c0))))OR(((((((((x'')OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt1.c3))!=((rt1.c0))))OR(((((((((x'')OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2)))) ASC  NULLS LAST);
SELECT * FROM rt1, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (((((rt1.c3))<>((rt1.c0))))OR(((((((((x'')OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))AND(rt1.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT NULL) COLLATE NOCASE CROSS JOIN v0 ON (~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) CROSS JOIN t0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CASE rt1.c4  WHEN CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN LIKELY(rt0.c0) END) ORDER BY (NOT (((rt0.c4)IS(rt1.c1)))) ASC, ((rt0.c2)/(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN LIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT NULL) COLLATE NOCASE CROSS JOIN v0 ON (~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) CROSS JOIN t0 ON (NOT (v0.c0 COLLATE BINARY)) ORDER BY (NOT (((rt0.c4)IS(rt1.c1)))) ASC, ((rt0.c2)/(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT NULL) COLLATE NOCASE CROSS JOIN v0 ON (~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) CROSS JOIN t0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CASE rt1.c4  WHEN CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN LIKELY(rt0.c0) END) ORDER BY (NOT (((rt0.c4)IS(rt1.c1)))) ASC, ((rt0.c2)/(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c4  WHEN CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN LIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT NULL) COLLATE NOCASE CROSS JOIN v0 ON (~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) CROSS JOIN t0 ON (NOT (v0.c0 COLLATE BINARY)) ORDER BY (NOT (((rt0.c4)IS(rt1.c1)))) ASC, ((rt0.c2)/(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))))  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN rt1 ON ((rt1.c1) NOT NULL) COLLATE NOCASE CROSS JOIN v0 ON (~ ((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))) CROSS JOIN t0 ON (NOT (v0.c0 COLLATE BINARY)) WHERE (CASE rt1.c4  WHEN CASE rt1.c3  WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt1.c3 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END THEN LIKELY(rt0.c0) END) ORDER BY (NOT (((rt0.c4)IS(rt1.c1)))) ASC, ((rt0.c2)/(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))))  NULLS LAST;
SELECT ALL * FROM v0, t0, rt0 INNER JOIN rt1 ON CASE (((rt0.c3, '-723380223', t0.c0)) NOT BETWEEN ((rt1.c2, rt0.c3, t0.c0)) AND (('-974083155', rt1.c0, rt0.c0)))  WHEN rt1.c2 THEN json_type(rt1.c0) WHEN (((rt1.c4, rt1.c4, rt0.c0))<((rt1.c2, rt1.c4, rt1.c4))) THEN rt1.c3 COLLATE RTRIM WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((((((((((((rt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR('0.06277247141931463')))AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c2)) END WHERE ((((rt0.c2 IN (rt1.c4, rt1.c2)))GLOB((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt1.c4, rt1.c2)))GLOB((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, t0, rt0 INNER JOIN rt1 ON CASE (((rt0.c3, '-723380223', t0.c0)) NOT BETWEEN ((rt1.c2, rt0.c3, t0.c0)) AND (('-974083155', rt1.c0, rt0.c0)))  WHEN rt1.c2 THEN json_type(rt1.c0) WHEN (((rt1.c4, rt1.c4, rt0.c0))<((rt1.c2, rt1.c4, rt1.c4))) THEN rt1.c3 COLLATE RTRIM WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((((((((((((rt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR('0.06277247141931463')))AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c2)) END);
SELECT ALL * FROM v0, t0, rt0 INNER JOIN rt1 ON CASE (((rt0.c3, '-723380223', t0.c0)) NOT BETWEEN ((rt1.c2, rt0.c3, t0.c0)) AND (('-974083155', rt1.c0, rt0.c0)))  WHEN rt1.c2 THEN json_type(rt1.c0) WHEN (((rt1.c4, rt1.c4, rt0.c0))<((rt1.c2, rt1.c4, rt1.c4))) THEN rt1.c3 COLLATE RTRIM WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((((((((((((rt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR('0.06277247141931463')))AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c2)) END WHERE ((((rt0.c2 IN (rt1.c4, rt1.c2)))GLOB((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN (rt1.c4, rt1.c2)))GLOB((rt1.c1 IN ())))) IS TRUE)  as count FROM v0, t0, rt0 INNER JOIN rt1 ON CASE (((rt0.c3, '-723380223', t0.c0)) NOT BETWEEN ((rt1.c2, rt0.c3, t0.c0)) AND (('-974083155', rt1.c0, rt0.c0)))  WHEN rt1.c2 THEN json_type(rt1.c0) WHEN (((rt1.c4, rt1.c4, rt0.c0))<((rt1.c2, rt1.c4, rt1.c4))) THEN rt1.c3 COLLATE RTRIM WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((((((((((((rt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR('0.06277247141931463')))AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c2)) END);
SELECT ALL * FROM v0, t0, rt0 INNER JOIN rt1 ON CASE (((rt0.c3, '-723380223', t0.c0)) NOT BETWEEN ((rt1.c2, rt0.c3, t0.c0)) AND (('-974083155', rt1.c0, rt0.c0)))  WHEN rt1.c2 THEN json_type(rt1.c0) WHEN (((rt1.c4, rt1.c4, rt0.c0))<((rt1.c2, rt1.c4, rt1.c4))) THEN rt1.c3 COLLATE RTRIM WHEN rt0.c2 COLLATE BINARY THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) ELSE ((((((((((((rt1.c0)AND(rt0.c4)))OR(rt0.c2)))OR('0.06277247141931463')))AND(rt1.c0)))OR(rt1.c4)))AND(rt0.c2)) END WHERE ((((rt0.c2 IN (rt1.c4, rt1.c2)))GLOB((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))OR((rt1.c3 IN ()))))AND((~ (rt1.c4)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))OR((rt1.c3 IN ()))))AND((~ (rt1.c4)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))OR((rt1.c3 IN ()))))AND((~ (rt1.c4)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))OR((rt1.c3 IN ()))))AND((~ (rt1.c4)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)))AND(((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c4)))))OR((rt1.c3 IN ()))))AND((~ (rt1.c4)))))AND(CASE WHEN rt1.c0 THEN rt1.c0 END)));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON (((((v0.c0))>((rt1.c1)))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('7&mgtC'))))) WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON (((((v0.c0))>((rt1.c1)))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('7&mgtC'))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON (((((v0.c0))>((rt1.c1)))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('7&mgtC'))))) WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1 CROSS JOIN v0 ON (((((v0.c0))>((rt1.c1)))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('7&mgtC'))))));
SELECT COUNT(*) FROM rt1 CROSS JOIN v0 ON (((((v0.c0))>((rt1.c1)))) BETWEEN (((rt1.c3)>=(rt1.c1))) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND (('7&mgtC'))))) WHERE (CAST(v0.c0 AS NUMERIC) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((rt0.c4) ISNULL) IN (CAST('\_E' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) ISNULL) IN (CAST('\_E' AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c4) ISNULL) IN (CAST('\_E' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((rt0.c4) ISNULL) IN (CAST('\_E' AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c4) ISNULL) IN (CAST('\_E' AS NUMERIC))));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(v0.c0 COLLATE NOCASE AS REAL));
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (((v0.c0) NOT NULL)))) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((- (rt1.c3)))))AND(rt1.c1))) ORDER BY CAST(((v0.c0)/(0xffffffffd36693dd)) AS BLOB) ASC  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS BLOB))OR((- (rt1.c3)))))AND(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY CAST(((v0.c0)/(0xffffffffd36693dd)) AS BLOB) ASC  NULLS LAST, rt0.c0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((- (rt1.c3)))))AND(rt1.c1))) ORDER BY CAST(((v0.c0)/(0xffffffffd36693dd)) AS BLOB) ASC  NULLS LAST, rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS BLOB))OR((- (rt1.c3)))))AND(rt1.c1))) IS TRUE)  as count FROM v0, rt1, rt0, t0 ORDER BY CAST(((v0.c0)/(0xffffffffd36693dd)) AS BLOB) ASC  NULLS LAST, rt0.c0);
SELECT ALL * FROM v0, rt1, rt0, t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((- (rt1.c3)))))AND(rt1.c1))) ORDER BY CAST(((v0.c0)/(0xffffffffd36693dd)) AS BLOB) ASC  NULLS LAST, rt0.c0;
SELECT * FROM rt1, v0, t0, rt0 WHERE ((((CAST(rt1.c0 AS REAL)))>=((((rt1.c4)*(v0.c0)))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS REAL)))>=((((rt1.c4)*(v0.c0)))))) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM rt1, v0, t0, rt0 WHERE ((((CAST(rt1.c0 AS REAL)))>=((((rt1.c4)*(v0.c0)))))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS REAL)))>=((((rt1.c4)*(v0.c0)))))) IS TRUE)  as count FROM rt1, v0, t0, rt0 ORDER BY x''  NULLS LAST);
SELECT * FROM rt1, v0, t0, rt0 WHERE ((((CAST(rt1.c0 AS REAL)))>=((((rt1.c4)*(v0.c0)))))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (((x'5128')==((NOT (t0.c0))))) ORDER BY CAST(((rt1.c2) ISNULL) AS BLOB) DESC, ((((rt1.c0)AND(t0.c0)))OR(((rt1.c1)<(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'5128')==((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(((rt1.c2) ISNULL) AS BLOB) DESC, ((((rt1.c0)AND(t0.c0)))OR(((rt1.c1)<(rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((x'5128')==((NOT (t0.c0))))) ORDER BY CAST(((rt1.c2) ISNULL) AS BLOB) DESC, ((((rt1.c0)AND(t0.c0)))OR(((rt1.c1)<(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'5128')==((NOT (t0.c0))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(((rt1.c2) ISNULL) AS BLOB) DESC, ((((rt1.c0)AND(t0.c0)))OR(((rt1.c1)<(rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM t0, rt1 WHERE (((x'5128')==((NOT (t0.c0))))) ORDER BY CAST(((rt1.c2) ISNULL) AS BLOB) DESC, ((((rt1.c0)AND(t0.c0)))OR(((rt1.c1)<(rt1.c0))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c4) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c4) NOT NULL) COLLATE BINARY);
SELECT ALL * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.08520335604331641 END)<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN ((t0.c0)*(v0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN UPPER(t0.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN LOWER(DISTINCT v0.c0) THEN CAST(t0.c0 AS TEXT) ELSE (('-1490677176') NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.08520335604331641 END)<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN ((t0.c0)*(v0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN UPPER(t0.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN LOWER(DISTINCT v0.c0) THEN CAST(t0.c0 AS TEXT) ELSE (('-1490677176') NOT NULL) END DESC);
SELECT ALL * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.08520335604331641 END)<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN ((t0.c0)*(v0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN UPPER(t0.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN LOWER(DISTINCT v0.c0) THEN CAST(t0.c0 AS TEXT) ELSE (('-1490677176') NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.08520335604331641 END)<(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN ((t0.c0)*(v0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN UPPER(t0.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN LOWER(DISTINCT v0.c0) THEN CAST(t0.c0 AS TEXT) ELSE (('-1490677176') NOT NULL) END DESC);
SELECT ALL * FROM t0, v0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN 0.08520335604331641 END)<(v0.c0 COLLATE RTRIM))) ORDER BY ((((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) ISNULL) ASC  NULLS FIRST, CASE WHEN ((t0.c0)*(v0.c0)) THEN (t0.c0 IN (t0.c0)) WHEN UPPER(t0.c0) THEN CAST(t0.c0 AS NUMERIC) WHEN LOWER(DISTINCT v0.c0) THEN CAST(t0.c0 AS TEXT) ELSE (('-1490677176') NOT NULL) END DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN t0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN t0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) ORDER BY ((rt0.c3) IS FALSE) COLLATE NOCASE;
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c3) AND (x'43ac7903'))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0))) AND (((((0Xffffffffee560f69)OR(rt0.c2)))OR(rt1.c4))))) ORDER BY 0.6298192042675416, CASE (NOT (rt0.c3))  WHEN (- (rt1.c4)) THEN (('?H3')IS(rt0.c4)) ELSE ((((rt0.c4)AND(rt1.c0)))OR(v0.c0)) END  NULLS FIRST, ((CAST(rt1.c1 AS INTEGER))==(SQLITE_COMPILEOPTION_GET(rt0.c4))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt0.c3) AND (x'43ac7903'))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0))) AND (((((0xffffffffee560f69)OR(rt0.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY 0.6298192042675416, CASE (NOT (rt0.c3))  WHEN (- (rt1.c4)) THEN (('?H3')IS(rt0.c4)) ELSE ((((rt0.c4)AND(rt1.c0)))OR(v0.c0)) END  NULLS FIRST, ((CAST(rt1.c1 AS INTEGER))=(SQLITE_COMPILEOPTION_GET(rt0.c4))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c3) AND (x'43ac7903'))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0))) AND (((((0Xffffffffee560f69)OR(rt0.c2)))OR(rt1.c4))))) ORDER BY 0.6298192042675416, CASE (NOT (rt0.c3))  WHEN (- (rt1.c4)) THEN (('?H3')IS(rt0.c4)) ELSE ((((rt0.c4)AND(rt1.c0)))OR(v0.c0)) END  NULLS FIRST, ((CAST(rt1.c1 AS INTEGER))==(SQLITE_COMPILEOPTION_GET(rt0.c4))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) BETWEEN (rt0.c3) AND (x'43ac7903'))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0))) AND (((((0xffffffffee560f69)OR(rt0.c2)))OR(rt1.c4))))) IS TRUE)  as count FROM v0, rt0, rt1 ORDER BY 0.6298192042675416, CASE (NOT (rt0.c3))  WHEN (- (rt1.c4)) THEN (('?H3')IS(rt0.c4)) ELSE ((((rt0.c4)AND(rt1.c0)))OR(v0.c0)) END  NULLS FIRST, ((CAST(rt1.c1 AS INTEGER))=(SQLITE_COMPILEOPTION_GET(rt0.c4))) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt0.c3) AND (x'43ac7903'))) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c0) AND (v0.c0))) AND (((((0Xffffffffee560f69)OR(rt0.c2)))OR(rt1.c4))))) ORDER BY 0.6298192042675416, CASE (NOT (rt0.c3))  WHEN (- (rt1.c4)) THEN (('?H3')IS(rt0.c4)) ELSE ((((rt0.c4)AND(rt1.c0)))OR(v0.c0)) END  NULLS FIRST, ((CAST(rt1.c1 AS INTEGER))==(SQLITE_COMPILEOPTION_GET(rt0.c4))) DESC  NULLS FIRST;
SELECT * FROM rt1, t0, rt0 INDEXED BY i31 WHERE ((((((((((((rt1.c2, rt0.c0, rt0.c0))>=((rt0.c0, rt1.c0, rt1.c4))))AND(((rt1.c1)<=(rt0.c3)))))OR((rt1.c2 IN (rt1.c4)))))AND((rt1.c3 IN ()))))AND((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2, rt0.c0, rt0.c0))>=((rt0.c0, rt1.c0, rt1.c4))))AND(((rt1.c1)<=(rt0.c3)))))OR((rt1.c2 IN (rt1.c4)))))AND((rt1.c3 IN ()))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 INDEXED BY i31);
SELECT * FROM rt1, t0, rt0 INDEXED BY i31 WHERE ((((((((((((rt1.c2, rt0.c0, rt0.c0))>=((rt0.c0, rt1.c0, rt1.c4))))AND(((rt1.c1)<=(rt0.c3)))))OR((rt1.c2 IN (rt1.c4)))))AND((rt1.c3 IN ()))))AND((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt1.c2, rt0.c0, rt0.c0))>=((rt0.c0, rt1.c0, rt1.c4))))AND(((rt1.c1)<=(rt0.c3)))))OR((rt1.c2 IN (rt1.c4)))))AND((rt1.c3 IN ()))))AND((NOT (rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0 INDEXED BY i31);
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (rt0.c3) AND (x''))) ORDER BY ((rt1.c4) NOTNULL) DESC  NULLS FIRST, ''  NULLS FIRST, ((rt0.c3)-(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT BETWEEN (rt0.c3) AND (x''))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY ((rt1.c4) NOTNULL) DESC  NULLS FIRST, ''  NULLS FIRST, ((rt0.c3)-(t0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (rt0.c3) AND (x''))) ORDER BY ((rt1.c4) NOTNULL) DESC  NULLS FIRST, ''  NULLS FIRST, ((rt0.c3)-(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT BETWEEN (rt0.c3) AND (x''))) IS TRUE)  as count FROM rt0, rt1, t0, v0 ORDER BY ((rt1.c4) NOTNULL) DESC  NULLS FIRST, ''  NULLS FIRST, ((rt0.c3)-(t0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t0, v0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN (rt0.c3) AND (x''))) ORDER BY ((rt1.c4) NOTNULL) DESC  NULLS FIRST, ''  NULLS FIRST, ((rt0.c3)-(t0.c0)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((0.9152074384198567 IN ())) ORDER BY CASE CAST(rt0.c3 AS BLOB)  WHEN CAST(rt0.c1 AS REAL) THEN x'54a0' ELSE (((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((t0.c0, v0.c0, rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.9152074384198567 IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY CASE CAST(rt0.c3 AS BLOB)  WHEN CAST(rt0.c1 AS REAL) THEN x'54a0' ELSE (((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((t0.c0, v0.c0, rt0.c1))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((0.9152074384198567 IN ())) ORDER BY CASE CAST(rt0.c3 AS BLOB)  WHEN CAST(rt0.c1 AS REAL) THEN x'54a0' ELSE (((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((t0.c0, v0.c0, rt0.c1))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.9152074384198567 IN ())) IS TRUE)  as count FROM rt0, v0, t0 ORDER BY CASE CAST(rt0.c3 AS BLOB)  WHEN CAST(rt0.c1 AS REAL) THEN x'54a0' ELSE (((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((t0.c0, v0.c0, rt0.c1))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, t0 WHERE ((0.9152074384198567 IN ())) ORDER BY CASE CAST(rt0.c3 AS BLOB)  WHEN CAST(rt0.c1 AS REAL) THEN x'54a0' ELSE (((v0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((t0.c0, v0.c0, rt0.c1))) END  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN rt1 ON TRIM(DISTINCT ((rt1.c0) IS FALSE), UPPER(DISTINCT rt1.c3)) WHERE (0xffffffffcb79112d);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffcb79112d) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON TRIM(DISTINCT ((rt1.c0) IS FALSE), UPPER(DISTINCT rt1.c3)));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON TRIM(DISTINCT ((rt1.c0) IS FALSE), UPPER(DISTINCT rt1.c3)) WHERE (0xffffffffcb79112d);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffcb79112d) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt1 ON TRIM(DISTINCT ((rt1.c0) IS FALSE), UPPER(DISTINCT rt1.c3)));
SELECT * FROM v0 FULL OUTER JOIN rt1 ON TRIM(DISTINCT ((rt1.c0) IS FALSE), UPPER(DISTINCT rt1.c3)) WHERE (0xffffffffcb79112d);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (CAST((((rt1.c1, rt1.c4, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((rt1.c4, rt1.c4, rt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1, rt1.c4, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((rt1.c4, rt1.c4, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (CAST((((rt1.c1, rt1.c4, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((rt1.c4, rt1.c4, rt1.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1, rt1.c4, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((rt1.c4, rt1.c4, rt1.c0))) AS TEXT)) IS TRUE)  as count FROM rt1, t0, v0);
SELECT ALL COUNT(*) FROM rt1, t0, v0 WHERE (CAST((((rt1.c1, rt1.c4, rt1.c1)) NOT BETWEEN ((t0.c0, v0.c0, t0.c0)) AND ((rt1.c4, rt1.c4, rt1.c0))) AS TEXT));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0))<=((rt1.c0))))&((((rt1.c4, rt1.c1, rt1.c0, 0xffffffffe0c0292a, t0.c0)) BETWEEN ((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c4, t0.c0, t0.c0)))))) ORDER BY (((rt1.c2, t0.c0, t0.c0)) BETWEEN ((CASE WHEN 0xffffffffa7261248 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN t0.c0 THEN t0.c0 WHEN '-721410803' THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND (((rt1.c1 IN ()), ((((rt1.c3)AND(t0.c0)))AND(rt1.c4)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((rt1.c0))))&((((rt1.c4, rt1.c1, rt1.c0, 0Xffffffffe0c0292a, t0.c0)) BETWEEN ((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c4, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c2, t0.c0, t0.c0)) BETWEEN ((CASE WHEN 0Xffffffffa7261248 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN t0.c0 THEN t0.c0 WHEN '-721410803' THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND (((rt1.c1 IN ()), ((((rt1.c3)AND(t0.c0)))AND(rt1.c4)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0))<=((rt1.c0))))&((((rt1.c4, rt1.c1, rt1.c0, 0xffffffffe0c0292a, t0.c0)) BETWEEN ((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c4, t0.c0, t0.c0)))))) ORDER BY (((rt1.c2, t0.c0, t0.c0)) BETWEEN ((CASE WHEN 0xffffffffa7261248 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN t0.c0 THEN t0.c0 WHEN '-721410803' THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND (((rt1.c1 IN ()), ((((rt1.c3)AND(t0.c0)))AND(rt1.c4)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<=((rt1.c0))))&((((rt1.c4, rt1.c1, rt1.c0, 0Xffffffffe0c0292a, t0.c0)) BETWEEN ((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c4, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY (((rt1.c2, t0.c0, t0.c0)) BETWEEN ((CASE WHEN 0Xffffffffa7261248 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN t0.c0 THEN t0.c0 WHEN '-721410803' THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND (((rt1.c1 IN ()), ((((rt1.c3)AND(t0.c0)))AND(rt1.c4)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END))));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0))<=((rt1.c0))))&((((rt1.c4, rt1.c1, rt1.c0, 0xffffffffe0c0292a, t0.c0)) BETWEEN ((rt1.c3, rt1.c3, rt1.c1, rt1.c0, rt1.c0)) AND ((rt1.c3, rt1.c2, rt1.c4, t0.c0, t0.c0)))))) ORDER BY (((rt1.c2, t0.c0, t0.c0)) BETWEEN ((CASE WHEN 0xffffffffa7261248 THEN rt1.c0 END, ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)), CASE rt1.c2  WHEN t0.c0 THEN t0.c0 WHEN '-721410803' THEN t0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND (((rt1.c1 IN ()), ((((rt1.c3)AND(t0.c0)))AND(rt1.c4)), CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS FALSE)) ORDER BY (rt0.c1 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 ORDER BY (rt0.c1 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS FALSE)) ORDER BY (rt0.c1 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON rt0.c1 ORDER BY (rt0.c1 IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON rt0.c1 WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) IS FALSE)) ORDER BY (rt0.c1 IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0 WHERE ((- (SQLITE_COMPILEOPTION_GET(rt1.c3))));
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_GET(rt1.c3)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((- (SQLITE_COMPILEOPTION_GET(rt1.c3))));
SELECT SUM(count) FROM (SELECT (((- (SQLITE_COMPILEOPTION_GET(rt1.c3)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE ((- (SQLITE_COMPILEOPTION_GET(rt1.c3))));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((0.13032296567250856)AND((('R*\Ca')<=(rt0.c0)))))AND(x'd891')) WHERE (((- ('1008141481')) IN ()));
SELECT SUM(count) FROM (SELECT ((((- ('1008141481')) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((0.13032296567250856)AND((('R*\Ca')<=(rt0.c0)))))AND(x'd891')));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((0.13032296567250856)AND((('R*\Ca')<=(rt0.c0)))))AND(x'd891')) WHERE (((- ('1008141481')) IN ()));
SELECT SUM(count) FROM (SELECT ((((- ('1008141481')) IN ())) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((0.13032296567250856)AND((('R*\Ca')<=(rt0.c0)))))AND(x'd891')));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((0.13032296567250856)AND((('R*\Ca')<=(rt0.c0)))))AND(x'd891')) WHERE (((- ('1008141481')) IN ()));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(x'')))AND(rt1.c1)))OR(t0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt1.c4)<>(rt1.c1))))) ORDER BY ((CASE NULL  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c0)%(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(x'')))AND(rt1.c1)))OR(t0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt1.c4)<>(rt1.c1))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CASE NULL  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c0)%(rt1.c3)))));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(x'')))AND(rt1.c1)))OR(t0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt1.c4)<>(rt1.c1))))) ORDER BY ((CASE NULL  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c0)%(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)AND(t0.c0)))OR(x'')))AND(rt1.c1)))OR(t0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt1.c4)<>(rt1.c1))))) IS TRUE)  as count FROM t0, v0, rt1 ORDER BY ((CASE NULL  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c0)%(rt1.c3)))));
SELECT ALL * FROM t0, v0, rt1 WHERE (((((((((((t0.c0)AND(t0.c0)))OR(x'')))AND(rt1.c1)))OR(t0.c0))) BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt1.c4)<>(rt1.c1))))) ORDER BY ((CASE NULL  WHEN rt1.c3 THEN v0.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c4) NOTNULL)) AND (((rt1.c0)%(rt1.c3))));
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (('0.08520335604331641' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('0.08520335604331641' IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (('0.08520335604331641' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('0.08520335604331641' IN ())) IS TRUE)  as count FROM rt1, rt0, v0);
SELECT COUNT(*) FROM rt1, rt0, v0 WHERE (('0.08520335604331641' IN ()));
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)OR(rt1.c3)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(rt1.c3)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)OR(rt1.c3)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(rt1.c3)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3))))) IS TRUE)  as count FROM v0, rt1);
SELECT ALL * FROM v0, rt1 WHERE (((((rt1.c3)OR(rt1.c3)))LIKE(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c3)))));
SELECT * FROM rt0, t0, v0, rt1 WHERE (CASE WHEN ((t0.c0) NOT NULL) THEN (+ (rt1.c3)) ELSE CASE WHEN v0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN '-513902597' END END) ORDER BY (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) AND ((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT NULL) THEN (+ (rt1.c3)) ELSE CASE WHEN v0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN '-513902597' END END) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) AND ((NULL)))  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1 WHERE (CASE WHEN ((t0.c0) NOT NULL) THEN (+ (rt1.c3)) ELSE CASE WHEN v0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN '-513902597' END END) ORDER BY (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) AND ((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0) NOT NULL) THEN (+ (rt1.c3)) ELSE CASE WHEN v0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN '-513902597' END END) IS TRUE)  as count FROM rt0, t0, v0, rt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) AND ((NULL)))  NULLS LAST);
SELECT * FROM rt0, t0, v0, rt1 WHERE (CASE WHEN ((t0.c0) NOT NULL) THEN (+ (rt1.c3)) ELSE CASE WHEN v0.c0 THEN rt0.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN '-513902597' END END) ORDER BY (((rt0.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)))) AND ((NULL)))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (('') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (((0.6161256456209602)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.6161256456209602)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (('') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (('') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (((0.6161256456209602)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.6161256456209602)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (('') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))));
SELECT * FROM rt0 FULL OUTER JOIN t0 ON (('') NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND (((rt0.c1) BETWEEN (t0.c0) AND (rt0.c3)))) WHERE (((0.6161256456209602)GLOB(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM rt0 WHERE (((CHANGES())&(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())&(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CHANGES())&(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES())&(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CHANGES())&(CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 END)));
SELECT ALL * FROM rt1, v0, t0 WHERE (((IFNULL(DISTINCT t0.c0, v0.c0))&(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c0, v0.c0))&(v0.c0))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (((IFNULL(DISTINCT t0.c0, v0.c0))&(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c0, v0.c0))&(v0.c0))) IS TRUE)  as count FROM rt1, v0, t0);
SELECT ALL * FROM rt1, v0, t0 WHERE (((IFNULL(DISTINCT t0.c0, v0.c0))&(v0.c0)));
SELECT ALL * FROM rt1, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 NOT INDEXED, rt0, v0);
SELECT ALL * FROM rt1, rt0, v0 WHERE (rt0.c1);
SELECT COUNT(*) FROM t0, v0, rt1, rt0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c2)) AS REAL)) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT COUNT(*) FROM t0, v0, rt1, rt0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c2 IN (rt1.c2)) AS REAL)) IS TRUE)  as count FROM t0, v0, rt1, rt0);
SELECT COUNT(*) FROM t0, v0, rt1, rt0 WHERE (CAST((rt1.c2 IN (rt1.c2)) AS REAL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((((v0.c0)<=(0.5297595478527756)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((((v0.c0)<=(0.5297595478527756)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((((v0.c0)<=(0.5297595478527756)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((((v0.c0)<=(0.5297595478527756)))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((((v0.c0)GLOB(v0.c0)))) AND ((((v0.c0)<=(0.5297595478527756)))))) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)  NULLS FIRST;
SELECT * FROM rt1, v0 RIGHT OUTER JOIN t0 ON (((('') NOT BETWEEN (rt1.c2) AND (-1721356798)))==(((rt1.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON 2275922.0 WHERE (((x'' COLLATE BINARY) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (x''))))) ORDER BY COALESCE(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c3))), ((rt1.c3) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (x''))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON (((('') NOT BETWEEN (rt1.c2) AND (-1721356798)))==(((rt1.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON 2275922.0 ORDER BY COALESCE(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c3))), ((rt1.c3) NOTNULL)) DESC);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN t0 ON (((('') NOT BETWEEN (rt1.c2) AND (-1721356798)))==(((rt1.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON 2275922.0 WHERE (((x'' COLLATE BINARY) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (x''))))) ORDER BY COALESCE(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c3))), ((rt1.c3) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (x''))))) IS TRUE)  as count FROM rt1, v0 RIGHT OUTER JOIN t0 ON (((('') NOT BETWEEN (rt1.c2) AND (-1721356798)))==(((rt1.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON 2275922.0 ORDER BY COALESCE(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c3))), ((rt1.c3) NOTNULL)) DESC);
SELECT * FROM rt1, v0 RIGHT OUTER JOIN t0 ON (((('') NOT BETWEEN (rt1.c2) AND (-1721356798)))==(((rt1.c1) IS TRUE))) LEFT OUTER JOIN rt0 ON 2275922.0 WHERE (((x'' COLLATE BINARY) BETWEEN (CAST(rt1.c4 AS BLOB)) AND (((rt0.c4) BETWEEN (rt0.c2) AND (x''))))) ORDER BY COALESCE(DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c3))), ((rt1.c3) NOTNULL)) DESC;
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt1.c3) IS TRUE))AND(rt1.c2 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((((rt0.c0, rt1.c2, v0.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt0.c1))))))OR(((rt1.c3) BETWEEN (rt0.c2) AND (v0.c0)))))AND(COALESCE(rt0.c1, rt1.c2, t0.c0, rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) IS TRUE))AND(rt1.c2 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY ((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((((rt0.c0, rt1.c2, v0.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt0.c1))))))OR(((rt1.c3) BETWEEN (rt0.c2) AND (v0.c0)))))AND(COALESCE(rt0.c1, rt1.c2, t0.c0, rt1.c3))));
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt1.c3) IS TRUE))AND(rt1.c2 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((((rt0.c0, rt1.c2, v0.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt0.c1))))))OR(((rt1.c3) BETWEEN (rt0.c2) AND (v0.c0)))))AND(COALESCE(rt0.c1, rt1.c2, t0.c0, rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3) IS TRUE))AND(rt1.c2 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, rt1, t0 ORDER BY ((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((((rt0.c0, rt1.c2, v0.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt0.c1))))))OR(((rt1.c3) BETWEEN (rt0.c2) AND (v0.c0)))))AND(COALESCE(rt0.c1, rt1.c2, t0.c0, rt1.c3))));
SELECT * FROM rt0, v0, rt1, t0 WHERE (((((((rt1.c3) IS TRUE))AND(rt1.c2 COLLATE BINARY)))AND(CAST(t0.c0 AS TEXT)))) ORDER BY ((((((((CAST(rt0.c0 AS REAL))AND(((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c3)))))AND((((rt0.c0, rt1.c2, v0.c0)) BETWEEN ((rt0.c2, rt1.c2, rt1.c0)) AND ((rt1.c0, rt1.c2, rt0.c1))))))OR(((rt1.c3) BETWEEN (rt0.c2) AND (v0.c0)))))AND(COALESCE(rt0.c1, rt1.c2, t0.c0, rt1.c3)));
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))>(((t0.c0)>>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) ISNULL))>(((t0.c0)>>(v0.c0)))) DESC);
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))>(((t0.c0)>>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) ISNULL))>(((t0.c0)>>(v0.c0)))) DESC);
SELECT ALL * FROM v0, t0 WHERE (v0.c0) ORDER BY ((((v0.c0) ISNULL))>(((t0.c0)>>(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c0)GLOB(v0.c0)) THEN (((((((('3A')OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)GLOB(v0.c0)) THEN (((((((('3A')OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c0)GLOB(v0.c0)) THEN (((((((('3A')OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)GLOB(v0.c0)) THEN (((((((('3A')OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN ((t0.c0)GLOB(v0.c0)) THEN (((((((('3A')OR(t0.c0)))AND(t0.c0)))OR(v0.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON ABS('\nN') WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))<=((((rt1.c4)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))<=((((rt1.c4)LIKE(rt1.c3)))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ABS('\nN'));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON ABS('\nN') WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))<=((((rt1.c4)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))<=((((rt1.c4)LIKE(rt1.c3)))))) IS TRUE)  as count FROM v0 INNER JOIN rt1 ON ABS('\nN'));
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt1 ON ABS('\nN') WHERE ((((((rt1.c2) BETWEEN (rt1.c1) AND (v0.c0))))<=((((rt1.c4)LIKE(rt1.c3))))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE BINARY)IS(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)IS(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE BINARY)IS(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)IS(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c2 COLLATE BINARY)IS(((rt0.c3) NOTNULL))));
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST('1103491106' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1103491106' AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST('1103491106' AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST('1103491106' AS NUMERIC)) IS TRUE)  as count FROM v0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt1, t0 WHERE (CAST('1103491106' AS NUMERIC));
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.06537815853563655);
SELECT SUM(count) FROM (SELECT ((0.06537815853563655) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.06537815853563655);
SELECT SUM(count) FROM (SELECT ((0.06537815853563655) IS TRUE)  as count FROM rt0, rt1, t0);
SELECT ALL * FROM rt0, rt1, t0 WHERE (0.06537815853563655);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (((rt0.c0)+(rt0.c4)))) CROSS JOIN rt1 ON ((rt0.c2)IS NOT(((rt1.c1)>>(rt0.c2)))) WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN ((rt1.c4)<(rt1.c3)) WHEN ((rt0.c1)-(rt1.c3)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CASE rt0.c1  WHEN '1103491106' THEN rt1.c0 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN ((rt1.c4)<(rt1.c3)) WHEN ((rt0.c1)-(rt1.c3)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CASE rt0.c1  WHEN '1103491106' THEN rt1.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (((rt0.c0)+(rt0.c4)))) CROSS JOIN rt1 ON ((rt0.c2)IS NOT(((rt1.c1)>>(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (((rt0.c0)+(rt0.c4)))) CROSS JOIN rt1 ON ((rt0.c2)IS NOT(((rt1.c1)>>(rt0.c2)))) WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN ((rt1.c4)<(rt1.c3)) WHEN ((rt0.c1)-(rt1.c3)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CASE rt0.c1  WHEN '1103491106' THEN rt1.c0 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN ((rt1.c4)<(rt1.c3)) WHEN ((rt0.c1)-(rt1.c3)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CASE rt0.c1  WHEN '1103491106' THEN rt1.c0 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (~ (((rt0.c0)+(rt0.c4)))) CROSS JOIN rt1 ON ((rt0.c2)IS NOT(((rt1.c1)>>(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (~ (((rt0.c0)+(rt0.c4)))) CROSS JOIN rt1 ON ((rt0.c2)IS NOT(((rt1.c1)>>(rt0.c2)))) WHERE (CASE WHEN ((rt1.c2)<=(rt1.c4)) THEN ((rt1.c4)<(rt1.c3)) WHEN ((rt0.c1)-(rt1.c3)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CASE rt0.c1  WHEN '1103491106' THEN rt1.c0 ELSE rt0.c1 END END);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c3)<(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(((rt0.c3)<(rt0.c1)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c3)<(rt0.c1))));
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i31, rt1 WHERE ('-296349847') ORDER BY rt0.c4 DESC  NULLS LAST, ((rt1.c3 COLLATE BINARY)!=(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-296349847') IS TRUE)  as count FROM rt0, t0 INDEXED BY i31, rt1 ORDER BY rt0.c4 DESC  NULLS LAST, ((rt1.c3 COLLATE BINARY)!=(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i31, rt1 WHERE ('-296349847') ORDER BY rt0.c4 DESC  NULLS LAST, ((rt1.c3 COLLATE BINARY)!=(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-296349847') IS TRUE)  as count FROM rt0, t0 INDEXED BY i31, rt1 ORDER BY rt0.c4 DESC  NULLS LAST, ((rt1.c3 COLLATE BINARY)!=(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 INDEXED BY i31, rt1 WHERE ('-296349847') ORDER BY rt0.c4 DESC  NULLS LAST, ((rt1.c3 COLLATE BINARY)!=(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)) ASC, CAST(t0.c0 AS NUMERIC) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c0)OR(rt0.c3)))|((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4)))))) ORDER BY (((((rt0.c3)IS(rt1.c4))))<((((((rt1.c1)AND(rt1.c4)))AND(rt0.c3)))))  NULLS LAST, CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt1.c3)) THEN rt0.c4 END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt0.c3)))|((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c3)IS(rt1.c4))))<((((((rt1.c1)AND(rt1.c4)))AND(rt0.c3)))))  NULLS LAST, CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt1.c3)) THEN rt0.c4 END DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c0)OR(rt0.c3)))|((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4)))))) ORDER BY (((((rt0.c3)IS(rt1.c4))))<((((((rt1.c1)AND(rt1.c4)))AND(rt0.c3)))))  NULLS LAST, CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt1.c3)) THEN rt0.c4 END DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(rt0.c3)))|((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((((rt0.c3)IS(rt1.c4))))<((((((rt1.c1)AND(rt1.c4)))AND(rt0.c3)))))  NULLS LAST, CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt1.c3)) THEN rt0.c4 END DESC);
SELECT ALL * FROM rt1, rt0 WHERE (((((rt1.c0)OR(rt0.c3)))|((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4)))))) ORDER BY (((((rt0.c3)IS(rt1.c4))))<((((((rt1.c1)AND(rt1.c4)))AND(rt0.c3)))))  NULLS LAST, CASE WHEN ((((rt0.c2)OR(rt0.c2)))AND(rt1.c3)) THEN rt0.c4 END DESC;
SELECT * FROM v0, t0 WHERE ((((- (t0.c0)))*(((t0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))*(((t0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((- (t0.c0)))*(((t0.c0)GLOB(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0)))*(((t0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((- (t0.c0)))*(((t0.c0)GLOB(v0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) THEN '2134656820' COLLATE NOCASE WHEN ((rt0.c2)%(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) END) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) ELSE (((rt0.c0))>((rt0.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) THEN '2134656820' COLLATE NOCASE WHEN ((rt0.c2)%(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) ELSE (((rt0.c0))>((rt0.c3))) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) THEN '2134656820' COLLATE NOCASE WHEN ((rt0.c2)%(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) END) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) ELSE (((rt0.c0))>((rt0.c3))) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) THEN '2134656820' COLLATE NOCASE WHEN ((rt0.c2)%(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) ELSE (((rt0.c0))>((rt0.c3))) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) THEN '2134656820' COLLATE NOCASE WHEN ((rt0.c2)%(rt0.c0)) THEN CAST(rt0.c1 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) END) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) ELSE (((rt0.c0))>((rt0.c3))) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (0.8333671923251867) ORDER BY ((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0)))OR(((t0.c0)&(t0.c0)))))OR(CAST(t0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8333671923251867) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0)))OR(((t0.c0)&(t0.c0)))))OR(CAST(t0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.8333671923251867) ORDER BY ((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0)))OR(((t0.c0)&(t0.c0)))))OR(CAST(t0.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.8333671923251867) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0)))OR(((t0.c0)&(t0.c0)))))OR(CAST(t0.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (0.8333671923251867) ORDER BY ((((((((((t0.c0)IS NOT(t0.c0)))AND(CAST(t0.c0 AS BLOB))))OR(t0.c0)))OR(((t0.c0)&(t0.c0)))))OR(CAST(t0.c0 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY (+ (CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, rt1, v0, t0 ORDER BY (+ (CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt1.c3 AS BLOB))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))=(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((x''))))==(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ ((((rt1.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c4, rt0.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c4, rt0.c2, rt1.c4)))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ ((((rt1.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c4, rt0.c2, rt1.c4))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt1.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c4, rt0.c2, rt1.c4)))))) IS TRUE)  as count FROM rt1, v0, rt0);
SELECT COUNT(*) FROM rt1, v0, rt0 WHERE ((~ ((((rt1.c4, rt0.c4, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c4)) AND ((rt1.c4, rt0.c2, rt1.c4))))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)%(t0.c0))) BETWEEN ((~ (''))) AND (((NULL) IS FALSE)))) ORDER BY (x'' IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END, ((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(t0.c0))) BETWEEN ((~ (''))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (x'' IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END, ((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)%(t0.c0))) BETWEEN ((~ (''))) AND (((NULL) IS FALSE)))) ORDER BY (x'' IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END, ((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(t0.c0))) BETWEEN ((~ (''))) AND (((NULL) IS FALSE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (x'' IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END, ((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((t0.c0)%(t0.c0))) BETWEEN ((~ (''))) AND (((NULL) IS FALSE)))) ORDER BY (x'' IN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END, ((v0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM v0 INDEXED BY i31 WHERE (((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR('')))AND(HEX(v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()) DESC, (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR('')))AND(HEX(v0.c0)))) IS TRUE)  as count FROM v0 INDEXED BY i31 ORDER BY ((+ (v0.c0)) IN ()) DESC, (v0.c0 IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i31 WHERE (((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR('')))AND(HEX(v0.c0)))) ORDER BY ((+ (v0.c0)) IN ()) DESC, (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR('')))AND(HEX(v0.c0)))) IS TRUE)  as count FROM v0 INDEXED BY i31 ORDER BY ((+ (v0.c0)) IN ()) DESC, (v0.c0 IN ()) ASC);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c4)>(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c4)>(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c4)>(rt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c4)>(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((rt1.c4)>(rt1.c0)) AS INTEGER));
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (((rt1.c2)==(rt0.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (((rt1.c2)=(rt0.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON x'');
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (((rt1.c2)==(rt0.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (((rt1.c2)=(rt0.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON x'');
SELECT ALL * FROM rt0 LEFT OUTER JOIN rt1 ON x'' WHERE (((CASE WHEN rt0.c3 THEN rt0.c2 END) BETWEEN (((rt1.c2)==(rt0.c3))) AND (CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END)));
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 AS BLOB));
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT)) ISNULL));
SELECT * FROM v0, rt0, rt1 WHERE (UPPER(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c4)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (UPPER(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(rt0.c4)) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT * FROM v0, rt0, rt1 WHERE (UPPER(rt0.c4));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY ((((x'' COLLATE BINARY)AND(CASE WHEN t0.c0 THEN '-1177273414' END)))OR((((t0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, t0.c0))))) DESC, (((t0.c0 IN ())) IS FALSE), CAST(((v0.c0)<<(t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((((x'' COLLATE BINARY)AND(CASE WHEN t0.c0 THEN '-1177273414' END)))OR((((t0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, t0.c0))))) DESC, (((t0.c0 IN ())) IS FALSE), CAST(((v0.c0)<<(t0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY ((((x'' COLLATE BINARY)AND(CASE WHEN t0.c0 THEN '-1177273414' END)))OR((((t0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, t0.c0))))) DESC, (((t0.c0 IN ())) IS FALSE), CAST(((v0.c0)<<(t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY ((((x'' COLLATE BINARY)AND(CASE WHEN t0.c0 THEN '-1177273414' END)))OR((((t0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, t0.c0))))) DESC, (((t0.c0 IN ())) IS FALSE), CAST(((v0.c0)<<(t0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE ((((((((((t0.c0)OR(t0.c0)))OR(NULL)))AND(v0.c0)))OR(v0.c0)) IN ())) ORDER BY ((((x'' COLLATE BINARY)AND(CASE WHEN t0.c0 THEN '-1177273414' END)))OR((((t0.c0, t0.c0, v0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c0, v0.c0, t0.c0))))) DESC, (((t0.c0 IN ())) IS FALSE), CAST(((v0.c0)<<(t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c1))))<>((0.4495794362051564)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c1))))!=((0.4495794362051564)))  NULLS FIRST);
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c1))))<>((0.4495794362051564)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, rt0 ORDER BY (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c1))))!=((0.4495794362051564)))  NULLS FIRST);
SELECT * FROM rt1, t0, rt0 WHERE (rt0.c1 COLLATE BINARY) ORDER BY (((((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c1))))<>((0.4495794362051564)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (TOTAL_CHANGES());
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND (((rt0.c3 IN ())))) RIGHT OUTER JOIN v0 ON 2275922.0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND (((rt0.c3 IN ())))) RIGHT OUTER JOIN v0 ON 2275922.0);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND (((rt0.c3 IN ())))) RIGHT OUTER JOIN v0 ON 2275922.0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND (((rt0.c3 IN ())))) RIGHT OUTER JOIN v0 ON 2275922.0);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN (((- (rt0.c3)))) AND (((rt0.c3 IN ())))) RIGHT OUTER JOIN v0 ON 2275922.0 WHERE ((CASE WHEN rt0.c2 THEN rt0.c4 ELSE t0.c0 END IN ()));
SELECT * FROM rt0, v0 WHERE (CASE rt0.c4  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c1)IS(0.5145563466894322)) END) ORDER BY CASE WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c1)IS(0.5145563466894322)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c4  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c1)IS(0.5145563466894322)) END) ORDER BY CASE WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c1)IS(0.5145563466894322)) END) IS TRUE)  as count FROM rt0, v0 ORDER BY CASE WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, v0 WHERE (CASE rt0.c4  WHEN (rt0.c4 IN (rt0.c4)) THEN ((rt0.c1)IS(0.5145563466894322)) END) ORDER BY CASE WHEN rt0.c4 THEN rt0.c0 END COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287);
SELECT SUM(count) FROM (SELECT ((0.19782231138273287) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287);
SELECT SUM(count) FROM (SELECT ((0.19782231138273287) IS TRUE)  as count FROM rt1, v0, t0, rt0);
SELECT COUNT(*) FROM rt1, v0, t0, rt0 WHERE (0.19782231138273287);
SELECT * FROM rt1 CROSS JOIN t0 ON CAST(((x'')*(rt1.c0)) AS BLOB) WHERE (TYPEOF((+ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt1.c4)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(((x'')*(rt1.c0)) AS BLOB));
SELECT * FROM rt1 CROSS JOIN t0 ON CAST(((x'')*(rt1.c0)) AS BLOB) WHERE (TYPEOF((+ (rt1.c4))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (rt1.c4)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST(((x'')*(rt1.c0)) AS BLOB));
SELECT * FROM rt1 CROSS JOIN t0 ON CAST(((x'')*(rt1.c0)) AS BLOB) WHERE (TYPEOF((+ (rt1.c4))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (3.15739802E8) ORDER BY (((v0.c0 IN ())) BETWEEN (((t0.c0)>>(v0.c0))) AND (TRIM(DISTINCT v0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((3.15739802E8) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0 IN ())) BETWEEN (((t0.c0)>>(v0.c0))) AND (TRIM(DISTINCT v0.c0, t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (3.15739802E8) ORDER BY (((v0.c0 IN ())) BETWEEN (((t0.c0)>>(v0.c0))) AND (TRIM(DISTINCT v0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((3.15739802E8) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c0 IN ())) BETWEEN (((t0.c0)>>(v0.c0))) AND (TRIM(DISTINCT v0.c0, t0.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (3.15739802E8) ORDER BY (((v0.c0 IN ())) BETWEEN (((t0.c0)>>(v0.c0))) AND (TRIM(DISTINCT v0.c0, t0.c0))) DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))) AND ((v0.c0 COLLATE NOCASE))));
SELECT ALL * FROM rt0, rt1, v0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(-916239992)) THEN CASE WHEN rt1.c1 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(-916239992)) THEN CASE WHEN rt1.c1 THEN rt0.c2 END ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(-916239992)) THEN CASE WHEN rt1.c1 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(-916239992)) THEN CASE WHEN rt1.c1 THEN rt0.c2 END ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0, rt1, v0);
SELECT ALL * FROM rt0, rt1, v0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(-916239992)) THEN CASE WHEN rt1.c1 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((((NULL)AND(rt0.c2)))AND(v0.c0)))||(((((rt0.c2)OR(v0.c0)))AND(NULL)))) LEFT OUTER JOIN t0 ON CAST(0.011253634565234316 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)<=(rt1.c1)))OR(((v0.c0)/(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((((CASE WHEN v0.c0 THEN NULL END, TRIM(DISTINCT rt0.c4, rt1.c1), (((rt1.c2, rt0.c4, rt1.c3))=((rt0.c4, 0Xffffffffcc609515, rt1.c1)))))<((((rt0.c1) NOTNULL), (v0.c0 IN ()), ((rt1.c0)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c0 THEN NULL END, TRIM(DISTINCT rt0.c4, rt1.c1), (((rt1.c2, rt0.c4, rt1.c3))==((rt0.c4, 0Xffffffffcc609515, rt1.c1)))))<((((rt0.c1) NOTNULL), (v0.c0 IN ()), ((rt1.c0)||(rt1.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((NULL)AND(rt0.c2)))AND(v0.c0)))||(((((rt0.c2)OR(v0.c0)))AND(NULL)))) LEFT OUTER JOIN t0 ON CAST(0.011253634565234316 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)<=(rt1.c1)))OR(((v0.c0)/(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON ((((((NULL)AND(rt0.c2)))AND(v0.c0)))||(((((rt0.c2)OR(v0.c0)))AND(NULL)))) LEFT OUTER JOIN t0 ON CAST(0.011253634565234316 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)<=(rt1.c1)))OR(((v0.c0)/(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) WHERE ((((CASE WHEN v0.c0 THEN NULL END, TRIM(DISTINCT rt0.c4, rt1.c1), (((rt1.c2, rt0.c4, rt1.c3))=((rt0.c4, 0Xffffffffcc609515, rt1.c1)))))<((((rt0.c1) NOTNULL), (v0.c0 IN ()), ((rt1.c0)||(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN v0.c0 THEN NULL END, TRIM(DISTINCT rt0.c4, rt1.c1), (((rt1.c2, rt0.c4, rt1.c3))==((rt0.c4, 0Xffffffffcc609515, rt1.c1)))))<((((rt0.c1) NOTNULL), (v0.c0 IN ()), ((rt1.c0)||(rt1.c2)))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON ((((((NULL)AND(rt0.c2)))AND(v0.c0)))||(((((rt0.c2)OR(v0.c0)))AND(NULL)))) LEFT OUTER JOIN t0 ON CAST(0.011253634565234316 AS NUMERIC) COLLATE RTRIM COLLATE RTRIM RIGHT OUTER JOIN v0 ON ((((((rt0.c0)<=(rt1.c1)))OR(((v0.c0)/(rt1.c2)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)))));
SELECT * FROM t0 CROSS JOIN v0 ON v0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST, ((((v0.c0 COLLATE RTRIM)AND((('0.1427574705696637') BETWEEN (v0.c0) AND (v0.c0)))))OR(t0.c0))  NULLS LAST, ((0xffffffff82ec85fe)LIKE(((v0.c0)-(NULL)))) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON v0.c0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST, ((((v0.c0 COLLATE RTRIM)AND((('0.1427574705696637') BETWEEN (v0.c0) AND (v0.c0)))))OR(t0.c0))  NULLS LAST, ((0xffffffff82ec85fe)LIKE(((v0.c0)-(NULL)))) DESC, x'');
SELECT * FROM t0 CROSS JOIN v0 ON v0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST, ((((v0.c0 COLLATE RTRIM)AND((('0.1427574705696637') BETWEEN (v0.c0) AND (v0.c0)))))OR(t0.c0))  NULLS LAST, ((0xffffffff82ec85fe)LIKE(((v0.c0)-(NULL)))) DESC, x'';
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON v0.c0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST, ((((v0.c0 COLLATE RTRIM)AND((('0.1427574705696637') BETWEEN (v0.c0) AND (v0.c0)))))OR(t0.c0))  NULLS LAST, ((0xffffffff82ec85fe)LIKE(((v0.c0)-(NULL)))) DESC, x'');
SELECT * FROM t0 CROSS JOIN v0 ON v0.c0 WHERE (((((t0.c0) NOT BETWEEN (t0.c0) AND (v0.c0))) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE t0.c0 END) IS FALSE)  NULLS FIRST, ((((v0.c0 COLLATE RTRIM)AND((('0.1427574705696637') BETWEEN (v0.c0) AND (v0.c0)))))OR(t0.c0))  NULLS LAST, ((0xffffffff82ec85fe)LIKE(((v0.c0)-(NULL)))) DESC, x'';
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN t0 ON CASE CASE WHEN rt1.c0 THEN rt1.c0 END  WHEN UPPER(DISTINCT rt0.c4) THEN CASE rt0.c1  WHEN 0x1951191c THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END WHEN ((rt0.c1)>(t0.c0)) THEN ((rt0.c0) IS FALSE) WHEN (((rt0.c2, rt0.c1, rt1.c2))=((rt1.c4, rt0.c3, x'2f2c'))) THEN (rt0.c0 IN (rt1.c1)) ELSE t0.c0 COLLATE NOCASE END WHERE (((CAST(rt0.c1 AS REAL))LIKE(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY rt0.c1 ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))LIKE(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN t0 ON CASE CASE WHEN rt1.c0 THEN rt1.c0 END  WHEN UPPER(DISTINCT rt0.c4) THEN CASE rt0.c1  WHEN 0x1951191c THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END WHEN ((rt0.c1)>(t0.c0)) THEN ((rt0.c0) IS FALSE) WHEN (((rt0.c2, rt0.c1, rt1.c2))=((rt1.c4, rt0.c3, x'2f2c'))) THEN (rt0.c0 IN (rt1.c1)) ELSE t0.c0 COLLATE NOCASE END ORDER BY rt0.c1 ASC, rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN t0 ON CASE CASE WHEN rt1.c0 THEN rt1.c0 END  WHEN UPPER(DISTINCT rt0.c4) THEN CASE rt0.c1  WHEN 0x1951191c THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END WHEN ((rt0.c1)>(t0.c0)) THEN ((rt0.c0) IS FALSE) WHEN (((rt0.c2, rt0.c1, rt1.c2))=((rt1.c4, rt0.c3, x'2f2c'))) THEN (rt0.c0 IN (rt1.c1)) ELSE t0.c0 COLLATE NOCASE END WHERE (((CAST(rt0.c1 AS REAL))LIKE(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY rt0.c1 ASC, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL))LIKE(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN t0 ON CASE CASE WHEN rt1.c0 THEN rt1.c0 END  WHEN UPPER(DISTINCT rt0.c4) THEN CASE rt0.c1  WHEN 0x1951191c THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END WHEN ((rt0.c1)>(t0.c0)) THEN ((rt0.c0) IS FALSE) WHEN (((rt0.c2, rt0.c1, rt1.c2))=((rt1.c4, rt0.c3, x'2f2c'))) THEN (rt0.c0 IN (rt1.c1)) ELSE t0.c0 COLLATE NOCASE END ORDER BY rt0.c1 ASC, rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN rt1 ON rt0.c2 INNER JOIN t0 ON CASE CASE WHEN rt1.c0 THEN rt1.c0 END  WHEN UPPER(DISTINCT rt0.c4) THEN CASE rt0.c1  WHEN 0x1951191c THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c2 END WHEN ((rt0.c1)>(t0.c0)) THEN ((rt0.c0) IS FALSE) WHEN (((rt0.c2, rt0.c1, rt1.c2))=((rt1.c4, rt0.c3, x'2f2c'))) THEN (rt0.c0 IN (rt1.c1)) ELSE t0.c0 COLLATE NOCASE END WHERE (((CAST(rt0.c1 AS REAL))LIKE(((rt1.c4) NOT BETWEEN (rt0.c2) AND (rt1.c2))))) ORDER BY rt0.c1 ASC, rt0.c0 ASC;
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((((x'fada1342') NOT BETWEEN (t0.c0) AND (rt1.c4))) IS TRUE)) ORDER BY -611045944 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'fada1342') NOT BETWEEN (t0.c0) AND (rt1.c4))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY -611045944 DESC  NULLS LAST);
SELECT * FROM t0 NATURAL JOIN rt1 WHERE (((((x'fada1342') NOT BETWEEN (t0.c0) AND (rt1.c4))) IS TRUE)) ORDER BY -611045944 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'fada1342') NOT BETWEEN (t0.c0) AND (rt1.c4))) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt1 ORDER BY -611045944 DESC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(LIKELY(DISTINCT rt1.c4)))) ORDER BY COALESCE(DISTINCT (- (t0.c0)), ((rt1.c0) NOT BETWEEN ('') AND (rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(LIKELY(DISTINCT rt1.c4)))) IS TRUE)  as count FROM t0, rt1 ORDER BY COALESCE(DISTINCT (- (t0.c0)), ((rt1.c0) NOT BETWEEN ('') AND (rt1.c4))) DESC);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(LIKELY(DISTINCT rt1.c4)))) ORDER BY COALESCE(DISTINCT (- (t0.c0)), ((rt1.c0) NOT BETWEEN ('') AND (rt1.c4))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(LIKELY(DISTINCT rt1.c4)))) IS TRUE)  as count FROM t0, rt1 ORDER BY COALESCE(DISTINCT (- (t0.c0)), ((rt1.c0) NOT BETWEEN ('') AND (rt1.c4))) DESC);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c3)OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))AND(LIKELY(DISTINCT rt1.c4)))) ORDER BY COALESCE(DISTINCT (- (t0.c0)), ((rt1.c0) NOT BETWEEN ('') AND (rt1.c4))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt1.c2)|(rt0.c3))) NOTNULL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY ((((rt0.c4 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CAST(rt1.c4 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt1.c2)|(rt0.c3))) NOTNULL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)|(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, rt1, t0 ORDER BY ((((rt0.c4 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CAST(rt1.c4 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt1.c2)|(rt0.c3))) NOTNULL)) ORDER BY ((((rt0.c4 COLLATE BINARY)AND(((rt1.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CAST(rt1.c4 AS BLOB)))  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)!=(rt1.c1)))OR(((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))))AND((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<>(rt1.c1)))OR(((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))))AND((- (NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)!=(rt1.c1)))OR(((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))))AND((- (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)<>(rt1.c1)))OR(((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))))AND((- (NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)!=(rt1.c1)))OR(((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))))AND((- (NULL)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN t0.c0 THEN '' END THEN NULL WHEN ((NULL) NOTNULL) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c4)) THEN '' END) ORDER BY ((rt0.c1 COLLATE NOCASE)IS NOT(((rt0.c3)OR('1806378810')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN t0.c0 THEN '' END THEN NULL WHEN ((NULL) NOTNULL) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c4)) THEN '' END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1 COLLATE NOCASE)IS NOT(((rt0.c3)OR('1806378810')))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN t0.c0 THEN '' END THEN NULL WHEN ((NULL) NOTNULL) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c4)) THEN '' END) ORDER BY ((rt0.c1 COLLATE NOCASE)IS NOT(((rt0.c3)OR('1806378810')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN t0.c0 THEN '' END THEN NULL WHEN ((NULL) NOTNULL) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c4)) THEN '' END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c1 COLLATE NOCASE)IS NOT(((rt0.c3)OR('1806378810')))) ASC);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN CASE rt0.c2  WHEN t0.c0 THEN '' END THEN NULL WHEN ((NULL) NOTNULL) THEN CAST(rt0.c3 AS INTEGER) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c4)) THEN '' END) ORDER BY ((rt0.c1 COLLATE NOCASE)IS NOT(((rt0.c3)OR('1806378810')))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((v0.c0 IN ()) AS REAL));
SELECT ALL * FROM rt1 WHERE (RTRIM('1')) ORDER BY (((((rt1.c3 IN ()))OR(((rt1.c3)-(rt1.c1)))))OR(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM('1')) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3 IN ()))OR(((rt1.c3)-(rt1.c1)))))OR(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))) DESC);
SELECT ALL * FROM rt1 WHERE (RTRIM('1')) ORDER BY (((((rt1.c3 IN ()))OR(((rt1.c3)-(rt1.c1)))))OR(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))) DESC;
SELECT SUM(count) FROM (SELECT ((RTRIM('1')) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c3 IN ()))OR(((rt1.c3)-(rt1.c1)))))OR(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))) DESC);
SELECT ALL * FROM rt1 WHERE (RTRIM('1')) ORDER BY (((((rt1.c3 IN ()))OR(((rt1.c3)-(rt1.c1)))))OR(((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))) DESC;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM v0, rt0, t0 RIGHT OUTER JOIN rt1 ON CASE ((v0.c0)>>(rt1.c1))  WHEN LENGTH(rt1.c3) THEN rt1.c2 COLLATE BINARY WHEN TOTAL_CHANGES() THEN (NOT (rt1.c1)) WHEN rt0.c1 THEN rt1.c2 ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY CASE ((((rt0.c1)OR(t0.c0)))AND(rt0.c3))  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN 0x4f2364f9 END  NULLS LAST, (((rt1.c0))>=((((v0.c0)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM v0, rt0, t0 RIGHT OUTER JOIN rt1 ON CASE ((v0.c0)>>(rt1.c1))  WHEN LENGTH(rt1.c3) THEN rt1.c2 COLLATE BINARY WHEN TOTAL_CHANGES() THEN (NOT (rt1.c1)) WHEN rt0.c1 THEN rt1.c2 ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END ORDER BY CASE ((((rt0.c1)OR(t0.c0)))AND(rt0.c3))  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN 0x4f2364f9 END  NULLS LAST, (((rt1.c0))>=((((v0.c0)+(t0.c0))))));
SELECT * FROM v0, rt0, t0 RIGHT OUTER JOIN rt1 ON CASE ((v0.c0)>>(rt1.c1))  WHEN LENGTH(rt1.c3) THEN rt1.c2 COLLATE BINARY WHEN TOTAL_CHANGES() THEN (NOT (rt1.c1)) WHEN rt0.c1 THEN rt1.c2 ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY CASE ((((rt0.c1)OR(t0.c0)))AND(rt0.c3))  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN 0x4f2364f9 END  NULLS LAST, (((rt1.c0))>=((((v0.c0)+(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM v0, rt0, t0 RIGHT OUTER JOIN rt1 ON CASE ((v0.c0)>>(rt1.c1))  WHEN LENGTH(rt1.c3) THEN rt1.c2 COLLATE BINARY WHEN TOTAL_CHANGES() THEN (NOT (rt1.c1)) WHEN rt0.c1 THEN rt1.c2 ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END ORDER BY CASE ((((rt0.c1)OR(t0.c0)))AND(rt0.c3))  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN 0x4f2364f9 END  NULLS LAST, (((rt1.c0))>=((((v0.c0)+(t0.c0))))));
SELECT * FROM v0, rt0, t0 RIGHT OUTER JOIN rt1 ON CASE ((v0.c0)>>(rt1.c1))  WHEN LENGTH(rt1.c3) THEN rt1.c2 COLLATE BINARY WHEN TOTAL_CHANGES() THEN (NOT (rt1.c1)) WHEN rt0.c1 THEN rt1.c2 ELSE ((rt1.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) END WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY CASE ((((rt0.c1)OR(t0.c0)))AND(rt0.c3))  WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN 0x4f2364f9 END  NULLS LAST, (((rt1.c0))>=((((v0.c0)+(t0.c0)))));
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (((CASE WHEN -6.52503016E8 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '1449519452' THEN x'' ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (0x7fed622f)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -6.52503016E8 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '1449519452' THEN x'' ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (0X7fed622f))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (((CASE WHEN -6.52503016E8 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '1449519452' THEN x'' ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (0x7fed622f)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN -6.52503016E8 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '1449519452' THEN x'' ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (0X7fed622f))) IS TRUE)  as count FROM rt0, v0, t0);
SELECT COUNT(*) FROM rt0, v0, t0 WHERE (((CASE WHEN -6.52503016E8 THEN rt0.c0 WHEN t0.c0 THEN rt0.c3 WHEN '1449519452' THEN x'' ELSE v0.c0 END) BETWEEN ((~ (v0.c0))) AND (0x7fed622f)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS INTEGER)) ORDER BY CASE UNLIKELY(0.2991091588115583)  WHEN TRIM(DISTINCT rt0.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CAST(rt0.c4 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE UNLIKELY(0.2991091588115583)  WHEN TRIM(DISTINCT rt0.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CAST(rt0.c4 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS INTEGER)) ORDER BY CASE UNLIKELY(0.2991091588115583)  WHEN TRIM(DISTINCT rt0.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CAST(rt0.c4 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c4 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE UNLIKELY(0.2991091588115583)  WHEN TRIM(DISTINCT rt0.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CAST(rt0.c4 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(CAST(rt0.c4 AS NUMERIC) AS INTEGER)) ORDER BY CASE UNLIKELY(0.2991091588115583)  WHEN TRIM(DISTINCT rt0.c0, rt0.c2) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CAST(rt0.c4 AS NUMERIC) END;
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt0.c0)<>(NULL)))GLOB(((rt1.c0)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(NULL)))GLOB(((rt1.c0)OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt0.c0)<>(NULL)))GLOB(((rt1.c0)OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)!=(NULL)))GLOB(((rt1.c0)OR(rt1.c3))))) IS TRUE)  as count FROM v0, rt0, rt1, t0);
SELECT ALL COUNT(*) FROM v0, rt0, rt1, t0 WHERE (((((rt0.c0)<>(NULL)))GLOB(((rt1.c0)OR(rt1.c3)))));
SELECT ALL * FROM rt1, rt0 WHERE ((((- (rt1.c0)))<<(UPPER(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))<<(UPPER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((- (rt1.c0)))<<(UPPER(DISTINCT rt1.c0))));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))<<(UPPER(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((((- (rt1.c0)))<<(UPPER(DISTINCT rt1.c0))));
SELECT * FROM rt1 WHERE ((((((~ (rt1.c4)))AND((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(rt1.c1))) ORDER BY LOWER(((rt1.c4)IS(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c4)))AND((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((rt1.c4)IS(rt1.c0))));
SELECT * FROM rt1 WHERE ((((((~ (rt1.c4)))AND((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(rt1.c1))) ORDER BY LOWER(((rt1.c4)IS(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt1.c4)))AND((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY LOWER(((rt1.c4)IS(rt1.c0))));
SELECT * FROM rt1 WHERE ((((((~ (rt1.c4)))AND((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3))))))OR(rt1.c1))) ORDER BY LOWER(((rt1.c4)IS(rt1.c0)));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c2)) WHERE (TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0 END) NOT BETWEEN (json_remove(rt0.c4, rt0.c3)) AND (((v0.c0)OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c2)) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0 END) NOT BETWEEN (json_remove(rt0.c4, rt0.c3)) AND (((v0.c0)OR(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c2)) WHERE (TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0 END) NOT BETWEEN (json_remove(rt0.c4, rt0.c3)) AND (((v0.c0)OR(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c2)) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0 END) NOT BETWEEN (json_remove(rt0.c4, rt0.c3)) AND (((v0.c0)OR(v0.c0)))) DESC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN NULL ELSE rt0.c1 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt0.c2)) WHERE (TRIM(DISTINCT (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY ((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 ELSE 0.0 END) NOT BETWEEN (json_remove(rt0.c4, rt0.c3)) AND (((v0.c0)OR(v0.c0)))) DESC;
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ((('37Hh+hz&')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS INTEGER) IN ((('37Hh+hz&')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ((('37Hh+hz&')LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c3 AS INTEGER) IN ((('37Hh+hz&')LIKE(rt0.c0))))) IS TRUE)  as count FROM rt1, t0, rt0, v0);
SELECT ALL * FROM rt1, t0, rt0, v0 WHERE ((CAST(rt0.c3 AS INTEGER) IN ((('37Hh+hz&')LIKE(rt0.c0)))));
SELECT ALL * FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)>=(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)>=(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))OR(rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c1)LIKE(v0.c0)))) AND ((((t0.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(v0.c0)))OR(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c1)LIKE(v0.c0)))) AND ((((t0.c0) BETWEEN (v0.c0) AND (rt1.c2))))));
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))OR(rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c1)LIKE(v0.c0)))) AND ((((t0.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)OR(v0.c0)))OR(rt1.c4)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt1, v0 ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c1)LIKE(v0.c0)))) AND ((((t0.c0) BETWEEN (v0.c0) AND (rt1.c2))))));
SELECT COUNT(*) FROM t0, rt1, v0 WHERE (((((rt1.c3)OR(v0.c0)))OR(rt1.c4)) COLLATE RTRIM) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c1)LIKE(v0.c0)))) AND ((((t0.c0) BETWEEN (v0.c0) AND (rt1.c2)))));
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ('-1997848240') ORDER BY 'ATQ㒙gc.O^' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1997848240') IS TRUE)  as count FROM t0, v0, rt0 ORDER BY 'ATQ㒙gc.O^' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ('-1997848240') ORDER BY 'ATQ㒙gc.O^' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1997848240') IS TRUE)  as count FROM t0, v0, rt0 ORDER BY 'ATQ㒙gc.O^' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0, rt0 WHERE ('-1997848240') ORDER BY 'ATQ㒙gc.O^' ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))==(((rt1.c1 IN (rt1.c4, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS TEXT)))==(((rt1.c1 IN (rt1.c4, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))==(((rt1.c1 IN (rt1.c4, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c0 AS TEXT)))==(((rt1.c1 IN (rt1.c4, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((CAST(rt1.c0 AS TEXT)))==(((rt1.c1 IN (rt1.c4, rt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(rt1.c0, 0.609076329951102) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(rt1.c0, 0.609076329951102) END) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(rt1.c0, 0.609076329951102) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(rt1.c0, 0.609076329951102) END) IS TRUE)  as count FROM rt0, rt1, v0, t0);
SELECT ALL COUNT(*) FROM rt0, rt1, v0, t0 WHERE (CASE WHEN CASE WHEN rt1.c1 THEN v0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(rt1.c0, 0.609076329951102) END);
SELECT ALL * FROM rt0, v0 WHERE (CAST((NULL IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((NULL IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (CAST((NULL IN ()) AS REAL));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON (((((('1935752030') ISNULL))AND((('-1718909133')-(v0.c0)))))OR(CAST(rt1.c2 AS REAL))) CROSS JOIN v0 ON ((rt1.c2)AND(t0.c0)) COLLATE BINARY WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY ((rt1.c2 COLLATE BINARY)=((((t0.c0))<>((rt1.c0))))), ((((rt1.c3)*(rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((((('1935752030') ISNULL))AND((('-1718909133')-(v0.c0)))))OR(CAST(rt1.c2 AS REAL))) CROSS JOIN v0 ON ((rt1.c2)AND(t0.c0)) COLLATE BINARY ORDER BY ((rt1.c2 COLLATE BINARY)==((((t0.c0))<>((rt1.c0))))), ((((rt1.c3)*(rt1.c1))) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON (((((('1935752030') ISNULL))AND((('-1718909133')-(v0.c0)))))OR(CAST(rt1.c2 AS REAL))) CROSS JOIN v0 ON ((rt1.c2)AND(t0.c0)) COLLATE BINARY WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY ((rt1.c2 COLLATE BINARY)=((((t0.c0))<>((rt1.c0))))), ((((rt1.c3)*(rt1.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((((('1935752030') ISNULL))AND((('-1718909133')-(v0.c0)))))OR(CAST(rt1.c2 AS REAL))) CROSS JOIN v0 ON ((rt1.c2)AND(t0.c0)) COLLATE BINARY ORDER BY ((rt1.c2 COLLATE BINARY)==((((t0.c0))<>((rt1.c0))))), ((((rt1.c3)*(rt1.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM rt1 WHERE (0x5665e95c);
SELECT SUM(count) FROM (SELECT ALL ((0x5665e95c) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0x5665e95c);
SELECT SUM(count) FROM (SELECT ALL ((0x5665e95c) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (0x5665e95c);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((~ ((('') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('') IS FALSE)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((~ ((('') IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((('') IS FALSE)))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL * FROM v0, rt0, rt1 WHERE ((~ ((('') IS FALSE))));
SELECT * FROM t0 WHERE (HEX(t0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (HEX(t0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((HEX(t0.c0) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (HEX(t0.c0) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((('948235822')OR(rt1.c0)))IS NOT(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END))) ORDER BY highlight(((t0.c0)>(rt1.c2)), ((rt1.c1)*(rt1.c3)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT)), t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('948235822')OR(rt1.c0)))IS NOT(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY highlight(((t0.c0)>(rt1.c2)), ((rt1.c1)*(rt1.c3)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT)), t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((('948235822')OR(rt1.c0)))IS NOT(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END))) ORDER BY highlight(((t0.c0)>(rt1.c2)), ((rt1.c1)*(rt1.c3)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT)), t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('948235822')OR(rt1.c0)))IS NOT(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END))) IS TRUE)  as count FROM v0, t0, rt1 ORDER BY highlight(((t0.c0)>(rt1.c2)), ((rt1.c1)*(rt1.c3)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT)), t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0, rt1 WHERE ((((('948235822')OR(rt1.c0)))IS NOT(CASE t0.c0  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END))) ORDER BY highlight(((t0.c0)>(rt1.c2)), ((rt1.c1)*(rt1.c3)), t0.c0 COLLATE NOCASE, CAST(v0.c0 AS TEXT)), t0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c4 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 IN ()) IN ())) IS TRUE)  as count FROM t0, v0, rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c4 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 IN ()) IN ())) IS TRUE)  as count FROM t0, v0, rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM t0, v0, rt1 NATURAL JOIN rt0 WHERE (((rt1.c4 IN ()) IN ()));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (((- (rt1.c2)))<=(((((((((rt1.c0)OR('ew+賖{fꞽ')))OR(rt1.c1)))AND(rt1.c4)))AND(v0.c0)))) WHERE (CAST(rt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c2 AS NUMERIC))))OR((rt1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (((- (rt1.c2)))<=(((((((((rt1.c0)OR('ew+賖{fꞽ')))OR(rt1.c1)))AND(rt1.c4)))AND(v0.c0)))) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c2 AS NUMERIC))))OR((rt1.c3 IN ()))) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (((- (rt1.c2)))<=(((((((((rt1.c0)OR('ew+賖{fꞽ')))OR(rt1.c1)))AND(rt1.c4)))AND(v0.c0)))) WHERE (CAST(rt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c2 AS NUMERIC))))OR((rt1.c3 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt1 ON (((- (rt1.c2)))<=(((((((((rt1.c0)OR('ew+賖{fꞽ')))OR(rt1.c1)))AND(rt1.c4)))AND(v0.c0)))) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c2 AS NUMERIC))))OR((rt1.c3 IN ()))) DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN rt1 ON (((- (rt1.c2)))<=(((((((((rt1.c0)OR('ew+賖{fꞽ')))OR(rt1.c1)))AND(rt1.c4)))AND(v0.c0)))) WHERE (CAST(rt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY (((((NOT (rt1.c4)))AND(CAST(rt1.c2 AS NUMERIC))))OR((rt1.c3 IN ()))) DESC;
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((CAST(rt1.c1 AS REAL))OR(rt1.c2)))AND(LOWER(rt1.c0))))AND(rt1.c1 COLLATE BINARY)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS REAL))OR(rt1.c2)))AND(LOWER(rt1.c0))))AND(rt1.c1 COLLATE BINARY)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((CAST(rt1.c1 AS REAL))OR(rt1.c2)))AND(LOWER(rt1.c0))))AND(rt1.c1 COLLATE BINARY)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(rt1.c1 AS REAL))OR(rt1.c2)))AND(LOWER(rt1.c0))))AND(rt1.c1 COLLATE BINARY)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, rt1);
SELECT ALL COUNT(*) FROM v0, rt0, rt1 WHERE (((((((((CAST(rt1.c1 AS REAL))OR(rt1.c2)))AND(LOWER(rt1.c0))))AND(rt1.c1 COLLATE BINARY)))OR((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) ISNULL) FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON CAST(((rt0.c4)==(rt0.c1)) AS BLOB) WHERE (NULLIF(((rt0.c2) IS FALSE), ((rt1.c4)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c2) IS FALSE), ((rt1.c4)<=(rt1.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) ISNULL) FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON CAST(((rt0.c4)=(rt0.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) ISNULL) FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON CAST(((rt0.c4)==(rt0.c1)) AS BLOB) WHERE (NULLIF(((rt0.c2) IS FALSE), ((rt1.c4)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(((rt0.c2) IS FALSE), ((rt1.c4)<=(rt1.c1)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON ((CASE WHEN rt0.c0 THEN rt0.c0 END) ISNULL) FULL OUTER JOIN rt1 ON (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) IS FALSE) FULL OUTER JOIN v0 ON CAST(((rt0.c4)=(rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(0.12157606348736139)))AND(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(0.12157606348736139)))AND(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(0.12157606348736139)))AND(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(0.12157606348736139)))AND(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c0)OR(0.12157606348736139)))AND(t0.c0)))OR(((t0.c0)IS(t0.c0)))))AND(((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))OR(rt1.c1)) COLLATE NOCASE WHERE (((((t0.c0)!=(rt1.c1))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY (NOT (LIKELY(DISTINCT x'd55a'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(rt1.c1))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))OR(rt1.c1)) COLLATE NOCASE ORDER BY (NOT (LIKELY(DISTINCT x'd55a'))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))OR(rt1.c1)) COLLATE NOCASE WHERE (((((t0.c0)!=(rt1.c1))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY (NOT (LIKELY(DISTINCT x'd55a'))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)!=(rt1.c1))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))OR(rt1.c1)) COLLATE NOCASE ORDER BY (NOT (LIKELY(DISTINCT x'd55a'))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((((rt1.c0)OR(t0.c0)))OR(rt1.c1)) COLLATE NOCASE WHERE (((((t0.c0)!=(rt1.c1))) NOT BETWEEN (((rt1.c4) NOT NULL)) AND (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c4))))) ORDER BY (NOT (LIKELY(DISTINCT x'd55a'))) ASC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((CAST(rt0.c4 AS INTEGER) IN ())) ORDER BY ((((((rt0.c1)>>(rt0.c2)))OR(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c4 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((rt0.c1)>>(rt0.c2)))OR(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((CAST(rt0.c4 AS INTEGER) IN ())) ORDER BY ((((((rt0.c1)>>(rt0.c2)))OR(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c4 AS INTEGER) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN v0 ORDER BY ((((((rt0.c1)>>(rt0.c2)))OR(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN v0 WHERE ((CAST(rt0.c4 AS INTEGER) IN ())) ORDER BY ((((((rt0.c1)>>(rt0.c2)))OR(CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE rt0.c3 END)))AND((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UPPER((~ (v0.c0))) WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY MIN(CAST(v0.c0 AS REAL), CASE '-1049106306'  WHEN t0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON UPPER((~ (v0.c0))) ORDER BY MIN(CAST(v0.c0 AS REAL), CASE '-1049106306'  WHEN t0.c0 THEN v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UPPER((~ (v0.c0))) WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY MIN(CAST(v0.c0 AS REAL), CASE '-1049106306'  WHEN t0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON UPPER((~ (v0.c0))) ORDER BY MIN(CAST(v0.c0 AS REAL), CASE '-1049106306'  WHEN t0.c0 THEN v0.c0 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN t0 ON UPPER((~ (v0.c0))) WHERE ((v0.c0 COLLATE BINARY IN ())) ORDER BY MIN(CAST(v0.c0 AS REAL), CASE '-1049106306'  WHEN t0.c0 THEN v0.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (v0.c0 IN ()) WHERE (0.7464174412416149);
SELECT SUM(count) FROM (SELECT ALL ((0.7464174412416149) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (v0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (v0.c0 IN ()) WHERE (0.7464174412416149);
SELECT SUM(count) FROM (SELECT ALL ((0.7464174412416149) IS TRUE)  as count FROM rt1 INNER JOIN v0 ON (v0.c0 IN ()));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN v0 ON (v0.c0 IN ()) WHERE (0.7464174412416149);
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((((((t0.c0)>(t0.c0)))AND(((rt1.c4)||(v0.c0)))))AND(((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(t0.c0)))AND(((rt1.c4)||(v0.c0)))))AND(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((((((t0.c0)>(t0.c0)))AND(((rt1.c4)||(v0.c0)))))AND(((rt1.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(t0.c0)))AND(((rt1.c4)||(v0.c0)))))AND(((rt1.c2) IS TRUE)))) IS TRUE)  as count FROM rt1, v0, rt0, t0);
SELECT ALL COUNT(*) FROM rt1, v0, rt0, t0 WHERE (((((((t0.c0)>(t0.c0)))AND(((rt1.c4)||(v0.c0)))))AND(((rt1.c2) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE NOCASE) ORDER BY (((+ (rt0.c1)))<<(((rt0.c4)>=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))<<(((rt0.c4)>=(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE NOCASE) ORDER BY (((+ (rt0.c1)))<<(((rt0.c4)>=(rt0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))<<(((rt0.c4)>=(rt0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE NOCASE) ORDER BY (((+ (rt0.c1)))<<(((rt0.c4)>=(rt0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((~ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS BLOB) IN ((~ (t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE ((~ (CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((~ (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS BLOB) IN ((~ (t0.c0)))) ASC);
SELECT ALL * FROM t0 WHERE ((~ (CASE WHEN NULL THEN t0.c0 ELSE t0.c0 END))) ORDER BY (CAST(t0.c0 AS BLOB) IN ((~ (t0.c0)))) ASC;
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c4))=(((+ (rt1.c2))))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))) IS TRUE)) ORDER BY (((((277467194)OR(rt1.c1)))OR(rt1.c4)) IN ((('eTfB*7XN')OR(rt1.c4)), 1.18378721E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c4))==(((+ (rt1.c2))))) ORDER BY (((((277467194)OR(rt1.c1)))OR(rt1.c4)) IN ((('eTfB*7XN')OR(rt1.c4)), 1.18378721E8))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c4))=(((+ (rt1.c2))))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))) IS TRUE)) ORDER BY (((((277467194)OR(rt1.c1)))OR(rt1.c4)) IN ((('eTfB*7XN')OR(rt1.c4)), 1.18378721E8))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c4))==(((+ (rt1.c2))))) ORDER BY (((((277467194)OR(rt1.c1)))OR(rt1.c4)) IN ((('eTfB*7XN')OR(rt1.c4)), 1.18378721E8))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN rt1 ON (((rt1.c4))=(((+ (rt1.c2))))) WHERE (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4))) IS TRUE)) ORDER BY (((((277467194)OR(rt1.c1)))OR(rt1.c4)) IN ((('eTfB*7XN')OR(rt1.c4)), 1.18378721E8))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (NOT (NULL)) INNER JOIN t0 ON (x'' IN ()) WHERE (((((((((((t0.c0)|(rt1.c1)))AND(((t0.c0)<<(0.6325512577512997)))))OR(CASE WHEN t0.c0 THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)))AND(((rt1.c1)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)|(rt1.c1)))AND(((t0.c0)<<(0.6325512577512997)))))OR(CASE WHEN t0.c0 THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)))AND(((rt1.c1)<=(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (NOT (NULL)) INNER JOIN t0 ON (x'' IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (NOT (NULL)) INNER JOIN t0 ON (x'' IN ()) WHERE (((((((((((t0.c0)|(rt1.c1)))AND(((t0.c0)<<(0.6325512577512997)))))OR(CASE WHEN t0.c0 THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)))AND(((rt1.c1)<=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)|(rt1.c1)))AND(((t0.c0)<<(0.6325512577512997)))))OR(CASE WHEN t0.c0 THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)))AND(((rt1.c1)<=(rt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN v0 ON (NOT (NULL)) INNER JOIN t0 ON (x'' IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN v0 ON (NOT (NULL)) INNER JOIN t0 ON (x'' IN ()) WHERE (((((((((((t0.c0)|(rt1.c1)))AND(((t0.c0)<<(0.6325512577512997)))))OR(CASE WHEN t0.c0 THEN rt1.c0 END)))OR(rt1.c1 COLLATE BINARY)))AND(((rt1.c1)<=(rt1.c0)))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((x'') IS TRUE)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 5.44205263E8 THEN v0.c0 ELSE t0.c0 END) AND ((((v0.c0))==(('/~Ll}'))))) WHERE (((IFNULL(v0.c0, 0.6110683667392095))+((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>>(((v0.c0)<('')))) ASC  NULLS LAST, ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))=(CAST('' AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(v0.c0, 0.6110683667392095))+((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((x'') IS TRUE)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 5.44205263E8 THEN v0.c0 ELSE t0.c0 END) AND ((((v0.c0))==(('/~Ll}'))))) ORDER BY ((t0.c0 COLLATE RTRIM)>>(((v0.c0)<('')))) ASC  NULLS LAST, ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))=(CAST('' AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((x'') IS TRUE)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 5.44205263E8 THEN v0.c0 ELSE t0.c0 END) AND ((((v0.c0))==(('/~Ll}'))))) WHERE (((IFNULL(v0.c0, 0.6110683667392095))+((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>>(((v0.c0)<('')))) ASC  NULLS LAST, ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))=(CAST('' AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(v0.c0, 0.6110683667392095))+((v0.c0 IN (v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED RIGHT OUTER JOIN t0 ON ((((x'') IS TRUE)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 5.44205263E8 THEN v0.c0 ELSE t0.c0 END) AND ((((v0.c0))==(('/~Ll}'))))) ORDER BY ((t0.c0 COLLATE RTRIM)>>(((v0.c0)<('')))) ASC  NULLS LAST, ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))=(CAST('' AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((x'') IS TRUE)) NOT BETWEEN (CASE t0.c0  WHEN t0.c0 THEN v0.c0 WHEN t0.c0 THEN v0.c0 WHEN 5.44205263E8 THEN v0.c0 ELSE t0.c0 END) AND ((((v0.c0))==(('/~Ll}'))))) WHERE (((IFNULL(v0.c0, 0.6110683667392095))+((v0.c0 IN (v0.c0, v0.c0))))) ORDER BY ((t0.c0 COLLATE RTRIM)>>(((v0.c0)<('')))) ASC  NULLS LAST, ((((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))=(CAST('' AS REAL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE (CAST(((((((((-1.38310442E8)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((-1.38310442E8)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE (CAST(((((((((-1.38310442E8)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((-1.38310442E8)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(t0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0, v0, rt1, t0);
SELECT ALL COUNT(*) FROM rt0, v0, rt1, t0 WHERE (CAST(((((((((-1.38310442E8)OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0)))OR(t0.c0)) AS TEXT));
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON CASE ((t0.c0)>>(rt0.c3))  WHEN rt1.c2 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN TRIM(DISTINCT rt1.c1, rt1.c0) WHEN COALESCE(rt1.c0, rt0.c0, rt1.c3, rt1.c0) THEN ((v0.c0)>>(rt0.c1)) END WHERE ((- ((rt0.c2 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c4)))GLOB(((v0.c0)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0 CROSS JOIN v0 ON CASE ((t0.c0)>>(rt0.c3))  WHEN rt1.c2 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN TRIM(DISTINCT rt1.c1, rt1.c0) WHEN COALESCE(rt1.c0, rt0.c0, rt1.c3, rt1.c0) THEN ((v0.c0)>>(rt0.c1)) END ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c4)))GLOB(((v0.c0)IS(rt0.c3)))));
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON CASE ((t0.c0)>>(rt0.c3))  WHEN rt1.c2 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN TRIM(DISTINCT rt1.c1, rt1.c0) WHEN COALESCE(rt1.c0, rt0.c0, rt1.c3, rt1.c0) THEN ((v0.c0)>>(rt0.c1)) END WHERE ((- ((rt0.c2 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c4)))GLOB(((v0.c0)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, rt1, t0 CROSS JOIN v0 ON CASE ((t0.c0)>>(rt0.c3))  WHEN rt1.c2 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN TRIM(DISTINCT rt1.c1, rt1.c0) WHEN COALESCE(rt1.c0, rt0.c0, rt1.c3, rt1.c0) THEN ((v0.c0)>>(rt0.c1)) END ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c4)))GLOB(((v0.c0)IS(rt0.c3)))));
SELECT * FROM rt0, rt1, t0 CROSS JOIN v0 ON CASE ((t0.c0)>>(rt0.c3))  WHEN rt1.c2 COLLATE NOCASE THEN v0.c0 COLLATE NOCASE WHEN (NULL IN ()) THEN TRIM(DISTINCT rt1.c1, rt1.c0) WHEN COALESCE(rt1.c0, rt0.c0, rt1.c3, rt1.c0) THEN ((v0.c0)>>(rt0.c1)) END WHERE ((- ((rt0.c2 IN ())))) ORDER BY ((((((rt1.c1)OR(rt1.c1)))OR(rt1.c4)))GLOB(((v0.c0)IS(rt0.c3))));
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY 934987171  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY 934987171  NULLS LAST);
SELECT * FROM t0 WHERE (CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY 934987171  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY 934987171  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.43755701812073633);
SELECT SUM(count) FROM (SELECT ALL ((0.43755701812073633) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.43755701812073633);
SELECT SUM(count) FROM (SELECT ALL ((0.43755701812073633) IS TRUE)  as count FROM rt1, rt0, t0);
SELECT COUNT(*) FROM rt1, rt0, t0 WHERE (0.43755701812073633);
SELECT ALL * FROM rt0, rt1 NOT INDEXED, t0, v0 WHERE ((+ ((+ (rt1.c1))))) ORDER BY ((((x'')IS NOT(rt1.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t0, v0 NOT INDEXED ORDER BY ((((x'')IS NOT(rt1.c3))) IS TRUE) DESC);
SELECT ALL * FROM rt0, rt1 NOT INDEXED, t0, v0 WHERE ((+ ((+ (rt1.c1))))) ORDER BY ((((x'')IS NOT(rt1.c3))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt1.c1))))) IS TRUE)  as count FROM rt0, rt1, t0, v0 NOT INDEXED ORDER BY ((((x'')IS NOT(rt1.c3))) IS TRUE) DESC);
SELECT ALL * FROM rt0, rt1 NOT INDEXED, t0, v0 WHERE ((+ ((+ (rt1.c1))))) ORDER BY ((((x'')IS NOT(rt1.c3))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((TRIM(t0.c0))OR(((t0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)%(t0.c0))) NOT NULL) DESC  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c0))OR(((t0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)%(t0.c0))) NOT NULL) DESC  NULLS LAST, t0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((TRIM(t0.c0))OR(((t0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)%(t0.c0))) NOT NULL) DESC  NULLS LAST, t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(t0.c0))OR(((t0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)%(t0.c0))) NOT NULL) DESC  NULLS LAST, t0.c0 ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((TRIM(t0.c0))OR(((t0.c0)IS NOT(v0.c0)))))AND(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY ((((v0.c0)%(t0.c0))) NOT NULL) DESC  NULLS LAST, t0.c0 ASC;
SELECT * FROM rt1 WHERE (((((0.48231079989638714)|(rt1.c4)))OR(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.48231079989638714)|(rt1.c4)))OR(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((0.48231079989638714)|(rt1.c4)))OR(((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((0.48231079989638714)|(rt1.c4)))OR(((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((0.48231079989638714)|(rt1.c4)))OR(((rt1.c2) IS FALSE))));
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((NULL)))) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((NULL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((NULL)))) IS TRUE)  as count FROM rt0, t0, rt1, v0);
SELECT COUNT(*) FROM rt0, t0, rt1, v0 WHERE ((((rt0.c1)) NOT BETWEEN (((rt1.c4 IN ()))) AND ((NULL))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ()))+(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ()))+(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 IN ()))+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c4 IN ()))+(rt0.c3 COLLATE BINARY)));
