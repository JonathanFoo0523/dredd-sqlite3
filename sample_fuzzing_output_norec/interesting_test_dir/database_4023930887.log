-- Time: 2024/06/09 06:58:48
-- Database: database87
-- Database version: 3.40.0
-- seed value: 4023930887
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1 UNINDEXED, c2 UNINDEXED); -- 10ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
COMMIT; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL rt1 SET (c1, c1, c0)=('W峇e~', '-2097521465', '') WHERE (((0.3630435267781341))<(((rt1.c2 IN ())))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(-2.097521465E9); -- 0ms;
PRAGMA temp.cell_size_check; -- 0ms;
REINDEX NOCASE; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
UPDATE rt1 SET c2=NULL WHERE (NOT ((rt1.c0 IN ()))); -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 21ms;
INSERT INTO vt0(vt0) VALUES('merge=-2097521465,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1234586003); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2097521465,8');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2097521465,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=9'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA wal_autocheckpoint = -2690073281550868514; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1988349031); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c1, c1)=(NULL, '%NphovIi䋂', NULL) WHERE 'HV\rh'; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=461447429, c0='-1526512958'; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB ); -- 3ms;
PRAGMA default_cache_size = -2097521465; -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (0xffffffffb2488c91, 0.4911413945922899, ''); -- 0ms;
INSERT OR FAIL INTO rt1 VALUES (x'13eb', '-2097521465', 0.1511950583697932); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 9ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 21ms;
ANALYZE rt1; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES (x'', '-1303868271'), (x'', 0.940697160860399), ('0.940697160860399', 0.21204887512071646); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL WHERE COALESCE(CAST(x'' AS TEXT), ((vt0.c0) NOT NULL)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
UPDATE OR REPLACE vt0 SET c1=-1753864311 WHERE ((CASE vt0.c1  WHEN vt0.c1 THEN 2.5336991E7 ELSE vt0.c0 END)<<(((vt0.c1) NOT BETWEEN (vt0.c1) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1, c0) VALUES (-1.526512958E9, x'e16d', 'JN}M)*pdw'); -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
PRAGMA incremental_vacuum(25336991); -- 0ms;
UPDATE OR IGNORE vt0 SET c2=NULL, c0=' zfQ.n)m' WHERE (vt0.c2 IN ()); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX RTRIM; -- 1ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('0.21204887512071646', 0.7683982148269295, x''), ('48975977', 0.31298198496073326, x''), (0.38271966779699973, 0.7683982148269295, -1904910109); -- 8ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 1ms;
SELECT rtreecheck('rt1'); -- 2ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 1ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (0Xffffffffb2488c91, 0.787629754468728); -- 0ms;
UPDATE vt0 SET (c1)=(NULL); -- 1ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE OR ABORT vt0 SET c0=-1.904910109E9 WHERE ((((vt0.c2) IS FALSE)) NOT NULL); -- 0ms;
REINDEX; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=264489426 unordered noskipscan'); -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1540587353,9');\n; -- 1ms;
UPDATE OR FAIL vt0 SET c2='' WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c2)))==(((((((((vt0.c2)OR('-916529898')))OR(vt0.c0)))OR(vt0.c2)))OR(vt0.c2)))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT , c1 BLOB , c2 INT ); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.journal_size_limit; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x'db02', c0=x'' WHERE (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c1)) IN ()); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c2)=(0x182ab1b7); -- 3ms;
PRAGMA temp.auto_vacuum; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0, c1, c2 UNINDEXED); -- 0ms;
UPDATE vt1 SET (c2, c1)=(NULL, x'3e0b') WHERE ((0.1917112769299023) NOT NULL); -- 0ms;
END TRANSACTION; -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((vt0.c0)IS NOT(rt1.c0)))>=(((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)))AND(rt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND('-916529898'))))) ORDER BY LIKE(((((vt0.c2)OR(vt0.c1)))AND(vt1.c2)), rt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(rt1.c0)))>=(((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)))AND(rt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND('-916529898'))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY LIKE(((((vt0.c2)OR(vt0.c1)))AND(vt1.c2)), rt1.c0)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((vt0.c0)IS NOT(rt1.c0)))>=(((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)))AND(rt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND('-916529898'))))) ORDER BY LIKE(((((vt0.c2)OR(vt0.c1)))AND(vt1.c2)), rt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS NOT(rt1.c0)))>=(((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)))AND(rt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND('-916529898'))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY LIKE(((((vt0.c2)OR(vt0.c1)))AND(vt1.c2)), rt1.c0)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (((((vt0.c0)IS NOT(rt1.c0)))>=(((((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c2)))AND(rt1.c0)))OR(vt1.c1)))AND(vt1.c1)))AND('-916529898'))))) ORDER BY LIKE(((((vt0.c2)OR(vt0.c1)))AND(vt1.c2)), rt1.c0)  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)||(vt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)||(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)||(vt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)||(vt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c1)||(vt0.c2)) COLLATE NOCASE) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1)) BETWEEN ((vt1.c2)) AND ((vt1.c0)))));
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ((((t0.c2)=(t0.c2)) IN ())) ORDER BY (((((rt1.c1)<<(rt1.c2))))<((((rt1.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)==(t0.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (((((rt1.c1)<<(rt1.c2))))<((((rt1.c1) IS TRUE)))) ASC);
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ((((t0.c2)=(t0.c2)) IN ())) ORDER BY (((((rt1.c1)<<(rt1.c2))))<((((rt1.c1) IS TRUE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)==(t0.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (((((rt1.c1)<<(rt1.c2))))<((((rt1.c1) IS TRUE)))) ASC);
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ((((t0.c2)=(t0.c2)) IN ())) ORDER BY (((((rt1.c1)<<(rt1.c2))))<((((rt1.c1) IS TRUE)))) ASC;
SELECT * FROM rt1, t0 WHERE ((((LOWER(rt1.c0)))==(((rt1.c1 IN (x'65be')))))) ORDER BY (((((t0.c2))==((rt1.c2))))<>(CAST(t0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((LOWER(rt1.c0)))==(((rt1.c1 IN (x'65be')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((t0.c2))=((rt1.c2))))<>(CAST(t0.c1 AS BLOB))) DESC);
SELECT * FROM rt1, t0 WHERE ((((LOWER(rt1.c0)))==(((rt1.c1 IN (x'65be')))))) ORDER BY (((((t0.c2))==((rt1.c2))))<>(CAST(t0.c1 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT (((((LOWER(rt1.c0)))==(((rt1.c1 IN (x'65be')))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((((t0.c2))=((rt1.c2))))<>(CAST(t0.c1 AS BLOB))) DESC);
SELECT * FROM rt1, t0 WHERE ((((LOWER(rt1.c0)))==(((rt1.c1 IN (x'65be')))))) ORDER BY (((((t0.c2))==((rt1.c2))))<>(CAST(t0.c1 AS BLOB))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c2, vt0.c0))IS NOT(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c2, vt0.c0))IS NOT(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c2, vt0.c0))IS NOT(((vt0.c1)>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt0.c2, vt0.c0))IS NOT(((vt0.c1)>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((IFNULL(DISTINCT vt0.c2, vt0.c0))IS NOT(((vt0.c1)>(vt0.c0)))));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c2, 0.5401985864418816));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt1.c2, 0.5401985864418816)) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c2, 0.5401985864418816));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt1.c2, 0.5401985864418816)) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c2, 0.5401985864418816));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN ((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, x'7f36')) AND ((vt0.c0, vt0.c1, vt0.c2)))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN ((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, x'7f36')) AND ((vt0.c0, vt0.c1, vt0.c2)))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN ((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, x'7f36')) AND ((vt0.c0, vt0.c1, vt0.c2)))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(NULL AS REAL)) BETWEEN ((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, x'7f36')) AND ((vt0.c0, vt0.c1, vt0.c2)))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((CAST(NULL AS REAL)) BETWEEN ((((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, vt0.c1, x'7f36')) AND ((vt0.c0, vt0.c1, vt0.c2)))) AND (((vt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c2)OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(((vt0.c2)OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c2)OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) IS FALSE))AND(((vt0.c2)OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) IS FALSE))AND(((vt0.c2)OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((x'') NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY COALESCE(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)), (((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))  NULLS LAST, vt0.c0 COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE ((~ (json_array('-20587390', rt1.c0)))) ORDER BY ((((rt1.c1)<>(rt1.c0)))IS NOT((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT (((~ (json_array('-20587390', rt1.c0)))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((((rt1.c1)<>(rt1.c0)))IS NOT((NOT (rt1.c2)))));
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE ((~ (json_array('-20587390', rt1.c0)))) ORDER BY ((((rt1.c1)<>(rt1.c0)))IS NOT((NOT (rt1.c2))));
SELECT SUM(count) FROM (SELECT (((~ (json_array('-20587390', rt1.c0)))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((((rt1.c1)<>(rt1.c0)))IS NOT((NOT (rt1.c2)))));
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE ((~ (json_array('-20587390', rt1.c0)))) ORDER BY ((((rt1.c1)<>(rt1.c0)))IS NOT((NOT (rt1.c2))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0 IN ())))<=(((('0.31298198496073326') ISNULL))))) ORDER BY ((rt1.c1) NOT NULL), ((rt1.c2 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (rt1.c0) AND ('264489426'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN ())))<=(((('0.31298198496073326') ISNULL))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT NULL), ((rt1.c2 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (rt1.c0) AND ('264489426'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0 IN ())))<=(((('0.31298198496073326') ISNULL))))) ORDER BY ((rt1.c1) NOT NULL), ((rt1.c2 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (rt1.c0) AND ('264489426'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0 IN ())))<=(((('0.31298198496073326') ISNULL))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1) NOT NULL), ((rt1.c2 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (rt1.c0) AND ('264489426'))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c0 IN ())))<=(((('0.31298198496073326') ISNULL))))) ORDER BY ((rt1.c1) NOT NULL), ((rt1.c2 COLLATE NOCASE)<=(((rt1.c1) NOT BETWEEN (rt1.c0) AND ('264489426'))))  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, rt1, vt0 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, rt1, vt0);
SELECT COUNT(*) FROM vt1, t0, rt1, vt0 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, t0, rt1, vt0);
SELECT COUNT(*) FROM vt1, t0, rt1, vt0 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((rt1.c0)OR(((rt1.c0)/(vt1.c0)))))OR(((vt1.c0) IS TRUE)))) ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c0) IS TRUE) THEN ((x'7e90')&(vt0.c1)) WHEN (rt1.c0 IN (vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN vt1.c2 COLLATE NOCASE END ASC  NULLS FIRST, LIKELY(DISTINCT ((rt1.c2)AND(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c0)/(vt1.c0)))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c0) IS TRUE) THEN ((x'7e90')&(vt0.c1)) WHEN (rt1.c0 IN (vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN vt1.c2 COLLATE NOCASE END ASC  NULLS FIRST, LIKELY(DISTINCT ((rt1.c2)AND(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((rt1.c0)OR(((rt1.c0)/(vt1.c0)))))OR(((vt1.c0) IS TRUE)))) ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c0) IS TRUE) THEN ((x'7e90')&(vt0.c1)) WHEN (rt1.c0 IN (vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN vt1.c2 COLLATE NOCASE END ASC  NULLS FIRST, LIKELY(DISTINCT ((rt1.c2)AND(vt0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)OR(((rt1.c0)/(vt1.c0)))))OR(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c0) IS TRUE) THEN ((x'7e90')&(vt0.c1)) WHEN (rt1.c0 IN (vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN vt1.c2 COLLATE NOCASE END ASC  NULLS FIRST, LIKELY(DISTINCT ((rt1.c2)AND(vt0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (((((rt1.c0)OR(((rt1.c0)/(vt1.c0)))))OR(((vt1.c0) IS TRUE)))) ORDER BY CASE ((rt1.c1) IS FALSE)  WHEN ((rt1.c0) IS TRUE) THEN ((x'7e90')&(vt0.c1)) WHEN (rt1.c0 IN (vt0.c0)) THEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE vt0.c1 END WHEN (vt0.c0 IN ()) THEN vt1.c2 COLLATE NOCASE END ASC  NULLS FIRST, LIKELY(DISTINCT ((rt1.c2)AND(vt0.c2))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN vt1.c2 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c2 THEN vt1.c2 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c2 THEN vt1.c2 END)OR(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c2)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2 IN ())))<(((NOT (vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 IN ())))<(((NOT (vt1.c2)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2 IN ())))<(((NOT (vt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2 IN ())))<(((NOT (vt1.c2)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2 IN ())))<(((NOT (vt1.c2))))));
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((('-2145238684')IS(vt1.c2))) AND (((vt0.c1)==(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((('-2145238684')IS(vt1.c2))) AND (((vt0.c1)==(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((('-2145238684')IS(vt1.c2))) AND (((vt0.c1)==(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN ((('-2145238684')IS(vt1.c2))) AND (((vt0.c1)==(vt0.c2))))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE ((((vt0.c0 IN ())) BETWEEN ((('-2145238684')IS(vt1.c2))) AND (((vt0.c1)==(vt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)) ORDER BY (((vt0.c2 COLLATE BINARY))>((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 COLLATE BINARY))>((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)) ORDER BY (((vt0.c2 COLLATE BINARY))>((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2 COLLATE BINARY))>((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END)) ORDER BY (((vt0.c2 COLLATE BINARY))>((((((vt0.c2)OR(vt0.c2)))OR(vt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN rt1.c0 THEN x'' END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN rt1.c0 THEN x'' END) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN rt1.c0 THEN x'' END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN rt1.c0 THEN x'' END) IS FALSE)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c2 WHEN vt1.c0 THEN t0.c1 WHEN rt1.c0 THEN x'' END) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((CAST(t0.c0 AS BLOB))<>((+ (rt1.c2))))) ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))<>((+ (rt1.c2))))) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((CAST(t0.c0 AS BLOB))<>((+ (rt1.c2))))) ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))<>((+ (rt1.c2))))) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((CAST(t0.c0 AS BLOB))<>((+ (rt1.c2))))) ORDER BY ((((vt1.c1) NOTNULL)) NOT BETWEEN (rt1.c1 COLLATE NOCASE) AND (((rt1.c2) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (((((t0.c1)||(vt1.c1)))==(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)||(vt1.c1)))=(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (((((t0.c1)||(vt1.c1)))==(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)||(vt1.c1)))=(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (((((t0.c1)||(vt1.c1)))==(((t0.c0) NOT NULL))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((-2069734553)) AND ((vt0.c0))))/('-861401749')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((-2069734553)) AND ((vt0.c0))))/('-861401749'))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((-2069734553)) AND ((vt0.c0))))/('-861401749')));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((-2069734553)) AND ((vt0.c0))))/('-861401749'))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((vt1.c0)) BETWEEN ((-2069734553)) AND ((vt0.c0))))/('-861401749')));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((''))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((''))) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((''))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt1.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt1.c1 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST((vt1.c1 IN ()) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c2, x'')) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c2, x'')) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c2, x'')) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c2, x'')) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULLIF(vt1.c2, x'')) NOT NULL));
SELECT ALL * FROM vt1 WHERE ((('-823420487' COLLATE RTRIM)-((((vt1.c0))=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((('-823420487' COLLATE RTRIM)-((((vt1.c0))=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('-823420487' COLLATE RTRIM)-((((vt1.c0))=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((('-823420487' COLLATE RTRIM)-((((vt1.c0))=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((('-823420487' COLLATE RTRIM)-((((vt1.c0))=((vt1.c1))))));
SELECT * FROM vt0, rt1, t0 WHERE (NULL) ORDER BY (+ (CASE vt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (CASE vt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)) DESC);
SELECT * FROM vt0, rt1, t0 WHERE (NULL) ORDER BY (+ (CASE vt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY (+ (CASE vt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)) DESC);
SELECT * FROM vt0, rt1, t0 WHERE (NULL) ORDER BY (+ (CASE vt0.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE t0.c2 END)) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2)/(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)/(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2)/(((t0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)/(((t0.c2) ISNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2)/(((t0.c2) ISNULL))));
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((rt1.c2) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN x'4fb0' THEN (('461447429') IS FALSE) WHEN CAST(rt1.c2 AS BLOB) THEN rt1.c1 ELSE rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((rt1.c2) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN x'4fb0' THEN (('461447429') IS FALSE) WHEN CAST(rt1.c2 AS BLOB) THEN rt1.c1 ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((rt1.c2) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN x'4fb0' THEN (('461447429') IS FALSE) WHEN CAST(rt1.c2 AS BLOB) THEN rt1.c1 ELSE rt1.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((rt1.c2) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN x'4fb0' THEN (('461447429') IS FALSE) WHEN CAST(rt1.c2 AS BLOB) THEN rt1.c1 ELSE rt1.c2 COLLATE RTRIM END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN ((rt1.c2) ISNULL) THEN rt1.c0 COLLATE NOCASE WHEN x'4fb0' THEN (('461447429') IS FALSE) WHEN CAST(rt1.c2 AS BLOB) THEN rt1.c1 ELSE rt1.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(t0.c1)))<=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c1)))AND(t0.c1)))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(t0.c1)))<=(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)OR(rt1.c1)))AND(t0.c1)))<=(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(t0.c1)))<=(CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE ((((SUBSTR(vt1.c0, rt1.c0)))<=((((t0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(vt1.c0, rt1.c0)))<=((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE ((((SUBSTR(vt1.c0, rt1.c0)))<=((((t0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((SUBSTR(vt1.c0, rt1.c0)))<=((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE ((((SUBSTR(vt1.c0, rt1.c0)))<=((((t0.c0) NOTNULL)))));
SELECT * FROM vt1, t0, vt0 NATURAL JOIN rt1 WHERE ((((((t0.c1 IN ()))AND(NULL)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN ()))AND(NULL)))AND(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 NATURAL JOIN rt1);
SELECT * FROM vt1, t0, vt0 NATURAL JOIN rt1 WHERE ((((((t0.c1 IN ()))AND(NULL)))AND(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN ()))AND(NULL)))AND(vt0.c0))) IS TRUE)  as count FROM vt1, t0, vt0 NATURAL JOIN rt1);
SELECT * FROM vt1, t0, vt0 NATURAL JOIN rt1 WHERE ((((((t0.c1 IN ()))AND(NULL)))AND(vt0.c0)));
SELECT * FROM t0, vt1, vt0, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT * FROM t0, vt1, vt0, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT * FROM t0, vt1, vt0, rt1 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)))))OR(''))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)))))OR('')));
SELECT SUM(count) FROM (SELECT ((((((NULL)OR(((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)))))OR(''))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((NULL)OR(((((vt1.c2)OR(vt1.c2)))AND(vt1.c0)))))OR('')));
SELECT COUNT(*) FROM t0, rt1 WHERE (((NULL)==(CAST(rt1.c0 AS BLOB)))) ORDER BY CASE '942134833'  WHEN x'' THEN (((t0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE '942134833'  WHEN x'' THEN (((t0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END);
SELECT COUNT(*) FROM t0, rt1 WHERE (((NULL)==(CAST(rt1.c0 AS BLOB)))) ORDER BY CASE '942134833'  WHEN x'' THEN (((t0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)==(CAST(rt1.c0 AS BLOB)))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE '942134833'  WHEN x'' THEN (((t0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END);
SELECT COUNT(*) FROM t0, rt1 WHERE (((NULL)==(CAST(rt1.c0 AS BLOB)))) ORDER BY CASE '942134833'  WHEN x'' THEN (((t0.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END;
SELECT * FROM vt0, t0, rt1, vt1 WHERE ((((((vt1.c0))<=((NULL)))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((('') NOT BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((NULL)))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((('') NOT BETWEEN (vt1.c2) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 WHERE ((((((vt1.c0))<=((NULL)))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((('') NOT BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((NULL)))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((('') NOT BETWEEN (vt1.c2) AND (vt1.c1))))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 WHERE ((((((vt1.c0))<=((NULL)))) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((('') NOT BETWEEN (vt1.c2) AND (vt1.c1)))));
SELECT * FROM t0 WHERE (CASE '579351781'  WHEN '-20099054' THEN ((t0.c1)IS(t0.c1)) ELSE LOWER(t0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '579351781'  WHEN '-20099054' THEN ((t0.c1)IS(t0.c1)) ELSE LOWER(t0.c1) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE '579351781'  WHEN '-20099054' THEN ((t0.c1)IS(t0.c1)) ELSE LOWER(t0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE '579351781'  WHEN '-20099054' THEN ((t0.c1)IS(t0.c1)) ELSE LOWER(t0.c1) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE '579351781'  WHEN '-20099054' THEN ((t0.c1)IS(t0.c1)) ELSE LOWER(t0.c1) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((x'eb09') IS FALSE))||(((rt1.c0)<<(rt1.c1)))) WHERE ('1540587353') ORDER BY ((rt1.c2)<=(vt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('1540587353') IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((x'eb09') IS FALSE))||(((rt1.c0)<<(rt1.c1)))) ORDER BY ((rt1.c2)<=(vt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((x'eb09') IS FALSE))||(((rt1.c0)<<(rt1.c1)))) WHERE ('1540587353') ORDER BY ((rt1.c2)<=(vt1.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('1540587353') IS TRUE)  as count FROM vt1 CROSS JOIN rt1 ON ((((x'eb09') IS FALSE))||(((rt1.c0)<<(rt1.c1)))) ORDER BY ((rt1.c2)<=(vt1.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt1 ON ((((x'eb09') IS FALSE))||(((rt1.c0)<<(rt1.c1)))) WHERE ('1540587353') ORDER BY ((rt1.c2)<=(vt1.c1)) COLLATE BINARY;
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (0.7736963809012323);
SELECT SUM(count) FROM (SELECT ALL ((0.7736963809012323) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (0.7736963809012323);
SELECT SUM(count) FROM (SELECT ALL ((0.7736963809012323) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (0.7736963809012323);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST((rt1.c1 IN (t0.c1, vt1.c1)) AS BLOB) CROSS JOIN vt1 ON TRIM(DISTINCT IFNULL(vt1.c1, rt1.c0), '264489426' COLLATE NOCASE) WHERE (((COALESCE(vt1.c1, rt1.c1)) IS FALSE)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(vt1.c1 AS INTEGER) ELSE (vt1.c0 IN ()) END  NULLS LAST, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (((((((((t0.c0)AND(t0.c0)))OR('W峇e~')))AND(t0.c2)))AND(rt1.c0)))) DESC  NULLS LAST, ((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt1.c1, rt1.c1)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST((rt1.c1 IN (t0.c1, vt1.c1)) AS BLOB) CROSS JOIN vt1 ON TRIM(DISTINCT IFNULL(vt1.c1, rt1.c0), '264489426' COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(vt1.c1 AS INTEGER) ELSE (vt1.c0 IN ()) END  NULLS LAST, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (((((((((t0.c0)AND(t0.c0)))OR('W峇e~')))AND(t0.c2)))AND(rt1.c0)))) DESC  NULLS LAST, ((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST((rt1.c1 IN (t0.c1, vt1.c1)) AS BLOB) CROSS JOIN vt1 ON TRIM(DISTINCT IFNULL(vt1.c1, rt1.c0), '264489426' COLLATE NOCASE) WHERE (((COALESCE(vt1.c1, rt1.c1)) IS FALSE)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(vt1.c1 AS INTEGER) ELSE (vt1.c0 IN ()) END  NULLS LAST, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (((((((((t0.c0)AND(t0.c0)))OR('W峇e~')))AND(t0.c2)))AND(rt1.c0)))) DESC  NULLS LAST, ((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt1.c1, rt1.c1)) IS FALSE)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON CAST((rt1.c1 IN (t0.c1, vt1.c1)) AS BLOB) CROSS JOIN vt1 ON TRIM(DISTINCT IFNULL(vt1.c1, rt1.c0), '264489426' COLLATE NOCASE) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(vt1.c1 AS INTEGER) ELSE (vt1.c0 IN ()) END  NULLS LAST, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (((((((((t0.c0)AND(t0.c0)))OR('W峇e~')))AND(t0.c2)))AND(rt1.c0)))) DESC  NULLS LAST, ((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON CAST((rt1.c1 IN (t0.c1, vt1.c1)) AS BLOB) CROSS JOIN vt1 ON TRIM(DISTINCT IFNULL(vt1.c1, rt1.c0), '264489426' COLLATE NOCASE) WHERE (((COALESCE(vt1.c1, rt1.c1)) IS FALSE)) ORDER BY CASE WHEN (rt1.c1 IN ()) THEN CAST(vt1.c1 AS INTEGER) ELSE (vt1.c0 IN ()) END  NULLS LAST, ((CAST(rt1.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)%(rt1.c1))) AND (((((((((t0.c0)AND(t0.c0)))OR('W峇e~')))AND(t0.c2)))AND(rt1.c0)))) DESC  NULLS LAST, ((t0.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE RTRIM;
SELECT * FROM vt0 INNER JOIN rt1 ON (((- (rt1.c0)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND (((~ (rt1.c1)))))) ORDER BY 0x76ba98b1 ASC, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((rt1.c1)*(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND (((~ (rt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((- (rt1.c0)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY 0x76ba98b1 ASC, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((rt1.c1)*(vt0.c1)))))  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN rt1 ON (((- (rt1.c0)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND (((~ (rt1.c1)))))) ORDER BY 0x76ba98b1 ASC, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((rt1.c1)*(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((((vt0.c1)*(vt0.c1)))) AND (((~ (rt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((- (rt1.c0)))<<(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))) ORDER BY 0x76ba98b1 ASC, (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((rt1.c1)*(vt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c2)) THEN (vt0.c0 IN (vt0.c0)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c2)) THEN (vt0.c0 IN (vt0.c0)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c2)) THEN (vt0.c0 IN (vt0.c0)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c2)) THEN (vt0.c0 IN (vt0.c0)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOT NULL)  WHEN (- (vt0.c2)) THEN (vt0.c0 IN (vt0.c0)) WHEN CAST(vt0.c1 AS INTEGER) THEN ((((((((vt0.c2)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)) WHEN vt0.c1 COLLATE RTRIM THEN ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE (((((((t0.c2) IS FALSE))AND(((((((((vt0.c2)OR('lsRiy.^')))AND(vt1.c2)))AND(t0.c2)))OR(vt0.c0)))))OR(CASE vt1.c1  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c1 THEN t0.c0 END))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) IS FALSE))AND(((((((((vt0.c2)OR('lsRiy.^')))AND(vt1.c2)))AND(t0.c2)))OR(vt0.c0)))))OR(CASE vt1.c1  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE (((((((t0.c2) IS FALSE))AND(((((((((vt0.c2)OR('lsRiy.^')))AND(vt1.c2)))AND(t0.c2)))OR(vt0.c0)))))OR(CASE vt1.c1  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c1 THEN t0.c0 END))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2) IS FALSE))AND(((((((((vt0.c2)OR('lsRiy.^')))AND(vt1.c2)))AND(t0.c2)))OR(vt0.c0)))))OR(CASE vt1.c1  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) ORDER BY x'' ASC  NULLS LAST);
SELECT * FROM t0, vt1 RIGHT OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS INTEGER) WHERE (((((((t0.c2) IS FALSE))AND(((((((((vt0.c2)OR('lsRiy.^')))AND(vt1.c2)))AND(t0.c2)))OR(vt0.c0)))))OR(CASE vt1.c1  WHEN t0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt1.c1 THEN t0.c0 END))) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM t0, vt0, vt1, rt1 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (NOT ('-916529898')) THEN ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (NOT ('-916529898')) THEN ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM t0, vt0, vt1, rt1);
SELECT * FROM t0, vt0, vt1, rt1 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (NOT ('-916529898')) THEN ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (NOT ('-916529898')) THEN ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM t0, vt0, vt1, rt1);
SELECT * FROM t0, vt0, vt1, rt1 WHERE (CASE ((t0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))  WHEN (NOT ('-916529898')) THEN ((rt1.c0) IS TRUE) END);
SELECT * FROM vt0 WHERE ((~ (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((~ (((vt0.c2) NOTNULL))));
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt1, vt0 NATURAL JOIN rt1 WHERE (((NULL) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((((((vt1.c1))<((0x28d05c52)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<((0x28d05c52)))) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((((((vt1.c1))<((0x28d05c52)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1))<((0x28d05c52)))) ISNULL)) IS TRUE)  as count FROM t0, vt1, rt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((((((vt1.c1))<((0x28d05c52)))) ISNULL));
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c2)) IN (((((((((vt1.c1)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c2)) IN (((((((((vt1.c1)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c2)) IN (((((((((vt1.c1)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c2)) IN (((((((((vt1.c1)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE ((((vt0.c2) BETWEEN (vt0.c2) AND (rt1.c2)) IN (((((((((vt1.c1)AND(vt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(vt1.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2 IN (t0.c0, vt0.c1))))>((UPPER(vt0.c2))))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 IN (t0.c0, vt0.c1))))>((UPPER(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2 IN (t0.c0, vt0.c1))))>((UPPER(vt0.c2))))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2 IN (t0.c0, vt0.c1))))>((UPPER(vt0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE) IS FALSE) ASC);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c2 IN (t0.c0, vt0.c1))))>((UPPER(vt0.c2))))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS FALSE) ASC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR('1'))))) ORDER BY ((rt1.c2)>=(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))), ((((rt1.c2) IS FALSE)) ISNULL)  NULLS LAST, CASE (rt1.c2 IN (rt1.c0))  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN HEX(rt1.c0) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((rt1.c2)OR(rt1.c1)))OR(x'b3a2')) WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c2 IN ()) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))==(((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR('1'))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))), ((((rt1.c2) IS FALSE)) ISNULL)  NULLS LAST, CASE (rt1.c2 IN (rt1.c0))  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN HEX(rt1.c0) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((rt1.c2)OR(rt1.c1)))OR(x'b3a2')) WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c2 IN ()) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR('1'))))) ORDER BY ((rt1.c2)>=(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))), ((((rt1.c2) IS FALSE)) ISNULL)  NULLS LAST, CASE (rt1.c2 IN (rt1.c0))  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN HEX(rt1.c0) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((rt1.c2)OR(rt1.c1)))OR(x'b3a2')) WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c2 IN ()) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))==(((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR('1'))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)>=(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))), ((((rt1.c2) IS FALSE)) ISNULL)  NULLS LAST, CASE (rt1.c2 IN (rt1.c0))  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN HEX(rt1.c0) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((rt1.c2)OR(rt1.c1)))OR(x'b3a2')) WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c2 IN ()) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c2)))=(((((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c2)))OR('1'))))) ORDER BY ((rt1.c2)>=(((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))), ((((rt1.c2) IS FALSE)) ISNULL)  NULLS LAST, CASE (rt1.c2 IN (rt1.c0))  WHEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN HEX(rt1.c0) WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((((rt1.c2)OR(rt1.c1)))OR(x'b3a2')) WHEN ((rt1.c0)||(rt1.c2)) THEN (rt1.c2 IN ()) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END;
SELECT ALL * FROM vt1, vt0, rt1 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY CAST(((rt1.c1) NOT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CAST(((rt1.c1) NOT NULL) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY CAST(((rt1.c1) NOT NULL) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY CAST(((rt1.c1) NOT NULL) AS REAL)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY CAST(((rt1.c1) NOT NULL) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (CASE ((rt1.c0)GLOB(0X28d05c52))  WHEN rt1.c1 COLLATE RTRIM THEN ((t0.c1)<=(rt1.c2)) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)GLOB(0x28d05c52))  WHEN rt1.c1 COLLATE RTRIM THEN ((t0.c1)<=(rt1.c2)) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, vt1, rt1, t0);
SELECT COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (CASE ((rt1.c0)GLOB(0X28d05c52))  WHEN rt1.c1 COLLATE RTRIM THEN ((t0.c1)<=(rt1.c2)) ELSE rt1.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)GLOB(0x28d05c52))  WHEN rt1.c1 COLLATE RTRIM THEN ((t0.c1)<=(rt1.c2)) ELSE rt1.c1 END) IS TRUE)  as count FROM vt0, vt1, rt1, t0);
SELECT COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (CASE ((rt1.c0)GLOB(0X28d05c52))  WHEN rt1.c1 COLLATE RTRIM THEN ((t0.c1)<=(rt1.c2)) ELSE rt1.c1 END);
SELECT * FROM vt1, vt0, rt1, t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ())) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt1, t0 ORDER BY t0.c1 ASC);
SELECT * FROM vt1, vt0, rt1, t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ())) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt1, t0 ORDER BY t0.c1 ASC);
SELECT * FROM vt1, vt0, rt1, t0 WHERE ((CAST(t0.c1 AS NUMERIC) IN ())) ORDER BY t0.c1 ASC;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) IS FALSE) FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c1)) WHEN ((x'')/(vt0.c1)) THEN ((vt0.c0)AND(vt0.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (0.2990015950386241)) END WHERE (x'') ORDER BY ((((rt1.c1)OR(vt0.c2))) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c1)<=(vt0.c1))))  NULLS LAST, ((((rt1.c0)/(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) IS FALSE) FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c1)) WHEN ((x'')/(vt0.c1)) THEN ((vt0.c0)AND(vt0.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (0.2990015950386241)) END ORDER BY ((((rt1.c1)OR(vt0.c2))) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c1)<=(vt0.c1))))  NULLS LAST, ((((rt1.c0)/(vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) IS FALSE) FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c1)) WHEN ((x'')/(vt0.c1)) THEN ((vt0.c0)AND(vt0.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (0.2990015950386241)) END WHERE (x'') ORDER BY ((((rt1.c1)OR(vt0.c2))) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c1)<=(vt0.c1))))  NULLS LAST, ((((rt1.c0)/(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) IS FALSE) FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c1)) WHEN ((x'')/(vt0.c1)) THEN ((vt0.c0)AND(vt0.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (0.2990015950386241)) END ORDER BY ((((rt1.c1)OR(vt0.c2))) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c1)<=(vt0.c1))))  NULLS LAST, ((((rt1.c0)/(vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON ((((vt0.c1) NOTNULL)) IS FALSE) FULL OUTER JOIN vt1 ON CASE WHEN ((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c0)) THEN (- (rt1.c1)) WHEN ((x'')/(vt0.c1)) THEN ((vt0.c0)AND(vt0.c0)) WHEN CAST(vt0.c1 AS NUMERIC) THEN (NOT (0.2990015950386241)) END WHERE (x'') ORDER BY ((((rt1.c1)OR(vt0.c2))) BETWEEN (vt1.c2 COLLATE NOCASE) AND (((vt0.c1)<=(vt0.c1))))  NULLS LAST, ((((rt1.c0)/(vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) ORDER BY ((NULL) NOTNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) NOTNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) ORDER BY ((NULL) NOTNULL) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) NOTNULL) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c1 END AS TEXT)) ORDER BY ((NULL) NOTNULL) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0 WHERE ((- (t0.c0))) ORDER BY (((t0.c1 IN ()))>>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))>>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (t0.c0))) ORDER BY (((t0.c1 IN ()))>>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))>>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- (t0.c0))) ORDER BY (((t0.c1 IN ()))>>(((((t0.c0)OR(t0.c1)))OR(t0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY rt1.c2 ASC, '1584634598'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY rt1.c2 ASC, '1584634598'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY rt1.c2 ASC, '1584634598'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY rt1.c2 ASC, '1584634598'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (UNLIKELY(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY rt1.c2 ASC, '1584634598'  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, vt0 RIGHT OUTER JOIN vt1 ON (NOT (((((((((t0.c0)AND(rt1.c1)))OR('-1002729352')))OR(x'cab5')))AND(vt1.c2)))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1, vt0 RIGHT OUTER JOIN vt1 ON (NOT (((((((((t0.c0)AND(rt1.c1)))OR('-1002729352')))OR(x'cab5')))AND(vt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 RIGHT OUTER JOIN vt1 ON (NOT (((((((((t0.c0)AND(rt1.c1)))OR('-1002729352')))OR(x'cab5')))AND(vt1.c2)))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, rt1, vt0 RIGHT OUTER JOIN vt1 ON (NOT (((((((((t0.c0)AND(rt1.c1)))OR('-1002729352')))OR(x'cab5')))AND(vt1.c2)))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 RIGHT OUTER JOIN vt1 ON (NOT (((((((((t0.c0)AND(rt1.c1)))OR('-1002729352')))OR(x'cab5')))AND(vt1.c2)))) WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 NATURAL JOIN t0 WHERE ((CAST(vt1.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE (((0xffffffffc3ff9974) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0xffffffffc3ff9974) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((0xffffffffc3ff9974) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0xffffffffc3ff9974) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((0xffffffffc3ff9974) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, rt1, t0 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY x'1cdb' DESC  NULLS LAST, ((4.8975977E7)+(((((((((t0.c1)OR(rt1.c0)))OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))), CAST(vt1.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY x'1cdb' DESC  NULLS LAST, ((4.8975977E7)+(((((((((t0.c1)OR(rt1.c0)))OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))), CAST(vt1.c2 COLLATE NOCASE AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, rt1, t0 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY x'1cdb' DESC  NULLS LAST, ((4.8975977E7)+(((((((((t0.c1)OR(rt1.c0)))OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))), CAST(vt1.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY x'1cdb' DESC  NULLS LAST, ((4.8975977E7)+(((((((((t0.c1)OR(rt1.c0)))OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))), CAST(vt1.c2 COLLATE NOCASE AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt1, rt1, t0 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY x'1cdb' DESC  NULLS LAST, ((4.8975977E7)+(((((((((t0.c1)OR(rt1.c0)))OR(vt0.c0)))AND(vt1.c2)))AND(vt1.c2)))), CAST(vt1.c2 COLLATE NOCASE AS INTEGER) DESC;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE (CAST((~ (vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE (CAST((~ (vt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1 NOT INDEXED, t0, vt0 WHERE (CAST((~ (vt0.c2)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ('start of day');
SELECT SUM(count) FROM (SELECT (('start of day') IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ('start of day');
SELECT SUM(count) FROM (SELECT (('start of day') IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ('start of day');
SELECT COUNT(*) FROM vt1 WHERE (JULIANDAY(((vt1.c2)<<(vt1.c0)), CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END, (((x'73faa82d'))<=((vt1.c0))), (171205735 IN ()), vt1.c0, ((vt1.c1) IS FALSE), (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((vt1.c2)<<(vt1.c0)), CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END, (((x'73faa82d'))<=((vt1.c0))), (171205735 IN ()), vt1.c0, ((vt1.c1) IS FALSE), (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (JULIANDAY(((vt1.c2)<<(vt1.c0)), CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END, (((x'73faa82d'))<=((vt1.c0))), (171205735 IN ()), vt1.c0, ((vt1.c1) IS FALSE), (((vt1.c0))>=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((JULIANDAY(((vt1.c2)<<(vt1.c0)), CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END, (((x'73faa82d'))<=((vt1.c0))), (171205735 IN ()), vt1.c0, ((vt1.c1) IS FALSE), (((vt1.c0))>=((vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (JULIANDAY(((vt1.c2)<<(vt1.c0)), CASE vt1.c2  WHEN vt1.c2 THEN vt1.c2 ELSE vt1.c2 END, (((x'73faa82d'))<=((vt1.c0))), (171205735 IN ()), vt1.c0, ((vt1.c1) IS FALSE), (((vt1.c0))>=((vt1.c0)))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c2)OR(t0.c1)))AND(rt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(rt1.c2)))AND(t0.c1)) END) ORDER BY ((IFNULL(DISTINCT rt1.c0, vt0.c1))<=((NOT (t0.c1)))), t0.c2 ASC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c2)OR(t0.c1)))AND(rt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(rt1.c2)))AND(t0.c1)) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((IFNULL(DISTINCT rt1.c0, vt0.c1))<=((NOT (t0.c1)))), t0.c2 ASC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c2 END) IS TRUE) DESC);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c2)OR(t0.c1)))AND(rt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(rt1.c2)))AND(t0.c1)) END) ORDER BY ((IFNULL(DISTINCT rt1.c0, vt0.c1))<=((NOT (t0.c1)))), t0.c2 ASC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c2 END) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c2)OR(t0.c1)))AND(rt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(rt1.c2)))AND(t0.c1)) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY ((IFNULL(DISTINCT rt1.c0, vt0.c1))<=((NOT (t0.c1)))), t0.c2 ASC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c2 END) IS TRUE) DESC);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN (t0.c1 IN ()) THEN ((((((((((((t0.c2)OR(t0.c1)))AND(rt1.c0)))AND(vt0.c2)))AND(vt0.c2)))OR(rt1.c2)))AND(t0.c1)) END) ORDER BY ((IFNULL(DISTINCT rt1.c0, vt0.c1))<=((NOT (t0.c1)))), t0.c2 ASC, ((CASE WHEN vt0.c0 THEN t0.c2 ELSE vt0.c2 END) IS TRUE) DESC;
SELECT * FROM t0, vt1 WHERE ((((t0.c2 IN (vt1.c0)))<>((((vt1.c0, vt1.c2, t0.c2)) BETWEEN ((t0.c0, vt1.c0, t0.c2)) AND ((vt1.c0, t0.c1, vt1.c1)))))) ORDER BY (+ ((((t0.c0))<=((t0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (vt1.c0)))<>((((vt1.c0, vt1.c2, t0.c2)) BETWEEN ((t0.c0, vt1.c0, t0.c2)) AND ((vt1.c0, t0.c1, vt1.c1)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((t0.c0))<=((t0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((((t0.c2 IN (vt1.c0)))<>((((vt1.c0, vt1.c2, t0.c2)) BETWEEN ((t0.c0, vt1.c0, t0.c2)) AND ((vt1.c0, t0.c1, vt1.c1)))))) ORDER BY (+ ((((t0.c0))<=((t0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN (vt1.c0)))<>((((vt1.c0, vt1.c2, t0.c2)) BETWEEN ((t0.c0, vt1.c0, t0.c2)) AND ((vt1.c0, t0.c1, vt1.c1)))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((t0.c0))<=((t0.c1)))))  NULLS FIRST);
SELECT * FROM t0, vt1 WHERE ((((t0.c2 IN (vt1.c0)))<>((((vt1.c0, vt1.c2, t0.c2)) BETWEEN ((t0.c0, vt1.c0, t0.c2)) AND ((vt1.c0, t0.c1, vt1.c1)))))) ORDER BY (+ ((((t0.c0))<=((t0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c2)))))!=((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE('1705381013')) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)&(0.1511950583697932)), CAST(vt0.c2 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))<=((vt0.c2)))))!=((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE('1705381013')) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)&(0.1511950583697932)), CAST(vt0.c2 AS INTEGER)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c2)))))!=((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE('1705381013')) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)&(0.1511950583697932)), CAST(vt0.c2 AS INTEGER)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))<=((vt0.c2)))))!=((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE('1705381013')) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)&(0.1511950583697932)), CAST(vt0.c2 AS INTEGER)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, vt0.c1))) IN ())) ORDER BY ((((((vt0.c0))<=((vt0.c2)))))!=((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))))  NULLS LAST, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE('1705381013')) ASC  NULLS LAST, (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, ((vt0.c1)||(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))<=((CAST(vt0.c0 AS REAL), ((vt0.c0)&(0.1511950583697932)), CAST(vt0.c2 AS INTEGER)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((+ (((t0.c0)+(t0.c2))))) ORDER BY 0.4930148239367469 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)+(t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY 0.4930148239367469 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((+ (((t0.c0)+(t0.c2))))) ORDER BY 0.4930148239367469 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((t0.c0)+(t0.c2))))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY 0.4930148239367469 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((+ (((t0.c0)+(t0.c2))))) ORDER BY 0.4930148239367469 ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (x'de83') ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (rt1.c1 IN (rt1.c0)) WHEN rt1.c1 THEN ((rt1.c1)OR(rt1.c0)) WHEN 0.39885362121014734 THEN rt1.c0 WHEN ((NULL) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (2.5336991E7)) THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ((x'de83') IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (rt1.c1 IN (rt1.c0)) WHEN rt1.c1 THEN ((rt1.c1)OR(rt1.c0)) WHEN 0.39885362121014734 THEN rt1.c0 WHEN ((NULL) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (2.5336991E7)) THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) END);
SELECT * FROM rt1 WHERE (x'de83') ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (rt1.c1 IN (rt1.c0)) WHEN rt1.c1 THEN ((rt1.c1)OR(rt1.c0)) WHEN 0.39885362121014734 THEN rt1.c0 WHEN ((NULL) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (2.5336991E7)) THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) END;
SELECT SUM(count) FROM (SELECT ((x'de83') IS TRUE)  as count FROM rt1 NOT INDEXED ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (rt1.c1 IN (rt1.c0)) WHEN rt1.c1 THEN ((rt1.c1)OR(rt1.c0)) WHEN 0.39885362121014734 THEN rt1.c0 WHEN ((NULL) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (2.5336991E7)) THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) END);
SELECT * FROM rt1 WHERE (x'de83') ORDER BY CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)) THEN (rt1.c1 IN (rt1.c0)) WHEN rt1.c1 THEN ((rt1.c1)OR(rt1.c0)) WHEN 0.39885362121014734 THEN rt1.c0 WHEN ((NULL) IS FALSE) THEN ((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)) WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (2.5336991E7)) THEN ((((rt1.c0)OR(rt1.c2)))AND(rt1.c2)) END;
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE ((((((((((+ (vt1.c1)))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN vt1.c2 ELSE t0.c2 END)))OR(DATE(rt1.c0, 'j^FUDi#3', rt1.c2))))AND(((((((((rt1.c1)AND(t0.c1)))OR(vt1.c2)))OR(x'')))AND(t0.c1))))) ORDER BY 2.5336991E7, ((vt1.c0 COLLATE BINARY) IS FALSE), CAST(LIKELY(DISTINCT t0.c1) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c1)))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN vt1.c2 ELSE t0.c2 END)))OR(DATE(rt1.c0, 'j^FUDi#3', rt1.c2))))AND(((((((((rt1.c1)AND(t0.c1)))OR(vt1.c2)))OR(x'')))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY 2.5336991E7, ((vt1.c0 COLLATE BINARY) IS FALSE), CAST(LIKELY(DISTINCT t0.c1) AS BLOB));
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE ((((((((((+ (vt1.c1)))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN vt1.c2 ELSE t0.c2 END)))OR(DATE(rt1.c0, 'j^FUDi#3', rt1.c2))))AND(((((((((rt1.c1)AND(t0.c1)))OR(vt1.c2)))OR(x'')))AND(t0.c1))))) ORDER BY 2.5336991E7, ((vt1.c0 COLLATE BINARY) IS FALSE), CAST(LIKELY(DISTINCT t0.c1) AS BLOB);
SELECT SUM(count) FROM (SELECT (((((((((((+ (vt1.c1)))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN vt1.c2 ELSE t0.c2 END)))OR(DATE(rt1.c0, 'j^FUDi#3', rt1.c2))))AND(((((((((rt1.c1)AND(t0.c1)))OR(vt1.c2)))OR(x'')))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY 2.5336991E7, ((vt1.c0 COLLATE BINARY) IS FALSE), CAST(LIKELY(DISTINCT t0.c1) AS BLOB));
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE ((((((((((+ (vt1.c1)))OR(rt1.c0)))AND(CASE WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c2 WHEN x'' THEN vt1.c2 ELSE t0.c2 END)))OR(DATE(rt1.c0, 'j^FUDi#3', rt1.c2))))AND(((((((((rt1.c1)AND(t0.c1)))OR(vt1.c2)))OR(x'')))AND(t0.c1))))) ORDER BY 2.5336991E7, ((vt1.c0 COLLATE BINARY) IS FALSE), CAST(LIKELY(DISTINCT t0.c1) AS BLOB);
SELECT * FROM t0, vt1, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT * FROM t0, vt1, rt1 WHERE (vt1.c2);
SELECT SUM(count) FROM (SELECT ((vt1.c2) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT * FROM t0, vt1, rt1 WHERE (vt1.c2);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((CASE vt1.c2  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c1 END))=((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c2  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c1 END))=((t0.c0)))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((CASE vt1.c2  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c1 END))=((t0.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c2  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c1 END))=((t0.c0)))) IS TRUE)  as count FROM vt0, vt1 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0, vt1 NATURAL JOIN t0 WHERE ((((CASE vt1.c2  WHEN vt1.c0 THEN vt0.c2 ELSE vt1.c1 END))=((t0.c0))));
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c2)OR(NULL))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c2)OR(NULL))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)))) ASC);
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c2)OR(NULL))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c2)OR(NULL))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)))) ASC);
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt1.c2)OR(NULL))) AND (((vt1.c1) BETWEEN (vt1.c2) AND (t0.c0)))) ASC;
SELECT COUNT(*) FROM t0, vt1 WHERE (0.2693171962023988);
SELECT SUM(count) FROM (SELECT ALL ((0.2693171962023988) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (0.2693171962023988);
SELECT SUM(count) FROM (SELECT ALL ((0.2693171962023988) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (0.2693171962023988);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (vt0.c2 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((t0.c1)||(vt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (vt0.c2 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)||(vt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (vt0.c2 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((t0.c1)||(vt0.c2)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 COLLATE RTRIM THEN (vt0.c2 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)||(vt0.c2)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE WHEN t0.c0 COLLATE RTRIM THEN (vt0.c2 IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((t0.c1))) WHEN ((vt0.c1)-(vt0.c1)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY ((t0.c1)||(vt0.c2)) COLLATE BINARY DESC;
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC)) IS TRUE) WHERE (CAST(CASE t0.c2  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC)) IS TRUE) WHERE (CAST(CASE t0.c2  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t0.c2  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c2 END AS REAL)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC)) IS TRUE));
SELECT ALL * FROM rt1 FULL OUTER JOIN t0 ON ((CAST(t0.c1 AS NUMERIC)) IS TRUE) WHERE (CAST(CASE t0.c2  WHEN rt1.c0 THEN t0.c2 ELSE rt1.c2 END AS REAL));
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)>('461447429')))&(((vt1.c0)<<(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)>('461447429')))&(((vt1.c0)<<(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)>('461447429')))&(((vt1.c0)<<(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)>('461447429')))&(((vt1.c0)<<(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c2)>('461447429')))&(((vt1.c0)<<(vt1.c2)))));
SELECT * FROM rt1, t0, vt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c2)))) AND ((((vt1.c1)<=(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c2)))) AND ((((vt1.c1)<=(rt1.c0)))))) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT * FROM rt1, t0, vt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c2)))) AND ((((vt1.c1)<=(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c2)))) AND ((((vt1.c1)<=(rt1.c0)))))) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT * FROM rt1, t0, vt1 WHERE ((((rt1.c1)) BETWEEN ((((rt1.c1)<>(rt1.c2)))) AND ((((vt1.c1)<=(rt1.c0))))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY (rt1.c0 IN ()), (+ (((x'96086d49') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (rt1.c0 IN ()), (+ (((x'96086d49') NOT NULL))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY (rt1.c0 IN ()), (+ (((x'96086d49') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (rt1.c0 IN ()), (+ (((x'96086d49') NOT NULL))));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((((vt0.c2) NOTNULL)) NOT NULL)) ORDER BY (rt1.c0 IN ()), (+ (((x'96086d49') NOT NULL)));
SELECT * FROM rt1 INNER JOIN vt1 ON x'' CROSS JOIN vt0 ON ((((vt1.c2, vt0.c0, vt1.c1, vt0.c0, vt1.c1))<=((rt1.c0, vt1.c1, vt0.c1, vt0.c0, rt1.c0))) IN ()) WHERE (((((vt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON x'' CROSS JOIN vt0 ON ((((vt1.c2, vt0.c0, vt1.c1, vt0.c0, vt1.c1))<=((rt1.c0, vt1.c1, vt0.c1, vt0.c0, rt1.c0))) IN ()));
SELECT * FROM rt1 INNER JOIN vt1 ON x'' CROSS JOIN vt0 ON ((((vt1.c2, vt0.c0, vt1.c1, vt0.c0, vt1.c1))<=((rt1.c0, vt1.c1, vt0.c1, vt0.c0, rt1.c0))) IN ()) WHERE (((((vt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON x'' CROSS JOIN vt0 ON ((((vt1.c2, vt0.c0, vt1.c1, vt0.c0, vt1.c1))<=((rt1.c0, vt1.c1, vt0.c1, vt0.c0, rt1.c0))) IN ()));
SELECT * FROM rt1 INNER JOIN vt1 ON x'' CROSS JOIN vt0 ON ((((vt1.c2, vt0.c0, vt1.c1, vt0.c0, vt1.c1))<=((rt1.c0, vt1.c1, vt0.c1, vt0.c0, rt1.c0))) IN ()) WHERE (((((vt0.c2) NOTNULL)) NOT NULL));
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((+ (vt1.c0)))|(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))|(rt1.c0))) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((+ (vt1.c0)))|(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0)))|(rt1.c0))) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((+ (vt1.c0)))|(rt1.c0)));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((((((('-476365094')AND(((((((((t0.c2)OR(vt0.c1)))AND(vt1.c2)))OR(rt1.c1)))AND(vt0.c2)))))OR((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))))AND(TYPEOF(DISTINCT t0.c0))))OR(((((((((((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-476365094')AND(((((((((t0.c2)OR(vt0.c1)))AND(vt1.c2)))OR(rt1.c1)))AND(vt0.c2)))))OR((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))))AND(TYPEOF(DISTINCT t0.c0))))OR(((((((((((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((((((('-476365094')AND(((((((((t0.c2)OR(vt0.c1)))AND(vt1.c2)))OR(rt1.c1)))AND(vt0.c2)))))OR((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))))AND(TYPEOF(DISTINCT t0.c0))))OR(((((((((((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((('-476365094')AND(((((((((t0.c2)OR(vt0.c1)))AND(vt1.c2)))OR(rt1.c1)))AND(vt0.c2)))))OR((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))))AND(TYPEOF(DISTINCT t0.c0))))OR(((((((((((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((((((('-476365094')AND(((((((((t0.c2)OR(vt0.c1)))AND(vt1.c2)))OR(rt1.c1)))AND(vt0.c2)))))OR((((t0.c2)) NOT BETWEEN ((rt1.c1)) AND ((t0.c0))))))AND(TYPEOF(DISTINCT t0.c0))))OR(((((((((((((vt1.c1)AND(vt1.c0)))AND(vt0.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(vt0.c2)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c0))) ISNULL) WHERE ((+ (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(vt0.c2)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(vt0.c2)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c0))) ISNULL) WHERE ((+ (((rt1.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c2) IS FALSE)))) IS TRUE)  as count FROM t0, vt0, vt1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(vt0.c2)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 FULL OUTER JOIN rt1 ON ((((((((((rt1.c2)AND(vt0.c2)))OR(t0.c0)))OR(vt1.c2)))AND(t0.c0))) ISNULL) WHERE ((+ (((rt1.c2) IS FALSE))));
SELECT * FROM t0, rt1 WHERE (((((x'')>(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((x'')>(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1);
SELECT * FROM t0, rt1 WHERE (((((x'')>(rt1.c1))) NOTNULL));
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (0.4894497830145099) AND (TRIM(DISTINCT vt1.c1, vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (0.4894497830145099) AND (TRIM(DISTINCT vt1.c1, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (0.4894497830145099) AND (TRIM(DISTINCT vt1.c1, vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (0.4894497830145099) AND (TRIM(DISTINCT vt1.c1, vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CAST(vt1.c1 AS BLOB)) NOT BETWEEN (0.4894497830145099) AND (TRIM(DISTINCT vt1.c1, vt1.c2))));
SELECT * FROM t0 INNER JOIN vt1 ON t0.c1 COLLATE NOCASE WHERE (((((t0.c1)>>(vt1.c2)))<=(((((vt1.c0)OR(vt1.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>>(vt1.c2)))<=(((((vt1.c0)OR(vt1.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON t0.c1 COLLATE NOCASE);
SELECT * FROM t0 INNER JOIN vt1 ON t0.c1 COLLATE NOCASE WHERE (((((t0.c1)>>(vt1.c2)))<=(((((vt1.c0)OR(vt1.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)>>(vt1.c2)))<=(((((vt1.c0)OR(vt1.c1)))AND(t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON t0.c1 COLLATE NOCASE);
SELECT * FROM t0 INNER JOIN vt1 ON t0.c1 COLLATE NOCASE WHERE (((((t0.c1)>>(vt1.c2)))<=(((((vt1.c0)OR(vt1.c1)))AND(t0.c2)))));
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS TEXT) IN ((t0.c1 IN (rt1.c2))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS TEXT) IN ((t0.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c1);
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS TEXT) IN ((t0.c1 IN (rt1.c2))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c1 AS TEXT) IN ((t0.c1 IN (rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY t0.c1);
SELECT * FROM rt1, t0 WHERE ((CAST(rt1.c1 AS TEXT) IN ((t0.c1 IN (rt1.c2))))) ORDER BY t0.c1;
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON rt1.c2 WHERE ((((rt1.c1, CASE rt1.c1  WHEN vt1.c1 THEN vt1.c2 END, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0))))<(((rt1.c1 IN ()), ((rt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), (rt1.c1 IN ()))))) ORDER BY (- (CAST(vt1.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, CASE rt1.c1  WHEN vt1.c1 THEN vt1.c2 END, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0))))<(((rt1.c1 IN ()), ((rt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON rt1.c2 ORDER BY (- (CAST(vt1.c1 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON rt1.c2 WHERE ((((rt1.c1, CASE rt1.c1  WHEN vt1.c1 THEN vt1.c2 END, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0))))<(((rt1.c1 IN ()), ((rt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), (rt1.c1 IN ()))))) ORDER BY (- (CAST(vt1.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, CASE rt1.c1  WHEN vt1.c1 THEN vt1.c2 END, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0))))<(((rt1.c1 IN ()), ((rt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), (rt1.c1 IN ()))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON rt1.c2 ORDER BY (- (CAST(vt1.c1 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN vt1 ON rt1.c2 WHERE ((((rt1.c1, CASE rt1.c1  WHEN vt1.c1 THEN vt1.c2 END, ((vt1.c1) NOT BETWEEN (vt1.c2) AND (rt1.c0))))<(((rt1.c1 IN ()), ((rt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c1)), (rt1.c1 IN ()))))) ORDER BY (- (CAST(vt1.c1 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())>>(((vt1.c0)>>(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())>>(((vt1.c0)>>(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())>>(((vt1.c0)>>(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())>>(((vt1.c0)>>(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LAST_INSERT_ROWID())>>(((vt1.c0)>>(vt1.c2))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(0.9554894461391514 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c2)))OR(vt1.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND(((vt0.c2)<<(1320745441)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.9554894461391514 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((vt1.c0)AND(vt0.c2)))OR(vt1.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND(((vt0.c2)<<(1320745441)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(0.9554894461391514 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c2)))OR(vt1.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND(((vt0.c2)<<(1320745441)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.9554894461391514 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((((((vt1.c0)AND(vt0.c2)))OR(vt1.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND(((vt0.c2)<<(1320745441)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((CAST(0.9554894461391514 AS NUMERIC)) NOT BETWEEN (((vt0.c0)<=(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY ((((((((((((vt1.c0)AND(vt0.c2)))OR(vt1.c1)))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)))OR((vt0.c0 IN ()))))OR(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))AND(((vt0.c2)<<(1320745441)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) ORDER BY (((t0.c1)*(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)*(t0.c1)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) ORDER BY (((t0.c1)*(t0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)*(t0.c1)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS TEXT)) ORDER BY (((t0.c1)*(t0.c1)) IN ());
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (NULL)) CROSS JOIN rt1 ON ((((((vt1.c1, vt0.c0, rt1.c2))<((rt1.c2, vt1.c1, rt1.c2)))))=((((((vt1.c0)OR(vt0.c1)))OR(vt0.c2))))) WHERE ('Z,s' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('Z,s' COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (NULL)) CROSS JOIN rt1 ON ((((((vt1.c1, vt0.c0, rt1.c2))<((rt1.c2, vt1.c1, rt1.c2)))))==((((((vt1.c0)OR(vt0.c1)))OR(vt0.c2))))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (NULL)) CROSS JOIN rt1 ON ((((((vt1.c1, vt0.c0, rt1.c2))<((rt1.c2, vt1.c1, rt1.c2)))))=((((((vt1.c0)OR(vt0.c1)))OR(vt0.c2))))) WHERE ('Z,s' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('Z,s' COLLATE RTRIM) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (NULL)) CROSS JOIN rt1 ON ((((((vt1.c1, vt0.c0, rt1.c2))<((rt1.c2, vt1.c1, rt1.c2)))))==((((((vt1.c0)OR(vt0.c1)))OR(vt0.c2))))));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((vt0.c0 IN ()) IN (NULL)) CROSS JOIN rt1 ON ((((((vt1.c1, vt0.c0, rt1.c2))<((rt1.c2, vt1.c1, rt1.c2)))))=((((((vt1.c0)OR(vt0.c1)))OR(vt0.c2))))) WHERE ('Z,s' COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE ((((vt1.c2)IS NOT(rt1.c2)) IN ())) ORDER BY (((vt1.c2, rt1.c0, 684743762)) NOT BETWEEN ((((((t0.c1)OR(vt0.c1)))OR(vt1.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END, ((vt1.c1)<<(rt1.c2)))) AND ((((t0.c1) NOTNULL), (NOT (vt1.c2)), STRFTIME(vt0.c1, vt0.c0, t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)IS NOT(rt1.c2)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, rt1 ORDER BY (((vt1.c2, rt1.c0, 684743762)) NOT BETWEEN ((((((t0.c1)OR(vt0.c1)))OR(vt1.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END, ((vt1.c1)<<(rt1.c2)))) AND ((((t0.c1) NOTNULL), (NOT (vt1.c2)), STRFTIME(vt0.c1, vt0.c0, t0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE ((((vt1.c2)IS NOT(rt1.c2)) IN ())) ORDER BY (((vt1.c2, rt1.c0, 684743762)) NOT BETWEEN ((((((t0.c1)OR(vt0.c1)))OR(vt1.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END, ((vt1.c1)<<(rt1.c2)))) AND ((((t0.c1) NOTNULL), (NOT (vt1.c2)), STRFTIME(vt0.c1, vt0.c0, t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c2)IS NOT(rt1.c2)) IN ())) IS TRUE)  as count FROM vt1, vt0, t0, rt1 ORDER BY (((vt1.c2, rt1.c0, 684743762)) NOT BETWEEN ((((((t0.c1)OR(vt0.c1)))OR(vt1.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END, ((vt1.c1)<<(rt1.c2)))) AND ((((t0.c1) NOTNULL), (NOT (vt1.c2)), STRFTIME(vt0.c1, vt0.c0, t0.c2)))) ASC);
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE ((((vt1.c2)IS NOT(rt1.c2)) IN ())) ORDER BY (((vt1.c2, rt1.c0, 684743762)) NOT BETWEEN ((((((t0.c1)OR(vt0.c1)))OR(vt1.c1)), CASE WHEN vt1.c0 THEN vt0.c1 END, ((vt1.c1)<<(rt1.c2)))) AND ((((t0.c1) NOTNULL), (NOT (vt1.c2)), STRFTIME(vt0.c1, vt0.c0, t0.c2)))) ASC;
SELECT ALL * FROM rt1, vt1 WHERE (((((((vt1.c0) NOT NULL))AND(HEX(vt1.c0))))OR(rt1.c2))) ORDER BY (rt1.c2 IN ())  NULLS FIRST, ((+ (rt1.c1)) IN (((((vt1.c1)OR(rt1.c0)))AND(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))AND(HEX(vt1.c0))))OR(rt1.c2))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (rt1.c2 IN ())  NULLS FIRST, ((+ (rt1.c1)) IN (((((vt1.c1)OR(rt1.c0)))AND(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((((((vt1.c0) NOT NULL))AND(HEX(vt1.c0))))OR(rt1.c2))) ORDER BY (rt1.c2 IN ())  NULLS FIRST, ((+ (rt1.c1)) IN (((((vt1.c1)OR(rt1.c0)))AND(rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) NOT NULL))AND(HEX(vt1.c0))))OR(rt1.c2))) IS TRUE)  as count FROM rt1, vt1 ORDER BY (rt1.c2 IN ())  NULLS FIRST, ((+ (rt1.c1)) IN (((((vt1.c1)OR(rt1.c0)))AND(rt1.c1))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt1 WHERE (((((((vt1.c0) NOT NULL))AND(HEX(vt1.c0))))OR(rt1.c2))) ORDER BY (rt1.c2 IN ())  NULLS FIRST, ((+ (rt1.c1)) IN (((((vt1.c1)OR(rt1.c0)))AND(rt1.c1))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN (t0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN (((('V')OR(t0.c2)))OR(t0.c2)) THEN vt0.c1 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (~ (vt1.c2)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, rt1, vt1 ORDER BY CASE WHEN (t0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN (((('V')OR(t0.c2)))OR(t0.c2)) THEN vt0.c1 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (~ (vt1.c2)) END);
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN (t0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN (((('V')OR(t0.c2)))OR(t0.c2)) THEN vt0.c1 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (~ (vt1.c2)) END;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, rt1, vt1 ORDER BY CASE WHEN (t0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN (((('V')OR(t0.c2)))OR(t0.c2)) THEN vt0.c1 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (~ (vt1.c2)) END);
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (vt0.c0) ORDER BY CASE WHEN (t0.c1 IN ()) THEN rt1.c1 COLLATE NOCASE WHEN (((('V')OR(t0.c2)))OR(t0.c2)) THEN vt0.c1 COLLATE NOCASE WHEN (((vt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))) THEN (~ (vt1.c2)) END;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c2) NOT BETWEEN (x'8dfa') AND (vt1.c2)))) FULL OUTER JOIN t0 ON ((t0.c1)&(vt0.c0)) COLLATE BINARY COLLATE BINARY WHERE (((((vt0.c2, vt0.c2, t0.c1))<=((vt0.c1, vt1.c2, 1.71205735E8))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, vt0.c2, t0.c1))<=((vt0.c1, vt1.c2, 1.71205735E8))) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c2) NOT BETWEEN (x'8dfa') AND (vt1.c2)))) FULL OUTER JOIN t0 ON ((t0.c1)&(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c2) NOT BETWEEN (x'8dfa') AND (vt1.c2)))) FULL OUTER JOIN t0 ON ((t0.c1)&(vt0.c0)) COLLATE BINARY COLLATE BINARY WHERE (((((vt0.c2, vt0.c2, t0.c1))<=((vt0.c1, vt1.c2, 1.71205735E8))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2, vt0.c2, t0.c1))<=((vt0.c1, vt1.c2, 1.71205735E8))) IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c2) NOT BETWEEN (x'8dfa') AND (vt1.c2)))) FULL OUTER JOIN t0 ON ((t0.c1)&(vt0.c0)) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (((vt1.c2) NOT BETWEEN (x'8dfa') AND (vt1.c2)))) FULL OUTER JOIN t0 ON ((t0.c1)&(vt0.c0)) COLLATE BINARY COLLATE BINARY WHERE (((((vt0.c2, vt0.c2, t0.c1))<=((vt0.c1, vt1.c2, 1.71205735E8))) IN ()));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 0.7736963809012323 WHERE (CAST(CAST(rt1.c0 AS REAL) AS BLOB)) ORDER BY CAST(((rt1.c2)GLOB(rt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON 0.7736963809012323 ORDER BY CAST(((rt1.c2)GLOB(rt1.c0)) AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 0.7736963809012323 WHERE (CAST(CAST(rt1.c0 AS REAL) AS BLOB)) ORDER BY CAST(((rt1.c2)GLOB(rt1.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON 0.7736963809012323 ORDER BY CAST(((rt1.c2)GLOB(rt1.c0)) AS NUMERIC));
SELECT ALL * FROM t0 CROSS JOIN rt1 ON 0.7736963809012323 WHERE (CAST(CAST(rt1.c0 AS REAL) AS BLOB)) ORDER BY CAST(((rt1.c2)GLOB(rt1.c0)) AS NUMERIC);
SELECT * FROM vt1, t0 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CAST(vt1.c1 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON load_extension(json_insert(vt0.c0, rt1.c2, vt1.c2, vt0.c0, vt0.c1), (t0.c2 IN ())) CROSS JOIN t0 ON (t0.c1 IN ()) COLLATE BINARY WHERE ((+ (((rt1.c2)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)|(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON load_extension(json_insert(vt0.c0, rt1.c2, vt1.c2, vt0.c0, vt0.c1), (t0.c2 IN ())) CROSS JOIN t0 ON (t0.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON load_extension(json_insert(vt0.c0, rt1.c2, vt1.c2, vt0.c0, vt0.c1), (t0.c2 IN ())) CROSS JOIN t0 ON (t0.c1 IN ()) COLLATE BINARY WHERE ((+ (((rt1.c2)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c2)|(vt0.c1))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON load_extension(json_insert(vt0.c0, rt1.c2, vt1.c2, vt0.c0, vt0.c1), (t0.c2 IN ())) CROSS JOIN t0 ON (t0.c1 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON load_extension(json_insert(vt0.c0, rt1.c2, vt1.c2, vt0.c0, vt0.c1), (t0.c2 IN ())) CROSS JOIN t0 ON (t0.c1 IN ()) COLLATE BINARY WHERE ((+ (((rt1.c2)|(vt0.c1)))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))-((vt1.c1 IN (vt1.c1, vt1.c0))))) ORDER BY 'F', ((((((x'')OR(vt1.c2)))OR(vt1.c1)))||(((vt1.c2) ISNULL))) DESC, (+ (CAST(0.16951603672267257 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))-((vt1.c1 IN (vt1.c1, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 'F', ((((((x'')OR(vt1.c2)))OR(vt1.c1)))||(((vt1.c2) ISNULL))) DESC, (+ (CAST(0.16951603672267257 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))-((vt1.c1 IN (vt1.c1, vt1.c0))))) ORDER BY 'F', ((((((x'')OR(vt1.c2)))OR(vt1.c1)))||(((vt1.c2) ISNULL))) DESC, (+ (CAST(0.16951603672267257 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL))-((vt1.c1 IN (vt1.c1, vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY 'F', ((((((x'')OR(vt1.c2)))OR(vt1.c1)))||(((vt1.c2) ISNULL))) DESC, (+ (CAST(0.16951603672267257 AS TEXT))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1) NOT NULL))-((vt1.c1 IN (vt1.c1, vt1.c0))))) ORDER BY 'F', ((((((x'')OR(vt1.c2)))OR(vt1.c1)))||(((vt1.c2) ISNULL))) DESC, (+ (CAST(0.16951603672267257 AS TEXT)));
SELECT * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON vt0.c0);
SELECT * FROM vt1 CROSS JOIN vt0 ON vt0.c0 WHERE (NULL);
SELECT * FROM vt1, vt0, t0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT * FROM vt1, vt0, t0, rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT * FROM vt1, vt0, t0, rt1 WHERE (NULL);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))) NOT NULL) DESC, vt1.c1  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))) NOT NULL) DESC, vt1.c1  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))) NOT NULL) DESC, vt1.c1  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))) NOT NULL) DESC, vt1.c1  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))) NOT NULL) DESC, vt1.c1  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((((((rt1.c2)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS NUMERIC) DESC, (NOT (UNICODE(t0.c1))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN CAST('1679120690' AS BLOB) ELSE (- (t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((((((rt1.c2)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((NOT (rt1.c2)) AS NUMERIC) DESC, (NOT (UNICODE(t0.c1))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN CAST('1679120690' AS BLOB) ELSE (- (t0.c2)) END);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((((((rt1.c2)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS NUMERIC) DESC, (NOT (UNICODE(t0.c1))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN CAST('1679120690' AS BLOB) ELSE (- (t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((((((rt1.c2)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST((NOT (rt1.c2)) AS NUMERIC) DESC, (NOT (UNICODE(t0.c1))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN CAST('1679120690' AS BLOB) ELSE (- (t0.c2)) END);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((NOT (rt1.c2))) NOT BETWEEN (rt1.c2 COLLATE NOCASE) AND (((((((((rt1.c2)OR(t0.c2)))OR(t0.c1)))OR(t0.c1)))AND(rt1.c2))))) ORDER BY CAST((NOT (rt1.c2)) AS NUMERIC) DESC, (NOT (UNICODE(t0.c1))) DESC, CASE WHEN ((t0.c0) ISNULL) THEN CAST('1679120690' AS BLOB) ELSE (- (t0.c2)) END;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t0.c2)==('1679120690')))))OR(t0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t0.c2)=('1679120690')))))OR(t0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t0.c2)==('1679120690')))))OR(t0.c1 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t0.c2)=('1679120690')))))OR(t0.c1 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT (t0.c0)) AS INTEGER)) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t0.c2)==('1679120690')))))OR(t0.c1 COLLATE RTRIM)) DESC;
SELECT ALL * FROM rt1, vt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL * FROM rt1, vt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL * FROM rt1, vt1, t0 WHERE (((t0.c1 IN ()) IN ()));
SELECT ALL * FROM vt1 WHERE (5.79351781E8);
SELECT SUM(count) FROM (SELECT ALL ((5.79351781E8) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (5.79351781E8);
SELECT SUM(count) FROM (SELECT ALL ((5.79351781E8) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (5.79351781E8);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c0)))&(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))&(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c0)))&(t0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c1)))OR(t0.c0)))&(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c0)AND(t0.c1)))OR(t0.c0)))&(t0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN vt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS INTEGER) THEN vt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN vt1.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c2 AS INTEGER) THEN vt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CAST(vt1.c2 AS INTEGER) THEN vt1.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c2))>((CAST(vt0.c1 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2))>((CAST(vt0.c1 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c2))>((CAST(vt0.c1 AS REAL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c2))>((CAST(vt0.c1 AS REAL)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM) ORDER BY (((vt0.c2))>((CAST(vt0.c1 AS REAL)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))AND(x'')))AND(t0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c0 IN (vt0.c2))) BETWEEN (((0.6353992485902588)>>(rt1.c2))) AND (0.7766907404385084)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))AND(x'')))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (((rt1.c0 IN (vt0.c2))) BETWEEN (((0.6353992485902588)>>(rt1.c2))) AND (0.7766907404385084)) ASC);
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))AND(x'')))AND(t0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c0 IN (vt0.c2))) BETWEEN (((0.6353992485902588)>>(rt1.c2))) AND (0.7766907404385084)) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))AND(x'')))AND(t0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (((rt1.c0 IN (vt0.c2))) BETWEEN (((0.6353992485902588)>>(rt1.c2))) AND (0.7766907404385084)) ASC);
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE ((((((((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))AND(x'')))AND(t0.c2 COLLATE RTRIM))) ORDER BY (((rt1.c0 IN (vt0.c2))) BETWEEN (((0.6353992485902588)>>(rt1.c2))) AND (0.7766907404385084)) ASC;
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c2)) COLLATE NOCASE) ORDER BY ABS(rt1.c0) DESC  NULLS LAST, (((((t0.c2)GLOB(t0.c0))))>=((rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY ABS(rt1.c0) DESC  NULLS LAST, (((((t0.c2)GLOB(t0.c0))))>=((rt1.c0 COLLATE RTRIM))));
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c2)) COLLATE NOCASE) ORDER BY ABS(rt1.c0) DESC  NULLS LAST, (((((t0.c2)GLOB(t0.c0))))>=((rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0 ORDER BY ABS(rt1.c0) DESC  NULLS LAST, (((((t0.c2)GLOB(t0.c0))))>=((rt1.c0 COLLATE RTRIM))));
SELECT * FROM rt1, t0 WHERE ((+ (rt1.c2)) COLLATE NOCASE) ORDER BY ABS(rt1.c0) DESC  NULLS LAST, (((((t0.c2)GLOB(t0.c0))))>=((rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) IS FALSE)  WHEN t0.c1 COLLATE RTRIM THEN (((t0.c1, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END THEN NULLIF(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c2)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c1)>(t0.c1)) END) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN '171205735' THEN t0.c2 ELSE t0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) IS FALSE)  WHEN t0.c1 COLLATE RTRIM THEN (((t0.c1, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END THEN NULLIF(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c2)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c1)>(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN '171205735' THEN t0.c2 ELSE t0.c2 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) IS FALSE)  WHEN t0.c1 COLLATE RTRIM THEN (((t0.c1, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END THEN NULLIF(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c2)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c1)>(t0.c1)) END) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN '171205735' THEN t0.c2 ELSE t0.c2 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) IS FALSE)  WHEN t0.c1 COLLATE RTRIM THEN (((t0.c1, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END THEN NULLIF(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c2)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c1)>(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN '171205735' THEN t0.c2 ELSE t0.c2 END)) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c1) IS FALSE)  WHEN t0.c1 COLLATE RTRIM THEN (((t0.c1, t0.c1, t0.c0))>((t0.c1, t0.c1, t0.c0))) WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c1 END THEN NULLIF(DISTINCT t0.c0, t0.c0) WHEN ((((t0.c1)AND(t0.c1)))OR(t0.c2)) THEN ((t0.c2)|(t0.c1)) ELSE ((t0.c1)>(t0.c1)) END) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN '171205735' THEN t0.c2 ELSE t0.c2 END)) ASC;
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((((vt1.c2 IN (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((((vt1.c2 IN (vt1.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT COUNT(*) FROM rt1, t0, vt1 WHERE ((((vt1.c2 IN (vt1.c0))) NOT NULL));
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt0.c0))) IS TRUE) WHERE (((((((vt1.c0)AND(vt0.c1)))AND(rt1.c0)))*(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c1)))AND(rt1.c0)))*(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt0.c0))) IS TRUE));
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt0.c0))) IS TRUE) WHERE (((((((vt1.c0)AND(vt0.c1)))AND(rt1.c0)))*(CAST(vt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt0.c1)))AND(rt1.c0)))*(CAST(vt0.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt0.c0))) IS TRUE));
SELECT * FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)IS NOT(vt0.c0))) IS TRUE) WHERE (((((((vt1.c0)AND(vt0.c1)))AND(rt1.c0)))*(CAST(vt0.c2 AS REAL))));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT NULL) WHERE (t0.c1);
SELECT ALL * FROM vt1, rt1, t0 WHERE (t0.c0) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, rt1, t0 ORDER BY vt1.c2  NULLS LAST);
SELECT ALL * FROM vt1, rt1, t0 WHERE (t0.c0) ORDER BY vt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, rt1, t0 ORDER BY vt1.c2  NULLS LAST);
SELECT ALL * FROM vt1, rt1, t0 WHERE (t0.c0) ORDER BY vt1.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(rt1.c0 AS TEXT) COLLATE BINARY FULL OUTER JOIN t0 ON (load_extension(vt0.c1, vt0.c2) IN ()) LEFT OUTER JOIN rt1 ON ((x'9331' COLLATE RTRIM) ISNULL) WHERE ((- (((vt1.c2)%(vt0.c1))))) ORDER BY ((x'')<<(NULLIF(vt1.c0, t0.c1))), (((((vt0.c1) NOTNULL), (vt1.c0 IN ()), t0.c1 COLLATE NOCASE))>=((rt1.c0, ((t0.c0)!=(vt0.c1)), CAST(NULL AS NUMERIC)))) DESC  NULLS LAST, ((rt1.c1) NOT BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c2)%(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(rt1.c0 AS TEXT) COLLATE BINARY FULL OUTER JOIN t0 ON (load_extension(vt0.c1, vt0.c2) IN ()) LEFT OUTER JOIN rt1 ON ((x'9331' COLLATE RTRIM) ISNULL) ORDER BY ((x'')<<(NULLIF(vt1.c0, t0.c1))), (((((vt0.c1) NOTNULL), (vt1.c0 IN ()), t0.c1 COLLATE NOCASE))>=((rt1.c0, ((t0.c0)<>(vt0.c1)), CAST(NULL AS NUMERIC)))) DESC  NULLS LAST, ((rt1.c1) NOT BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON CAST(rt1.c0 AS TEXT) COLLATE BINARY FULL OUTER JOIN t0 ON (load_extension(vt0.c1, vt0.c2) IN ()) LEFT OUTER JOIN rt1 ON ((x'9331' COLLATE RTRIM) ISNULL) WHERE ((- (((vt1.c2)%(vt0.c1))))) ORDER BY ((x'')<<(NULLIF(vt1.c0, t0.c1))), (((((vt0.c1) NOTNULL), (vt1.c0 IN ()), t0.c1 COLLATE NOCASE))>=((rt1.c0, ((t0.c0)!=(vt0.c1)), CAST(NULL AS NUMERIC)))) DESC  NULLS LAST, ((rt1.c1) NOT BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt1.c2)%(vt0.c1))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON CAST(rt1.c0 AS TEXT) COLLATE BINARY FULL OUTER JOIN t0 ON (load_extension(vt0.c1, vt0.c2) IN ()) LEFT OUTER JOIN rt1 ON ((x'9331' COLLATE RTRIM) ISNULL) ORDER BY ((x'')<<(NULLIF(vt1.c0, t0.c1))), (((((vt0.c1) NOTNULL), (vt1.c0 IN ()), t0.c1 COLLATE NOCASE))>=((rt1.c0, ((t0.c0)<>(vt0.c1)), CAST(NULL AS NUMERIC)))) DESC  NULLS LAST, ((rt1.c1) NOT BETWEEN (x'') AND (vt0.c2)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((LIKELIHOOD(vt1.c2, 0.8392660628938169)) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (CAST('134887545' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt1.c2, 0.8392660628938169)) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (CAST('134887545' AS TEXT)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((LIKELIHOOD(vt1.c2, 0.8392660628938169)) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (CAST('134887545' AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt1.c2, 0.8392660628938169)) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (CAST('134887545' AS TEXT)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT ALL * FROM vt0, rt1, vt1 WHERE (((LIKELIHOOD(vt1.c2, 0.8392660628938169)) NOT BETWEEN (CAST(vt1.c1 AS REAL)) AND (CAST('134887545' AS TEXT))));
SELECT ALL * FROM vt1 WHERE (0Xffffffffb6bafc82) ORDER BY ((CASE NULL  WHEN vt1.c2 THEN '1455263662' END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffb6bafc82) IS TRUE)  as count FROM vt1 ORDER BY ((CASE NULL  WHEN vt1.c2 THEN '1455263662' END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0Xffffffffb6bafc82) ORDER BY ((CASE NULL  WHEN vt1.c2 THEN '1455263662' END) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffb6bafc82) IS TRUE)  as count FROM vt1 ORDER BY ((CASE NULL  WHEN vt1.c2 THEN '1455263662' END) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (0Xffffffffb6bafc82) ORDER BY ((CASE NULL  WHEN vt1.c2 THEN '1455263662' END) ISNULL)  NULLS LAST;
SELECT * FROM vt1, rt1 WHERE (GLOB(LIKELIHOOD(DISTINCT rt1.c2, 0.09337946478646542), ((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((GLOB(LIKELIHOOD(DISTINCT rt1.c2, 0.09337946478646542), ((rt1.c1) NOTNULL))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (GLOB(LIKELIHOOD(DISTINCT rt1.c2, 0.09337946478646542), ((rt1.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((GLOB(LIKELIHOOD(DISTINCT rt1.c2, 0.09337946478646542), ((rt1.c1) NOTNULL))) IS TRUE)  as count FROM vt1, rt1);
SELECT * FROM vt1, rt1 WHERE (GLOB(LIKELIHOOD(DISTINCT rt1.c2, 0.09337946478646542), ((rt1.c1) NOTNULL)));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (- ((+ (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (- ((+ (vt0.c0))))  NULLS FIRST;
SELECT * FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c0)))AND(rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c0)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c0)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2)AND(rt1.c0)))AND(rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c0)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c1))) BETWEEN (json_object(rt1.c0, rt1.c0)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((vt0.c2) IS TRUE) COLLATE BINARY WHERE ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c2)) IN ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c2)) IN ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((vt0.c2) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((vt0.c2) IS TRUE) COLLATE BINARY WHERE ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c2)) IN ((+ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c2)) IN ((+ (rt1.c1))))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((vt0.c2) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN t0 ON ((vt0.c2) IS TRUE) COLLATE BINARY WHERE ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (t0.c2)) IN ((+ (rt1.c1)))));
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) ISNULL))IS NOT((((rt1.c1, vt0.c1, vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c2, vt1.c1, t0.c1, vt0.c1)) AND ((NULL, t0.c1, t0.c0, rt1.c1, vt0.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt1.c0) COLLATE BINARY WHERE (((((((((((t0.c0)&(vt1.c0)))OR(((vt0.c2) IS TRUE))))AND('*xn')))AND(CASE vt0.c1  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c1 END)))OR((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)&(vt1.c0)))OR(((vt0.c2) IS TRUE))))AND('*xn')))AND(CASE vt0.c1  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c1 END)))OR((NOT (t0.c2))))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) ISNULL))IS NOT((((rt1.c1, vt0.c1, vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c2, vt1.c1, t0.c1, vt0.c1)) AND ((NULL, t0.c1, t0.c0, rt1.c1, vt0.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt1.c0) COLLATE BINARY);
SELECT ALL * FROM t0, rt1 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) ISNULL))IS NOT((((rt1.c1, vt0.c1, vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c2, vt1.c1, t0.c1, vt0.c1)) AND ((NULL, t0.c1, t0.c0, rt1.c1, vt0.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt1.c0) COLLATE BINARY WHERE (((((((((((t0.c0)&(vt1.c0)))OR(((vt0.c2) IS TRUE))))AND('*xn')))AND(CASE vt0.c1  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c1 END)))OR((NOT (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)&(vt1.c0)))OR(((vt0.c2) IS TRUE))))AND('*xn')))AND(CASE vt0.c1  WHEN vt1.c1 THEN rt1.c1 ELSE vt1.c1 END)))OR((NOT (t0.c2))))) IS TRUE)  as count FROM t0, rt1 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) ISNULL))IS NOT((((rt1.c1, vt0.c1, vt0.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((t0.c2, vt0.c2, vt1.c1, t0.c1, vt0.c1)) AND ((NULL, t0.c1, t0.c0, rt1.c1, vt0.c1))))) LEFT OUTER JOIN vt0 ON TRIM(DISTINCT vt1.c0) COLLATE BINARY);
SELECT * FROM vt0, rt1, t0 WHERE (((((((t0.c1)|(vt0.c0)))OR(vt0.c0)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)|(vt0.c0)))OR(vt0.c0)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((((((t0.c1)|(vt0.c0)))OR(vt0.c0)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)|(vt0.c0)))OR(vt0.c0)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((((((t0.c1)|(vt0.c0)))OR(vt0.c0)))AND(((t0.c0) ISNULL))));
SELECT * FROM vt0, rt1 WHERE ('-1985037927');
SELECT SUM(count) FROM (SELECT (('-1985037927') IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ('-1985037927');
SELECT SUM(count) FROM (SELECT (('-1985037927') IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ('-1985037927');
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN t0.c2 THEN t0.c0 ELSE 0.4270793742640846 END, x'439d' COLLATE RTRIM, TRIM(DISTINCT vt1.c1, NULL))) AND ((vt1.c1, ((vt1.c0)/(t0.c0)), ((((vt0.c2)AND(vt1.c0)))OR(t0.c0)))))) ORDER BY (((rt1.c1, vt1.c2, rt1.c2)) BETWEEN ((t0.c2 COLLATE BINARY, ((vt0.c0)>=(rt1.c0)), ((((rt1.c2)OR(vt0.c1)))AND(vt1.c2)))) AND ((((rt1.c1)<=(t0.c2)), ((t0.c1) ISNULL), '0.2693171962023988')))  NULLS LAST, (- (((rt1.c1) NOT NULL)))  NULLS LAST, (+ (((((((((t0.c1)OR(0.06922334245910078)))AND(vt1.c1)))OR(vt1.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN t0.c2 THEN t0.c0 ELSE 0.4270793742640846 END, x'439d' COLLATE RTRIM, TRIM(DISTINCT vt1.c1, NULL))) AND ((vt1.c1, ((vt1.c0)/(t0.c0)), ((((vt0.c2)AND(vt1.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (((rt1.c1, vt1.c2, rt1.c2)) BETWEEN ((t0.c2 COLLATE BINARY, ((vt0.c0)>=(rt1.c0)), ((((rt1.c2)OR(vt0.c1)))AND(vt1.c2)))) AND ((((rt1.c1)<=(t0.c2)), ((t0.c1) ISNULL), '0.2693171962023988')))  NULLS LAST, (- (((rt1.c1) NOT NULL)))  NULLS LAST, (+ (((((((((t0.c1)OR(0.06922334245910078)))AND(vt1.c1)))OR(vt1.c0)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN t0.c2 THEN t0.c0 ELSE 0.4270793742640846 END, x'439d' COLLATE RTRIM, TRIM(DISTINCT vt1.c1, NULL))) AND ((vt1.c1, ((vt1.c0)/(t0.c0)), ((((vt0.c2)AND(vt1.c0)))OR(t0.c0)))))) ORDER BY (((rt1.c1, vt1.c2, rt1.c2)) BETWEEN ((t0.c2 COLLATE BINARY, ((vt0.c0)>=(rt1.c0)), ((((rt1.c2)OR(vt0.c1)))AND(vt1.c2)))) AND ((((rt1.c1)<=(t0.c2)), ((t0.c1) ISNULL), '0.2693171962023988')))  NULLS LAST, (- (((rt1.c1) NOT NULL)))  NULLS LAST, (+ (((((((((t0.c1)OR(0.06922334245910078)))AND(vt1.c1)))OR(vt1.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN t0.c2 THEN t0.c0 ELSE 0.4270793742640846 END, x'439d' COLLATE RTRIM, TRIM(DISTINCT vt1.c1, NULL))) AND ((vt1.c1, ((vt1.c0)/(t0.c0)), ((((vt0.c2)AND(vt1.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (((rt1.c1, vt1.c2, rt1.c2)) BETWEEN ((t0.c2 COLLATE BINARY, ((vt0.c0)>=(rt1.c0)), ((((rt1.c2)OR(vt0.c1)))AND(vt1.c2)))) AND ((((rt1.c1)<=(t0.c2)), ((t0.c1) ISNULL), '0.2693171962023988')))  NULLS LAST, (- (((rt1.c1) NOT NULL)))  NULLS LAST, (+ (((((((((t0.c1)OR(0.06922334245910078)))AND(vt1.c1)))OR(vt1.c0)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c1, rt1.c2, vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN t0.c2 THEN t0.c0 ELSE 0.4270793742640846 END, x'439d' COLLATE RTRIM, TRIM(DISTINCT vt1.c1, NULL))) AND ((vt1.c1, ((vt1.c0)/(t0.c0)), ((((vt0.c2)AND(vt1.c0)))OR(t0.c0)))))) ORDER BY (((rt1.c1, vt1.c2, rt1.c2)) BETWEEN ((t0.c2 COLLATE BINARY, ((vt0.c0)>=(rt1.c0)), ((((rt1.c2)OR(vt0.c1)))AND(vt1.c2)))) AND ((((rt1.c1)<=(t0.c2)), ((t0.c1) ISNULL), '0.2693171962023988')))  NULLS LAST, (- (((rt1.c1) NOT NULL)))  NULLS LAST, (+ (((((((((t0.c1)OR(0.06922334245910078)))AND(vt1.c1)))OR(vt1.c0)))AND(rt1.c1))));
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN 0.3630435267781341 END) ORDER BY (((((vt1.c1, vt1.c2, vt1.c1))>((vt1.c0, x'', vt1.c0)))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c2)-(vt1.c1)) THEN 0.3630435267781341 END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1, vt1.c2, vt1.c1))>((vt1.c0, x'', vt1.c0)))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN 0.3630435267781341 END) ORDER BY (((((vt1.c1, vt1.c2, vt1.c1))>((vt1.c0, x'', vt1.c0)))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c2)-(vt1.c1)) THEN 0.3630435267781341 END) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c1, vt1.c2, vt1.c1))>((vt1.c0, x'', vt1.c0)))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN ((vt1.c2)-(vt1.c1)) THEN 0.3630435267781341 END) ORDER BY (((((vt1.c1, vt1.c2, vt1.c1))>((vt1.c0, x'', vt1.c0)))) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE ((((((t0.c0))>=((vt0.c2)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE NULL END) AND (UNLIKELY('0.6353992485902588')))) ORDER BY (((t0.c0 IN ()))>((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((vt0.c2)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE NULL END) AND (UNLIKELY('0.6353992485902588')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) ORDER BY (((t0.c0 IN ()))>((- (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE ((((((t0.c0))>=((vt0.c2)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE NULL END) AND (UNLIKELY('0.6353992485902588')))) ORDER BY (((t0.c0 IN ()))>((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((vt0.c2)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE NULL END) AND (UNLIKELY('0.6353992485902588')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) ORDER BY (((t0.c0 IN ()))>((- (vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))) WHERE ((((((t0.c0))>=((vt0.c2)))) NOT BETWEEN (CASE WHEN t0.c1 THEN t0.c1 ELSE NULL END) AND (UNLIKELY('0.6353992485902588')))) ORDER BY (((t0.c0 IN ()))>((- (vt0.c1)))) ASC;
SELECT ALL * FROM vt1, t0, rt1 WHERE (((((((((t0.c1)OR(vt1.c2)))AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR(vt1.c2)))AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL * FROM vt1, t0, rt1 WHERE (((((((((t0.c1)OR(vt1.c2)))AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1)OR(vt1.c2)))AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL * FROM vt1, t0, rt1 WHERE (((((((((t0.c1)OR(vt1.c2)))AND(vt1.c0)))OR(rt1.c2)))OR(vt1.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND((((vt0.c0))==((vt0.c1))))))OR(((vt0.c0) ISNULL))))OR(vt0.c2)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((((vt0.c0))==((vt0.c1))))))OR(((vt0.c0) ISNULL))))OR(vt0.c2)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND((((vt0.c0))==((vt0.c1))))))OR(((vt0.c0) ISNULL))))OR(vt0.c2)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0 IN ()))AND((((vt0.c0))==((vt0.c1))))))OR(((vt0.c0) ISNULL))))OR(vt0.c2)))AND(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND((((vt0.c0))==((vt0.c1))))))OR(((vt0.c0) ISNULL))))OR(vt0.c2)))AND(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (((CASE vt0.c2  WHEN vt0.c0 THEN vt1.c0 END) IS FALSE));
SELECT COUNT(*) FROM t0, vt1 WHERE ((('*xn' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((('*xn' IN ()) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((('*xn' IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((('*xn' IN ()) IN ())) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((('*xn' IN ()) IN ()));
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST((((t0.c0, vt1.c2, rt1.c1))>((t0.c1, t0.c2, vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, vt1.c2, rt1.c1))>((t0.c1, t0.c2, vt1.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST((((t0.c0, vt1.c2, rt1.c1))>((t0.c1, t0.c2, vt1.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0, vt1.c2, rt1.c1))>((t0.c1, t0.c2, vt1.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST((((t0.c0, vt1.c2, rt1.c1))>((t0.c1, t0.c2, vt1.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 INNER JOIN t0 ON ((json_type(NULL)) NOT NULL) WHERE ('579351781') ORDER BY ((((((((((((vt1.c2 COLLATE RTRIM)OR('~?Wz')))OR(CASE WHEN x'7382' THEN rt1.c0 ELSE vt1.c1 END)))AND(((t0.c2)AND(rt1.c1)))))AND((vt1.c1 IN (t0.c2)))))OR(vt1.c1 COLLATE RTRIM)))AND(IFNULL(t0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (('579351781') IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON ((json_type(NULL)) NOT NULL) ORDER BY ((((((((((((vt1.c2 COLLATE RTRIM)OR('~?Wz')))OR(CASE WHEN x'7382' THEN rt1.c0 ELSE vt1.c1 END)))AND(((t0.c2)AND(rt1.c1)))))AND((vt1.c1 IN (t0.c2)))))OR(vt1.c1 COLLATE RTRIM)))AND(IFNULL(t0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 INNER JOIN t0 ON ((json_type(NULL)) NOT NULL) WHERE ('579351781') ORDER BY ((((((((((((vt1.c2 COLLATE RTRIM)OR('~?Wz')))OR(CASE WHEN x'7382' THEN rt1.c0 ELSE vt1.c1 END)))AND(((t0.c2)AND(rt1.c1)))))AND((vt1.c1 IN (t0.c2)))))OR(vt1.c1 COLLATE RTRIM)))AND(IFNULL(t0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (('579351781') IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON ((json_type(NULL)) NOT NULL) ORDER BY ((((((((((((vt1.c2 COLLATE RTRIM)OR('~?Wz')))OR(CASE WHEN x'7382' THEN rt1.c0 ELSE vt1.c1 END)))AND(((t0.c2)AND(rt1.c1)))))AND((vt1.c1 IN (t0.c2)))))OR(vt1.c1 COLLATE RTRIM)))AND(IFNULL(t0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1 INNER JOIN t0 ON ((json_type(NULL)) NOT NULL) WHERE ('579351781') ORDER BY ((((((((((((vt1.c2 COLLATE RTRIM)OR('~?Wz')))OR(CASE WHEN x'7382' THEN rt1.c0 ELSE vt1.c1 END)))AND(((t0.c2)AND(rt1.c1)))))AND((vt1.c1 IN (t0.c2)))))OR(vt1.c1 COLLATE RTRIM)))AND(IFNULL(t0.c1, vt0.c0)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CAST(rt1.c0 AS INTEGER))OR((- (rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN 'M1䲋4讦T!yr' THEN rt1.c0 END)))AND(((rt1.c1)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c0 AS INTEGER))OR((- (rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN 'M1䲋4讦T!yr' THEN rt1.c0 END)))AND(((rt1.c1)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CAST(rt1.c0 AS INTEGER))OR((- (rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN 'M1䲋4讦T!yr' THEN rt1.c0 END)))AND(((rt1.c1)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c0 AS INTEGER))OR((- (rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN 'M1䲋4讦T!yr' THEN rt1.c0 END)))AND(((rt1.c1)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((CAST(rt1.c0 AS INTEGER))OR((- (rt1.c0)))))AND(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN 'M1䲋4讦T!yr' THEN rt1.c0 END)))AND(((rt1.c1)IS(rt1.c2)))))OR(((rt1.c1)>(rt1.c1)))));
SELECT ALL * FROM rt1, vt0, t0 WHERE (((('~?Wz')) BETWEEN (((+ (rt1.c2)))) AND ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))))) ORDER BY (((CAST(x'' AS BLOB)))<=((((t0.c2)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('~?Wz')) BETWEEN (((+ (rt1.c2)))) AND ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((CAST(x'' AS BLOB)))<=((((t0.c2)+(vt0.c1))))));
SELECT ALL * FROM rt1, vt0, t0 WHERE (((('~?Wz')) BETWEEN (((+ (rt1.c2)))) AND ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))))) ORDER BY (((CAST(x'' AS BLOB)))<=((((t0.c2)+(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((('~?Wz')) BETWEEN (((+ (rt1.c2)))) AND ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))))) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((CAST(x'' AS BLOB)))<=((((t0.c2)+(vt0.c1))))));
SELECT ALL * FROM rt1, vt0, t0 WHERE (((('~?Wz')) BETWEEN (((+ (rt1.c2)))) AND ((((t0.c1) NOT BETWEEN (vt0.c1) AND (t0.c1)))))) ORDER BY (((CAST(x'' AS BLOB)))<=((((t0.c2)+(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON NULL CROSS JOIN t0 ON CASE ((t0.c1)/(rt1.c0))  WHEN ((t0.c0) IS TRUE) THEN vt1.c1 COLLATE NOCASE ELSE UPPER(t0.c1) END FULL OUTER JOIN rt1 ON (((vt0.c1 IN (rt1.c2))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((((0.9048283065047188)AND(vt1.c1)) IN ((~ (vt0.c1))))) ORDER BY ((((((((((((((0.8073538143816755)AND(0x7b1484e0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c2)))>(CAST(t0.c0 AS TEXT))) DESC, (x'd251' IN ()) DESC, ((CHANGES())<(LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((0.9048283065047188)AND(vt1.c1)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL CROSS JOIN t0 ON CASE ((t0.c1)/(rt1.c0))  WHEN ((t0.c0) IS TRUE) THEN vt1.c1 COLLATE NOCASE ELSE UPPER(t0.c1) END FULL OUTER JOIN rt1 ON (((vt0.c1 IN (rt1.c2))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY ((((((((((((((0.8073538143816755)AND(0x7b1484e0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c2)))>(CAST(t0.c0 AS TEXT))) DESC, (x'd251' IN ()) DESC, ((CHANGES())<(LOWER(rt1.c0))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON NULL CROSS JOIN t0 ON CASE ((t0.c1)/(rt1.c0))  WHEN ((t0.c0) IS TRUE) THEN vt1.c1 COLLATE NOCASE ELSE UPPER(t0.c1) END FULL OUTER JOIN rt1 ON (((vt0.c1 IN (rt1.c2))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) WHERE ((((0.9048283065047188)AND(vt1.c1)) IN ((~ (vt0.c1))))) ORDER BY ((((((((((((((0.8073538143816755)AND(0x7b1484e0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c2)))>(CAST(t0.c0 AS TEXT))) DESC, (x'd251' IN ()) DESC, ((CHANGES())<(LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT (((((0.9048283065047188)AND(vt1.c1)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON NULL CROSS JOIN t0 ON CASE ((t0.c1)/(rt1.c0))  WHEN ((t0.c0) IS TRUE) THEN vt1.c1 COLLATE NOCASE ELSE UPPER(t0.c1) END FULL OUTER JOIN rt1 ON (((vt0.c1 IN (rt1.c2))) NOT BETWEEN (vt1.c1 COLLATE BINARY) AND (((t0.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) ORDER BY ((((((((((((((0.8073538143816755)AND(0x7b1484e0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c2)))>(CAST(t0.c0 AS TEXT))) DESC, (x'd251' IN ()) DESC, ((CHANGES())<(LOWER(rt1.c0))));
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN 0.9896292263568625 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((x'ca1d') BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN (t0.c2 IN (t0.c0)) THEN (((t0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN 0.9896292263568625 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((x'ca1d') BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN (t0.c2 IN (t0.c0)) THEN (((t0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) END DESC);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN 0.9896292263568625 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((x'ca1d') BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN (t0.c2 IN (t0.c0)) THEN (((t0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) END DESC;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN 0.9896292263568625 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((x'ca1d') BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN (t0.c2 IN (t0.c0)) THEN (((t0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) END DESC);
SELECT COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN 0.9896292263568625 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END) NOT BETWEEN (((x'ca1d') BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c2))))) ORDER BY CASE CAST(t0.c1 AS TEXT)  WHEN (t0.c2 IN (t0.c0)) THEN (((t0.c1, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c0, t0.c2)) AND ((t0.c0, t0.c1, t0.c2))) END DESC;
SELECT * FROM t0, vt1 WHERE (((((((((CASE WHEN t0.c1 THEN '579351781' END)OR(((vt1.c0)<>(t0.c2)))))AND(((vt1.c0)>=(t0.c1)))))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((-8.61401749E8))))))AND((- (t0.c1))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c1 THEN '579351781' END)OR(((vt1.c0)<>(t0.c2)))))AND(((vt1.c0)>=(t0.c1)))))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((-8.61401749E8))))))AND((- (t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL ASC);
SELECT * FROM t0, vt1 WHERE (((((((((CASE WHEN t0.c1 THEN '579351781' END)OR(((vt1.c0)<>(t0.c2)))))AND(((vt1.c0)>=(t0.c1)))))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((-8.61401749E8))))))AND((- (t0.c1))))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c1 THEN '579351781' END)OR(((vt1.c0)<>(t0.c2)))))AND(((vt1.c0)>=(t0.c1)))))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((-8.61401749E8))))))AND((- (t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY NULL ASC);
SELECT * FROM t0, vt1 WHERE (((((((((CASE WHEN t0.c1 THEN '579351781' END)OR(((vt1.c0)<>(t0.c2)))))AND(((vt1.c0)>=(t0.c1)))))OR((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((-8.61401749E8))))))AND((- (t0.c1))))) ORDER BY NULL ASC;
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1)%(((t0.c0)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)%(((t0.c0)/(t0.c2))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1)%(((t0.c0)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)%(((t0.c0)/(t0.c2))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((t0.c1)%(((t0.c0)/(t0.c2)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN rt1 ON ((CAST(0X28d05c52 AS INTEGER)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) FULL OUTER JOIN t0 ON vt1.c0 WHERE (json_patch(((t0.c2) NOTNULL), ((rt1.c1)AND(rt1.c1)))) ORDER BY 'n뢊' ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((t0.c2) NOTNULL), ((rt1.c1)AND(rt1.c1)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN rt1 ON ((CAST(0X28d05c52 AS INTEGER)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) FULL OUTER JOIN t0 ON vt1.c0 ORDER BY 'n뢊' ASC);
SELECT * FROM vt1 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN rt1 ON ((CAST(0X28d05c52 AS INTEGER)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) FULL OUTER JOIN t0 ON vt1.c0 WHERE (json_patch(((t0.c2) NOTNULL), ((rt1.c1)AND(rt1.c1)))) ORDER BY 'n뢊' ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch(((t0.c2) NOTNULL), ((rt1.c1)AND(rt1.c1)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON t0.c2 RIGHT OUTER JOIN rt1 ON ((CAST(0X28d05c52 AS INTEGER)) NOT BETWEEN (CAST(vt0.c2 AS REAL)) AND ((((vt1.c0)) NOT BETWEEN ((t0.c1)) AND ((vt0.c0))))) FULL OUTER JOIN t0 ON vt1.c0 ORDER BY 'n뢊' ASC);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NOT INDEXED, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (x'');
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST(((t0.c0)IS(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST(((t0.c0)IS(rt1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)IS(rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (CAST(((t0.c0)IS(rt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (((((rt1.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (((((rt1.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (((((rt1.c1) ISNULL)) IS TRUE));
SELECT * FROM vt0 WHERE (0Xfffffffff01289b9) ORDER BY CAST(((vt0.c1)>(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff01289b9) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)>(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (0Xfffffffff01289b9) ORDER BY CAST(((vt0.c1)>(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff01289b9) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)>(vt0.c0)) AS BLOB)  NULLS LAST);
SELECT * FROM vt0 WHERE (0Xfffffffff01289b9) ORDER BY CAST(((vt0.c1)>(vt0.c0)) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((- (vt1.c0)))%((((vt1.c0, x'', 1922706717)) BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND (('2HDe2M', vt1.c0, t0.c2))))) WHERE (0.2693171962023988);
SELECT SUM(count) FROM (SELECT ALL ((0.2693171962023988) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((- (vt1.c0)))%((((vt1.c0, x'', 1922706717)) BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND (('2HDe2M', vt1.c0, t0.c2))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((- (vt1.c0)))%((((vt1.c0, x'', 1922706717)) BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND (('2HDe2M', vt1.c0, t0.c2))))) WHERE (0.2693171962023988);
SELECT SUM(count) FROM (SELECT ALL ((0.2693171962023988) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((- (vt1.c0)))%((((vt1.c0, x'', 1922706717)) BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND (('2HDe2M', vt1.c0, t0.c2))))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (((- (vt1.c0)))%((((vt1.c0, x'', 1922706717)) BETWEEN ((vt1.c2, vt1.c1, vt1.c0)) AND (('2HDe2M', vt1.c0, t0.c2))))) WHERE (0.2693171962023988);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((rt1.c0)OR(((((vt0.c0)AND(rt1.c0)))OR(vt1.c1)))) LEFT OUTER JOIN rt1 ON '0.940697160860399' WHERE ((rt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt1.c0)OR(((((vt0.c0)AND(rt1.c0)))OR(vt1.c1)))) LEFT OUTER JOIN rt1 ON '0.940697160860399');
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((rt1.c0)OR(((((vt0.c0)AND(rt1.c0)))OR(vt1.c1)))) LEFT OUTER JOIN rt1 ON '0.940697160860399' WHERE ((rt1.c2 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((rt1.c0)OR(((((vt0.c0)AND(rt1.c0)))OR(vt1.c1)))) LEFT OUTER JOIN rt1 ON '0.940697160860399');
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(UNLIKELY(rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(rt1.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(UNLIKELY(rt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(rt1.c0) AS REAL)) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (CAST(UNLIKELY(rt1.c0) AS REAL));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((vt1.c0)) BETWEEN (((- (vt1.c2)))) AND ((((vt1.c0) IS FALSE)))) WHERE (((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((vt1.c0)) BETWEEN (((- (vt1.c2)))) AND ((((vt1.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((vt1.c0)) BETWEEN (((- (vt1.c2)))) AND ((((vt1.c0) IS FALSE)))) WHERE (((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON (((vt1.c0)) BETWEEN (((- (vt1.c2)))) AND ((((vt1.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON (((vt1.c0)) BETWEEN (((- (vt1.c2)))) AND ((((vt1.c0) IS FALSE)))) WHERE (((rt1.c1) BETWEEN (vt1.c2) AND (rt1.c0)) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))==((((vt1.c0))<((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2 IN ()))=((((vt1.c0))<((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))==((((vt1.c0))<((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c2 IN ()))=((((vt1.c0))<((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c2 IN ()))==((((vt1.c0))<((vt1.c1))))));
SELECT * FROM vt0, rt1 WHERE (CAST(((((vt0.c2)AND(NULL)))AND(rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c2)AND(NULL)))AND(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt1 WHERE (CAST(((((vt0.c2)AND(NULL)))AND(rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c2)AND(NULL)))AND(rt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM vt0, rt1 WHERE (CAST(((((vt0.c2)AND(NULL)))AND(rt1.c0)) AS INTEGER)) ORDER BY ((((((rt1.c2)OR(vt0.c0)))OR(vt0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_insert(vt1.c1 COLLATE RTRIM, 0x5361c811, CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END)) ORDER BY vt1.c0  NULLS FIRST, 'm1䲋4讦t!yr', ((((((vt1.c1)OR(vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt1.c1 COLLATE RTRIM, 0x5361c811, CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, 'm1䲋4讦t!yr', ((((((vt1.c1)OR(vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_insert(vt1.c1 COLLATE RTRIM, 0x5361c811, CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END)) ORDER BY vt1.c0  NULLS FIRST, 'm1䲋4讦t!yr', ((((((vt1.c1)OR(vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt1.c1 COLLATE RTRIM, 0x5361c811, CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, 'm1䲋4讦t!yr', ((((((vt1.c1)OR(vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (json_insert(vt1.c1 COLLATE RTRIM, 0x5361c811, CASE vt1.c2  WHEN vt1.c1 THEN vt1.c2 END)) ORDER BY vt1.c0  NULLS FIRST, 'm1䲋4讦t!yr', ((((((vt1.c1)OR(vt1.c1)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c2))))))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.9896292263568625);
SELECT SUM(count) FROM (SELECT ((0.9896292263568625) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.9896292263568625);
SELECT SUM(count) FROM (SELECT ((0.9896292263568625) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (0.9896292263568625);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (t0.c0) ORDER BY t0.c0 DESC  NULLS LAST, ((((((t0.c1)AND(t0.c0)))OR(0.9852012146802988)))<=(0.9233704919575656)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY t0.c0 DESC  NULLS LAST, ((((((t0.c1)AND(t0.c0)))OR(0.9852012146802988)))<=(0.9233704919575656)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (t0.c0) ORDER BY t0.c0 DESC  NULLS LAST, ((((((t0.c1)AND(t0.c0)))OR(0.9852012146802988)))<=(0.9233704919575656)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY t0.c0 DESC  NULLS LAST, ((((((t0.c1)AND(t0.c0)))OR(0.9852012146802988)))<=(0.9233704919575656)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 WHERE (t0.c0) ORDER BY t0.c0 DESC  NULLS LAST, ((((((t0.c1)AND(t0.c0)))OR(0.9852012146802988)))<=(0.9233704919575656)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOTNULL)) ORDER BY ((0.8047691225376473 IN (vt1.c1, rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((0.8047691225376473 IN (vt1.c1, rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOTNULL)) ORDER BY ((0.8047691225376473 IN (vt1.c1, rt1.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((0.8047691225376473 IN (vt1.c1, rt1.c1)) IN ()));
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (((((vt1.c0) NOT NULL)) NOTNULL)) ORDER BY ((0.8047691225376473 IN (vt1.c1, rt1.c1)) IN ());
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c2 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c2 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CAST(rt1.c2 COLLATE BINARY AS NUMERIC));
SELECT * FROM vt1, t0, vt0 WHERE ((- (-270742321))) ORDER BY (((vt1.c2)LIKE(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (-270742321))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c2)LIKE(vt0.c0)) IN ()));
SELECT * FROM vt1, t0, vt0 WHERE ((- (-270742321))) ORDER BY (((vt1.c2)LIKE(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((- (-270742321))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c2)LIKE(vt0.c0)) IN ()));
SELECT * FROM vt1, t0, vt0 WHERE ((- (-270742321))) ORDER BY (((vt1.c2)LIKE(vt0.c0)) IN ());
SELECT * FROM t0, rt1, vt1, vt0 WHERE (0.1511950583697932);
SELECT SUM(count) FROM (SELECT ((0.1511950583697932) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (0.1511950583697932);
SELECT SUM(count) FROM (SELECT ((0.1511950583697932) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (0.1511950583697932);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c1))), NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))!=((vt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c1))), NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c1))), NULL));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))!=((vt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c1))), NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c2, vt0.c0, vt0.c2, vt0.c2))<>((vt0.c0, vt1.c0, vt0.c1, vt1.c1, vt0.c1))), NULL));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0 COLLATE NOCASE))) CROSS JOIN vt0 ON CAST(vt1.c1 AS BLOB) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (- (rt1.c0)) WHERE ((((rt1.c2))<((CASE WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<((CASE WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0 COLLATE NOCASE))) CROSS JOIN vt0 ON CAST(vt1.c1 AS BLOB) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (- (rt1.c0)));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0 COLLATE NOCASE))) CROSS JOIN vt0 ON CAST(vt1.c1 AS BLOB) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (- (rt1.c0)) WHERE ((((rt1.c2))<((CASE WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<((CASE WHEN vt1.c1 THEN vt0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((rt1.c0 COLLATE NOCASE))) CROSS JOIN vt0 ON CAST(vt1.c1 AS BLOB) COLLATE BINARY RIGHT OUTER JOIN rt1 ON (- (rt1.c0)));
SELECT ALL * FROM t0, vt0 WHERE ((json_patch(t0.c2, t0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(t0.c2, t0.c1) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((json_patch(t0.c2, t0.c1) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((json_patch(t0.c2, t0.c1) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((json_patch(t0.c2, t0.c1) IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (t0.c1)) LEFT OUTER JOIN rt1 ON ((x'')/(vt1.c0)) LEFT OUTER JOIN vt1 ON CAST(6.84743762E8 AS NUMERIC) WHERE (-1006659212) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(UPPER(DISTINCT vt0.c2))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST, CASE ABS(DISTINCT vt0.c0)  WHEN ((t0.c0) IS FALSE) THEN ((rt1.c1)IS NOT(t0.c0)) END ASC  NULLS LAST, (- (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-1006659212) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (t0.c1)) LEFT OUTER JOIN rt1 ON ((x'')/(vt1.c0)) LEFT OUTER JOIN vt1 ON CAST(6.84743762E8 AS NUMERIC) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(UPPER(DISTINCT vt0.c2))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST, CASE ABS(DISTINCT vt0.c0)  WHEN ((t0.c0) IS FALSE) THEN ((rt1.c1)IS NOT(t0.c0)) END ASC  NULLS LAST, (- (t0.c0)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (~ (t0.c1)) LEFT OUTER JOIN rt1 ON ((x'')/(vt1.c0)) LEFT OUTER JOIN vt1 ON CAST(6.84743762E8 AS NUMERIC) WHERE (-1006659212) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(UPPER(DISTINCT vt0.c2))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST, CASE ABS(DISTINCT vt0.c0)  WHEN ((t0.c0) IS FALSE) THEN ((rt1.c1)IS NOT(t0.c0)) END ASC  NULLS LAST, (- (t0.c0));
SELECT SUM(count) FROM (SELECT ALL ((-1006659212) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (~ (t0.c1)) LEFT OUTER JOIN rt1 ON ((x'')/(vt1.c0)) LEFT OUTER JOIN vt1 ON CAST(6.84743762E8 AS NUMERIC) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(UPPER(DISTINCT vt0.c2))))OR(rt1.c2 COLLATE RTRIM))  NULLS LAST, CASE ABS(DISTINCT vt0.c0)  WHEN ((t0.c0) IS FALSE) THEN ((rt1.c1)IS NOT(t0.c0)) END ASC  NULLS LAST, (- (t0.c0)));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((('-1001031638')) BETWEEN ((rt1.c2)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('-1001031638')) BETWEEN ((rt1.c2)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((('-1001031638')) BETWEEN ((rt1.c2)) AND ((vt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((('-1001031638')) BETWEEN ((rt1.c2)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((((('-1001031638')) BETWEEN ((rt1.c2)) AND ((vt0.c1))) IN ()));
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((t0.c2)>>(ABS(DISTINCT t0.c1))) INNER JOIN rt1 ON (+ (((NULL) NOT BETWEEN (t0.c1) AND (x'')))) WHERE (0xfffffffffecd5012) ORDER BY t0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffecd5012) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((t0.c2)>>(ABS(DISTINCT t0.c1))) INNER JOIN rt1 ON (+ (((NULL) NOT BETWEEN (t0.c1) AND (x'')))) ORDER BY t0.c1  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((t0.c2)>>(ABS(DISTINCT t0.c1))) INNER JOIN rt1 ON (+ (((NULL) NOT BETWEEN (t0.c1) AND (x'')))) WHERE (0xfffffffffecd5012) ORDER BY t0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xfffffffffecd5012) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON ((t0.c2)>>(ABS(DISTINCT t0.c1))) INNER JOIN rt1 ON (+ (((NULL) NOT BETWEEN (t0.c1) AND (x'')))) ORDER BY t0.c1  NULLS LAST);
SELECT * FROM t0, vt0 INNER JOIN vt1 ON ((t0.c2)>>(ABS(DISTINCT t0.c1))) INNER JOIN rt1 ON (+ (((NULL) NOT BETWEEN (t0.c1) AND (x'')))) WHERE (0xfffffffffecd5012) ORDER BY t0.c1  NULLS LAST;
SELECT * FROM rt1 WHERE (CAST(COALESCE(DISTINCT rt1.c1, rt1.c1) AS REAL)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT rt1.c1, rt1.c1) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE (CAST(COALESCE(DISTINCT rt1.c1, rt1.c1) AS REAL)) ORDER BY rt1.c0;
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(DISTINCT rt1.c1, rt1.c1) AS REAL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0);
SELECT * FROM rt1 WHERE (CAST(COALESCE(DISTINCT rt1.c1, rt1.c1) AS REAL)) ORDER BY rt1.c0;
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON IFNULL(((vt0.c2) ISNULL), rt1.c1) CROSS JOIN t0 ON (- (vt0.c2)) COLLATE BINARY WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON IFNULL(((vt0.c2) ISNULL), rt1.c1) CROSS JOIN t0 ON (- (vt0.c2)) COLLATE BINARY);
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON IFNULL(((vt0.c2) ISNULL), rt1.c1) CROSS JOIN t0 ON (- (vt0.c2)) COLLATE BINARY WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON IFNULL(((vt0.c2) ISNULL), rt1.c1) CROSS JOIN t0 ON (- (vt0.c2)) COLLATE BINARY);
SELECT * FROM vt1, rt1 CROSS JOIN vt0 ON IFNULL(((vt0.c2) ISNULL), rt1.c1) CROSS JOIN t0 ON (- (vt0.c2)) COLLATE BINARY WHERE (t0.c1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c2)-(x'')))<=(UNLIKELY(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)-(x'')))<=(UNLIKELY(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c2)-(x'')))<=(UNLIKELY(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)-(x'')))<=(UNLIKELY(vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c2)-(x'')))<=(UNLIKELY(vt0.c2))));
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (t0.c1) ORDER BY ((((vt0.c2) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c2) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (t0.c1) ORDER BY ((((vt0.c2) ISNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((((vt0.c2) ISNULL)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN t0 WHERE (t0.c1) ORDER BY ((((vt0.c2) ISNULL)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((NOT (RTRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (RTRIM(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (RTRIM(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (RTRIM(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (RTRIM(rt1.c1))));
SELECT * FROM vt1, rt1, vt0, t0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt1.c0)AND(vt0.c0)))AND(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (((((rt1.c0)AND(vt0.c0)))AND(rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM vt1, rt1, vt0, t0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt1.c0)AND(vt0.c0)))AND(rt1.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (((((rt1.c0)AND(vt0.c0)))AND(rt1.c1)) IN ())  NULLS LAST);
SELECT * FROM vt1, rt1, vt0, t0 WHERE (((rt1.c0) NOTNULL) COLLATE NOCASE) ORDER BY (((((rt1.c0)AND(vt0.c0)))AND(rt1.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))>=(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))))) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN (vt0.c2 IN (vt0.c0, vt0.c0)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c1)AND(0.43882858848062734)))OR(vt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))>=(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN (vt0.c2 IN (vt0.c0, vt0.c0)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c1)AND(0.43882858848062734)))OR(vt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))>=(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))))) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN (vt0.c2 IN (vt0.c0, vt0.c0)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c1)AND(0.43882858848062734)))OR(vt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))>=(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN (vt0.c2 IN (vt0.c0, vt0.c0)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c1)AND(0.43882858848062734)))OR(vt0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2)))>=(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c2))))) ORDER BY CASE (NOT (vt0.c1))  WHEN ((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)) THEN ((vt0.c1)<=(vt0.c0)) WHEN ((vt0.c1) NOT NULL) THEN (vt0.c2 IN (vt0.c0, vt0.c0)) WHEN (vt0.c2 IN ()) THEN ((((vt0.c1)AND(0.43882858848062734)))OR(vt0.c2)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-516638582', vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c2, 0.2760210028816563, vt0.c2)))) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)OR(vt0.c1)))AND(0.042199544153552426)))OR(vt0.c0)))AND(vt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((('-516638582', vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c2, 0.2760210028816563, vt0.c2)))) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)OR(vt0.c1)))AND(0.042199544153552426)))OR(vt0.c0)))AND(vt0.c2)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-516638582', vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c2, 0.2760210028816563, vt0.c2)))) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)OR(vt0.c1)))AND(0.042199544153552426)))OR(vt0.c0)))AND(vt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((('-516638582', vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c2, 0.2760210028816563, vt0.c2)))) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)OR(vt0.c1)))AND(0.042199544153552426)))OR(vt0.c0)))AND(vt0.c2)) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('-516638582', vt0.c2, vt0.c1)) BETWEEN ((vt0.c0, vt0.c0, vt0.c2)) AND ((vt0.c2, 0.2760210028816563, vt0.c2)))) NOT BETWEEN ((~ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY CASE WHEN vt0.c2 THEN ((((((((vt0.c0)OR(vt0.c1)))AND(0.042199544153552426)))OR(vt0.c0)))AND(vt0.c2)) END DESC;
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (((((vt1.c1)AND(((rt1.c1)IS(t0.c0)))))AND(((((((((vt0.c0)AND(t0.c1)))AND(vt1.c1)))OR(t0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(((rt1.c1)IS(t0.c0)))))AND(((((((((vt0.c0)AND(t0.c1)))AND(vt1.c1)))OR(t0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (((((vt1.c1)AND(((rt1.c1)IS(t0.c0)))))AND(((((((((vt0.c0)AND(t0.c1)))AND(vt1.c1)))OR(t0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)AND(((rt1.c1)IS(t0.c0)))))AND(((((((((vt0.c0)AND(t0.c1)))AND(vt1.c1)))OR(t0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (((((vt1.c1)AND(((rt1.c1)IS(t0.c0)))))AND(((((((((vt0.c0)AND(t0.c1)))AND(vt1.c1)))OR(t0.c2)))AND(vt0.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE)*(NULL))) ORDER BY STRFTIME(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c1 END, (~ (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c2)OR(vt1.c0)))OR(vt1.c1)), ((vt0.c1)/(vt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)*(NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY STRFTIME(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c1 END, (~ (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c2)OR(vt1.c0)))OR(vt1.c1)), ((vt0.c1)/(vt1.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE)*(NULL))) ORDER BY STRFTIME(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c1 END, (~ (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c2)OR(vt1.c0)))OR(vt1.c1)), ((vt0.c1)/(vt1.c2))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)*(NULL))) IS TRUE)  as count FROM vt1, vt0 ORDER BY STRFTIME(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c1 END, (~ (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c2)OR(vt1.c0)))OR(vt1.c1)), ((vt0.c1)/(vt1.c2))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0 COLLATE NOCASE)*(NULL))) ORDER BY STRFTIME(CASE WHEN vt0.c2 THEN vt1.c1 ELSE vt0.c1 END, (~ (vt0.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, ((((vt1.c2)OR(vt1.c0)))OR(vt1.c1)), ((vt0.c1)/(vt1.c2))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(ABS(DISTINCT vt1.c1) AS BLOB)) ORDER BY '7i	Hg' DESC  NULLS FIRST, ((((((t0.c0)==(vt0.c1)))OR(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c2)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c1) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '7i	Hg' DESC  NULLS FIRST, ((((((t0.c0)=(vt0.c1)))OR(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c2)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(ABS(DISTINCT vt1.c1) AS BLOB)) ORDER BY '7i	Hg' DESC  NULLS FIRST, ((((((t0.c0)==(vt0.c1)))OR(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c2)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(DISTINCT vt1.c1) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '7i	Hg' DESC  NULLS FIRST, ((((((t0.c0)=(vt0.c1)))OR(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c2)))))AND(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(ABS(DISTINCT vt1.c1) AS BLOB)) ORDER BY '7i	Hg' DESC  NULLS FIRST, ((((((t0.c0)==(vt0.c1)))OR(((vt1.c1) NOT BETWEEN (x'') AND (vt1.c2)))))AND(CAST(vt1.c0 AS INTEGER)));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE 0.9040714555033508  WHEN ((vt0.c2) NOT BETWEEN (vt1.c2) AND (vt0.c2)) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c2 END ELSE (vt1.c1 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9040714555033508  WHEN ((vt0.c2) NOT BETWEEN (vt1.c2) AND (vt0.c2)) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c2 END ELSE (vt1.c1 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE 0.9040714555033508  WHEN ((vt0.c2) NOT BETWEEN (vt1.c2) AND (vt0.c2)) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c2 END ELSE (vt1.c1 IN (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.9040714555033508  WHEN ((vt0.c2) NOT BETWEEN (vt1.c2) AND (vt0.c2)) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c2 END ELSE (vt1.c1 IN (vt0.c0)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CASE 0.9040714555033508  WHEN ((vt0.c2) NOT BETWEEN (vt1.c2) AND (vt0.c2)) THEN CASE vt1.c1  WHEN vt0.c1 THEN vt1.c2 ELSE vt0.c2 END ELSE (vt1.c1 IN (vt0.c0)) END);
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON (- (vt0.c1)) RIGHT OUTER JOIN t0 ON ((LIKELY(rt1.c0))=(vt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON (+ ('-1285758972')) WHERE (x'45dd');
SELECT SUM(count) FROM (SELECT ((x'45dd') IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (- (vt0.c1)) RIGHT OUTER JOIN t0 ON ((LIKELY(rt1.c0))=(vt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON (+ ('-1285758972')));
SELECT COUNT(*) FROM vt1 INNER JOIN rt1 ON (- (vt0.c1)) RIGHT OUTER JOIN t0 ON ((LIKELY(rt1.c0))=(vt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON (+ ('-1285758972')) WHERE (x'45dd');
SELECT SUM(count) FROM (SELECT ((x'45dd') IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON (- (vt0.c1)) RIGHT OUTER JOIN t0 ON ((LIKELY(rt1.c0))=(vt0.c2 COLLATE NOCASE)) RIGHT OUTER JOIN vt0 ON (+ ('-1285758972')));
SELECT * FROM vt0, rt1 CROSS JOIN t0 ON CAST(vt1.c1 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt1 ON (((+ (vt1.c2)))|(rt1.c2 COLLATE RTRIM)) WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (vt1.c0) AND (((((((((vt1.c2)AND(t0.c1)))AND(x'')))AND(vt0.c1)))AND(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN CAST('' AS INTEGER) WHEN ((rt1.c2) IS FALSE) THEN (((vt1.c0, rt1.c0, rt1.c2))>((vt0.c1, t0.c0, vt0.c1))) WHEN (vt0.c1 IN ()) THEN ((t0.c1) BETWEEN (rt1.c2) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) BETWEEN (vt1.c0) AND (((((((((vt1.c2)AND(t0.c1)))AND(x'')))AND(vt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN t0 ON CAST(vt1.c1 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt1 ON (((+ (vt1.c2)))|(rt1.c2 COLLATE RTRIM)) ORDER BY CASE ((t0.c1) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN CAST('' AS INTEGER) WHEN ((rt1.c2) IS FALSE) THEN (((vt1.c0, rt1.c0, rt1.c2))>((vt0.c1, t0.c0, vt0.c1))) WHEN (vt0.c1 IN ()) THEN ((t0.c1) BETWEEN (rt1.c2) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt1 CROSS JOIN t0 ON CAST(vt1.c1 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt1 ON (((+ (vt1.c2)))|(rt1.c2 COLLATE RTRIM)) WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (vt1.c0) AND (((((((((vt1.c2)AND(t0.c1)))AND(x'')))AND(vt0.c1)))AND(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN CAST('' AS INTEGER) WHEN ((rt1.c2) IS FALSE) THEN (((vt1.c0, rt1.c0, rt1.c2))>((vt0.c1, t0.c0, vt0.c1))) WHEN (vt0.c1 IN ()) THEN ((t0.c1) BETWEEN (rt1.c2) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS NUMERIC)) BETWEEN (vt1.c0) AND (((((((((vt1.c2)AND(t0.c1)))AND(x'')))AND(vt0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM vt0, rt1 CROSS JOIN t0 ON CAST(vt1.c1 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt1 ON (((+ (vt1.c2)))|(rt1.c2 COLLATE RTRIM)) ORDER BY CASE ((t0.c1) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN CAST('' AS INTEGER) WHEN ((rt1.c2) IS FALSE) THEN (((vt1.c0, rt1.c0, rt1.c2))>((vt0.c1, t0.c0, vt0.c1))) WHEN (vt0.c1 IN ()) THEN ((t0.c1) BETWEEN (rt1.c2) AND (vt0.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt1 CROSS JOIN t0 ON CAST(vt1.c1 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt1 ON (((+ (vt1.c2)))|(rt1.c2 COLLATE RTRIM)) WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (vt1.c0) AND (((((((((vt1.c2)AND(t0.c1)))AND(x'')))AND(vt0.c1)))AND(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (NULL) AND (vt1.c1))  WHEN CAST(vt0.c0 AS TEXT) THEN CAST('' AS INTEGER) WHEN ((rt1.c2) IS FALSE) THEN (((vt1.c0, rt1.c0, rt1.c2))>((vt0.c1, t0.c0, vt0.c1))) WHEN (vt0.c1 IN ()) THEN ((t0.c1) BETWEEN (rt1.c2) AND (vt0.c1)) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN 0.2693171962023988 THEN vt0.c2 ELSE vt0.c2 END) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY ((((vt0.c2)/(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN 0.2693171962023988 THEN vt0.c2 ELSE vt0.c2 END) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)/(vt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN 0.2693171962023988 THEN vt0.c2 ELSE vt0.c2 END) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY ((((vt0.c2)/(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN 0.2693171962023988 THEN vt0.c2 ELSE vt0.c2 END) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c2)/(vt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0))) BETWEEN (CASE WHEN 0.2693171962023988 THEN vt0.c2 ELSE vt0.c2 END) AND ((((vt0.c0)) BETWEEN ((x'')) AND ((vt0.c0)))))) ORDER BY ((((vt0.c2)/(vt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt1.c0)GLOB(vt1.c2)) IN ()) FULL OUTER JOIN vt1 ON COALESCE(vt1.c0, (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c2)), ((t0.c0)*(t0.c2))) WHERE (json_array_length(((x'') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((x'') NOTNULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt1.c0)GLOB(vt1.c2)) IN ()) FULL OUTER JOIN vt1 ON COALESCE(vt1.c0, (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c2)), ((t0.c0)*(t0.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt1.c0)GLOB(vt1.c2)) IN ()) FULL OUTER JOIN vt1 ON COALESCE(vt1.c0, (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c2)), ((t0.c0)*(t0.c2))) WHERE (json_array_length(((x'') NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((x'') NOTNULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((vt1.c0)GLOB(vt1.c2)) IN ()) FULL OUTER JOIN vt1 ON COALESCE(vt1.c0, (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c2)), ((t0.c0)*(t0.c2))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((vt1.c0)GLOB(vt1.c2)) IN ()) FULL OUTER JOIN vt1 ON COALESCE(vt1.c0, (((t0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c2)), ((t0.c0)*(t0.c2))) WHERE (json_array_length(((x'') NOTNULL)));
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (559836329);
SELECT SUM(count) FROM (SELECT ((559836329) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (559836329);
SELECT SUM(count) FROM (SELECT ((559836329) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (559836329);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ((((rt1.c2)GLOB(rt1.c2)) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)GLOB(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ((((rt1.c2)GLOB(rt1.c2)) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)GLOB(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL * FROM rt1 NOT INDEXED WHERE ((((rt1.c2)GLOB(rt1.c2)) IN ())) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2) IS TRUE))!=(CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))!=(CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(vt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2) IS TRUE))!=(CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS TRUE))!=(CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(vt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((((rt1.c2) IS TRUE))!=(CASE WHEN vt1.c0 THEN vt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY CAST(vt1.c1 COLLATE RTRIM AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt1 WHERE (CASE (((t0.c2, t0.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((t0.c0, rt1.c1, rt1.c2)))  WHEN ((t0.c1) NOTNULL) THEN x'' ELSE (t0.c2 IN ()) END) ORDER BY ((UNICODE(t0.c1)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c2, t0.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((t0.c0, rt1.c1, rt1.c2)))  WHEN ((t0.c1) NOTNULL) THEN x'' ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((UNICODE(t0.c1)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CASE (((t0.c2, t0.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((t0.c0, rt1.c1, rt1.c2)))  WHEN ((t0.c1) NOTNULL) THEN x'' ELSE (t0.c2 IN ()) END) ORDER BY ((UNICODE(t0.c1)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c2, t0.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((t0.c0, rt1.c1, rt1.c2)))  WHEN ((t0.c1) NOTNULL) THEN x'' ELSE (t0.c2 IN ()) END) IS TRUE)  as count FROM t0, rt1 ORDER BY ((UNICODE(t0.c1)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM t0, rt1 WHERE (CASE (((t0.c2, t0.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((t0.c0, rt1.c1, rt1.c2)))  WHEN ((t0.c1) NOTNULL) THEN x'' ELSE (t0.c2 IN ()) END) ORDER BY ((UNICODE(t0.c1)) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt0, rt1 NOT INDEXED, t0, vt1 WHERE (((((vt1.c2)<<(t0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c2 END) AND (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<<(t0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c2 END) AND (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, t0, vt1);
SELECT * FROM vt0, rt1 NOT INDEXED, t0, vt1 WHERE (((((vt1.c2)<<(t0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c2 END) AND (vt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<<(t0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c2 END) AND (vt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED, t0, vt1);
SELECT * FROM vt0, rt1 NOT INDEXED, t0, vt1 WHERE (((((vt1.c2)<<(t0.c0))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt1.c2 END) AND (vt1.c2 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE ((((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND('*-7if_2uj'))))!=(((+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND('*-7if_2uj'))))<>(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND('*-7if_2uj'))))!=(((+ (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND('*-7if_2uj'))))<>(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))AND('*-7if_2uj'))))!=(((+ (vt0.c1))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1 COLLATE BINARY)OR(((vt0.c0)+(vt0.c2)))))OR(((vt1.c2)GLOB(vt1.c2))))) ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) NOT NULL) DESC, ((((((vt0.c0)AND(vt1.c1)))OR(vt1.c2))) NOT BETWEEN ((- (vt0.c2))) AND (CAST(vt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 COLLATE BINARY)OR(((vt0.c0)+(vt0.c2)))))OR(((vt1.c2)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) NOT NULL) DESC, ((((((vt0.c0)AND(vt1.c1)))OR(vt1.c2))) NOT BETWEEN ((- (vt0.c2))) AND (CAST(vt1.c1 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1 COLLATE BINARY)OR(((vt0.c0)+(vt0.c2)))))OR(((vt1.c2)GLOB(vt1.c2))))) ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) NOT NULL) DESC, ((((((vt0.c0)AND(vt1.c1)))OR(vt1.c2))) NOT BETWEEN ((- (vt0.c2))) AND (CAST(vt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 COLLATE BINARY)OR(((vt0.c0)+(vt0.c2)))))OR(((vt1.c2)GLOB(vt1.c2))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) NOT NULL) DESC, ((((((vt0.c0)AND(vt1.c1)))OR(vt1.c2))) NOT BETWEEN ((- (vt0.c2))) AND (CAST(vt1.c1 AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1 COLLATE BINARY)OR(((vt0.c0)+(vt0.c2)))))OR(((vt1.c2)GLOB(vt1.c2))))) ORDER BY ((((((vt0.c0)AND(vt0.c1)))AND(vt1.c0))) NOT NULL) DESC, ((((((vt0.c0)AND(vt1.c1)))OR(vt1.c2))) NOT BETWEEN ((- (vt0.c2))) AND (CAST(vt1.c1 AS TEXT))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))  WHEN 'ꀧOWLVMp-' THEN ((((vt0.c1)AND(vt0.c1)))AND(0.40349597076015564)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (((0Xffffffffb6bafc82, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) THEN UPPER(vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))  WHEN 'ꀧOWLVMp-' THEN ((((vt0.c1)AND(vt0.c1)))AND(0.40349597076015564)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (((0Xffffffffb6bafc82, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) THEN UPPER(vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))  WHEN 'ꀧOWLVMp-' THEN ((((vt0.c1)AND(vt0.c1)))AND(0.40349597076015564)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (((0Xffffffffb6bafc82, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) THEN UPPER(vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))  WHEN 'ꀧOWLVMp-' THEN ((((vt0.c1)AND(vt0.c1)))AND(0.40349597076015564)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (((0Xffffffffb6bafc82, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) THEN UPPER(vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c0, vt0.c0))) AS TEXT)) ORDER BY CASE ((((vt0.c2)AND(vt0.c2)))AND(vt0.c1))  WHEN 'ꀧOWLVMp-' THEN ((((vt0.c1)AND(vt0.c1)))AND(0.40349597076015564)) WHEN vt0.c1 THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN (((0Xffffffffb6bafc82, NULL, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) THEN UPPER(vt0.c0) ELSE vt0.c0 END DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL * FROM rt1, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ((((((NOT (rt1.c2)))OR((rt1.c1 IN (NULL, t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END))) ORDER BY CASE WHEN ((t0.c1)IS(vt0.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c2)LIKE(rt1.c0)) WHEN json_insert(vt0.c1, vt0.c0, vt1.c2) THEN (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR((rt1.c1 IN (NULL, t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, vt1, t0 ORDER BY CASE WHEN ((t0.c1)IS(vt0.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c2)LIKE(rt1.c0)) WHEN json_insert(vt0.c1, vt0.c0, vt1.c2) THEN (vt1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ((((((NOT (rt1.c2)))OR((rt1.c1 IN (NULL, t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END))) ORDER BY CASE WHEN ((t0.c1)IS(vt0.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c2)LIKE(rt1.c0)) WHEN json_insert(vt0.c1, vt0.c0, vt1.c2) THEN (vt1.c0 IN ()) END;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c2)))OR((rt1.c1 IN (NULL, t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END))) IS TRUE)  as count FROM vt0, rt1, vt1, t0 ORDER BY CASE WHEN ((t0.c1)IS(vt0.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c2)LIKE(rt1.c0)) WHEN json_insert(vt0.c1, vt0.c0, vt1.c2) THEN (vt1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ((((((NOT (rt1.c2)))OR((rt1.c1 IN (NULL, t0.c1)))))AND(CASE WHEN t0.c2 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c2 ELSE vt1.c2 END))) ORDER BY CASE WHEN ((t0.c1)IS(vt0.c1)) THEN CAST(vt0.c2 AS BLOB) WHEN vt0.c0 COLLATE RTRIM THEN ((t0.c2)LIKE(rt1.c0)) WHEN json_insert(vt0.c1, vt0.c0, vt1.c2) THEN (vt1.c0 IN ()) END;
SELECT ALL * FROM t0 WHERE ((- (((t0.c2)OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c2)OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((- (((t0.c2)OR(t0.c2)))));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c1);
SELECT COUNT(*) FROM rt1 WHERE (((json_remove(rt1.c2, rt1.c0)) NOT BETWEEN (0x129c16f1) AND (((rt1.c2)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt1.c2, rt1.c0)) NOT BETWEEN (0X129c16f1) AND (((rt1.c2)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((json_remove(rt1.c2, rt1.c0)) NOT BETWEEN (0x129c16f1) AND (((rt1.c2)LIKE(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_remove(rt1.c2, rt1.c0)) NOT BETWEEN (0X129c16f1) AND (((rt1.c2)LIKE(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)!=(vt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((vt0.c1))==((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((vt0.c1))=((t0.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0 NATURAL JOIN vt1);
SELECT * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)!=(vt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((vt0.c1))==((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>(vt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((vt0.c1))=((t0.c1)))))) IS TRUE)  as count FROM rt1, t0, vt0 NATURAL JOIN vt1);
SELECT * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (((((vt0.c0)!=(vt1.c1))) BETWEEN (rt1.c1 COLLATE BINARY) AND ((((vt0.c1))==((t0.c1))))));
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR('腬TvM^' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))OR('腬TvM^' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR('腬TvM^' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))OR('腬TvM^' COLLATE NOCASE))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((- (vt1.c0)))OR('腬TvM^' COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (- ((t0.c0 IN ()))) FULL OUTER JOIN rt1 ON CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c1)) THEN CASE WHEN vt1.c0 THEN NULL END END CROSS JOIN vt1 ON (TYPEOF(vt0.c1) IN ()) WHERE ((((vt0.c1)&(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.8709965242335815)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (- ((t0.c0 IN ()))) FULL OUTER JOIN rt1 ON CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c1)) THEN CASE WHEN vt1.c0 THEN NULL END END CROSS JOIN vt1 ON (TYPEOF(vt0.c1) IN ()) ORDER BY LIKELIHOOD(DISTINCT x'', 0.8709965242335815)  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (- ((t0.c0 IN ()))) FULL OUTER JOIN rt1 ON CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c1)) THEN CASE WHEN vt1.c0 THEN NULL END END CROSS JOIN vt1 ON (TYPEOF(vt0.c1) IN ()) WHERE ((((vt0.c1)&(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.8709965242335815)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)&(t0.c0)) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (- ((t0.c0 IN ()))) FULL OUTER JOIN rt1 ON CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c1)) THEN CASE WHEN vt1.c0 THEN NULL END END CROSS JOIN vt1 ON (TYPEOF(vt0.c1) IN ()) ORDER BY LIKELIHOOD(DISTINCT x'', 0.8709965242335815)  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON (- ((t0.c0 IN ()))) FULL OUTER JOIN rt1 ON CASE WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt1.c1)) THEN CASE WHEN vt1.c0 THEN NULL END END CROSS JOIN vt1 ON (TYPEOF(vt0.c1) IN ()) WHERE ((((vt0.c1)&(t0.c0)) IN ())) ORDER BY LIKELIHOOD(DISTINCT x'', 0.8709965242335815)  NULLS LAST;
SELECT ALL * FROM rt1, vt1, t0 WHERE ((NOT (((x'')<>(rt1.c1))))) ORDER BY ((((CAST(rt1.c2 AS NUMERIC))AND('' COLLATE RTRIM)))AND(0.38271966779699973))  NULLS LAST, ((t0.c2 IN (vt1.c1)) IN ()) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt1.c1 AS NUMERIC), ((t0.c0)<>(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((((CAST(rt1.c2 AS NUMERIC))AND('' COLLATE RTRIM)))AND(0.38271966779699973))  NULLS LAST, ((t0.c2 IN (vt1.c1)) IN ()) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt1.c1 AS NUMERIC), ((t0.c0)!=(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, t0 WHERE ((NOT (((x'')<>(rt1.c1))))) ORDER BY ((((CAST(rt1.c2 AS NUMERIC))AND('' COLLATE RTRIM)))AND(0.38271966779699973))  NULLS LAST, ((t0.c2 IN (vt1.c1)) IN ()) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt1.c1 AS NUMERIC), ((t0.c0)<>(vt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((x'')<>(rt1.c1))))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((((CAST(rt1.c2 AS NUMERIC))AND('' COLLATE RTRIM)))AND(0.38271966779699973))  NULLS LAST, ((t0.c2 IN (vt1.c1)) IN ()) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt1.c1 AS NUMERIC), ((t0.c0)!=(vt1.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, t0 WHERE ((NOT (((x'')<>(rt1.c1))))) ORDER BY ((((CAST(rt1.c2 AS NUMERIC))AND('' COLLATE RTRIM)))AND(0.38271966779699973))  NULLS LAST, ((t0.c2 IN (vt1.c1)) IN ()) ASC  NULLS LAST, COALESCE(DISTINCT CAST(vt1.c1 AS NUMERIC), ((t0.c0)<>(vt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c0)))|(((t0.c1) NOT NULL)))) ORDER BY ((t0.c0 COLLATE RTRIM)*(((t0.c2)||(t0.c0))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT NULL) ASC, rtreenode(CAST('' AS BLOB), CAST(NULL AS REAL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(t0.c0)))|(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)*(((t0.c2)||(t0.c0))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT NULL) ASC, rtreenode(CAST('' AS BLOB), CAST(NULL AS REAL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c0)))|(((t0.c1) NOT NULL)))) ORDER BY ((t0.c0 COLLATE RTRIM)*(((t0.c2)||(t0.c0))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT NULL) ASC, rtreenode(CAST('' AS BLOB), CAST(NULL AS REAL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)AND(t0.c0)))|(((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)*(((t0.c2)||(t0.c0))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT NULL) ASC, rtreenode(CAST('' AS BLOB), CAST(NULL AS REAL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)AND(t0.c0)))|(((t0.c1) NOT NULL)))) ORDER BY ((t0.c0 COLLATE RTRIM)*(((t0.c2)||(t0.c0))))  NULLS LAST, ((((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c2))) NOT NULL) ASC, rtreenode(CAST('' AS BLOB), CAST(NULL AS REAL)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS(((t0.c2) BETWEEN (t0.c2) AND (vt1.c1))))) ORDER BY NULL DESC, CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)IS(((t0.c2) BETWEEN (t0.c2) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY NULL DESC, CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)) AS TEXT));
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS(((t0.c2) BETWEEN (t0.c2) AND (vt1.c1))))) ORDER BY NULL DESC, CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE)IS(((t0.c2) BETWEEN (t0.c2) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY NULL DESC, CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)) AS TEXT));
SELECT COUNT(*) FROM t0, vt1, rt1 WHERE (((rt1.c0 COLLATE NOCASE)IS(((t0.c2) BETWEEN (t0.c2) AND (vt1.c1))))) ORDER BY NULL DESC, CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c1)) AS TEXT);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (0.8693710631359914)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.8693710631359914))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (0.8693710631359914)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.8693710631359914))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (0.8693710631359914)));
SELECT ALL COUNT(*) FROM t0, rt1 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) WHERE ((((((((('')OR(((rt1.c2)AND(x'52ba')))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))OR(CASE vt0.c1  WHEN t0.c0 THEN 4.8975977E7 END)))OR(0.8892262998574906))) ORDER BY ((CASE vt0.c0  WHEN t0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN rt1.c1 THEN rt1.c0 END)!=((~ (0.6274109001984606)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((('')OR(((rt1.c2)AND(x'52ba')))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))OR(CASE vt0.c1  WHEN t0.c0 THEN 4.8975977E7 END)))OR(0.8892262998574906))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) ORDER BY ((CASE vt0.c0  WHEN t0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN rt1.c1 THEN rt1.c0 END)!=((~ (0.6274109001984606)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) WHERE ((((((((('')OR(((rt1.c2)AND(x'52ba')))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))OR(CASE vt0.c1  WHEN t0.c0 THEN 4.8975977E7 END)))OR(0.8892262998574906))) ORDER BY ((CASE vt0.c0  WHEN t0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN rt1.c1 THEN rt1.c0 END)!=((~ (0.6274109001984606)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((('')OR(((rt1.c2)AND(x'52ba')))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))OR(CASE vt0.c1  WHEN t0.c0 THEN 4.8975977E7 END)))OR(0.8892262998574906))) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) ORDER BY ((CASE vt0.c0  WHEN t0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN rt1.c1 THEN rt1.c0 END)!=((~ (0.6274109001984606)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 FULL OUTER JOIN vt0 ON (- (CASE WHEN t0.c0 THEN rt1.c0 WHEN t0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) WHERE ((((((((('')OR(((rt1.c2)AND(x'52ba')))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt1.c2))))))OR(CASE vt0.c1  WHEN t0.c0 THEN 4.8975977E7 END)))OR(0.8892262998574906))) ORDER BY ((CASE vt0.c0  WHEN t0.c1 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN rt1.c1 THEN rt1.c0 END)!=((~ (0.6274109001984606)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((((((((vt1.c2 IN ()))AND(rt1.c0 COLLATE RTRIM)))OR((((vt1.c2, vt1.c2, vt0.c2, rt1.c0, t0.c1)) NOT BETWEEN ((t0.c1, vt1.c0, 'z7O>Ꞌ	', t0.c2, t0.c0)) AND ((0.05892788066300925, vt0.c0, vt1.c1, vt0.c2, vt1.c1))))))OR(0.4152331985561616)))AND(((vt0.c1)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY (((((((((vt1.c2 IN ()))AND(rt1.c0 COLLATE RTRIM)))OR((((vt1.c2, vt1.c2, vt0.c2, rt1.c0, t0.c1)) NOT BETWEEN ((t0.c1, vt1.c0, 'z7O>Ꞌ	', t0.c2, t0.c0)) AND ((0.05892788066300925, vt0.c0, vt1.c1, vt0.c2, vt1.c1))))))OR(0.4152331985561616)))AND(((vt0.c1)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((((((((vt1.c2 IN ()))AND(rt1.c0 COLLATE RTRIM)))OR((((vt1.c2, vt1.c2, vt0.c2, rt1.c0, t0.c1)) NOT BETWEEN ((t0.c1, vt1.c0, 'z7O>Ꞌ	', t0.c2, t0.c0)) AND ((0.05892788066300925, vt0.c0, vt1.c1, vt0.c2, vt1.c1))))))OR(0.4152331985561616)))AND(((vt0.c1)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c2 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY (((((((((vt1.c2 IN ()))AND(rt1.c0 COLLATE RTRIM)))OR((((vt1.c2, vt1.c2, vt0.c2, rt1.c0, t0.c1)) NOT BETWEEN ((t0.c1, vt1.c0, 'z7O>Ꞌ	', t0.c2, t0.c0)) AND ((0.05892788066300925, vt0.c0, vt1.c1, vt0.c2, vt1.c1))))))OR(0.4152331985561616)))AND(((vt0.c1)==(vt0.c0)))));
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c2 COLLATE RTRIM) NOTNULL)) ORDER BY (((((((((vt1.c2 IN ()))AND(rt1.c0 COLLATE RTRIM)))OR((((vt1.c2, vt1.c2, vt0.c2, rt1.c0, t0.c1)) NOT BETWEEN ((t0.c1, vt1.c0, 'z7O>Ꞌ	', t0.c2, t0.c0)) AND ((0.05892788066300925, vt0.c0, vt1.c1, vt0.c2, vt1.c1))))))OR(0.4152331985561616)))AND(((vt0.c1)=(vt0.c0))));
SELECT ALL * FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON (~ ((((x'230c', vt1.c2, rt1.c1))>((rt1.c1, vt1.c0, vt1.c1))))) WHERE (((((((vt1.c0)AND(NULL)))OR(rt1.c0))) IS TRUE)) ORDER BY (((vt1.c1)OR(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(NULL)))OR(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON (~ ((((x'230c', vt1.c2, rt1.c1))>((rt1.c1, vt1.c0, vt1.c1))))) ORDER BY (((vt1.c1)OR(vt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON (~ ((((x'230c', vt1.c2, rt1.c1))>((rt1.c1, vt1.c0, vt1.c1))))) WHERE (((((((vt1.c0)AND(NULL)))OR(rt1.c0))) IS TRUE)) ORDER BY (((vt1.c1)OR(vt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(NULL)))OR(rt1.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON (~ ((((x'230c', vt1.c2, rt1.c1))>((rt1.c1, vt1.c0, vt1.c1))))) ORDER BY (((vt1.c1)OR(vt0.c2)) IN ()));
SELECT ALL * FROM vt0, rt1 RIGHT OUTER JOIN vt1 ON (~ ((((x'230c', vt1.c2, rt1.c1))>((rt1.c1, vt1.c0, vt1.c1))))) WHERE (((((((vt1.c0)AND(NULL)))OR(rt1.c0))) IS TRUE)) ORDER BY (((vt1.c1)OR(vt0.c2)) IN ());
SELECT * FROM vt1, vt0, rt1, t0 WHERE (t0.c2) ORDER BY (((rt1.c1 IN ())) BETWEEN (((vt1.c0)IS NOT(vt0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, vt0, rt1, t0 ORDER BY (((rt1.c1 IN ())) BETWEEN (((vt1.c0)IS NOT(vt0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END)));
SELECT * FROM vt1, vt0, rt1, t0 WHERE (t0.c2) ORDER BY (((rt1.c1 IN ())) BETWEEN (((vt1.c0)IS NOT(vt0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt1, vt0, rt1, t0 ORDER BY (((rt1.c1 IN ())) BETWEEN (((vt1.c0)IS NOT(vt0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END)));
SELECT * FROM vt1, vt0, rt1, t0 WHERE (t0.c2) ORDER BY (((rt1.c1 IN ())) BETWEEN (((vt1.c0)IS NOT(vt0.c1))) AND (CASE WHEN t0.c2 THEN t0.c0 END));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) INNER JOIN rt1 ON (~ (('-747009745' IN ('zb', t0.c1)))) CROSS JOIN t0 ON ((((((vt1.c1) ISNULL))OR((((t0.c2))<=((t0.c0))))))AND(((t0.c0)==(vt0.c0)))) WHERE (CHAR(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) INNER JOIN rt1 ON (~ (('-747009745' IN ('zb', t0.c1)))) CROSS JOIN t0 ON ((((((vt1.c1) ISNULL))OR((((t0.c2))<=((t0.c0))))))AND(((t0.c0)==(vt0.c0)))));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) INNER JOIN rt1 ON (~ (('-747009745' IN ('zb', t0.c1)))) CROSS JOIN t0 ON ((((((vt1.c1) ISNULL))OR((((t0.c2))<=((t0.c0))))))AND(((t0.c0)==(vt0.c0)))) WHERE (CHAR(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN (vt0.c1)) AS NUMERIC) INNER JOIN rt1 ON (~ (('-747009745' IN ('zb', t0.c1)))) CROSS JOIN t0 ON ((((((vt1.c1) ISNULL))OR((((t0.c2))<=((t0.c0))))))AND(((t0.c0)==(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT (vt1.c1 IN (vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN (vt1.c0, vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT (vt1.c1 IN (vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN (vt1.c0, vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY LOWER(DISTINCT (vt1.c1 IN (vt1.c0, vt1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (0.5573881715080262))) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c0)))>>((('') NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (0.5573881715080262))) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c0)))>>((('') NOT BETWEEN (rt1.c2) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (0.5573881715080262))) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c0)))>>((('') NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (0.5573881715080262))) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c0)))>>((('') NOT BETWEEN (rt1.c2) AND (t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt1 ON LOWER(DISTINCT ((rt1.c0) NOT BETWEEN (vt0.c0) AND (0.5573881715080262))) FULL OUTER JOIN t0 ON ((((rt1.c0)IS NOT(rt1.c0)))>>((('') NOT BETWEEN (rt1.c2) AND (t0.c0)))) WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c2)>(vt0.c0))) AND (((x'651ca193')>=(vt0.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (t0.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c2)>(vt0.c0))) AND (((x'651ca193')>=(vt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (- (((vt0.c0) BETWEEN (t0.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c2)>(vt0.c0))) AND (((x'651ca193')>=(vt0.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (t0.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c2)>(vt0.c0))) AND (((x'651ca193')>=(vt0.c2))))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY (- (((vt0.c0) BETWEEN (t0.c1) AND (rt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((rt1.c1 COLLATE BINARY) NOT BETWEEN (((rt1.c2)>(vt0.c0))) AND (((x'651ca193')>=(vt0.c2))))) ORDER BY (- (((vt0.c0) BETWEEN (t0.c1) AND (rt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST('0.38271966779699973' AS BLOB))))AND((t0.c0 IN ()))))OR(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST('0.38271966779699973' AS BLOB))))AND((t0.c0 IN ()))))OR(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST('0.38271966779699973' AS BLOB))))AND((t0.c0 IN ()))))OR(((vt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST('0.38271966779699973' AS BLOB))))AND((t0.c0 IN ()))))OR(((vt0.c2) IS FALSE)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((((((t0.c0)OR(CAST(vt1.c0 AS NUMERIC))))OR(CAST('0.38271966779699973' AS BLOB))))AND((t0.c0 IN ()))))OR(((vt0.c2) IS FALSE))));
SELECT ALL * FROM vt0, rt1 WHERE ((+ ('-1420410950')));
SELECT SUM(count) FROM (SELECT (((+ ('-1420410950'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((+ ('-1420410950')));
SELECT SUM(count) FROM (SELECT (((+ ('-1420410950'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((+ ('-1420410950')));
SELECT * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (x'');
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (rt1.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c2 THEN t0.c1 WHEN 2118282599 THEN t0.c1 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c2 END IN ()) WHERE ((((((rt1.c2, vt1.c0, t0.c1))>((vt0.c2, rt1.c1, t0.c2)))) NOT NULL)) ORDER BY ((((((vt0.c1, vt1.c1, vt0.c2))>=((vt1.c0, t0.c1, rt1.c0)))))<=((((vt0.c1)|(rt1.c2))))) DESC, ((rt1.c2)==(((((((((vt1.c0)AND(t0.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, vt1.c0, t0.c1))>((vt0.c2, rt1.c1, t0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt1 ON (rt1.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c2 THEN t0.c1 WHEN 2118282599 THEN t0.c1 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c2 END IN ()) ORDER BY ((((((vt0.c1, vt1.c1, vt0.c2))>=((vt1.c0, t0.c1, rt1.c0)))))<=((((vt0.c1)|(rt1.c2))))) DESC, ((rt1.c2)=(((((((((vt1.c0)AND(t0.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (rt1.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c2 THEN t0.c1 WHEN 2118282599 THEN t0.c1 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c2 END IN ()) WHERE ((((((rt1.c2, vt1.c0, t0.c1))>((vt0.c2, rt1.c1, t0.c2)))) NOT NULL)) ORDER BY ((((((vt0.c1, vt1.c1, vt0.c2))>=((vt1.c0, t0.c1, rt1.c0)))))<=((((vt0.c1)|(rt1.c2))))) DESC, ((rt1.c2)==(((((((((vt1.c0)AND(t0.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, vt1.c0, t0.c1))>((vt0.c2, rt1.c1, t0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 INNER JOIN rt1 ON (rt1.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c2 THEN t0.c1 WHEN 2118282599 THEN t0.c1 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c2 END IN ()) ORDER BY ((((((vt0.c1, vt1.c1, vt0.c2))>=((vt1.c0, t0.c1, rt1.c0)))))<=((((vt0.c1)|(rt1.c2))))) DESC, ((rt1.c2)=(((((((((vt1.c0)AND(t0.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(vt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN rt1 ON (rt1.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN vt1 ON (CASE WHEN vt1.c2 THEN t0.c1 WHEN 2118282599 THEN t0.c1 WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c2 END IN ()) WHERE ((((((rt1.c2, vt1.c0, t0.c1))>((vt0.c2, rt1.c1, t0.c2)))) NOT NULL)) ORDER BY ((((((vt0.c1, vt1.c1, vt0.c2))>=((vt1.c0, t0.c1, rt1.c0)))))<=((((vt0.c1)|(rt1.c2))))) DESC, ((rt1.c2)==(((((((((vt1.c0)AND(t0.c2)))AND(rt1.c0)))AND(vt0.c0)))OR(vt1.c1))))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((vt0.c1)%(vt0.c0)) IN ()) FULL OUTER JOIN vt0 ON ABS(((rt1.c0) NOTNULL)) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (((vt0.c1)%(vt0.c0)) IN ()) FULL OUTER JOIN vt0 ON ABS(((rt1.c0) NOTNULL)));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((vt0.c1)%(vt0.c0)) IN ()) FULL OUTER JOIN vt0 ON ABS(((rt1.c0) NOTNULL)) WHERE (vt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c2) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON (((vt0.c1)%(vt0.c0)) IN ()) FULL OUTER JOIN vt0 ON ABS(((rt1.c0) NOTNULL)));
SELECT * FROM t0 LEFT OUTER JOIN rt1 ON (((vt0.c1)%(vt0.c0)) IN ()) FULL OUTER JOIN vt0 ON ABS(((rt1.c0) NOTNULL)) WHERE (vt0.c2);
SELECT COUNT(*) FROM t0, rt1, vt1, vt0 WHERE ((+ (HEX(DISTINCT rt1.c0)))) ORDER BY ((x'')<<((((vt0.c1))>=((vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT rt1.c0)))) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY ((x'')<<((((vt0.c1))>=((vt1.c2))))) DESC);
SELECT COUNT(*) FROM t0, rt1, vt1, vt0 WHERE ((+ (HEX(DISTINCT rt1.c0)))) ORDER BY ((x'')<<((((vt0.c1))>=((vt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT rt1.c0)))) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY ((x'')<<((((vt0.c1))>=((vt1.c2))))) DESC);
SELECT COUNT(*) FROM t0, rt1, vt1, vt0 WHERE ((+ (HEX(DISTINCT rt1.c0)))) ORDER BY ((x'')<<((((vt0.c1))>=((vt1.c2))))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((((vt0.c2)==(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)==(vt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((((vt0.c2)==(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c2)==(vt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, vt1 CROSS JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((((vt0.c2)==(vt1.c0)) IN ()));
SELECT * FROM vt1, rt1 NOT INDEXED, t0 NOT INDEXED, vt0 WHERE (((((vt0.c2)=(rt1.c2)))*(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)==(rt1.c2)))*(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT * FROM vt1, rt1 NOT INDEXED, t0 NOT INDEXED, vt0 WHERE (((((vt0.c2)=(rt1.c2)))*(rt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)==(rt1.c2)))*(rt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT * FROM vt1, rt1 NOT INDEXED, t0 NOT INDEXED, vt0 WHERE (((((vt0.c2)=(rt1.c2)))*(rt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL))<=((((t0.c0)) NOT BETWEEN (('1408224388')) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))<=((((t0.c0)) NOT BETWEEN (('1408224388')) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL))<=((((t0.c0)) NOT BETWEEN (('1408224388')) AND ((vt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL))<=((((t0.c0)) NOT BETWEEN (('1408224388')) AND ((vt0.c2)))))) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL))<=((((t0.c0)) NOT BETWEEN (('1408224388')) AND ((vt0.c2))))));
SELECT * FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (rt1.c1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)>>(vt0.c1)))) ORDER BY ((vt0.c1 IN ('1320745441')) IN ());
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c1)>>(vt0.c1)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY ((vt0.c1 IN ('1320745441')) IN ()));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)>>(vt0.c1)))) ORDER BY ((vt0.c1 IN ('1320745441')) IN ());
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c1)>>(vt0.c1)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY ((vt0.c1 IN ('1320745441')) IN ()));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c1)>>(vt0.c1)))) ORDER BY ((vt0.c1 IN ('1320745441')) IN ());
SELECT ALL * FROM vt1, vt0 WHERE (((((CAST(vt1.c2 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c2 END)))AND((vt0.c1 IN (vt1.c0))))) ORDER BY ((vt1.c2) NOTNULL) DESC  NULLS LAST, CAST((((vt0.c1, vt0.c0, vt1.c2)) BETWEEN ((vt1.c2, vt0.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c2))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c2 END)))AND((vt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2) NOTNULL) DESC  NULLS LAST, CAST((((vt0.c1, vt0.c0, vt1.c2)) BETWEEN ((vt1.c2, vt0.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c2))) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((CAST(vt1.c2 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c2 END)))AND((vt0.c1 IN (vt1.c0))))) ORDER BY ((vt1.c2) NOTNULL) DESC  NULLS LAST, CAST((((vt0.c1, vt0.c0, vt1.c2)) BETWEEN ((vt1.c2, vt0.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c2))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c2 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c2 END)))AND((vt0.c1 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c2) NOTNULL) DESC  NULLS LAST, CAST((((vt0.c1, vt0.c0, vt1.c2)) BETWEEN ((vt1.c2, vt0.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c2))) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((CAST(vt1.c2 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt1.c2 END)))AND((vt0.c1 IN (vt1.c0))))) ORDER BY ((vt1.c2) NOTNULL) DESC  NULLS LAST, CAST((((vt0.c1, vt0.c0, vt1.c2)) BETWEEN ((vt1.c2, vt0.c0, vt1.c0)) AND ((vt1.c2, vt0.c0, vt0.c2))) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((((((vt0.c0)-(vt1.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND ('W_e/')))))OR(((((vt0.c2)OR(vt0.c0)))OR(vt1.c2)))))AND(vt1.c2 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(HEX(vt1.c1))))AND(((((NULL)OR(vt1.c2)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)-(vt1.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND ('W_e/')))))OR(((((vt0.c2)OR(vt0.c0)))OR(vt1.c2)))))AND(vt1.c2 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(HEX(vt1.c1))))AND(((((NULL)OR(vt1.c2)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((((((vt0.c0)-(vt1.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND ('W_e/')))))OR(((((vt0.c2)OR(vt0.c0)))OR(vt1.c2)))))AND(vt1.c2 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(HEX(vt1.c1))))AND(((((NULL)OR(vt1.c2)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt0.c0)-(vt1.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND ('W_e/')))))OR(((((vt0.c2)OR(vt0.c0)))OR(vt1.c2)))))AND(vt1.c2 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(HEX(vt1.c1))))AND(((((NULL)OR(vt1.c2)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((((((((((((((((vt0.c0)-(vt1.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c2) AND ('W_e/')))))OR(((((vt0.c2)OR(vt0.c0)))OR(vt1.c2)))))AND(vt1.c2 COLLATE NOCASE)))AND(CASE vt0.c0  WHEN vt1.c1 THEN vt0.c2 ELSE vt0.c2 END)))AND(vt1.c0 COLLATE BINARY)))OR(HEX(vt1.c1))))AND(((((NULL)OR(vt1.c2)))OR(vt1.c0)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c2 WHEN vt1.c1 THEN vt1.c0 END))) ORDER BY ((vt1.c2 IN ()) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)LIKE(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)LIKE(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)LIKE(vt1.c2))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)LIKE(vt1.c2)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)%(rt1.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt1.c0 IN ()))>(rt1.c0 COLLATE RTRIM))  NULLS FIRST, (((json(rt1.c2)))==((CAST(rt1.c1 AS INTEGER)))), (((rt1.c2 IN (rt1.c2, rt1.c0))) NOT BETWEEN (((rt1.c1)<(rt1.c0))) AND (UPPER(''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)%(rt1.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ()))>(rt1.c0 COLLATE RTRIM))  NULLS FIRST, (((json(rt1.c2)))==((CAST(rt1.c1 AS INTEGER)))), (((rt1.c2 IN (rt1.c2, rt1.c0))) NOT BETWEEN (((rt1.c1)<(rt1.c0))) AND (UPPER(''))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)%(rt1.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt1.c0 IN ()))>(rt1.c0 COLLATE RTRIM))  NULLS FIRST, (((json(rt1.c2)))==((CAST(rt1.c1 AS INTEGER)))), (((rt1.c2 IN (rt1.c2, rt1.c0))) NOT BETWEEN (((rt1.c1)<(rt1.c0))) AND (UPPER(''))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)%(rt1.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ()))>(rt1.c0 COLLATE RTRIM))  NULLS FIRST, (((json(rt1.c2)))==((CAST(rt1.c1 AS INTEGER)))), (((rt1.c2 IN (rt1.c2, rt1.c0))) NOT BETWEEN (((rt1.c1)<(rt1.c0))) AND (UPPER(''))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)%(rt1.c1)) COLLATE BINARY COLLATE BINARY) ORDER BY (((rt1.c0 IN ()))>(rt1.c0 COLLATE RTRIM))  NULLS FIRST, (((json(rt1.c2)))==((CAST(rt1.c1 AS INTEGER)))), (((rt1.c2 IN (rt1.c2, rt1.c0))) NOT BETWEEN (((rt1.c1)<(rt1.c0))) AND (UPPER(''))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.9652690490761123) AND (vt1.c0))) IS FALSE)) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (0.9652690490761123) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.9652690490761123) AND (vt1.c0))) IS FALSE)) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (0.9652690490761123) AND (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS REAL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((((vt0.c1) NOT BETWEEN (0.9652690490761123) AND (vt1.c0))) IS FALSE)) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS REAL) DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c2);
SELECT ALL * FROM vt0, vt1 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) ORDER BY vt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c2);
SELECT ALL * FROM vt0, vt1 WHERE (LOWER(DISTINCT ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) ORDER BY vt1.c2;
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) ORDER BY ((('1079581519', t0.c1, t0.c2)) BETWEEN ((((t0.c1) ISNULL), CAST(NULL AS REAL), ((t0.c0) ISNULL))) AND ((GLOB(vt1.c0, t0.c1), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)), ((vt1.c0) BETWEEN (vt1.c2) AND (t0.c1))))) ASC  NULLS LAST, (((((((((((((((('')AND(vt1.c0)))OR(t0.c1)))OR(CASE x''  WHEN t0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))AND(((vt1.c0)!=(vt1.c2)))))OR(vt1.c0)))AND('Q9')), CASE CAST(vt1.c1 AS NUMERIC)  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c2) NOT NULL) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)) WHEN ((0xffffffffb2488c91)>(t0.c2)) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c2 THEN '-20587390' WHEN t0.c0 THEN '1922706717' WHEN x'' THEN vt1.c2 ELSE NULL END WHEN ((t0.c0)AND(t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((('1079581519', t0.c1, t0.c2)) BETWEEN ((((t0.c1) ISNULL), CAST(NULL AS REAL), ((t0.c0) ISNULL))) AND ((GLOB(vt1.c0, t0.c1), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)), ((vt1.c0) BETWEEN (vt1.c2) AND (t0.c1))))) ASC  NULLS LAST, (((((((((((((((('')AND(vt1.c0)))OR(t0.c1)))OR(CASE x''  WHEN t0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))AND(((vt1.c0)!=(vt1.c2)))))OR(vt1.c0)))AND('Q9')), CASE CAST(vt1.c1 AS NUMERIC)  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c2) NOT NULL) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)) WHEN ((0xffffffffb2488c91)>(t0.c2)) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c2 THEN '-20587390' WHEN t0.c0 THEN '1922706717' WHEN x'' THEN vt1.c2 ELSE NULL END WHEN ((t0.c0)AND(t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) ORDER BY ((('1079581519', t0.c1, t0.c2)) BETWEEN ((((t0.c1) ISNULL), CAST(NULL AS REAL), ((t0.c0) ISNULL))) AND ((GLOB(vt1.c0, t0.c1), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)), ((vt1.c0) BETWEEN (vt1.c2) AND (t0.c1))))) ASC  NULLS LAST, (((((((((((((((('')AND(vt1.c0)))OR(t0.c1)))OR(CASE x''  WHEN t0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))AND(((vt1.c0)!=(vt1.c2)))))OR(vt1.c0)))AND('Q9')), CASE CAST(vt1.c1 AS NUMERIC)  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c2) NOT NULL) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)) WHEN ((0xffffffffb2488c91)>(t0.c2)) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c2 THEN '-20587390' WHEN t0.c0 THEN '1922706717' WHEN x'' THEN vt1.c2 ELSE NULL END WHEN ((t0.c0)AND(t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((('1079581519', t0.c1, t0.c2)) BETWEEN ((((t0.c1) ISNULL), CAST(NULL AS REAL), ((t0.c0) ISNULL))) AND ((GLOB(vt1.c0, t0.c1), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)), ((vt1.c0) BETWEEN (vt1.c2) AND (t0.c1))))) ASC  NULLS LAST, (((((((((((((((('')AND(vt1.c0)))OR(t0.c1)))OR(CASE x''  WHEN t0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))AND(((vt1.c0)!=(vt1.c2)))))OR(vt1.c0)))AND('Q9')), CASE CAST(vt1.c1 AS NUMERIC)  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c2) NOT NULL) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)) WHEN ((0xffffffffb2488c91)>(t0.c2)) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c2 THEN '-20587390' WHEN t0.c0 THEN '1922706717' WHEN x'' THEN vt1.c2 ELSE NULL END WHEN ((t0.c0)AND(t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END);
SELECT COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)OR(t0.c0)))OR(t0.c0)) IN ())) ORDER BY ((('1079581519', t0.c1, t0.c2)) BETWEEN ((((t0.c1) ISNULL), CAST(NULL AS REAL), ((t0.c0) ISNULL))) AND ((GLOB(vt1.c0, t0.c1), ((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c2)))OR(t0.c2)), ((vt1.c0) BETWEEN (vt1.c2) AND (t0.c1))))) ASC  NULLS LAST, (((((((((((((((('')AND(vt1.c0)))OR(t0.c1)))OR(CASE x''  WHEN t0.c0 THEN t0.c1 ELSE vt1.c0 END)))OR(((t0.c1) IS TRUE))))AND(CASE WHEN vt1.c2 THEN vt1.c0 END)))AND(((vt1.c0)!=(vt1.c2)))))OR(vt1.c0)))AND('Q9')), CASE CAST(vt1.c1 AS NUMERIC)  WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN ((t0.c2) NOT NULL) WHEN ((vt1.c0)<>(vt1.c1)) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c2)) WHEN ((0xffffffffb2488c91)>(t0.c2)) THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) WHEN t0.c0 COLLATE BINARY THEN CASE WHEN t0.c2 THEN '-20587390' WHEN t0.c0 THEN '1922706717' WHEN x'' THEN vt1.c2 ELSE NULL END WHEN ((t0.c0)AND(t0.c1)) THEN ((t0.c2) BETWEEN (t0.c2) AND (t0.c2)) END;
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c2) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((NOT (((vt1.c2) NOT NULL))));
SELECT ALL * FROM rt1, vt1 WHERE (((((((((((((vt1.c2)AND(vt1.c0)))OR('0.042199544153552426')))AND(vt1.c1)))OR(rt1.c2)))OR((- (rt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c2 DESC  NULLS LAST, CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC), (((((((((+ ('')))OR(rt1.c2)))AND(TRIM(DISTINCT vt1.c1))))OR(((rt1.c1) IS FALSE))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c2)AND(vt1.c0)))OR('0.042199544153552426')))AND(vt1.c1)))OR(rt1.c2)))OR((- (rt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c2 DESC  NULLS LAST, CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC), (((((((((+ ('')))OR(rt1.c2)))AND(TRIM(DISTINCT vt1.c1))))OR(((rt1.c1) IS FALSE))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT ALL * FROM rt1, vt1 WHERE (((((((((((((vt1.c2)AND(vt1.c0)))OR('0.042199544153552426')))AND(vt1.c1)))OR(rt1.c2)))OR((- (rt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c2 DESC  NULLS LAST, CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC), (((((((((+ ('')))OR(rt1.c2)))AND(TRIM(DISTINCT vt1.c1))))OR(((rt1.c1) IS FALSE))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c2)AND(vt1.c0)))OR('0.042199544153552426')))AND(vt1.c1)))OR(rt1.c2)))OR((- (rt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY vt1.c2 DESC  NULLS LAST, CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC), (((((((((+ ('')))OR(rt1.c2)))AND(TRIM(DISTINCT vt1.c1))))OR(((rt1.c1) IS FALSE))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1)))));
SELECT ALL * FROM rt1, vt1 WHERE (((((((((((((vt1.c2)AND(vt1.c0)))OR('0.042199544153552426')))AND(vt1.c1)))OR(rt1.c2)))OR((- (rt1.c1)))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY vt1.c2 DESC  NULLS LAST, CAST(CAST(rt1.c0 AS NUMERIC) AS NUMERIC), (((((((((+ ('')))OR(rt1.c2)))AND(TRIM(DISTINCT vt1.c1))))OR(((rt1.c1) IS FALSE))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE ((~ (CAST(rt1.c2 AS BLOB)))) ORDER BY (((~ (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (json_remove(rt1.c2, rt1.c2))) ASC, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1285758972')))) AND ((~ (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (((~ (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (json_remove(rt1.c2, rt1.c2))) ASC, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1285758972')))) AND ((~ (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE ((~ (CAST(rt1.c2 AS BLOB)))) ORDER BY (((~ (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (json_remove(rt1.c2, rt1.c2))) ASC, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1285758972')))) AND ((~ (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (((~ (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (json_remove(rt1.c2, rt1.c2))) ASC, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1285758972')))) AND ((~ (t0.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE ((~ (CAST(rt1.c2 AS BLOB)))) ORDER BY (((~ (vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (json_remove(rt1.c2, rt1.c2))) ASC, ((t0.c2 COLLATE BINARY) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND (('-1285758972')))) AND ((~ (t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c1)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<=(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c1)%(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c1)%(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)<=(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c1)%(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)<=(t0.c2))) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c1)%(t0.c1)))));
SELECT * FROM vt0, rt1 WHERE ((~ ('fJE認)'))) ORDER BY (((~ (rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((~ ('fJE認)'))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((~ (rt1.c2))) IS FALSE));
SELECT * FROM vt0, rt1 WHERE ((~ ('fJE認)'))) ORDER BY (((~ (rt1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT (((~ ('fJE認)'))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((~ (rt1.c2))) IS FALSE));
SELECT * FROM vt0, rt1 WHERE ((~ ('fJE認)'))) ORDER BY (((~ (rt1.c2))) IS FALSE);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((IFNULL(DISTINCT t0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT t0.c0, t0.c0) IN ())) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((IFNULL(DISTINCT t0.c0, t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT t0.c0, t0.c0) IN ())) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT COUNT(*) FROM rt1, t0, vt0 WHERE ((IFNULL(DISTINCT t0.c0, t0.c0) IN ()));
SELECT ALL * FROM vt0, t0, rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE ((+ (((((t0.c2)AND(rt1.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c2)AND(rt1.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0, rt1 FULL OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM vt0, t0, rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE ((+ (((((t0.c2)AND(rt1.c1)))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c2)AND(rt1.c1)))OR(t0.c2))))) IS TRUE)  as count FROM vt0, t0, rt1 FULL OUTER JOIN vt1 ON vt1.c1);
SELECT ALL * FROM vt0, t0, rt1 FULL OUTER JOIN vt1 ON vt1.c1 WHERE ((+ (((((t0.c2)AND(rt1.c1)))OR(t0.c2)))));
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((((CASE WHEN vt0.c1 THEN t0.c1 END)OR('?D(')))AND(((vt0.c0)=(rt1.c1))))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN t0.c1 END)OR('?D(')))AND(((vt0.c0)=(rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY vt0.c2 DESC);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((((CASE WHEN vt0.c1 THEN t0.c1 END)OR('?D(')))AND(((vt0.c0)=(rt1.c1))))) ORDER BY vt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN t0.c1 END)OR('?D(')))AND(((vt0.c0)=(rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY vt0.c2 DESC);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((((CASE WHEN vt0.c1 THEN t0.c1 END)OR('?D(')))AND(((vt0.c0)=(rt1.c1))))) ORDER BY vt0.c2 DESC;
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))<(((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))<(((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))<(((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))<(((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c2))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (((((rt1.c1) BETWEEN (vt1.c1) AND (rt1.c1)))<(((rt1.c1) NOT BETWEEN (t0.c0) AND (vt0.c2)))));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((rt1.c2 IN (t0.c1))) AND ('fJE認)')) WHERE (((((rt1.c2 IN (t0.c1, rt1.c1))))=((((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN (t0.c1, rt1.c1))))=((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((rt1.c2 IN (t0.c1))) AND ('fJE認)')));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((rt1.c2 IN (t0.c1))) AND ('fJE認)')) WHERE (((((rt1.c2 IN (t0.c1, rt1.c1))))=((((t0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2 IN (t0.c1, rt1.c1))))=((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((rt1.c2 IN (t0.c1))) AND ('fJE認)')));
SELECT COUNT(*) FROM rt1 INNER JOIN t0 ON ((rt1.c0 COLLATE BINARY) BETWEEN ((rt1.c2 IN (t0.c1))) AND ('fJE認)')) WHERE (((((rt1.c2 IN (t0.c1, rt1.c1))))=((((t0.c0) IS TRUE)))));
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY CAST(((((((((t0.c2)AND(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(vt1.c2)) AS TEXT) ASC, CAST(rt1.c1 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY CAST(((((((((t0.c2)AND(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(vt1.c2)) AS TEXT) ASC, CAST(rt1.c1 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY CAST(((((((((t0.c2)AND(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(vt1.c2)) AS TEXT) ASC, CAST(rt1.c1 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY CAST(((((((((t0.c2)AND(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(vt1.c2)) AS TEXT) ASC, CAST(rt1.c1 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((CAST(rt1.c1 AS REAL) IN ())) ORDER BY CAST(((((((((t0.c2)AND(t0.c1)))OR(rt1.c2)))AND(t0.c0)))OR(vt1.c2)) AS TEXT) ASC, CAST(rt1.c1 AS INTEGER) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (TRIM(((((t0.c1)OR(t0.c0)))OR(t0.c2)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((t0.c1)OR(t0.c0)))OR(t0.c2)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(((((t0.c1)OR(t0.c0)))OR(t0.c2)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((t0.c1)OR(t0.c0)))OR(t0.c2)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(((((t0.c1)OR(t0.c0)))OR(t0.c2)), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(CAST(t0.c1 AS TEXT), ((((rt1.c0)OR(vt1.c2)))AND(''))) CROSS JOIN rt1 ON (((t0.c2 IN ())) NOT BETWEEN ((('n뢊') NOT BETWEEN (vt0.c2) AND (rt1.c1))) AND (HEX(vt1.c1))) RIGHT OUTER JOIN t0 ON CASE rt1.c0 COLLATE RTRIM  WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 END THEN '2064942304' ELSE (((t0.c2)) BETWEEN ((vt1.c0)) AND (('0.2760210028816563'))) END WHERE (('-1580694751' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1580694751' IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(CAST(t0.c1 AS TEXT), ((((rt1.c0)OR(vt1.c2)))AND(''))) CROSS JOIN rt1 ON (((t0.c2 IN ())) NOT BETWEEN ((('n뢊') NOT BETWEEN (vt0.c2) AND (rt1.c1))) AND (HEX(vt1.c1))) RIGHT OUTER JOIN t0 ON CASE rt1.c0 COLLATE RTRIM  WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 END THEN '2064942304' ELSE (((t0.c2)) BETWEEN ((vt1.c0)) AND (('0.2760210028816563'))) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(CAST(t0.c1 AS TEXT), ((((rt1.c0)OR(vt1.c2)))AND(''))) CROSS JOIN rt1 ON (((t0.c2 IN ())) NOT BETWEEN ((('n뢊') NOT BETWEEN (vt0.c2) AND (rt1.c1))) AND (HEX(vt1.c1))) RIGHT OUTER JOIN t0 ON CASE rt1.c0 COLLATE RTRIM  WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 END THEN '2064942304' ELSE (((t0.c2)) BETWEEN ((vt1.c0)) AND (('0.2760210028816563'))) END WHERE (('-1580694751' IN ()));
SELECT SUM(count) FROM (SELECT ((('-1580694751' IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON TRIM(CAST(t0.c1 AS TEXT), ((((rt1.c0)OR(vt1.c2)))AND(''))) CROSS JOIN rt1 ON (((t0.c2 IN ())) NOT BETWEEN ((('n뢊') NOT BETWEEN (vt0.c2) AND (rt1.c1))) AND (HEX(vt1.c1))) RIGHT OUTER JOIN t0 ON CASE rt1.c0 COLLATE RTRIM  WHEN CASE x''  WHEN vt0.c0 THEN vt0.c0 END THEN '2064942304' ELSE (((t0.c2)) BETWEEN ((vt1.c0)) AND (('0.2760210028816563'))) END);
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(t0.c0, t0.c2) COLLATE RTRIM) ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))!=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(t0.c0, t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))!=(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(t0.c0, t0.c2) COLLATE RTRIM) ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))!=(NULL));
SELECT SUM(count) FROM (SELECT ALL ((INSTR(t0.c0, t0.c2) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))!=(NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (INSTR(t0.c0, t0.c2) COLLATE RTRIM) ORDER BY ((((t0.c2) BETWEEN (t0.c0) AND (t0.c1)))!=(NULL));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt1 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt1 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 NATURAL JOIN rt1 WHERE (CASE WHEN t0.c2 THEN vt0.c0 ELSE vt0.c2 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN (~ (vt1.c0)) THEN 'N*W[V܎' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN (~ (vt1.c0)) THEN 'N*W[V܎' END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN (~ (vt1.c0)) THEN 'N*W[V܎' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN (~ (vt1.c0)) THEN 'N*W[V܎' END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (((vt1.c2)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c2)))  WHEN (~ (vt1.c0)) THEN 'N*W[V܎' END);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c2 AS NUMERIC)))=((CASE vt1.c2  WHEN vt1.c0 THEN 0.9025926223851966 ELSE vt1.c2 END)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c2) AND (0.25351768032661515))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS NUMERIC)))=((CASE vt1.c2  WHEN vt1.c0 THEN 0.9025926223851966 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c2) AND (0.25351768032661515))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c2 AS NUMERIC)))=((CASE vt1.c2  WHEN vt1.c0 THEN 0.9025926223851966 ELSE vt1.c2 END)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c2) AND (0.25351768032661515))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS NUMERIC)))=((CASE vt1.c2  WHEN vt1.c0 THEN 0.9025926223851966 ELSE vt1.c2 END)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c2) AND (0.25351768032661515))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c2 AS NUMERIC)))=((CASE vt1.c2  WHEN vt1.c0 THEN 0.9025926223851966 ELSE vt1.c2 END)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c2) AND (0.25351768032661515))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) ASC, CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c1 END AS INTEGER), vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) ASC, CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c1 END AS INTEGER), vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) ASC, CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c1 END AS INTEGER), vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) ASC, CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c1 END AS INTEGER), vt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c1))) ISNULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) ASC, CAST(CASE vt0.c0  WHEN vt1.c0 THEN t0.c1 END AS INTEGER), vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c1 END)))) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT * FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c1 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c1 END)))) IS TRUE)  as count FROM rt1, vt0, vt1, t0);
SELECT * FROM rt1, vt0, vt1, t0 WHERE ((((rt1.c2)) NOT BETWEEN (((+ (t0.c2)))) AND ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c1 END))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((~ (rt1.c2))) BETWEEN (t0.c2) AND (((((t0.c1)OR(NULL)))AND(t0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((~ (rt1.c2))) BETWEEN (t0.c2) AND (((((t0.c1)OR(NULL)))AND(t0.c0)))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((~ (rt1.c2))) BETWEEN (t0.c2) AND (((((t0.c1)OR(NULL)))AND(t0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((~ (rt1.c2))) BETWEEN (t0.c2) AND (((((t0.c1)OR(NULL)))AND(t0.c0)))));
SELECT * FROM rt1 CROSS JOIN t0 ON (((~ (rt1.c2))) BETWEEN (t0.c2) AND (((((t0.c1)OR(NULL)))AND(t0.c0)))) WHERE (NULL);
SELECT ALL * FROM rt1, vt1, t0 WHERE ((vt1.c1 IN (((vt1.c1)||(t0.c0))))) ORDER BY ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (((vt1.c1)||(t0.c0))))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1, vt1, t0 WHERE ((vt1.c1 IN (((vt1.c1)||(t0.c0))))) ORDER BY ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (((vt1.c1)||(t0.c0))))) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1, vt1, t0 WHERE ((vt1.c1 IN (((vt1.c1)||(t0.c0))))) ORDER BY ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) COLLATE BINARY;
SELECT ALL * FROM rt1, vt0 CROSS JOIN t0 ON ((((((((((rt1.c2)OR(vt0.c0)))AND(vt0.c2)))OR(t0.c2)))OR('H㖯y'))) NOT NULL) WHERE ((((((vt0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c2)))) ISNULL)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c2)))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON ((((((((((rt1.c2)OR(vt0.c0)))AND(vt0.c2)))OR(t0.c2)))OR('H㖯y'))) NOT NULL) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 CROSS JOIN t0 ON ((((((((((rt1.c2)OR(vt0.c0)))AND(vt0.c2)))OR(t0.c2)))OR('H㖯y'))) NOT NULL) WHERE ((((((vt0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c2)))) ISNULL)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c2)))) ISNULL)) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON ((((((((((rt1.c2)OR(vt0.c0)))AND(vt0.c2)))OR(t0.c2)))OR('H㖯y'))) NOT NULL) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 CROSS JOIN t0 ON ((((((((((rt1.c2)OR(vt0.c0)))AND(vt0.c2)))OR(t0.c2)))OR('H㖯y'))) NOT NULL) WHERE ((((((vt0.c2)) BETWEEN ((rt1.c0)) AND ((t0.c2)))) ISNULL)) ORDER BY ((vt0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>>(0xffffffff980cfee4))))=((((NULL)>(vt0.c0)))))) ORDER BY (~ (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>>(0xffffffff980cfee4))))==((((NULL)>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>>(0xffffffff980cfee4))))=((((NULL)>(vt0.c0)))))) ORDER BY (~ (vt0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)>>(0xffffffff980cfee4))))==((((NULL)>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)>>(0xffffffff980cfee4))))=((((NULL)>(vt0.c0)))))) ORDER BY (~ (vt0.c2 COLLATE BINARY));
SELECT * FROM vt1, t0, vt0 WHERE (((x'' COLLATE BINARY)||(json_object(vt1.c2, vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)||(json_object(vt1.c2, vt1.c2)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((x'' COLLATE BINARY)||(json_object(vt1.c2, vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((x'' COLLATE BINARY)||(json_object(vt1.c2, vt1.c2)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((x'' COLLATE BINARY)||(json_object(vt1.c2, vt1.c2))));
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((~ (rt1.c1))) NOT BETWEEN ((- (rt1.c1))) AND (-1415995353)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY (((~ (rt1.c1))) NOT BETWEEN ((- (rt1.c1))) AND (-1415995353)) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((~ (rt1.c1))) NOT BETWEEN ((- (rt1.c1))) AND (-1415995353)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM rt1, t0 ORDER BY (((~ (rt1.c1))) NOT BETWEEN ((- (rt1.c1))) AND (-1415995353)) ASC);
SELECT ALL COUNT(*) FROM rt1, t0 NOT INDEXED WHERE ((((rt1.c1) NOT NULL) IN ())) ORDER BY (((~ (rt1.c1))) NOT BETWEEN ((- (rt1.c1))) AND (-1415995353)) ASC;
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END IN ()) WHERE (((((NOT ('.j'))))<=((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c2)AND(t0.c0)))OR(TRIM(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('.j'))))<=((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END IN ()) ORDER BY ((((rt1.c2)AND(t0.c0)))OR(TRIM(t0.c0))));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END IN ()) WHERE (((((NOT ('.j'))))<=((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c2)AND(t0.c0)))OR(TRIM(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT ('.j'))))<=((CAST(rt1.c2 AS INTEGER))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END IN ()) ORDER BY ((((rt1.c2)AND(t0.c0)))OR(TRIM(t0.c0))));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON (CASE WHEN t0.c0 THEN t0.c0 ELSE vt1.c2 END IN ()) WHERE (((((NOT ('.j'))))<=((CAST(rt1.c2 AS INTEGER))))) ORDER BY ((((rt1.c2)AND(t0.c0)))OR(TRIM(t0.c0)));
SELECT * FROM vt1 WHERE (((((vt1.c2)<=(0.6871082636006838)))GLOB(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<=(0.6871082636006838)))GLOB(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c2)<=(0.6871082636006838)))GLOB(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2)<=(0.6871082636006838)))GLOB(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c2)<=(0.6871082636006838)))GLOB(((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (MAX(vt0.c1 COLLATE NOCASE, CASE WHEN '559836329' THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c1 COLLATE NOCASE, CASE WHEN '559836329' THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (MAX(vt0.c1 COLLATE NOCASE, CASE WHEN '559836329' THEN t0.c0 ELSE t0.c0 END));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c1 COLLATE NOCASE, CASE WHEN '559836329' THEN t0.c0 ELSE t0.c0 END)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt0 WHERE (MAX(vt0.c1 COLLATE NOCASE, CASE WHEN '559836329' THEN t0.c0 ELSE t0.c0 END));
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c2 THEN x'' END)=(vt1.c2 COLLATE BINARY))) ORDER BY ABS(DISTINCT json_type(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c2 THEN x'' END)=(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY ABS(DISTINCT json_type(vt1.c0)) ASC);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c2 THEN x'' END)=(vt1.c2 COLLATE BINARY))) ORDER BY ABS(DISTINCT json_type(vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt1.c2 THEN x'' END)=(vt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY ABS(DISTINCT json_type(vt1.c0)) ASC);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE t0.c0  WHEN vt1.c2 THEN x'' END)=(vt1.c2 COLLATE BINARY))) ORDER BY ABS(DISTINCT json_type(vt1.c0)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c1  WHEN '' THEN vt1.c2 WHEN vt1.c1 THEN 'start of day' WHEN '' THEN vt1.c0 WHEN NULL THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN -861401749 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END  WHEN '' THEN (vt1.c2 IN ()) END) ORDER BY (~ (vt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c1  WHEN '' THEN vt1.c2 WHEN vt1.c1 THEN 'start of day' WHEN '' THEN vt1.c0 WHEN NULL THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN -861401749 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END  WHEN '' THEN (vt1.c2 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c1  WHEN '' THEN vt1.c2 WHEN vt1.c1 THEN 'start of day' WHEN '' THEN vt1.c0 WHEN NULL THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN -861401749 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END  WHEN '' THEN (vt1.c2 IN ()) END) ORDER BY (~ (vt1.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c1  WHEN '' THEN vt1.c2 WHEN vt1.c1 THEN 'start of day' WHEN '' THEN vt1.c0 WHEN NULL THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN -861401749 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END  WHEN '' THEN (vt1.c2 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE CASE vt1.c1  WHEN '' THEN vt1.c2 WHEN vt1.c1 THEN 'start of day' WHEN '' THEN vt1.c0 WHEN NULL THEN vt1.c2 WHEN vt1.c0 THEN vt1.c2 WHEN -861401749 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 END  WHEN '' THEN (vt1.c2 IN ()) END) ORDER BY (~ (vt1.c2)) COLLATE RTRIM ASC;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY ((x'') NOT BETWEEN ('xRpK') AND (x'9511'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((x'') NOT BETWEEN ('xRpK') AND (x'9511'))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY ((x'') NOT BETWEEN ('xRpK') AND (x'9511'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((x'') NOT BETWEEN ('xRpK') AND (x'9511'))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY ((x'') NOT BETWEEN ('xRpK') AND (x'9511'))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (vt1.c2) ORDER BY ((((vt0.c2) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((((vt0.c2) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (vt1.c2) ORDER BY ((((vt0.c2) NOT NULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((((vt0.c2) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE (vt1.c2) ORDER BY ((((vt0.c2) NOT NULL)) ISNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0, t0.c1, t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1))), CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))<=((((t0.c0) IS TRUE), 0.3630435267781341, CAST(t0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c1, t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1))), CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))<=((((t0.c0) IS TRUE), 0.3630435267781341, CAST(t0.c2 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0, t0.c1, t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1))), CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))<=((((t0.c0) IS TRUE), 0.3630435267781341, CAST(t0.c2 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0, t0.c1, t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1))), CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))<=((((t0.c0) IS TRUE), 0.3630435267781341, CAST(t0.c2 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c0, t0.c1, t0.c1, t0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c2, t0.c2, t0.c1)) AND ((t0.c0, t0.c0, t0.c0, t0.c0, t0.c1))), CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c1))))<=((((t0.c0) IS TRUE), 0.3630435267781341, CAST(t0.c2 AS TEXT)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0)>(t0.c2)) ELSE t0.c1 END) ORDER BY '-1001031638';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0)>(t0.c2)) ELSE t0.c1 END) IS TRUE)  as count FROM t0, vt1 ORDER BY '-1001031638');
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0)>(t0.c2)) ELSE t0.c1 END) ORDER BY '-1001031638';
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0)>(t0.c2)) ELSE t0.c1 END) IS TRUE)  as count FROM t0, vt1 ORDER BY '-1001031638');
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE WHEN (vt1.c1 IN ()) THEN ((vt1.c0)>(t0.c2)) ELSE t0.c1 END) ORDER BY '-1001031638';
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED INNER JOIN t0 ON ((rt1.c1 COLLATE NOCASE)>=(((t0.c2)/(NULL)))) WHERE (json(NULL)) ORDER BY CASE WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN x'' THEN (NOT (NULL)) WHEN HEX(DISTINCT vt1.c0) THEN t0.c2 END ASC, t0.c0 DESC  NULLS FIRST, LIKE(rt1.c2, (5.59836329E8 IN (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json(NULL)) IS TRUE)  as count FROM rt1, vt1 INNER JOIN t0 ON ((rt1.c1 COLLATE NOCASE)>=(((t0.c2)/(NULL)))) ORDER BY CASE WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN x'' THEN (NOT (NULL)) WHEN HEX(DISTINCT vt1.c0) THEN t0.c2 END ASC, t0.c0 DESC  NULLS FIRST, LIKE(rt1.c2, (5.59836329E8 IN (t0.c2))));
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED INNER JOIN t0 ON ((rt1.c1 COLLATE NOCASE)>=(((t0.c2)/(NULL)))) WHERE (json(NULL)) ORDER BY CASE WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN x'' THEN (NOT (NULL)) WHEN HEX(DISTINCT vt1.c0) THEN t0.c2 END ASC, t0.c0 DESC  NULLS FIRST, LIKE(rt1.c2, (5.59836329E8 IN (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((json(NULL)) IS TRUE)  as count FROM rt1, vt1 INNER JOIN t0 ON ((rt1.c1 COLLATE NOCASE)>=(((t0.c2)/(NULL)))) ORDER BY CASE WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN x'' THEN (NOT (NULL)) WHEN HEX(DISTINCT vt1.c0) THEN t0.c2 END ASC, t0.c0 DESC  NULLS FIRST, LIKE(rt1.c2, (5.59836329E8 IN (t0.c2))));
SELECT ALL COUNT(*) FROM rt1, vt1 NOT INDEXED INNER JOIN t0 ON ((rt1.c1 COLLATE NOCASE)>=(((t0.c2)/(NULL)))) WHERE (json(NULL)) ORDER BY CASE WHEN t0.c2 THEN t0.c1 COLLATE NOCASE WHEN x'' THEN (NOT (NULL)) WHEN HEX(DISTINCT vt1.c0) THEN t0.c2 END ASC, t0.c0 DESC  NULLS FIRST, LIKE(rt1.c2, (5.59836329E8 IN (t0.c2)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((('')<>(vt0.c0)))AND((rt1.c2 IN ()))))OR((+ (rt1.c2))))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('')!=(vt0.c0)))AND((rt1.c2 IN ()))))OR((+ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((('')<>(vt0.c0)))AND((rt1.c2 IN ()))))OR((+ (rt1.c2))))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((('')!=(vt0.c0)))AND((rt1.c2 IN ()))))OR((+ (rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((('')<>(vt0.c0)))AND((rt1.c2 IN ()))))OR((+ (rt1.c2))))) ORDER BY ((rt1.c0 COLLATE NOCASE) BETWEEN (((vt0.c0) IS TRUE)) AND (NULL))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE ((((- ('1495493083'))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(vt0.c2 AS TEXT)))) ORDER BY (((NULL, vt1.c2, vt0.c1)) BETWEEN ((((((((((t0.c1)OR(rt1.c0)))AND(vt0.c2)))OR('3認QⴝLO?''r')))AND(0X7b1484e0)), ((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c2)))AND(t0.c2)))OR(NULL)), vt1.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE BINARY, vt0.c2 COLLATE BINARY, ((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- ('1495493083'))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY (((NULL, vt1.c2, vt0.c1)) BETWEEN ((((((((((t0.c1)OR(rt1.c0)))AND(vt0.c2)))OR('3認QⴝLO?''r')))AND(0x7b1484e0)), ((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c2)))AND(t0.c2)))OR(NULL)), vt1.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE BINARY, vt0.c2 COLLATE BINARY, ((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt1.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE ((((- ('1495493083'))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(vt0.c2 AS TEXT)))) ORDER BY (((NULL, vt1.c2, vt0.c1)) BETWEEN ((((((((((t0.c1)OR(rt1.c0)))AND(vt0.c2)))OR('3認QⴝLO?''r')))AND(0X7b1484e0)), ((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c2)))AND(t0.c2)))OR(NULL)), vt1.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE BINARY, vt0.c2 COLLATE BINARY, ((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- ('1495493083'))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(vt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY (((NULL, vt1.c2, vt0.c1)) BETWEEN ((((((((((t0.c1)OR(rt1.c0)))AND(vt0.c2)))OR('3認QⴝLO?''r')))AND(0x7b1484e0)), ((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c2)))AND(t0.c2)))OR(NULL)), vt1.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE BINARY, vt0.c2 COLLATE BINARY, ((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt1.c1))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE ((((- ('1495493083'))) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (CAST(vt0.c2 AS TEXT)))) ORDER BY (((NULL, vt1.c2, vt0.c1)) BETWEEN ((((((((((t0.c1)OR(rt1.c0)))AND(vt0.c2)))OR('3認QⴝLO?''r')))AND(0X7b1484e0)), ((((((((rt1.c2)OR(rt1.c0)))AND(vt0.c2)))AND(t0.c2)))OR(NULL)), vt1.c0 COLLATE NOCASE)) AND ((t0.c0 COLLATE BINARY, vt0.c2 COLLATE BINARY, ((vt1.c2) NOT BETWEEN (vt0.c2) AND (rt1.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT * FROM vt1, vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt1.c2)))<<((NOT (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt1.c2)))<<((NOT (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT * FROM vt1, vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt1.c2)))<<((NOT (vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt1.c2)))<<((NOT (vt1.c2))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT * FROM vt1, vt0, rt1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c2) AND (rt1.c2)))<<((NOT (vt1.c2)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON (NOT ((vt0.c2 IN ()))) WHERE (((CAST(vt1.c1 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON (NOT ((vt0.c2 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON (NOT ((vt0.c2 IN ()))) WHERE (((CAST(vt1.c1 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON (NOT ((vt0.c2 IN ()))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (t0.c1)) AS TEXT) RIGHT OUTER JOIN vt0 ON (NOT ((vt0.c2 IN ()))) WHERE (((CAST(vt1.c1 AS BLOB)) IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) ORDER BY ((ABS(vt1.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(vt1.c1)) IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) ORDER BY ((ABS(vt1.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(vt1.c1)) IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE ((+ (vt0.c0 COLLATE BINARY))) ORDER BY ((ABS(vt1.c1)) IS FALSE);
SELECT ALL * FROM t0, vt0 WHERE (((('1455263662')*(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1455263662')*(t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((('1455263662')*(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((('1455263662')*(t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((('1455263662')*(t0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(0.038485514449788094)))AND(vt0.c1)))AND((vt1.c0 IN ()))))OR(IFNULL(0.9652690490761123, vt0.c0)))) ORDER BY 0.14195842529380298 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(0.038485514449788094)))AND(vt0.c1)))AND((vt1.c0 IN ()))))OR(IFNULL(0.9652690490761123, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.14195842529380298 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(0.038485514449788094)))AND(vt0.c1)))AND((vt1.c0 IN ()))))OR(IFNULL(0.9652690490761123, vt0.c0)))) ORDER BY 0.14195842529380298 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(0.038485514449788094)))AND(vt0.c1)))AND((vt1.c0 IN ()))))OR(IFNULL(0.9652690490761123, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.14195842529380298 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((vt0.c1)AND(0.038485514449788094)))AND(vt0.c1)))AND((vt1.c0 IN ()))))OR(IFNULL(0.9652690490761123, vt0.c0)))) ORDER BY 0.14195842529380298 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((0.5825643499028419))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((0.5825643499028419)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((0.5825643499028419))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((0.5825643499028419)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c1) IS TRUE))) AND ((0.5825643499028419))));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((- (CAST(vt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((- (CAST(vt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((- (CAST(vt1.c2 AS BLOB))));
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c2) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT))) WHERE (CAST((vt0.c2 IN ()) AS INTEGER)) ORDER BY (+ ((+ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c2) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT))) ORDER BY (+ ((+ (vt0.c2)))));
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c2) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT))) WHERE (CAST((vt0.c2 IN ()) AS INTEGER)) ORDER BY (+ ((+ (vt0.c2))));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c2) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT))) ORDER BY (+ ((+ (vt0.c2)))));
SELECT ALL * FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((vt1.c2) BETWEEN (((vt0.c0) IS TRUE)) AND (CAST(vt0.c0 AS TEXT))) WHERE (CAST((vt0.c2 IN ()) AS INTEGER)) ORDER BY (+ ((+ (vt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 END IN (((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt0.c0 END IN (((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 END IN (((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN vt0.c0 END IN (((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 END IN (((vt0.c1)AND(vt0.c1)))));
SELECT ALL * FROM rt1, vt1, t0, vt0 WHERE ((((vt1.c0, NULL, rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()), t0.c0, ((t0.c1) IS FALSE))) AND ((SQLITE_VERSION(), ((rt1.c1)&(t0.c1)), ((rt1.c2)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, NULL, rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()), t0.c0, ((t0.c1) IS FALSE))) AND ((SQLITE_VERSION(), ((rt1.c1)&(t0.c1)), ((rt1.c2)/(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL * FROM rt1, vt1, t0, vt0 WHERE ((((vt1.c0, NULL, rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()), t0.c0, ((t0.c1) IS FALSE))) AND ((SQLITE_VERSION(), ((rt1.c1)&(t0.c1)), ((rt1.c2)/(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, NULL, rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()), t0.c0, ((t0.c1) IS FALSE))) AND ((SQLITE_VERSION(), ((rt1.c1)&(t0.c1)), ((rt1.c2)/(rt1.c2)))))) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL * FROM rt1, vt1, t0, vt0 WHERE ((((vt1.c0, NULL, rt1.c1)) NOT BETWEEN (((rt1.c1 IN ()), t0.c0, ((t0.c1) IS FALSE))) AND ((SQLITE_VERSION(), ((rt1.c1)&(t0.c1)), ((rt1.c2)/(rt1.c2))))));
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED WHERE (CAST(((t0.c2)<>(vt1.c1)) AS REAL)) ORDER BY LOWER(DISTINCT ((vt1.c1) IS FALSE)) ASC, ((CAST(vt1.c1 AS REAL))<=(((vt1.c2)<<(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)<>(vt1.c1)) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY LOWER(DISTINCT ((vt1.c1) IS FALSE)) ASC, ((CAST(vt1.c1 AS REAL))<=(((vt1.c2)<<(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED WHERE (CAST(((t0.c2)<>(vt1.c1)) AS REAL)) ORDER BY LOWER(DISTINCT ((vt1.c1) IS FALSE)) ASC, ((CAST(vt1.c1 AS REAL))<=(((vt1.c2)<<(t0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)<>(vt1.c1)) AS REAL)) IS TRUE)  as count FROM t0, vt1 ORDER BY LOWER(DISTINCT ((vt1.c1) IS FALSE)) ASC, ((CAST(vt1.c1 AS REAL))<=(((vt1.c2)<<(t0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 NOT INDEXED WHERE (CAST(((t0.c2)<>(vt1.c1)) AS REAL)) ORDER BY LOWER(DISTINCT ((vt1.c1) IS FALSE)) ASC, ((CAST(vt1.c1 AS REAL))<=(((vt1.c2)<<(t0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c2))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE BINARY)GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c2))))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1 COLLATE BINARY)GLOB(((((vt1.c0)OR(vt1.c0)))AND(vt1.c2)))));
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c2) NOT BETWEEN (((1.584634598E9)IS(NULL))) AND ((((t0.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((t0.c2, t0.c1, vt0.c2)) AND ((rt1.c1, rt1.c2, vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1, vt1, vt0, t0 ORDER BY ((rt1.c2) NOT BETWEEN (((1.584634598E9)IS(NULL))) AND ((((t0.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((t0.c2, t0.c1, vt0.c2)) AND ((rt1.c1, rt1.c2, vt1.c2))))));
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c2) NOT BETWEEN (((1.584634598E9)IS(NULL))) AND ((((t0.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((t0.c2, t0.c1, vt0.c2)) AND ((rt1.c1, rt1.c2, vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt1, vt1, vt0, t0 ORDER BY ((rt1.c2) NOT BETWEEN (((1.584634598E9)IS(NULL))) AND ((((t0.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((t0.c2, t0.c1, vt0.c2)) AND ((rt1.c1, rt1.c2, vt1.c2))))));
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt1.c0 COLLATE BINARY AS BLOB)) ORDER BY ((rt1.c2) NOT BETWEEN (((1.584634598E9)IS(NULL))) AND ((((t0.c0, vt1.c1, rt1.c1)) NOT BETWEEN ((t0.c2, t0.c1, vt0.c2)) AND ((rt1.c1, rt1.c2, vt1.c2)))));
SELECT COUNT(*) FROM rt1, vt1 INNER JOIN vt0 ON (vt1.c2 IN ()) COLLATE BINARY WHERE (CAST((~ (vt1.c1)) AS REAL)) ORDER BY CAST(json_remove(vt0.c2, rt1.c1, rt1.c2, rt1.c1) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, vt1 INNER JOIN vt0 ON (vt1.c2 IN ()) COLLATE BINARY ORDER BY CAST(json_remove(vt0.c2, rt1.c1, rt1.c2, rt1.c1) AS REAL));
SELECT COUNT(*) FROM rt1, vt1 INNER JOIN vt0 ON (vt1.c2 IN ()) COLLATE BINARY WHERE (CAST((~ (vt1.c1)) AS REAL)) ORDER BY CAST(json_remove(vt0.c2, rt1.c1, rt1.c2, rt1.c1) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, vt1 INNER JOIN vt0 ON (vt1.c2 IN ()) COLLATE BINARY ORDER BY CAST(json_remove(vt0.c2, rt1.c1, rt1.c2, rt1.c1) AS REAL));
SELECT COUNT(*) FROM rt1, vt1 INNER JOIN vt0 ON (vt1.c2 IN ()) COLLATE BINARY WHERE (CAST((~ (vt1.c1)) AS REAL)) ORDER BY CAST(json_remove(vt0.c2, rt1.c1, rt1.c2, rt1.c1) AS REAL);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT (((rt1.c1)!=(vt0.c1)))) RIGHT OUTER JOIN vt0 ON IFNULL(CASE WHEN t0.c2 THEN rt1.c1 END, (('-823420487') IS FALSE)) WHERE (CAST((NOT (vt0.c0)) AS REAL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (NOT (((rt1.c1)<>(vt0.c1)))) RIGHT OUTER JOIN vt0 ON IFNULL(CASE WHEN t0.c2 THEN rt1.c1 END, (('-823420487') IS FALSE)) ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM t0 CROSS JOIN rt1 ON (NOT (((rt1.c1)!=(vt0.c1)))) RIGHT OUTER JOIN vt0 ON IFNULL(CASE WHEN t0.c2 THEN rt1.c1 END, (('-823420487') IS FALSE)) WHERE (CAST((NOT (vt0.c0)) AS REAL)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 CROSS JOIN rt1 ON (NOT (((rt1.c1)<>(vt0.c1)))) RIGHT OUTER JOIN vt0 ON IFNULL(CASE WHEN t0.c2 THEN rt1.c1 END, (('-823420487') IS FALSE)) ORDER BY NULL  NULLS FIRST);
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((((t0.c2)GLOB(NULL)))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((((t0.c2)GLOB(NULL)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c0)) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((((t0.c2)GLOB(NULL)))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((((t0.c2)GLOB(NULL)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c0)) ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((((t0.c2)GLOB(NULL)))))) ORDER BY ((((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t0.c0)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (((vt1.c2)IS(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c2)IS(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (((vt1.c2)IS(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c2)IS(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 NOT INDEXED WHERE (((vt1.c2)IS(t0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM t0, rt1 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (CAST(t0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM vt1, vt0, t0 WHERE (((((vt0.c0)IS NOT(vt0.c2))) NOTNULL)) ORDER BY CAST(((((t0.c2)AND(vt1.c2)))AND(t0.c2)) AS BLOB), vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((t0.c2)AND(vt1.c2)))AND(t0.c2)) AS BLOB), vt1.c0 DESC);
SELECT * FROM vt1, vt0, t0 WHERE (((((vt0.c0)IS NOT(vt0.c2))) NOTNULL)) ORDER BY CAST(((((t0.c2)AND(vt1.c2)))AND(t0.c2)) AS BLOB), vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS NOT(vt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((t0.c2)AND(vt1.c2)))AND(t0.c2)) AS BLOB), vt1.c0 DESC);
SELECT * FROM vt1, vt0, t0 WHERE (((((vt0.c0)IS NOT(vt0.c2))) NOTNULL)) ORDER BY CAST(((((t0.c2)AND(vt1.c2)))AND(t0.c2)) AS BLOB), vt1.c0 DESC;
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (UNLIKELY(((t0.c1)>=(t0.c2)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c2)AND(rt1.c1)))OR('1359109766')))) AND (((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c1)>=(t0.c2)))) IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c2)AND(rt1.c1)))OR('1359109766')))) AND (((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (UNLIKELY(((t0.c1)>=(t0.c2)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c2)AND(rt1.c1)))OR('1359109766')))) AND (((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t0.c1)>=(t0.c2)))) IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c2)AND(rt1.c1)))OR('1359109766')))) AND (((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (UNLIKELY(((t0.c1)>=(t0.c2)))) ORDER BY (((vt0.c1)) BETWEEN ((((((vt0.c2)AND(rt1.c1)))OR('1359109766')))) AND (((NOT (vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE TRIM(vt0.c0)  WHEN ((rt1.c1)/(0.4270793742640846)) THEN (vt0.c1 IN ()) ELSE ((vt0.c2)>>(rt1.c1)) END) ORDER BY ((CAST(vt0.c1 AS NUMERIC))+(((((((((vt0.c1)AND(rt1.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0)  WHEN ((rt1.c1)/(0.4270793742640846)) THEN (vt0.c1 IN ()) ELSE ((vt0.c2)>>(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))+(((((((((vt0.c1)AND(rt1.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE TRIM(vt0.c0)  WHEN ((rt1.c1)/(0.4270793742640846)) THEN (vt0.c1 IN ()) ELSE ((vt0.c2)>>(rt1.c1)) END) ORDER BY ((CAST(vt0.c1 AS NUMERIC))+(((((((((vt0.c1)AND(rt1.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(vt0.c0)  WHEN ((rt1.c1)/(0.4270793742640846)) THEN (vt0.c1 IN ()) ELSE ((vt0.c2)>>(rt1.c1)) END) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC))+(((((((((vt0.c1)AND(rt1.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(rt1.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE TRIM(vt0.c0)  WHEN ((rt1.c1)/(0.4270793742640846)) THEN (vt0.c1 IN ()) ELSE ((vt0.c2)>>(rt1.c1)) END) ORDER BY ((CAST(vt0.c1 AS NUMERIC))+(((((((((vt0.c1)AND(rt1.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(rt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((x'd59b') NOTNULL), (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))), ((vt0.c0)&(vt0.c0))))==((CAST(vt0.c1 AS BLOB), (~ (vt0.c2)), (((vt0.c2))<=((vt0.c1))))))) ORDER BY NULLIF((vt0.c0 IN ()), ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'd59b') NOTNULL), (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))), ((vt0.c0)&(vt0.c0))))==((CAST(vt0.c1 AS BLOB), (~ (vt0.c2)), (((vt0.c2))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((vt0.c0 IN ()), ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((x'd59b') NOTNULL), (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))), ((vt0.c0)&(vt0.c0))))==((CAST(vt0.c1 AS BLOB), (~ (vt0.c2)), (((vt0.c2))<=((vt0.c1))))))) ORDER BY NULLIF((vt0.c0 IN ()), ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'd59b') NOTNULL), (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))), ((vt0.c0)&(vt0.c0))))==((CAST(vt0.c1 AS BLOB), (~ (vt0.c2)), (((vt0.c2))<=((vt0.c1))))))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((vt0.c0 IN ()), ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((x'd59b') NOTNULL), (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c2, vt0.c0, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))), ((vt0.c0)&(vt0.c0))))==((CAST(vt0.c1 AS BLOB), (~ (vt0.c2)), (((vt0.c2))<=((vt0.c1))))))) ORDER BY NULLIF((vt0.c0 IN ()), ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c0);
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((~ (CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((~ (CAST(t0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((~ (CAST(t0.c2 AS BLOB))));
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((vt0.c0) NOTNULL) WHERE ((((((t0.c1))>((t0.c1)))) ISNULL)) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS TEXT) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(((((vt1.c2)OR(vt1.c2)))OR('-1184123040'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>((t0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((vt0.c0) NOTNULL) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS TEXT) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(((((vt1.c2)OR(vt1.c2)))OR('-1184123040'))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((vt0.c0) NOTNULL) WHERE ((((((t0.c1))>((t0.c1)))) ISNULL)) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS TEXT) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(((((vt1.c2)OR(vt1.c2)))OR('-1184123040'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))>((t0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((vt0.c0) NOTNULL) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS TEXT) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(((((vt1.c2)OR(vt1.c2)))OR('-1184123040'))))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 INNER JOIN t0 ON ((vt0.c0) NOTNULL) WHERE ((((((t0.c1))>((t0.c1)))) ISNULL)) ORDER BY CAST(CAST(vt0.c1 AS REAL) AS TEXT) DESC  NULLS LAST, ((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c0)))>>(((((vt1.c2)OR(vt1.c2)))OR('-1184123040'))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 INNER JOIN vt1 ON (((rt1.c1 IN (vt1.c1)))AND((~ (rt1.c1)))) WHERE (' zfQ.n)m' COLLATE BINARY) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC) DESC, ((((((((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND(((((rt1.c2)OR(vt1.c0)))OR(t0.c1)))))OR(CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c2 END)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(((t0.c1) BETWEEN (rt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((' zfQ.n)m' COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt1 ON (((rt1.c1 IN (vt1.c1)))AND((~ (rt1.c1)))) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC) DESC, ((((((((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND(((((rt1.c2)OR(vt1.c0)))OR(t0.c1)))))OR(CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c2 END)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(((t0.c1) BETWEEN (rt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM rt1, t0 INNER JOIN vt1 ON (((rt1.c1 IN (vt1.c1)))AND((~ (rt1.c1)))) WHERE (' zfQ.n)m' COLLATE BINARY) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC) DESC, ((((((((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND(((((rt1.c2)OR(vt1.c0)))OR(t0.c1)))))OR(CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c2 END)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(((t0.c1) BETWEEN (rt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ((' zfQ.n)m' COLLATE BINARY) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt1 ON (((rt1.c1 IN (vt1.c1)))AND((~ (rt1.c1)))) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC) DESC, ((((((((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND(((((rt1.c2)OR(vt1.c0)))OR(t0.c1)))))OR(CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c2 END)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(((t0.c1) BETWEEN (rt1.c1) AND (vt1.c1)))));
SELECT ALL * FROM rt1, t0 INNER JOIN vt1 ON (((rt1.c1 IN (vt1.c1)))AND((~ (rt1.c1)))) WHERE (' zfQ.n)m' COLLATE BINARY) ORDER BY CAST((+ (vt1.c0)) AS NUMERIC) DESC, ((((((((((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))AND(((((rt1.c2)OR(vt1.c0)))OR(t0.c1)))))OR(CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c2 END)))AND((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))))))OR(((t0.c1) BETWEEN (rt1.c1) AND (vt1.c1))));
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((t0.c2)OR(t0.c2)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.23535626703821266))))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c0, x''))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2))))) ORDER BY LIKELIHOOD(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), 0.46312924457635585), ((vt1.c1)>>(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)OR(t0.c2)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.23535626703821266))))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c0, x''))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY LIKELIHOOD(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), 0.46312924457635585), ((vt1.c1)>>(t0.c2)) COLLATE RTRIM);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((t0.c2)OR(t0.c2)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.23535626703821266))))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c0, x''))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2))))) ORDER BY LIKELIHOOD(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), 0.46312924457635585), ((vt1.c1)>>(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c2)OR(t0.c2)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.23535626703821266))))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c0, x''))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY LIKELIHOOD(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), 0.46312924457635585), ((vt1.c1)>>(t0.c2)) COLLATE RTRIM);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((t0.c2)OR(t0.c2)))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.23535626703821266))))AND(COALESCE(DISTINCT vt0.c1, vt0.c1, vt1.c0, x''))))AND(((t0.c0) NOT BETWEEN (t0.c2) AND (vt1.c2))))) ORDER BY LIKELIHOOD(((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)), 0.46312924457635585), ((vt1.c1)>>(t0.c2)) COLLATE RTRIM;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, '942134833', t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c0, NULL, t0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, '942134833', t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c0, NULL, t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, '942134833', t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c0, NULL, t0.c2))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, '942134833', t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c0, NULL, t0.c2))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2, t0.c0, t0.c2)) BETWEEN ((t0.c1, t0.c1, '942134833', t0.c2, t0.c1)) AND ((t0.c0, t0.c2, t0.c0, NULL, t0.c2))) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((((rt1.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((t0.c1, t0.c0, vt1.c0))), CAST(t0.c0 AS INTEGER), CAST(vt1.c0 AS REAL))) AND (('1676634722', ((x'') ISNULL), ((rt1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((((rt1.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((t0.c1, t0.c0, vt1.c0))), CAST(t0.c0 AS INTEGER), CAST(vt1.c0 AS REAL))) AND (('1676634722', ((x'') ISNULL), ((rt1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((((rt1.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((t0.c1, t0.c0, vt1.c0))), CAST(t0.c0 AS INTEGER), CAST(vt1.c0 AS REAL))) AND (('1676634722', ((x'') ISNULL), ((rt1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((((rt1.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((t0.c1, t0.c0, vt1.c0))), CAST(t0.c0 AS INTEGER), CAST(vt1.c0 AS REAL))) AND (('1676634722', ((x'') ISNULL), ((rt1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2)))))) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN (((((rt1.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c2, vt0.c0, vt1.c0)) AND ((t0.c1, t0.c0, vt1.c0))), CAST(t0.c0 AS INTEGER), CAST(vt1.c0 AS REAL))) AND (('1676634722', ((x'') ISNULL), ((rt1.c1) NOT BETWEEN (vt0.c2) AND (vt0.c2))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (0.16951603672267257) AND (vt1.c2)))LIKE(((vt1.c1)<>(t0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((+ (t0.c0))))) ASC, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (0.16951603672267257) AND (vt1.c2)))LIKE(((vt1.c1)<>(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((+ (t0.c0))))) ASC, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (0.16951603672267257) AND (vt1.c2)))LIKE(((vt1.c1)<>(t0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((+ (t0.c0))))) ASC, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) BETWEEN (0.16951603672267257) AND (vt1.c2)))LIKE(((vt1.c1)<>(t0.c1))))) IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((+ (t0.c0))))) ASC, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((((vt1.c1) BETWEEN (0.16951603672267257) AND (vt1.c2)))LIKE(((vt1.c1)<>(t0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS REAL))) AND (((+ (t0.c0))))) ASC, CAST((t0.c0 IN ()) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((((((((vt1.c2)OR(vt1.c1)))AND(vt1.c2)))OR(vt1.c2)))AND(vt1.c0)), ((vt1.c1) NOT BETWEEN (vt1.c2) AND (vt1.c2))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) CROSS JOIN t0 ON (~ ((((vt0.c0))>=((vt0.c2))))) WHERE (-476365094);
SELECT SUM(count) FROM (SELECT ((-476365094) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) CROSS JOIN t0 ON (~ ((((vt0.c0))>=((vt0.c2))))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) CROSS JOIN t0 ON (~ ((((vt0.c0))>=((vt0.c2))))) WHERE (-476365094);
SELECT SUM(count) FROM (SELECT ((-476365094) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) CROSS JOIN t0 ON (~ ((((vt0.c0))>=((vt0.c2))))));
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN rt1 ON CAST(rt1.c2 COLLATE BINARY AS BLOB) CROSS JOIN t0 ON (~ ((((vt0.c0))>=((vt0.c2))))) WHERE (-476365094);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (ABS(rt1.c0));
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0)) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (ABS(rt1.c0));
SELECT SUM(count) FROM (SELECT ((ABS(rt1.c0)) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (ABS(rt1.c0));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c1)+(vt1.c2))) AND (STRFTIME(vt1.c0, vt1.c2, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))) IS TRUE)  NULLS LAST, ((vt1.c1)>=(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, CAST(((vt1.c2)-(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c1)+(vt1.c2))) AND (STRFTIME(vt1.c0, vt1.c2, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))) IS TRUE)  NULLS LAST, ((vt1.c1)>=(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, CAST(((vt1.c2)-(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c1)+(vt1.c2))) AND (STRFTIME(vt1.c0, vt1.c2, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))) IS TRUE)  NULLS LAST, ((vt1.c1)>=(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, CAST(((vt1.c2)-(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c1)+(vt1.c2))) AND (STRFTIME(vt1.c0, vt1.c2, vt0.c2, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))) IS TRUE)  NULLS LAST, ((vt1.c1)>=(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, CAST(((vt1.c2)-(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (((vt1.c1)+(vt1.c2))) AND (STRFTIME(vt1.c0, vt1.c2, vt0.c2, vt0.c0, vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c1))) IS TRUE)  NULLS LAST, ((vt1.c1)>=(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC  NULLS FIRST, CAST(((vt1.c2)-(vt1.c1)) AS INTEGER) ASC, CAST(((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (((vt1.c1)<(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c1)>(x'930e'))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)<(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY ((((t0.c1)>(x'930e'))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (((vt1.c1)<(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c1)>(x'930e'))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)<(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY ((((t0.c1)>(x'930e'))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (((vt1.c1)<(rt1.c0)) COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((t0.c1)>(x'930e'))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((+ ((vt1.c0 IN (rt1.c0, t0.c1))))) ORDER BY CAST(((rt1.c2)>(vt1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN (rt1.c0, t0.c1))))) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY CAST(((rt1.c2)>(vt1.c1)) AS REAL)  NULLS LAST);
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((+ ((vt1.c0 IN (rt1.c0, t0.c1))))) ORDER BY CAST(((rt1.c2)>(vt1.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt1.c0 IN (rt1.c0, t0.c1))))) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY CAST(((rt1.c2)>(vt1.c1)) AS REAL)  NULLS LAST);
SELECT * FROM t0, rt1, vt0, vt1 WHERE ((+ ((vt1.c0 IN (rt1.c0, t0.c1))))) ORDER BY CAST(((rt1.c2)>(vt1.c1)) AS REAL)  NULLS LAST;
SELECT * FROM vt1, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM rt1 WHERE (((((((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)AND((((('~')OR(rt1.c1)))OR(rt1.c2)))))OR(rt1.c0)))OR(CAST(rt1.c0 AS INTEGER))))OR(rt1.c0))) ORDER BY (((CHANGES()))=((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)AND((((('~')OR(rt1.c1)))OR(rt1.c2)))))OR(rt1.c0)))OR(CAST(rt1.c0 AS INTEGER))))OR(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY (((CHANGES()))==((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) DESC);
SELECT ALL * FROM rt1 WHERE (((((((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)AND((((('~')OR(rt1.c1)))OR(rt1.c2)))))OR(rt1.c0)))OR(CAST(rt1.c0 AS INTEGER))))OR(rt1.c0))) ORDER BY (((CHANGES()))=((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)AND((((('~')OR(rt1.c1)))OR(rt1.c2)))))OR(rt1.c0)))OR(CAST(rt1.c0 AS INTEGER))))OR(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY (((CHANGES()))==((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) DESC);
SELECT ALL * FROM rt1 WHERE (((((((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END)AND((((('~')OR(rt1.c1)))OR(rt1.c2)))))OR(rt1.c0)))OR(CAST(rt1.c0 AS INTEGER))))OR(rt1.c0))) ORDER BY (((CHANGES()))=((((((rt1.c2)AND(rt1.c2)))OR(rt1.c2))))) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM WHERE ((((t0.c1)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND (((t0.c0 IN (t0.c0)))))) ORDER BY TOTAL_CHANGES() COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND (((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ORDER BY TOTAL_CHANGES() COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM WHERE ((((t0.c1)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND (((t0.c0 IN (t0.c0)))))) ORDER BY TOTAL_CHANGES() COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND (((t0.c0 IN (t0.c0)))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM ORDER BY TOTAL_CHANGES() COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0 CROSS JOIN vt0 ON t0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM WHERE ((((t0.c1)) NOT BETWEEN ((((NULL) NOT BETWEEN (t0.c1) AND (t0.c2)))) AND (((t0.c0 IN (t0.c0)))))) ORDER BY TOTAL_CHANGES() COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((~ (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((~ (t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((~ (t0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (rt1.c0))) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((- (rt1.c0)));
SELECT COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (DATE(((vt0.c2) BETWEEN (t0.c2) AND (t0.c2)), TYPEOF(rt1.c0), vt0.c2 COLLATE BINARY)) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS REAL)  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c2) BETWEEN (t0.c2) AND (t0.c2)), TYPEOF(rt1.c0), vt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS REAL)  NULLS LAST, rt1.c1);
SELECT COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (DATE(((vt0.c2) BETWEEN (t0.c2) AND (t0.c2)), TYPEOF(rt1.c0), vt0.c2 COLLATE BINARY)) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS REAL)  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ALL ((DATE(((vt0.c2) BETWEEN (t0.c2) AND (t0.c2)), TYPEOF(rt1.c0), vt0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY CAST(CAST(rt1.c2 AS REAL) AS REAL)  NULLS LAST, rt1.c1);
SELECT COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (DATE(((vt0.c2) BETWEEN (t0.c2) AND (t0.c2)), TYPEOF(rt1.c0), vt0.c2 COLLATE BINARY)) ORDER BY CAST(CAST(rt1.c2 AS REAL) AS REAL)  NULLS LAST, rt1.c1;
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))>((t0.c0 IN ()))) WHERE (((((((t0.c2)>=(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))))OR((t0.c2 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)>=(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))))OR((t0.c2 IN (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))>((t0.c0 IN ()))));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))>((t0.c0 IN ()))) WHERE (((((((t0.c2)>=(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))))OR((t0.c2 IN (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)>=(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))))OR((t0.c2 IN (vt1.c0))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))>((t0.c0 IN ()))));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON ((CAST(t0.c2 AS REAL))>((t0.c0 IN ()))) WHERE (((((((t0.c2)>=(vt1.c0)))AND((((vt1.c0)) NOT BETWEEN (('')) AND ((vt1.c0))))))OR((t0.c2 IN (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS TRUE)) ORDER BY (~ (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c2)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt1.c0)) ASC);
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS TRUE)) ORDER BY (~ (vt1.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt1.c2)) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (vt1.c0)) ASC);
SELECT * FROM vt0, vt1 WHERE (((TYPEOF(vt1.c2)) IS TRUE)) ORDER BY (~ (vt1.c0)) ASC;
SELECT * FROM vt1 WHERE (CAST(0.9996550558380934 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9996550558380934 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(0.9996550558380934 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.9996550558380934 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(0.9996550558380934 AS NUMERIC) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))>>(CASE WHEN vt0.c1 THEN rt1.c1 END))) ORDER BY CASE WHEN (((vt0.c0, rt1.c1, vt0.c0))!=((rt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))>>(CASE WHEN vt0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (((vt0.c0, rt1.c1, vt0.c0))!=((rt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))>>(CASE WHEN vt0.c1 THEN rt1.c1 END))) ORDER BY CASE WHEN (((vt0.c0, rt1.c1, vt0.c0))!=((rt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c1 AS BLOB))>>(CASE WHEN vt0.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (((vt0.c0, rt1.c1, vt0.c0))!=((rt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS BLOB))>>(CASE WHEN vt0.c1 THEN rt1.c1 END))) ORDER BY CASE WHEN (((vt0.c0, rt1.c1, vt0.c0))!=((rt1.c0, vt0.c1, vt0.c0))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON (((((vt1.c2)>=(vt0.c1))))=((((vt1.c1) IS FALSE)))) WHERE (ABS(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON (((((vt1.c2)>=(vt0.c1))))==((((vt1.c1) IS FALSE)))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON (((((vt1.c2)>=(vt0.c1))))=((((vt1.c1) IS FALSE)))) WHERE (ABS(CAST(vt1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN vt1 ON (((((vt1.c2)>=(vt0.c1))))==((((vt1.c1) IS FALSE)))));
SELECT COUNT(*) FROM t0, vt0 LEFT OUTER JOIN vt1 ON (((((vt1.c2)>=(vt0.c1))))=((((vt1.c1) IS FALSE)))) WHERE (ABS(CAST(vt1.c0 AS BLOB)));
SELECT ALL * FROM t0 WHERE (0.8322135334983867);
SELECT SUM(count) FROM (SELECT ALL ((0.8322135334983867) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.8322135334983867);
SELECT SUM(count) FROM (SELECT ALL ((0.8322135334983867) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (0.8322135334983867);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c0, rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (0x6f6535d1) AND (rt1.c0)), CAST(rt1.c0 AS REAL), (rt1.c2 IN ()), SQLITE_COMPILEOPTION_GET(rt1.c1), rt1.c0 COLLATE BINARY)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, LIKE(x'', rt1.c0, 'o'), ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c1)<>(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c0, rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (0X6f6535d1) AND (rt1.c0)), CAST(rt1.c0 AS REAL), (rt1.c2 IN ()), SQLITE_COMPILEOPTION_GET(rt1.c1), rt1.c0 COLLATE BINARY)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, LIKE(x'', rt1.c0, 'o'), ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c1)!=(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c0, rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (0x6f6535d1) AND (rt1.c0)), CAST(rt1.c0 AS REAL), (rt1.c2 IN ()), SQLITE_COMPILEOPTION_GET(rt1.c1), rt1.c0 COLLATE BINARY)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, LIKE(x'', rt1.c0, 'o'), ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c1)<>(rt1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2, rt1.c0, rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (0X6f6535d1) AND (rt1.c0)), CAST(rt1.c0 AS REAL), (rt1.c2 IN ()), SQLITE_COMPILEOPTION_GET(rt1.c1), rt1.c0 COLLATE BINARY)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, LIKE(x'', rt1.c0, 'o'), ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c1)!=(rt1.c2)))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((rt1.c2, rt1.c0, rt1.c2, rt1.c2, rt1.c2)) BETWEEN ((((rt1.c1) NOT BETWEEN (0x6f6535d1) AND (rt1.c0)), CAST(rt1.c0 AS REAL), (rt1.c2 IN ()), SQLITE_COMPILEOPTION_GET(rt1.c1), rt1.c0 COLLATE BINARY)) AND ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END, LIKE(x'', rt1.c0, 'o'), ((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(rt1.c0)))OR(rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c2 END, ((rt1.c1)<>(rt1.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS INTEGER))) ORDER BY x'0580';
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY x'0580');
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS INTEGER))) ORDER BY x'0580';
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(vt0.c1 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY x'0580');
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT CAST(vt0.c1 AS INTEGER))) ORDER BY x'0580';
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)=(-1395505064)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)=(-1395505064))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)=(-1395505064)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY)=(-1395505064))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE BINARY)=(-1395505064)));
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))AND(((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS INTEGER))AND(((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))AND(((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS INTEGER))AND(((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((CAST(rt1.c2 AS INTEGER))AND(((((rt1.c2)AND(rt1.c0)))AND(rt1.c1)))))AND(((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((((vt1.c1)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((vt0.c2)>>(x'7c10'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((vt0.c2)>>(x'7c10')))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((((vt1.c1)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((vt0.c2)>>(x'7c10'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((vt0.c2)>>(x'7c10')))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((((vt1.c1)) BETWEEN ((t0.c2 COLLATE BINARY)) AND ((((vt0.c2)>>(x'7c10'))))));
SELECT ALL * FROM vt0, vt1, rt1 INNER JOIN t0 ON '171205735' WHERE ((((((((vt1.c2, t0.c2, vt0.c2)) BETWEEN ((vt1.c2, rt1.c1, t0.c0)) AND ((t0.c2, rt1.c2, vt0.c2))))OR(UNICODE(vt1.c2))))OR(LOWER(vt1.c2)))) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN ((- (rt1.c1))) AND (vt1.c0 COLLATE NOCASE)), 0.05090535357508352 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2, t0.c2, vt0.c2)) BETWEEN ((vt1.c2, rt1.c1, t0.c0)) AND ((t0.c2, rt1.c2, vt0.c2))))OR(UNICODE(vt1.c2))))OR(LOWER(vt1.c2)))) IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON '171205735' ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN ((- (rt1.c1))) AND (vt1.c0 COLLATE NOCASE)), 0.05090535357508352 DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt1 INNER JOIN t0 ON '171205735' WHERE ((((((((vt1.c2, t0.c2, vt0.c2)) BETWEEN ((vt1.c2, rt1.c1, t0.c0)) AND ((t0.c2, rt1.c2, vt0.c2))))OR(UNICODE(vt1.c2))))OR(LOWER(vt1.c2)))) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN ((- (rt1.c1))) AND (vt1.c0 COLLATE NOCASE)), 0.05090535357508352 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c2, t0.c2, vt0.c2)) BETWEEN ((vt1.c2, rt1.c1, t0.c0)) AND ((t0.c2, rt1.c2, vt0.c2))))OR(UNICODE(vt1.c2))))OR(LOWER(vt1.c2)))) IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON '171205735' ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN ((- (rt1.c1))) AND (vt1.c0 COLLATE NOCASE)), 0.05090535357508352 DESC  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt1 INNER JOIN t0 ON '171205735' WHERE ((((((((vt1.c2, t0.c2, vt0.c2)) BETWEEN ((vt1.c2, rt1.c1, t0.c0)) AND ((t0.c2, rt1.c2, vt0.c2))))OR(UNICODE(vt1.c2))))OR(LOWER(vt1.c2)))) ORDER BY ((CAST(vt1.c1 AS REAL)) BETWEEN ((- (rt1.c1))) AND (vt1.c0 COLLATE NOCASE)), 0.05090535357508352 DESC  NULLS LAST;
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c2 AS TEXT) AS BLOB) WHERE (((((NULL)AND(((rt1.c2)LIKE(0X4ec0d2bb)))))OR(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((rt1.c2)LIKE(0x4ec0d2bb)))))OR(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c2 AS TEXT) AS BLOB));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c2 AS TEXT) AS BLOB) WHERE (((((NULL)AND(((rt1.c2)LIKE(0X4ec0d2bb)))))OR(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(((rt1.c2)LIKE(0x4ec0d2bb)))))OR(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c2 AS TEXT) AS BLOB));
SELECT * FROM rt1 RIGHT OUTER JOIN vt1 ON CAST(CAST(vt1.c2 AS TEXT) AS BLOB) WHERE (((((NULL)AND(((rt1.c2)LIKE(0X4ec0d2bb)))))OR(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT ALL * FROM t0, rt1 WHERE (((((x'')OR(t0.c1)))OR((((t0.c0))>=((t0.c1)))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0)))  WHEN ((t0.c0)*(t0.c1)) THEN ((rt1.c0)AND(t0.c1)) ELSE CAST(t0.c2 AS TEXT) END DESC, (+ (t0.c2 COLLATE NOCASE)), ((((t0.c1) IS TRUE))|((rt1.c2 IN (t0.c1, t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(t0.c1)))OR((((t0.c0))>=((t0.c1)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0)))  WHEN ((t0.c0)*(t0.c1)) THEN ((rt1.c0)AND(t0.c1)) ELSE CAST(t0.c2 AS TEXT) END DESC, (+ (t0.c2 COLLATE NOCASE)), ((((t0.c1) IS TRUE))|((rt1.c2 IN (t0.c1, t0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((((x'')OR(t0.c1)))OR((((t0.c0))>=((t0.c1)))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0)))  WHEN ((t0.c0)*(t0.c1)) THEN ((rt1.c0)AND(t0.c1)) ELSE CAST(t0.c2 AS TEXT) END DESC, (+ (t0.c2 COLLATE NOCASE)), ((((t0.c1) IS TRUE))|((rt1.c2 IN (t0.c1, t0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'')OR(t0.c1)))OR((((t0.c0))>=((t0.c1)))))) IS TRUE)  as count FROM t0, rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0)))  WHEN ((t0.c0)*(t0.c1)) THEN ((rt1.c0)AND(t0.c1)) ELSE CAST(t0.c2 AS TEXT) END DESC, (+ (t0.c2 COLLATE NOCASE)), ((((t0.c1) IS TRUE))|((rt1.c2 IN (t0.c1, t0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt1 WHERE (((((x'')OR(t0.c1)))OR((((t0.c0))>=((t0.c1)))))) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((t0.c0)))  WHEN ((t0.c0)*(t0.c1)) THEN ((rt1.c0)AND(t0.c1)) ELSE CAST(t0.c2 AS TEXT) END DESC, (+ (t0.c2 COLLATE NOCASE)), ((((t0.c1) IS TRUE))|((rt1.c2 IN (t0.c1, t0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (2096158635 COLLATE RTRIM) ORDER BY ((x'') BETWEEN (vt1.c1 COLLATE BINARY) AND (CASE WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2096158635 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((x'') BETWEEN (vt1.c1 COLLATE BINARY) AND (CASE WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (2096158635 COLLATE RTRIM) ORDER BY ((x'') BETWEEN (vt1.c1 COLLATE BINARY) AND (CASE WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((2096158635 COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((x'') BETWEEN (vt1.c1 COLLATE BINARY) AND (CASE WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (2096158635 COLLATE RTRIM) ORDER BY ((x'') BETWEEN (vt1.c1 COLLATE BINARY) AND (CASE WHEN vt1.c1 THEN vt1.c1 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt1, t0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0 WHERE ((((~ (rt1.c2))) IS FALSE));
SELECT ALL * FROM t0, vt0, rt1 WHERE (CAST(((((((((vt0.c0)OR(rt1.c1)))OR(x'')))OR(rt1.c2)))OR(rt1.c0)) AS NUMERIC)) ORDER BY ((x'') BETWEEN (((rt1.c2) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((LIKELY(DISTINCT vt0.c2))LIKE(CAST(vt0.c1 AS NUMERIC))) DESC, (((vt0.c0 IN ()))&(0X75a0ff26 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt1.c1)))OR(x'')))OR(rt1.c2)))OR(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((x'') BETWEEN (((rt1.c2) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((LIKELY(DISTINCT vt0.c2))LIKE(CAST(vt0.c1 AS NUMERIC))) DESC, (((vt0.c0 IN ()))&(0X75a0ff26 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (CAST(((((((((vt0.c0)OR(rt1.c1)))OR(x'')))OR(rt1.c2)))OR(rt1.c0)) AS NUMERIC)) ORDER BY ((x'') BETWEEN (((rt1.c2) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((LIKELY(DISTINCT vt0.c2))LIKE(CAST(vt0.c1 AS NUMERIC))) DESC, (((vt0.c0 IN ()))&(0X75a0ff26 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c0)OR(rt1.c1)))OR(x'')))OR(rt1.c2)))OR(rt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((x'') BETWEEN (((rt1.c2) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((LIKELY(DISTINCT vt0.c2))LIKE(CAST(vt0.c1 AS NUMERIC))) DESC, (((vt0.c0 IN ()))&(0X75a0ff26 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM t0, vt0, rt1 WHERE (CAST(((((((((vt0.c0)OR(rt1.c1)))OR(x'')))OR(rt1.c2)))OR(rt1.c0)) AS NUMERIC)) ORDER BY ((x'') BETWEEN (((rt1.c2) IS FALSE)) AND (vt0.c0 COLLATE BINARY)), ((LIKELY(DISTINCT vt0.c2))LIKE(CAST(vt0.c1 AS NUMERIC))) DESC, (((vt0.c0 IN ()))&(0X75a0ff26 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL)IS NOT(((((((((vt0.c1)AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((((((vt0.c1)AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL)IS NOT(((((((((vt0.c1)AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((((((((vt0.c1)AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((NULL)IS NOT(((((((((vt0.c1)AND(vt1.c2)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c1))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c2)*(vt0.c0))) NOTNULL)) ORDER BY (((((rt1.c2, rt1.c1, x'')) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c2, rt1.c1, x'')) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c0)))) NOTNULL));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c2)*(vt0.c0))) NOTNULL)) ORDER BY (((((rt1.c2, rt1.c1, x'')) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c2)*(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c2, rt1.c1, x'')) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c0)))) NOTNULL));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c2)*(vt0.c0))) NOTNULL)) ORDER BY (((((rt1.c2, rt1.c1, x'')) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c1)) AND ((vt0.c0, rt1.c1, rt1.c0)))) NOTNULL);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY (+ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))  NULLS FIRST, (t0.c0 IN ()) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (+ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))  NULLS FIRST, (t0.c0 IN ()) ASC, NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY (+ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))  NULLS FIRST, (t0.c0 IN ()) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY (+ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))  NULLS FIRST, (t0.c0 IN ()) ASC, NULL  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)) AS TEXT)) ORDER BY (+ (((((t0.c2)OR(t0.c1)))OR(t0.c2))))  NULLS FIRST, (t0.c0 IN ()) ASC, NULL  NULLS LAST;
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((NOT (((((((((t0.c1)OR(vt1.c0)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c1)OR(vt1.c0)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((NOT (((((((((t0.c1)OR(vt1.c0)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c1)OR(vt1.c0)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((NOT (((((((((t0.c1)OR(vt1.c0)))OR(rt1.c0)))OR(t0.c0)))OR(rt1.c0)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c1)>>((((vt1.c2))=((rt1.c2))))) WHERE (vt1.c2 COLLATE NOCASE COLLATE RTRIM) ORDER BY ((rt1.c2)<<(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c1)>>((((vt1.c2))=((rt1.c2))))) ORDER BY ((rt1.c2)<<(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c1)>>((((vt1.c2))=((rt1.c2))))) WHERE (vt1.c2 COLLATE NOCASE COLLATE RTRIM) ORDER BY ((rt1.c2)<<(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c2 COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c1)>>((((vt1.c2))=((rt1.c2))))) ORDER BY ((rt1.c2)<<(CAST(vt1.c0 AS INTEGER)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON ((rt1.c1)>>((((vt1.c2))=((rt1.c2))))) WHERE (vt1.c2 COLLATE NOCASE COLLATE RTRIM) ORDER BY ((rt1.c2)<<(CAST(vt1.c0 AS INTEGER)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN vt1.c1 END)) WHERE (((NULL) NOT BETWEEN (((vt1.c2)<('eO<<3bt'))) AND (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt1.c2)<('eO<<3bt'))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN vt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN vt1.c1 END)) WHERE (((NULL) NOT BETWEEN (((vt1.c2)<('eO<<3bt'))) AND (rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((vt1.c2)<('eO<<3bt'))) AND (rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt1 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN vt1.c1 END)));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt1 ON (- (CASE rt1.c2  WHEN rt1.c2 THEN vt1.c1 END)) WHERE (((NULL) NOT BETWEEN (((vt1.c2)<('eO<<3bt'))) AND (rt1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((LOWER(vt0.c0), (+ (vt1.c2)), (+ (rt1.c1))))<=((vt1.c1, (+ (vt0.c1)), CAST(rt1.c0 AS INTEGER)))) LEFT OUTER JOIN vt1 ON 0.7058899965583625 WHERE (((rt1.c0)!=(vt1.c0)) COLLATE BINARY) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)!=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((LOWER(vt0.c0), (+ (vt1.c2)), (+ (rt1.c1))))<=((vt1.c1, (+ (vt0.c1)), CAST(rt1.c0 AS INTEGER)))) LEFT OUTER JOIN vt1 ON 0.7058899965583625 ORDER BY rt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON (((LOWER(vt0.c0), (+ (vt1.c2)), (+ (rt1.c1))))<=((vt1.c1, (+ (vt0.c1)), CAST(rt1.c0 AS INTEGER)))) LEFT OUTER JOIN vt1 ON 0.7058899965583625 WHERE (((rt1.c0)!=(vt1.c0)) COLLATE BINARY) ORDER BY rt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)!=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((LOWER(vt0.c0), (+ (vt1.c2)), (+ (rt1.c1))))<=((vt1.c1, (+ (vt0.c1)), CAST(rt1.c0 AS INTEGER)))) LEFT OUTER JOIN vt1 ON 0.7058899965583625 ORDER BY rt1.c0  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((rt1.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((rt1.c2) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((rt1.c2) IS FALSE));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2) IS FALSE) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c1);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2) IS FALSE) END) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c1);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON vt0.c1 WHERE (CASE WHEN ((vt0.c1) ISNULL) THEN ((vt0.c2) IS FALSE) END);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN ((~ (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c2)))) ORDER BY (((~ (vt0.c1)))AND(vt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN ((~ (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((~ (vt0.c1)))AND(vt1.c1))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN ((~ (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c2)))) ORDER BY (((~ (vt0.c1)))AND(vt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) BETWEEN ((~ (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((~ (vt0.c1)))AND(vt1.c1))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0, rt1 WHERE (((((vt1.c0) ISNULL)) BETWEEN ((~ (vt0.c1))) AND (TYPEOF(DISTINCT vt0.c2)))) ORDER BY (((~ (vt0.c1)))AND(vt1.c1))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (rt1.c2) ORDER BY '' DESC, CAST(((((t0.c0)AND(vt1.c0)))AND(vt1.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY '' DESC, CAST(((((t0.c0)AND(vt1.c0)))AND(vt1.c2)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (rt1.c2) ORDER BY '' DESC, CAST(((((t0.c0)AND(vt1.c0)))AND(vt1.c2)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, rt1, vt0, vt1 ORDER BY '' DESC, CAST(((((t0.c0)AND(vt1.c0)))AND(vt1.c2)) AS TEXT)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (rt1.c2) ORDER BY '' DESC, CAST(((((t0.c0)AND(vt1.c0)))AND(vt1.c2)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CAST((NOT (t0.c1)) AS INTEGER));
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c1 THEN rt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c2  WHEN vt1.c1 THEN rt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c1 THEN rt1.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c2  WHEN vt1.c1 THEN rt1.c0 END AS TEXT)) IS TRUE)  as count FROM vt1, rt1, vt0);
SELECT * FROM vt1, rt1, vt0 WHERE (CAST(CASE vt0.c2  WHEN vt1.c1 THEN rt1.c0 END AS TEXT));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c0)AND('i~n<B2')))AND(t0.c1)) WHEN (~ (0.18336733109944858)) THEN t0.c2 COLLATE BINARY WHEN (('') ISNULL) THEN IFNULL(DISTINCT t0.c1, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c0)AND('i~n<B2')))AND(t0.c1)) WHEN (~ (0.18336733109944858)) THEN t0.c2 COLLATE BINARY WHEN (('') ISNULL) THEN IFNULL(DISTINCT t0.c1, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c0)AND('i~n<B2')))AND(t0.c1)) WHEN (~ (0.18336733109944858)) THEN t0.c2 COLLATE BINARY WHEN (('') ISNULL) THEN IFNULL(DISTINCT t0.c1, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c0)AND('i~n<B2')))AND(t0.c1)) WHEN (~ (0.18336733109944858)) THEN t0.c2 COLLATE BINARY WHEN (('') ISNULL) THEN IFNULL(DISTINCT t0.c1, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c0)) THEN ((((t0.c0)AND('i~n<B2')))AND(t0.c1)) WHEN (~ (0.18336733109944858)) THEN t0.c2 COLLATE BINARY WHEN (('') ISNULL) THEN IFNULL(DISTINCT t0.c1, t0.c0) END);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c2) BETWEEN ('FJE認)') AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((((rt1.c2) BETWEEN ('FJE認)') AND (NULL))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c2) BETWEEN ('FJE認)') AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((((rt1.c2) BETWEEN ('FJE認)') AND (NULL))) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt1, vt0 WHERE (NULL COLLATE RTRIM) ORDER BY ((((rt1.c2) BETWEEN ('FJE認)') AND (NULL))) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c2)<=(x''))) BETWEEN (((vt1.c0)*(vt0.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(x''))) BETWEEN (((vt1.c0)*(vt0.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c2)<=(x''))) BETWEEN (((vt1.c0)*(vt0.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c2)<=(x''))) BETWEEN (((vt1.c0)*(vt0.c0))) AND (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c2)<=(x''))) BETWEEN (((vt1.c0)*(vt0.c0))) AND (CAST(vt1.c0 AS BLOB))));
SELECT COUNT(*) FROM rt1, vt1 NATURAL JOIN vt0 WHERE (((((rt1.c2) NOT BETWEEN ('-1211453224') AND ('1868903889'))) NOT BETWEEN (((((((((vt0.c1)OR(x'29de')))AND(vt0.c1)))OR(rt1.c2)))AND(vt0.c0))) AND (((vt0.c0)/(rt1.c2))))) ORDER BY 0X12c5ebbf, (((((((vt1.c2))<((vt0.c2))))OR(((((vt1.c1)AND(vt1.c2)))AND(vt0.c2)))))AND((- (vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN ('-1211453224') AND ('1868903889'))) NOT BETWEEN (((((((((vt0.c1)OR(x'29de')))AND(vt0.c1)))OR(rt1.c2)))AND(vt0.c0))) AND (((vt0.c0)/(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN vt0 ORDER BY 0X12c5ebbf, (((((((vt1.c2))<((vt0.c2))))OR(((((vt1.c1)AND(vt1.c2)))AND(vt0.c2)))))AND((- (vt1.c2)))));
SELECT COUNT(*) FROM rt1, vt1 NATURAL JOIN vt0 WHERE (((((rt1.c2) NOT BETWEEN ('-1211453224') AND ('1868903889'))) NOT BETWEEN (((((((((vt0.c1)OR(x'29de')))AND(vt0.c1)))OR(rt1.c2)))AND(vt0.c0))) AND (((vt0.c0)/(rt1.c2))))) ORDER BY 0X12c5ebbf, (((((((vt1.c2))<((vt0.c2))))OR(((((vt1.c1)AND(vt1.c2)))AND(vt0.c2)))))AND((- (vt1.c2))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOT BETWEEN ('-1211453224') AND ('1868903889'))) NOT BETWEEN (((((((((vt0.c1)OR(x'29de')))AND(vt0.c1)))OR(rt1.c2)))AND(vt0.c0))) AND (((vt0.c0)/(rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN vt0 ORDER BY 0X12c5ebbf, (((((((vt1.c2))<((vt0.c2))))OR(((((vt1.c1)AND(vt1.c2)))AND(vt0.c2)))))AND((- (vt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (CASE CASE vt1.c0  WHEN rt1.c1 THEN x'' WHEN 0.7517308119634921 THEN t0.c1 WHEN vt1.c2 THEN x'1d36' END  WHEN t0.c2 COLLATE RTRIM THEN ((x'')+(t0.c2)) WHEN CAST(rt1.c2 AS NUMERIC) THEN (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN NULL THEN (vt0.c0 IN ()) END) ORDER BY CAST(((vt1.c0)%(vt1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN rt1.c1 THEN x'' WHEN 0.7517308119634921 THEN t0.c1 WHEN vt1.c2 THEN x'1d36' END  WHEN t0.c2 COLLATE RTRIM THEN ((x'')+(t0.c2)) WHEN CAST(rt1.c2 AS NUMERIC) THEN (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN NULL THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CAST(((vt1.c0)%(vt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (CASE CASE vt1.c0  WHEN rt1.c1 THEN x'' WHEN 0.7517308119634921 THEN t0.c1 WHEN vt1.c2 THEN x'1d36' END  WHEN t0.c2 COLLATE RTRIM THEN ((x'')+(t0.c2)) WHEN CAST(rt1.c2 AS NUMERIC) THEN (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN NULL THEN (vt0.c0 IN ()) END) ORDER BY CAST(((vt1.c0)%(vt1.c2)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((CASE CASE vt1.c0  WHEN rt1.c1 THEN x'' WHEN 0.7517308119634921 THEN t0.c1 WHEN vt1.c2 THEN x'1d36' END  WHEN t0.c2 COLLATE RTRIM THEN ((x'')+(t0.c2)) WHEN CAST(rt1.c2 AS NUMERIC) THEN (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN NULL THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CAST(((vt1.c0)%(vt1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (CASE CASE vt1.c0  WHEN rt1.c1 THEN x'' WHEN 0.7517308119634921 THEN t0.c1 WHEN vt1.c2 THEN x'1d36' END  WHEN t0.c2 COLLATE RTRIM THEN ((x'')+(t0.c2)) WHEN CAST(rt1.c2 AS NUMERIC) THEN (((vt1.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) WHEN NULL THEN (vt0.c0 IN ()) END) ORDER BY CAST(((vt1.c0)%(vt1.c2)) AS NUMERIC);
SELECT * FROM t0, vt0 WHERE ((- ((((((((('-1379075662')AND(vt0.c0)))AND(vt0.c2)))OR(t0.c0)))OR(vt0.c1))))) ORDER BY 'q|\tK' DESC;
SELECT SUM(count) FROM (SELECT (((- ((((((((('-1379075662')AND(vt0.c0)))AND(vt0.c2)))OR(t0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'q|\tK' DESC);
SELECT * FROM t0, vt0 WHERE ((- ((((((((('-1379075662')AND(vt0.c0)))AND(vt0.c2)))OR(t0.c0)))OR(vt0.c1))))) ORDER BY 'q|\tK' DESC;
SELECT SUM(count) FROM (SELECT (((- ((((((((('-1379075662')AND(vt0.c0)))AND(vt0.c2)))OR(t0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 'q|\tK' DESC);
SELECT * FROM t0, vt0 WHERE ((- ((((((((('-1379075662')AND(vt0.c0)))AND(vt0.c2)))OR(t0.c0)))OR(vt0.c1))))) ORDER BY 'q|\tK' DESC;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((4.05451191E8)>=(CASE WHEN vt1.c0 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((4.05451191E8)>=(CASE WHEN vt1.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((4.05451191E8)>=(CASE WHEN vt1.c0 THEN vt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((4.05451191E8)>=(CASE WHEN vt1.c0 THEN vt0.c2 END))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((4.05451191E8)>=(CASE WHEN vt1.c0 THEN vt0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c2 ELSE t0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (CAST((rt1.c0 IN (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (CAST((rt1.c0 IN (vt1.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c0 IN (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (CAST((rt1.c0 IN (vt1.c1)) AS TEXT));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c1)) BETWEEN ((((t0.c1)AND(vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((('')OR(t0.c1)))OR(t0.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c2))))!=((t0.c1, NULL, (- (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1)AND(vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((('')OR(t0.c1)))OR(t0.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c2))))<>((t0.c1, NULL, (- (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c1)) BETWEEN ((((t0.c1)AND(vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((('')OR(t0.c1)))OR(t0.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c2))))!=((t0.c1, NULL, (- (vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c1)AND(vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((('')OR(t0.c1)))OR(t0.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c2))))<>((t0.c1, NULL, (- (vt0.c0)))))  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((((t0.c1)) BETWEEN ((((t0.c1)AND(vt1.c0)))) AND ((CAST(vt1.c0 AS INTEGER))))) ORDER BY (((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((('')OR(t0.c1)))OR(t0.c0)), ((vt1.c1) NOT BETWEEN (vt1.c1) AND (t0.c2))))!=((t0.c1, NULL, (- (vt0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY (- (TRIM(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY (- (TRIM(rt1.c2))) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY (- (TRIM(rt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY (- (TRIM(rt1.c2))) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CAST(NULL AS BLOB)) ORDER BY (- (TRIM(rt1.c2))) ASC;
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((264489426))!=((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((264489426))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((264489426))!=((((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((264489426))<>((((vt1.c0) ISNULL))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((264489426))!=((((vt1.c0) ISNULL)))));
SELECT * FROM t0, vt0, rt1, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, vt0, rt1, vt1);
SELECT * FROM t0, vt0, rt1, vt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM t0, vt0, rt1, vt1);
SELECT * FROM t0, vt0, rt1, vt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN t0 ON CASE (vt1.c2 IN ())  WHEN (((vt1.c1))>=((x''))) THEN x'48ce' ELSE CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN vt0.c2 ELSE vt0.c2 END END INNER JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN (('g3?1\nm|\') NOT BETWEEN (rt1.c0) AND (t0.c2)) THEN x'8d3c' ELSE (NOT (1.408224388E9)) END WHERE (((((('', vt1.c0, vt1.c2))<=((t0.c1, vt1.c0, vt0.c1))))OR(-1487926543)));
SELECT SUM(count) FROM (SELECT ALL ((((((('', vt1.c0, vt1.c2))<=((t0.c1, vt1.c0, vt0.c1))))OR(-1487926543))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN t0 ON CASE (vt1.c2 IN ())  WHEN (((vt1.c1))>=((x''))) THEN x'48ce' ELSE CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN vt0.c2 ELSE vt0.c2 END END INNER JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN (('g3?1\nm|\') NOT BETWEEN (rt1.c0) AND (t0.c2)) THEN x'8d3c' ELSE (NOT (1.408224388E9)) END);
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN t0 ON CASE (vt1.c2 IN ())  WHEN (((vt1.c1))>=((x''))) THEN x'48ce' ELSE CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN vt0.c2 ELSE vt0.c2 END END INNER JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN (('g3?1\nm|\') NOT BETWEEN (rt1.c0) AND (t0.c2)) THEN x'8d3c' ELSE (NOT (1.408224388E9)) END WHERE (((((('', vt1.c0, vt1.c2))<=((t0.c1, vt1.c0, vt0.c1))))OR(-1487926543)));
SELECT SUM(count) FROM (SELECT ALL ((((((('', vt1.c0, vt1.c2))<=((t0.c1, vt1.c0, vt0.c1))))OR(-1487926543))) IS TRUE)  as count FROM rt1, vt1 CROSS JOIN t0 ON CASE (vt1.c2 IN ())  WHEN (((vt1.c1))>=((x''))) THEN x'48ce' ELSE CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN vt0.c2 ELSE vt0.c2 END END INNER JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN (('g3?1\nm|\') NOT BETWEEN (rt1.c0) AND (t0.c2)) THEN x'8d3c' ELSE (NOT (1.408224388E9)) END);
SELECT COUNT(*) FROM rt1, vt1 CROSS JOIN t0 ON CASE (vt1.c2 IN ())  WHEN (((vt1.c1))>=((x''))) THEN x'48ce' ELSE CASE WHEN rt1.c0 THEN vt1.c1 WHEN t0.c2 THEN t0.c2 WHEN rt1.c1 THEN vt0.c2 ELSE vt0.c2 END END INNER JOIN vt0 ON CASE vt0.c0 COLLATE BINARY  WHEN (('g3?1\nm|\') NOT BETWEEN (rt1.c0) AND (t0.c2)) THEN x'8d3c' ELSE (NOT (1.408224388E9)) END WHERE (((((('', vt1.c0, vt1.c2))<=((t0.c1, vt1.c0, vt0.c1))))OR(-1487926543)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)LIKE(((vt0.c2)GLOB(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (vt0.c0) AND ('-1945033463'))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) THEN LOWER(t0.c2) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND ('mt[n1Z7')) WHEN (~ (t0.c2)) THEN (vt0.c1 IN ()) ELSE ((t0.c0)+(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)LIKE(((vt0.c2)GLOB(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c1) NOT BETWEEN (vt0.c0) AND ('-1945033463'))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) THEN LOWER(t0.c2) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND ('mt[n1Z7')) WHEN (~ (t0.c2)) THEN (vt0.c1 IN ()) ELSE ((t0.c0)+(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)LIKE(((vt0.c2)GLOB(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (vt0.c0) AND ('-1945033463'))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) THEN LOWER(t0.c2) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND ('mt[n1Z7')) WHEN (~ (t0.c2)) THEN (vt0.c1 IN ()) ELSE ((t0.c0)+(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)LIKE(((vt0.c2)GLOB(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((t0.c1) NOT BETWEEN (vt0.c0) AND ('-1945033463'))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) THEN LOWER(t0.c2) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND ('mt[n1Z7')) WHEN (~ (t0.c2)) THEN (vt0.c1 IN ()) ELSE ((t0.c0)+(vt0.c0)) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)LIKE(((vt0.c2)GLOB(t0.c2))))) ORDER BY CASE ((t0.c1) NOT BETWEEN (vt0.c0) AND ('-1945033463'))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c1)) THEN LOWER(t0.c2) WHEN ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c2) AND ('mt[n1Z7')) WHEN (~ (t0.c2)) THEN (vt0.c1 IN ()) ELSE ((t0.c0)+(vt0.c0)) END;
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (json_array_length(((vt1.c0)>>(rt1.c1)), ((NULL)&(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)>>(rt1.c1)), ((NULL)&(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (json_array_length(((vt1.c0)>>(rt1.c1)), ((NULL)&(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt1.c0)>>(rt1.c1)), ((NULL)&(vt1.c1)))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (json_array_length(((vt1.c0)>>(rt1.c1)), ((NULL)&(vt1.c1))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE) ORDER BY (NOT ((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))));
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((rt1.c1)GLOB(vt0.c1))) NOTNULL)) ORDER BY ((x'45c0') NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)GLOB(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((x'45c0') NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((rt1.c1)GLOB(vt0.c1))) NOTNULL)) ORDER BY ((x'45c0') NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)GLOB(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY ((x'45c0') NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1, t0 WHERE (((((rt1.c1)GLOB(vt0.c1))) NOTNULL)) ORDER BY ((x'45c0') NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt1, rt1 INNER JOIN vt0 ON ((((rt1.c0)>(rt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (((rt1.c2)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON COALESCE(((rt1.c2) IS FALSE), (('') BETWEEN (t0.c0) AND (vt0.c0))) WHERE (((((vt0.c1)OR(x'')))OR(t0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE, (((rt1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(x'')))OR(t0.c2))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN vt0 ON ((((rt1.c0)>(rt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (((rt1.c2)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON COALESCE(((rt1.c2) IS FALSE), (('') BETWEEN (t0.c0) AND (vt0.c0))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE, (((rt1.c1 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt1, rt1 INNER JOIN vt0 ON ((((rt1.c0)>(rt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (((rt1.c2)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON COALESCE(((rt1.c2) IS FALSE), (('') BETWEEN (t0.c0) AND (vt0.c0))) WHERE (((((vt0.c1)OR(x'')))OR(t0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE, (((rt1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR(x'')))OR(t0.c2))) IS TRUE)  as count FROM vt1, rt1 INNER JOIN vt0 ON ((((rt1.c0)>(rt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (((rt1.c2)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON COALESCE(((rt1.c2) IS FALSE), (('') BETWEEN (t0.c0) AND (vt0.c0))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE, (((rt1.c1 IN ())) IS TRUE)  NULLS LAST);
SELECT * FROM vt1, rt1 INNER JOIN vt0 ON ((((rt1.c0)>(rt1.c1))) BETWEEN (CASE WHEN vt1.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (((rt1.c2)>(vt0.c0)))) RIGHT OUTER JOIN t0 ON COALESCE(((rt1.c2) IS FALSE), (('') BETWEEN (t0.c0) AND (vt0.c0))) WHERE (((((vt0.c1)OR(x'')))OR(t0.c2))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE, (((rt1.c1 IN ())) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((x'' IN ()))+((((vt0.c1))<>((t0.c2)))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))+((((vt0.c1))<>((t0.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY rt1.c1);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((x'' IN ()))+((((vt0.c1))<>((t0.c2)))))) ORDER BY rt1.c1;
SELECT SUM(count) FROM (SELECT (((((x'' IN ()))+((((vt0.c1))<>((t0.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY rt1.c1);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((x'' IN ()))+((((vt0.c1))<>((t0.c2)))))) ORDER BY rt1.c1;
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(0.15188764681168343 AS TEXT))AND(UNLIKELY(vt0.c1))))AND((((vt0.c2))==((vt0.c0)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC, (0.6753555289557424 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.15188764681168343 AS TEXT))AND(UNLIKELY(vt0.c1))))AND((((vt0.c2))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC, (0.6753555289557424 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(0.15188764681168343 AS TEXT))AND(UNLIKELY(vt0.c1))))AND((((vt0.c2))==((vt0.c0)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC, (0.6753555289557424 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(0.15188764681168343 AS TEXT))AND(UNLIKELY(vt0.c1))))AND((((vt0.c2))==((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC, (0.6753555289557424 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(0.15188764681168343 AS TEXT))AND(UNLIKELY(vt0.c1))))AND((((vt0.c2))==((vt0.c0)))))) ORDER BY (CAST(vt0.c1 AS NUMERIC) IN ()) DESC, (0.6753555289557424 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c1)*(vt0.c1)))<=(vt0.c1))  NULLS FIRST, ((t0.c2 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt1.c1)*(vt0.c1)))<=(vt0.c1))  NULLS FIRST, ((t0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c1)*(vt0.c1)))<=(vt0.c1))  NULLS FIRST, ((t0.c2 COLLATE RTRIM) ISNULL);
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt1.c1)*(vt0.c1)))<=(vt0.c1))  NULLS FIRST, ((t0.c2 COLLATE RTRIM) ISNULL));
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((((t0.c0) NOTNULL))) AND ((t0.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c1)*(vt0.c1)))<=(vt0.c1))  NULLS FIRST, ((t0.c2 COLLATE RTRIM) ISNULL);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS TRUE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c1) IS TRUE) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c1) IS TRUE) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM rt1 WHERE ('-333988423') ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (('-333988423') IS TRUE)  as count FROM rt1 ORDER BY NULL DESC);
SELECT * FROM rt1 WHERE ('-333988423') ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT (('-333988423') IS TRUE)  as count FROM rt1 ORDER BY NULL DESC);
SELECT * FROM rt1 WHERE ('-333988423') ORDER BY NULL DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN 0.6234258630715209 END)) AND ((((vt0.c2) BETWEEN (rt1.c1) AND (vt0.c2))))) WHERE (((((((((((rt1.c0)*(t0.c2)))AND(((t0.c1) IS TRUE))))AND((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR(CASE t0.c1  WHEN rt1.c1 THEN t0.c0 ELSE 0.1511950583697932 END)))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)*(t0.c2)))AND(((t0.c1) IS TRUE))))AND((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR(CASE t0.c1  WHEN rt1.c1 THEN t0.c0 ELSE 0.1511950583697932 END)))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN 0.6234258630715209 END)) AND ((((vt0.c2) BETWEEN (rt1.c1) AND (vt0.c2))))));
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN 0.6234258630715209 END)) AND ((((vt0.c2) BETWEEN (rt1.c1) AND (vt0.c2))))) WHERE (((((((((((rt1.c0)*(t0.c2)))AND(((t0.c1) IS TRUE))))AND((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR(CASE t0.c1  WHEN rt1.c1 THEN t0.c0 ELSE 0.1511950583697932 END)))OR(x'' COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)*(t0.c2)))AND(((t0.c1) IS TRUE))))AND((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR(CASE t0.c1  WHEN rt1.c1 THEN t0.c0 ELSE 0.1511950583697932 END)))OR(x'' COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN 0.6234258630715209 END)) AND ((((vt0.c2) BETWEEN (rt1.c1) AND (vt0.c2))))));
SELECT ALL COUNT(*) FROM rt1, vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c2 COLLATE NOCASE) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(rt1.c1 AS INTEGER))) LEFT OUTER JOIN t0 ON (((vt0.c1)) BETWEEN ((CASE WHEN vt0.c0 THEN 0.6234258630715209 END)) AND ((((vt0.c2) BETWEEN (rt1.c1) AND (vt0.c2))))) WHERE (((((((((((rt1.c0)*(t0.c2)))AND(((t0.c1) IS TRUE))))AND((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))))OR(CASE t0.c1  WHEN rt1.c1 THEN t0.c0 ELSE 0.1511950583697932 END)))OR(x'' COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((LIKELIHOOD('N褯?ho*?6 ', 0.6947305794595907)) NOTNULL)) ORDER BY -2073109943 ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD('N褯?ho*?6 ', 0.6947305794595907)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY -2073109943 ASC);
SELECT ALL * FROM t0 WHERE (((LIKELIHOOD('N褯?ho*?6 ', 0.6947305794595907)) NOTNULL)) ORDER BY -2073109943 ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD('N褯?ho*?6 ', 0.6947305794595907)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY -2073109943 ASC);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((~ (((((vt0.c1)OR(t0.c0)))OR(t0.c2))))) ORDER BY CAST(((((t0.c1)OR(t0.c2)))OR(t0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c1)OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY CAST(((((t0.c1)OR(t0.c2)))OR(t0.c1)) AS REAL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((~ (((((vt0.c1)OR(t0.c0)))OR(t0.c2))))) ORDER BY CAST(((((t0.c1)OR(t0.c2)))OR(t0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT (((~ (((((vt0.c1)OR(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON x'' ORDER BY CAST(((((t0.c1)OR(t0.c2)))OR(t0.c1)) AS REAL));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON x'' WHERE ((~ (((((vt0.c1)OR(t0.c0)))OR(t0.c2))))) ORDER BY CAST(((((t0.c1)OR(t0.c2)))OR(t0.c1)) AS REAL);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (TYPEOF(((vt1.c0) NOTNULL))) ORDER BY ((t0.c2) BETWEEN (((0.042199544153552426)AND(t0.c1))) AND ((+ (t0.c0)))), ((CAST(rt1.c1 AS INTEGER)) IS TRUE) ASC, ((((((vt1.c1)||(vt0.c2)))AND(((0X268780c7) BETWEEN (t0.c1) AND (vt0.c2)))))AND((vt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((t0.c2) BETWEEN (((0.042199544153552426)AND(t0.c1))) AND ((+ (t0.c0)))), ((CAST(rt1.c1 AS INTEGER)) IS TRUE) ASC, ((((((vt1.c1)||(vt0.c2)))AND(((0X268780c7) BETWEEN (t0.c1) AND (vt0.c2)))))AND((vt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (TYPEOF(((vt1.c0) NOTNULL))) ORDER BY ((t0.c2) BETWEEN (((0.042199544153552426)AND(t0.c1))) AND ((+ (t0.c0)))), ((CAST(rt1.c1 AS INTEGER)) IS TRUE) ASC, ((((((vt1.c1)||(vt0.c2)))AND(((0X268780c7) BETWEEN (t0.c1) AND (vt0.c2)))))AND((vt0.c2 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((t0.c2) BETWEEN (((0.042199544153552426)AND(t0.c1))) AND ((+ (t0.c0)))), ((CAST(rt1.c1 AS INTEGER)) IS TRUE) ASC, ((((((vt1.c1)||(vt0.c2)))AND(((0X268780c7) BETWEEN (t0.c1) AND (vt0.c2)))))AND((vt0.c2 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0) IS FALSE) IN ()));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c2)LIKE(((vt1.c1) BETWEEN ('') AND (vt0.c0))))) ORDER BY (NOT (((((((((vt1.c1)AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))OR(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)LIKE(((vt1.c1) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (((((((((vt1.c1)AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))OR(vt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c2)LIKE(((vt1.c1) BETWEEN ('') AND (vt0.c0))))) ORDER BY (NOT (((((((((vt1.c1)AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))OR(vt1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c2)LIKE(((vt1.c1) BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (NOT (((((((((vt1.c1)AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))OR(vt1.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((vt0.c2)LIKE(((vt1.c1) BETWEEN ('') AND (vt0.c0))))) ORDER BY (NOT (((((((((vt1.c1)AND(vt0.c1)))AND(t0.c2)))AND(t0.c2)))OR(vt1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON (CAST(rt1.c1 AS TEXT) IN ()) WHERE (((((vt0.c1)OR((+ (t0.c1)))))OR(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR((+ (t0.c1)))))OR(rt1.c1))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON (CAST(rt1.c1 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON (CAST(rt1.c1 AS TEXT) IN ()) WHERE (((((vt0.c1)OR((+ (t0.c1)))))OR(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)OR((+ (t0.c1)))))OR(rt1.c1))) IS TRUE)  as count FROM rt1, t0 CROSS JOIN vt0 ON (CAST(rt1.c1 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM rt1, t0 CROSS JOIN vt0 ON (CAST(rt1.c1 AS TEXT) IN ()) WHERE (((((vt0.c1)OR((+ (t0.c1)))))OR(rt1.c1)));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))==((NULL)))) ISNULL) WHERE (CASE WHEN ((x'') ISNULL) THEN ((t0.c1) BETWEEN (vt0.c2) AND (902247204)) ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') ISNULL) THEN ((t0.c1) BETWEEN (vt0.c2) AND (902247204)) ELSE vt0.c2 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))==((NULL)))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))==((NULL)))) ISNULL) WHERE (CASE WHEN ((x'') ISNULL) THEN ((t0.c1) BETWEEN (vt0.c2) AND (902247204)) ELSE vt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'') ISNULL) THEN ((t0.c1) BETWEEN (vt0.c2) AND (902247204)) ELSE vt0.c2 END) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))==((NULL)))) ISNULL));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((vt0.c1))==((NULL)))) ISNULL) WHERE (CASE WHEN ((x'') ISNULL) THEN ((t0.c1) BETWEEN (vt0.c2) AND (902247204)) ELSE vt0.c2 END);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CASE WHEN t0.c2 THEN '-1753864311' ELSE t0.c2 END IN ())) ORDER BY ((((t0.c0)=(vt1.c2)))<>((NOT (0.226171336634727))))  NULLS FIRST, (- (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN '-1753864311' ELSE t0.c2 END IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c0)==(vt1.c2)))!=((NOT (0.226171336634727))))  NULLS FIRST, (- (((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CASE WHEN t0.c2 THEN '-1753864311' ELSE t0.c2 END IN ())) ORDER BY ((((t0.c0)=(vt1.c2)))<>((NOT (0.226171336634727))))  NULLS FIRST, (- (((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN '-1753864311' ELSE t0.c2 END IN ())) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((t0.c0)==(vt1.c2)))!=((NOT (0.226171336634727))))  NULLS FIRST, (- (((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((CASE WHEN t0.c2 THEN '-1753864311' ELSE t0.c2 END IN ())) ORDER BY ((((t0.c0)=(vt1.c2)))<>((NOT (0.226171336634727))))  NULLS FIRST, (- (((vt1.c0) IS FALSE)));
SELECT ALL * FROM vt0, rt1, vt1, t0 WHERE (((((- (t0.c1))))>=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((- (t0.c1))))>=((vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL * FROM vt0, rt1, vt1, t0 WHERE (((((- (t0.c1))))>=((vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((- (t0.c1))))>=((vt0.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL * FROM vt0, rt1, vt1, t0 WHERE (((((- (t0.c1))))>=((vt0.c0))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) BETWEEN ('(1A') AND (t0.c2))) IS FALSE)) ORDER BY '-2132142181' ASC  NULLS LAST, (((rt1.c2 IN (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN ('(1A') AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY '-2132142181' ASC  NULLS LAST, (((rt1.c2 IN (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) BETWEEN ('(1A') AND (t0.c2))) IS FALSE)) ORDER BY '-2132142181' ASC  NULLS LAST, (((rt1.c2 IN (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) BETWEEN ('(1A') AND (t0.c2))) IS FALSE)) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY '-2132142181' ASC  NULLS LAST, (((rt1.c2 IN (vt0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (((((rt1.c2) BETWEEN ('(1A') AND (t0.c2))) IS FALSE)) ORDER BY '-2132142181' ASC  NULLS LAST, (((rt1.c2 IN (vt0.c0))) IS TRUE)  NULLS LAST;
SELECT * FROM t0, rt1 NATURAL JOIN vt1 WHERE ((((rt1.c2 IN ()))>(-2.069734553E9)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))>(-2.069734553E9))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt1);
SELECT * FROM t0, rt1 NATURAL JOIN vt1 WHERE ((((rt1.c2 IN ()))>(-2.069734553E9)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN ()))>(-2.069734553E9))) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt1);
SELECT * FROM t0, rt1 NATURAL JOIN vt1 WHERE ((((rt1.c2 IN ()))>(-2.069734553E9)));
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE (((UNLIKELY(vt0.c1)) IS FALSE)) ORDER BY (NOT (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (NOT (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE (((UNLIKELY(vt0.c1)) IS FALSE)) ORDER BY (NOT (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (NOT (((vt1.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t0, vt0, vt1 WHERE (((UNLIKELY(vt0.c1)) IS FALSE)) ORDER BY (NOT (((vt1.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((~ (vt1.c2)) IN ()) WHERE (CAST(((-1.289800273E9) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((-1.289800273E9) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((~ (vt1.c2)) IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((~ (vt1.c2)) IN ()) WHERE (CAST(((-1.289800273E9) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((-1.289800273E9) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((~ (vt1.c2)) IN ()));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON ((~ (vt1.c2)) IN ()) WHERE (CAST(((-1.289800273E9) NOT BETWEEN (t0.c2) AND (t0.c1)) AS TEXT));
SELECT * FROM vt0, vt1, t0, rt1 WHERE (((((CASE t0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)OR(((0.07765849212095699) NOT BETWEEN (rt1.c2) AND (vt0.c2)))))OR(((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)OR(((0.07765849212095699) NOT BETWEEN (rt1.c2) AND (vt0.c2)))))OR(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT * FROM vt0, vt1, t0, rt1 WHERE (((((CASE t0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)OR(((0.07765849212095699) NOT BETWEEN (rt1.c2) AND (vt0.c2)))))OR(((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)OR(((0.07765849212095699) NOT BETWEEN (rt1.c2) AND (vt0.c2)))))OR(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT * FROM vt0, vt1, t0, rt1 WHERE (((((CASE t0.c1  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END)OR(((0.07765849212095699) NOT BETWEEN (rt1.c2) AND (vt0.c2)))))OR(((vt1.c1) IS TRUE))));
SELECT COUNT(*) FROM vt1, rt1, t0, vt0 WHERE (CAST(((vt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE(vt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY ((CAST(t0.c1 AS BLOB))LIKE(vt1.c2)) ASC);
SELECT COUNT(*) FROM vt1, rt1, t0, vt0 WHERE (CAST(((vt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE(vt1.c2)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY ((CAST(t0.c1 AS BLOB))LIKE(vt1.c2)) ASC);
SELECT COUNT(*) FROM vt1, rt1, t0, vt0 WHERE (CAST(((vt0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB)) ORDER BY ((CAST(t0.c1 AS BLOB))LIKE(vt1.c2)) ASC;
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(((rt1.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt1.c2) NOT NULL))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELY(((rt1.c2) NOT NULL)));
SELECT * FROM vt0, rt1 WHERE (CAST(vt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(vt0.c2 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c2 AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(vt0.c2 AS INTEGER));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) ISNULL));
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((('3Xi')OR(((vt1.c2)*(vt0.c0)))))AND(rt1.c1 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(LIKE(vt1.c2, vt1.c1, '1')))) ORDER BY MIN(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END, (vt0.c0 IN (vt1.c2, vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('3Xi')OR(((vt1.c2)*(vt0.c0)))))AND(rt1.c1 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(LIKE(vt1.c2, vt1.c1, '1')))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY MIN(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END, (vt0.c0 IN (vt1.c2, vt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((('3Xi')OR(((vt1.c2)*(vt0.c0)))))AND(rt1.c1 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(LIKE(vt1.c2, vt1.c1, '1')))) ORDER BY MIN(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END, (vt0.c0 IN (vt1.c2, vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((('3Xi')OR(((vt1.c2)*(vt0.c0)))))AND(rt1.c1 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(LIKE(vt1.c2, vt1.c1, '1')))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY MIN(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END, (vt0.c0 IN (vt1.c2, vt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((('3Xi')OR(((vt1.c2)*(vt0.c0)))))AND(rt1.c1 COLLATE BINARY)))OR(vt0.c0 COLLATE BINARY)))AND(LIKE(vt1.c2, vt1.c1, '1')))) ORDER BY MIN(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END, (vt0.c0 IN (vt1.c2, vt1.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0))<((rt1.c2))))OR(((rt1.c0)>=(rt1.c2)))))AND(rt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(CAST(vt0.c2 AS TEXT))) WHERE (((((vt0.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0))<((rt1.c2))))OR(((rt1.c0)>=(rt1.c2)))))AND(rt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(CAST(vt0.c2 AS TEXT))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0))<((rt1.c2))))OR(((rt1.c0)>=(rt1.c2)))))AND(rt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(CAST(vt0.c2 AS TEXT))) WHERE (((((vt0.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0))<((rt1.c2))))OR(((rt1.c0)>=(rt1.c2)))))AND(rt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(CAST(vt0.c2 AS TEXT))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON (((((((((((vt0.c0))<((rt1.c2))))OR(((rt1.c0)>=(rt1.c2)))))AND(rt1.c0)))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt1.c1)))))AND(CAST(vt0.c2 AS TEXT))) WHERE (((((vt0.c2)AND(rt1.c1)))OR(rt1.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((((((((((((rt1.c1)AND(x'')))OR(rt1.c0)))OR(t0.c1)))OR(NULL)))OR(rt1.c2)))AND(NULL)) AS NUMERIC)) ORDER BY CAST(((rt1.c2) NOTNULL) AS TEXT)  NULLS LAST, (((((t0.c0)AND(rt1.c2)))OR(t0.c2)) IN ()) ASC  NULLS LAST, ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))OR(((((rt1.c1)OR(t0.c1)))AND(t0.c0)))))AND(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt1.c1)AND(x'')))OR(rt1.c0)))OR(t0.c1)))OR(NULL)))OR(rt1.c2)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(((rt1.c2) NOTNULL) AS TEXT)  NULLS LAST, (((((t0.c0)AND(rt1.c2)))OR(t0.c2)) IN ()) ASC  NULLS LAST, ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))OR(((((rt1.c1)OR(t0.c1)))AND(t0.c0)))))AND(((rt1.c0) ISNULL))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((((((((((((rt1.c1)AND(x'')))OR(rt1.c0)))OR(t0.c1)))OR(NULL)))OR(rt1.c2)))AND(NULL)) AS NUMERIC)) ORDER BY CAST(((rt1.c2) NOTNULL) AS TEXT)  NULLS LAST, (((((t0.c0)AND(rt1.c2)))OR(t0.c2)) IN ()) ASC  NULLS LAST, ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))OR(((((rt1.c1)OR(t0.c1)))AND(t0.c0)))))AND(((rt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((rt1.c1)AND(x'')))OR(rt1.c0)))OR(t0.c1)))OR(NULL)))OR(rt1.c2)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM t0, rt1 ORDER BY CAST(((rt1.c2) NOTNULL) AS TEXT)  NULLS LAST, (((((t0.c0)AND(rt1.c2)))OR(t0.c2)) IN ()) ASC  NULLS LAST, ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))OR(((((rt1.c1)OR(t0.c1)))AND(t0.c0)))))AND(((rt1.c0) ISNULL))));
SELECT COUNT(*) FROM t0, rt1 WHERE (CAST(((((((((((((rt1.c1)AND(x'')))OR(rt1.c0)))OR(t0.c1)))OR(NULL)))OR(rt1.c2)))AND(NULL)) AS NUMERIC)) ORDER BY CAST(((rt1.c2) NOTNULL) AS TEXT)  NULLS LAST, (((((t0.c0)AND(rt1.c2)))OR(t0.c2)) IN ()) ASC  NULLS LAST, ((((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))OR(((((rt1.c1)OR(t0.c1)))AND(t0.c0)))))AND(((rt1.c0) ISNULL)));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN vt1.c1 WHEN t0.c2 THEN rt1.c0 WHEN vt1.c1 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c0  WHEN rt1.c1 THEN vt1.c1 WHEN t0.c2 THEN rt1.c0 WHEN vt1.c1 THEN NULL END IN ())) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN vt1.c1 WHEN t0.c2 THEN rt1.c0 WHEN vt1.c1 THEN NULL END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE rt1.c0  WHEN rt1.c1 THEN vt1.c1 WHEN t0.c2 THEN rt1.c0 WHEN vt1.c1 THEN NULL END IN ())) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((CASE rt1.c0  WHEN rt1.c1 THEN vt1.c1 WHEN t0.c2 THEN rt1.c0 WHEN vt1.c1 THEN NULL END IN ()));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE (((vt0.c0))>((rt1.c1)))  WHEN CAST(rt1.c0 AS REAL) THEN (vt0.c0 IN (NULL)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt1.c0 IN ()))||(((vt1.c1)>(rt1.c0)))) DESC, vt1.c0, (((NULL))<(((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>((rt1.c1)))  WHEN CAST(rt1.c0 AS REAL) THEN (vt0.c0 IN (NULL)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((vt1.c0 IN ()))||(((vt1.c1)>(rt1.c0)))) DESC, vt1.c0, (((NULL))<(((NOT (vt1.c0))))));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE (((vt0.c0))>((rt1.c1)))  WHEN CAST(rt1.c0 AS REAL) THEN (vt0.c0 IN (NULL)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt1.c0 IN ()))||(((vt1.c1)>(rt1.c0)))) DESC, vt1.c0, (((NULL))<(((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE (((vt0.c0))>((rt1.c1)))  WHEN CAST(rt1.c0 AS REAL) THEN (vt0.c0 IN (NULL)) ELSE (~ (vt0.c0)) END) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY (((vt1.c0 IN ()))||(((vt1.c1)>(rt1.c0)))) DESC, vt1.c0, (((NULL))<(((NOT (vt1.c0))))));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (CASE (((vt0.c0))>((rt1.c1)))  WHEN CAST(rt1.c0 AS REAL) THEN (vt0.c0 IN (NULL)) ELSE (~ (vt0.c0)) END) ORDER BY (((vt1.c0 IN ()))||(((vt1.c1)>(rt1.c0)))) DESC, vt1.c0, (((NULL))<(((NOT (vt1.c0)))));
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN vt0 ON ((UNICODE(vt0.c1)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN 'HV\rh' THEN t0.c1 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END)) INNER JOIN vt1 ON 'Ew7' WHERE (json_valid(CASE vt1.c2  WHEN vt1.c2 THEN rt1.c2 END)) ORDER BY (NOT (((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CASE vt1.c2  WHEN vt1.c2 THEN rt1.c2 END)) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON ((UNICODE(vt0.c1)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN 'HV\rh' THEN t0.c1 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END)) INNER JOIN vt1 ON 'Ew7' ORDER BY (NOT (((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, rt1 LEFT OUTER JOIN vt0 ON ((UNICODE(vt0.c1)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN 'HV\rh' THEN t0.c1 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END)) INNER JOIN vt1 ON 'Ew7' WHERE (json_valid(CASE vt1.c2  WHEN vt1.c2 THEN rt1.c2 END)) ORDER BY (NOT (((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CASE vt1.c2  WHEN vt1.c2 THEN rt1.c2 END)) IS TRUE)  as count FROM t0, rt1 LEFT OUTER JOIN vt0 ON ((UNICODE(vt0.c1)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN 'HV\rh' THEN t0.c1 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END) AND (CASE WHEN rt1.c0 THEN vt0.c0 WHEN vt1.c2 THEN rt1.c0 WHEN t0.c2 THEN rt1.c1 ELSE rt1.c0 END)) INNER JOIN vt1 ON 'Ew7' ORDER BY (NOT (((t0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (json_quote(((vt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt0.c0)OR(t0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (json_quote(((vt0.c0)OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((json_quote(((vt0.c0)OR(t0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (json_quote(((vt0.c0)OR(t0.c0))));
SELECT ALL * FROM vt0 WHERE (RTRIM(vt0.c1 COLLATE NOCASE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), CASE (vt0.c0 IN (0.8092353895673061))  WHEN vt0.c2 THEN ((vt0.c1)AND(vt0.c1)) ELSE json(0.9996550558380934) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), CASE (vt0.c0 IN (0.8092353895673061))  WHEN vt0.c2 THEN ((vt0.c1)AND(vt0.c1)) ELSE json(0.9996550558380934) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (RTRIM(vt0.c1 COLLATE NOCASE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), CASE (vt0.c0 IN (0.8092353895673061))  WHEN vt0.c2 THEN ((vt0.c1)AND(vt0.c1)) ELSE json(0.9996550558380934) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(vt0.c1 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), CASE (vt0.c0 IN (0.8092353895673061))  WHEN vt0.c2 THEN ((vt0.c1)AND(vt0.c1)) ELSE json(0.9996550558380934) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (RTRIM(vt0.c1 COLLATE NOCASE)) ORDER BY (((vt0.c1)) NOT BETWEEN ((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), CASE (vt0.c0 IN (0.8092353895673061))  WHEN vt0.c2 THEN ((vt0.c1)AND(vt0.c1)) ELSE json(0.9996550558380934) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((NULL) NOTNULL) AS REAL)) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((NULL) NOTNULL) AS REAL)) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((NULL) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((NULL) NOTNULL) AS REAL)) ORDER BY vt1.c1 DESC;
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN (((NULL, rt1.c2, vt0.c0, vt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c1, NULL, t0.c0, t0.c0, rt1.c1)) AND ((rt1.c2, t0.c2, vt1.c0, vt1.c0, vt0.c2))) THEN ((t0.c2) NOT NULL) WHEN ((vt0.c1)%(t0.c2)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN (+ (vt0.c1)) WHEN ((vt1.c2)%(rt1.c0)) THEN CAST(vt1.c1 AS TEXT) WHEN NULL THEN (rt1.c1 IN (rt1.c1, t0.c1)) ELSE t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL, rt1.c2, vt0.c0, vt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c1, NULL, t0.c0, t0.c0, rt1.c1)) AND ((rt1.c2, t0.c2, vt1.c0, vt1.c0, vt0.c2))) THEN ((t0.c2) NOT NULL) WHEN ((vt0.c1)%(t0.c2)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN (+ (vt0.c1)) WHEN ((vt1.c2)%(rt1.c0)) THEN CAST(vt1.c1 AS TEXT) WHEN NULL THEN (rt1.c1 IN (rt1.c1, t0.c1)) ELSE t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN (((NULL, rt1.c2, vt0.c0, vt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c1, NULL, t0.c0, t0.c0, rt1.c1)) AND ((rt1.c2, t0.c2, vt1.c0, vt1.c0, vt0.c2))) THEN ((t0.c2) NOT NULL) WHEN ((vt0.c1)%(t0.c2)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN (+ (vt0.c1)) WHEN ((vt1.c2)%(rt1.c0)) THEN CAST(vt1.c1 AS TEXT) WHEN NULL THEN (rt1.c1 IN (rt1.c1, t0.c1)) ELSE t0.c2 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL, rt1.c2, vt0.c0, vt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c1, NULL, t0.c0, t0.c0, rt1.c1)) AND ((rt1.c2, t0.c2, vt1.c0, vt1.c0, vt0.c2))) THEN ((t0.c2) NOT NULL) WHEN ((vt0.c1)%(t0.c2)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN (+ (vt0.c1)) WHEN ((vt1.c2)%(rt1.c0)) THEN CAST(vt1.c1 AS TEXT) WHEN NULL THEN (rt1.c1 IN (rt1.c1, t0.c1)) ELSE t0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN (((NULL, rt1.c2, vt0.c0, vt1.c2, rt1.c2)) NOT BETWEEN ((vt0.c1, NULL, t0.c0, t0.c0, rt1.c1)) AND ((rt1.c2, t0.c2, vt1.c0, vt1.c0, vt0.c2))) THEN ((t0.c2) NOT NULL) WHEN ((vt0.c1)%(t0.c2)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) WHEN t0.c2 COLLATE RTRIM THEN (+ (vt0.c1)) WHEN ((vt1.c2)%(rt1.c0)) THEN CAST(vt1.c1 AS TEXT) WHEN NULL THEN (rt1.c1 IN (rt1.c1, t0.c1)) ELSE t0.c2 COLLATE BINARY END);
SELECT * FROM vt0, t0 WHERE ((((((NULL) NOT NULL)))>=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT NULL)))>=((vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((NULL) NOT NULL)))>=((vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((NULL) NOT NULL)))>=((vt0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((NULL) NOT NULL)))>=((vt0.c1))));
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (CAST(rt1.c1 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT CAST(t0.c1 AS REAL))) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c1 END)) DESC);
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT CAST(t0.c1 AS REAL))) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(t0.c1 AS REAL))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c1 END)) DESC);
SELECT ALL * FROM t0 WHERE (LOWER(DISTINCT CAST(t0.c1 AS REAL))) ORDER BY (NOT (CASE WHEN t0.c0 THEN t0.c1 END)) DESC;
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1)AND(vt0.c2))) NOTNULL) WHERE ((vt1.c2 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST, CASE HEX(vt1.c2)  WHEN ((((0X24c44c22)AND(t0.c2)))AND(t0.c1)) THEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE t0.c2 END ELSE CASE WHEN t0.c1 THEN t0.c2 ELSE vt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1)AND(vt0.c2))) NOTNULL) ORDER BY ((vt1.c1)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST, CASE HEX(vt1.c2)  WHEN ((((0X24c44c22)AND(t0.c2)))AND(t0.c1)) THEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE t0.c2 END ELSE CASE WHEN t0.c1 THEN t0.c2 ELSE vt1.c1 END END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1)AND(vt0.c2))) NOTNULL) WHERE ((vt1.c2 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST, CASE HEX(vt1.c2)  WHEN ((((0X24c44c22)AND(t0.c2)))AND(t0.c1)) THEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE t0.c2 END ELSE CASE WHEN t0.c1 THEN t0.c2 ELSE vt1.c1 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt1.c2 IN (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1)AND(vt0.c2))) NOTNULL) ORDER BY ((vt1.c1)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST, CASE HEX(vt1.c2)  WHEN ((((0X24c44c22)AND(t0.c2)))AND(t0.c1)) THEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE t0.c2 END ELSE CASE WHEN t0.c1 THEN t0.c2 ELSE vt1.c1 END END  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 FULL OUTER JOIN vt0 ON ((((vt1.c1)AND(vt0.c2))) NOTNULL) WHERE ((vt1.c2 IN (vt0.c1)) COLLATE NOCASE) ORDER BY ((vt1.c1)IS(vt0.c0 COLLATE RTRIM))  NULLS LAST, CASE HEX(vt1.c2)  WHEN ((((0X24c44c22)AND(t0.c2)))AND(t0.c1)) THEN CASE WHEN vt0.c1 THEN vt1.c1 ELSE t0.c2 END ELSE CASE WHEN t0.c1 THEN t0.c2 ELSE vt1.c1 END END  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c2)))AND(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c2)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c2)))AND(rt1.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt1.c2)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((((vt0.c1)AND(vt1.c2)))AND(rt1.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (LOWER(t0.c2) COLLATE BINARY) ORDER BY (((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))))<<((((vt1.c0))>=((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY (((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))))<<((((vt1.c0))>=((rt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (LOWER(t0.c2) COLLATE BINARY) ORDER BY (((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))))<<((((vt1.c0))>=((rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(t0.c2) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, rt1 ORDER BY (((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))))<<((((vt1.c0))>=((rt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt1, rt1 WHERE (LOWER(t0.c2) COLLATE BINARY) ORDER BY (((((t0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt1.c2))))<<((((vt1.c0))>=((rt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON '1540587353' COLLATE NOCASE FULL OUTER JOIN vt1 ON ((TIME('1398917137', t0.c2, vt0.c1)) IS FALSE) FULL OUTER JOIN t0 ON ((((vt0.c1) NOT NULL))>>(x'')) WHERE ((json_array(vt1.c1, t0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(vt1.c1, t0.c1) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '1540587353' COLLATE NOCASE FULL OUTER JOIN vt1 ON ((TIME('1398917137', t0.c2, vt0.c1)) IS FALSE) FULL OUTER JOIN t0 ON ((((vt0.c1) NOT NULL))>>(x'')));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON '1540587353' COLLATE NOCASE FULL OUTER JOIN vt1 ON ((TIME('1398917137', t0.c2, vt0.c1)) IS FALSE) FULL OUTER JOIN t0 ON ((((vt0.c1) NOT NULL))>>(x'')) WHERE ((json_array(vt1.c1, t0.c1) IN ()));
SELECT SUM(count) FROM (SELECT (((json_array(vt1.c1, t0.c1) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '1540587353' COLLATE NOCASE FULL OUTER JOIN vt1 ON ((TIME('1398917137', t0.c2, vt0.c1)) IS FALSE) FULL OUTER JOIN t0 ON ((((vt0.c1) NOT NULL))>>(x'')));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (-1.487926543E9)))))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (-1.487926543E9)))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (-1.487926543E9)))))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(rt1.c2)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (-1.487926543E9)))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c0)OR(rt1.c2)))AND(((rt1.c1) NOT BETWEEN (rt1.c2) AND (-1.487926543E9)))))AND(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt1 WHERE ((('1973485350') IS FALSE)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1973485350') IS FALSE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE ((('1973485350') IS FALSE)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('1973485350') IS FALSE)) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt1 WHERE ((('1973485350') IS FALSE)) ORDER BY CAST(rt1.c2 COLLATE NOCASE AS REAL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (json(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json(((vt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json(((vt0.c1) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json(((vt0.c1) IS FALSE)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt1.c0)!=(x''))  WHEN ((vt0.c0) IS FALSE) THEN vt1.c1 END WHERE ((NOT (((((0.2165511427559742)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT (((((0.2165511427559742)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt1.c0)<>(x''))  WHEN ((vt0.c0) IS FALSE) THEN vt1.c1 END ORDER BY NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt1.c0)!=(x''))  WHEN ((vt0.c0) IS FALSE) THEN vt1.c1 END WHERE ((NOT (((((0.2165511427559742)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT (((((0.2165511427559742)AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt1.c0)<>(x''))  WHEN ((vt0.c0) IS FALSE) THEN vt1.c1 END ORDER BY NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON CAST(vt0.c0 AS TEXT) COLLATE NOCASE FULL OUTER JOIN t0 ON CASE ((vt1.c0)!=(x''))  WHEN ((vt0.c0) IS FALSE) THEN vt1.c1 END WHERE ((NOT (((((0.2165511427559742)AND(vt1.c1)))AND(vt1.c1))))) ORDER BY NULL;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))OR(vt0.c0)))AND(t0.c1)), ((rt1.c2) NOT BETWEEN (6.16844322E8) AND (t0.c2))) INNER JOIN vt0 ON ((0.9623826914750289)>>(0.5615859407896255)) COLLATE BINARY CROSS JOIN rt1 ON ((((t0.c2) IS FALSE))+(x'aa4e')) WHERE (CAST(t0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))OR(vt0.c0)))AND(t0.c1)), ((rt1.c2) NOT BETWEEN (6.16844322E8) AND (t0.c2))) INNER JOIN vt0 ON ((0.9623826914750289)>>(0.5615859407896255)) COLLATE BINARY CROSS JOIN rt1 ON ((((t0.c2) IS FALSE))+(x'aa4e')));
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))OR(vt0.c0)))AND(t0.c1)), ((rt1.c2) NOT BETWEEN (6.16844322E8) AND (t0.c2))) INNER JOIN vt0 ON ((0.9623826914750289)>>(0.5615859407896255)) COLLATE BINARY CROSS JOIN rt1 ON ((((t0.c2) IS FALSE))+(x'aa4e')) WHERE (CAST(t0.c2 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON IFNULL(DISTINCT ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c0)))OR(vt0.c0)))AND(t0.c1)), ((rt1.c2) NOT BETWEEN (6.16844322E8) AND (t0.c2))) INNER JOIN vt0 ON ((0.9623826914750289)>>(0.5615859407896255)) COLLATE BINARY CROSS JOIN rt1 ON ((((t0.c2) IS FALSE))+(x'aa4e')));
SELECT * FROM rt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM rt1, t0);
SELECT * FROM rt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, 't^')) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, 't^')) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, 't^')) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, 't^')) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, 't^')) NOT BETWEEN ((t0.c2, t0.c2, t0.c2)) AND ((t0.c1, t0.c0, t0.c0))) COLLATE BINARY);
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c2 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt0.c1, 0.3273745710791274))) FULL OUTER JOIN rt1 ON ((((rt1.c0 IN ()), (((t0.c0)) BETWEEN (('Z,s')) AND ((rt1.c2))), ((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)*(vt1.c2)), IFNULL(vt0.c0, vt0.c1), ((vt0.c2) ISNULL)))) WHERE ((((CAST(vt1.c2 AS INTEGER)))>((((rt1.c0) BETWEEN (rt1.c1) AND (0.8168152035535712))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS INTEGER)))>((((rt1.c0) BETWEEN (rt1.c1) AND (0.8168152035535712)))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c2 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt0.c1, 0.3273745710791274))) FULL OUTER JOIN rt1 ON ((((rt1.c0 IN ()), (((t0.c0)) BETWEEN (('Z,s')) AND ((rt1.c2))), ((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)*(vt1.c2)), IFNULL(vt0.c0, vt0.c1), ((vt0.c2) ISNULL)))));
SELECT * FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c2 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt0.c1, 0.3273745710791274))) FULL OUTER JOIN rt1 ON ((((rt1.c0 IN ()), (((t0.c0)) BETWEEN (('Z,s')) AND ((rt1.c2))), ((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)*(vt1.c2)), IFNULL(vt0.c0, vt0.c1), ((vt0.c2) ISNULL)))) WHERE ((((CAST(vt1.c2 AS INTEGER)))>((((rt1.c0) BETWEEN (rt1.c1) AND (0.8168152035535712))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c2 AS INTEGER)))>((((rt1.c0) BETWEEN (rt1.c1) AND (0.8168152035535712)))))) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c2 WHEN rt1.c2 THEN rt1.c1 WHEN vt1.c2 THEN vt0.c0 END)>=(LIKELIHOOD(DISTINCT vt0.c1, 0.3273745710791274))) FULL OUTER JOIN rt1 ON ((((rt1.c0 IN ()), (((t0.c0)) BETWEEN (('Z,s')) AND ((rt1.c2))), ((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)*(vt1.c2)), IFNULL(vt0.c0, vt0.c1), ((vt0.c2) ISNULL)))));
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN ((rt1.c1)&(vt1.c1)) ELSE (vt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt1.c0)) THEN ((rt1.c1)&(vt1.c1)) ELSE (vt1.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN ((rt1.c1)&(vt1.c1)) ELSE (vt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt1.c0)) THEN ((rt1.c1)&(vt1.c1)) ELSE (vt1.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL * FROM vt1, rt1 WHERE (CASE WHEN (+ (vt1.c0)) THEN ((rt1.c1)&(vt1.c1)) ELSE (vt1.c2 IN ()) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN 0.38800076692687424 ELSE vt0.c2 END))) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN 0.9048283065047188 END COLLATE BINARY, '-1e500';
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN 0.38800076692687424 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN 0.9048283065047188 END COLLATE BINARY, '-1e500');
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN 0.38800076692687424 ELSE vt0.c2 END))) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN 0.9048283065047188 END COLLATE BINARY, '-1e500';
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN 0.38800076692687424 ELSE vt0.c2 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN 0.9048283065047188 END COLLATE BINARY, '-1e500');
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (CASE WHEN vt0.c0 THEN 0.38800076692687424 ELSE vt0.c2 END))) ORDER BY CASE vt0.c2  WHEN vt0.c2 THEN 0.9048283065047188 END COLLATE BINARY, '-1e500';
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR((+ (rt1.c0)))))AND(((vt0.c2)-(rt1.c1)))))OR((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt1.c1)))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR((+ (rt1.c0)))))AND(((vt0.c2)-(rt1.c1)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR((+ (rt1.c0)))))AND(((vt0.c2)-(rt1.c1)))))OR((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt1.c1)))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR((+ (rt1.c0)))))AND(((vt0.c2)-(rt1.c1)))))OR((+ (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))OR(((rt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))OR((+ (rt1.c0)))))AND(((vt0.c2)-(rt1.c1)))))OR((+ (vt0.c0)))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c2 AS TEXT)) NOT BETWEEN (CASE WHEN rt1.c0 THEN 0xffffffff80ad4c8b END) AND (rt1.c1 COLLATE RTRIM)) INNER JOIN t0 ON ((t0.c1) ISNULL) RIGHT OUTER JOIN rt1 ON 0.9102337145239268 WHERE (((((rt1.c1)%(t0.c1))) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((vt0.c0))>=((t0.c0)))))) ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)%(t0.c1))) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((vt0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c2 AS TEXT)) NOT BETWEEN (CASE WHEN rt1.c0 THEN 0Xffffffff80ad4c8b END) AND (rt1.c1 COLLATE RTRIM)) INNER JOIN t0 ON ((t0.c1) ISNULL) RIGHT OUTER JOIN rt1 ON 0.9102337145239268 ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY ASC);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c2 AS TEXT)) NOT BETWEEN (CASE WHEN rt1.c0 THEN 0xffffffff80ad4c8b END) AND (rt1.c1 COLLATE RTRIM)) INNER JOIN t0 ON ((t0.c1) ISNULL) RIGHT OUTER JOIN rt1 ON 0.9102337145239268 WHERE (((((rt1.c1)%(t0.c1))) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((vt0.c0))>=((t0.c0)))))) ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)%(t0.c1))) NOT BETWEEN (((t0.c0) NOT NULL)) AND ((((vt0.c0))>=((t0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((CAST(vt1.c2 AS TEXT)) NOT BETWEEN (CASE WHEN rt1.c0 THEN 0Xffffffff80ad4c8b END) AND (rt1.c1 COLLATE RTRIM)) INNER JOIN t0 ON ((t0.c1) ISNULL) RIGHT OUTER JOIN rt1 ON 0.9102337145239268 ORDER BY ((vt1.c1) NOTNULL) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt0.c2)|(0.226171336634727)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2)|(0.226171336634727))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt0.c2)|(0.226171336634727)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c2)|(0.226171336634727))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((~ (((vt0.c2)|(0.226171336634727)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ('-293298843' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-293298843' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ('-293298843' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-293298843' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE ('-293298843' COLLATE NOCASE);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((((- (0.42313949807323925)))AND(0.7193025101015506)))AND(((((vt0.c2)OR(vt0.c0)))OR(''))))) ORDER BY '-1289800273';
SELECT SUM(count) FROM (SELECT ALL (((((((- (0.42313949807323925)))AND(0.7193025101015506)))AND(((((vt0.c2)OR(vt0.c0)))OR(''))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY '-1289800273');
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((((- (0.42313949807323925)))AND(0.7193025101015506)))AND(((((vt0.c2)OR(vt0.c0)))OR(''))))) ORDER BY '-1289800273';
SELECT SUM(count) FROM (SELECT ALL (((((((- (0.42313949807323925)))AND(0.7193025101015506)))AND(((((vt0.c2)OR(vt0.c0)))OR(''))))) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY '-1289800273');
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ((((((- (0.42313949807323925)))AND(0.7193025101015506)))AND(((((vt0.c2)OR(vt0.c0)))OR(''))))) ORDER BY '-1289800273';
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (('-1753864311') IS TRUE) WHERE (((((rt1.c1)<<(vt1.c1)))+(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(vt1.c1)))+(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (('-1753864311') IS TRUE));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (('-1753864311') IS TRUE) WHERE (((((rt1.c1)<<(vt1.c1)))+(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)<<(vt1.c1)))+(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1 INNER JOIN vt1 ON (('-1753864311') IS TRUE));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt1 ON (('-1753864311') IS TRUE) WHERE (((((rt1.c1)<<(vt1.c1)))+(CAST(rt1.c1 AS REAL))));
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((((((((vt0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))OR(vt1.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON NULL WHERE (((MIN(vt0.c2, x''))%(((vt0.c1)IS NOT(t0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c2))) COLLATE RTRIM, (NOT ((- (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c2, x''))%(((vt0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((((((((vt0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))OR(vt1.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON NULL ORDER BY (((vt1.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c2))) COLLATE RTRIM, (NOT ((- (t0.c1)))) DESC);
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((((((((vt0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))OR(vt1.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON NULL WHERE (((MIN(vt0.c2, x''))%(((vt0.c1)IS NOT(t0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c2))) COLLATE RTRIM, (NOT ((- (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((MIN(vt0.c2, x''))%(((vt0.c1)IS NOT(t0.c1))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((((((((vt0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))OR(vt1.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON NULL ORDER BY (((vt1.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c2))) COLLATE RTRIM, (NOT ((- (t0.c1)))) DESC);
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((((((((vt0.c2)AND(t0.c2)))AND(t0.c2)))OR(t0.c0)))OR(vt1.c1)) COLLATE NOCASE RIGHT OUTER JOIN rt1 ON NULL WHERE (((MIN(vt0.c2, x''))%(((vt0.c1)IS NOT(t0.c1))))) ORDER BY (((vt1.c1)) BETWEEN ((vt0.c2)) AND ((vt1.c2))) COLLATE RTRIM, (NOT ((- (t0.c1)))) DESC;
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY (vt1.c2 IN ((((t0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, vt1.c1)) AND ((NULL, t0.c2, rt1.c0)))))  NULLS FIRST, (('-647879365')OR(((t0.c1)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (vt1.c2 IN ((((t0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, vt1.c1)) AND ((NULL, t0.c2, rt1.c0)))))  NULLS FIRST, (('-647879365')OR(((t0.c1)<(vt1.c0)))));
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY (vt1.c2 IN ((((t0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, vt1.c1)) AND ((NULL, t0.c2, rt1.c0)))))  NULLS FIRST, (('-647879365')OR(((t0.c1)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (vt1.c2 IN ((((t0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, vt1.c1)) AND ((NULL, t0.c2, rt1.c0)))))  NULLS FIRST, (('-647879365')OR(((t0.c1)<(vt1.c0)))));
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY (vt1.c2 IN ((((t0.c1, rt1.c1, rt1.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, vt1.c1)) AND ((NULL, t0.c2, rt1.c0)))))  NULLS FIRST, (('-647879365')OR(((t0.c1)<(vt1.c0))));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))IS NOT((vt0.c0 IN ())))) ORDER BY CASE vt0.c2  WHEN rt1.c1 THEN ((rt1.c2)OR(vt1.c1)) WHEN ((vt1.c1) BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt1.c2 WHEN rt1.c1 THEN (rt1.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY CASE vt0.c2  WHEN rt1.c1 THEN ((rt1.c2)OR(vt1.c1)) WHEN ((vt1.c1) BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt1.c2 WHEN rt1.c1 THEN (rt1.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))IS NOT((vt0.c0 IN ())))) ORDER BY CASE vt0.c2  WHEN rt1.c1 THEN ((rt1.c2)OR(vt1.c1)) WHEN ((vt1.c1) BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt1.c2 WHEN rt1.c1 THEN (rt1.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))IS NOT((vt0.c0 IN ())))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY CASE vt0.c2  WHEN rt1.c1 THEN ((rt1.c2)OR(vt1.c1)) WHEN ((vt1.c1) BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt1.c2 WHEN rt1.c1 THEN (rt1.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))IS NOT((vt0.c0 IN ())))) ORDER BY CASE vt0.c2  WHEN rt1.c1 THEN ((rt1.c2)OR(vt1.c1)) WHEN ((vt1.c1) BETWEEN (rt1.c0) AND (vt1.c2)) THEN vt1.c2 WHEN rt1.c1 THEN (rt1.c2 IN ()) END  NULLS LAST;
SELECT * FROM vt0, t0, vt1, rt1 WHERE ((((NOT (t0.c0)))>=(-1.945033463E9 COLLATE RTRIM))) ORDER BY UNICODE(x'');
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))>=(-1.945033463E9 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY UNICODE(x''));
SELECT * FROM vt0, t0, vt1, rt1 WHERE ((((NOT (t0.c0)))>=(-1.945033463E9 COLLATE RTRIM))) ORDER BY UNICODE(x'');
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0)))>=(-1.945033463E9 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY UNICODE(x''));
SELECT * FROM vt0, t0, vt1, rt1 WHERE ((((NOT (t0.c0)))>=(-1.945033463E9 COLLATE RTRIM))) ORDER BY UNICODE(x'');
SELECT * FROM vt1, vt0, rt1 WHERE ((((((rt1.c1) NOTNULL)))<=((RTRIM(vt1.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(CASE WHEN vt0.c2 THEN rt1.c1 END)))AND((vt1.c0 IN (rt1.c2))))  NULLS LAST, ((((rt1.c1) IS FALSE)) NOT NULL) ASC, ABS(vt0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) NOTNULL)))<=((RTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((((vt0.c0 IN ()))OR(CASE WHEN vt0.c2 THEN rt1.c1 END)))AND((vt1.c0 IN (rt1.c2))))  NULLS LAST, ((((rt1.c1) IS FALSE)) NOT NULL) ASC, ABS(vt0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt1, vt0, rt1 WHERE ((((((rt1.c1) NOTNULL)))<=((RTRIM(vt1.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(CASE WHEN vt0.c2 THEN rt1.c1 END)))AND((vt1.c0 IN (rt1.c2))))  NULLS LAST, ((((rt1.c1) IS FALSE)) NOT NULL) ASC, ABS(vt0.c0 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1) NOTNULL)))<=((RTRIM(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY (((((vt0.c0 IN ()))OR(CASE WHEN vt0.c2 THEN rt1.c1 END)))AND((vt1.c0 IN (rt1.c2))))  NULLS LAST, ((((rt1.c1) IS FALSE)) NOT NULL) ASC, ABS(vt0.c0 COLLATE NOCASE) ASC);
SELECT * FROM vt1, vt0, rt1 WHERE ((((((rt1.c1) NOTNULL)))<=((RTRIM(vt1.c0))))) ORDER BY (((((vt0.c0 IN ()))OR(CASE WHEN vt0.c2 THEN rt1.c1 END)))AND((vt1.c0 IN (rt1.c2))))  NULLS LAST, ((((rt1.c1) IS FALSE)) NOT NULL) ASC, ABS(vt0.c0 COLLATE NOCASE) ASC;
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (CAST(((0.5748327771019938) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((0.5748327771019938) ISNULL) AS REAL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (CAST(((0.5748327771019938) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((0.5748327771019938) ISNULL) AS REAL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0);
SELECT ALL * FROM rt1, t0, vt1, vt0 WHERE (CAST(((0.5748327771019938) ISNULL) AS REAL));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ ((((t0.c2, vt0.c0, vt1.c1))>=((t0.c2, vt1.c2, vt1.c1)))))) ORDER BY (((vt0.c0 IN (t0.c1, t0.c0)))IS((((vt1.c1)) BETWEEN (('481579237')) AND ((vt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2, vt0.c0, vt1.c1))>=((t0.c2, vt1.c2, vt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0 IN (t0.c1, t0.c0)))IS((((vt1.c1)) BETWEEN (('481579237')) AND ((vt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ ((((t0.c2, vt0.c0, vt1.c1))>=((t0.c2, vt1.c2, vt1.c1)))))) ORDER BY (((vt0.c0 IN (t0.c1, t0.c0)))IS((((vt1.c1)) BETWEEN (('481579237')) AND ((vt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2, vt0.c0, vt1.c1))>=((t0.c2, vt1.c2, vt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt0.c0 IN (t0.c1, t0.c0)))IS((((vt1.c1)) BETWEEN (('481579237')) AND ((vt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((~ ((((t0.c2, vt0.c0, vt1.c1))>=((t0.c2, vt1.c2, vt1.c1)))))) ORDER BY (((vt0.c0 IN (t0.c1, t0.c0)))IS((((vt1.c1)) BETWEEN (('481579237')) AND ((vt0.c2)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)>>('Hw')) THEN ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c2)) ELSE CAST(vt1.c1 AS BLOB) END WHERE ((+ (((rt1.c0)/(rt1.c0))))) ORDER BY (((- (rt1.c0)))<=(GLOB(t0.c2, vt0.c1))), CASE (t0.c2 IN (rt1.c1))  WHEN (((vt0.c2, '579351781', rt1.c1))>=((vt1.c2, '-1581771386', vt1.c0))) THEN CAST(vt0.c2 AS BLOB) END, ((((((((((vt1.c2) IS TRUE))OR('-196215697')))AND(((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((((rt1.c2))==((vt1.c0))))))AND(((rt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)/(rt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)>>('Hw')) THEN ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c2)) ELSE CAST(vt1.c1 AS BLOB) END ORDER BY (((- (rt1.c0)))<=(GLOB(t0.c2, vt0.c1))), CASE (t0.c2 IN (rt1.c1))  WHEN (((vt0.c2, '579351781', rt1.c1))>=((vt1.c2, '-1581771386', vt1.c0))) THEN CAST(vt0.c2 AS BLOB) END, ((((((((((vt1.c2) IS TRUE))OR('-196215697')))AND(((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((((rt1.c2))==((vt1.c0))))))AND(((rt1.c0)LIKE(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)>>('Hw')) THEN ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c2)) ELSE CAST(vt1.c1 AS BLOB) END WHERE ((+ (((rt1.c0)/(rt1.c0))))) ORDER BY (((- (rt1.c0)))<=(GLOB(t0.c2, vt0.c1))), CASE (t0.c2 IN (rt1.c1))  WHEN (((vt0.c2, '579351781', rt1.c1))>=((vt1.c2, '-1581771386', vt1.c0))) THEN CAST(vt0.c2 AS BLOB) END, ((((((((((vt1.c2) IS TRUE))OR('-196215697')))AND(((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((((rt1.c2))==((vt1.c0))))))AND(((rt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c0)/(rt1.c0))))) IS TRUE)  as count FROM t0, vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)>>('Hw')) THEN ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c2)) ELSE CAST(vt1.c1 AS BLOB) END ORDER BY (((- (rt1.c0)))<=(GLOB(t0.c2, vt0.c1))), CASE (t0.c2 IN (rt1.c1))  WHEN (((vt0.c2, '579351781', rt1.c1))>=((vt1.c2, '-1581771386', vt1.c0))) THEN CAST(vt0.c2 AS BLOB) END, ((((((((((vt1.c2) IS TRUE))OR('-196215697')))AND(((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((((rt1.c2))==((vt1.c0))))))AND(((rt1.c0)LIKE(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM t0, vt1, rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt1.c1)>>('Hw')) THEN ((vt1.c2) BETWEEN (t0.c0) AND (vt1.c2)) ELSE CAST(vt1.c1 AS BLOB) END WHERE ((+ (((rt1.c0)/(rt1.c0))))) ORDER BY (((- (rt1.c0)))<=(GLOB(t0.c2, vt0.c1))), CASE (t0.c2 IN (rt1.c1))  WHEN (((vt0.c2, '579351781', rt1.c1))>=((vt1.c2, '-1581771386', vt1.c0))) THEN CAST(vt0.c2 AS BLOB) END, ((((((((((vt1.c2) IS TRUE))OR('-196215697')))AND(((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))))AND((((rt1.c2))==((vt1.c0))))))AND(((rt1.c0)LIKE(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1, vt1 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt1, vt1 NOT INDEXED, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)&(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((- ('312219377')) IN ())  NULLS FIRST, (((t0.c0 IN ()))>=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3172636944817475))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 END)&(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((- ('312219377')) IN ())  NULLS FIRST, (((t0.c0 IN ()))>=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3172636944817475))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)&(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((- ('312219377')) IN ())  NULLS FIRST, (((t0.c0 IN ()))>=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3172636944817475))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c1 END)&(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY ((- ('312219377')) IN ())  NULLS FIRST, (((t0.c0 IN ()))>=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3172636944817475))))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 END)&(CASE t0.c0  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END))) ORDER BY ((- ('312219377')) IN ())  NULLS FIRST, (((t0.c0 IN ()))>=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((0.3172636944817475))))) DESC  NULLS LAST;
SELECT * FROM vt1, t0, vt0, rt1 WHERE ((((t0.c2 IN ()))-(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))-(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE ((((t0.c2 IN ()))-(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ()))-(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE ((((t0.c2 IN ()))-(t0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((0.6166759952587885)AND(vt0.c2)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((0.6166759952587885)AND(vt0.c2)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((0.6166759952587885)AND(vt0.c2)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((0.6166759952587885)AND(vt0.c2)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c2)) BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((0.6166759952587885)AND(vt0.c2)))AND(vt0.c0))))));
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0 IN (t0.c2)))OR(((((rt1.c2)OR(x'')))OR(t0.c2)))))AND(PRINTF(rt1.c2, t0.c0, t0.c0))) INNER JOIN rt1 ON vt0.c1 WHERE ((((vt0.c2)GLOB(t0.c0)) IN (((vt1.c2)AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)GLOB(t0.c0)) IN (((vt1.c2)AND(t0.c1))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0 IN (t0.c2)))OR(((((rt1.c2)OR(x'')))OR(t0.c2)))))AND(PRINTF(rt1.c2, t0.c0, t0.c0))) INNER JOIN rt1 ON vt0.c1);
SELECT ALL * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0 IN (t0.c2)))OR(((((rt1.c2)OR(x'')))OR(t0.c2)))))AND(PRINTF(rt1.c2, t0.c0, t0.c0))) INNER JOIN rt1 ON vt0.c1 WHERE ((((vt0.c2)GLOB(t0.c0)) IN (((vt1.c2)AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c2)GLOB(t0.c0)) IN (((vt1.c2)AND(t0.c1))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((t0.c0 IN (t0.c2)))OR(((((rt1.c2)OR(x'')))OR(t0.c2)))))AND(PRINTF(rt1.c2, t0.c0, t0.c0))) INNER JOIN rt1 ON vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (CAST(((vt0.c2)!=(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)!=(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (CAST(((vt0.c2)!=(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c2)!=(t0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt1 WHERE (CAST(((vt0.c2)!=(t0.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (CASE WHEN 0.4911413945922899 COLLATE BINARY THEN vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.4911413945922899 COLLATE BINARY THEN vt1.c1 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN 0.4911413945922899 COLLATE BINARY THEN vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.4911413945922899 COLLATE BINARY THEN vt1.c1 END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN 0.4911413945922899 COLLATE BINARY THEN vt1.c1 END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c2  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((((vt1.c2)OR(vt1.c1)))AND(vt1.c2))))) ORDER BY vt1.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(((rt1.c2) ISNULL) AS BLOB)) ORDER BY (((vt1.c1 IN (x''))) NOTNULL) ASC, ((vt1.c0 COLLATE NOCASE)&(((vt1.c0)-(rt1.c1)))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS TEXT))|((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((vt1.c1 IN (x''))) NOTNULL) ASC, ((vt1.c0 COLLATE NOCASE)&(((vt1.c0)-(rt1.c1)))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS TEXT))|((rt1.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(((rt1.c2) ISNULL) AS BLOB)) ORDER BY (((vt1.c1 IN (x''))) NOTNULL) ASC, ((vt1.c0 COLLATE NOCASE)&(((vt1.c0)-(rt1.c1)))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS TEXT))|((rt1.c1 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) ISNULL) AS BLOB)) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((vt1.c1 IN (x''))) NOTNULL) ASC, ((vt1.c0 COLLATE NOCASE)&(((vt1.c0)-(rt1.c1)))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS TEXT))|((rt1.c1 IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CAST(((rt1.c2) ISNULL) AS BLOB)) ORDER BY (((vt1.c1 IN (x''))) NOTNULL) ASC, ((vt1.c0 COLLATE NOCASE)&(((vt1.c0)-(rt1.c1)))) ASC  NULLS FIRST, ((CAST(rt1.c0 AS TEXT))|((rt1.c1 IN ()))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))>((t0.c2 IN ())))) ORDER BY ((NULLIF(DISTINCT 0X1221b884, '312219377'))>(((((t0.c2)OR(t0.c1)))AND(t0.c0))))  NULLS FIRST, CAST(GLOB(vt0.c2, t0.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))>((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((NULLIF(DISTINCT 0X1221b884, '312219377'))>(((((t0.c2)OR(t0.c1)))AND(t0.c0))))  NULLS FIRST, CAST(GLOB(vt0.c2, t0.c0) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))>((t0.c2 IN ())))) ORDER BY ((NULLIF(DISTINCT 0X1221b884, '312219377'))>(((((t0.c2)OR(t0.c1)))AND(t0.c0))))  NULLS FIRST, CAST(GLOB(vt0.c2, t0.c0) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c2 AS INTEGER))>((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((NULLIF(DISTINCT 0X1221b884, '312219377'))>(((((t0.c2)OR(t0.c1)))AND(t0.c0))))  NULLS FIRST, CAST(GLOB(vt0.c2, t0.c0) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c2 AS INTEGER))>((t0.c2 IN ())))) ORDER BY ((NULLIF(DISTINCT 0X1221b884, '312219377'))>(((((t0.c2)OR(t0.c1)))AND(t0.c0))))  NULLS FIRST, CAST(GLOB(vt0.c2, t0.c0) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN vt0.c2 THEN t0.c2 ELSE rt1.c2 END AS INTEGER) WHERE ((((((t0.c1))>((rt1.c1))))LIKE(((((t0.c1)AND(rt1.c0)))AND(t0.c1))))) ORDER BY 1.991940273E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))>((rt1.c1))))LIKE(((((t0.c1)AND(rt1.c0)))AND(t0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN vt0.c2 THEN t0.c2 ELSE rt1.c2 END AS INTEGER) ORDER BY 1.991940273E9 ASC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN vt0.c2 THEN t0.c2 ELSE rt1.c2 END AS INTEGER) WHERE ((((((t0.c1))>((rt1.c1))))LIKE(((((t0.c1)AND(rt1.c0)))AND(t0.c1))))) ORDER BY 1.991940273E9 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))>((rt1.c1))))LIKE(((((t0.c1)AND(rt1.c0)))AND(t0.c1))))) IS TRUE)  as count FROM vt1, t0, vt0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN vt0.c2 THEN t0.c2 ELSE rt1.c2 END AS INTEGER) ORDER BY 1.991940273E9 ASC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 LEFT OUTER JOIN rt1 ON CAST(CASE WHEN vt0.c2 THEN t0.c2 ELSE rt1.c2 END AS INTEGER) WHERE ((((((t0.c1))>((rt1.c1))))LIKE(((((t0.c1)AND(rt1.c0)))AND(t0.c1))))) ORDER BY 1.991940273E9 ASC;
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))) COLLATE NOCASE CROSS JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c0)!=(vt1.c1)))) AND ((rt1.c2))) WHERE (((((((vt1.c2)&(t0.c1)))AND(((vt0.c2)+(x'')))))AND(((vt1.c1)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)&(t0.c1)))AND(((vt0.c2)+(x'')))))AND(((vt1.c1)|(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))) COLLATE NOCASE CROSS JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c0)!=(vt1.c1)))) AND ((rt1.c2))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))) COLLATE NOCASE CROSS JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c0)!=(vt1.c1)))) AND ((rt1.c2))) WHERE (((((((vt1.c2)&(t0.c1)))AND(((vt0.c2)+(x'')))))AND(((vt1.c1)|(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c2)&(t0.c1)))AND(((vt0.c2)+(x'')))))AND(((vt1.c1)|(rt1.c2))))) IS TRUE)  as count FROM vt1, rt1 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))) COLLATE NOCASE CROSS JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c0)!=(vt1.c1)))) AND ((rt1.c2))));
SELECT COUNT(*) FROM vt1, rt1 CROSS JOIN vt0 ON (((NULL)) NOT BETWEEN ((rt1.c0)) AND ((vt0.c1))) COLLATE NOCASE CROSS JOIN t0 ON (((vt0.c1)) NOT BETWEEN ((((t0.c0)!=(vt1.c1)))) AND ((rt1.c2))) WHERE (((((((vt1.c2)&(t0.c1)))AND(((vt0.c2)+(x'')))))AND(((vt1.c1)|(rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c2);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (0.10358667329061189);
SELECT SUM(count) FROM (SELECT ((0.10358667329061189) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (0.10358667329061189);
SELECT SUM(count) FROM (SELECT ((0.10358667329061189) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (0.10358667329061189);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((t0.c1 COLLATE NOCASE)OR((~ (t0.c0)))))OR(t0.c1 COLLATE NOCASE)) WHERE ((('-267220551')==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))) AND ((CAST('0.9652690490761123' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-267220551')==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((t0.c1 COLLATE NOCASE)OR((~ (t0.c0)))))OR(t0.c1 COLLATE NOCASE)) ORDER BY (((rt1.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))) AND ((CAST('0.9652690490761123' AS INTEGER))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((t0.c1 COLLATE NOCASE)OR((~ (t0.c0)))))OR(t0.c1 COLLATE NOCASE)) WHERE ((('-267220551')==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))) AND ((CAST('0.9652690490761123' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-267220551')==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt1 ON ((((t0.c1 COLLATE NOCASE)OR((~ (t0.c0)))))OR(t0.c1 COLLATE NOCASE)) ORDER BY (((rt1.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))) AND ((CAST('0.9652690490761123' AS INTEGER))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN rt1 ON ((((t0.c1 COLLATE NOCASE)OR((~ (t0.c0)))))OR(t0.c1 COLLATE NOCASE)) WHERE ((('-267220551')==(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))) AND ((CAST('0.9652690490761123' AS INTEGER))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) IS TRUE) INNER JOIN vt0 ON vt0.c0 WHERE ((~ (x'ed36'))) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((t0.c1)AND(vt1.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (x'ed36'))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) IS TRUE) INNER JOIN vt0 ON vt0.c0 ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((t0.c1)AND(vt1.c2)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) IS TRUE) INNER JOIN vt0 ON vt0.c0 WHERE ((~ (x'ed36'))) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((t0.c1)AND(vt1.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((~ (x'ed36'))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) IS TRUE) INNER JOIN vt0 ON vt0.c0 ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((t0.c1)AND(vt1.c2)) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CASE rt1.c0  WHEN vt0.c0 THEN rt1.c2 END) IS TRUE) INNER JOIN vt0 ON vt0.c0 WHERE ((~ (x'ed36'))) ORDER BY ((vt1.c0 COLLATE RTRIM) ISNULL)  NULLS FIRST, ((t0.c1)AND(vt1.c2)) COLLATE BINARY ASC;
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE (((((((t0.c2))>((vt0.c2)))))<>((CASE WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN 0x12c5ebbf THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY ((TRIM(vt0.c1))!=(CASE 0.6176411389780264  WHEN rt1.c2 THEN t0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, json_insert(((vt0.c2) BETWEEN ('649987257') AND (vt0.c0)), CASE vt1.c1  WHEN rt1.c1 THEN rt1.c2 END, t0.c1 COLLATE NOCASE) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2))>((vt0.c2)))))!=((CASE WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN 0X12c5ebbf THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY ((TRIM(vt0.c1))!=(CASE 0.6176411389780264  WHEN rt1.c2 THEN t0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, json_insert(((vt0.c2) BETWEEN ('649987257') AND (vt0.c0)), CASE vt1.c1  WHEN rt1.c1 THEN rt1.c2 END, t0.c1 COLLATE NOCASE) DESC  NULLS FIRST, NULL);
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE (((((((t0.c2))>((vt0.c2)))))<>((CASE WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN 0x12c5ebbf THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY ((TRIM(vt0.c1))!=(CASE 0.6176411389780264  WHEN rt1.c2 THEN t0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, json_insert(((vt0.c2) BETWEEN ('649987257') AND (vt0.c0)), CASE vt1.c1  WHEN rt1.c1 THEN rt1.c2 END, t0.c1 COLLATE NOCASE) DESC  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2))>((vt0.c2)))))!=((CASE WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN 0X12c5ebbf THEN vt0.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY ((TRIM(vt0.c1))!=(CASE 0.6176411389780264  WHEN rt1.c2 THEN t0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, json_insert(((vt0.c2) BETWEEN ('649987257') AND (vt0.c0)), CASE vt1.c1  WHEN rt1.c1 THEN rt1.c2 END, t0.c1 COLLATE NOCASE) DESC  NULLS FIRST, NULL);
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE (((((((t0.c2))>((vt0.c2)))))<>((CASE WHEN vt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN vt1.c1 WHEN 0x12c5ebbf THEN vt0.c0 ELSE vt1.c0 END)))) ORDER BY ((TRIM(vt0.c1))!=(CASE 0.6176411389780264  WHEN rt1.c2 THEN t0.c1 ELSE t0.c0 END)) ASC  NULLS FIRST, json_insert(((vt0.c2) BETWEEN ('649987257') AND (vt0.c0)), CASE vt1.c1  WHEN rt1.c1 THEN rt1.c2 END, t0.c1 COLLATE NOCASE) DESC  NULLS FIRST, NULL;
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((((((t0.c0) IS FALSE))OR(((rt1.c1)|(t0.c1)))))OR(CAST(vt1.c2 AS NUMERIC))) WHERE (CASE WHEN 0.9244654117784632 COLLATE NOCASE THEN ((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9244654117784632 COLLATE NOCASE THEN ((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((((((t0.c0) IS FALSE))OR(((rt1.c1)|(t0.c1)))))OR(CAST(vt1.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((((((t0.c0) IS FALSE))OR(((rt1.c1)|(t0.c1)))))OR(CAST(vt1.c2 AS NUMERIC))) WHERE (CASE WHEN 0.9244654117784632 COLLATE NOCASE THEN ((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.9244654117784632 COLLATE NOCASE THEN ((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)) END) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((((((t0.c0) IS FALSE))OR(((rt1.c1)|(t0.c1)))))OR(CAST(vt1.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((((((t0.c0) IS FALSE))OR(((rt1.c1)|(t0.c1)))))OR(CAST(vt1.c2 AS NUMERIC))) WHERE (CASE WHEN 0.9244654117784632 COLLATE NOCASE THEN ((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)) END);
SELECT ALL * FROM rt1, t0, vt0 WHERE ((- (vt0.c2)) COLLATE BINARY) ORDER BY 0x2eb5069 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY 0X2eb5069 DESC);
SELECT ALL * FROM rt1, t0, vt0 WHERE ((- (vt0.c2)) COLLATE BINARY) ORDER BY 0x2eb5069 DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY 0X2eb5069 DESC);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((~ (t0.c1))) NOT BETWEEN (0xffffffffbdff308f) AND (((((vt1.c2)AND(t0.c1)))OR(-3.33988423E8))))) ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t0.c2 AS BLOB) ELSE 0.3840321901177738 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1))) NOT BETWEEN (0Xffffffffbdff308f) AND (((((vt1.c2)AND(t0.c1)))OR(-3.33988423E8))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t0.c2 AS BLOB) ELSE 0.3840321901177738 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((~ (t0.c1))) NOT BETWEEN (0xffffffffbdff308f) AND (((((vt1.c2)AND(t0.c1)))OR(-3.33988423E8))))) ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t0.c2 AS BLOB) ELSE 0.3840321901177738 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1))) NOT BETWEEN (0Xffffffffbdff308f) AND (((((vt1.c2)AND(t0.c1)))OR(-3.33988423E8))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t0.c2 AS BLOB) ELSE 0.3840321901177738 END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((~ (t0.c1))) NOT BETWEEN (0xffffffffbdff308f) AND (((((vt1.c2)AND(t0.c1)))OR(-3.33988423E8))))) ORDER BY CASE WHEN CAST(rt1.c2 AS BLOB) THEN CAST(t0.c2 AS BLOB) ELSE 0.3840321901177738 END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE ((~ ((NOT (rt1.c1))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-2097521465' WHEN 'b' THEN rt1.c1 END))  NULLS LAST, rt1.c1, ((('VE')-(rt1.c1)) IN (((rt1.c2)>=(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-2097521465' WHEN 'b' THEN rt1.c1 END))  NULLS LAST, rt1.c1, ((('VE')-(rt1.c1)) IN (((rt1.c2)>=(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((~ ((NOT (rt1.c1))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-2097521465' WHEN 'b' THEN rt1.c1 END))  NULLS LAST, rt1.c1, ((('VE')-(rt1.c1)) IN (((rt1.c2)>=(rt1.c0))));
SELECT SUM(count) FROM (SELECT (((~ ((NOT (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-2097521465' WHEN 'b' THEN rt1.c1 END))  NULLS LAST, rt1.c1, ((('VE')-(rt1.c1)) IN (((rt1.c2)>=(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE ((~ ((NOT (rt1.c1))))) ORDER BY (+ (CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN '-2097521465' WHEN 'b' THEN rt1.c1 END))  NULLS LAST, rt1.c1, ((('VE')-(rt1.c1)) IN (((rt1.c2)>=(rt1.c0))));
SELECT * FROM vt0, t0, rt1 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '0.15188764681168343' THEN rt1.c2 ELSE vt0.c2 END) NOT NULL) WHERE (((((rt1.c0) IS FALSE))<<(((rt1.c1)*(vt0.c0))))) ORDER BY ((((vt1.c0)>=(t0.c2)))<<(((vt0.c1) IS FALSE))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (COALESCE(vt1.c0, t0.c2)) AND (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c1 THEN NULL WHEN t0.c0 THEN vt0.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))<<(((rt1.c1)*(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt1 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '0.15188764681168343' THEN rt1.c2 ELSE vt0.c2 END) NOT NULL) ORDER BY ((((vt1.c0)>=(t0.c2)))<<(((vt0.c1) IS FALSE))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (COALESCE(vt1.c0, t0.c2)) AND (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c1 THEN NULL WHEN t0.c0 THEN vt0.c2 ELSE rt1.c1 END))  NULLS FIRST);
SELECT * FROM vt0, t0, rt1 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '0.15188764681168343' THEN rt1.c2 ELSE vt0.c2 END) NOT NULL) WHERE (((((rt1.c0) IS FALSE))<<(((rt1.c1)*(vt0.c0))))) ORDER BY ((((vt1.c0)>=(t0.c2)))<<(((vt0.c1) IS FALSE))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (COALESCE(vt1.c0, t0.c2)) AND (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c1 THEN NULL WHEN t0.c0 THEN vt0.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) IS FALSE))<<(((rt1.c1)*(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt1 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '0.15188764681168343' THEN rt1.c2 ELSE vt0.c2 END) NOT NULL) ORDER BY ((((vt1.c0)>=(t0.c2)))<<(((vt0.c1) IS FALSE))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (COALESCE(vt1.c0, t0.c2)) AND (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c1 THEN NULL WHEN t0.c0 THEN vt0.c2 ELSE rt1.c1 END))  NULLS FIRST);
SELECT * FROM vt0, t0, rt1 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c2 WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '0.15188764681168343' THEN rt1.c2 ELSE vt0.c2 END) NOT NULL) WHERE (((((rt1.c0) IS FALSE))<<(((rt1.c1)*(vt0.c0))))) ORDER BY ((((vt1.c0)>=(t0.c2)))<<(((vt0.c1) IS FALSE))) ASC  NULLS LAST, ((rt1.c2 COLLATE NOCASE) NOT BETWEEN (COALESCE(vt1.c0, t0.c2)) AND (CASE WHEN vt1.c1 THEN vt1.c2 WHEN vt0.c1 THEN NULL WHEN t0.c0 THEN vt0.c2 ELSE rt1.c1 END))  NULLS FIRST;
SELECT * FROM rt1, t0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.651875835549765)))) ORDER BY ((CASE t0.c1  WHEN 'yq0,*~j0' THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c2)*(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(rt1.c1, 0.651875835549765)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CASE t0.c1  WHEN 'yq0,*~j0' THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c2)*(t0.c1)))) ASC);
SELECT * FROM rt1, t0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.651875835549765)))) ORDER BY ((CASE t0.c1  WHEN 'yq0,*~j0' THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c2)*(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELIHOOD(rt1.c1, 0.651875835549765)))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((CASE t0.c1  WHEN 'yq0,*~j0' THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c2)*(t0.c1)))) ASC);
SELECT * FROM rt1, t0 WHERE ((- (LIKELIHOOD(rt1.c1, 0.651875835549765)))) ORDER BY ((CASE t0.c1  WHEN 'yq0,*~j0' THEN rt1.c0 ELSE rt1.c0 END) BETWEEN (t0.c2 COLLATE BINARY) AND (((rt1.c2)*(t0.c1)))) ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) IN (((rt1.c0)+(NULL)), 0.23363847939676863)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) IN (((rt1.c0)+(NULL)), 0.23363847939676863))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) IN (((rt1.c0)+(NULL)), 0.23363847939676863)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) IN (((rt1.c0)+(NULL)), 0.23363847939676863))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)) IN (((rt1.c0)+(NULL)), 0.23363847939676863)));
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt1.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c2 IN ())) IS FALSE));
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE vt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE t0.c2 END)>=(vt1.c2))) ORDER BY NULLIF(((rt1.c0)%(rt1.c1)), (((rt1.c1, vt1.c0, vt1.c2))>=((vt1.c1, vt1.c0, rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE t0.c2 END)>=(vt1.c2))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY NULLIF(((rt1.c0)%(rt1.c1)), (((rt1.c1, vt1.c0, vt1.c2))>=((vt1.c1, vt1.c0, rt1.c2)))) ASC);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE vt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE t0.c2 END)>=(vt1.c2))) ORDER BY NULLIF(((rt1.c0)%(rt1.c1)), (((rt1.c1, vt1.c0, vt1.c2))>=((vt1.c1, vt1.c0, rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE t0.c2 END)>=(vt1.c2))) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY NULLIF(((rt1.c0)%(rt1.c1)), (((rt1.c1, vt1.c0, vt1.c2))>=((vt1.c1, vt1.c0, rt1.c2)))) ASC);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((CASE vt1.c1  WHEN t0.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c2 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE t0.c2 END)>=(vt1.c2))) ORDER BY NULLIF(((rt1.c0)%(rt1.c1)), (((rt1.c1, vt1.c0, vt1.c2))>=((vt1.c1, vt1.c0, rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (CASE ((rt1.c0)OR(rt1.c0))  WHEN 0.22179216406038837 THEN CASE WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt1.c2 WHEN t0.c1 THEN NULL ELSE rt1.c1 END ELSE ABS(DISTINCT vt0.c1) END) ORDER BY (~ (CAST(t0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)OR(rt1.c0))  WHEN 0.22179216406038837 THEN CASE WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt1.c2 WHEN t0.c1 THEN NULL ELSE rt1.c1 END ELSE ABS(DISTINCT vt0.c1) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (~ (CAST(t0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (CASE ((rt1.c0)OR(rt1.c0))  WHEN 0.22179216406038837 THEN CASE WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt1.c2 WHEN t0.c1 THEN NULL ELSE rt1.c1 END ELSE ABS(DISTINCT vt0.c1) END) ORDER BY (~ (CAST(t0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)OR(rt1.c0))  WHEN 0.22179216406038837 THEN CASE WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt1.c2 WHEN t0.c1 THEN NULL ELSE rt1.c1 END ELSE ABS(DISTINCT vt0.c1) END) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (~ (CAST(t0.c1 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (CASE ((rt1.c0)OR(rt1.c0))  WHEN 0.22179216406038837 THEN CASE WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c2 THEN rt1.c2 WHEN t0.c1 THEN NULL ELSE rt1.c1 END ELSE ABS(DISTINCT vt0.c1) END) ORDER BY (~ (CAST(t0.c1 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (0.42655048522848515) ORDER BY (~ (((vt0.c2)>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.42655048522848515) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2)>(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (0.42655048522848515) ORDER BY (~ (((vt0.c2)>(vt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((0.42655048522848515) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c2)>(vt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (0.42655048522848515) ORDER BY (~ (((vt0.c2)>(vt0.c2))));
SELECT * FROM vt0, t0, vt1 FULL OUTER JOIN rt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (vt1.c1) ORDER BY ((((((t0.c2)*(vt1.c0)))OR((vt0.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))), (NOT (((t0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0, vt1 FULL OUTER JOIN rt1 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY ((((((t0.c2)*(vt1.c0)))OR((vt0.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))), (NOT (((t0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 FULL OUTER JOIN rt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (vt1.c1) ORDER BY ((((((t0.c2)*(vt1.c0)))OR((vt0.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))), (NOT (((t0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0, vt1 FULL OUTER JOIN rt1 ON (vt0.c0 COLLATE BINARY IN ()) ORDER BY ((((((t0.c2)*(vt1.c0)))OR((vt0.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))), (NOT (((t0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT * FROM vt0, t0, vt1 FULL OUTER JOIN rt1 ON (vt0.c0 COLLATE BINARY IN ()) WHERE (vt1.c1) ORDER BY ((((((t0.c2)*(vt1.c0)))OR((vt0.c0 IN ()))))AND((((rt1.c1))>((rt1.c2))))), (NOT (((t0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt1 WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((vt1.c1 COLLATE BINARY) IS TRUE));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt1.c0))) BETWEEN ((- (vt1.c2))) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN ((- (vt1.c2))) AND (vt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY x'' DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt1.c0))) BETWEEN ((- (vt1.c2))) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN ((- (vt1.c2))) AND (vt0.c0))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY x'' DESC);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE ((((+ (vt1.c0))) BETWEEN ((- (vt1.c2))) AND (vt0.c0))) ORDER BY x'' DESC;
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c1)%(rt1.c0)))AND(NULL)))OR(CAST('qg4_' AS BLOB))) WHERE (((((rt1.c1)IS(rt1.c0)))*(rt1.c0))) ORDER BY CASE ((rt1.c1)&(t0.c1))  WHEN UNICODE(rt1.c0) THEN (+ (rt1.c2)) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS(rt1.c0)))*(rt1.c0))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c1)%(rt1.c0)))AND(NULL)))OR(CAST('qg4_' AS BLOB))) ORDER BY CASE ((rt1.c1)&(t0.c1))  WHEN UNICODE(rt1.c0) THEN (+ (rt1.c2)) ELSE t0.c0 END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c1)%(rt1.c0)))AND(NULL)))OR(CAST('qg4_' AS BLOB))) WHERE (((((rt1.c1)IS(rt1.c0)))*(rt1.c0))) ORDER BY CASE ((rt1.c1)&(t0.c1))  WHEN UNICODE(rt1.c0) THEN (+ (rt1.c2)) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS(rt1.c0)))*(rt1.c0))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c1)%(rt1.c0)))AND(NULL)))OR(CAST('qg4_' AS BLOB))) ORDER BY CASE ((rt1.c1)&(t0.c1))  WHEN UNICODE(rt1.c0) THEN (+ (rt1.c2)) ELSE t0.c0 END ASC  NULLS FIRST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN t0 ON ((((((t0.c1)%(rt1.c0)))AND(NULL)))OR(CAST('qg4_' AS BLOB))) WHERE (((((rt1.c1)IS(rt1.c0)))*(rt1.c0))) ORDER BY CASE ((rt1.c1)&(t0.c1))  WHEN UNICODE(rt1.c0) THEN (+ (rt1.c2)) ELSE t0.c0 END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON vt0.c0 CROSS JOIN vt1 ON CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0) IS FALSE) THEN SQLITE_VERSION() WHEN vt1.c0 COLLATE RTRIM THEN t0.c1 COLLATE RTRIM WHEN ((vt0.c2) NOTNULL) THEN ((t0.c1) NOT NULL) ELSE ((rt1.c2)AND(t0.c2)) END RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) ELSE ((vt1.c0)<<(t0.c2)) END WHERE (t0.c0) ORDER BY ((TYPEOF(rt1.c1)) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt1.c1  WHEN vt0.c2 THEN vt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON vt0.c0 CROSS JOIN vt1 ON CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0) IS FALSE) THEN SQLITE_VERSION() WHEN vt1.c0 COLLATE RTRIM THEN t0.c1 COLLATE RTRIM WHEN ((vt0.c2) NOTNULL) THEN ((t0.c1) NOT NULL) ELSE ((rt1.c2)AND(t0.c2)) END RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) ELSE ((vt1.c0)<<(t0.c2)) END ORDER BY ((TYPEOF(rt1.c1)) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt1.c1  WHEN vt0.c2 THEN vt1.c2 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON vt0.c0 CROSS JOIN vt1 ON CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0) IS FALSE) THEN SQLITE_VERSION() WHEN vt1.c0 COLLATE RTRIM THEN t0.c1 COLLATE RTRIM WHEN ((vt0.c2) NOTNULL) THEN ((t0.c1) NOT NULL) ELSE ((rt1.c2)AND(t0.c2)) END RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) ELSE ((vt1.c0)<<(t0.c2)) END WHERE (t0.c0) ORDER BY ((TYPEOF(rt1.c1)) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt1.c1  WHEN vt0.c2 THEN vt1.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON vt0.c0 CROSS JOIN vt1 ON CASE rt1.c0 COLLATE NOCASE  WHEN ((rt1.c0) IS FALSE) THEN SQLITE_VERSION() WHEN vt1.c0 COLLATE RTRIM THEN t0.c1 COLLATE RTRIM WHEN ((vt0.c2) NOTNULL) THEN ((t0.c1) NOT NULL) ELSE ((rt1.c2)AND(t0.c2)) END RIGHT OUTER JOIN vt0 ON CASE WHEN NULL THEN (rt1.c1 IN ()) ELSE ((vt1.c0)<<(t0.c2)) END ORDER BY ((TYPEOF(rt1.c1)) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt1.c1  WHEN vt0.c2 THEN vt1.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((json_valid(vt0.c2))>(((t0.c2) IS TRUE)))) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(vt0.c2))>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((json_valid(vt0.c2))>(((t0.c2) IS TRUE)))) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(vt0.c2))>(((t0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, rt1 WHERE (((json_valid(vt0.c2))>(((t0.c2) IS TRUE)))) ORDER BY ((t0.c0 COLLATE BINARY) NOT NULL)  NULLS FIRST;
SELECT * FROM rt1, vt0, t0 WHERE ((((((vt0.c1, '5?', t0.c1)) NOT BETWEEN ((0.7728539840895474, vt0.c0, rt1.c0)) AND ((x'', t0.c2, rt1.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, '5?', t0.c1)) NOT BETWEEN ((0.7728539840895474, vt0.c0, rt1.c0)) AND ((x'', t0.c2, rt1.c1)))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ((((((vt0.c1, '5?', t0.c1)) NOT BETWEEN ((0.7728539840895474, vt0.c0, rt1.c0)) AND ((x'', t0.c2, rt1.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, '5?', t0.c1)) NOT BETWEEN ((0.7728539840895474, vt0.c0, rt1.c0)) AND ((x'', t0.c2, rt1.c1)))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT * FROM rt1, vt0, t0 WHERE ((((((vt0.c1, '5?', t0.c1)) NOT BETWEEN ((0.7728539840895474, vt0.c0, rt1.c0)) AND ((x'', t0.c2, rt1.c1)))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)%((((vt0.c0))<=((vt0.c2))))) DESC, ((+ (vt0.c0)) IN (ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)%((((vt0.c0))<=((vt0.c2))))) DESC, ((+ (vt0.c0)) IN (ABS(vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)%((((vt0.c0))<=((vt0.c2))))) DESC, ((+ (vt0.c0)) IN (ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)%((((vt0.c0))<=((vt0.c2))))) DESC, ((+ (vt0.c0)) IN (ABS(vt0.c0))));
SELECT * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c2) AS BLOB)) ORDER BY ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 END)%((((vt0.c0))<=((vt0.c2))))) DESC, ((+ (vt0.c0)) IN (ABS(vt0.c0)));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((0.780077428664607)-(vt0.c1)) THEN (- (vt0.c2)) END WHERE (((((rt1.c2)/(vt0.c1)))<>(((vt0.c0)AND(rt1.c0))))) ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))) DESC  NULLS LAST, (((NOT (vt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(vt0.c1)))<>(((vt0.c0)AND(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((0.780077428664607)-(vt0.c1)) THEN (- (vt0.c2)) END ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))) DESC  NULLS LAST, (((NOT (vt0.c1))) NOTNULL) ASC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((0.780077428664607)-(vt0.c1)) THEN (- (vt0.c2)) END WHERE (((((rt1.c2)/(vt0.c1)))<>(((vt0.c0)AND(rt1.c0))))) ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))) DESC  NULLS LAST, (((NOT (vt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)/(vt0.c1)))<>(((vt0.c0)AND(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((0.780077428664607)-(vt0.c1)) THEN (- (vt0.c2)) END ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))) DESC  NULLS LAST, (((NOT (vt0.c1))) NOTNULL) ASC);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN ((0.780077428664607)-(vt0.c1)) THEN (- (vt0.c2)) END WHERE (((((rt1.c2)/(vt0.c1)))<>(((vt0.c0)AND(rt1.c0))))) ORDER BY UNLIKELY(((((vt0.c1)OR(vt0.c0)))OR(vt0.c2))) DESC  NULLS LAST, (((NOT (vt0.c1))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt1.c2 AS REAL))||((~ (x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS REAL))||((~ (x''))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt1.c2 AS REAL))||((~ (x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c2 AS REAL))||((~ (x''))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((CAST(vt1.c2 AS REAL))||((~ (x'')))));
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.10197862301959826));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.10197862301959826)) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.10197862301959826));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.10197862301959826)) IS TRUE)  as count FROM vt0, rt1 NOT INDEXED);
SELECT ALL * FROM vt0, rt1 WHERE (LIKELIHOOD(DISTINCT (+ (rt1.c1)), 0.10197862301959826));
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (TRIM(DISTINCT vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (TRIM(DISTINCT vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT ALL * FROM vt0, t0, rt1, vt1 WHERE (TRIM(DISTINCT vt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (x'09177b24')))))) ORDER BY (+ (((rt1.c0)IS(rt1.c0)))), CAST(((rt1.c1)=(vt0.c1)) AS NUMERIC) DESC, '15888041' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (x'09177b24')))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY (+ (((rt1.c0)IS(rt1.c0)))), CAST(((rt1.c1)=(vt0.c1)) AS NUMERIC) DESC, '15888041' DESC);
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (x'09177b24')))))) ORDER BY (+ (((rt1.c0)IS(rt1.c0)))), CAST(((rt1.c1)=(vt0.c1)) AS NUMERIC) DESC, '15888041' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (x'09177b24')))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY (+ (((rt1.c0)IS(rt1.c0)))), CAST(((rt1.c1)=(vt0.c1)) AS NUMERIC) DESC, '15888041' DESC);
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c1)) BETWEEN ((CAST(x'' AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (x'09177b24')))))) ORDER BY (+ (((rt1.c0)IS(rt1.c0)))), CAST(((rt1.c1)=(vt0.c1)) AS NUMERIC) DESC, '15888041' DESC;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((highlight(rt1.c2, vt1.c0, vt1.c2, vt1.c0)) NOT NULL)) ORDER BY ((((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN ('-196215697' COLLATE NOCASE) AND (((rt1.c1)LIKE(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt1.c2, vt1.c0, vt1.c2, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN ('-196215697' COLLATE NOCASE) AND (((rt1.c1)LIKE(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((highlight(rt1.c2, vt1.c0, vt1.c2, vt1.c0)) NOT NULL)) ORDER BY ((((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN ('-196215697' COLLATE NOCASE) AND (((rt1.c1)LIKE(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt1.c2, vt1.c0, vt1.c2, vt1.c0)) NOT NULL)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt1 ORDER BY ((((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN ('-196215697' COLLATE NOCASE) AND (((rt1.c1)LIKE(vt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt1 WHERE (((highlight(rt1.c2, vt1.c0, vt1.c2, vt1.c0)) NOT NULL)) ORDER BY ((((vt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) NOT BETWEEN ('-196215697' COLLATE NOCASE) AND (((rt1.c1)LIKE(vt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1)OR(t0.c0)))AND(t0.c0))))==((((t0.c0)+(t0.c2)))))) ORDER BY ((((-1.580694751E9)OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (-1910615419))) AND (((NULL)OR(t0.c0))))  NULLS LAST, (((rtreenode(t0.c0, t0.c0)))==((t0.c0 COLLATE NOCASE))), ((((t0.c2 COLLATE NOCASE)AND(((t0.c2) ISNULL))))AND(IFNULL(t0.c0, t0.c2))) DESC  NULLS FIRST, CASE ((((((((0.9833838830506191)OR(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c1))  WHEN (~ (t0.c1)) THEN '-823420487' WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN '602776056' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN 0.38796608464435245 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END, (((t0.c1) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1)OR(t0.c0)))AND(t0.c0))))=((((t0.c0)+(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((-1.580694751E9)OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (-1910615419))) AND (((NULL)OR(t0.c0))))  NULLS LAST, (((rtreenode(t0.c0, t0.c0)))=((t0.c0 COLLATE NOCASE))), ((((t0.c2 COLLATE NOCASE)AND(((t0.c2) ISNULL))))AND(IFNULL(t0.c0, t0.c2))) DESC  NULLS FIRST, CASE ((((((((0.9833838830506191)OR(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c1))  WHEN (~ (t0.c1)) THEN '-823420487' WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN '602776056' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN 0.38796608464435245 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END, (((t0.c1) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1)OR(t0.c0)))AND(t0.c0))))==((((t0.c0)+(t0.c2)))))) ORDER BY ((((-1.580694751E9)OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (-1910615419))) AND (((NULL)OR(t0.c0))))  NULLS LAST, (((rtreenode(t0.c0, t0.c0)))==((t0.c0 COLLATE NOCASE))), ((((t0.c2 COLLATE NOCASE)AND(((t0.c2) ISNULL))))AND(IFNULL(t0.c0, t0.c2))) DESC  NULLS FIRST, CASE ((((((((0.9833838830506191)OR(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c1))  WHEN (~ (t0.c1)) THEN '-823420487' WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN '602776056' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN 0.38796608464435245 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END, (((t0.c1) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c1)OR(t0.c0)))AND(t0.c0))))=((((t0.c0)+(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((-1.580694751E9)OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (-1910615419))) AND (((NULL)OR(t0.c0))))  NULLS LAST, (((rtreenode(t0.c0, t0.c0)))=((t0.c0 COLLATE NOCASE))), ((((t0.c2 COLLATE NOCASE)AND(((t0.c2) ISNULL))))AND(IFNULL(t0.c0, t0.c2))) DESC  NULLS FIRST, CASE ((((((((0.9833838830506191)OR(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c1))  WHEN (~ (t0.c1)) THEN '-823420487' WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN '602776056' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN 0.38796608464435245 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END, (((t0.c1) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1)OR(t0.c0)))AND(t0.c0))))==((((t0.c0)+(t0.c2)))))) ORDER BY ((((-1.580694751E9)OR(t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (-1910615419))) AND (((NULL)OR(t0.c0))))  NULLS LAST, (((rtreenode(t0.c0, t0.c0)))==((t0.c0 COLLATE NOCASE))), ((((t0.c2 COLLATE NOCASE)AND(((t0.c2) ISNULL))))AND(IFNULL(t0.c0, t0.c2))) DESC  NULLS FIRST, CASE ((((((((0.9833838830506191)OR(x'')))AND(t0.c1)))AND(t0.c2)))AND(t0.c1))  WHEN (~ (t0.c1)) THEN '-823420487' WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c0)|(t0.c0)) WHEN CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN '602776056' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END THEN CASE t0.c1  WHEN t0.c0 THEN 0.38796608464435245 WHEN t0.c0 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END, (((t0.c1) NOTNULL) IN ());
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c1))) NOT NULL));
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)|(rt1.c2)) AS INTEGER) WHERE (UNICODE(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(NULL)) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)|(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)|(rt1.c2)) AS INTEGER) WHERE (UNICODE(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(NULL)) IS TRUE)  as count FROM rt1, vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)|(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt1, vt1 RIGHT OUTER JOIN vt0 ON CAST(((rt1.c1)|(rt1.c2)) AS INTEGER) WHERE (UNICODE(NULL));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0 IN (rt1.c2)))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY (rt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (rt1.c2)))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY (rt1.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0 IN (rt1.c2)))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY (rt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (rt1.c2)))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) IS TRUE)  as count FROM t0, rt1 NOT INDEXED ORDER BY (rt1.c0 IN ()) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((((t0.c0 IN (rt1.c2)))AND(x'')))AND(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END))) ORDER BY (rt1.c0 IN ()) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN vt0 ON CAST((~ (-2069734553)) AS BLOB) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON CAST((~ (-2069734553)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN vt0 ON CAST((~ (-2069734553)) AS BLOB) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON CAST((~ (-2069734553)) AS BLOB));
SELECT ALL COUNT(*) FROM rt1, t0 INNER JOIN vt0 ON CAST((~ (-2069734553)) AS BLOB) WHERE (rt1.c1);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c2))) NOTNULL)) ORDER BY MAX((vt1.c0 IN ()), (+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c2))) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY MAX((vt1.c0 IN ()), (+ (vt1.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c2))) NOTNULL)) ORDER BY MAX((vt1.c0 IN ()), (+ (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c2))) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY MAX((vt1.c0 IN ()), (+ (vt1.c0))));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c2))) NOTNULL)) ORDER BY MAX((vt1.c0 IN ()), (+ (vt1.c0)));
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt1);
SELECT COUNT(*) FROM rt1, vt1 WHERE (((rt1.c1) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CASE WHEN rt1.c0 THEN ((x'c7bf') NOT BETWEEN (vt1.c1) AND (t0.c1)) ELSE UNLIKELY(x'') END) ORDER BY ((((~ (rt1.c0)), 0.03024089985000311, (((t0.c2, vt0.c1, vt1.c1)) BETWEEN ((rt1.c0, t0.c0, '-1878839692')) AND ((vt0.c1, t0.c0, t0.c1))), ((((vt0.c0)AND(rt1.c0)))AND(vt1.c2)), ((vt0.c0)<<(vt0.c0)), (rt1.c1 IN (t0.c1)), COALESCE(t0.c2, vt0.c1, vt1.c0, t0.c0)))=((CASE t0.c1  WHEN '' THEN t0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN '' END, (((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c0))), (- (rt1.c0)), ((rt1.c2) ISNULL), (NULL IN ()), ((((vt1.c1)OR(vt0.c0)))AND('-1073118169')), ((((((((rt1.c2)AND(vt0.c1)))OR('FO')))OR(vt0.c2)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN ((x'c7bf') NOT BETWEEN (vt1.c1) AND (t0.c1)) ELSE UNLIKELY(x'') END) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((((~ (rt1.c0)), 0.03024089985000311, (((t0.c2, vt0.c1, vt1.c1)) BETWEEN ((rt1.c0, t0.c0, '-1878839692')) AND ((vt0.c1, t0.c0, t0.c1))), ((((vt0.c0)AND(rt1.c0)))AND(vt1.c2)), ((vt0.c0)<<(vt0.c0)), (rt1.c1 IN (t0.c1)), COALESCE(t0.c2, vt0.c1, vt1.c0, t0.c0)))==((CASE t0.c1  WHEN '' THEN t0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN '' END, (((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c0))), (- (rt1.c0)), ((rt1.c2) ISNULL), (NULL IN ()), ((((vt1.c1)OR(vt0.c0)))AND('-1073118169')), ((((((((rt1.c2)AND(vt0.c1)))OR('FO')))OR(vt0.c2)))AND(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CASE WHEN rt1.c0 THEN ((x'c7bf') NOT BETWEEN (vt1.c1) AND (t0.c1)) ELSE UNLIKELY(x'') END) ORDER BY ((((~ (rt1.c0)), 0.03024089985000311, (((t0.c2, vt0.c1, vt1.c1)) BETWEEN ((rt1.c0, t0.c0, '-1878839692')) AND ((vt0.c1, t0.c0, t0.c1))), ((((vt0.c0)AND(rt1.c0)))AND(vt1.c2)), ((vt0.c0)<<(vt0.c0)), (rt1.c1 IN (t0.c1)), COALESCE(t0.c2, vt0.c1, vt1.c0, t0.c0)))=((CASE t0.c1  WHEN '' THEN t0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN '' END, (((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c0))), (- (rt1.c0)), ((rt1.c2) ISNULL), (NULL IN ()), ((((vt1.c1)OR(vt0.c0)))AND('-1073118169')), ((((((((rt1.c2)AND(vt0.c1)))OR('FO')))OR(vt0.c2)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c0 THEN ((x'c7bf') NOT BETWEEN (vt1.c1) AND (t0.c1)) ELSE UNLIKELY(x'') END) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((((~ (rt1.c0)), 0.03024089985000311, (((t0.c2, vt0.c1, vt1.c1)) BETWEEN ((rt1.c0, t0.c0, '-1878839692')) AND ((vt0.c1, t0.c0, t0.c1))), ((((vt0.c0)AND(rt1.c0)))AND(vt1.c2)), ((vt0.c0)<<(vt0.c0)), (rt1.c1 IN (t0.c1)), COALESCE(t0.c2, vt0.c1, vt1.c0, t0.c0)))==((CASE t0.c1  WHEN '' THEN t0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN '' END, (((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c0))), (- (rt1.c0)), ((rt1.c2) ISNULL), (NULL IN ()), ((((vt1.c1)OR(vt0.c0)))AND('-1073118169')), ((((((((rt1.c2)AND(vt0.c1)))OR('FO')))OR(vt0.c2)))AND(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (CASE WHEN rt1.c0 THEN ((x'c7bf') NOT BETWEEN (vt1.c1) AND (t0.c1)) ELSE UNLIKELY(x'') END) ORDER BY ((((~ (rt1.c0)), 0.03024089985000311, (((t0.c2, vt0.c1, vt1.c1)) BETWEEN ((rt1.c0, t0.c0, '-1878839692')) AND ((vt0.c1, t0.c0, t0.c1))), ((((vt0.c0)AND(rt1.c0)))AND(vt1.c2)), ((vt0.c0)<<(vt0.c0)), (rt1.c1 IN (t0.c1)), COALESCE(t0.c2, vt0.c1, vt1.c0, t0.c0)))=((CASE t0.c1  WHEN '' THEN t0.c0 WHEN t0.c2 THEN rt1.c2 WHEN rt1.c2 THEN '' END, (((vt1.c2)) NOT BETWEEN ((vt0.c2)) AND ((rt1.c0))), (- (rt1.c0)), ((rt1.c2) ISNULL), (NULL IN ()), ((((vt1.c1)OR(vt0.c0)))AND('-1073118169')), ((((((((rt1.c2)AND(vt0.c1)))OR('FO')))OR(vt0.c2)))AND(t0.c0)))));
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN t0.c1 COLLATE BINARY THEN 0.32357752725834465 WHEN t0.c2 THEN (t0.c2 IN ()) WHEN x'' THEN ((t0.c1)<(0Xffffffffdb600033)) ELSE ((t0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 COLLATE BINARY THEN 0.32357752725834465 WHEN t0.c2 THEN (t0.c2 IN ()) WHEN x'' THEN ((t0.c1)<(0xffffffffdb600033)) ELSE ((t0.c1) IS FALSE) END) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN t0.c1 COLLATE BINARY THEN 0.32357752725834465 WHEN t0.c2 THEN (t0.c2 IN ()) WHEN x'' THEN ((t0.c1)<(0Xffffffffdb600033)) ELSE ((t0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c1 COLLATE BINARY THEN 0.32357752725834465 WHEN t0.c2 THEN (t0.c2 IN ()) WHEN x'' THEN ((t0.c1)<(0xffffffffdb600033)) ELSE ((t0.c1) IS FALSE) END) IS TRUE)  as count FROM t0, rt1, vt0);
SELECT COUNT(*) FROM t0, rt1, vt0 WHERE (CASE WHEN t0.c1 COLLATE BINARY THEN 0.32357752725834465 WHEN t0.c2 THEN (t0.c2 IN ()) WHEN x'' THEN ((t0.c1)<(0Xffffffffdb600033)) ELSE ((t0.c1) IS FALSE) END);
SELECT ALL * FROM t0 WHERE (((((highlight(t0.c2, t0.c1, t0.c2, t0.c2))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))AND(''))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(t0.c2, t0.c1, t0.c2, t0.c2))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))AND(''))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((highlight(t0.c2, t0.c1, t0.c2, t0.c2))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))AND(''))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(t0.c2, t0.c1, t0.c2, t0.c2))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))AND(''))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c1))) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((highlight(t0.c2, t0.c1, t0.c2, t0.c2))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c2)))))AND(''))) ORDER BY ((((((t0.c0)OR(t0.c0)))AND(t0.c1))) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT COUNT(*) FROM vt0, t0, rt1, vt1 WHERE (rt1.c1);
SELECT COUNT(*) FROM vt0 WHERE ((((((x'23a1'))>=((vt0.c0))))|(LIKELIHOOD(DISTINCT vt0.c1, 0.9652913944297927)))) ORDER BY (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN (((vt0.c0 IN ()), ((vt0.c2) NOTNULL), ((vt0.c1)-(vt0.c0)))) AND ((((vt0.c2)IS(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), '-1229259646')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'23a1'))>=((vt0.c0))))|(LIKELIHOOD(DISTINCT vt0.c1, 0.9652913944297927)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN (((vt0.c0 IN ()), ((vt0.c2) NOTNULL), ((vt0.c1)-(vt0.c0)))) AND ((((vt0.c2)IS(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), '-1229259646')))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((x'23a1'))>=((vt0.c0))))|(LIKELIHOOD(DISTINCT vt0.c1, 0.9652913944297927)))) ORDER BY (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN (((vt0.c0 IN ()), ((vt0.c2) NOTNULL), ((vt0.c1)-(vt0.c0)))) AND ((((vt0.c2)IS(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), '-1229259646')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'23a1'))>=((vt0.c0))))|(LIKELIHOOD(DISTINCT vt0.c1, 0.9652913944297927)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN (((vt0.c0 IN ()), ((vt0.c2) NOTNULL), ((vt0.c1)-(vt0.c0)))) AND ((((vt0.c2)IS(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), '-1229259646')))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((x'23a1'))>=((vt0.c0))))|(LIKELIHOOD(DISTINCT vt0.c1, 0.9652913944297927)))) ORDER BY (((vt0.c1, vt0.c1, vt0.c2)) BETWEEN (((vt0.c0 IN ()), ((vt0.c2) NOTNULL), ((vt0.c1)-(vt0.c0)))) AND ((((vt0.c2)IS(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)), '-1229259646')))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(x'62c2')) ASC, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c1) IS FALSE))), 0.7952078996716793 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(x'62c2')) ASC, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c1) IS FALSE))), 0.7952078996716793 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(x'62c2')) ASC, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c1) IS FALSE))), 0.7952078996716793 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(x'62c2')) ASC, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c1) IS FALSE))), 0.7952078996716793 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))||(x'62c2')) ASC, (((((vt1.c2)) NOT BETWEEN ((vt1.c2)) AND ((vt1.c1)))) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (((vt1.c1) IS FALSE))), 0.7952078996716793 ASC  NULLS LAST;
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT ALL * FROM t0, rt1, vt1, vt0 WHERE (NULL);
SELECT COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((t0.c0)|(((((t0.c1)AND(t0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)|(((((t0.c1)AND(t0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((t0.c0)|(((((t0.c1)AND(t0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)|(((((t0.c1)AND(t0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((t0.c0)|(((((t0.c1)AND(t0.c1)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(((((t0.c1)OR(x'')))OR(rt1.c2)))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c1)OR(x'')))OR(rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(((((t0.c1)OR(x'')))OR(rt1.c2)))) ORDER BY rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((((t0.c1)OR(x'')))OR(rt1.c2)))) IS TRUE)  as count FROM t0, rt1 ORDER BY rt1.c2);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (LIKELY(((((t0.c1)OR(x'')))OR(rt1.c2)))) ORDER BY rt1.c2;
SELECT COUNT(*) FROM vt0, vt1, rt1 INNER JOIN t0 ON (((((((vt0.c2)AND(t0.c1)))AND(t0.c1)), 0.38271966779699973, (((('')OR(983541367)))OR(t0.c0))))==((((vt1.c0)<(0.47901734561281917)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)), ((((((((rt1.c2)OR(t0.c0)))AND(t0.c2)))AND(vt1.c2)))AND(t0.c1))))) WHERE (((rt1.c0)!=(((((vt1.c1)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY 1922706717  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<>(((((vt1.c1)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON (((((((vt0.c2)AND(t0.c1)))AND(t0.c1)), 0.38271966779699973, (((('')OR(983541367)))OR(t0.c0))))==((((vt1.c0)<(0.47901734561281917)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)), ((((((((rt1.c2)OR(t0.c0)))AND(t0.c2)))AND(vt1.c2)))AND(t0.c1))))) ORDER BY 1922706717  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, rt1 INNER JOIN t0 ON (((((((vt0.c2)AND(t0.c1)))AND(t0.c1)), 0.38271966779699973, (((('')OR(983541367)))OR(t0.c0))))==((((vt1.c0)<(0.47901734561281917)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)), ((((((((rt1.c2)OR(t0.c0)))AND(t0.c2)))AND(vt1.c2)))AND(t0.c1))))) WHERE (((rt1.c0)!=(((((vt1.c1)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY 1922706717  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)<>(((((vt1.c1)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0, vt1, rt1 INNER JOIN t0 ON (((((((vt0.c2)AND(t0.c1)))AND(t0.c1)), 0.38271966779699973, (((('')OR(983541367)))OR(t0.c0))))==((((vt1.c0)<(0.47901734561281917)), ((vt1.c2) BETWEEN (vt1.c2) AND (vt1.c0)), ((((((((rt1.c2)OR(t0.c0)))AND(t0.c2)))AND(vt1.c2)))AND(t0.c1))))) ORDER BY 1922706717  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (UNLIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (UNLIKELY(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (UNLIKELY(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (UNLIKELY(t0.c0))));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c2)AND(t0.c2)) COLLATE NOCASE) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)AND(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c2)AND(t0.c2)) COLLATE NOCASE) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c2)AND(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (((vt0.c2)AND(t0.c2)) COLLATE NOCASE) ORDER BY ABS(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c2))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)>((((vt1.c0))>=((vt0.c1)))))) ORDER BY ((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)))AND('')))OR(vt0.c1)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>((((vt1.c0))>=((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)))AND('')))OR(vt0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)>((((vt1.c0))>=((vt0.c1)))))) ORDER BY ((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)))AND('')))OR(vt0.c1)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>((((vt1.c0))>=((vt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)))AND('')))OR(vt0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt0.c0)>((((vt1.c0))>=((vt0.c1)))))) ORDER BY ((((((((vt1.c2)AND(vt1.c2)))AND(vt1.c0)))AND('')))OR(vt0.c1)) COLLATE BINARY COLLATE BINARY;
SELECT * FROM t0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((0.5566123248165544)/(t0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((0.5566123248165544)/(t0.c2))) IS TRUE));
SELECT * FROM t0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((0.5566123248165544)/(t0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((0.5566123248165544)/(t0.c2))) IS TRUE));
SELECT * FROM t0, vt0, vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY ((((0.5566123248165544)/(t0.c2))) IS TRUE);
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '' WHERE ((((t0.c1, t0.c2, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((t0.c1, 0.14427559509893917, t0.c1, t0.c0, vt1.c2)) AND ((NULL, vt0.c1, vt0.c0, t0.c1, t0.c0))) COLLATE BINARY) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((t0.c1, 0.14427559509893917, t0.c1, t0.c0, vt1.c2)) AND ((NULL, vt0.c1, vt0.c0, t0.c1, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON '' ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '' WHERE ((((t0.c1, t0.c2, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((t0.c1, 0.14427559509893917, t0.c1, t0.c0, vt1.c2)) AND ((NULL, vt0.c1, vt0.c0, t0.c1, t0.c0))) COLLATE BINARY) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((t0.c1, 0.14427559509893917, t0.c1, t0.c0, vt1.c2)) AND ((NULL, vt0.c1, vt0.c0, t0.c1, t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON '' ORDER BY t0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON '' WHERE ((((t0.c1, t0.c2, vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((t0.c1, 0.14427559509893917, t0.c1, t0.c0, vt1.c2)) AND ((NULL, vt0.c1, vt0.c0, t0.c1, t0.c0))) COLLATE BINARY) ORDER BY t0.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c1 COLLATE RTRIM));
SELECT * FROM vt0, rt1, vt1 WHERE (LIKELY(DISTINCT ((rt1.c2)OR(vt1.c2)))) ORDER BY ((((((-707407374) BETWEEN (vt1.c2) AND (vt0.c1)))AND(x'')))AND(((rt1.c0) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) DESC, ((((vt1.c0)GLOB(rt1.c0)))IS NOT(0xffffffff8c112509))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2)OR(vt1.c2)))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((((-707407374) BETWEEN (vt1.c2) AND (vt0.c1)))AND(x'')))AND(((rt1.c0) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) DESC, ((((vt1.c0)GLOB(rt1.c0)))IS NOT(0Xffffffff8c112509))  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (LIKELY(DISTINCT ((rt1.c2)OR(vt1.c2)))) ORDER BY ((((((-707407374) BETWEEN (vt1.c2) AND (vt0.c1)))AND(x'')))AND(((rt1.c0) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) DESC, ((((vt1.c0)GLOB(rt1.c0)))IS NOT(0xffffffff8c112509))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((rt1.c2)OR(vt1.c2)))) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((((-707407374) BETWEEN (vt1.c2) AND (vt0.c1)))AND(x'')))AND(((rt1.c0) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) DESC, ((((vt1.c0)GLOB(rt1.c0)))IS NOT(0Xffffffff8c112509))  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (LIKELY(DISTINCT ((rt1.c2)OR(vt1.c2)))) ORDER BY ((((((-707407374) BETWEEN (vt1.c2) AND (vt0.c1)))AND(x'')))AND(((rt1.c0) NOT BETWEEN (vt1.c2) AND (rt1.c1)))) DESC, ((((vt1.c0)GLOB(rt1.c0)))IS NOT(0xffffffff8c112509))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY CAST(((vt1.c0)%(vt1.c1)) AS BLOB);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0)IS NOT(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0)IS NOT(vt0.c2)));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT(vt0.c2))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c0)IS NOT(vt0.c2)));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c0 THEN NULL END))) ORDER BY CASE WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS REAL) END DESC, (NOT (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c0  WHEN rt1.c0 THEN NULL END))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS REAL) END DESC, (NOT (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c0 THEN NULL END))) ORDER BY CASE WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS REAL) END DESC, (NOT (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt1.c0  WHEN rt1.c0 THEN NULL END))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS REAL) END DESC, (NOT (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (CASE rt1.c0  WHEN rt1.c0 THEN NULL END))) ORDER BY CASE WHEN rt1.c1 THEN (NOT (rt1.c2)) WHEN ((((rt1.c2)AND(rt1.c2)))AND(rt1.c0)) THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) NOT NULL) THEN CAST(rt1.c0 AS REAL) END DESC, (NOT (((((rt1.c2)AND(rt1.c1)))OR(rt1.c0))));
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ('1358696071') ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN MAX(vt1.c1, vt0.c2) ELSE json_array(t0.c1, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT (('1358696071') IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN MAX(vt1.c1, vt0.c2) ELSE json_array(t0.c1, vt0.c0) END ASC);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ('1358696071') ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN MAX(vt1.c1, vt0.c2) ELSE json_array(t0.c1, vt0.c0) END ASC;
SELECT SUM(count) FROM (SELECT (('1358696071') IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN MAX(vt1.c1, vt0.c2) ELSE json_array(t0.c1, vt0.c0) END ASC);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE ('1358696071') ORDER BY CASE WHEN ((vt1.c0) NOT NULL) THEN MAX(vt1.c1, vt0.c2) ELSE json_array(t0.c1, vt0.c0) END ASC;
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CAST(rt1.c1 AS REAL)))) ORDER BY ((((vt1.c2)+(vt1.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((vt1.c2)+(vt1.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CAST(rt1.c1 AS REAL)))) ORDER BY ((((vt1.c2)+(vt1.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((vt1.c2)+(vt1.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c1) ISNULL))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt1 WHERE ((NOT (CAST(rt1.c1 AS REAL)))) ORDER BY ((((vt1.c2)+(vt1.c2))) BETWEEN (((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c2))) AND (((rt1.c1) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) ORDER BY RTRIM(rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY RTRIM(rt1.c0));
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) ORDER BY RTRIM(rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY RTRIM(rt1.c0));
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS NUMERIC)) ORDER BY RTRIM(rt1.c0);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '' WHERE ((((((vt0.c1)OR(rt1.c0)))OR(vt0.c2)) IN ())) ORDER BY (NOT (CAST(rt1.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(rt1.c0)))OR(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '' ORDER BY (NOT (CAST(rt1.c2 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '' WHERE ((((((vt0.c1)OR(rt1.c0)))OR(vt0.c2)) IN ())) ORDER BY (NOT (CAST(rt1.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(rt1.c0)))OR(vt0.c2)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON '' ORDER BY (NOT (CAST(rt1.c2 AS NUMERIC))) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON '' WHERE ((((((vt0.c1)OR(rt1.c0)))OR(vt0.c2)) IN ())) ORDER BY (NOT (CAST(rt1.c2 AS NUMERIC))) ASC  NULLS FIRST;
SELECT * FROM rt1 NOT INDEXED, vt0, vt1 FULL OUTER JOIN t0 ON TOTAL_CHANGES() WHERE (x'764ccc60') ORDER BY ((rt1.c2)LIKE(((rt1.c0)AND(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'764ccc60') IS TRUE)  as count FROM rt1, vt0, vt1 FULL OUTER JOIN t0 ON TOTAL_CHANGES() ORDER BY ((rt1.c2)LIKE(((rt1.c0)AND(vt0.c2)))) ASC);
SELECT * FROM rt1 NOT INDEXED, vt0, vt1 FULL OUTER JOIN t0 ON TOTAL_CHANGES() WHERE (x'764ccc60') ORDER BY ((rt1.c2)LIKE(((rt1.c0)AND(vt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'764ccc60') IS TRUE)  as count FROM rt1, vt0, vt1 FULL OUTER JOIN t0 ON TOTAL_CHANGES() ORDER BY ((rt1.c2)LIKE(((rt1.c0)AND(vt0.c2)))) ASC);
SELECT * FROM rt1 NOT INDEXED, vt0, vt1 FULL OUTER JOIN t0 ON TOTAL_CHANGES() WHERE (x'764ccc60') ORDER BY ((rt1.c2)LIKE(((rt1.c0)AND(vt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(((t0.c0) NOTNULL))) WHERE (((((vt1.c0) ISNULL)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((((t0.c2, t0.c2, vt1.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c1, t0.c1, t0.c1)))))) ORDER BY 0.8693710631359914  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((((t0.c2, t0.c2, vt1.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c1, t0.c1, t0.c1)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(((t0.c0) NOTNULL))) ORDER BY 0.8693710631359914  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(((t0.c0) NOTNULL))) WHERE (((((vt1.c0) ISNULL)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((((t0.c2, t0.c2, vt1.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c1, t0.c1, t0.c1)))))) ORDER BY 0.8693710631359914  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) ISNULL)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((((t0.c2, t0.c2, vt1.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c1, t0.c1, t0.c1)))))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(((t0.c0) NOTNULL))) ORDER BY 0.8693710631359914  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))LIKE(((t0.c0) NOTNULL))) WHERE (((((vt1.c0) ISNULL)) BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND ((((t0.c2, t0.c2, vt1.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((vt1.c1, t0.c1, t0.c1)))))) ORDER BY 0.8693710631359914  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c2 ELSE t0.c2 END THEN ((t0.c1) IS TRUE) END CROSS JOIN rt1 ON (('171205735' IN ()) IN ()) CROSS JOIN vt0 ON ((((t0.c2)>>(vt1.c0))) IS TRUE) WHERE (0.4911413945922899) ORDER BY (((vt1.c0 COLLATE BINARY))>((((rt1.c2) NOT BETWEEN (vt1.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.4911413945922899) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c2 ELSE t0.c2 END THEN ((t0.c1) IS TRUE) END CROSS JOIN rt1 ON (('171205735' IN ()) IN ()) CROSS JOIN vt0 ON ((((t0.c2)>>(vt1.c0))) IS TRUE) ORDER BY (((vt1.c0 COLLATE BINARY))>((((rt1.c2) NOT BETWEEN (vt1.c1) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c2 ELSE t0.c2 END THEN ((t0.c1) IS TRUE) END CROSS JOIN rt1 ON (('171205735' IN ()) IN ()) CROSS JOIN vt0 ON ((((t0.c2)>>(vt1.c0))) IS TRUE) WHERE (0.4911413945922899) ORDER BY (((vt1.c0 COLLATE BINARY))>((((rt1.c2) NOT BETWEEN (vt1.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.4911413945922899) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c2 ELSE t0.c2 END THEN ((t0.c1) IS TRUE) END CROSS JOIN rt1 ON (('171205735' IN ()) IN ()) CROSS JOIN vt0 ON ((((t0.c2)>>(vt1.c0))) IS TRUE) ORDER BY (((vt1.c0 COLLATE BINARY))>((((rt1.c2) NOT BETWEEN (vt1.c1) AND (t0.c2)))))  NULLS FIRST);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN CASE rt1.c2  WHEN rt1.c2 THEN vt0.c2 ELSE t0.c2 END THEN ((t0.c1) IS TRUE) END CROSS JOIN rt1 ON (('171205735' IN ()) IN ()) CROSS JOIN vt0 ON ((((t0.c2)>>(vt1.c0))) IS TRUE) WHERE (0.4911413945922899) ORDER BY (((vt1.c0 COLLATE BINARY))>((((rt1.c2) NOT BETWEEN (vt1.c1) AND (t0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN ())) ORDER BY ((((rt1.c0) BETWEEN (vt0.c1) AND (vt0.c0))) ISNULL);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((((vt0.c2)AND(vt0.c1)))OR(rt1.c2)))OR(vt1.c1)))AND(x'')) IN ())) ORDER BY (((vt1.c2 IN ())) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2)AND(vt0.c1)))OR(rt1.c2)))OR(vt1.c1)))AND(x'')) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((vt1.c2 IN ())) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((((vt0.c2)AND(vt0.c1)))OR(rt1.c2)))OR(vt1.c1)))AND(x'')) IN ())) ORDER BY (((vt1.c2 IN ())) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c2)AND(vt0.c1)))OR(rt1.c2)))OR(vt1.c1)))AND(x'')) IN ())) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY (((vt1.c2 IN ())) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1 WHERE ((((((((((vt0.c2)AND(vt0.c1)))OR(rt1.c2)))OR(vt1.c1)))AND(x'')) IN ())) ORDER BY (((vt1.c2 IN ())) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE TRIM(DISTINCT t0.c1, t0.c1)  WHEN (NOT (t0.c1)) THEN CASE vt0.c1  WHEN '''r(~' THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT t0.c1, t0.c1)  WHEN (NOT (t0.c1)) THEN CASE vt0.c1  WHEN '''r(~' THEN vt0.c2 END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE TRIM(DISTINCT t0.c1, t0.c1)  WHEN (NOT (t0.c1)) THEN CASE vt0.c1  WHEN '''r(~' THEN vt0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT t0.c1, t0.c1)  WHEN (NOT (t0.c1)) THEN CASE vt0.c1  WHEN '''r(~' THEN vt0.c2 END END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE TRIM(DISTINCT t0.c1, t0.c1)  WHEN (NOT (t0.c1)) THEN CASE vt0.c1  WHEN '''r(~' THEN vt0.c2 END END);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (((0X2db09b81) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0x2db09b81) NOT NULL)) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (((0X2db09b81) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((0x2db09b81) NOT NULL)) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (((0X2db09b81) NOT NULL));
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE (CASE CAST(t0.c1 AS TEXT)  WHEN json_array(vt0.c0, vt1.c0, rt1.c0, t0.c0, '481579237', t0.c2) THEN ((((t0.c0)AND(rt1.c0)))OR(-2078161848)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c1 AS TEXT)  WHEN json_array(vt0.c0, vt1.c0, rt1.c0, t0.c0, '481579237', t0.c2) THEN ((((t0.c0)AND(rt1.c0)))OR(-2078161848)) END) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE (CASE CAST(t0.c1 AS TEXT)  WHEN json_array(vt0.c0, vt1.c0, rt1.c0, t0.c0, '481579237', t0.c2) THEN ((((t0.c0)AND(rt1.c0)))OR(-2078161848)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(t0.c1 AS TEXT)  WHEN json_array(vt0.c0, vt1.c0, rt1.c0, t0.c0, '481579237', t0.c2) THEN ((((t0.c0)AND(rt1.c0)))OR(-2078161848)) END) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE (CASE CAST(t0.c1 AS TEXT)  WHEN json_array(vt0.c0, vt1.c0, rt1.c0, t0.c0, '481579237', t0.c2) THEN ((((t0.c0)AND(rt1.c0)))OR(-2078161848)) END);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CASE x'b495'  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CASE x'b495'  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END IN (NULL))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CASE x'b495'  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END IN (NULL)));
SELECT SUM(count) FROM (SELECT (((CASE x'b495'  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END IN (NULL))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((CASE x'b495'  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt0.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 END IN (NULL)));
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((((vt0.c1)-(-520227556)))AND(rt1.c0 COLLATE NOCASE)))OR(0.733364742490233)))AND((~ (x'')))))OR((((vt0.c1, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, NULL, vt0.c2)) AND ((vt0.c1, x'', rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)-(-520227556)))AND(rt1.c0 COLLATE NOCASE)))OR(0.733364742490233)))AND((~ (x'')))))OR((((vt0.c1, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, NULL, vt0.c2)) AND ((vt0.c1, x'', rt1.c2)))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((((vt0.c1)-(-520227556)))AND(rt1.c0 COLLATE NOCASE)))OR(0.733364742490233)))AND((~ (x'')))))OR((((vt0.c1, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, NULL, vt0.c2)) AND ((vt0.c1, x'', rt1.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1)-(-520227556)))AND(rt1.c0 COLLATE NOCASE)))OR(0.733364742490233)))AND((~ (x'')))))OR((((vt0.c1, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, NULL, vt0.c2)) AND ((vt0.c1, x'', rt1.c2)))))) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (((((((((((vt0.c1)-(-520227556)))AND(rt1.c0 COLLATE NOCASE)))OR(0.733364742490233)))AND((~ (x'')))))OR((((vt0.c1, t0.c1, vt1.c0)) NOT BETWEEN ((t0.c2, NULL, vt0.c2)) AND ((vt0.c1, x'', rt1.c2))))));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE ''  WHEN x'0cf37d91' THEN ((vt1.c0) IS TRUE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN x'0cf37d91' THEN ((vt1.c0) IS TRUE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE ''  WHEN x'0cf37d91' THEN ((vt1.c0) IS TRUE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN x'0cf37d91' THEN ((vt1.c0) IS TRUE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (CASE ''  WHEN x'0cf37d91' THEN ((vt1.c0) IS TRUE) ELSE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)) END);
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (rtreenode(((t0.c2)+(t0.c0)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c2)+(t0.c0)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) IS TRUE)  as count FROM t0, vt0, vt1, rt1);
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (rtreenode(((t0.c2)+(t0.c0)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c2)+(t0.c0)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END)) IS TRUE)  as count FROM t0, vt0, vt1, rt1);
SELECT ALL * FROM t0, vt0, vt1, rt1 WHERE (rtreenode(((t0.c2)+(t0.c0)), CASE t0.c1  WHEN t0.c0 THEN t0.c2 END));
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c1)+(NULL)))-(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(NULL)))-(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c1)+(NULL)))-(((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)+(NULL)))-(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT * FROM vt1 NATURAL JOIN vt0 WHERE (((((vt1.c1)+(NULL)))-(((vt1.c1) ISNULL))));
SELECT * FROM rt1, vt0, vt1, t0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY '787339025';
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY '787339025');
SELECT * FROM rt1, vt0, vt1, t0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY '787339025';
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY '787339025');
SELECT * FROM rt1, vt0, vt1, t0 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY '787339025';
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND ((t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) NOT BETWEEN (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0))))) AND ((t0.c0))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2) IS FALSE)) IS TRUE)) ORDER BY 0.38044288706358975  NULLS LAST, (((((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)>=(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.38044288706358975  NULLS LAST, (((((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)>=(vt1.c1))))) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2) IS FALSE)) IS TRUE)) ORDER BY 0.38044288706358975  NULLS LAST, (((((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)>=(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c2) IS FALSE)) IS TRUE)) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.38044288706358975  NULLS LAST, (((((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)>=(vt1.c1))))) DESC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((vt1.c2) IS FALSE)) IS TRUE)) ORDER BY 0.38044288706358975  NULLS LAST, (((((vt1.c2) BETWEEN (vt1.c0) AND (t0.c2))))<((((vt1.c2)>=(vt1.c1))))) DESC;
SELECT * FROM vt1, vt0, t0 WHERE (((UNLIKELY(vt1.c0))>((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt1.c0))>((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((UNLIKELY(vt1.c0))>((vt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(vt1.c0))>((vt1.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (((UNLIKELY(vt1.c0))>((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)>(vt0.c0))))) ORDER BY NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)>(vt0.c0))))) ORDER BY NULL COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.c2)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c2)>(vt0.c0))))) ORDER BY NULL COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND (((- (vt0.c2)))))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND (((- (vt0.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (CAST(rt1.c0 AS REAL) IN ()) ASC);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND (((- (vt0.c2)))))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND (((- (vt0.c2)))))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (CAST(rt1.c0 AS REAL) IN ()) ASC);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((vt0.c2)) BETWEEN (((+ (vt0.c2)))) AND (((- (vt0.c2)))))) ORDER BY (CAST(rt1.c0 AS REAL) IN ()) ASC;
SELECT * FROM t0, rt1, vt1 WHERE (vt1.c2) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOTNULL));
SELECT * FROM t0, rt1, vt1 WHERE (vt1.c2) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c2) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOTNULL));
SELECT * FROM t0, rt1, vt1 WHERE (vt1.c2) ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOTNULL);
SELECT ALL * FROM vt1 WHERE (((((((-1.006659212E9)OR(vt1.c2)))AND(vt1.c2)))&(((((vt1.c0)AND(vt1.c2)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((-1.006659212E9)OR(vt1.c2)))AND(vt1.c2)))&(((((vt1.c0)AND(vt1.c2)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((-1.006659212E9)OR(vt1.c2)))AND(vt1.c2)))&(((((vt1.c0)AND(vt1.c2)))AND(vt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((-1.006659212E9)OR(vt1.c2)))AND(vt1.c2)))&(((((vt1.c0)AND(vt1.c2)))AND(vt1.c2))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((-1.006659212E9)OR(vt1.c2)))AND(vt1.c2)))&(((((vt1.c0)AND(vt1.c2)))AND(vt1.c2)))));
