-- Time: 2024/06/09 13:18:01
-- Database: database85
-- Database version: 3.40.0
-- seed value: 3388810785
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
ANALYZE; -- 5ms;
VACUUM main; -- 1ms;
REINDEX BINARY; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA threads = -9181125068878772646; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='1765849930'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '23414'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 236202335); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 5ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), ((+ (((0xffffffffdcaa3868)||(0x2c159101))))), (0.36256583395043285); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=739610881,5');\n; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c0)=('1765849930', 0.5580852844231389) WHERE vt0.c0; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (739610881); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=0.7736908406800236 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0))>>(vt0.c0)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode = MEMORY; -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c0)=('1765849930') WHERE (vt1.c0 IN ()) COLLATE BINARY; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 259575738);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -592824216);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=2'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, x'', '272839560'); -- 1ms;
INSERT OR REPLACE INTO vt1 VALUES (0.22115039130446323), (NULL), ('0應fWE'); -- 0ms;
UPDATE vt1 SET (c0, c0, c0)=(0.7973668834435261, '1956350622', 0.8723317050155817); -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1845735908); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '20150'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1418853865); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1639047607); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt1 SET (c0)=(x''); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, 0.359395964459157, NULL); -- 9ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('1965333132'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'4b50'); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=(0.9363487800185081) WHERE CAST((((vt1.c0))>=((vt1.c0))) AS NUMERIC); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-592824216') WHERE (((NOT (vt0.c0)))OR(((vt0.c0)||(vt0.c0)))); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL WHERE (((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) ISNULL)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.134125163547115), ('-592824216'), (''), (x''), (x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1775244976,8');\n; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 2ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (x'', '1775244976'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7973668834435261); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (x'1604'), (0.9213462814002974), ('0應fWE'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('') WHERE (((((((rt0.c0, 0.35382768221698846, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))OR(((rt0.c2) NOTNULL))))AND((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))); -- 0ms;
PRAGMA temp.mmap_size = -1472331925337771495; -- 0ms;
UPDATE vt0 SET c0='0應fWE'; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=x'', c0=1822201272, c0=0.7535070034646036 WHERE (vt1.c0 IN ()); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2, c0)=('	]S\rdMlK', '-1143903888'); -- 0ms;
REINDEX; -- 0ms;
UPDATE vt0 SET (c0)=(0X7fffffffffffffff) WHERE ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))+(((vt0.c0) ISNULL))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.20458405740490337); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x''; -- 10ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('259575738'), (0.6079650801057882), (-88964315); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0, c0)=(NULL, NULL, 0Xffffffff94d0b09d) WHERE ((NULL) NOTNULL); -- 0ms;
PRAGMA temp.shrink_memory; -- 1ms;
UPDATE vt1 SET c0='-950717418', c0=x'', c0=0Xffffffff8281d04b WHERE ((vt1.c0)&(vt1.c0)) COLLATE RTRIM; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(-2.105421749E9) WHERE CAST(((rt0.c1)>>(rt0.c1)) AS NUMERIC); -- 1ms;
ANALYZE; -- 4ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c2, c0) VALUES ('	]S\rdMlK', '', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, 0.6891213187612776); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 7ms;
DELETE FROM rt0; -- 0ms;
UPDATE OR REPLACE vt1 SET c0=-876230134, c0='0.20458405740490337', c0=x'7cc5', c0=0.7839051722982852; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (NULL), ('%f'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (-592824216, '-1e500', '쾺0+d(큋iS'), (50749450, '1765849930', x'6bf81b8a'), (NULL, NULL, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x'') WHERE UNLIKELY(LIKELY('272839560')); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 0ms;
UPDATE rt0 SET (c2)=(x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 'lo%y0Yb', 2.59575738E8); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', x'', 0.20458405740490337), ('3T', '3t', 0.041298541953840306), (NULL, NULL, x''); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (-570788769), (0.8545598046616655), ('e!'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x'b567'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((((((((((rt0.c2)<<(vt1.c0)))AND(((vt0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((((rt0.c2)<<(vt1.c0)))AND(((vt0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((((((((((rt0.c2)<<(vt1.c0)))AND(((vt0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((((((rt0.c2)<<(vt1.c0)))AND(((vt0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((- (vt1.c0)))>>(CASE rt0.c2  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN rt0.c0 END))) ORDER BY ((((((((((rt0.c2)<<(vt1.c0)))AND(((vt0.c0) ISNULL))))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))OR((NOT (rt0.c1)))))AND(TRIM(DISTINCT rt0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c0 IN ()))&(TRIM(rt0.c0))), (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(TRIM(rt0.c0))), (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c0 IN ()))&(TRIM(rt0.c0))), (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(TRIM(rt0.c0))), (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c0 IN ()))&(TRIM(rt0.c0))), (CAST(rt0.c0 AS REAL) IN ()) DESC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c0)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c0)=(rt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c0)==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c0)=(rt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) RIGHT OUTER JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON CAST(CAST(vt0.c0 AS REAL) AS BLOB) RIGHT OUTER JOIN rt0 ON rt0.c0 WHERE (IFNULL(DISTINCT CAST(rt0.c0 AS BLOB), ((rt0.c0)==(rt0.c0))));
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(((vt1.c0)||(vt0.c0)))))AND(((vt1.c0)LIKE(vt0.c0)))))AND(NULL)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)%((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(((vt1.c0)||(vt0.c0)))))AND(((vt1.c0)LIKE(vt0.c0)))))AND(NULL)))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)%((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(((vt1.c0)||(vt0.c0)))))AND(((vt1.c0)LIKE(vt0.c0)))))AND(NULL)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)%((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(((vt1.c0)||(vt0.c0)))))AND(((vt1.c0)LIKE(vt0.c0)))))AND(NULL)))OR(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)%((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(vt0.c0 COLLATE BINARY)))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(((vt1.c0)||(vt0.c0)))))AND(((vt1.c0)LIKE(vt0.c0)))))AND(NULL)))OR(vt1.c0 COLLATE NOCASE))) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)%((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (0.18859250934059668) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END DESC  NULLS FIRST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.18859250934059668) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END DESC  NULLS FIRST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.18859250934059668) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END DESC  NULLS FIRST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.18859250934059668) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END DESC  NULLS FIRST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.18859250934059668) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN (~ (vt0.c0)) ELSE (vt0.c0 IN (vt0.c0)) END DESC  NULLS FIRST, (NOT (CASE WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (((((vt0.c0)OR(vt1.c0)))OR(x'0a8d')) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(x'0a8d')) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (((((vt0.c0)OR(vt1.c0)))OR(x'0a8d')) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt1.c0)))OR(x'0a8d')) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (vt1.c0 IN ()) COLLATE RTRIM WHERE (((((vt0.c0)OR(vt1.c0)))OR(x'0a8d')) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.22115039130446323, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS TEXT)))>=((vt0.c0, ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((rt0.c0)*((NOT (rt0.c1))))  NULLS LAST, ((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(vt0.c0)))OR((rt0.c2 IN ()))))AND('')))OR(((rt0.c0)!=(x'46f52bd5')))))OR(vt0.c0)))OR('Z'));
SELECT SUM(count) FROM (SELECT (((((0.22115039130446323, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS TEXT)))>=((vt0.c0, ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0)*((NOT (rt0.c1))))  NULLS LAST, ((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(vt0.c0)))OR((rt0.c2 IN ()))))AND('')))OR(((rt0.c0)<>(x'46f52bd5')))))OR(vt0.c0)))OR('Z')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.22115039130446323, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS TEXT)))>=((vt0.c0, ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((rt0.c0)*((NOT (rt0.c1))))  NULLS LAST, ((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(vt0.c0)))OR((rt0.c2 IN ()))))AND('')))OR(((rt0.c0)!=(x'46f52bd5')))))OR(vt0.c0)))OR('Z'));
SELECT SUM(count) FROM (SELECT (((((0.22115039130446323, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS TEXT)))>=((vt0.c0, ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c0)*((NOT (rt0.c1))))  NULLS LAST, ((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(vt0.c0)))OR((rt0.c2 IN ()))))AND('')))OR(((rt0.c0)<>(x'46f52bd5')))))OR(vt0.c0)))OR('Z')));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((0.22115039130446323, ((rt0.c1) IS TRUE), CAST(rt0.c2 AS TEXT)))>=((vt0.c0, ((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY ((rt0.c0)*((NOT (rt0.c1))))  NULLS LAST, ((((((((((((CASE WHEN rt0.c1 THEN rt0.c0 END)AND(vt0.c0)))OR((rt0.c2 IN ()))))AND('')))OR(((rt0.c0)!=(x'46f52bd5')))))OR(vt0.c0)))OR('Z'));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS TRUE)) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((NULL) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)>=(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=('-876230134')) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c2) NOTNULL)))<=(((- (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>=('-876230134')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c2) NOTNULL)))<=(((- (rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=('-876230134')) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c2) NOTNULL)))<=(((- (rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>=('-876230134')) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c2) NOTNULL)))<=(((- (rt0.c0))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)>=('-876230134')) IN ())) ORDER BY (COALESCE(DISTINCT rt0.c0, rt0.c1) IN (rt0.c1 COLLATE NOCASE)) DESC  NULLS FIRST, (((((rt0.c2) NOTNULL)))<=(((- (rt0.c0))))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((LIKELY(DISTINCT 0.5580852844231389)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT 0.5580852844231389)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((LIKELY(DISTINCT 0.5580852844231389)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT 0.5580852844231389)) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END END) ORDER BY ((LIKELY(DISTINCT 0.5580852844231389)) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)+(vt1.c0)))||(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt1.c0)))||(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)+(vt1.c0)))||(((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)+(vt1.c0)))||(((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)+(vt1.c0)))||(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((vt1.c0))<>((rt0.c0)))) AND (vt1.c0))) ORDER BY (((rt0.c0)<=(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((vt1.c0))<>((rt0.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c0)<=(rt0.c2)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((vt1.c0))<>((rt0.c0)))) AND (vt1.c0))) ORDER BY (((rt0.c0)<=(rt0.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((vt1.c0))<>((rt0.c0)))) AND (vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((rt0.c0)<=(rt0.c2)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((vt1.c0))<>((rt0.c0)))) AND (vt1.c0))) ORDER BY (((rt0.c0)<=(rt0.c2)) IN ()) ASC;
SELECT * FROM vt1 WHERE ((('259575738')/(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0)==(LOWER(DISTINCT vt1.c0)))  NULLS FIRST, CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('259575738')/(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((vt1.c0)=(LOWER(DISTINCT vt1.c0)))  NULLS FIRST, CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((('259575738')/(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0)==(LOWER(DISTINCT vt1.c0)))  NULLS FIRST, CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('259575738')/(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((vt1.c0)=(LOWER(DISTINCT vt1.c0)))  NULLS FIRST, CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((('259575738')/(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) ORDER BY ((vt1.c0)==(LOWER(DISTINCT vt1.c0)))  NULLS FIRST, CAST(CAST(vt1.c0 AS BLOB) AS TEXT) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON -2.105421749E9 CROSS JOIN rt0 ON ((((NULL)>(NULL)))+((~ (rt0.c0)))) WHERE (IFNULL(DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((~ (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON -2.105421749E9 CROSS JOIN rt0 ON ((((NULL)>(NULL)))+((~ (rt0.c0)))) ORDER BY ((~ (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON -2.105421749E9 CROSS JOIN rt0 ON ((((NULL)>(NULL)))+((~ (rt0.c0)))) WHERE (IFNULL(DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((~ (rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON -2.105421749E9 CROSS JOIN rt0 ON ((((NULL)>(NULL)))+((~ (rt0.c0)))) ORDER BY ((~ (rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON -2.105421749E9 CROSS JOIN rt0 ON ((((NULL)>(NULL)))+((~ (rt0.c0)))) WHERE (IFNULL(DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c0)), ((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))) ORDER BY ((~ (rt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((('')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ((((('')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('')) BETWEEN ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((rt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)*(vt1.c0)) COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)*(vt1.c0)) COLLATE NOCASE) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)*(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)*(vt1.c0)) COLLATE NOCASE) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<>((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<>((vt1.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))!=((vt1.c0))) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(1469605198 AS REAL))AND(((rt0.c2)IS(0.051951385229232705))))) ORDER BY (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1469605198 AS REAL))AND(((rt0.c2)IS(0.051951385229232705))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(1469605198 AS REAL))AND(((rt0.c2)IS(0.051951385229232705))))) ORDER BY (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(1469605198 AS REAL))AND(((rt0.c2)IS(0.051951385229232705))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(1469605198 AS REAL))AND(((rt0.c2)IS(0.051951385229232705))))) ORDER BY (+ ((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (0.8310423753961762);
SELECT SUM(count) FROM (SELECT ALL ((0.8310423753961762) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (0.8310423753961762);
SELECT SUM(count) FROM (SELECT ALL ((0.8310423753961762) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (0.8310423753961762);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c2 ELSE NULL END)==(rt0.c1)) FULL OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (((((rt0.c1)<>(rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c2 ELSE NULL END)=(rt0.c1)) FULL OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c2 ELSE NULL END)==(rt0.c1)) FULL OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (((((rt0.c1)<>(rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c2 ELSE NULL END)=(rt0.c1)) FULL OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) IS TRUE));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((CASE WHEN NULL THEN rt0.c2 ELSE NULL END)==(rt0.c1)) FULL OUTER JOIN vt0 ON ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0))) IS TRUE) WHERE (((((rt0.c1)<>(rt0.c1))) BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c2) NOT NULL))));
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '918121426' ELSE rt0.c2 END THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL THEN ((vt1.c0) BETWEEN ('0.7839051722982852') AND (x'')) WHEN ((rt0.c2)<>(rt0.c2)) THEN TRIM(rt0.c0, rt0.c2) ELSE ((vt1.c0)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN '918121426' ELSE rt0.c2 END THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL THEN ((vt1.c0) BETWEEN ('0.7839051722982852') AND (x'')) WHEN ((rt0.c2)!=(rt0.c2)) THEN TRIM(rt0.c0, rt0.c2) ELSE ((vt1.c0)GLOB(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '918121426' ELSE rt0.c2 END THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL THEN ((vt1.c0) BETWEEN ('0.7839051722982852') AND (x'')) WHEN ((rt0.c2)<>(rt0.c2)) THEN TRIM(rt0.c0, rt0.c2) ELSE ((vt1.c0)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN '918121426' ELSE rt0.c2 END THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL THEN ((vt1.c0) BETWEEN ('0.7839051722982852') AND (x'')) WHEN ((rt0.c2)!=(rt0.c2)) THEN TRIM(rt0.c0, rt0.c2) ELSE ((vt1.c0)GLOB(vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN '918121426' ELSE rt0.c2 END THEN (((rt0.c2))>=((rt0.c2))) WHEN NULL THEN ((vt1.c0) BETWEEN ('0.7839051722982852') AND (x'')) WHEN ((rt0.c2)<>(rt0.c2)) THEN TRIM(rt0.c0, rt0.c2) ELSE ((vt1.c0)GLOB(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN 1431012804 ELSE NULL END THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN 1431012804 ELSE NULL END THEN vt0.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN 1431012804 ELSE NULL END THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN 1431012804 ELSE NULL END THEN vt0.c0 END) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN 1431012804 ELSE NULL END THEN vt0.c0 END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0, '*閸㎈m#*t]v')) NOT BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS NUMERIC))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS NUMERIC), ((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, '*閸㎈m#*t]v')) NOT BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS NUMERIC))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS NUMERIC), ((vt1.c0) ISNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0, '*閸㎈m#*t]v')) NOT BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS NUMERIC))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS NUMERIC), ((vt1.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, '*閸㎈m#*t]v')) NOT BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS NUMERIC))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS NUMERIC), ((vt1.c0) ISNULL))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0, vt0.c0, '*閸㎈m#*t]v')) NOT BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS NUMERIC))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END, CAST(vt1.c0 AS NUMERIC), ((vt1.c0) ISNULL)))));
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((NULL)OR((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((vt0.c0)/(vt0.c0)))) WHERE (((x'' COLLATE NOCASE)>=(((rt0.c2)+(rt0.c1))))) ORDER BY HEX(DISTINCT vt0.c0) COLLATE RTRIM  NULLS LAST, COALESCE(CAST(vt1.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)>=(((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((((NULL)OR((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((vt0.c0)/(vt0.c0)))) ORDER BY HEX(DISTINCT vt0.c0) COLLATE RTRIM  NULLS LAST, COALESCE(CAST(vt1.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((NULL)OR((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((vt0.c0)/(vt0.c0)))) WHERE (((x'' COLLATE NOCASE)>=(((rt0.c2)+(rt0.c1))))) ORDER BY HEX(DISTINCT vt0.c0) COLLATE RTRIM  NULLS LAST, COALESCE(CAST(vt1.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE NOCASE)>=(((rt0.c2)+(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((((NULL)OR((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((vt0.c0)/(vt0.c0)))) ORDER BY HEX(DISTINCT vt0.c0) COLLATE RTRIM  NULLS LAST, COALESCE(CAST(vt1.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((NULL)OR((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))))OR(((vt0.c0)/(vt0.c0)))) WHERE (((x'' COLLATE NOCASE)>=(((rt0.c2)+(rt0.c1))))) ORDER BY HEX(DISTINCT vt0.c0) COLLATE RTRIM  NULLS LAST, COALESCE(CAST(vt1.c0 AS NUMERIC), CASE WHEN rt0.c0 THEN vt0.c0 END) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE)) ORDER BY (('-609742896')+((((NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC, ((NULL)|(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (('-609742896')+((((NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC, ((NULL)|(((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE)) ORDER BY (('-609742896')+((((NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC, ((NULL)|(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (('-609742896')+((((NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC, ((NULL)|(((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) IS FALSE)) ORDER BY (('-609742896')+((((NULL, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC, ((NULL)|(((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (x'') AND (rt0.c2)))) WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(0.7602508778262167)))AND((NOT ('-778659339')))))OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND(0.7602508778262167)))AND((NOT ('-778659339')))))OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (x'') AND (rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (x'') AND (rt0.c2)))) WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(0.7602508778262167)))AND((NOT ('-778659339')))))OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0 COLLATE NOCASE)AND(0.7602508778262167)))AND((NOT ('-778659339')))))OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (x'') AND (rt0.c2)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (x'') AND (rt0.c2)))) WHERE (((((((((vt0.c0 COLLATE NOCASE)AND(0.7602508778262167)))AND((NOT ('-778659339')))))OR((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((x'')))) ORDER BY (((vt1.c0 IN (vt1.c0)))>(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((x'')))) ORDER BY (((vt1.c0 IN (vt1.c0)))>(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0 IN (vt1.c0)))>(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((~ (vt1.c0)))) AND ((x'')))) ORDER BY (((vt1.c0 IN (vt1.c0)))>(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE ((rt0.c0)<<(vt1.c0))  WHEN ((rt0.c2) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY '藄E3.x	Zl{';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)<<(vt1.c0))  WHEN ((rt0.c2) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY '藄E3.x	Zl{');
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE ((rt0.c0)<<(vt1.c0))  WHEN ((rt0.c2) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY '藄E3.x	Zl{';
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)<<(vt1.c0))  WHEN ((rt0.c2) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY '藄E3.x	Zl{');
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (CASE ((rt0.c0)<<(vt1.c0))  WHEN ((rt0.c2) NOT NULL) THEN ((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY '藄E3.x	Zl{';
SELECT * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c0 COLLATE RTRIM)) ASC);
SELECT * FROM vt1 WHERE (((- (vt1.c0)) IN ())) ORDER BY ((((vt1.c0)IS NOT(vt1.c0))) BETWEEN (CAST(vt1.c0 AS REAL)) AND (vt1.c0 COLLATE RTRIM)) ASC;
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((0.5580852844231389)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.5580852844231389)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE x'' END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((0.5580852844231389)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE x'' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.5580852844231389)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE x'' END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN (((0.5580852844231389)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE x'' END);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (''))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN vt1.c0 THEN LIKELIHOOD(rt0.c2, 0.7979070211785257) WHEN 0x7a0533fa THEN (NOT (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (''))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN vt1.c0 THEN LIKELIHOOD(rt0.c2, 0.7979070211785257) WHEN 0x7a0533fa THEN (NOT (rt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (''))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN vt1.c0 THEN LIKELIHOOD(rt0.c2, 0.7979070211785257) WHEN 0x7a0533fa THEN (NOT (rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (''))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN vt1.c0 THEN LIKELIHOOD(rt0.c2, 0.7979070211785257) WHEN 0x7a0533fa THEN (NOT (rt0.c0)) END DESC);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0) ORDER BY CASE ((rt0.c0) BETWEEN (rt0.c0) AND (''))  WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN vt1.c0 THEN LIKELIHOOD(rt0.c2, 0.7979070211785257) WHEN 0x7a0533fa THEN (NOT (rt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0))=((vt0.c0))))>=(UPPER(DISTINCT rt0.c0)))) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c0))<((rt0.c0, rt0.c0, vt0.c0)))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0))))>=(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1, vt0.c0, rt0.c0))<((rt0.c0, rt0.c0, vt0.c0)))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0))=((vt0.c0))))>=(UPPER(DISTINCT rt0.c0)))) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c0))<((rt0.c0, rt0.c0, vt0.c0)))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))==((vt0.c0))))>=(UPPER(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1, vt0.c0, rt0.c0))<((rt0.c0, rt0.c0, vt0.c0)))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0))=((vt0.c0))))>=(UPPER(DISTINCT rt0.c0)))) ORDER BY ((((((rt0.c1, vt0.c0, rt0.c0))<((rt0.c0, rt0.c0, vt0.c0)))))<((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, -1444825768)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0) NOT NULL))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)=(((((0.9162309022554539)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, -1444825768)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0))==((vt0.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0) NOT NULL))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)=(((((0.9162309022554539)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, -1444825768)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0) NOT NULL))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)=(((((0.9162309022554539)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, -1444825768)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0))==((vt0.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt1.c0) NOT NULL))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)=(((((0.9162309022554539)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, -1444825768)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (((vt0.c0, vt1.c0, vt0.c0))=((vt0.c0, vt0.c0, vt1.c0))), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)) AND ((((vt0.c0)AND(vt0.c0)), vt0.c0 COLLATE BINARY, vt1.c0 COLLATE BINARY)))) ORDER BY ((((((vt1.c0) NOT NULL))OR(((vt0.c0)IS(vt0.c0)))))OR(((vt0.c0) NOT NULL))) DESC  NULLS FIRST, ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))) IS TRUE) DESC  NULLS FIRST, ((vt0.c0 COLLATE RTRIM)=(((((0.9162309022554539)AND(vt1.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))+(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON COALESCE(((vt0.c0)OR(rt0.c2)), ((0.3596006129945466) NOTNULL), rt0.c2, vt0.c0) WHERE ((((vt1.c0)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON COALESCE(((vt0.c0)OR(rt0.c2)), ((0.3596006129945466) NOTNULL), rt0.c2, vt0.c0));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON COALESCE(((vt0.c0)OR(rt0.c2)), ((0.3596006129945466) NOTNULL), rt0.c2, vt0.c0) WHERE ((((vt1.c0)IS NOT(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON COALESCE(((vt0.c0)OR(rt0.c2)), ((0.3596006129945466) NOTNULL), rt0.c2, vt0.c0));
SELECT ALL COUNT(*) FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON COALESCE(((vt0.c0)OR(rt0.c2)), ((0.3596006129945466) NOTNULL), rt0.c2, vt0.c0) WHERE ((((vt1.c0)IS NOT(rt0.c1)) IN ()));
SELECT * FROM vt1, rt0, vt0 WHERE (((((HEX(DISTINCT '1965333132'))AND(CASE WHEN vt1.c0 THEN 'M?2L	0' ELSE rt0.c0 END)))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT '1965333132'))AND(CASE WHEN vt1.c0 THEN 'M?2L	0' ELSE rt0.c0 END)))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((((HEX(DISTINCT '1965333132'))AND(CASE WHEN vt1.c0 THEN 'M?2L	0' ELSE rt0.c0 END)))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((HEX(DISTINCT '1965333132'))AND(CASE WHEN vt1.c0 THEN 'M?2L	0' ELSE rt0.c0 END)))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (((((HEX(DISTINCT '1965333132'))AND(CASE WHEN vt1.c0 THEN 'M?2L	0' ELSE rt0.c0 END)))OR(((((((((vt0.c0)AND(rt0.c0)))AND(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER));
SELECT * FROM rt0, vt0, vt1 WHERE ((('FALSE') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('FALSE') IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((('FALSE') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('FALSE') IS TRUE)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((('FALSE') IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) IS TRUE)) ORDER BY ((vt1.c0) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(ABS(DISTINCT vt1.c0) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) END) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, x'92eb', NULL))) THEN (NOT (rt0.c2)) WHEN ((rt0.c1)&(rt0.c0)) THEN (((rt0.c0))>=((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, x'92eb', NULL))) THEN (NOT (rt0.c2)) WHEN ((rt0.c1)&(rt0.c0)) THEN (((rt0.c0))>=((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) END) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, x'92eb', NULL))) THEN (NOT (rt0.c2)) WHEN ((rt0.c1)&(rt0.c0)) THEN (((rt0.c0))>=((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) END) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, x'92eb', NULL))) THEN (NOT (rt0.c2)) WHEN ((rt0.c1)&(rt0.c0)) THEN (((rt0.c0))>=((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0) NOTNULL) THEN CAST(rt0.c0 AS BLOB) END) ORDER BY CASE WHEN (((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, x'92eb', NULL))) THEN (NOT (rt0.c2)) WHEN ((rt0.c1)&(rt0.c0)) THEN (((rt0.c0))>=((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)) THEN (rt0.c2 IN (rt0.c2)) WHEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c0 THEN CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END END;
SELECT ALL * FROM vt1 WHERE (CASE TRIM(vt1.c0)  WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(vt1.c0)  WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE TRIM(vt1.c0)  WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) END);
SELECT SUM(count) FROM (SELECT ((CASE TRIM(vt1.c0)  WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) END) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CASE TRIM(vt1.c0)  WHEN (+ (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('')) END);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(0.8659191331000001))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(0.8659191331000001))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(0.8659191331000001))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(0.8659191331000001))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))||(0.8659191331000001))) ORDER BY CAST(((vt0.c0)<<(vt0.c0)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN 1956350622 WHEN '-2105421749' THEN rt0.c0 END IN ()) WHERE (CASE vt1.c0  WHEN (~ (rt0.c2)) THEN ((vt1.c0) ISNULL) END) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (~ (rt0.c2)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN 1956350622 WHEN '-2105421749' THEN rt0.c0 END IN ()) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN 1956350622 WHEN '-2105421749' THEN rt0.c0 END IN ()) WHERE (CASE vt1.c0  WHEN (~ (rt0.c2)) THEN ((vt1.c0) ISNULL) END) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN (~ (rt0.c2)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN 1956350622 WHEN '-2105421749' THEN rt0.c0 END IN ()) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (CASE WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN 1956350622 WHEN '-2105421749' THEN rt0.c0 END IN ()) WHERE (CASE vt1.c0  WHEN (~ (rt0.c2)) THEN ((vt1.c0) ISNULL) END) ORDER BY ((CAST(rt0.c1 AS REAL)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c0))>>(((rt0.c2) NOT BETWEEN (-1.143903888E9) AND (rt0.c2))))) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c2, rt0.c0))>>(((rt0.c2) NOT BETWEEN (-1.143903888E9) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c0))>>(((rt0.c2) NOT BETWEEN (-1.143903888E9) AND (rt0.c2))))) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(rt0.c2, rt0.c0))>>(((rt0.c2) NOT BETWEEN (-1.143903888E9) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c2, rt0.c0))>>(((rt0.c2) NOT BETWEEN (-1.143903888E9) AND (rt0.c2))))) ORDER BY CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('rj'))) AS BLOB)) ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (~ (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('rj'))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (~ (rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('rj'))) AS BLOB)) ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (~ (rt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('rj'))) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (~ (rt0.c0)) END  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('rj'))) AS BLOB)) ORDER BY CASE ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))  WHEN ((rt0.c1)LIKE(rt0.c1)) THEN (~ (rt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(0.855753517650701)))AND(((vt0.c0)*(vt0.c0))))) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.855753517650701)))AND(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(0.855753517650701)))AND(((vt0.c0)*(vt0.c0))))) ORDER BY ((((((vt0.c0)-(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(0.855753517650701)))AND(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)-(vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((vt0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN (('-1088455430')IS NOT(rt0.c2)) ELSE ((rt0.c1)IS NOT(vt0.c0)) END FULL OUTER JOIN vt1 ON rt0.c2 WHERE ((~ (((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN (('-1088455430')IS NOT(rt0.c2)) ELSE ((rt0.c1)IS NOT(vt0.c0)) END FULL OUTER JOIN vt1 ON rt0.c2);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN (('-1088455430')IS NOT(rt0.c2)) ELSE ((rt0.c1)IS NOT(vt0.c0)) END FULL OUTER JOIN vt1 ON rt0.c2 WHERE ((~ (((rt0.c0)/(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0)/(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN ((((rt0.c1)OR(vt1.c0)))OR(vt0.c0)) THEN (('-1088455430')IS NOT(rt0.c2)) ELSE ((rt0.c1)IS NOT(vt0.c0)) END FULL OUTER JOIN vt1 ON rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 END IN ())) ORDER BY '' DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((x''))<>(((((vt0.c0))<>((vt0.c0))))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-8.76230134E8)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))<>(((((vt0.c0))!=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-8.76230134E8)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((x''))<>(((((vt0.c0))<>((vt0.c0))))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-8.76230134E8)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x''))<>(((((vt0.c0))!=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-8.76230134E8)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((x''))<>(((((vt0.c0))<>((vt0.c0))))))) ORDER BY (NOT (((vt0.c0) NOT BETWEEN (vt0.c0) AND (-8.76230134E8)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((((((rt0.c2)==(vt1.c0))))>=((((rt0.c1)%(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)=(vt1.c0))))>=((((rt0.c1)%(vt1.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((((((rt0.c2)==(vt1.c0))))>=((((rt0.c1)%(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)=(vt1.c0))))>=((((rt0.c1)%(vt1.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c2 COLLATE NOCASE) BETWEEN (rt0.c0) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) WHERE ((((((rt0.c2)==(vt1.c0))))>=((((rt0.c1)%(vt1.c0))))));
SELECT * FROM rt0, vt0 WHERE (((NULL)%(918121426)) COLLATE NOCASE) ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((vt0.c0)/(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)%(918121426)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((vt0.c0)/(rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((NULL)%(918121426)) COLLATE NOCASE) ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((vt0.c0)/(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)%(918121426)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((vt0.c0)/(rt0.c2)) END  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((NULL)%(918121426)) COLLATE NOCASE) ORDER BY CASE WHEN (~ (rt0.c0)) THEN ((vt0.c0)/(rt0.c2)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-((rt0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY (+ (((rt0.c0)IS(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-((rt0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c0)IS(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-((rt0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY (+ (((rt0.c0)IS(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)-((rt0.c0 IN (rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (((rt0.c0)IS(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)-((rt0.c0 IN (rt0.c0, rt0.c1))))) ORDER BY (+ (((rt0.c0)IS(rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c1) IS TRUE)))) ORDER BY ((((rt0.c1)-(rt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM ORDER BY ((((rt0.c1)-(rt0.c1))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c1) IS TRUE)))) ORDER BY ((((rt0.c1)-(rt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM ORDER BY ((((rt0.c1)-(rt0.c1))) ISNULL)  NULLS FIRST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON rt0.c1 COLLATE RTRIM WHERE (((CAST(rt0.c0 AS INTEGER))GLOB(((rt0.c1) IS TRUE)))) ORDER BY ((((rt0.c1)-(rt0.c1))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (NULLIF(DISTINCT (((vt0.c0, vt0.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt0.c0))), (((vt1.c0))<=((vt1.c0)))));
SELECT * FROM rt0, vt1, vt0 WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c0)) BETWEEN ((('') NOTNULL)) AND (((1.965333132E9) NOT BETWEEN (rt0.c0) AND (-1.444825768E9))))) ORDER BY (((vt1.c0)LIKE(vt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c2) AND ('1822201272'))))  NULLS FIRST, (((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c2, rt0.c0)) BETWEEN ((('') NOTNULL)) AND (((1.965333132E9) NOT BETWEEN (rt0.c0) AND (-1.444825768E9))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((vt1.c0)LIKE(vt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c2) AND ('1822201272'))))  NULLS FIRST, (((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT * FROM rt0, vt1, vt0 WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c0)) BETWEEN ((('') NOTNULL)) AND (((1.965333132E9) NOT BETWEEN (rt0.c0) AND (-1.444825768E9))))) ORDER BY (((vt1.c0)LIKE(vt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c2) AND ('1822201272'))))  NULLS FIRST, (((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT rt0.c2, rt0.c0)) BETWEEN ((('') NOTNULL)) AND (((1.965333132E9) NOT BETWEEN (rt0.c0) AND (-1.444825768E9))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((vt1.c0)LIKE(vt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c2) AND ('1822201272'))))  NULLS FIRST, (((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE))));
SELECT * FROM rt0, vt1, vt0 WHERE (((NULLIF(DISTINCT rt0.c2, rt0.c0)) BETWEEN ((('') NOTNULL)) AND (((1.965333132E9) NOT BETWEEN (rt0.c0) AND (-1.444825768E9))))) ORDER BY (((vt1.c0)LIKE(vt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c2) AND ('1822201272'))))  NULLS FIRST, (((rt0.c1)) BETWEEN (((rt0.c0 IN (rt0.c2)))) AND ((rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (json(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json(((vt0.c0)IS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json(((vt0.c0)IS(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (~ (ABS(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (ABS(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (~ (ABS(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (~ (ABS(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) NOTNULL)) ORDER BY (~ (ABS(vt0.c0))) DESC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS INTEGER));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(NULL)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))>=(((rt0.c1)==(rt0.c2)))) WHERE ((+ (((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)AND(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))>=(((rt0.c1)==(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))>=(((rt0.c1)==(rt0.c2)))) WHERE ((+ (((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c1)AND(rt0.c1)))AND(vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))>=(((rt0.c1)==(rt0.c2)))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c2 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))>=(((rt0.c1)==(rt0.c2)))) WHERE ((+ (((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY HEX(DISTINCT (- (vt0.c0))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE x'' END ASC, (~ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (- (vt0.c0))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE x'' END ASC, (~ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY HEX(DISTINCT (- (vt0.c0))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE x'' END ASC, (~ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY HEX(DISTINCT (- (vt0.c0))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE x'' END ASC, (~ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY HEX(DISTINCT (- (vt0.c0))) DESC, CASE vt0.c0  WHEN vt0.c0 THEN '' ELSE x'' END ASC, (~ (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('	vcx') ORDER BY (((vt1.c0 COLLATE NOCASE))>=((rt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, x'' DESC  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('	vcx') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))>=((rt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, x'' DESC  NULLS LAST, rt0.c0 ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('	vcx') ORDER BY (((vt1.c0 COLLATE NOCASE))>=((rt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, x'' DESC  NULLS LAST, rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (('	vcx') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((vt1.c0 COLLATE NOCASE))>=((rt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, x'' DESC  NULLS LAST, rt0.c0 ASC);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('	vcx') ORDER BY (((vt1.c0 COLLATE NOCASE))>=((rt0.c0 COLLATE RTRIM))) DESC  NULLS LAST, x'' DESC  NULLS LAST, rt0.c0 ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN NULL THEN ((rt0.c2)<<(vt1.c0)) ELSE -592824216 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE RTRIM  WHEN NULL THEN ((rt0.c2)<<(vt1.c0)) ELSE -592824216 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN NULL THEN ((rt0.c2)<<(vt1.c0)) ELSE -592824216 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0 COLLATE RTRIM  WHEN NULL THEN ((rt0.c2)<<(vt1.c0)) ELSE -592824216 END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 WHERE (CASE rt0.c0 COLLATE RTRIM  WHEN NULL THEN ((rt0.c2)<<(vt1.c0)) ELSE -592824216 END);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(rt0.c1 AS REAL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)/(vt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-778659339')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-778659339')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)/(vt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)/(vt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-778659339')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-778659339')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)/(vt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt1.c0)/(vt1.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('-778659339')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))) IS FALSE)) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) ORDER BY (((((((((- (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR((((-2105421749, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, CAST(UPPER(DISTINCT vt1.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((- (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR((((-2105421749, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, CAST(UPPER(DISTINCT vt1.c0) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) ORDER BY (((((((((- (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR((((-2105421749, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, CAST(UPPER(DISTINCT vt1.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((- (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR((((-2105421749, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, CAST(UPPER(DISTINCT vt1.c0) AS INTEGER) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c0 COLLATE BINARY) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((~ (vt1.c0))))) ORDER BY (((((((((- (vt1.c0)))OR(((vt1.c0)&(vt1.c0)))))OR(vt1.c0)))AND(((vt1.c0)|(vt1.c0)))))OR((((-2105421749, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))  NULLS FIRST, CAST(UPPER(DISTINCT vt1.c0) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0)IS(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0)IS(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0)IS(rt0.c0))))) ORDER BY ((vt0.c0) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(x'' AS REAL)))>(('OX')))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(x'' AS REAL)))>(('OX')))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(x'' AS REAL)))>(('OX')))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(x'' AS REAL)))>(('OX')))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((CAST(x'' AS REAL)))>(('OX')))) ORDER BY NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON 0.019373612511848104 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (vt0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY, (((- (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON 0.019373612511848104 LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY, (((- (rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON 0.019373612511848104 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (vt0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY, (((- (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON 0.019373612511848104 LEFT OUTER JOIN vt0 ON vt1.c0 ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY, (((- (rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON 0.019373612511848104 LEFT OUTER JOIN vt0 ON vt1.c0 WHERE (vt0.c0) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE BINARY, (((- (rt0.c0))) IS TRUE);
SELECT * FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (NULL))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(-592824216 AS REAL) INNER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2)))) WHERE (((((rt0.c2)*(vt1.c0)))GLOB(json_type(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(vt1.c0)))GLOB(json_type(rt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(-592824216 AS REAL) INNER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(-592824216 AS REAL) INNER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2)))) WHERE (((((rt0.c2)*(vt1.c0)))GLOB(json_type(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)*(vt1.c0)))GLOB(json_type(rt0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(-592824216 AS REAL) INNER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(-592824216 AS REAL) INNER JOIN vt1 ON (- ((rt0.c2 IN (rt0.c2)))) WHERE (((((rt0.c2)*(vt1.c0)))GLOB(json_type(rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)) ORDER BY (~ (vt1.c0)), (((((((rt0.c0))>((vt1.c0))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))))AND((((0xffffffffe4771412, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (~ (vt1.c0)), (((((((rt0.c0))>((vt1.c0))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))))AND((((0xffffffffe4771412, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)) ORDER BY (~ (vt1.c0)), (((((((rt0.c0))>((vt1.c0))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))))AND((((0xffffffffe4771412, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, vt1.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (~ (vt1.c0)), (((((((rt0.c0))>((vt1.c0))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))))AND((((0xffffffffe4771412, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, vt1.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END AS REAL)) ORDER BY (~ (vt1.c0)), (((((((rt0.c0))>((vt1.c0))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)))))AND((((0xffffffffe4771412, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2, vt1.c0, vt0.c0)) AND ((rt0.c1, vt0.c0, vt1.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((0.08545630362140122)AND(vt0.c0)))OR(CASE '-113513177'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(0.02843527690294889)) WHEN 0.6891213187612776 THEN 0.7839051722982852 WHEN COALESCE(DISTINCT vt1.c0, NULL) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ABS(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(0.02843527690294889)) WHEN 0.6891213187612776 THEN 0.7839051722982852 WHEN COALESCE(DISTINCT vt1.c0, NULL) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((0.08545630362140122)AND(vt0.c0)))OR(CASE '-113513177'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY ABS(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((0.08545630362140122)AND(vt0.c0)))OR(CASE '-113513177'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(0.02843527690294889)) WHEN 0.6891213187612776 THEN 0.7839051722982852 WHEN COALESCE(DISTINCT vt1.c0, NULL) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ABS(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(0.02843527690294889)) WHEN 0.6891213187612776 THEN 0.7839051722982852 WHEN COALESCE(DISTINCT vt1.c0, NULL) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((((0.08545630362140122)AND(vt0.c0)))OR(CASE '-113513177'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) ORDER BY ABS(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON ((((0.08545630362140122)AND(vt0.c0)))OR(CASE '-113513177'  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)) WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))  WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c0)/(0.02843527690294889)) WHEN 0.6891213187612776 THEN 0.7839051722982852 WHEN COALESCE(DISTINCT vt1.c0, NULL) THEN CAST(vt0.c0 AS REAL) END) ORDER BY ABS(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS FALSE)) IS FALSE));
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY CAST(x'9184' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'9184' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY CAST(x'9184' AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(x'9184' AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NOT INDEXED WHERE (vt1.c0) ORDER BY CAST(x'9184' AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON 0.6685827583717178 WHERE (((((vt1.c0)AND(0.6661237817502249))) IS TRUE)) ORDER BY ((NULL)LIKE(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(0.6661237817502249))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON 0.6685827583717178 ORDER BY ((NULL)LIKE(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON 0.6685827583717178 WHERE (((((vt1.c0)AND(0.6661237817502249))) IS TRUE)) ORDER BY ((NULL)LIKE(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(0.6661237817502249))) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON 0.6685827583717178 ORDER BY ((NULL)LIKE(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON 0.6685827583717178 WHERE (((((vt1.c0)AND(0.6661237817502249))) IS TRUE)) ORDER BY ((NULL)LIKE(rt0.c1)) COLLATE BINARY;
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.48980274446824623)) BETWEEN ((+ (NULL))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c0, 0.48980274446824623)) BETWEEN ((+ (NULL))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.48980274446824623)) BETWEEN ((+ (NULL))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt0.c0, 0.48980274446824623)) BETWEEN ((+ (NULL))) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LIKELIHOOD(vt0.c0, 0.48980274446824623)) BETWEEN ((+ (NULL))) AND (vt0.c0)));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'482b') BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN (((rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'482b') BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN (((rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'482b') BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN (((rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'482b') BETWEEN (rt0.c0) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN (((rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0 COLLATE RTRIM)) AND ((((x'482b') BETWEEN (rt0.c0) AND (rt0.c2)))))) ORDER BY CASE WHEN ((rt0.c1)>>(rt0.c2)) THEN (((rt0.c0, rt0.c1, rt0.c1, rt0.c2, rt0.c0))>((rt0.c2, rt0.c2, rt0.c0, rt0.c0, rt0.c2))) ELSE rt0.c2 COLLATE RTRIM END  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (0Xffffffffe4771412);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe4771412) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0Xffffffffe4771412);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe4771412) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0Xffffffffe4771412);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))IS(((vt0.c0)*(vt1.c0))))) ORDER BY CASE 0.40986285570053815  WHEN -843814190 THEN vt1.c0 END COLLATE NOCASE, 0.855753517650701 DESC  NULLS FIRST, ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))IS(((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))) ORDER BY CASE 0.40986285570053815  WHEN -843814190 THEN vt1.c0 END COLLATE NOCASE, 0.855753517650701 DESC  NULLS FIRST, ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))IS(((vt0.c0)*(vt1.c0))))) ORDER BY CASE 0.40986285570053815  WHEN -843814190 THEN vt1.c0 END COLLATE NOCASE, 0.855753517650701 DESC  NULLS FIRST, ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))IS(((vt0.c0)*(vt1.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))) ORDER BY CASE 0.40986285570053815  WHEN -843814190 THEN vt1.c0 END COLLATE NOCASE, 0.855753517650701 DESC  NULLS FIRST, ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(CAST(vt0.c0 AS BLOB))) WHERE (((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))IS(((vt0.c0)*(vt1.c0))))) ORDER BY CASE 0.40986285570053815  WHEN -843814190 THEN vt1.c0 END COLLATE NOCASE, 0.855753517650701 DESC  NULLS FIRST, ((vt1.c0)<=(vt1.c0)) COLLATE NOCASE;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) NOTNULL)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('^N}g'))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('^N}g'))) AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) NOTNULL)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('^N}g'))) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('^N}g'))) AS NUMERIC) DESC);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) NOTNULL)) ORDER BY CAST((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND (('^N}g'))) AS NUMERIC) DESC;
SELECT ALL * FROM rt0 WHERE (CAST('' AS REAL)) ORDER BY (((rt0.c1)OR(rt0.c0)) IN ((('-1444825768') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)OR(rt0.c0)) IN ((('-1444825768') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST('' AS REAL)) ORDER BY (((rt0.c1)OR(rt0.c0)) IN ((('-1444825768') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)OR(rt0.c0)) IN ((('-1444825768') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST('' AS REAL)) ORDER BY (((rt0.c1)OR(rt0.c0)) IN ((('-1444825768') IS TRUE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((rt0.c2) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (rt0.c0)));
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)AND('a瀕I%땘p')))AND(rt0.c1)))>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND('a瀕I%땘p')))AND(rt0.c1)))>(rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)AND('a瀕I%땘p')))AND(rt0.c1)))>(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND('a瀕I%땘p')))AND(rt0.c1)))>(rt0.c2))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((rt0.c1)AND('a瀕I%땘p')))AND(rt0.c1)))>(rt0.c2)));
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) AND ((- (x''))))) ORDER BY 0.5494010988833338 DESC, ((((NOT (rt0.c2))))>=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) AND ((- (x''))))) IS TRUE)  as count FROM rt0 ORDER BY 0.5494010988833338 DESC, ((((NOT (rt0.c2))))>=(((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) AND ((- (x''))))) ORDER BY 0.5494010988833338 DESC, ((((NOT (rt0.c2))))>=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) AND ((- (x''))))) IS TRUE)  as count FROM rt0 ORDER BY 0.5494010988833338 DESC, ((((NOT (rt0.c2))))>=(((~ (rt0.c1))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c1))) BETWEEN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0))) AND ((- (x''))))) ORDER BY 0.5494010988833338 DESC, ((((NOT (rt0.c2))))>=(((~ (rt0.c1))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (TYPEOF(-5.70788769E8))) CROSS JOIN rt0 ON 's,G)m/' WHERE (((vt1.c0)&(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (TYPEOF(-5.70788769E8))) CROSS JOIN rt0 ON 's,G)m/');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (TYPEOF(-5.70788769E8))) CROSS JOIN rt0 ON 's,G)m/' WHERE (((vt1.c0)&(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (NOT (TYPEOF(-5.70788769E8))) CROSS JOIN rt0 ON 's,G)m/');
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (TYPEOF(-5.70788769E8))) CROSS JOIN rt0 ON 's,G)m/' WHERE (((vt1.c0)&(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) BETWEEN (rt0.c1) AND ('1956350622')))AND((((rt0.c2, vt0.c0, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, x'', rt0.c2, vt0.c0, rt0.c1))))) DESC, '-1860236085' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c0) BETWEEN (rt0.c1) AND ('1956350622')))AND((((rt0.c2, vt0.c0, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, x'', rt0.c2, vt0.c0, rt0.c1))))) DESC, '-1860236085' DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) BETWEEN (rt0.c1) AND ('1956350622')))AND((((rt0.c2, vt0.c0, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, x'', rt0.c2, vt0.c0, rt0.c1))))) DESC, '-1860236085' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c0) BETWEEN (rt0.c1) AND ('1956350622')))AND((((rt0.c2, vt0.c0, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, x'', rt0.c2, vt0.c0, rt0.c1))))) DESC, '-1860236085' DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM) ORDER BY ((((vt1.c0) BETWEEN (rt0.c1) AND ('1956350622')))AND((((rt0.c2, vt0.c0, rt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) AND ((vt1.c0, x'', rt0.c2, vt0.c0, rt0.c1))))) DESC, '-1860236085' DESC;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT ALL * FROM vt0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0))+(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c0))+(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0))+(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(rt0.c2, rt0.c0))+(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((NULLIF(rt0.c2, rt0.c0))+(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((259575738))>=((vt0.c0))))GLOB(CASE WHEN vt1.c0 THEN 0.42918067566189155 END))) ORDER BY TRIM((NULL IN (vt0.c0)), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((((259575738))>=((vt0.c0))))GLOB(CASE WHEN vt1.c0 THEN 0.42918067566189155 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM((NULL IN (vt0.c0)), vt0.c0) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((259575738))>=((vt0.c0))))GLOB(CASE WHEN vt1.c0 THEN 0.42918067566189155 END))) ORDER BY TRIM((NULL IN (vt0.c0)), vt0.c0) ASC;
SELECT SUM(count) FROM (SELECT (((((((259575738))>=((vt0.c0))))GLOB(CASE WHEN vt1.c0 THEN 0.42918067566189155 END))) IS TRUE)  as count FROM vt1, vt0 ORDER BY TRIM((NULL IN (vt0.c0)), vt0.c0) ASC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((259575738))>=((vt0.c0))))GLOB(CASE WHEN vt1.c0 THEN 0.42918067566189155 END))) ORDER BY TRIM((NULL IN (vt0.c0)), vt0.c0) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((((rt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)))AND(((rt0.c1) NOT NULL))))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)), ((((rt0.c1)==(-1.7976931348623157E308)))LIKE(rt0.c1)) ASC  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)))AND(((rt0.c1) NOT NULL))))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)), ((((rt0.c1)=(-1.7976931348623157E308)))LIKE(rt0.c1)) ASC  NULLS LAST, rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((((rt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)))AND(((rt0.c1) NOT NULL))))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)), ((((rt0.c1)==(-1.7976931348623157E308)))LIKE(rt0.c1)) ASC  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)))AND(((rt0.c1) NOT NULL))))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)), ((((rt0.c1)=(-1.7976931348623157E308)))LIKE(rt0.c1)) ASC  NULLS LAST, rt0.c2 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((((rt0.c0)OR(UPPER(DISTINCT vt0.c0))))OR(vt0.c0)))AND(((rt0.c1) NOT NULL))))OR(CASE WHEN rt0.c2 THEN NULL ELSE rt0.c2 END)), ((((rt0.c1)==(-1.7976931348623157E308)))LIKE(rt0.c1)) ASC  NULLS LAST, rt0.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)>=(vt0.c0)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN '-165804670' COLLATE BINARY THEN (vt1.c0 IN ()) ELSE ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-165804670' COLLATE BINARY THEN (vt1.c0 IN ()) ELSE ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN '-165804670' COLLATE BINARY THEN (vt1.c0 IN ()) ELSE ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-165804670' COLLATE BINARY THEN (vt1.c0 IN ()) ELSE ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN '-165804670' COLLATE BINARY THEN (vt1.c0 IN ()) ELSE ((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)) END);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('0.8659191331000001') ORDER BY (CAST(vt0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.8659191331000001') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('0.8659191331000001') ORDER BY (CAST(vt0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('0.8659191331000001') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (CAST(vt0.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ('0.8659191331000001') ORDER BY (CAST(vt0.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=(((- (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER)))>=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((CAST(vt1.c0 AS INTEGER)))>=(((- (vt0.c0))))));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2)IS(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (ABS(-1.345297975E9)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((vt1.c0)+(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (ABS(-1.345297975E9)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((vt1.c0)+(rt0.c2))) DESC);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2)IS(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (ABS(-1.345297975E9)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((vt1.c0)+(rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (ABS(-1.345297975E9)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((vt1.c0)+(rt0.c2))) DESC);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c2)IS(rt0.c1))) BETWEEN ((rt0.c0 IN ())) AND (ABS(-1.345297975E9)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((vt1.c0)+(rt0.c2))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((0.16493395977283787)) AND ((rt0.c1))))<=((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)) NOT BETWEEN ((0.16493395977283787)) AND ((rt0.c1))))<=((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((0.16493395977283787)) AND ((rt0.c1))))<=((rt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)) NOT BETWEEN ((0.16493395977283787)) AND ((rt0.c1))))<=((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((rt0.c0)) NOT BETWEEN ((0.16493395977283787)) AND ((rt0.c1))))<=((rt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC, CAST('<k+㝈' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC, CAST('<k+㝈' AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC, CAST('<k+㝈' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC, CAST('<k+㝈' AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ASC, CAST('<k+㝈' AS INTEGER)  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)>=(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0)>=(vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((+ (vt0.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt0.c0)=(vt0.c0))) AND ((vt1.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((+ (vt0.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((+ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt0.c0)=(vt0.c0))) AND ((vt1.c0 IN ()))) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET((+ (vt0.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))) BETWEEN (((vt0.c0)==(vt0.c0))) AND ((vt1.c0 IN ()))) ASC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0)))LIKE(vt0.c0)) WHERE ((((+ (vt1.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))OR((((vt0.c0))!=((0.1462757802576391))))))AND(rt0.c2)))AND(((rt0.c2)%(rt0.c0)))))AND(((rt0.c0) ISNULL)))  NULLS FIRST, ((((0.04912567719854022)OR(((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))))OR((('oRZF큋>')LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0)))LIKE(vt0.c0)) ORDER BY ((((((((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))OR((((vt0.c0))<>((0.1462757802576391))))))AND(rt0.c2)))AND(((rt0.c2)%(rt0.c0)))))AND(((rt0.c0) ISNULL)))  NULLS FIRST, ((((0.04912567719854022)OR(((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))))OR((('oRZF큋>')LIKE(vt1.c0))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0)))LIKE(vt0.c0)) WHERE ((((+ (vt1.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))OR((((vt0.c0))!=((0.1462757802576391))))))AND(rt0.c2)))AND(((rt0.c2)%(rt0.c0)))))AND(((rt0.c0) ISNULL)))  NULLS FIRST, ((((0.04912567719854022)OR(((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))))OR((('oRZF큋>')LIKE(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0)))LIKE(vt0.c0)) ORDER BY ((((((((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))OR((((vt0.c0))<>((0.1462757802576391))))))AND(rt0.c2)))AND(((rt0.c2)%(rt0.c0)))))AND(((rt0.c0) ISNULL)))  NULLS FIRST, ((((0.04912567719854022)OR(((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))))OR((('oRZF큋>')LIKE(vt1.c0))))  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (vt0.c0 COLLATE RTRIM)) FULL OUTER JOIN vt1 ON ((((vt1.c0)<<(vt1.c0)))LIKE(vt0.c0)) WHERE ((((+ (vt1.c0))) IS FALSE)) ORDER BY ((((((((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))OR((((vt0.c0))!=((0.1462757802576391))))))AND(rt0.c2)))AND(((rt0.c2)%(rt0.c0)))))AND(((rt0.c0) ISNULL)))  NULLS FIRST, ((((0.04912567719854022)OR(((((vt1.c0)AND(vt0.c0)))OR(rt0.c0)))))OR((('oRZF큋>')LIKE(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((((((((rt0.c1))>=((rt0.c0))))AND(((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))AND(0.14478507950329977))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((((rt0.c1))<((rt0.c2)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1))>=((rt0.c0))))AND(((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))AND(0.14478507950329977))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((((rt0.c1))<((rt0.c2)))) NOTNULL) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((((((((rt0.c1))>=((rt0.c0))))AND(((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))AND(0.14478507950329977))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((((rt0.c1))<((rt0.c2)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1))>=((rt0.c0))))AND(((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))AND(0.14478507950329977))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((((rt0.c1))<((rt0.c2)))) NOTNULL) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((((((((((((rt0.c1))>=((rt0.c0))))AND(((((((((((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(vt0.c0)))))OR(CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))AND(0.14478507950329977))) ORDER BY CAST(rt0.c2 COLLATE RTRIM AS BLOB), (((((rt0.c1))<((rt0.c2)))) NOTNULL) DESC;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((0.21242820048157762)LIKE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.21242820048157762)LIKE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((0.21242820048157762)LIKE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.21242820048157762)LIKE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((0.21242820048157762)LIKE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2, ((rt0.c0)+(rt0.c0)), vt1.c0))>(((+ (vt0.c0)), ROUND(rt0.c0, rt0.c2), vt1.c0))) WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((((rt0.c0)IS(rt0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((((rt0.c0)IS(rt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2, ((rt0.c0)+(rt0.c0)), vt1.c0))>(((+ (vt0.c0)), ROUND(rt0.c0, rt0.c2), vt1.c0))) ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2, ((rt0.c0)+(rt0.c0)), vt1.c0))>(((+ (vt0.c0)), ROUND(rt0.c0, rt0.c2), vt1.c0))) WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((((rt0.c0)IS(rt0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((((rt0.c0)IS(rt0.c1)))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2, ((rt0.c0)+(rt0.c0)), vt1.c0))>(((+ (vt0.c0)), ROUND(rt0.c0, rt0.c2), vt1.c0))) ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON (((rt0.c2, ((rt0.c0)+(rt0.c0)), vt1.c0))>(((+ (vt0.c0)), ROUND(rt0.c0, rt0.c2), vt1.c0))) WHERE ((((vt0.c0)) BETWEEN ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))) AND ((((rt0.c0)IS(rt0.c1)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (HEX(((vt1.c0)LIKE(NULL)))) ORDER BY NULL  NULLS LAST, (- (0.6685827583717178)) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0)LIKE(NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS LAST, (- (0.6685827583717178)) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (HEX(((vt1.c0)LIKE(NULL)))) ORDER BY NULL  NULLS LAST, (- (0.6685827583717178)) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(((vt1.c0)LIKE(NULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY NULL  NULLS LAST, (- (0.6685827583717178)) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (HEX(((vt1.c0)LIKE(NULL)))) ORDER BY NULL  NULLS LAST, (- (0.6685827583717178)) DESC  NULLS LAST, (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0)*(vt1.c0))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR((vt1.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(0.9864701764157817)))OR(rt0.c2)))-(((rt0.c2)IS(1880633445))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((rt0.c2)AND(0.9864701764157817)))OR(rt0.c2)))-(((rt0.c2)IS(1880633445)))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR((vt1.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(0.9864701764157817)))OR(rt0.c2)))-(((rt0.c2)IS(1880633445))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((((rt0.c2)AND(0.9864701764157817)))OR(rt0.c2)))-(((rt0.c2)IS(1880633445)))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2)))OR((vt1.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(0.9864701764157817)))OR(rt0.c2)))-(((rt0.c2)IS(1880633445))));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, (((vt1.c0))<>((vt0.c0))), (+ (vt0.c0))))>((HEX(vt1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0 COLLATE NOCASE)))) ORDER BY ((x'')<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((vt1.c0)==(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, (((vt1.c0))<>((vt0.c0))), (+ (vt0.c0))))>((HEX(vt1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((x'')<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((vt1.c0)=(vt1.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, (((vt1.c0))<>((vt0.c0))), (+ (vt0.c0))))>((HEX(vt1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0 COLLATE NOCASE)))) ORDER BY ((x'')<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((vt1.c0)==(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, (((vt1.c0))<>((vt0.c0))), (+ (vt0.c0))))>((HEX(vt1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((x'')<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((vt1.c0)=(vt1.c0))) IS TRUE) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((vt1.c0, (((vt1.c0))<>((vt0.c0))), (+ (vt0.c0))))>((HEX(vt1.c0), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.c0 COLLATE NOCASE)))) ORDER BY ((x'')<(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((((vt1.c0)==(vt1.c0))) IS TRUE) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END END) ORDER BY ((((~ (rt0.c0))))!=(((- (vt1.c0))))) ASC  NULLS LAST, ((((x'')AND(CASE '2083107372'  WHEN rt0.c2 THEN vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((~ (rt0.c0))))!=(((- (vt1.c0))))) ASC  NULLS LAST, ((((x'')AND(CASE '2083107372'  WHEN rt0.c2 THEN vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END END) ORDER BY ((((~ (rt0.c0))))!=(((- (vt1.c0))))) ASC  NULLS LAST, ((((x'')AND(CASE '2083107372'  WHEN rt0.c2 THEN vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((~ (rt0.c0))))!=(((- (vt1.c0))))) ASC  NULLS LAST, ((((x'')AND(CASE '2083107372'  WHEN rt0.c2 THEN vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c0 END END) ORDER BY ((((~ (rt0.c0))))!=(((- (vt1.c0))))) ASC  NULLS LAST, ((((x'')AND(CASE '2083107372'  WHEN rt0.c2 THEN vt0.c0 END)))AND(((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0)=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0)=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0)=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0)=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (((((((((((vt0.c0) IS TRUE))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(CAST(vt0.c0 AS TEXT))))AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))))OR(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c0)=(vt0.c0)))))AND(NULLIF(DISTINCT vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (NOT (rt0.c0))));
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((- ('2047161338')) IN (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((- ('2047161338')) IN (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((- ('2047161338')) IN (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((- ('2047161338')) IN (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN (('')) AND ((vt0.c0)))) BETWEEN ((- (vt0.c0))) AND ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((- ('2047161338')) IN (((vt0.c0) IS TRUE))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2) NOTNULL) THEN ((NULL)-(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2) NOTNULL) THEN ((NULL)-(NULL)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2) NOTNULL) THEN ((NULL)-(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2) NOTNULL) THEN ((NULL)-(NULL)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c2) NOTNULL) THEN ((NULL)-(NULL)) END);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((x'0e6a', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)+('-461958126')))))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) BETWEEN ((UNLIKELY(x''))) AND ((vt1.c0))) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((x'0e6a', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)+('-461958126')))))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((UNLIKELY(x''))) AND ((vt1.c0))) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((x'0e6a', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)+('-461958126')))))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) BETWEEN ((UNLIKELY(x''))) AND ((vt1.c0))) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((x'0e6a', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)+('-461958126')))))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((UNLIKELY(x''))) AND ((vt1.c0))) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((x'0e6a', vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))OR(((vt1.c0) IS TRUE))))OR(((vt1.c0)+('-461958126')))))AND(vt1.c0)))AND(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))OR(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) BETWEEN ((UNLIKELY(x''))) AND ((vt1.c0))) DESC, ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(vt1.c0 COLLATE NOCASE)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('땘') ORDER BY ((vt1.c0) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('땘') IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c0) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('땘') ORDER BY ((vt1.c0) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('땘') IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c0) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ('땘') ORDER BY ((vt1.c0) BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END))  NULLS FIRST, (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UNICODE(ABS(rt0.c2))) ORDER BY rt0.c2 ASC, ((('k7yH#', 0.17586790657228846, rt0.c2)) NOT BETWEEN ((CAST(0.4642821532643675 AS BLOB), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)), -165804670)) AND (((NOT (0.8659191331000001)), (rt0.c2 IN ()), (((vt0.c0))==((rt0.c1)))))) ASC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN 0.134125163547115 THEN ((rt0.c2)LIKE(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(ABS(rt0.c2))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY rt0.c2 ASC, ((('k7yH#', 0.17586790657228846, rt0.c2)) NOT BETWEEN ((CAST(0.4642821532643675 AS BLOB), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)), -165804670)) AND (((NOT (0.8659191331000001)), (rt0.c2 IN ()), (((vt0.c0))==((rt0.c1)))))) ASC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN 0.134125163547115 THEN ((rt0.c2)LIKE(vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UNICODE(ABS(rt0.c2))) ORDER BY rt0.c2 ASC, ((('k7yH#', 0.17586790657228846, rt0.c2)) NOT BETWEEN ((CAST(0.4642821532643675 AS BLOB), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)), -165804670)) AND (((NOT (0.8659191331000001)), (rt0.c2 IN ()), (((vt0.c0))==((rt0.c1)))))) ASC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN 0.134125163547115 THEN ((rt0.c2)LIKE(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((UNICODE(ABS(rt0.c2))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY rt0.c2 ASC, ((('k7yH#', 0.17586790657228846, rt0.c2)) NOT BETWEEN ((CAST(0.4642821532643675 AS BLOB), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)), -165804670)) AND (((NOT (0.8659191331000001)), (rt0.c2 IN ()), (((vt0.c0))==((rt0.c1)))))) ASC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN 0.134125163547115 THEN ((rt0.c2)LIKE(vt1.c0)) END ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (UNICODE(ABS(rt0.c2))) ORDER BY rt0.c2 ASC, ((('k7yH#', 0.17586790657228846, rt0.c2)) NOT BETWEEN ((CAST(0.4642821532643675 AS BLOB), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)), -165804670)) AND (((NOT (0.8659191331000001)), (rt0.c2 IN ()), (((vt0.c0))==((rt0.c1)))))) ASC  NULLS FIRST, CASE ((vt0.c0) NOT NULL)  WHEN 0.134125163547115 THEN ((rt0.c2)LIKE(vt1.c0)) END ASC;
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN LOWER(DISTINCT vt1.c0) ELSE (NULL IN (vt1.c0, vt1.c0)) END) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN LOWER(DISTINCT vt1.c0) ELSE (NULL IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) END ASC);
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN LOWER(DISTINCT vt1.c0) ELSE (NULL IN (vt1.c0, vt1.c0)) END) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS INTEGER) THEN LOWER(DISTINCT vt1.c0) ELSE (NULL IN (vt1.c0, vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) END ASC);
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS INTEGER) THEN LOWER(DISTINCT vt1.c0) ELSE (NULL IN (vt1.c0, vt1.c0)) END) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((vt1.c0)AND(vt1.c0)) END ASC;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 IN ()))>=(vt1.c0))) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>=(vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 IN ()))>=(vt1.c0))) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))>=(vt1.c0))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 IN ()))>=(vt1.c0))) ORDER BY ((((rt0.c1) IS TRUE)) NOT NULL)  NULLS FIRST;
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((vt1.c0)<(NULL)))), CAST(((x'446b')AND(vt1.c0)) AS NUMERIC)  NULLS FIRST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((vt1.c0)<(NULL)))), CAST(((x'446b')AND(vt1.c0)) AS NUMERIC)  NULLS FIRST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((vt1.c0)<(NULL)))), CAST(((x'446b')AND(vt1.c0)) AS NUMERIC)  NULLS FIRST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((vt1.c0)<(NULL)))), CAST(((x'446b')AND(vt1.c0)) AS NUMERIC)  NULLS FIRST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((CAST(vt1.c0 AS NUMERIC))<<(((vt1.c0)<(NULL)))), CAST(((x'446b')AND(vt1.c0)) AS NUMERIC)  NULLS FIRST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (((vt1.c0)||(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((((0.15633239572861446)AND(vt0.c0)))OR(rt0.c0))))>(((((NULL, rt0.c1, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c2, 0.5494010988833338, 'I屯गS%G,', vt1.c0, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((0.15633239572861446)AND(vt0.c0)))OR(rt0.c0))))>(((((NULL, rt0.c1, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c2, 0.5494010988833338, 'I屯गS%G,', vt1.c0, vt1.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((((0.15633239572861446)AND(vt0.c0)))OR(rt0.c0))))>(((((NULL, rt0.c1, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c2, 0.5494010988833338, 'I屯गS%G,', vt1.c0, vt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((0.15633239572861446)AND(vt0.c0)))OR(rt0.c0))))>(((((NULL, rt0.c1, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c2, 0.5494010988833338, 'I屯गS%G,', vt1.c0, vt1.c0))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((((((0.15633239572861446)AND(vt0.c0)))OR(rt0.c0))))>(((((NULL, rt0.c1, rt0.c2, rt0.c2, rt0.c0))<>((rt0.c2, 0.5494010988833338, 'I屯गS%G,', vt1.c0, vt1.c0)))))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)<(rt0.c2)))AND('')))AND(((vt0.c0)IS(vt1.c0)))) INNER JOIN vt0 ON ((((rt0.c0 COLLATE NOCASE)OR(ROUND(rt0.c0, rt0.c1))))OR(HEX(rt0.c0))) WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)<(rt0.c2)))AND('')))AND(((vt0.c0)IS(vt1.c0)))) INNER JOIN vt0 ON ((((rt0.c0 COLLATE NOCASE)OR(ROUND(rt0.c0, rt0.c1))))OR(HEX(rt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)<(rt0.c2)))AND('')))AND(((vt0.c0)IS(vt1.c0)))) INNER JOIN vt0 ON ((((rt0.c0 COLLATE NOCASE)OR(ROUND(rt0.c0, rt0.c1))))OR(HEX(rt0.c0))) WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)<(rt0.c2)))AND('')))AND(((vt0.c0)IS(vt1.c0)))) INNER JOIN vt0 ON ((((rt0.c0 COLLATE NOCASE)OR(ROUND(rt0.c0, rt0.c1))))OR(HEX(rt0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((((vt0.c0)<(rt0.c2)))AND('')))AND(((vt0.c0)IS(vt1.c0)))) INNER JOIN vt0 ON ((((rt0.c0 COLLATE NOCASE)OR(ROUND(rt0.c0, rt0.c1))))OR(HEX(rt0.c0))) WHERE (((((rt0.c1) ISNULL)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)LIKE(rt0.c2)))AND((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)LIKE(rt0.c2)))AND((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)LIKE(rt0.c2)))AND((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1)LIKE(rt0.c2)))AND((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c1)LIKE(rt0.c2)))AND((rt0.c1 IN (rt0.c0, rt0.c1)))))OR(CAST(rt0.c1 AS TEXT))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)))AND(rt0.c0 COLLATE BINARY)))AND(rt0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN 0.6685827583717178 END)OR((rt0.c1 IN (rt0.c1)))))OR(((rt0.c1)&(rt0.c1))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN 0.6685827583717178 END)OR((rt0.c1 IN (rt0.c1)))))OR(((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN 0.6685827583717178 END)OR((rt0.c1 IN (rt0.c1)))))OR(((rt0.c1)&(rt0.c1))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (rt0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c2 THEN 0.6685827583717178 END)OR((rt0.c1 IN (rt0.c1)))))OR(((rt0.c1)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (rt0.c0 COLLATE RTRIM)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN 0.6685827583717178 END)OR((rt0.c1 IN (rt0.c1)))))OR(((rt0.c1)&(rt0.c1))))) ORDER BY ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2))) BETWEEN (LIKE(rt0.c1, rt0.c2)) AND (rt0.c0 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))>(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))>(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))>(((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))>(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))>(((vt1.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)>>((0.6321706522680791 IN (vt0.c0)))) WHERE (((NULL)&(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))))OR(rt0.c0)) DESC, (- ('e|k7'));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)>>((0.6321706522680791 IN (vt0.c0)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))))OR(rt0.c0)) DESC, (- ('e|k7')));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)>>((0.6321706522680791 IN (vt0.c0)))) WHERE (((NULL)&(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))))OR(rt0.c0)) DESC, (- ('e|k7'));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)>>((0.6321706522680791 IN (vt0.c0)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))))OR(rt0.c0)) DESC, (- ('e|k7')));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c1 COLLATE RTRIM)>>((0.6321706522680791 IN (vt0.c0)))) WHERE (((NULL)&(CAST(rt0.c0 AS BLOB)))) ORDER BY ((((rt0.c0 COLLATE NOCASE)AND(((((rt0.c2)AND(vt0.c0)))AND(vt1.c0)))))OR(rt0.c0)) DESC, (- ('e|k7'));
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0)&(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c0), (+ (vt0.c0)), ((-8.76230134E8)>=(vt0.c0)), ((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), ((vt0.c0)&(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c0), (+ (vt0.c0)), ((-8.76230134E8)>=(vt0.c0)), ((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0)&(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c0), (+ (vt0.c0)), ((-8.76230134E8)>=(vt0.c0)), ((vt0.c0)IS(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ()), ((vt0.c0)&(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c0), (+ (vt0.c0)), ((-8.76230134E8)>=(vt0.c0)), ((vt0.c0)IS(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0 IN ()), ((vt0.c0)&(vt0.c0)), vt0.c0, (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))), ((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0))))<((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)), TRIM(DISTINCT vt0.c0, vt0.c0), (+ (vt0.c0)), ((-8.76230134E8)>=(vt0.c0)), ((vt0.c0)IS(vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((rt0.c0) BETWEEN (((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND ((((NULL, 'I', ''))>=((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(x'' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND ((((NULL, 'I', ''))>=((rt0.c2, rt0.c2, '')))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'' AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((rt0.c0) BETWEEN (((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND ((((NULL, 'I', ''))>=((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(x'' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND ((((NULL, 'I', ''))>=((rt0.c2, rt0.c2, '')))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(x'' AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((rt0.c0) BETWEEN (((((((((rt0.c2)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(vt0.c0))) AND ((((NULL, 'I', ''))>=((rt0.c2, rt0.c2, '')))))) ORDER BY CAST(x'' AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN (NULL) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0))) NOT BETWEEN (NULL) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN (NULL) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c0))) NOT BETWEEN (NULL) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)+(rt0.c0))) NOT BETWEEN (NULL) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((NULL, vt1.c0, rt0.c1))<((vt1.c0, '1469605198', rt0.c1)))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt1.c0, rt0.c1))<((vt1.c0, '1469605198', rt0.c1)))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((NULL, vt1.c0, rt0.c1))<((vt1.c0, '1469605198', rt0.c1)))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((NULL, vt1.c0, rt0.c1))<((vt1.c0, '1469605198', rt0.c1)))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((NULL, vt1.c0, rt0.c1))<((vt1.c0, '1469605198', rt0.c1)))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((NOT (rt0.c1)))));
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(((('50749450', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL))))))AND(((0.27015932631365436) NOT BETWEEN ('rm') AND (vt1.c0)))))OR((('#I%g>v-[') IS FALSE))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((((vt1.c0))>((vt1.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))OR(((('50749450', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, NULL))))))AND(((0.27015932631365436) NOT BETWEEN ('rm') AND (vt1.c0)))))OR((('#I%g>v-[') IS FALSE))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((((vt1.c0))>((vt1.c0)))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(((('50749450', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL))))))AND(((0.27015932631365436) NOT BETWEEN ('rm') AND (vt1.c0)))))OR((('#I%g>v-[') IS FALSE))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((((vt1.c0))>((vt1.c0)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c0)))OR(((('50749450', vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, NULL))))))AND(((0.27015932631365436) NOT BETWEEN ('rm') AND (vt1.c0)))))OR((('#I%g>v-[') IS FALSE))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((((vt1.c0))>((vt1.c0)))))) DESC);
SELECT ALL * FROM vt1 WHERE (((((((((((vt1.c0)AND(vt1.c0)))OR(((('50749450', vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, NULL))))))AND(((0.27015932631365436) NOT BETWEEN ('rm') AND (vt1.c0)))))OR((('#I%g>v-[') IS FALSE))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)))) AND (((((vt1.c0))>((vt1.c0)))))) DESC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '259575738' WHERE (((((((rt0.c2)||(vt0.c0)))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((vt0.c0)<>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)||(vt0.c0)))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '259575738' ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((vt0.c0)<>(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '259575738' WHERE (((((((rt0.c2)||(vt0.c0)))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((vt0.c0)<>(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)||(vt0.c0)))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON '259575738' ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((vt0.c0)<>(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON '259575738' WHERE (((((((rt0.c2)||(vt0.c0)))AND((vt0.c0 IN ()))))OR((vt0.c0 IN ())))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN (((vt0.c0)<>(rt0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((CHAR(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CHAR(rt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((CHAR(rt0.c0) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CHAR(rt0.c0) IN ()));
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.9738840320859039 ELSE vt1.c0 END) AND ((vt1.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0, vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.9738840320859039 ELSE vt1.c0 END) AND ((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 IN (vt0.c0, vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.9738840320859039 ELSE vt1.c0 END) AND ((vt1.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0, vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT vt1.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.9738840320859039 ELSE vt1.c0 END) AND ((vt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 IN (vt0.c0, vt1.c0)) IN ()));
SELECT * FROM vt0, vt1 WHERE (((LIKELY(DISTINCT vt1.c0)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 0.9738840320859039 ELSE vt1.c0 END) AND ((vt1.c0 IN (vt0.c0))))) ORDER BY ((vt0.c0 IN (vt0.c0, vt1.c0)) IN ());
SELECT * FROM vt1, vt0, rt0 WHERE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (((('-1993344865')OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)GLOB(vt0.c0))))<=((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, rt0.c0, (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (((('-1993344865')OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)GLOB(vt0.c0))))<=((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, rt0.c0, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (((('-1993344865')OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)GLOB(vt0.c0))))<=((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, rt0.c0, (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (((('-1993344865')OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)GLOB(vt0.c0))))<=((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, rt0.c0, (rt0.c1 IN ()))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)), (((('-1993344865')OR(rt0.c0)))AND(rt0.c2)), ((rt0.c1)GLOB(vt0.c0))))<=((CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE vt0.c0 END, rt0.c0, (rt0.c1 IN ())))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND ('')) COLLATE BINARY WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT UNLIKELY(NULL))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND ('')) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND ('')) COLLATE BINARY WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT UNLIKELY(NULL))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND ('')) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (vt1.c0) AND ('')) COLLATE BINARY WHERE (UNLIKELY(DISTINCT UNLIKELY(NULL)));
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.22115039130446323)) AND ((((vt0.c0)*(rt0.c2)))))) ORDER BY TRIM(DISTINCT (~ (rt0.c2)), (~ (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.22115039130446323)) AND ((((vt0.c0)*(rt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY TRIM(DISTINCT (~ (rt0.c2)), (~ (vt1.c0)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.22115039130446323)) AND ((((vt0.c0)*(rt0.c2)))))) ORDER BY TRIM(DISTINCT (~ (rt0.c2)), (~ (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((0.22115039130446323)) AND ((((vt0.c0)*(rt0.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY TRIM(DISTINCT (~ (rt0.c2)), (~ (vt1.c0)))  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((0.22115039130446323)) AND ((((vt0.c0)*(rt0.c2)))))) ORDER BY TRIM(DISTINCT (~ (rt0.c2)), (~ (vt1.c0)))  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ORDER BY (((rt0.c2)*(vt0.c0)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((rt0.c2)*(vt0.c0)) IN (NULL)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ORDER BY (((rt0.c2)*(vt0.c0)) IN (NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((rt0.c2)*(vt0.c0)) IN (NULL)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC)) ORDER BY (((rt0.c2)*(vt0.c0)) IN (NULL));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)*(LIKE(rt0.c0, vt0.c0))) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)|(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN 1417232089 THEN vt0.c0 ELSE rt0.c1 END)) WHERE (CAST(TRIM(DISTINCT rt0.c2, vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c2, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)*(LIKE(rt0.c0, vt0.c0))) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)|(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN 1417232089 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT * FROM vt0 FULL OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)*(LIKE(rt0.c0, vt0.c0))) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)|(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN 1417232089 THEN vt0.c0 ELSE rt0.c1 END)) WHERE (CAST(TRIM(DISTINCT rt0.c2, vt1.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c2, vt1.c0) AS REAL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON ((rt0.c1 COLLATE RTRIM)*(LIKE(rt0.c0, vt0.c0))) CROSS JOIN rt0 ON ((CASE rt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END)|(CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 WHEN 1417232089 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT * FROM vt0 WHERE (((vt0.c0)&(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)&(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)&(((vt0.c0) IS TRUE)))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0))>((vt0.c0))), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)LIKE(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2)LIKE(rt0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CHAR(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((((rt0.c2) IS FALSE))GLOB(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, (((+ (vt1.c0)))<<(((((vt1.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) IS FALSE))GLOB(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, (((+ (vt1.c0)))<<(((((vt1.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CHAR(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((((rt0.c2) IS FALSE))GLOB(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, (((+ (vt1.c0)))<<(((((vt1.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CHAR(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) IS FALSE))GLOB(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, (((+ (vt1.c0)))<<(((((vt1.c0)AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CHAR(((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)))) ORDER BY ((((rt0.c2) IS FALSE))GLOB(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, (((+ (vt1.c0)))<<(((((vt1.c0)AND(rt0.c1)))AND(rt0.c0))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(LENGTH(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))<>(LENGTH(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(LENGTH(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS TEXT))<>(LENGTH(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT))<>(LENGTH(vt1.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((0.7346420990864002) BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.7346420990864002) BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7346420990864002) BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.7346420990864002) BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.7346420990864002) BETWEEN (((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c0))) AND ((+ (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(rt0.c1, '1695647641') COLLATE NOCASE) ORDER BY ABS(DISTINCT (- (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c1, '1695647641') COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(DISTINCT (- (rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(rt0.c1, '1695647641') COLLATE NOCASE) ORDER BY ABS(DISTINCT (- (rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(rt0.c1, '1695647641') COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY ABS(DISTINCT (- (rt0.c1))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(rt0.c1, '1695647641') COLLATE NOCASE) ORDER BY ABS(DISTINCT (- (rt0.c1))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE ((((((- (rt0.c0)))OR((((rt0.c2, x'e25f', rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, 0.11665012014091458)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(json_type(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c0)))OR((((rt0.c2, x'e25f', rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, 0.11665012014091458)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(json_type(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((- (rt0.c0)))OR((((rt0.c2, x'e25f', rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, 0.11665012014091458)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(json_type(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (rt0.c0)))OR((((rt0.c2, x'e25f', rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, 0.11665012014091458)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(json_type(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((((- (rt0.c0)))OR((((rt0.c2, x'e25f', rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, 0.11665012014091458)) AND ((rt0.c0, rt0.c1, rt0.c1))))))OR(json_type(rt0.c2))));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ('-1143903888');
SELECT SUM(count) FROM (SELECT ALL (('-1143903888') IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ('-1143903888');
SELECT SUM(count) FROM (SELECT ALL (('-1143903888') IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))));
SELECT * FROM vt1, rt0 CROSS JOIN vt0 ON (+ (((vt1.c0)>(rt0.c1)))) WHERE ('-1143903888');
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-1993344865');
SELECT SUM(count) FROM (SELECT (('-1993344865') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-1993344865');
SELECT SUM(count) FROM (SELECT (('-1993344865') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('-1993344865');
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt0.c0))))<=((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((((vt0.c0))<>((rt0.c0))))<=((((rt0.c2))<=((rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt0.c0))))<=((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((((vt0.c0))<>((rt0.c0))))<=((((rt0.c2))<=((rt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt0.c0))))<=((((rt0.c2))<=((rt0.c0))))) DESC;
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(rt0.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(UPPER(DISTINCT vt1.c0), 0.17781032680593734)) ORDER BY ((rt0.c1) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(UPPER(DISTINCT vt1.c0), 0.17781032680593734)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(rt0.c1 COLLATE BINARY)) ORDER BY ((rt0.c1) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(rt0.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(UPPER(DISTINCT vt1.c0), 0.17781032680593734)) ORDER BY ((rt0.c1) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(UPPER(DISTINCT vt1.c0), 0.17781032680593734)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(rt0.c1 COLLATE BINARY)) ORDER BY ((rt0.c1) ISNULL) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(rt0.c1 COLLATE BINARY)) WHERE (LIKELIHOOD(UPPER(DISTINCT vt1.c0), 0.17781032680593734)) ORDER BY ((rt0.c1) ISNULL) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c1)))|(rt0.c2 COLLATE BINARY))) ORDER BY (NOT ((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c1)))|(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c1)))|(rt0.c2 COLLATE BINARY))) ORDER BY (NOT ((~ (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)+(rt0.c1)))|(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((~ (rt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)+(rt0.c1)))|(rt0.c2 COLLATE BINARY))) ORDER BY (NOT ((~ (rt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0x69d016b0 END))) ORDER BY (NOT ((((vt1.c0))<=((vt0.c0))))) ASC, (((vt1.c0 COLLATE NOCASE))>((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0x69d016b0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c0))<=((vt0.c0))))) ASC, (((vt1.c0 COLLATE NOCASE))>((CAST(vt0.c0 AS BLOB)))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0x69d016b0 END))) ORDER BY (NOT ((((vt1.c0))<=((vt0.c0))))) ASC, (((vt1.c0 COLLATE NOCASE))>((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0x69d016b0 END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c0))<=((vt0.c0))))) ASC, (((vt1.c0 COLLATE NOCASE))>((CAST(vt0.c0 AS BLOB)))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE ((~ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0x69d016b0 END))) ORDER BY (NOT ((((vt1.c0))<=((vt0.c0))))) ASC, (((vt1.c0 COLLATE NOCASE))>((CAST(vt0.c0 AS BLOB)))) ASC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt1.c0)*(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt1.c0)*(TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt1.c0)*(TRIM(vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((x'534c', rt0.c1, rt0.c0))>=((vt1.c0, vt0.c0, 'pk')))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((x'534c', rt0.c1, rt0.c0))>=((vt1.c0, vt0.c0, 'pk')))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((x'534c', rt0.c1, rt0.c0))>=((vt1.c0, vt0.c0, 'pk')))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((x'534c', rt0.c1, rt0.c0))>=((vt1.c0, vt0.c0, 'pk')))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((x'534c', rt0.c1, rt0.c0))>=((vt1.c0, vt0.c0, 'pk')))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL)) ORDER BY TYPEOF((+ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY TYPEOF((+ (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL)) ORDER BY TYPEOF((+ (rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY TYPEOF((+ (rt0.c1))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL)) ORDER BY TYPEOF((+ (rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((0.7182569815928513, vt1.c0, rt0.c2))<=((rt0.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) ORDER BY (+ (((rt0.c1)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((0.7182569815928513, vt1.c0, rt0.c2))<=((rt0.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (((rt0.c1)>(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((0.7182569815928513, vt1.c0, rt0.c2))<=((rt0.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) ORDER BY (+ (((rt0.c1)>(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((0.7182569815928513, vt1.c0, rt0.c2))<=((rt0.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (((rt0.c1)>(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((0.7182569815928513, vt1.c0, rt0.c2))<=((rt0.c0, rt0.c1, rt0.c1))) COLLATE NOCASE) ORDER BY (+ (((rt0.c1)>(rt0.c2))));
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST((vt1.c0 IN ()) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) NOTNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))))AND((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) NOTNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))))AND((rt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) NOTNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))))AND((rt0.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))IS NOT(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((rt0.c2 COLLATE RTRIM)OR(((rt0.c0) NOTNULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)))OR(CAST(rt0.c2 AS BLOB))))AND((rt0.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(NULL)))AND(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(NULL)))AND(vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(NULL)))AND(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(NULL)))AND(vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND ((vt1.c0 IN (vt1.c0))))) ORDER BY ((((((((((vt0.c0) NOTNULL))OR(vt1.c0 COLLATE RTRIM)))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))))OR(NULL)))AND(vt0.c0 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CASE WHEN rt0.c1 THEN NULL END COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT rt0.c1)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELY(DISTINCT rt0.c1));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT NULL)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)>>(rt0.c0)))OR(((NULL) NOTNULL))) DESC, LIKELY((((vt1.c0))>((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT NULL)) NOTNULL) ORDER BY ((((rt0.c1)>>(rt0.c0)))OR(((NULL) NOTNULL))) DESC, LIKELY((((vt1.c0))>((rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT NULL)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)>>(rt0.c0)))OR(((NULL) NOTNULL))) DESC, LIKELY((((vt1.c0))>((rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT NULL)) NOTNULL) ORDER BY ((((rt0.c1)>>(rt0.c0)))OR(((NULL) NOTNULL))) DESC, LIKELY((((vt1.c0))>((rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c0) NOT NULL)) NOTNULL) WHERE (CAST((rt0.c2 IN ()) AS BLOB)) ORDER BY ((((rt0.c1)>>(rt0.c0)))OR(((NULL) NOTNULL))) DESC, LIKELY((((vt1.c0))>((rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (UPPER((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER((- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UPPER((- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER((- (rt0.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'4261')AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(x''))) ORDER BY x'b5d1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'4261')AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'b5d1'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'4261')AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(x''))) ORDER BY x'b5d1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'4261')AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(x''))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'b5d1'  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'4261')AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(x''))) ORDER BY x'b5d1'  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((PRINTF(rt0.c1))==(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c1))=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((PRINTF(rt0.c1))==(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((PRINTF(rt0.c1))=(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((PRINTF(rt0.c1))==(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)||(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)||(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)||(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)||(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)||(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((LENGTH(vt0.c0))<<(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt0.c0))<<(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((LENGTH(vt0.c0))<<(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(vt0.c0))<<(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((LENGTH(vt0.c0))<<(vt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))AND(0.6079650801057882 COLLATE RTRIM)))AND((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))AND(0.6079650801057882 COLLATE RTRIM)))AND((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))AND(0.6079650801057882 COLLATE RTRIM)))AND((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt1.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))AND(0.6079650801057882 COLLATE RTRIM)))AND((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((vt1.c0)AND(vt0.c0)))AND(0.6079650801057882 COLLATE RTRIM)))AND((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR(CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END) ORDER BY CAST((- (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END) ORDER BY CAST((- (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY CAST((- (vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (+ (vt0.c0)) THEN UNLIKELY(vt0.c0) ELSE (vt0.c0 IN ()) END) ORDER BY CAST((- (vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((rt0.c0)OR(vt1.c0)))<(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))) WHERE ((('678667376') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('678667376') NOT NULL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((((rt0.c0)OR(vt1.c0)))<(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((rt0.c0)OR(vt1.c0)))<(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))) WHERE ((('678667376') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('678667376') NOT NULL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON ((((rt0.c0)OR(vt1.c0)))<(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))));
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON ((((rt0.c0)OR(vt1.c0)))<(((((((((vt1.c0)AND(rt0.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(rt0.c0)))) WHERE ((('678667376') NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0Xffffffffbeb406e6))<(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((-1169252584, vt1.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffbeb406e6))<(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((-1169252584, vt1.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0Xffffffffbeb406e6))<(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((-1169252584, vt1.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffbeb406e6))<(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((-1169252584, vt1.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((0Xffffffffbeb406e6))<(((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, NULL, NULL)) AND ((-1169252584, vt1.c0, vt0.c0)))))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.c0) NOTNULL) IN ()));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON -9.50717418E8 LEFT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(rt0.c1)))AND(((vt0.c0)<=(rt0.c2)))))AND(((0.43333915182160676) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON -9.50717418E8 LEFT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(rt0.c1)))AND(((vt0.c0)<=(rt0.c2)))))AND(((0.43333915182160676) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON -9.50717418E8 LEFT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(rt0.c1)))AND(((vt0.c0)<=(rt0.c2)))))AND(((0.43333915182160676) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON -9.50717418E8 LEFT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(rt0.c1)))AND(((vt0.c0)<=(rt0.c2)))))AND(((0.43333915182160676) BETWEEN (vt0.c0) AND (vt1.c0)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON -9.50717418E8 LEFT OUTER JOIN vt0 ON ((((((rt0.c2)GLOB(rt0.c1)))AND(((vt0.c0)<=(rt0.c2)))))AND(((0.43333915182160676) BETWEEN (vt0.c0) AND (vt1.c0)))) WHERE ((rt0.c1 IN ()));
SELECT * FROM vt1, rt0, vt0 WHERE (JULIANDAY(LTRIM(rt0.c1, rt0.c0), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END, CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(DISTINCT ((rt0.c0)>(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(LTRIM(rt0.c1, rt0.c0), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TRIM(DISTINCT ((rt0.c0)>(vt0.c0))) ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (JULIANDAY(LTRIM(rt0.c1, rt0.c0), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END, CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(DISTINCT ((rt0.c0)>(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((JULIANDAY(LTRIM(rt0.c1, rt0.c0), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY TRIM(DISTINCT ((rt0.c0)>(vt0.c0))) ASC);
SELECT * FROM vt1, rt0, vt0 WHERE (JULIANDAY(LTRIM(rt0.c1, rt0.c0), CASE rt0.c1  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END, CAST(vt0.c0 AS NUMERIC))) ORDER BY TRIM(DISTINCT ((rt0.c0)>(vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((('1469605198')IS((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('1469605198')IS((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((('1469605198')IS((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('1469605198')IS((NOT (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((('1469605198')IS((NOT (rt0.c0)))));
SELECT * FROM vt0 WHERE ((((vt0.c0)<('1956350622')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<('1956350622')) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<('1956350622')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<('1956350622')) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<('1956350622')) IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)!=(vt0.c0)))))) ORDER BY (((((vt0.c0)<=('-1858375659'))))<>(((vt1.c0 IN (vt0.c0)))))  NULLS LAST, MIN((((vt1.c0))==((0xffffffff94d0b09d))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)<=('-1858375659'))))!=(((vt1.c0 IN (vt0.c0)))))  NULLS LAST, MIN((((vt1.c0))=((0xffffffff94d0b09d))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)!=(vt0.c0)))))) ORDER BY (((((vt0.c0)<=('-1858375659'))))<>(((vt1.c0 IN (vt0.c0)))))  NULLS LAST, MIN((((vt1.c0))==((0xffffffff94d0b09d))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)!=(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c0)<=('-1858375659'))))!=(((vt1.c0 IN (vt0.c0)))))  NULLS LAST, MIN((((vt1.c0))=((0xffffffff94d0b09d))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((((vt1.c0)!=(vt0.c0)))))) ORDER BY (((((vt0.c0)<=('-1858375659'))))<>(((vt1.c0 IN (vt0.c0)))))  NULLS LAST, MIN((((vt1.c0))==((0xffffffff94d0b09d))), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), ((vt0.c0)>>(vt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS FALSE)) ORDER BY '{^Dd>d7';
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '{^Dd>d7');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS FALSE)) ORDER BY '{^Dd>d7';
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt1, vt0 ORDER BY '{^Dd>d7');
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NULL) IS FALSE)) ORDER BY '{^Dd>d7';
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))|(json_type(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))|(json_type(vt0.c0)))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)+(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c0)IS(vt0.c0)))|(json_type(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)+(vt0.c0)))+(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS(vt0.c0)))|(json_type(vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) ISNULL) COLLATE BINARY) ORDER BY vt1.c0;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((rt0.c2 COLLATE BINARY IN ()));
SELECT * FROM rt0 WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((rt0.c1)>(rt0.c1)))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))<((rt0.c0))))AND(((rt0.c1)>(rt0.c1)))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((rt0.c1)>(rt0.c1)))))OR(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1))<((rt0.c0))))AND(((rt0.c1)>(rt0.c1)))))OR(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c1))<((rt0.c0))))AND(((rt0.c1)>(rt0.c1)))))OR(rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT (rt0.c1 IN ())));
SELECT * FROM vt0, vt1, rt0 WHERE ((((+ ('-1095498010'))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ ('-1095498010'))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((+ ('-1095498010'))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((+ ('-1095498010'))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE ((((+ ('-1095498010'))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON ((((vt0.c0)==(rt0.c2))) BETWEEN (rt0.c0) AND ((rt0.c0 IN ()))) WHERE (((((NULL)|(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((((((((x'1863')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(0.051951385229232705)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)|(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((((((((x'1863')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(0.051951385229232705))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON ((((vt0.c0)==(rt0.c2))) BETWEEN (rt0.c0) AND ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON ((((vt0.c0)==(rt0.c2))) BETWEEN (rt0.c0) AND ((rt0.c0 IN ()))) WHERE (((((NULL)|(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((((((((x'1863')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(0.051951385229232705)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)|(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((((((((x'1863')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(0.051951385229232705))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON ((((vt0.c0)==(rt0.c2))) BETWEEN (rt0.c0) AND ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON ((((vt0.c0)==(rt0.c2))) BETWEEN (rt0.c0) AND ((rt0.c0 IN ()))) WHERE (((((NULL)|(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (rt0.c1))) AND (((((((((x'1863')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(0.051951385229232705)))));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) FULL OUTER JOIN rt0 ON CAST((((vt0.c0)) BETWEEN (('\r\r')) AND ((rt0.c1))) AS REAL) WHERE (NULLIF(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) FULL OUTER JOIN rt0 ON CAST((((vt0.c0)) BETWEEN (('\r\r')) AND ((rt0.c1))) AS REAL));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) FULL OUTER JOIN rt0 ON CAST((((vt0.c0)) BETWEEN (('\r\r')) AND ((rt0.c1))) AS REAL) WHERE (NULLIF(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) FULL OUTER JOIN rt0 ON CAST((((vt0.c0)) BETWEEN (('\r\r')) AND ((rt0.c1))) AS REAL));
SELECT * FROM vt0 CROSS JOIN vt1 ON CAST(CAST(vt0.c0 AS TEXT) AS REAL) FULL OUTER JOIN rt0 ON CAST((((vt0.c0)) BETWEEN (('\r\r')) AND ((rt0.c1))) AS REAL) WHERE (NULLIF(rt0.c1, rt0.c2) COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)OR('o%Z.\nⲈq')) IN (json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)OR('o%Z.\nⲈq')) IN (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0)OR('o%Z.\nⲈq')) IN (json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)OR('o%Z.\nⲈq')) IN (json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM rt0, vt1 WHERE ('-1143903888') ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('-1143903888') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE ('-1143903888') ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (('-1143903888') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE ('-1143903888') ORDER BY (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((NULL))) COLLATE BINARY;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) END WHERE (ABS(((vt0.c0) ISNULL))) ORDER BY ((((json_remove(vt0.c0, rt0.c1))AND((rt0.c2 IN (rt0.c2)))))OR(CAST(vt0.c0 AS REAL))), CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN NULL END ASC  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) END ORDER BY ((((json_remove(vt0.c0, rt0.c1))AND((rt0.c2 IN (rt0.c2)))))OR(CAST(vt0.c0 AS REAL))), CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN NULL END ASC  NULLS LAST, rt0.c1  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) END WHERE (ABS(((vt0.c0) ISNULL))) ORDER BY ((((json_remove(vt0.c0, rt0.c1))AND((rt0.c2 IN (rt0.c2)))))OR(CAST(vt0.c0 AS REAL))), CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN NULL END ASC  NULLS LAST, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((vt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE rt0.c0  WHEN rt0.c1 THEN ((rt0.c0)>(rt0.c1)) END ORDER BY ((((json_remove(vt0.c0, rt0.c1))AND((rt0.c2 IN (rt0.c2)))))OR(CAST(vt0.c0 AS REAL))), CASE ((rt0.c2)<=(rt0.c0))  WHEN ((rt0.c2) NOTNULL) THEN NULL END ASC  NULLS LAST, rt0.c1  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN '' COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GLOB(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN '' COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GLOB(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN '' COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GLOB(vt0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN '' COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GLOB(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0)LIKE(vt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN x'' THEN '' COLLATE RTRIM WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS TRUE) THEN (vt0.c0 IN ()) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN GLOB(vt0.c0, vt0.c0) END);
SELECT * FROM vt0, vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END)!=((vt1.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 END)<>((vt1.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END)!=((vt1.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 END)<>((vt1.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 END)!=((vt1.c0 IN (vt0.c0, vt0.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((('DS') NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, '-461958126'))))))OR('-e')))AND(vt0.c0)))OR((vt1.c0 IN ())))) ORDER BY (NOT (((vt0.c0)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('DS') NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, '-461958126'))))))OR('-e')))AND(vt0.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c0)%(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((('DS') NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, '-461958126'))))))OR('-e')))AND(vt0.c0)))OR((vt1.c0 IN ())))) ORDER BY (NOT (((vt0.c0)%(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('DS') NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, '-461958126'))))))OR('-e')))AND(vt0.c0)))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((vt0.c0)%(vt1.c0)))) DESC);
SELECT ALL * FROM vt1, vt0 WHERE ((((((((((('DS') NOT BETWEEN (vt1.c0) AND (vt0.c0)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt0.c0, '-461958126'))))))OR('-e')))AND(vt0.c0)))OR((vt1.c0 IN ())))) ORDER BY (NOT (((vt0.c0)%(vt1.c0)))) DESC;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x5aff74c8 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0X5aff74c8 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x5aff74c8 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0X5aff74c8 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN 0x5aff74c8 THEN vt0.c0 ELSE vt0.c0 END COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END)) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (IFNULL(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)), CASE WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE (((vt0.c0, x'', rt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE (((vt0.c0, x'', rt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE (((vt0.c0, x'', rt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE (((vt0.c0, x'', rt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) THEN (((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c0))) ELSE (((vt0.c0, x'', rt0.c1)) BETWEEN ((vt0.c0, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c1))) END);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON ((((rt0.c2)+(vt0.c0)))>=(rt0.c0)) WHERE (rt0.c0) ORDER BY ((((rt0.c1)OR(CAST(vt1.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((rt0.c2)+(vt0.c0)))>=(rt0.c0)) ORDER BY ((((rt0.c1)OR(CAST(vt1.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON ((((rt0.c2)+(vt0.c0)))>=(rt0.c0)) WHERE (rt0.c0) ORDER BY ((((rt0.c1)OR(CAST(vt1.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON ((((rt0.c2)+(vt0.c0)))>=(rt0.c0)) ORDER BY ((((rt0.c1)OR(CAST(vt1.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON ((((rt0.c2)+(vt0.c0)))>=(rt0.c0)) WHERE (rt0.c0) ORDER BY ((((rt0.c1)OR(CAST(vt1.c0 AS INTEGER))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((NULL) IS FALSE))AND((((-88964315)) BETWEEN ((x'')) AND ((vt1.c0))))))OR(((vt1.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL) IS FALSE))AND((((-88964315)) BETWEEN ((x'')) AND ((vt1.c0))))))OR(((vt1.c0)<(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((NULL) IS FALSE))AND((((-88964315)) BETWEEN ((x'')) AND ((vt1.c0))))))OR(((vt1.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((NULL) IS FALSE))AND((((-88964315)) BETWEEN ((x'')) AND ((vt1.c0))))))OR(((vt1.c0)<(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((NULL) IS FALSE))AND((((-88964315)) BETWEEN ((x'')) AND ((vt1.c0))))))OR(((vt1.c0)<(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON CAST(vt1.c0 AS REAL) WHERE ((((rt0.c2)) NOT BETWEEN (((+ (NULL)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.5950532409329181)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((+ (NULL)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON CAST(vt1.c0 AS REAL) ORDER BY ((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.5950532409329181)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON CAST(vt1.c0 AS REAL) WHERE ((((rt0.c2)) NOT BETWEEN (((+ (NULL)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.5950532409329181)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (((+ (NULL)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON CAST(vt1.c0 AS REAL) ORDER BY ((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.5950532409329181)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON CAST(vt1.c0 AS REAL) WHERE ((((rt0.c2)) NOT BETWEEN (((+ (NULL)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY ((rt0.c1) NOT BETWEEN (vt0.c0) AND (0.5950532409329181)) COLLATE NOCASE ASC;
SELECT * FROM vt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (x'');
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(LIKE(vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC, x'', x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(LIKE(vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC, x'', x'');
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(LIKE(vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC, x'', x'';
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(LIKE(vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC, x'', x'');
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN ('') AND (vt0.c0)) COLLATE BINARY) ORDER BY IFNULL(LIKE(vt0.c0, vt0.c0), CAST(vt0.c0 AS INTEGER)) ASC, x'', x'';
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (vt1.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (vt1.c0)) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (rt0.c1) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (rt0.c1) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (rt0.c1) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (rt0.c1) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0))) BETWEEN (rt0.c1) AND (vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (rt0.c2 COLLATE RTRIM, ((vt1.c0) IS TRUE), CAST(rt0.c2 AS NUMERIC))) WHERE ((((vt1.c0 IN (vt1.c0)))*(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) ELSE COALESCE(vt1.c0, vt1.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))*(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (rt0.c2 COLLATE RTRIM, ((vt1.c0) IS TRUE), CAST(rt0.c2 AS NUMERIC))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) ELSE COALESCE(vt1.c0, vt1.c0) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (rt0.c2 COLLATE RTRIM, ((vt1.c0) IS TRUE), CAST(rt0.c2 AS NUMERIC))) WHERE ((((vt1.c0 IN (vt1.c0)))*(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) ELSE COALESCE(vt1.c0, vt1.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))*(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (rt0.c2 COLLATE RTRIM, ((vt1.c0) IS TRUE), CAST(rt0.c2 AS NUMERIC))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) ELSE COALESCE(vt1.c0, vt1.c0) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN (rt0.c2 COLLATE RTRIM, ((vt1.c0) IS TRUE), CAST(rt0.c2 AS NUMERIC))) WHERE ((((vt1.c0 IN (vt1.c0)))*(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE '' END))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN (NOT (rt0.c1)) ELSE COALESCE(vt1.c0, vt1.c0) END  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN (('	H') BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(x'' AS NUMERIC) END) ORDER BY CAST(((((vt1.c0)OR(NULL)))AND(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt1.c0) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN (('	H') BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(x'' AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(NULL)))AND(vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN (('	H') BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(x'' AS NUMERIC) END) ORDER BY CAST(((((vt1.c0)OR(NULL)))AND(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt1.c0) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN (('	H') BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(x'' AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((((vt1.c0)OR(NULL)))AND(vt1.c0)) AS TEXT));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN vt1.c0 WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) WHEN (vt1.c0 IN ()) THEN (- (vt1.c0)) WHEN ((vt1.c0)LIKE(NULL)) THEN (('	H') BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(x'' AS NUMERIC) END) ORDER BY CAST(((((vt1.c0)OR(NULL)))AND(vt1.c0)) AS TEXT);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))|(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((rt0.c2) IS TRUE))<((NOT (rt0.c0)))), (((vt0.c0 IN (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))|(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((rt0.c2) IS TRUE))<((NOT (rt0.c0)))), (((vt0.c0 IN (rt0.c2))) IS TRUE) ASC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))|(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((rt0.c2) IS TRUE))<((NOT (rt0.c0)))), (((vt0.c0 IN (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))|(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((rt0.c2) IS TRUE))<((NOT (rt0.c0)))), (((vt0.c0 IN (rt0.c2))) IS TRUE) ASC);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))|(CAST(vt1.c0 AS BLOB)))) ORDER BY ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (CAST(vt1.c0 AS BLOB))) DESC  NULLS FIRST, ((((rt0.c2) IS TRUE))<((NOT (rt0.c0)))), (((vt0.c0 IN (rt0.c2))) IS TRUE) ASC;
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(CAST(rt0.c2 AS TEXT))))OR(0.4283413700620645))) ORDER BY NULL COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))AND(CAST(rt0.c2 AS TEXT))))OR(0.4283413700620645))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY NULL COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(CAST(rt0.c2 AS TEXT))))OR(0.4283413700620645))) ORDER BY NULL COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS BLOB))AND(CAST(rt0.c2 AS TEXT))))OR(0.4283413700620645))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY NULL COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((((CAST(vt1.c0 AS BLOB))AND(CAST(rt0.c2 AS TEXT))))OR(0.4283413700620645))) ORDER BY NULL COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((~ (rt0.c2)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(TRIM(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(TRIM(rt0.c2)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((~ (rt0.c2)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(TRIM(rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c2)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(TRIM(rt0.c2)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((~ (rt0.c2)))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)))AND(TRIM(rt0.c2))));
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1))!=((vt1.c0))), ((rt0.c1)!=(vt1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))!=((((rt0.c2) NOT NULL), CAST(vt1.c0 AS BLOB), 0xffffffffb9b050b7))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<>((vt1.c0))), ((rt0.c1)!=(vt1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))!=((((rt0.c2) NOT NULL), CAST(vt1.c0 AS BLOB), 0xffffffffb9b050b7)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1))!=((vt1.c0))), ((rt0.c1)!=(vt1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))!=((((rt0.c2) NOT NULL), CAST(vt1.c0 AS BLOB), 0xffffffffb9b050b7))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1))<>((vt1.c0))), ((rt0.c1)!=(vt1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))!=((((rt0.c2) NOT NULL), CAST(vt1.c0 AS BLOB), 0xffffffffb9b050b7)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1))!=((vt1.c0))), ((rt0.c1)!=(vt1.c0)), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))!=((((rt0.c2) NOT NULL), CAST(vt1.c0 AS BLOB), 0xffffffffb9b050b7))));
SELECT * FROM rt0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rtreenode(rt0.c2, rt0.c0))), (((((- (rt0.c2)))AND(JULIANDAY(rt0.c0, rt0.c0, rt0.c2))))OR(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rtreenode(rt0.c2, rt0.c0))), (((((- (rt0.c2)))AND(JULIANDAY(rt0.c0, rt0.c0, rt0.c2))))OR(((rt0.c1) IS TRUE))));
SELECT * FROM rt0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rtreenode(rt0.c2, rt0.c0))), (((((- (rt0.c2)))AND(JULIANDAY(rt0.c0, rt0.c0, rt0.c2))))OR(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rtreenode(rt0.c2, rt0.c0))), (((((- (rt0.c2)))AND(JULIANDAY(rt0.c0, rt0.c0, rt0.c2))))OR(((rt0.c1) IS TRUE))));
SELECT * FROM rt0 WHERE ((NULL COLLATE RTRIM IN ())) ORDER BY ((rt0.c2) BETWEEN (rt0.c1 COLLATE RTRIM) AND (rtreenode(rt0.c2, rt0.c0))), (((((- (rt0.c2)))AND(JULIANDAY(rt0.c0, rt0.c0, rt0.c2))))OR(((rt0.c1) IS TRUE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) ISNULL));
SELECT ALL * FROM rt0, vt0, vt1 NOT INDEXED WHERE ((((('땘')+(rt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('땘')+(rt0.c0)))<>(NULL))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 NOT INDEXED WHERE ((((('땘')+(rt0.c0)))!=(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((('땘')+(rt0.c0)))<>(NULL))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 NOT INDEXED WHERE ((((('땘')+(rt0.c0)))!=(NULL)));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c1) IS TRUE) AS NUMERIC)) ORDER BY (((NOT (rt0.c0))) NOT NULL);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)AND((NOT (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN ',M' ELSE vt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)AND((NOT (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN ',M' ELSE vt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)AND((NOT (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN ',M' ELSE vt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)AND((NOT (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN ',M' ELSE vt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((CASE vt0.c0  WHEN x'' THEN vt1.c0 ELSE vt0.c0 END)AND((NOT (vt1.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(CASE WHEN vt1.c0 THEN ',M' ELSE vt1.c0 END)))OR(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>=(rt0.c1))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c2)) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>=(rt0.c1))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c2)) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>=(rt0.c1))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c2)) AND ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>=(rt0.c1))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c2)) AND ((rt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)>=(rt0.c1))) BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c2)) AND ((rt0.c1 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))!=((vt0.c0))), (('%f')<=(vt0.c0)), CAST(x'' AS BLOB), NULL, vt0.c0 COLLATE BINARY))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('0.855753517650701')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(1.76584993E9)), ((((-8.66973417E8)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+('n*c5m')), vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))!=((vt0.c0))), (('%f')<=(vt0.c0)), CAST(x'' AS BLOB), NULL, vt0.c0 COLLATE BINARY))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('0.855753517650701')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(1.76584993E9)), ((((-8.66973417E8)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+('n*c5m')), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))!=((vt0.c0))), (('%f')<=(vt0.c0)), CAST(x'' AS BLOB), NULL, vt0.c0 COLLATE BINARY))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('0.855753517650701')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(1.76584993E9)), ((((-8.66973417E8)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+('n*c5m')), vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0))!=((vt0.c0))), (('%f')<=(vt0.c0)), CAST(x'' AS BLOB), NULL, vt0.c0 COLLATE BINARY))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('0.855753517650701')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(1.76584993E9)), ((((-8.66973417E8)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+('n*c5m')), vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0))!=((vt0.c0))), (('%f')<=(vt0.c0)), CAST(x'' AS BLOB), NULL, vt0.c0 COLLATE BINARY))>=((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR('0.855753517650701')))OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0)>>(1.76584993E9)), ((((-8.66973417E8)AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0)+('n*c5m')), vt0.c0)))) ORDER BY vt0.c0;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST((- (vt1.c0)) AS BLOB));
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(ABS(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(ABS(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (CAST(ABS(rt0.c2) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (-5.92824216E8 IN ()) ELSE (NULL IN (vt0.c0)) END) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (-5.92824216E8 IN ()) ELSE (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (-5.92824216E8 IN ()) ELSE (NULL IN (vt0.c0)) END) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (-5.92824216E8 IN ()) ELSE (NULL IN (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) THEN (-5.92824216E8 IN ()) ELSE (NULL IN (vt0.c0)) END) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN ((rt0.c2) BETWEEN ('S瀬gFuA9') AND (rt0.c1)) THEN ((('495534183'))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN ((rt0.c2) BETWEEN ('S瀬gFuA9') AND (rt0.c1)) THEN ((('495534183'))<((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN ((rt0.c2) BETWEEN ('S瀬gFuA9') AND (rt0.c1)) THEN ((('495534183'))<((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN ((rt0.c2) BETWEEN ('S瀬gFuA9') AND (rt0.c1)) THEN ((('495534183'))<((rt0.c2))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))  WHEN ((rt0.c2) BETWEEN ('S瀬gFuA9') AND (rt0.c1)) THEN ((('495534183'))<((rt0.c2))) END);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(x'07d1')))AND((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(x'07d1')))AND((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(x'07d1')))AND((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(x'07d1')))AND((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))OR(x'07d1')))AND((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') ISNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)>(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') ISNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)>(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)>(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'') ISNULL)) ORDER BY (((vt0.c0 IN (vt0.c0)))<>(((vt0.c0)>(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT COUNT(*) FROM rt0 WHERE ((NULL IN ())) ORDER BY NULL;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))/(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))/(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))/(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1)))/(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((- (rt0.c1)))/(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON rt0.c0 WHERE (CAST(('' IN ()) AS REAL)) ORDER BY LTRIM(((NULL) ISNULL)), (((((rt0.c2)-(rt0.c0))))!=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(('' IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON rt0.c0 ORDER BY LTRIM(((NULL) ISNULL)), (((((rt0.c2)-(rt0.c0))))<>((((vt0.c0)>(vt0.c0))))) DESC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON rt0.c0 WHERE (CAST(('' IN ()) AS REAL)) ORDER BY LTRIM(((NULL) ISNULL)), (((((rt0.c2)-(rt0.c0))))!=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(('' IN ()) AS REAL)) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON rt0.c0 ORDER BY LTRIM(((NULL) ISNULL)), (((((rt0.c2)-(rt0.c0))))<>((((vt0.c0)>(vt0.c0))))) DESC);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON rt0.c0 WHERE (CAST(('' IN ()) AS REAL)) ORDER BY LTRIM(((NULL) ISNULL)), (((((rt0.c2)-(rt0.c0))))!=((((vt0.c0)>(vt0.c0))))) DESC;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN json_remove(rt0.c2, 0.9370678025195043) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1)*('-1993344865')) THEN INSTR(vt0.c0, vt1.c0) WHEN (vt1.c0 IN (rt0.c1)) THEN (- (rt0.c2)) ELSE ((vt0.c0)/(vt0.c0)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(rt0.c2, 0.9370678025195043) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1)*('-1993344865')) THEN INSTR(vt0.c0, vt1.c0) WHEN (vt1.c0 IN (rt0.c1)) THEN (- (rt0.c2)) ELSE ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN json_remove(rt0.c2, 0.9370678025195043) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1)*('-1993344865')) THEN INSTR(vt0.c0, vt1.c0) WHEN (vt1.c0 IN (rt0.c1)) THEN (- (rt0.c2)) ELSE ((vt0.c0)/(vt0.c0)) END) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json_remove(rt0.c2, 0.9370678025195043) THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN ((rt0.c1)*('-1993344865')) THEN INSTR(vt0.c0, vt1.c0) WHEN (vt1.c0 IN (rt0.c1)) THEN (- (rt0.c2)) ELSE ((vt0.c0)/(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY rt0.c2);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELY(vt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CASE vt1.c0  WHEN 1.822201272E9 THEN rt0.c1 END COLLATE NOCASE WHERE ((~ ((('l2!W	&髮)') BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))IS NOT(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((('l2!W	&髮)') BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CASE vt1.c0  WHEN 1.822201272E9 THEN rt0.c1 END COLLATE NOCASE ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))IS NOT(((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CASE vt1.c0  WHEN 1.822201272E9 THEN rt0.c1 END COLLATE NOCASE WHERE ((~ ((('l2!W	&髮)') BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))IS NOT(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((('l2!W	&髮)') BETWEEN (vt1.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON CASE vt1.c0  WHEN 1.822201272E9 THEN rt0.c1 END COLLATE NOCASE ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))IS NOT(((rt0.c1) ISNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON CASE vt1.c0  WHEN 1.822201272E9 THEN rt0.c1 END COLLATE NOCASE WHERE ((~ ((('l2!W	&髮)') BETWEEN (vt1.c0) AND (rt0.c2))))) ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))IS NOT(((rt0.c1) ISNULL)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1) NOTNULL) END) ORDER BY ((((((rt0.c1)!=(rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2))))))OR((('-461958126')>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<>(rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c2))))))OR((('-461958126')>(rt0.c1)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1) NOTNULL) END) ORDER BY ((((((rt0.c1)!=(rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2))))))OR((('-461958126')>(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1) NOTNULL) END) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)<>(rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c0, rt0.c2))))))OR((('-461958126')>(rt0.c1)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c1)>>(rt0.c0)) THEN ((rt0.c1) NOTNULL) END) ORDER BY ((((((rt0.c1)!=(rt0.c1)))OR((((rt0.c1, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c0, rt0.c2))))))OR((('-461958126')>(rt0.c1)))) DESC;
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('W}')))<>((((0.5112432092778818))<=((0.6661237817502249)))))) ORDER BY (~ (CAST(vt0.c0 AS NUMERIC))) DESC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND ('W}')))<>((((0.5112432092778818))<=((0.6661237817502249)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS NUMERIC))) DESC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('W}')))<>((((0.5112432092778818))<=((0.6661237817502249)))))) ORDER BY (~ (CAST(vt0.c0 AS NUMERIC))) DESC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND ('W}')))<>((((0.5112432092778818))<=((0.6661237817502249)))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (CAST(vt0.c0 AS NUMERIC))) DESC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND ('W}')))<>((((0.5112432092778818))<=((0.6661237817502249)))))) ORDER BY (~ (CAST(vt0.c0 AS NUMERIC))) DESC, ((vt0.c0 IN (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT NULL))) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt1.c0 AS BLOB)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT NULL))) ORDER BY ((CAST(vt1.c0 AS BLOB)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT NULL))) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt1.c0 AS BLOB)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT NULL))) ORDER BY ((CAST(vt1.c0 AS BLOB)) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((x'') NOT BETWEEN ((vt0.c0 IN ())) AND (((vt1.c0) NOT NULL))) WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((CAST(vt1.c0 AS BLOB)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ()));
SELECT * FROM rt0 WHERE ('FQ') ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (('FQ') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ('FQ') ORDER BY rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT (('FQ') IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC);
SELECT * FROM rt0 WHERE ('FQ') ORDER BY rt0.c2 DESC;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((rt0.c0)>(rt0.c0))) WHERE (((rt0.c2)-(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((rt0.c0)>(rt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((rt0.c0)>(rt0.c0))) WHERE (((rt0.c2)-(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)-(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((rt0.c0)>(rt0.c0))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON LOWER(DISTINCT ((rt0.c0)>(rt0.c0))) WHERE (((rt0.c2)-(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (HEX(DISTINCT (((rt0.c2))>=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt0.c2))>=((rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (HEX(DISTINCT (((rt0.c2))>=((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((rt0.c2))>=((rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (NOT (vt0.c0)) COLLATE NOCASE WHERE (HEX(DISTINCT (((rt0.c2))>=((rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((LIKE(rt0.c0, rt0.c0, '9')) ISNULL) WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN (NULL, rt0.c1, vt1.c0)))AND(CAST(rt0.c0 AS REAL))))OR((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((LIKE(rt0.c0, rt0.c0, '9')) ISNULL) ORDER BY (((((vt0.c0 IN (NULL, rt0.c1, vt1.c0)))AND(CAST(rt0.c0 AS REAL))))OR((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((LIKE(rt0.c0, rt0.c0, '9')) ISNULL) WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN (NULL, rt0.c1, vt1.c0)))AND(CAST(rt0.c0 AS REAL))))OR((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((LIKE(rt0.c0, rt0.c0, '9')) ISNULL) ORDER BY (((((vt0.c0 IN (NULL, rt0.c1, vt1.c0)))AND(CAST(rt0.c0 AS REAL))))OR((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((LIKE(rt0.c0, rt0.c0, '9')) ISNULL) WHERE (((rt0.c2) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN (NULL, rt0.c1, vt1.c0)))AND(CAST(rt0.c0 AS REAL))))OR((((rt0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) DESC, (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c2 ELSE vt0.c0 END IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) ORDER BY ((((x'')AND(vt0.c0)))OR('')) COLLATE BINARY, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(vt0.c0)))OR('')) COLLATE BINARY, vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) ORDER BY ((((x'')AND(vt0.c0)))OR('')) COLLATE BINARY, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(vt0.c0)))OR('')) COLLATE BINARY, vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL)))) ORDER BY ((((x'')AND(vt0.c0)))OR('')) COLLATE BINARY, vt0.c0 DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE -1.860236085E9  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '286772265' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE -1.860236085E9  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '286772265' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE -1.860236085E9  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '286772265' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ((((CASE -1.860236085E9  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '286772265' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((CASE -1.860236085E9  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT BETWEEN ((vt1.c0 IN (vt0.c0))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN '286772265' WHEN vt1.c0 THEN vt1.c0 ELSE NULL END)));
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT ALL * FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS INTEGER)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE);
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 NOT INDEXED WHERE (CAST(vt1.c0 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((1881183753) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((1881183753) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((1881183753) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((1881183753) NOT NULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((1881183753) NOT NULL));
SELECT ALL * FROM vt1, vt0 WHERE ((((((~ (vt1.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((~ (vt1.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((((~ (vt1.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(((rt0.c2) IS TRUE))))AND(CAST(vt0.c0 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))OR(0.7539297883754957))) ORDER BY (('625818002')<<(rt0.c0)) DESC, CASE (vt1.c0 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(((rt0.c2) IS TRUE))))AND(CAST(vt0.c0 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))OR(0.7539297883754957))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (('625818002')<<(rt0.c0)) DESC, CASE (vt1.c0 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(NULL)) END);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(((rt0.c2) IS TRUE))))AND(CAST(vt0.c0 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))OR(0.7539297883754957))) ORDER BY (('625818002')<<(rt0.c0)) DESC, CASE (vt1.c0 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(NULL)) END;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(((rt0.c2) IS TRUE))))AND(CAST(vt0.c0 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))OR(0.7539297883754957))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (('625818002')<<(rt0.c0)) DESC, CASE (vt1.c0 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(NULL)) END);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(((rt0.c2) IS TRUE))))AND(CAST(vt0.c0 AS TEXT))))OR((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((vt1.c0))))))OR(0.7539297883754957))) ORDER BY (('625818002')<<(rt0.c0)) DESC, CASE (vt1.c0 IN ())  WHEN CAST(rt0.c0 AS NUMERIC) THEN ((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(NULL)) END;
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON 0Xffffffffafd061c9 WHERE (((((vt0.c0 COLLATE BINARY)OR((+ (rt0.c2)))))AND(((vt1.c0)LIKE(rt0.c1))))) ORDER BY (((+ (vt1.c0))) BETWEEN ((((rt0.c2))>=((NULL)))) AND (x'' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR((+ (rt0.c2)))))AND(((vt1.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON 0xffffffffafd061c9 ORDER BY (((+ (vt1.c0))) BETWEEN ((((rt0.c2))>=((NULL)))) AND (x'' COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON 0Xffffffffafd061c9 WHERE (((((vt0.c0 COLLATE BINARY)OR((+ (rt0.c2)))))AND(((vt1.c0)LIKE(rt0.c1))))) ORDER BY (((+ (vt1.c0))) BETWEEN ((((rt0.c2))>=((NULL)))) AND (x'' COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE BINARY)OR((+ (rt0.c2)))))AND(((vt1.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON 0xffffffffafd061c9 ORDER BY (((+ (vt1.c0))) BETWEEN ((((rt0.c2))>=((NULL)))) AND (x'' COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON 0Xffffffffafd061c9 WHERE (((((vt0.c0 COLLATE BINARY)OR((+ (rt0.c2)))))AND(((vt1.c0)LIKE(rt0.c1))))) ORDER BY (((+ (vt1.c0))) BETWEEN ((((rt0.c2))>=((NULL)))) AND (x'' COLLATE BINARY)) ASC;
SELECT * FROM vt1, vt0, rt0 WHERE (((- (7.39610881E8)) IN ())) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE '0.7602508778262167' END THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOTNULL) THEN vt0.c0 WHEN ((rt0.c1) NOT NULL) THEN ((NULL)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((- (7.39610881E8)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE '0.7602508778262167' END THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOTNULL) THEN vt0.c0 WHEN ((rt0.c1) NOT NULL) THEN ((NULL)AND(rt0.c1)) END);
SELECT * FROM vt1, vt0, rt0 WHERE (((- (7.39610881E8)) IN ())) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE '0.7602508778262167' END THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOTNULL) THEN vt0.c0 WHEN ((rt0.c1) NOT NULL) THEN ((NULL)AND(rt0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((- (7.39610881E8)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE '0.7602508778262167' END THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOTNULL) THEN vt0.c0 WHEN ((rt0.c1) NOT NULL) THEN ((NULL)AND(rt0.c1)) END);
SELECT * FROM vt1, vt0, rt0 WHERE (((- (7.39610881E8)) IN ())) ORDER BY CASE WHEN CASE vt0.c0  WHEN rt0.c2 THEN vt0.c0 ELSE '0.7602508778262167' END THEN CAST(rt0.c1 AS BLOB) WHEN ((rt0.c1) NOTNULL) THEN vt0.c0 WHEN ((rt0.c1) NOT NULL) THEN ((NULL)AND(rt0.c1)) END;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c0)AND((NULL IN (vt0.c0, vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c0)AND((NULL IN (vt0.c0, vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c0)AND((NULL IN (vt0.c0, vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c0)AND((NULL IN (vt0.c0, vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c0)AND((NULL IN (vt0.c0, vt0.c0)))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, 0.4552549321977867)) ORDER BY CAST(CASE x'22fd'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, 0.4552549321977867)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE x'22fd'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL END AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, 0.4552549321977867)) ORDER BY CAST(CASE x'22fd'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL END AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, 0.4552549321977867)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CASE x'22fd'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL END AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, 0.4552549321977867)) ORDER BY CAST(CASE x'22fd'  WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL END AS TEXT);
SELECT * FROM rt0, vt1 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN 0.8651299842726785 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c2 THEN 0.8651299842726785 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN 0.8651299842726785 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE rt0.c0  WHEN rt0.c2 THEN 0.8651299842726785 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((~ (CASE rt0.c0  WHEN rt0.c2 THEN 0.8651299842726785 ELSE rt0.c0 END)));
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END))<(((NOT (rt0.c1)))))) ORDER BY (((~ (rt0.c2)))<=(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN HEX(DISTINCT rt0.c1) ELSE vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c2)))<=(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN HEX(DISTINCT rt0.c1) ELSE vt0.c0 END DESC);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END))<(((NOT (rt0.c1)))))) ORDER BY (((~ (rt0.c2)))<=(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN HEX(DISTINCT rt0.c1) ELSE vt0.c0 END DESC;
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END))<(((NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((~ (rt0.c2)))<=(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN HEX(DISTINCT rt0.c1) ELSE vt0.c0 END DESC);
SELECT * FROM rt0, vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 END))<(((NOT (rt0.c1)))))) ORDER BY (((~ (rt0.c2)))<=(CASE rt0.c2  WHEN x'' THEN vt0.c0 ELSE rt0.c0 END)), CASE UNLIKELY(rt0.c1)  WHEN (NOT (rt0.c1)) THEN HEX(DISTINCT rt0.c1) ELSE vt0.c0 END DESC;
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (vt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (vt0.c0) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (vt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (vt0.c0) AND (rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c2, rt0.c2, rt0.c2)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (vt0.c0) AND (rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt0, vt1, rt0 WHERE (((((0.6891213187612776)+(vt1.c0))) NOTNULL)) ORDER BY ((((0.12588826332925884)!=(rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.6891213187612776)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((0.12588826332925884)!=(rt0.c2))) NOT NULL) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((0.6891213187612776)+(vt1.c0))) NOTNULL)) ORDER BY ((((0.12588826332925884)!=(rt0.c2))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((0.6891213187612776)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((0.12588826332925884)!=(rt0.c2))) NOT NULL) ASC);
SELECT * FROM vt0, vt1, rt0 WHERE (((((0.6891213187612776)+(vt1.c0))) NOTNULL)) ORDER BY ((((0.12588826332925884)!=(rt0.c2))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (((x'bc0f'))<>(('270302458'))) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(x'fbb1')))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (((x'bc0f'))<>(('270302458'))) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(x'fbb1')))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (((x'bc0f'))<>(('270302458'))) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(x'fbb1')))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (((x'bc0f'))<>(('270302458'))) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(x'fbb1')))OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0 NOT INDEXED, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))  WHEN (((x'bc0f'))<>(('270302458'))) THEN ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) ELSE ((((((((rt0.c2)OR(rt0.c0)))OR(x'fbb1')))OR(vt0.c0)))OR(vt0.c0)) END);
SELECT * FROM vt1, vt0 WHERE (CASE (~ (vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE (~ (vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (CASE (~ (vt0.c0))  WHEN vt1.c0 COLLATE BINARY THEN ((vt1.c0)AND(vt1.c0)) END);
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))), ((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())))=((COALESCE(vt1.c0, vt1.c0), 0.27015932631365436, ((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((vt1.c0))=((vt1.c0))), ((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())))==((COALESCE(vt1.c0, vt1.c0), 0.27015932631365436, ((vt1.c0)*(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))), ((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())))=((COALESCE(vt1.c0, vt1.c0), 0.27015932631365436, ((vt1.c0)*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((vt1.c0))=((vt1.c0))), ((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())))==((COALESCE(vt1.c0, vt1.c0), 0.27015932631365436, ((vt1.c0)*(vt1.c0))))));
SELECT * FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((((vt1.c0))==((vt1.c0))), ((vt1.c0) ISNULL)))) ORDER BY (((((vt1.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ())))=((COALESCE(vt1.c0, vt1.c0), 0.27015932631365436, ((vt1.c0)*(vt1.c0)))));
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((x'', ((('0.9738840320859039')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0, NULL, 'fH,W')) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))))) ORDER BY ((STRFTIME(618297870, x'', vt1.c0))&((((vt1.c0))<=((vt0.c0))))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('Sseconds.Q'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((x'', ((('0.9738840320859039')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0, NULL, 'fH,W')) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY ((STRFTIME(618297870, x'', vt1.c0))&((((vt1.c0))<=((vt0.c0))))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('Sseconds.Q'))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((x'', ((('0.9738840320859039')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0, NULL, 'fH,W')) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))))) ORDER BY ((STRFTIME(618297870, x'', vt1.c0))&((((vt1.c0))<=((vt0.c0))))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('Sseconds.Q'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((x'', ((('0.9738840320859039')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0, NULL, 'fH,W')) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))))) IS TRUE)  as count FROM vt1, vt0 NOT INDEXED ORDER BY ((STRFTIME(618297870, x'', vt1.c0))&((((vt1.c0))<=((vt0.c0))))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('Sseconds.Q'))  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt1.c0, x'', vt1.c0)) NOT BETWEEN ((x'', ((('0.9738840320859039')) BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0, NULL, 'fH,W')) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))), CAST(vt0.c0 AS REAL), ((vt0.c0) NOT BETWEEN ('') AND (vt0.c0)))))) ORDER BY ((STRFTIME(618297870, x'', vt1.c0))&((((vt1.c0))<=((vt0.c0))))), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND('Sseconds.Q'))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS TRUE)) ORDER BY UNLIKELY(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) DESC, PRINTF(rt0.c0 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), CAST(rt0.c1 AS INTEGER)), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) DESC, PRINTF(rt0.c0 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), CAST(rt0.c1 AS INTEGER)), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS TRUE)) ORDER BY UNLIKELY(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) DESC, PRINTF(rt0.c0 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), CAST(rt0.c1 AS INTEGER)), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) DESC, PRINTF(rt0.c0 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), CAST(rt0.c1 AS INTEGER)), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c0)-(rt0.c0))) IS TRUE)) ORDER BY UNLIKELY(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))) DESC, PRINTF(rt0.c0 COLLATE NOCASE, (rt0.c2 IN (rt0.c1)), CAST(rt0.c1 AS INTEGER)), ((((((rt0.c1)AND(rt0.c0)))AND(vt0.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE rt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE rt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((rt0.c0) ISNULL))LIKE(((((((((vt0.c0)AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))) WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 ELSE rt0.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(UPPER(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(UPPER(vt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(UPPER(vt1.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(UPPER(vt1.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c0 COLLATE RTRIM AS INTEGER)) ORDER BY ((((((vt0.c0)LIKE(vt0.c0)))AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(UPPER(vt1.c0))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)>>(CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))OR(LIKELIHOOD(rt0.c0, 0.9475064579341237)))) ORDER BY ROUND((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, x'bf9e9687')) AND ((rt0.c2, rt0.c2, rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))OR(LIKELIHOOD(rt0.c0, 0.9475064579341237)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ROUND((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, x'bf9e9687')) AND ((rt0.c2, rt0.c2, rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))OR(LIKELIHOOD(rt0.c0, 0.9475064579341237)))) ORDER BY ROUND((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, x'bf9e9687')) AND ((rt0.c2, rt0.c2, rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS INTEGER))OR(LIKELIHOOD(rt0.c0, 0.9475064579341237)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ROUND((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, x'bf9e9687')) AND ((rt0.c2, rt0.c2, rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS INTEGER))OR(LIKELIHOOD(rt0.c0, 0.9475064579341237)))) ORDER BY ROUND((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, x'bf9e9687')) AND ((rt0.c2, rt0.c2, rt0.c1))), (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ((~ (vt1.c0))))) ORDER BY MIN(load_extension(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY MIN(load_extension(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 IN ((~ (vt1.c0))))) ORDER BY MIN(load_extension(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY MIN(load_extension(vt1.c0), (((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0)))) DESC, ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ('618297870') ORDER BY -4.61958126E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('618297870') IS TRUE)  as count FROM vt1 ORDER BY -4.61958126E8 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ('618297870') ORDER BY -4.61958126E8 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('618297870') IS TRUE)  as count FROM vt1 ORDER BY -4.61958126E8 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ('618297870') ORDER BY -4.61958126E8 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)<<(rt0.c2))) NOT NULL) CROSS JOIN vt0 ON ((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((rt0.c2)>(rt0.c0)))) WHERE ((((rt0.c0, rt0.c0, rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c0), (- (vt0.c0)), rt0.c2, '-1179627337', rt0.c2)) AND ((vt1.c0 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)), (((vt1.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt0.c1, '-1345297975', vt1.c0)) AND ((rt0.c2, rt0.c1, vt1.c0, 625818002, rt0.c2))), (NOT (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))) ORDER BY (1956350622 IN (CASE rt0.c1  WHEN rt0.c0 THEN 0.333923816763812 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN vt1.c0 ELSE vt0.c0 END, CASE WHEN rt0.c2 THEN '-688014420' END));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c0), (- (vt0.c0)), rt0.c2, '-1179627337', rt0.c2)) AND ((vt1.c0 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)), (((vt1.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt0.c1, '-1345297975', vt1.c0)) AND ((rt0.c2, rt0.c1, vt1.c0, 625818002, rt0.c2))), (NOT (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)<<(rt0.c2))) NOT NULL) CROSS JOIN vt0 ON ((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((rt0.c2)>(rt0.c0)))) ORDER BY (1956350622 IN (CASE rt0.c1  WHEN rt0.c0 THEN 0.333923816763812 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN vt1.c0 ELSE vt0.c0 END, CASE WHEN rt0.c2 THEN '-688014420' END)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)<<(rt0.c2))) NOT NULL) CROSS JOIN vt0 ON ((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((rt0.c2)>(rt0.c0)))) WHERE ((((rt0.c0, rt0.c0, rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c0), (- (vt0.c0)), rt0.c2, '-1179627337', rt0.c2)) AND ((vt1.c0 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)), (((vt1.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt0.c1, '-1345297975', vt1.c0)) AND ((rt0.c2, rt0.c1, vt1.c0, 625818002, rt0.c2))), (NOT (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))) ORDER BY (1956350622 IN (CASE rt0.c1  WHEN rt0.c0 THEN 0.333923816763812 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN vt1.c0 ELSE vt0.c0 END, CASE WHEN rt0.c2 THEN '-688014420' END));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c0), (- (vt0.c0)), rt0.c2, '-1179627337', rt0.c2)) AND ((vt1.c0 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)), (((vt1.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt0.c1, '-1345297975', vt1.c0)) AND ((rt0.c2, rt0.c1, vt1.c0, 625818002, rt0.c2))), (NOT (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)<<(rt0.c2))) NOT NULL) CROSS JOIN vt0 ON ((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((rt0.c2)>(rt0.c0)))) ORDER BY (1956350622 IN (CASE rt0.c1  WHEN rt0.c0 THEN 0.333923816763812 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN vt1.c0 ELSE vt0.c0 END, CASE WHEN rt0.c2 THEN '-688014420' END)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2)<<(rt0.c2))) NOT NULL) CROSS JOIN vt0 ON ((((vt0.c0)OR(rt0.c2))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) AND (((rt0.c2)>(rt0.c0)))) WHERE ((((rt0.c0, rt0.c0, rt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c0), (- (vt0.c0)), rt0.c2, '-1179627337', rt0.c2)) AND ((vt1.c0 COLLATE NOCASE, ((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)), (((vt1.c0, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, rt0.c1, '-1345297975', vt1.c0)) AND ((rt0.c2, rt0.c1, vt1.c0, 625818002, rt0.c2))), (NOT (rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))))))) ORDER BY (1956350622 IN (CASE rt0.c1  WHEN rt0.c0 THEN 0.333923816763812 WHEN rt0.c0 THEN rt0.c1 WHEN '' THEN vt1.c0 ELSE vt0.c0 END, CASE WHEN rt0.c2 THEN '-688014420' END));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((rt0.c0)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((rt0.c0)LIKE(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((rt0.c0)LIKE(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((~ (vt0.c0)))) AND (((vt0.c0 IN ()))))) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)+(((((0.32693527969791625)OR(rt0.c0)))OR(vt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(0.841814790191556)))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((((0.32693527969791625)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((CAST(rt0.c0 AS REAL))OR(0.841814790191556)))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)+(((((0.32693527969791625)OR(rt0.c0)))OR(vt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(0.841814790191556)))AND(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((((0.32693527969791625)OR(rt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((CAST(rt0.c0 AS REAL))OR(0.841814790191556)))AND(rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((NULL)+(((((0.32693527969791625)OR(rt0.c0)))OR(vt0.c0))))) ORDER BY ((((CAST(rt0.c0 AS REAL))OR(0.841814790191556)))AND(rt0.c0));
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (COALESCE(((vt1.c0)IS(vt1.c0)), (+ (vt1.c0)), (vt1.c0 IN (vt1.c0)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))) ORDER BY ((((vt1.c0) ISNULL)) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)!=(((vt1.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) ORDER BY ((rt0.c2) NOT NULL) DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)<>(((vt1.c0) IS TRUE))) ORDER BY ((rt0.c2) NOT NULL) DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)!=(((vt1.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) ORDER BY ((rt0.c2) NOT NULL) DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)<>(((vt1.c0) IS TRUE))) ORDER BY ((rt0.c2) NOT NULL) DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)!=(((vt1.c0) IS TRUE))) WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) IS TRUE)) ORDER BY ((rt0.c2) NOT NULL) DESC  NULLS LAST, (NOT (vt1.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)=(vt0.c0)) COLLATE NOCASE) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)=(vt0.c0)) COLLATE NOCASE) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((vt0.c0)=(vt0.c0)) COLLATE NOCASE) ORDER BY (- (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM WHERE (((((((vt0.c0) IS TRUE))OR((+ (rt0.c2)))))OR(0.3290783243523202))) ORDER BY CAST((NOT (vt0.c0)) AS REAL), CASE -1.796526968E9  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c1 AS REAL) END DESC, (+ (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR((+ (rt0.c2)))))OR(0.3290783243523202))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM ORDER BY CAST((NOT (vt0.c0)) AS REAL), CASE -1.796526968E9  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c1 AS REAL) END DESC, (+ (vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM WHERE (((((((vt0.c0) IS TRUE))OR((+ (rt0.c2)))))OR(0.3290783243523202))) ORDER BY CAST((NOT (vt0.c0)) AS REAL), CASE -1.796526968E9  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c1 AS REAL) END DESC, (+ (vt1.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) IS TRUE))OR((+ (rt0.c2)))))OR(0.3290783243523202))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM ORDER BY CAST((NOT (vt0.c0)) AS REAL), CASE -1.796526968E9  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c1 AS REAL) END DESC, (+ (vt1.c0)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN vt1 ON CAST(vt0.c0 AS BLOB) COLLATE RTRIM WHERE (((((((vt0.c0) IS TRUE))OR((+ (rt0.c2)))))OR(0.3290783243523202))) ORDER BY CAST((NOT (vt0.c0)) AS REAL), CASE -1.796526968E9  WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c1 AS REAL) END DESC, (+ (vt1.c0)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)-(vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)-(vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((NOT (((vt1.c0)-(vt1.c0))))) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (json_patch(rt0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (json_patch(rt0.c2, rt0.c2))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (json_patch(rt0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (json_patch(rt0.c2, rt0.c2))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (json_patch(rt0.c2, rt0.c2))) ASC;
SELECT * FROM vt0 WHERE ('') ORDER BY 0.5727560765993314 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY 0.5727560765993314 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY 0.5727560765993314 COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY 0.5727560765993314 COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ('') ORDER BY 0.5727560765993314 COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(vt1.c0 AS REAL));
SELECT ALL * FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (- (rt0.c2)) THEN LENGTH(rt0.c2) ELSE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (- (rt0.c2)) THEN LENGTH(rt0.c2) ELSE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (- (rt0.c2)) THEN LENGTH(rt0.c2) ELSE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (- (rt0.c2)) THEN LENGTH(rt0.c2) ELSE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM vt1, rt0 WHERE (CASE (rt0.c2 IN ())  WHEN (- (rt0.c2)) THEN LENGTH(rt0.c2) ELSE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c2 END END) ORDER BY rt0.c1 DESC;
SELECT * FROM rt0 WHERE ((~ (COALESCE(DISTINCT rt0.c2, rt0.c0)))) ORDER BY CAST(x'f037' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'f037' AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (COALESCE(DISTINCT rt0.c2, rt0.c0)))) ORDER BY CAST(x'f037' AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(x'f037' AS REAL)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((~ (COALESCE(DISTINCT rt0.c2, rt0.c0)))) ORDER BY CAST(x'f037' AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((rt0.c1) IS FALSE))))OR((NOT (vt1.c0))))) ORDER BY DATE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (('-688014420') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) DESC  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))<((rt0.c1))))AND(((rt0.c1) IS FALSE))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY DATE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (('-688014420') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) DESC  NULLS LAST, (NULL IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((rt0.c1) IS FALSE))))OR((NOT (vt1.c0))))) ORDER BY DATE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (('-688014420') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) DESC  NULLS LAST, (NULL IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))<((rt0.c1))))AND(((rt0.c1) IS FALSE))))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY DATE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (('-688014420') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) DESC  NULLS LAST, (NULL IN ()) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((((rt0.c0))<((rt0.c1))))AND(((rt0.c1) IS FALSE))))OR((NOT (vt1.c0))))) ORDER BY DATE(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)), (('-688014420') NOT BETWEEN (rt0.c1) AND (rt0.c2)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END) DESC  NULLS LAST, (NULL IN ()) DESC;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))*((- (rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT vt1.c0))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))*((- (rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT vt1.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))*((- (rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT vt1.c0))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))*((- (rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT vt1.c0))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON (((NOT (rt0.c0)))*((- (rt0.c0)))) RIGHT OUTER JOIN vt1 ON ((((((rt0.c2)AND(vt0.c0)))AND(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT vt1.c0))) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (((((rt0.c0) IS TRUE), ((rt0.c1) NOT NULL), (+ (rt0.c2))))<((rt0.c0, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS(0.5950532409329181))))) ASC  NULLS FIRST, (- (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, json_type(rt0.c0);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS TRUE), ((rt0.c1) NOT NULL), (+ (rt0.c2))))<((rt0.c0, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS(0.5950532409329181))))) ASC  NULLS FIRST, (- (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, json_type(rt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (((((rt0.c0) IS TRUE), ((rt0.c1) NOT NULL), (+ (rt0.c2))))<((rt0.c0, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS(0.5950532409329181))))) ASC  NULLS FIRST, (- (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, json_type(rt0.c0);
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0) IS TRUE), ((rt0.c1) NOT NULL), (+ (rt0.c2))))<((rt0.c0, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS(0.5950532409329181))))) ASC  NULLS FIRST, (- (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, json_type(rt0.c0));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) IN ())) ORDER BY (((((rt0.c0) IS TRUE), ((rt0.c1) NOT NULL), (+ (rt0.c2))))<((rt0.c0, ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c0)IS(0.5950532409329181))))) ASC  NULLS FIRST, (- (CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST, json_type(rt0.c0);
SELECT COUNT(*) FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE x''  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CASE x''  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE));
SELECT * FROM vt1, rt0 WHERE ((((NOT (rt0.c0)))>(SQLITE_SOURCE_ID()))) ORDER BY (((rt0.c1 IN ()))>(((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))>(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c1 IN ()))>(((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((NOT (rt0.c0)))>(SQLITE_SOURCE_ID()))) ORDER BY (((rt0.c1 IN ()))>(((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0)))>(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c1 IN ()))>(((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((((NOT (rt0.c0)))>(SQLITE_SOURCE_ID()))) ORDER BY (((rt0.c1 IN ()))>(((((((((vt1.c0)AND(rt0.c2)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (1080545659)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c0) AND (1080545659)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (1080545659)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (rt0.c0) AND (1080545659)) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(((vt1.c0) BETWEEN (rt0.c0) AND (1080545659)) AS BLOB));
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE RTRIM)<(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2 COLLATE RTRIM)<(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE RTRIM)<(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c2 COLLATE RTRIM)<(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((rt0.c2 COLLATE RTRIM)<(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (rt0.c2)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND ((((rt0.c0))==((vt0.c0))))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((((rt0.c1))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND ((((rt0.c0))==((vt0.c0))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND ((((rt0.c0))==((vt0.c0))))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((((rt0.c1))<=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((((rt0.c1))<=((rt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND ((((rt0.c0))==((vt0.c0))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((vt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND ((((rt0.c0))==((vt0.c0))))) WHERE (((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR((((rt0.c1))<=((rt0.c0))))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)==(rt0.c2))) NOT NULL) WHERE (UNICODE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'a199'))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'a199')))) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt0 ON ((((vt0.c0)=(rt0.c2))) NOT NULL));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)==(rt0.c2))) NOT NULL) WHERE (UNICODE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'a199'))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'a199')))) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt0 ON ((((vt0.c0)=(rt0.c2))) NOT NULL));
SELECT * FROM rt0 INNER JOIN vt0 ON ((((vt0.c0)==(rt0.c2))) NOT NULL) WHERE (UNICODE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (x'a199'))));
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(x'34ef' COLLATE NOCASE)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))!=((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((('t~2셣◂V'))=((vt0.c0))))))AND((((((((('gi')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(x'34ef' COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))<>((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((('t~2셣◂V'))=((vt0.c0))))))AND((((((((('gi')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(x'34ef' COLLATE NOCASE)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))!=((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((('t~2셣◂V'))=((vt0.c0))))))AND((((((((('gi')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))) DESC;
SELECT SUM(count) FROM (SELECT ((LTRIM(x'34ef' COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))<>((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((('t~2셣◂V'))=((vt0.c0))))))AND((((((((('gi')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(x'34ef' COLLATE NOCASE)) ORDER BY ((((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0))!=((vt0.c0))))))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((('t~2셣◂V'))=((vt0.c0))))))AND((((((((('gi')OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR('')))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c0)) IS FALSE)) ORDER BY LIKELY(DISTINCT COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c0)) IS FALSE)) ORDER BY LIKELY(DISTINCT COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(DISTINCT COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELY(rt0.c0)) IS FALSE)) ORDER BY LIKELY(DISTINCT COALESCE(rt0.c2, rt0.c2, rt0.c0, rt0.c0)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)+(-1798262627)) WHEN (x'' IN ()) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((vt0.c0)>(vt0.c0))))<=((CAST(vt0.c0 AS REAL)))), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (-1798262627)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)+(-1798262627)) WHEN (x'' IN ()) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)>(vt0.c0))))<=((CAST(vt0.c0 AS REAL)))), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (-1798262627)), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)+(-1798262627)) WHEN (x'' IN ()) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((vt0.c0)>(vt0.c0))))<=((CAST(vt0.c0 AS REAL)))), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (-1798262627)), vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)+(-1798262627)) WHEN (x'' IN ()) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)>(vt0.c0))))<=((CAST(vt0.c0 AS REAL)))), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (-1798262627)), vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0)+(-1798262627)) WHEN (x'' IN ()) THEN ((vt0.c0) NOTNULL) ELSE ((vt0.c0) NOT NULL) END) ORDER BY (((((vt0.c0)>(vt0.c0))))<=((CAST(vt0.c0 AS REAL)))), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (-1798262627)), vt0.c0)  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((- (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((- (rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))AND((vt0.c0 IN ()))))AND((((rt0.c1))>=((rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)*(vt0.c0))))) ORDER BY ((((rt0.c2)<=(rt0.c2)))AND((rt0.c2 IN ())))  NULLS FIRST, ((IFNULL(rt0.c2, rt0.c0))<>(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))AND((vt0.c0 IN ()))))AND((((rt0.c1))>=((rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<=(rt0.c2)))AND((rt0.c2 IN ())))  NULLS FIRST, ((IFNULL(rt0.c2, rt0.c0))!=(rt0.c1))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))AND((vt0.c0 IN ()))))AND((((rt0.c1))>=((rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)*(vt0.c0))))) ORDER BY ((((rt0.c2)<=(rt0.c2)))AND((rt0.c2 IN ())))  NULLS FIRST, ((IFNULL(rt0.c2, rt0.c0))<>(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0) BETWEEN (x'') AND (rt0.c1)))AND((vt0.c0 IN ()))))AND((((rt0.c1))>=((rt0.c2))))))OR(rt0.c0 COLLATE NOCASE)))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2)<=(rt0.c2)))AND((rt0.c2 IN ())))  NULLS FIRST, ((IFNULL(rt0.c2, rt0.c0))!=(rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c0))==((((rt0.c1)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))=((((rt0.c1)<=(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c0))==((((rt0.c1)<=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))=((((rt0.c1)<=(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY (((rt0.c0))==((((rt0.c1)<=(rt0.c1)))));
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((CAST(vt1.c0 AS REAL))OR(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, (+ (CASE 0.6891213187612776  WHEN vt1.c0 THEN 0.2932262195404456 ELSE x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))OR(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, (+ (CASE 0.6891213187612776  WHEN vt1.c0 THEN 0.2932262195404456 ELSE x'' END)) DESC);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((CAST(vt1.c0 AS REAL))OR(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, (+ (CASE 0.6891213187612776  WHEN vt1.c0 THEN 0.2932262195404456 ELSE x'' END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))OR(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, (+ (CASE 0.6891213187612776  WHEN vt1.c0 THEN 0.2932262195404456 ELSE x'' END)) DESC);
SELECT * FROM vt0, vt1 WHERE ('') ORDER BY ((CAST(vt1.c0 AS REAL))OR(((vt1.c0) NOTNULL))) DESC  NULLS FIRST, (+ (CASE 0.6891213187612776  WHEN vt1.c0 THEN 0.2932262195404456 ELSE x'' END)) DESC;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(CASE rt0.c1  WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)&(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB))) WHERE (CASE ((rt0.c1) ISNULL)  WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST, CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) ISNULL)  WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(CASE rt0.c1  WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)&(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST, CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(CASE rt0.c1  WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)&(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB))) WHERE (CASE ((rt0.c1) ISNULL)  WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST, CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) ISNULL)  WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (rt0.c0 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(CASE rt0.c1  WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)&(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB))) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST, CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c2 IN ()) END  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((((rt0.c2) NOTNULL))OR(CAST(vt1.c0 AS TEXT))))OR(CASE rt0.c1  WHEN vt1.c0 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c2)&(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB))) WHERE (CASE ((rt0.c1) ISNULL)  WHEN rt0.c1 COLLATE BINARY THEN (rt0.c2 IN ()) ELSE (rt0.c0 IN ()) END) ORDER BY rt0.c1 COLLATE RTRIM  NULLS LAST, CASE CAST(vt1.c0 AS TEXT)  WHEN ((rt0.c2) IS TRUE) THEN (rt0.c2 IN ()) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c0))), ((rt0.c0)LIKE(rt0.c1)))) AND ((rt0.c1, CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c0))), ((rt0.c0)LIKE(rt0.c1)))) AND ((rt0.c1, CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)*(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c0))), ((rt0.c0)LIKE(rt0.c1)))) AND ((rt0.c1, CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c0))), ((rt0.c0)LIKE(rt0.c1)))) AND ((rt0.c1, CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)*(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c2 END, (((rt0.c0))<=((rt0.c0))), ((rt0.c0)LIKE(rt0.c1)))) AND ((rt0.c1, CASE WHEN rt0.c0 THEN NULL WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((rt0.c2)*(rt0.c1))))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 COLLATE RTRIM))>=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 COLLATE RTRIM))>=((rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 COLLATE RTRIM))>=((rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((rt0.c0 COLLATE RTRIM))>=((rt0.c2))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))<((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))<((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))<((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))<((((rt0.c1))<=((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))<((((rt0.c1))<=((rt0.c1)))))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((- (rt0.c2))))<((((rt0.c1)>(rt0.c1)))))) ORDER BY ((rt0.c2)&(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c2))))<((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c2)&(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((- (rt0.c2))))<((((rt0.c1)>(rt0.c1)))))) ORDER BY ((rt0.c2)&(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((- (rt0.c2))))<((((rt0.c1)>(rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c2)&(x''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((((- (rt0.c2))))<((((rt0.c1)>(rt0.c1)))))) ORDER BY ((rt0.c2)&(x''))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((NULL)>>(rt0.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2))<((rt0.c1))))))OR('%s')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)>>(rt0.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2))<((rt0.c1))))))OR('%s'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((NULL)>>(rt0.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2))<((rt0.c1))))))OR('%s')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)>>(rt0.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2))<((rt0.c1))))))OR('%s'))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((NULL)>>(rt0.c0)))OR((vt1.c0 IN (vt1.c0)))))OR(((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))))AND((((rt0.c2))<((rt0.c1))))))OR('%s')));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c0 IN (rt0.c2)) COLLATE NOCASE WHERE (UNLIKELY(vt1.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c0 IN (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c0 IN (rt0.c2)) COLLATE NOCASE WHERE (UNLIKELY(vt1.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c0 IN (rt0.c2)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c0 IN (rt0.c2)) COLLATE NOCASE WHERE (UNLIKELY(vt1.c0));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT (vt1.c0 IN (vt0.c0)), (('1942972214') NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(DISTINCT (vt1.c0 IN (vt0.c0)), (('1942972214') NOT NULL)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT (vt1.c0 IN (vt0.c0)), (('1942972214') NOT NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY TRIM(DISTINCT (vt1.c0 IN (vt0.c0)), (('1942972214') NOT NULL)) ASC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0)&(vt0.c0)) COLLATE BINARY) ORDER BY TRIM(DISTINCT (vt1.c0 IN (vt0.c0)), (('1942972214') NOT NULL)) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) ISNULL))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) ISNULL))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) ISNULL))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c1) ISNULL))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY x''  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((((rt0.c0))!=((vt0.c0))))OR((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, vt1.c0))))))OR('-82036920' COLLATE RTRIM)) INNER JOIN rt0 ON 0Xffffffffa2633d68 WHERE (((((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE((+ (vt1.c0))))) ORDER BY '4*~u''g'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((((rt0.c0))!=((vt0.c0))))OR((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, vt1.c0))))))OR('-82036920' COLLATE RTRIM)) INNER JOIN rt0 ON 0xffffffffa2633d68 ORDER BY '4*~u''g'  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON (((((((rt0.c0))!=((vt0.c0))))OR((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, vt1.c0))))))OR('-82036920' COLLATE RTRIM)) INNER JOIN rt0 ON 0Xffffffffa2633d68 WHERE (((((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE((+ (vt1.c0))))) ORDER BY '4*~u''g'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(vt1.c0)))OR(vt1.c0)))LIKE((+ (vt1.c0))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((((((rt0.c0))!=((vt0.c0))))OR((((vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((NULL, rt0.c1, vt1.c0))))))OR('-82036920' COLLATE RTRIM)) INNER JOIN rt0 ON 0xffffffffa2633d68 ORDER BY '4*~u''g'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN (vt0.c0)) THEN rt0.c1 WHEN ((vt0.c0)AND(x'')) THEN 's,g)m/' WHEN ((rt0.c2)<(x'')) THEN (((rt0.c0))<>((vt0.c0))) END) ORDER BY (NOT (((rt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN (vt0.c0)) THEN rt0.c1 WHEN ((vt0.c0)AND(x'')) THEN 's,g)m/' WHEN ((rt0.c2)<(x'')) THEN (((rt0.c0))!=((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN (vt0.c0)) THEN rt0.c1 WHEN ((vt0.c0)AND(x'')) THEN 's,g)m/' WHEN ((rt0.c2)<(x'')) THEN (((rt0.c0))<>((vt0.c0))) END) ORDER BY (NOT (((rt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN (vt0.c0)) THEN rt0.c1 WHEN ((vt0.c0)AND(x'')) THEN 's,g)m/' WHEN ((rt0.c2)<(x'')) THEN (((rt0.c0))!=((vt0.c0))) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE ((((rt0.c1)OR(vt0.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN (vt0.c0)) THEN rt0.c1 WHEN ((vt0.c0)AND(x'')) THEN 's,g)m/' WHEN ((rt0.c2)<(x'')) THEN (((rt0.c0))<>((vt0.c0))) END) ORDER BY (NOT (((rt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT NULL) INNER JOIN vt0 ON CAST(((0.5376201802043092)>>(vt1.c0)) AS NUMERIC) WHERE ((CHANGES() IN ())) ORDER BY CAST(((0.3948985135052362) IS TRUE) AS BLOB)  NULLS LAST, x''  NULLS LAST, ((((rt0.c1)*(0.5494010988833338))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, vt1.c0, rt0.c1)))) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CHANGES() IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT NULL) INNER JOIN vt0 ON CAST(((0.5376201802043092)>>(vt1.c0)) AS NUMERIC) ORDER BY CAST(((0.3948985135052362) IS TRUE) AS BLOB)  NULLS LAST, x''  NULLS LAST, ((((rt0.c1)*(0.5494010988833338))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, vt1.c0, rt0.c1)))) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT NULL) INNER JOIN vt0 ON CAST(((0.5376201802043092)>>(vt1.c0)) AS NUMERIC) WHERE ((CHANGES() IN ())) ORDER BY CAST(((0.3948985135052362) IS TRUE) AS BLOB)  NULLS LAST, x''  NULLS LAST, ((((rt0.c1)*(0.5494010988833338))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, vt1.c0, rt0.c1)))) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CHANGES() IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT NULL) INNER JOIN vt0 ON CAST(((0.5376201802043092)>>(vt1.c0)) AS NUMERIC) ORDER BY CAST(((0.3948985135052362) IS TRUE) AS BLOB)  NULLS LAST, x''  NULLS LAST, ((((rt0.c1)*(0.5494010988833338))) NOT BETWEEN ((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c0, vt1.c0, rt0.c1)))) AND (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (rt0.c0)));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.12224799523070484) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE), (+ ('3瀕')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.12224799523070484) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE), (+ ('3瀕')))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.12224799523070484) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE), (+ ('3瀕')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.12224799523070484) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE), (+ ('3瀕')))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (0.12224799523070484) ORDER BY COALESCE(DISTINCT CAST(vt1.c0 AS INTEGER), ((((vt1.c0)OR(vt1.c0)))AND(rt0.c1)), ((rt0.c2) IS FALSE), (+ ('3瀕')))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((+ (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 WHERE ('2047161338');
SELECT SUM(count) FROM (SELECT ALL (('2047161338') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('2047161338');
SELECT SUM(count) FROM (SELECT ALL (('2047161338') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('2047161338');
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(-236294412))  WHEN ((NULL)OR(vt1.c0)) THEN NULL WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN (('')<=(vt1.c0)) END DESC, (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(-236294412))  WHEN ((NULL)OR(vt1.c0)) THEN NULL WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN (('')<=(vt1.c0)) END DESC, (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(-236294412))  WHEN ((NULL)OR(vt1.c0)) THEN NULL WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN (('')<=(vt1.c0)) END DESC, (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(((vt1.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(-236294412))  WHEN ((NULL)OR(vt1.c0)) THEN NULL WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN (('')<=(vt1.c0)) END DESC, (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(((vt1.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(NULL)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY CASE ((((vt1.c0)OR(vt1.c0)))AND(-236294412))  WHEN ((NULL)OR(vt1.c0)) THEN NULL WHEN HEX(vt1.c0) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0) NOTNULL) THEN (('')<=(vt1.c0)) END DESC, (((((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))))AND(((vt1.c0)<<(vt1.c0)))))OR(((vt1.c0) IS TRUE))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((0xffffffffd6fdbbac)LIKE(((vt0.c0)+(rt0.c1))))) ORDER BY ((STRFTIME(vt0.c0, rt0.c2, vt0.c0, vt1.c0, vt0.c0))=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffd6fdbbac)LIKE(((vt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((STRFTIME(vt0.c0, rt0.c2, vt0.c0, vt1.c0, vt0.c0))=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((0xffffffffd6fdbbac)LIKE(((vt0.c0)+(rt0.c1))))) ORDER BY ((STRFTIME(vt0.c0, rt0.c2, vt0.c0, vt1.c0, vt0.c0))=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffffd6fdbbac)LIKE(((vt0.c0)+(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((STRFTIME(vt0.c0, rt0.c2, vt0.c0, vt1.c0, vt0.c0))=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((0xffffffffd6fdbbac)LIKE(((vt0.c0)+(rt0.c1))))) ORDER BY ((STRFTIME(vt0.c0, rt0.c2, vt0.c0, vt1.c0, vt0.c0))=((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) DESC;
SELECT * FROM rt0, vt0, vt1 WHERE (CASE ((rt0.c0)|(rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c0)%(rt0.c0)) ELSE vt1.c0 END) ORDER BY ((((0.09555023412614949) IS FALSE)) NOTNULL)  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)|(rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c0)%(rt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((0.09555023412614949) IS FALSE)) NOTNULL)  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE (CASE ((rt0.c0)|(rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c0)%(rt0.c0)) ELSE vt1.c0 END) ORDER BY ((((0.09555023412614949) IS FALSE)) NOTNULL)  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0)|(rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c0)%(rt0.c0)) ELSE vt1.c0 END) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((0.09555023412614949) IS FALSE)) NOTNULL)  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0, vt0, vt1 WHERE (CASE ((rt0.c0)|(rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c0)%(rt0.c0)) ELSE vt1.c0 END) ORDER BY ((((0.09555023412614949) IS FALSE)) NOTNULL)  NULLS FIRST, (vt1.c0 IN ()) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c0)), (((rt0.c1))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c0)), (((rt0.c1))=((vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c0)), (((rt0.c1))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c0)), (((rt0.c1))=((vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c0)), (((rt0.c1))==((vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((json_type(rt0.c0))OR((rt0.c2 IN (rt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN vt1 ON rt0.c0 COLLATE NOCASE WHERE ((((rt0.c0)) NOT BETWEEN ((((vt1.c0)<(rt0.c2)))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((vt1.c0)<(rt0.c2)))) AND ((((vt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((json_type(rt0.c0))OR((rt0.c2 IN (rt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN vt1 ON rt0.c0 COLLATE NOCASE);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((json_type(rt0.c0))OR((rt0.c2 IN (rt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN vt1 ON rt0.c0 COLLATE NOCASE WHERE ((((rt0.c0)) NOT BETWEEN ((((vt1.c0)<(rt0.c2)))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((vt1.c0)<(rt0.c2)))) AND ((((vt0.c0)<=(rt0.c2)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((json_type(rt0.c0))OR((rt0.c2 IN (rt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN vt1 ON rt0.c0 COLLATE NOCASE);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((json_type(rt0.c0))OR((rt0.c2 IN (rt0.c0)))))OR(CAST(vt0.c0 AS BLOB))) CROSS JOIN vt1 ON rt0.c0 COLLATE NOCASE WHERE ((((rt0.c0)) NOT BETWEEN ((((vt1.c0)<(rt0.c2)))) AND ((((vt0.c0)<=(rt0.c2))))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(x''))  WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(x''))  WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(x''))  WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS(x''))  WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c0)IS(x''))  WHEN UPPER(vt1.c0) THEN vt1.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))*(0.40056297415031084)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))*(0.40056297415031084))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))*(0.40056297415031084)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))*(0.40056297415031084))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))*(0.40056297415031084)));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN NULL THEN rt0.c1 WHEN 0xffffffff9fc322bd THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (CASE WHEN NULL THEN rt0.c1 WHEN 0xffffffff9fc322bd THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN NULL THEN rt0.c1 WHEN 0xffffffff9fc322bd THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (CASE WHEN NULL THEN rt0.c1 WHEN 0xffffffff9fc322bd THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((rt0.c1 COLLATE RTRIM IN ())) ORDER BY (CASE WHEN NULL THEN rt0.c1 WHEN 0xffffffff9fc322bd THEN vt1.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (((+ (vt1.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((+ (vt1.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (((+ (vt1.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((+ (vt1.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((+ (rt0.c0)) IN ())) ORDER BY (((+ (vt1.c0))) IS FALSE), (((vt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2)-(vt1.c0))))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)-(vt1.c0))))<((x'')))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2)-(vt1.c0))))<((x''))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)-(vt1.c0))))<((x'')))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((rt0.c2)-(vt1.c0))))<((x''))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN UNLIKELY(rt0.c2) END ASC, HEX((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0)))), ((((rt0.c1)GLOB(rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN UNLIKELY(rt0.c2) END ASC, HEX((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0)))), ((((rt0.c1)GLOB(rt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN UNLIKELY(rt0.c2) END ASC, HEX((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0)))), ((((rt0.c1)GLOB(rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN UNLIKELY(rt0.c2) END ASC, HEX((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0)))), ((((rt0.c1)GLOB(rt0.c0))) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((+ (rt0.c2)) AS NUMERIC)) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)) THEN UNLIKELY(rt0.c2) END ASC, HEX((((rt0.c2, rt0.c0, rt0.c0))>((rt0.c1, rt0.c0, rt0.c0)))), ((((rt0.c1)GLOB(rt0.c0))) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((UPPER(x'')) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(x'')) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((UPPER(x'')) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(x'')) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((UPPER(x'')) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((~ (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c0 IN ()) COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((((((- (vt0.c0)))OR(((rt0.c1) IS FALSE))))OR((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(((rt0.c1) IS FALSE))))OR((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0);
SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((((((- (vt0.c0)))OR(((rt0.c1) IS FALSE))))OR((((vt0.c0))=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((- (vt0.c0)))OR(((rt0.c1) IS FALSE))))OR((((vt0.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON vt0.c0);
SELECT * FROM vt0 CROSS JOIN rt0 ON vt0.c0 WHERE ((((((- (vt0.c0)))OR(((rt0.c1) IS FALSE))))OR((((vt0.c0))=((vt0.c0))))));
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN (vt0.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN x'' WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((0.6079650801057882)/(vt1.c0)) END) ORDER BY (((((vt1.c0) NOTNULL)))==(((vt1.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt0.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN x'' WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((0.6079650801057882)/(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0) NOTNULL)))==(((vt1.c0 IN ())))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN (vt0.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN x'' WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((0.6079650801057882)/(vt1.c0)) END) ORDER BY (((((vt1.c0) NOTNULL)))==(((vt1.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt1.c0 IN (vt0.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN x'' WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((0.6079650801057882)/(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt1.c0) NOTNULL)))==(((vt1.c0 IN ())))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE (CASE (vt1.c0 IN (vt0.c0))  WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN x'' WHEN vt1.c0 THEN CAST(vt1.c0 AS REAL) WHEN (vt1.c0 IN ()) THEN ((0.6079650801057882)/(vt1.c0)) END) ORDER BY (((((vt1.c0) NOTNULL)))==(((vt1.c0 IN ())))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((NULL) NOTNULL));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)&(vt0.c0))) ISNULL) CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.9219578993345636) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(TRIM(DISTINCT NULL, rt0.c0)))) ORDER BY (- (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(TRIM(DISTINCT NULL, rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)&(vt0.c0))) ISNULL) CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.9219578993345636) ORDER BY (- (rt0.c0)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)&(vt0.c0))) ISNULL) CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.9219578993345636) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(TRIM(DISTINCT NULL, rt0.c0)))) ORDER BY (- (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(TRIM(DISTINCT NULL, rt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)&(vt0.c0))) ISNULL) CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.9219578993345636) ORDER BY (- (rt0.c0)) DESC);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1)&(vt0.c0))) ISNULL) CROSS JOIN vt1 ON LIKELIHOOD(DISTINCT (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))), 0.9219578993345636) WHERE (((((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))LIKE(TRIM(DISTINCT NULL, rt0.c0)))) ORDER BY (- (rt0.c0)) DESC;
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((((+ (vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) THEN '<*F KhML' WHEN json_type(rt0.c0) THEN ((rt0.c0)&(rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((NULLIF(0.7736908406800236, rt0.c1))<>(rt0.c1 COLLATE RTRIM)), CASE ((rt0.c2)GLOB(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c2)) END ASC  NULLS LAST, CAST((~ (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) THEN '<*F KhML' WHEN json_type(rt0.c0) THEN ((rt0.c0)&(rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(0.7736908406800236, rt0.c1))!=(rt0.c1 COLLATE RTRIM)), CASE ((rt0.c2)GLOB(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c2)) END ASC  NULLS LAST, CAST((~ (rt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) THEN '<*F KhML' WHEN json_type(rt0.c0) THEN ((rt0.c0)&(rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((NULLIF(0.7736908406800236, rt0.c1))<>(rt0.c1 COLLATE RTRIM)), CASE ((rt0.c2)GLOB(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c2)) END ASC  NULLS LAST, CAST((~ (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) THEN '<*F KhML' WHEN json_type(rt0.c0) THEN ((rt0.c0)&(rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY ((NULLIF(0.7736908406800236, rt0.c1))!=(rt0.c1 COLLATE RTRIM)), CASE ((rt0.c2)GLOB(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c2)) END ASC  NULLS LAST, CAST((~ (rt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c0 AS REAL)  WHEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) THEN '<*F KhML' WHEN json_type(rt0.c0) THEN ((rt0.c0)&(rt0.c2)) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN '' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((NULLIF(0.7736908406800236, rt0.c1))<>(rt0.c1 COLLATE RTRIM)), CASE ((rt0.c2)GLOB(rt0.c0))  WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN (~ (rt0.c2)) END ASC  NULLS LAST, CAST((~ (rt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (((rt0.c1)>(rt0.c2)))) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE RTRIM)AND(0.26862725433793433)))OR(x'')))AND(rt0.c1)))OR(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (((rt0.c1)>(rt0.c2)))) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE RTRIM)AND(0.26862725433793433)))OR(x'')))AND(rt0.c1)))OR(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (((rt0.c1)>(rt0.c2)))) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE RTRIM)AND(0.26862725433793433)))OR(x'')))AND(rt0.c1)))OR(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (((rt0.c1)>(rt0.c2)))) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE RTRIM)AND(0.26862725433793433)))OR(x'')))AND(rt0.c1)))OR(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (x'') ORDER BY (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ASC  NULLS FIRST, ((rt0.c2 COLLATE NOCASE) BETWEEN ((- (rt0.c2))) AND (((rt0.c1)>(rt0.c2)))) DESC  NULLS LAST, ((((((((rt0.c0 COLLATE RTRIM)AND(0.26862725433793433)))OR(x'')))AND(rt0.c1)))OR(((rt0.c2)>>(rt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (NOT (CAST(x'1be13122' AS BLOB)))  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NOT (CAST(x'1be13122' AS BLOB)))  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)=(vt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (NOT (CAST(x'1be13122' AS BLOB)))  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (NOT (CAST(x'1be13122' AS BLOB)))  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)=(vt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 NOT INDEXED, vt0 WHERE (((CAST(rt0.c1 AS TEXT))OR(CAST(rt0.c2 AS INTEGER)))) ORDER BY (NOT (CAST(x'1be13122' AS BLOB)))  NULLS LAST, (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (((rt0.c1)==(vt0.c0))) AND (((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))!=(CAST(NULL AS INTEGER)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(x''))) IS TRUE) DESC  NULLS FIRST, ((((vt1.c0)-(vt1.c0)))<=((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0)))!=(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(x''))) IS TRUE) DESC  NULLS FIRST, ((((vt1.c0)-(vt1.c0)))<=((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))!=(CAST(NULL AS INTEGER)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(x''))) IS TRUE) DESC  NULLS FIRST, ((((vt1.c0)-(vt1.c0)))<=((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)&(vt1.c0)))!=(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(x''))) IS TRUE) DESC  NULLS FIRST, ((((vt1.c0)-(vt1.c0)))<=((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)&(vt1.c0)))!=(CAST(NULL AS INTEGER)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(x''))) IS TRUE) DESC  NULLS FIRST, ((((vt1.c0)-(vt1.c0)))<=((vt1.c0 IN (vt1.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((json_array(vt1.c0, vt1.c0, x'', vt1.c0)))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((json_array(vt1.c0, vt1.c0, x'', vt1.c0)))<=((NULL))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (((json_array(vt1.c0, vt1.c0, x'', vt1.c0)))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((json_array(vt1.c0, vt1.c0, x'', vt1.c0)))<=((NULL))));
SELECT * FROM rt0 WHERE (((((((rt0.c0))>((rt0.c0)))))=((rt0.c1)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST, 'f2z' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))>((rt0.c0)))))==((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST, 'f2z' ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c0))>((rt0.c0)))))=((rt0.c1)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST, 'f2z' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0))>((rt0.c0)))))==((rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST, 'f2z' ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((rt0.c0))>((rt0.c0)))))=((rt0.c1)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST, 'f2z' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CAST(vt1.c0 AS INTEGER))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CAST(vt1.c0 AS INTEGER))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON (NOT (CAST(vt1.c0 AS INTEGER))) WHERE (rt0.c2);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0)OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0)OR(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0)OR(rt0.c1)))))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((vt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE RTRIM)) AND ((((rt0.c0)OR(rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY) ORDER BY ((((rt0.c0)>>(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>>(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY) ORDER BY ((((rt0.c0)>>(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)>>(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c1  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END COLLATE BINARY) ORDER BY ((((rt0.c0)>>(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))GLOB(rt0.c2 COLLATE BINARY)) WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))GLOB(rt0.c2 COLLATE BINARY)));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))GLOB(rt0.c2 COLLATE BINARY)) WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))GLOB(rt0.c2 COLLATE BINARY)));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 IN ()))GLOB(rt0.c2 COLLATE BINARY)) WHERE ((NOT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c2)/(vt0.c0)) END) ORDER BY ((((vt0.c0)=(vt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) ASC, rt0.c2 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c2)/(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((((vt0.c0)=(vt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) ASC, rt0.c2 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c2)/(vt0.c0)) END) ORDER BY ((((vt0.c0)=(vt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) ASC, rt0.c2 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c2)/(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED ORDER BY ((((vt0.c0)=(vt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) ASC, rt0.c2 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c2)/(vt0.c0)) END) ORDER BY ((((vt0.c0)=(vt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)) ASC, rt0.c2 COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL COLLATE NOCASE  WHEN x'' THEN ((0X6dfe0fa0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE 0.46087762713393343 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN x'' THEN ((0X6dfe0fa0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE 0.46087762713393343 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL COLLATE NOCASE  WHEN x'' THEN ((0X6dfe0fa0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE 0.46087762713393343 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN x'' THEN ((0X6dfe0fa0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE 0.46087762713393343 END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE NULL COLLATE NOCASE  WHEN x'' THEN ((0X6dfe0fa0) NOT BETWEEN (vt1.c0) AND (x'')) ELSE 0.46087762713393343 END);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('272839560') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN ('272839560') AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('272839560') AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) NOT BETWEEN ('272839560') AND (rt0.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE ((NOT (((vt0.c0) NOT BETWEEN ('272839560') AND (rt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LTRIM(vt1.c0) THEN LENGTH(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LTRIM(vt1.c0) THEN LENGTH(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LTRIM(vt1.c0) THEN LENGTH(vt1.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LTRIM(vt1.c0) THEN LENGTH(vt1.c0) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LTRIM(vt1.c0) THEN LENGTH(vt1.c0) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((1831182103 IN (((vt1.c0) ISNULL)))) ORDER BY ((vt1.c0)/(((vt1.c0) IS FALSE)))  NULLS FIRST, CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) WHEN (NOT (0xffffffffd19699f5)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '-1860236085' ELSE '' END THEN (((vt0.c0))<>((NULL))) END DESC;
SELECT SUM(count) FROM (SELECT (((1831182103 IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)/(((vt1.c0) IS FALSE)))  NULLS FIRST, CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) WHEN (NOT (0xffffffffd19699f5)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '-1860236085' ELSE '' END THEN (((vt0.c0))<>((NULL))) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((1831182103 IN (((vt1.c0) ISNULL)))) ORDER BY ((vt1.c0)/(((vt1.c0) IS FALSE)))  NULLS FIRST, CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) WHEN (NOT (0xffffffffd19699f5)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '-1860236085' ELSE '' END THEN (((vt0.c0))<>((NULL))) END DESC;
SELECT SUM(count) FROM (SELECT (((1831182103 IN (((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0)/(((vt1.c0) IS FALSE)))  NULLS FIRST, CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) WHEN (NOT (0xffffffffd19699f5)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '-1860236085' ELSE '' END THEN (((vt0.c0))<>((NULL))) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((1831182103 IN (((vt1.c0) ISNULL)))) ORDER BY ((vt1.c0)/(((vt1.c0) IS FALSE)))  NULLS FIRST, CASE WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) WHEN (NOT (0xffffffffd19699f5)) THEN vt0.c0 WHEN CASE WHEN vt0.c0 THEN '-1860236085' ELSE '' END THEN (((vt0.c0))<>((NULL))) END DESC;
SELECT ALL * FROM vt1 WHERE (TIME(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, '{q/,Y\7c', ((vt1.c0)IS NOT(vt1.c0)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, '{q/,Y\7c', ((vt1.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (TIME(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, '{q/,Y\7c', ((vt1.c0)IS NOT(vt1.c0)))) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TIME(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, '{q/,Y\7c', ((vt1.c0)IS NOT(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (TIME(CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END, '{q/,Y\7c', ((vt1.c0)IS NOT(vt1.c0)))) ORDER BY x''  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)OR(rt0.c0))) NOT BETWEEN ((((rt0.c0))==((rt0.c2)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((CHANGES())AND(CAST('-317150679' AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))OR(((vt0.c0) NOT NULL))))AND(CAST(NULL AS INTEGER))))OR((rt0.c0 IN (rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c0))) NOT BETWEEN ((((rt0.c0))==((rt0.c2)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((((((((CHANGES())AND(CAST('-317150679' AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))OR(((vt0.c0) NOT NULL))))AND(CAST(NULL AS INTEGER))))OR((rt0.c0 IN (rt0.c0, rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)OR(rt0.c0))) NOT BETWEEN ((((rt0.c0))==((rt0.c2)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((CHANGES())AND(CAST('-317150679' AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))OR(((vt0.c0) NOT NULL))))AND(CAST(NULL AS INTEGER))))OR((rt0.c0 IN (rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(rt0.c0))) NOT BETWEEN ((((rt0.c0))==((rt0.c2)))) AND ((~ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((((((((((CHANGES())AND(CAST('-317150679' AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))OR(((vt0.c0) NOT NULL))))AND(CAST(NULL AS INTEGER))))OR((rt0.c0 IN (rt0.c0, rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (((((vt1.c0)OR(rt0.c0))) NOT BETWEEN ((((rt0.c0))==((rt0.c2)))) AND ((~ (vt0.c0))))) ORDER BY ((((((((((((CHANGES())AND(CAST('-317150679' AS BLOB))))OR(SQLITE_COMPILEOPTION_USED(rt0.c1))))OR(((((((((((((rt0.c1)OR(rt0.c1)))AND(vt1.c0)))OR(vt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))))OR(((vt0.c0) NOT NULL))))AND(CAST(NULL AS INTEGER))))OR((rt0.c0 IN (rt0.c0, rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)&(vt0.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE ((((((((((((((- (rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(rt0.c1)))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((x'bbd9')>=(rt0.c1)))))AND('')))OR(((rt0.c2) IS FALSE)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) ASC, CAST(UNLIKELY(rt0.c1) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(rt0.c1)))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((x'bbd9')>=(rt0.c1)))))AND('')))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) ASC, CAST(UNLIKELY(rt0.c1) AS BLOB) ASC);
SELECT * FROM rt0 WHERE ((((((((((((((- (rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(rt0.c1)))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((x'bbd9')>=(rt0.c1)))))AND('')))OR(((rt0.c2) IS FALSE)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) ASC, CAST(UNLIKELY(rt0.c1) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((- (rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(rt0.c1)))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((x'bbd9')>=(rt0.c1)))))AND('')))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) ASC, CAST(UNLIKELY(rt0.c1) AS BLOB) ASC);
SELECT * FROM rt0 WHERE ((((((((((((((- (rt0.c2)))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)))))AND(rt0.c1)))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(((x'bbd9')>=(rt0.c1)))))AND('')))OR(((rt0.c2) IS FALSE)))) ORDER BY IFNULL(rt0.c0 COLLATE RTRIM, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))) ASC, CAST(UNLIKELY(rt0.c1) AS BLOB) ASC;
SELECT * FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB));
SELECT * FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB);
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB));
SELECT * FROM rt0 WHERE ((+ (rt0.c1))) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END AS BLOB);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR((NULL IN (rt0.c1)))))AND(vt0.c0 COLLATE BINARY)))OR(((((((((NULL)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR((NULL IN (rt0.c1)))))AND(vt0.c0 COLLATE BINARY)))OR(((((((((NULL)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR((NULL IN (rt0.c1)))))AND(vt0.c0 COLLATE BINARY)))OR(((((((((NULL)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))OR(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR((NULL IN (rt0.c1)))))AND(vt0.c0 COLLATE BINARY)))OR(((((((((NULL)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))OR(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))OR((NULL IN (rt0.c1)))))AND(vt0.c0 COLLATE BINARY)))OR(((((((((NULL)OR(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))))OR(((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((vt0.c0 IN (vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0  NULLS FIRST, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0, vt1 WHERE ((~ ((vt0.c0 IN (vt1.c0, vt1.c0))))) ORDER BY vt1.c0  NULLS FIRST, (+ ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN NULL THEN x'' END  WHEN CASE WHEN rt0.c0 THEN '2091422571' END THEN CASE rt0.c1  WHEN rt0.c2 THEN 0.48202768654839623 ELSE rt0.c0 END ELSE ((rt0.c2) IS TRUE) END WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0)>=(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN NULL THEN x'' END  WHEN CASE WHEN rt0.c0 THEN '2091422571' END THEN CASE rt0.c1  WHEN rt0.c2 THEN 0.48202768654839623 ELSE rt0.c0 END ELSE ((rt0.c2) IS TRUE) END ORDER BY (((vt1.c0)>=(rt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN NULL THEN x'' END  WHEN CASE WHEN rt0.c0 THEN '2091422571' END THEN CASE rt0.c1  WHEN rt0.c2 THEN 0.48202768654839623 ELSE rt0.c0 END ELSE ((rt0.c2) IS TRUE) END WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0)>=(rt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN NULL THEN x'' END  WHEN CASE WHEN rt0.c0 THEN '2091422571' END THEN CASE rt0.c1  WHEN rt0.c2 THEN 0.48202768654839623 ELSE rt0.c0 END ELSE ((rt0.c2) IS TRUE) END ORDER BY (((vt1.c0)>=(rt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON CASE CASE WHEN NULL THEN x'' END  WHEN CASE WHEN rt0.c0 THEN '2091422571' END THEN CASE rt0.c1  WHEN rt0.c2 THEN 0.48202768654839623 ELSE rt0.c0 END ELSE ((rt0.c2) IS TRUE) END WHERE ((- (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0)>=(rt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) CROSS JOIN vt0 ON ((((rt0.c0)OR(rt0.c0)))IS NOT(NULL)) WHERE (((COALESCE(vt0.c0, vt1.c0))+(CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))OR((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt1.c0))+(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) CROSS JOIN vt0 ON ((((rt0.c0)OR(rt0.c0)))IS NOT(NULL)) ORDER BY ((((rt0.c0) IS TRUE))OR((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) CROSS JOIN vt0 ON ((((rt0.c0)OR(rt0.c0)))IS NOT(NULL)) WHERE (((COALESCE(vt0.c0, vt1.c0))+(CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))OR((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, vt1.c0))+(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) CROSS JOIN vt0 ON ((((rt0.c0)OR(rt0.c0)))IS NOT(NULL)) ORDER BY ((((rt0.c0) IS TRUE))OR((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER))>(CASE WHEN rt0.c0 THEN rt0.c0 END)) CROSS JOIN vt0 ON ((((rt0.c0)OR(rt0.c0)))IS NOT(NULL)) WHERE (((COALESCE(vt0.c0, vt1.c0))+(CAST(rt0.c1 AS REAL)))) ORDER BY ((((rt0.c0) IS TRUE))OR((vt1.c0 IN ())));
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(0Xfffffffff910099f AS INTEGER))))OR(GLOB(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('820276946')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(0xfffffffff910099f AS INTEGER))))OR(GLOB(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('820276946'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(0Xfffffffff910099f AS INTEGER))))OR(GLOB(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('820276946')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(0xfffffffff910099f AS INTEGER))))OR(GLOB(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('820276946'))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))AND(CAST(0Xfffffffff910099f AS INTEGER))))OR(GLOB(vt1.c0, vt1.c0))))AND(vt1.c0 COLLATE NOCASE)))OR('820276946')));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOTNULL) WHERE (LOWER(DISTINCT x'7eb7'));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'7eb7')) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOTNULL) WHERE (LOWER(DISTINCT x'7eb7'));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT x'7eb7')) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOTNULL) WHERE (LOWER(DISTINCT x'7eb7'));
SELECT * FROM vt1, rt0, vt0 WHERE (1.477573902E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.477573902E9 COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (1.477573902E9 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((1.477573902E9 COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (1.477573902E9 COLLATE BINARY);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.04087792743408847) THEN vt1.c0 COLLATE BINARY END) ORDER BY CAST(vt0.c0 AS REAL) DESC, ((((rt0.c2 IN (vt0.c0)), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((rt0.c0)>=(vt0.c0))))==((rt0.c1 COLLATE RTRIM, ((rt0.c2)+(vt0.c0)), 'dY2/bR', (+ (vt0.c0)), SUBSTR(vt1.c0, rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(vt0.c0, 0.04087792743408847) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(vt0.c0 AS REAL) DESC, ((((rt0.c2 IN (vt0.c0)), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((rt0.c0)>=(vt0.c0))))==((rt0.c1 COLLATE RTRIM, ((rt0.c2)+(vt0.c0)), 'dY2/bR', (+ (vt0.c0)), SUBSTR(vt1.c0, rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.04087792743408847) THEN vt1.c0 COLLATE BINARY END) ORDER BY CAST(vt0.c0 AS REAL) DESC, ((((rt0.c2 IN (vt0.c0)), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((rt0.c0)>=(vt0.c0))))==((rt0.c1 COLLATE RTRIM, ((rt0.c2)+(vt0.c0)), 'dY2/bR', (+ (vt0.c0)), SUBSTR(vt1.c0, rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELIHOOD(vt0.c0, 0.04087792743408847) THEN vt1.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CAST(vt0.c0 AS REAL) DESC, ((((rt0.c2 IN (vt0.c0)), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((rt0.c0)>=(vt0.c0))))==((rt0.c1 COLLATE RTRIM, ((rt0.c2)+(vt0.c0)), 'dY2/bR', (+ (vt0.c0)), SUBSTR(vt1.c0, rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN LIKELIHOOD(vt0.c0, 0.04087792743408847) THEN vt1.c0 COLLATE BINARY END) ORDER BY CAST(vt0.c0 AS REAL) DESC, ((((rt0.c2 IN (vt0.c0)), (+ (rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), ((rt0.c0)>=(vt0.c0))))==((rt0.c1 COLLATE RTRIM, ((rt0.c2)+(vt0.c0)), 'dY2/bR', (+ (vt0.c0)), SUBSTR(vt1.c0, rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END))) ORDER BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END))) ORDER BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 COLLATE RTRIM IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((rt0.c1 COLLATE RTRIM IN (CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END))) ORDER BY (vt0.c0 IN (rt0.c1)) COLLATE NOCASE DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), COALESCE(vt0.c0, vt0.c0), UNICODE(vt0.c0))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (LOWER(vt1.c0)) AND (1.831182103E9)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), COALESCE(vt0.c0, vt0.c0), UNICODE(vt0.c0))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (LOWER(vt1.c0)) AND (1.831182103E9)) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), COALESCE(vt0.c0, vt0.c0), UNICODE(vt0.c0))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (LOWER(vt1.c0)) AND (1.831182103E9)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), COALESCE(vt0.c0, vt0.c0), UNICODE(vt0.c0))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (LOWER(vt1.c0)) AND (1.831182103E9)) DESC);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN (((NOT (vt1.c0)), COALESCE(vt0.c0, vt0.c0), UNICODE(vt0.c0))) AND ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END, (vt1.c0 IN (vt1.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) BETWEEN (LOWER(vt1.c0)) AND (1.831182103E9)) DESC;
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (CASE WHEN COALESCE(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS INTEGER) ELSE (~ (rt0.c2)) END);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY 0xfffffffff6dbe9ff COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0xfffffffff6dbe9ff COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY 0xfffffffff6dbe9ff COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0xfffffffff6dbe9ff COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE (((((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT NULL)) ORDER BY 0xfffffffff6dbe9ff COLLATE NOCASE;
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT (((rt0.c1, 7.39610881E8, rt0.c1))<>((vt1.c0, rt0.c2, rt0.c1))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (x'' COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (vt1.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c1, 7.39610881E8, rt0.c1))!=((vt1.c0, rt0.c2, rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (x'' COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (vt1.c0) AND (x'')))));
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT (((rt0.c1, 7.39610881E8, rt0.c1))<>((vt1.c0, rt0.c2, rt0.c1))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (x'' COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (vt1.c0) AND (x''))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((rt0.c1, 7.39610881E8, rt0.c1))!=((vt1.c0, rt0.c2, rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (x'' COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (vt1.c0) AND (x'')))));
SELECT ALL * FROM vt1, rt0 WHERE (TRIM(DISTINCT (((rt0.c1, 7.39610881E8, rt0.c1))<>((vt1.c0, rt0.c2, rt0.c1))))) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB) DESC  NULLS LAST, (x'' COLLATE BINARY IN (((rt0.c1) NOT BETWEEN (vt1.c0) AND (x''))));
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt0.c0)GLOB(rt0.c2)))>>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(rt0.c2)))>>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt0.c0)GLOB(rt0.c2)))>>(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(rt0.c2)))>>(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL * FROM vt1, vt0, rt0 WHERE (((((vt0.c0)GLOB(rt0.c2)))>>(CAST(rt0.c1 AS REAL))));
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON CAST(((rt0.c1)+(vt1.c0)) AS INTEGER) WHERE ((((rt0.c1)-(vt0.c0)) IN (((vt0.c0)<>(rt0.c0))))) ORDER BY ((PRINTF(rt0.c0)) BETWEEN (((vt0.c0)AND(0.032175777567908015))) AND ((NOT (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(vt0.c0)) IN (((vt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON CAST(((rt0.c1)+(vt1.c0)) AS INTEGER) ORDER BY ((PRINTF(rt0.c0)) BETWEEN (((vt0.c0)AND(0.032175777567908015))) AND ((NOT (rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON CAST(((rt0.c1)+(vt1.c0)) AS INTEGER) WHERE ((((rt0.c1)-(vt0.c0)) IN (((vt0.c0)<>(rt0.c0))))) ORDER BY ((PRINTF(rt0.c0)) BETWEEN (((vt0.c0)AND(0.032175777567908015))) AND ((NOT (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(vt0.c0)) IN (((vt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON CAST(((rt0.c1)+(vt1.c0)) AS INTEGER) ORDER BY ((PRINTF(rt0.c0)) BETWEEN (((vt0.c0)AND(0.032175777567908015))) AND ((NOT (rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON CAST(((rt0.c1)+(vt1.c0)) AS INTEGER) WHERE ((((rt0.c1)-(vt0.c0)) IN (((vt0.c0)<>(rt0.c0))))) ORDER BY ((PRINTF(rt0.c0)) BETWEEN (((vt0.c0)AND(0.032175777567908015))) AND ((NOT (rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (-2137664749) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (-2137664749) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (-2137664749) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (-2137664749) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (-2137664749) AND ((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'49221f0c');
SELECT SUM(count) FROM (SELECT ALL ((x'49221f0c') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'49221f0c');
SELECT SUM(count) FROM (SELECT ALL ((x'49221f0c') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'49221f0c');
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0)-(vt1.c0))) IS FALSE)) ORDER BY (CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1965333132' THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1965333132' THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0)-(vt1.c0))) IS FALSE)) ORDER BY (CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1965333132' THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1965333132' THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0)-(vt1.c0))) IS FALSE)) ORDER BY (CASE rt0.c2  WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN '1965333132' THEN rt0.c1 ELSE vt0.c0 END IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (((vt0.c0) IS FALSE), ((rt0.c2)GLOB(rt0.c0))))) ORDER BY (((((8.20276946E8))<((rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN (((vt0.c0) IS FALSE), ((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((8.20276946E8))<((rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (((vt0.c0) IS FALSE), ((rt0.c2)GLOB(rt0.c0))))) ORDER BY (((((8.20276946E8))<((rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS BLOB) IN (((vt0.c0) IS FALSE), ((rt0.c2)GLOB(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((8.20276946E8))<((rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN (((vt0.c0) IS FALSE), ((rt0.c2)GLOB(rt0.c0))))) ORDER BY (((((8.20276946E8))<((rt0.c0)))) BETWEEN ((+ (rt0.c0))) AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) ISNULL) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (x'0688');
SELECT SUM(count) FROM (SELECT ((x'0688') IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (x'0688');
SELECT SUM(count) FROM (SELECT ((x'0688') IS TRUE)  as count FROM vt1, rt0 NATURAL JOIN vt0);
SELECT * FROM vt1, rt0 NATURAL JOIN vt0 WHERE (x'0688');
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((((vt1.c0 IN ()))OR(((x'')>=(vt0.c0)))))OR(IFNULL(vt0.c0, rt0.c1))) WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)|(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)|(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((((vt1.c0 IN ()))OR(((x'')>=(vt0.c0)))))OR(IFNULL(vt0.c0, rt0.c1))));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((((vt1.c0 IN ()))OR(((x'')>=(vt0.c0)))))OR(IFNULL(vt0.c0, rt0.c1))) WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)|(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)|(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((((vt1.c0 IN ()))OR(((x'')>=(vt0.c0)))))OR(IFNULL(vt0.c0, rt0.c1))));
SELECT ALL * FROM vt1, rt0 FULL OUTER JOIN vt0 ON (((((vt1.c0 IN ()))OR(((x'')>=(vt0.c0)))))OR(IFNULL(vt0.c0, rt0.c1))) WHERE (((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END)|(((rt0.c2)+(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL)|((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL)|((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((NULL)|((vt0.c0 IN (vt0.c0)))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<>((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER))<>((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))!=((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((vt0.c0)AND(vt0.c0)))) WHERE ((- ((NULL IN ())))) ORDER BY vt1.c0, ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((vt0.c0)AND(vt0.c0)))) ORDER BY vt1.c0, ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((vt0.c0)AND(vt0.c0)))) WHERE ((- ((NULL IN ())))) ORDER BY vt1.c0, ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((NULL IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((vt0.c0)AND(vt0.c0)))) ORDER BY vt1.c0, ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0 IN ()))>=(((vt0.c0)AND(vt0.c0)))) WHERE ((- ((NULL IN ())))) ORDER BY vt1.c0, ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))>>(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((x'd8d0')AND(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'd8d0')AND(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((x'd8d0')AND(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0)))>>(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'd8d0')AND(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0)))>>(CAST(vt0.c0 AS NUMERIC)))) ORDER BY ((((x'd8d0')AND(((vt0.c0)GLOB(vt0.c0)))))AND(((vt0.c0) NOT NULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('-1570554520') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('-1570554520') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('-1570554520') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('-1570554520') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((('-1570554520') IS FALSE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))==(((vt0.c0)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS TEXT))==(((vt0.c0)<(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))==(((vt0.c0)<(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS TEXT))==(((vt0.c0)<(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 AS REAL)) ORDER BY ((CAST(rt0.c2 AS TEXT))==(((vt0.c0)<(rt0.c0)))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) NOT NULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) NOT NULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c0))) NOT NULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) DESC  NULLS LAST;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((~ ('n\nE?Hq!'))) ORDER BY ((((rt0.c1)|(rt0.c1)))+(STRFTIME(rt0.c0, rt0.c1, rt0.c2)))  NULLS FIRST, rt0.c1  NULLS FIRST, ((((rt0.c0)LIKE(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('n\nE?Hq!'))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(rt0.c1)))+(STRFTIME(rt0.c0, rt0.c1, rt0.c2)))  NULLS FIRST, rt0.c1  NULLS FIRST, ((((rt0.c0)LIKE(vt1.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((~ ('n\nE?Hq!'))) ORDER BY ((((rt0.c1)|(rt0.c1)))+(STRFTIME(rt0.c0, rt0.c1, rt0.c2)))  NULLS FIRST, rt0.c1  NULLS FIRST, ((((rt0.c0)LIKE(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('n\nE?Hq!'))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(rt0.c1)))+(STRFTIME(rt0.c0, rt0.c1, rt0.c2)))  NULLS FIRST, rt0.c1  NULLS FIRST, ((((rt0.c0)LIKE(vt1.c0))) ISNULL)  NULLS FIRST);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ((~ ('n\nE?Hq!'))) ORDER BY ((((rt0.c1)|(rt0.c1)))+(STRFTIME(rt0.c0, rt0.c1, rt0.c2)))  NULLS FIRST, rt0.c1  NULLS FIRST, ((((rt0.c0)LIKE(vt1.c0))) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((LOWER(vt0.c0), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, '', vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((LOWER(vt0.c0), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((LOWER(vt0.c0), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, '', vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((LOWER(vt0.c0), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) BETWEEN (((vt0.c0 IN ()), vt0.c0, ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((LOWER(vt0.c0), ((vt0.c0)!=(vt0.c0)), ((vt0.c0)>=(vt0.c0))))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(rt0.c0) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(rt0.c0) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((NOT (rt0.c0)))) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((vt1.c0) ISNULL))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(rt0.c0) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((vt1.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(rt0.c0) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((NOT (rt0.c0)))) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((vt1.c0) ISNULL))));
SELECT * FROM vt1 LEFT OUTER JOIN rt0 ON TRIM(rt0.c0) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((NOT (rt0.c0)))) WHERE ((((((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT NULL)) ORDER BY (((~ (rt0.c2))) BETWEEN (((rt0.c0)*(rt0.c2))) AND (((vt1.c0) ISNULL)));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1)/(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1)/(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)/(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((rt0.c1)/(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (- ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN rt0 ON ((((((NULL)OR(rt0.c0)))AND(x''))) NOT NULL) WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN rt0 ON ((((((NULL)OR(rt0.c0)))AND(x''))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (- ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN rt0 ON ((((((NULL)OR(rt0.c0)))AND(x''))) NOT NULL) WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (- ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))) RIGHT OUTER JOIN rt0 ON ((((((NULL)OR(rt0.c0)))AND(x''))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)) AS NUMERIC));
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN CASE x''  WHEN '-2137664749' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END ELSE LIKELY(DISTINCT rt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, rt0 ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN CASE x''  WHEN '-2137664749' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END ELSE LIKELY(DISTINCT rt0.c0) END  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN CASE x''  WHEN '-2137664749' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END ELSE LIKELY(DISTINCT rt0.c0) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt0, vt1 NOT INDEXED, rt0 ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN CASE x''  WHEN '-2137664749' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END ELSE LIKELY(DISTINCT rt0.c0) END  NULLS FIRST);
SELECT * FROM vt0, vt1, rt0 WHERE (((rt0.c0 COLLATE NOCASE) ISNULL)) ORDER BY CASE WHEN ((rt0.c1) IS TRUE) THEN CASE x''  WHEN '-2137664749' THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END ELSE LIKELY(DISTINCT rt0.c0) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(vt0.c0)) ORDER BY (HEX(DISTINCT x'59bb') IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((('mW')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (HEX(DISTINCT x'59bb') IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((('mW')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_type(vt0.c0)) ORDER BY (HEX(DISTINCT x'59bb') IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((('mW')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_type(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (HEX(DISTINCT x'59bb') IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, ((('mW')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), NULL, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, ((rt0.c2) NOT NULL), ((vt1.c0) BETWEEN (x'') AND (vt0.c0))))) LEFT OUTER JOIN vt1 ON ((((vt1.c0)*(vt1.c0))) IS FALSE) WHERE (((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c1) NOTNULL))) ASC  NULLS LAST, ((((((vt1.c0)>>(vt0.c0)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c1 END)))AND(((vt0.c0)-(rt0.c0))))  NULLS LAST, MIN(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((((0.68193310576915)OR(vt1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)), (~ (rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), NULL, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, ((rt0.c2) NOT NULL), ((vt1.c0) BETWEEN (x'') AND (vt0.c0))))) LEFT OUTER JOIN vt1 ON ((((vt1.c0)*(vt1.c0))) IS FALSE) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c1) NOTNULL))) ASC  NULLS LAST, ((((((vt1.c0)>>(vt0.c0)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c1 END)))AND(((vt0.c0)-(rt0.c0))))  NULLS LAST, MIN(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((((0.68193310576915)OR(vt1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)), (~ (rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), NULL, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, ((rt0.c2) NOT NULL), ((vt1.c0) BETWEEN (x'') AND (vt0.c0))))) LEFT OUTER JOIN vt1 ON ((((vt1.c0)*(vt1.c0))) IS FALSE) WHERE (((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c1) NOTNULL))) ASC  NULLS LAST, ((((((vt1.c0)>>(vt0.c0)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c1 END)))AND(((vt0.c0)-(rt0.c0))))  NULLS LAST, MIN(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((((0.68193310576915)OR(vt1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)), (~ (rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((((x'') NOT NULL), (+ (rt0.c0)), ((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)), NULL, CASE WHEN vt0.c0 THEN vt1.c0 END)) AND ((vt0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END, ((rt0.c2) NOT NULL), ((vt1.c0) BETWEEN (x'') AND (vt0.c0))))) LEFT OUTER JOIN vt1 ON ((((vt1.c0)*(vt1.c0))) IS FALSE) ORDER BY ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))*(((rt0.c1) NOTNULL))) ASC  NULLS LAST, ((((((vt1.c0)>>(vt0.c0)))AND(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c1 END)))AND(((vt0.c0)-(rt0.c0))))  NULLS LAST, MIN(((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c0)), ((((0.68193310576915)OR(vt1.c0)))AND(rt0.c0)), ((((rt0.c1)AND(vt1.c0)))OR(rt0.c1)), (~ (rt0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND ('-97816741'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND ('-97816741'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND ('-97816741'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT BETWEEN (vt0.c0) AND ('-97816741'))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((x'') NOT BETWEEN (vt0.c0) AND ('-97816741'))) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (+ (((rt0.c1)=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((rt0.c1)==(x'')))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (+ (((rt0.c1)=(x'')))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (((rt0.c1)==(x'')))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS TRUE)) ORDER BY (+ (((rt0.c1)=(x'')))) DESC;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((NULL))<=((LIKELIHOOD(rt0.c0, 0.26422082254532586)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((LIKELIHOOD(rt0.c0, 0.26422082254532586))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((NULL))<=((LIKELIHOOD(rt0.c0, 0.26422082254532586)))));
SELECT SUM(count) FROM (SELECT (((((NULL))<=((LIKELIHOOD(rt0.c0, 0.26422082254532586))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((NULL))<=((LIKELIHOOD(rt0.c0, 0.26422082254532586)))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))&(TRIM(rt0.c1, vt0.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))&(TRIM(rt0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))&(TRIM(rt0.c1, vt0.c0))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))&(TRIM(rt0.c1, vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((((((rt0.c2)OR(rt0.c2)))OR(vt1.c0)))&(TRIM(rt0.c1, vt0.c0))) WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()), CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)||(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()), CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c0)||(vt0.c0)) COLLATE BINARY) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), CAST(((vt0.c0)LIKE(vt0.c0)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC  NULLS FIRST, CASE WHEN (((vt1.c0, '575164528', vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN 0.02843527690294889 THEN (NOT (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '2062791038' END THEN 0.16542308620161583 ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC  NULLS FIRST, CASE WHEN (((vt1.c0, '575164528', vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN 0.02843527690294889 THEN (NOT (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '2062791038' END THEN 0.16542308620161583 ELSE ((vt1.c0) NOT NULL) END  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC  NULLS FIRST, CASE WHEN (((vt1.c0, '575164528', vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN 0.02843527690294889 THEN (NOT (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '2062791038' END THEN 0.16542308620161583 ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC  NULLS FIRST, CASE WHEN (((vt1.c0, '575164528', vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN 0.02843527690294889 THEN (NOT (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '2062791038' END THEN 0.16542308620161583 ELSE ((vt1.c0) NOT NULL) END  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE ((NOT (vt0.c0))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC  NULLS FIRST, CASE WHEN (((vt1.c0, '575164528', vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((x'', vt1.c0, vt0.c0))) THEN CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN 0.02843527690294889 THEN (NOT (vt1.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '2062791038' END THEN 0.16542308620161583 ELSE ((vt1.c0) NOT NULL) END  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c0)/(rt0.c2)) THEN ABS(vt0.c0) ELSE x'' END WHERE ((((((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))>=((((vt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))>=((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c0)/(rt0.c2)) THEN ABS(vt0.c0) ELSE x'' END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c0)/(rt0.c2)) THEN ABS(vt0.c0) ELSE x'' END WHERE ((((((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))>=((((vt1.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))>=((((vt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c0)/(rt0.c2)) THEN ABS(vt0.c0) ELSE x'' END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CAST(vt1.c0 COLLATE BINARY AS BLOB) LEFT OUTER JOIN vt0 ON CASE (rt0.c1 IN ())  WHEN ((vt1.c0)/(rt0.c2)) THEN ABS(vt0.c0) ELSE x'' END WHERE ((((((vt1.c0) BETWEEN (NULL) AND (vt0.c0))))>=((((vt1.c0) NOTNULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN '' THEN rt0.c0 WHEN LIKE(vt1.c0, '') THEN ((vt0.c0)IS(rt0.c0)) WHEN ((rt0.c1)=(rt0.c0)) THEN (+ (rt0.c2)) END WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (vt0.c0)) WHEN '뒽8ik' THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE 0.2056693225186792 END) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (vt0.c0)) WHEN '뒽8ik' THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE 0.2056693225186792 END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN '' THEN rt0.c0 WHEN LIKE(vt1.c0, '') THEN ((vt0.c0)IS(rt0.c0)) WHEN ((rt0.c1)=(rt0.c0)) THEN (+ (rt0.c2)) END ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN '' THEN rt0.c0 WHEN LIKE(vt1.c0, '') THEN ((vt0.c0)IS(rt0.c0)) WHEN ((rt0.c1)=(rt0.c0)) THEN (+ (rt0.c2)) END WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (vt0.c0)) WHEN '뒽8ik' THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE 0.2056693225186792 END) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (vt0.c0)) WHEN '뒽8ik' THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE 0.2056693225186792 END) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN '' THEN rt0.c0 WHEN LIKE(vt1.c0, '') THEN ((vt0.c0)IS(rt0.c0)) WHEN ((rt0.c1)=(rt0.c0)) THEN (+ (rt0.c2)) END ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN rt0 ON CASE WHEN '' THEN rt0.c0 WHEN LIKE(vt1.c0, '') THEN ((vt0.c0)IS(rt0.c0)) WHEN ((rt0.c1)=(rt0.c0)) THEN (+ (rt0.c2)) END WHERE (CASE CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS TEXT) THEN (~ (vt0.c0)) WHEN '뒽8ik' THEN ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt1.c0 AS NUMERIC) ELSE 0.2056693225186792 END) ORDER BY ((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(NULL)) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)>(vt1.c0))))<=((vt1.c0 COLLATE RTRIM)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) ISNULL);
SELECT * FROM rt0, vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)==(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)==(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)==(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0)==(rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((x''))<>((vt0.c0)))) BETWEEN (((rt0.c0)=(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((x''))<>((vt0.c0)))) BETWEEN (((rt0.c0)==(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((x''))<>((vt0.c0)))) BETWEEN (((rt0.c0)=(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((((x''))<>((vt0.c0)))) BETWEEN (((rt0.c0)==(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) NOT BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))))) ORDER BY (((((x''))<>((vt0.c0)))) BETWEEN (((rt0.c0)=(vt1.c0))) AND (CAST(rt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ('');
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(5.074945E7)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((((((((vt0.c0)OR(rt0.c0)))OR(x'13e9')))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c2)))OR(((vt0.c0)LIKE(rt0.c2))))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (+ (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(5.074945E7)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((((((((vt0.c0)OR(rt0.c0)))OR(x'13e9')))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c2)))OR(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (+ (rt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(5.074945E7)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((((((((vt0.c0)OR(rt0.c0)))OR(x'13e9')))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c2)))OR(((vt0.c0)LIKE(rt0.c2))))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (+ (rt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(5.074945E7)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((((((((vt0.c0)OR(rt0.c0)))OR(x'13e9')))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c2)))OR(((vt0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (+ (rt0.c1)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((((((((((rt0.c2) IS TRUE))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))OR(5.074945E7)))OR(((vt0.c0) NOT NULL))))OR(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))))AND(((((((((vt0.c0)OR(rt0.c0)))OR(x'13e9')))OR(rt0.c0)))OR(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND(rt0.c2)))OR(((vt0.c0)LIKE(rt0.c2))))) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN ((rt0.c2) NOT NULL) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) WHEN rt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE (+ (rt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'cb93')))) AND (HEX(rt0.c0)))) ORDER BY ((rt0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'cb93')))) AND (HEX(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'cb93')))) AND (HEX(rt0.c0)))) ORDER BY ((rt0.c0) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'cb93')))) AND (HEX(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0) IS TRUE) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) NOT BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x'cb93')))) AND (HEX(rt0.c0)))) ORDER BY ((rt0.c0) IS TRUE) DESC;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c2 THEN (- (rt0.c1)) WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c2 THEN (- (rt0.c1)) WHEN ((rt0.c2)==(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c2 THEN (- (rt0.c1)) WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)>(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c2 THEN (- (rt0.c1)) WHEN ((rt0.c2)==(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) WHEN rt0.c2 THEN (- (rt0.c1)) WHEN ((rt0.c2)=(rt0.c2)) THEN ((rt0.c0)IS(rt0.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOTNULL))OR(0.16080989720260985)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0)))AND(((vt1.c0) NOT NULL)))) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))AND((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOTNULL))OR(0.16080989720260985)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0)))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))AND((vt1.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((vt1.c0) NOTNULL))OR(0.16080989720260985)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0)))AND(((vt1.c0) NOT NULL)))) ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))AND((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) NOTNULL))OR(0.16080989720260985)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0)))AND(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(vt1.c0)))AND((vt1.c0 IN ()))) DESC);
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0)<=(vt1.c0)))) ASC, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0)<=(vt1.c0)))) ASC, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0)<=(vt1.c0)))) ASC, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0)<=(vt1.c0)))) ASC, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL)))));
SELECT ALL * FROM vt1 WHERE (CAST((vt1.c0 IN (vt1.c0)) AS NUMERIC)) ORDER BY ((CAST(vt1.c0 AS BLOB))IS(((vt1.c0)<=(vt1.c0)))) ASC, CASE (vt1.c0 IN ())  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE vt1.c0 COLLATE NOCASE END  NULLS LAST, (((vt1.c0)) BETWEEN (((+ (vt1.c0)))) AND ((CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))LIKE(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((rt0.c2 IN ()) IN ())) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN ('꫕qJ滕nvSN') AND (rt0.c1)))AND(vt1.c0)))OR(((vt1.c0)*(rt0.c0)))))OR((rt0.c0 IN (vt1.c0, rt0.c1)))))AND(vt1.c0))) ORDER BY ((((rt0.c1)>(rt0.c1)))GLOB(''));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN ('꫕qJ滕nvSN') AND (rt0.c1)))AND(vt1.c0)))OR(((vt1.c0)*(rt0.c0)))))OR((rt0.c0 IN (vt1.c0, rt0.c1)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>(rt0.c1)))GLOB('')));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN ('꫕qJ滕nvSN') AND (rt0.c1)))AND(vt1.c0)))OR(((vt1.c0)*(rt0.c0)))))OR((rt0.c0 IN (vt1.c0, rt0.c1)))))AND(vt1.c0))) ORDER BY ((((rt0.c1)>(rt0.c1)))GLOB(''));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1) NOT BETWEEN ('꫕qJ滕nvSN') AND (rt0.c1)))AND(vt1.c0)))OR(((vt1.c0)*(rt0.c0)))))OR((rt0.c0 IN (vt1.c0, rt0.c1)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>(rt0.c1)))GLOB('')));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c1) NOT BETWEEN ('꫕qJ滕nvSN') AND (rt0.c1)))AND(vt1.c0)))OR(((vt1.c0)*(rt0.c0)))))OR((rt0.c0 IN (vt1.c0, rt0.c1)))))AND(vt1.c0))) ORDER BY ((((rt0.c1)>(rt0.c1)))GLOB(''));
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT BETWEEN ('ox') AND ((+ (vt1.c0)))) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)*(rt0.c1))) NOT BETWEEN ('ox') AND ((+ (vt1.c0)))) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS BLOB) DESC);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT BETWEEN ('ox') AND ((+ (vt1.c0)))) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)*(rt0.c1))) NOT BETWEEN ('ox') AND ((+ (vt1.c0)))) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS BLOB) DESC);
SELECT * FROM vt1, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))OR(vt1.c0))) BETWEEN (CAST(rt0.c0 AS REAL)) AND ((rt0.c2 IN ())))) ORDER BY ((((rt0.c0)*(rt0.c1))) NOT BETWEEN ('ox') AND ((+ (vt1.c0)))) DESC  NULLS FIRST, CAST(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END AS BLOB) DESC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON '0.9864701764157817' COLLATE NOCASE INNER JOIN vt1 ON CAST((~ (rt0.c0)) AS NUMERIC) WHERE (CASE WHEN rt0.c2 THEN LOWER(DISTINCT vt0.c0) ELSE ((NULL)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN LOWER(DISTINCT vt0.c0) ELSE ((NULL)%(vt1.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON '0.9864701764157817' COLLATE NOCASE INNER JOIN vt1 ON CAST((~ (rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON '0.9864701764157817' COLLATE NOCASE INNER JOIN vt1 ON CAST((~ (rt0.c0)) AS NUMERIC) WHERE (CASE WHEN rt0.c2 THEN LOWER(DISTINCT vt0.c0) ELSE ((NULL)%(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN LOWER(DISTINCT vt0.c0) ELSE ((NULL)%(vt1.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON '0.9864701764157817' COLLATE NOCASE INNER JOIN vt1 ON CAST((~ (rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON '0.9864701764157817' COLLATE NOCASE INNER JOIN vt1 ON CAST((~ (rt0.c0)) AS NUMERIC) WHERE (CASE WHEN rt0.c2 THEN LOWER(DISTINCT vt0.c0) ELSE ((NULL)%(vt1.c0)) END);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER)  NULLS FIRST, (((((vt0.c0))<>((0.35468690620802956)))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER)  NULLS FIRST, (((((vt0.c0))!=((0.35468690620802956)))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER)  NULLS FIRST, (((((vt0.c0))<>((0.35468690620802956)))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER)  NULLS FIRST, (((((vt0.c0))!=((0.35468690620802956)))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC)) ORDER BY CAST(LIKELY(DISTINCT vt0.c0) AS INTEGER)  NULLS FIRST, (((((vt0.c0))<>((0.35468690620802956)))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c0) ISNULL))) ASC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (json_extract(json_array_length(vt0.c0), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (0X7d6fd994))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(json_array_length(vt0.c0), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (0X7d6fd994)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (json_extract(json_array_length(vt0.c0), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (0X7d6fd994))));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(json_array_length(vt0.c0), CAST(rt0.c0 AS NUMERIC), ((rt0.c1) IS TRUE), (- (0X7d6fd994)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(LIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(LIKELY(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND(rt0.c1 COLLATE BINARY)))OR(LIKELY(rt0.c2))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON CAST(json_remove(rt0.c0, '0.9864701764157817') AS BLOB) WHERE ((((vt0.c0)%(vt0.c0)) IN (rt0.c0))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON CAST(json_remove(rt0.c0, '0.9864701764157817') AS BLOB) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 CROSS JOIN vt1 ON CAST(json_remove(rt0.c0, '0.9864701764157817') AS BLOB) WHERE ((((vt0.c0)%(vt0.c0)) IN (rt0.c0))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)%(vt0.c0)) IN (rt0.c0))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN vt1 ON CAST(json_remove(rt0.c0, '0.9864701764157817') AS BLOB) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (CASE vt0.c0  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((vt1.c0)OR(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((vt1.c0)OR(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((vt1.c0)OR(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((vt1.c0)OR(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS NUMERIC)) ORDER BY CASE CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END  WHEN ((vt1.c0)OR(rt0.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END  NULLS LAST;
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, '', rt0.c0))))))AND(((x'')<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, '', rt0.c0))))))AND(((x'')<<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, '', rt0.c0))))))AND(((x'')<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, '', rt0.c0))))))AND(((x'')<<(vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((vt0.c0 COLLATE BINARY)OR((((vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, '', rt0.c0))))))AND(((x'')<<(vt0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((- (vt0.c0))) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) DESC, ((highlight(vt1.c0, vt1.c0, vt0.c0, vt1.c0)) IS TRUE) DESC  NULLS LAST, ((((vt1.c0)>(vt0.c0))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN '-113513177' END));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((- (vt0.c0))) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) DESC, ((highlight(vt1.c0, vt1.c0, vt0.c0, vt1.c0)) IS TRUE) DESC  NULLS LAST, ((((vt1.c0)>(vt0.c0))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN '-113513177' END)));
SELECT * FROM vt0, vt1 WHERE ((NOT ((((vt0.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((- (vt0.c0))) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) DESC, ((highlight(vt1.c0, vt1.c0, vt0.c0, vt1.c0)) IS TRUE) DESC  NULLS LAST, ((((vt1.c0)>(vt0.c0))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN '-113513177' END));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt1.c0, vt1.c0))>=((vt1.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((- (vt0.c0))) AND (IFNULL(DISTINCT vt1.c0, vt1.c0))) DESC, ((highlight(vt1.c0, vt1.c0, vt0.c0, vt1.c0)) IS TRUE) DESC  NULLS LAST, ((((vt1.c0)>(vt0.c0))) BETWEEN ((((vt0.c0))=((vt0.c0)))) AND (CASE vt1.c0  WHEN vt1.c0 THEN '-113513177' END)));
SELECT * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)), rt0.c1) WHERE (UNLIKELY(((vt0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)), rt0.c1));
SELECT * FROM rt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)), rt0.c1) WHERE (UNLIKELY(((vt0.c0)<<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0)<<(vt1.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE rt0.c2 END) NOT NULL) RIGHT OUTER JOIN vt0 ON NULLIF(DISTINCT ((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)), rt0.c1));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE (((((json_quote(rt0.c1))OR(((rt0.c1)|(vt1.c0)))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((json_quote(rt0.c1))OR(((rt0.c1)|(vt1.c0)))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((~ (vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE (((((json_quote(rt0.c1))OR(((rt0.c1)|(vt1.c0)))))OR((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((json_quote(rt0.c1))OR(((rt0.c1)|(vt1.c0)))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((~ (vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON ((~ (vt0.c0)) IN ()) WHERE (((((json_quote(rt0.c1))OR(((rt0.c1)|(vt1.c0)))))OR((vt1.c0 IN ()))));
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)<<(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<<(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)<<(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0)<<(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)<<(vt1.c0)) AS REAL));
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)>=(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 END)>=(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)>=(((rt0.c2)-(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 END)>=(((rt0.c2)-(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 END)>=(((rt0.c2)-(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((0.3555351912450857)%(vt1.c0)) IN (0.9370678025195043 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON x'bec7' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((0.3555351912450857)%(vt1.c0)) IN (0.9370678025195043 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON x'bec7');
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON (((0.3555351912450857)%(vt1.c0)) IN (0.9370678025195043 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON x'bec7' WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((0.3555351912450857)%(vt1.c0)) IN (0.9370678025195043 COLLATE NOCASE, vt0.c0 COLLATE NOCASE)) FULL OUTER JOIN vt0 ON x'bec7');
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)IS(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(vt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0) NOT NULL)))) ORDER BY ((rt0.c1)GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0) NOT NULL)))) ORDER BY ((rt0.c1)GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1)GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c0) NOT NULL)))) ORDER BY ((rt0.c1)GLOB(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((COALESCE(vt0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN (vt0.c0) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN (vt0.c0) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((COALESCE(vt0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN (vt0.c0) AND (CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN (vt0.c0) AND (CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((COALESCE(vt0.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN (vt0.c0) AND (CAST(rt0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR((((vt1.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, x'', rt0.c1, rt0.c1, rt0.c2))))))OR(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)GLOB(vt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC, (- (NULLIF(DISTINCT rt0.c0, '-1095498010'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR((((vt1.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, x'', rt0.c1, rt0.c1, rt0.c2))))))OR(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)GLOB(vt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC, (- (NULLIF(DISTINCT rt0.c0, '-1095498010'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR((((vt1.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, x'', rt0.c1, rt0.c1, rt0.c2))))))OR(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)GLOB(vt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC, (- (NULLIF(DISTINCT rt0.c0, '-1095498010'))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR((((vt1.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, x'', rt0.c1, rt0.c1, rt0.c2))))))OR(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)GLOB(vt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC, (- (NULLIF(DISTINCT rt0.c0, '-1095498010'))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c1)))OR((((vt1.c0, rt0.c0, vt0.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, vt0.c0, rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c0, x'', rt0.c1, rt0.c1, rt0.c2))))))OR(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c1 IN ()) IN (((rt0.c0)GLOB(vt0.c0)), SQLITE_COMPILEOPTION_USED(rt0.c1))) DESC, (- (NULLIF(DISTINCT rt0.c0, '-1095498010'))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((0.8593539016434204)OR(CAST(rt0.c1 AS NUMERIC))))OR(((vt0.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((0.8593539016434204)OR(CAST(rt0.c1 AS NUMERIC))))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((0.8593539016434204)OR(CAST(rt0.c1 AS NUMERIC))))OR(((vt0.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((rt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((0.8593539016434204)OR(CAST(rt0.c1 AS NUMERIC))))OR(((vt0.c0)==(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CASE WHEN ((vt1.c0)>>(vt1.c0)) THEN ((rt0.c0) IS FALSE) END) ORDER BY ((((0.8593539016434204)OR(CAST(rt0.c1 AS NUMERIC))))OR(((vt0.c0)=(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<>(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<>(rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)<>(rt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<>(rt0.c0))) IS FALSE));
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1)*(rt0.c2))))>(((((rt0.c2))<=((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)*(rt0.c2))))>(((((rt0.c2))<=((rt0.c1))))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1)*(rt0.c2))))>(((((rt0.c2))<=((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)*(rt0.c2))))>(((((rt0.c2))<=((rt0.c1))))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1)*(rt0.c2))))>(((((rt0.c2))<=((rt0.c1)))))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c0)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c0)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((vt0.c0)/(rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT ALL * FROM vt1 WHERE (LIKELY(CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0)) AND (COALESCE(vt1.c0, vt1.c0))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0)) AND (COALESCE(vt1.c0, vt1.c0))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (LIKELY(CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0)) AND (COALESCE(vt1.c0, vt1.c0))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0)) AND (COALESCE(vt1.c0, vt1.c0))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM vt1 WHERE (LIKELY(CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (DATETIME(vt1.c0, vt1.c0, vt1.c0)) AND (COALESCE(vt1.c0, vt1.c0))), CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (NULL);
SELECT * FROM vt1, vt0 WHERE (((((((((x'')AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))AND((((vt0.c0))!=(('526319801')))))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, ((vt0.c0)*(vt1.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE RTRIM, (~ (vt0.c0))))) ASC, ((((x'')OR(vt1.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -870254147 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))AND((((vt0.c0))!=(('526319801')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, ((vt0.c0)*(vt1.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE RTRIM, (~ (vt0.c0))))) ASC, ((((x'')OR(vt1.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -870254147 ELSE vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((x'')AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))AND((((vt0.c0))!=(('526319801')))))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, ((vt0.c0)*(vt1.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE RTRIM, (~ (vt0.c0))))) ASC, ((((x'')OR(vt1.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -870254147 ELSE vt1.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((x'')AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))AND((((vt0.c0))!=(('526319801')))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, ((vt0.c0)*(vt1.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE RTRIM, (~ (vt0.c0))))) ASC, ((((x'')OR(vt1.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -870254147 ELSE vt1.c0 END))  NULLS LAST);
SELECT * FROM vt1, vt0 WHERE (((((((((x'')AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))AND((((vt0.c0))!=(('526319801')))))) ORDER BY (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, ((vt0.c0)*(vt1.c0)), CAST(vt0.c0 AS INTEGER))) AND (((((vt0.c0))<=((vt0.c0))), vt1.c0 COLLATE RTRIM, (~ (vt0.c0))))) ASC, ((((x'')OR(vt1.c0 COLLATE RTRIM)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN -870254147 ELSE vt1.c0 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.16542308620161583;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.16542308620161583);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.16542308620161583;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.16542308620161583);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.16542308620161583;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN (NULL)) AS NUMERIC) WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c1))>((NULL))) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c1))>((NULL))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN (NULL)) AS NUMERIC));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN (NULL)) AS NUMERIC) WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c1))>((NULL))) THEN (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c1))>((NULL))) THEN (rt0.c1 IN ()) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN (NULL)) AS NUMERIC));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((rt0.c2 IN (NULL)) AS NUMERIC) WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (((rt0.c1))>((NULL))) THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_remove((NOT (rt0.c1)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((NOT (rt0.c1)), NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_remove((NOT (rt0.c1)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((NOT (rt0.c1)), NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_remove((NOT (rt0.c1)), NULL));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2, NULL, rt0.c1))<>((NULL, rt0.c1, rt0.c2)))) NOTNULL) WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) AS TEXT)) ORDER BY CAST(((rt0.c2)<<(0.1732240038963332)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2, NULL, rt0.c1))<>((NULL, rt0.c1, rt0.c2)))) NOTNULL) ORDER BY CAST(((rt0.c2)<<(0.1732240038963332)) AS TEXT));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2, NULL, rt0.c1))<>((NULL, rt0.c1, rt0.c2)))) NOTNULL) WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) AS TEXT)) ORDER BY CAST(((rt0.c2)<<(0.1732240038963332)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2, NULL, rt0.c1))<>((NULL, rt0.c1, rt0.c2)))) NOTNULL) ORDER BY CAST(((rt0.c2)<<(0.1732240038963332)) AS TEXT));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN rt0 ON (((((rt0.c2, NULL, rt0.c1))<>((NULL, rt0.c1, rt0.c2)))) NOTNULL) WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (NULL)) AS TEXT)) ORDER BY CAST(((rt0.c2)<<(0.1732240038963332)) AS TEXT);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c2);
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY JULIANDAY(((vt1.c0)>>(rt0.c1)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)), (+ (rt0.c1)), vt1.c0, ((rt0.c1)/(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY JULIANDAY(((vt1.c0)>>(rt0.c1)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)), (+ (rt0.c1)), vt1.c0, ((rt0.c1)/(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY JULIANDAY(((vt1.c0)>>(rt0.c1)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)), (+ (rt0.c1)), vt1.c0, ((rt0.c1)/(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY JULIANDAY(((vt1.c0)>>(rt0.c1)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)), (+ (rt0.c1)), vt1.c0, ((rt0.c1)/(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0, rt0 WHERE (CAST(rt0.c1 AS REAL) COLLATE RTRIM) ORDER BY JULIANDAY(((vt1.c0)>>(rt0.c1)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)), (+ (rt0.c1)), vt1.c0, ((rt0.c1)/(vt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY (+ (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY (+ (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (+ (vt1.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))) ORDER BY (+ (vt1.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (rt0.c2);
SELECT * FROM vt0 WHERE (((- (NULL)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) AND ((('' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((- (NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) AND ((('' IN (vt0.c0))))));
SELECT * FROM vt0 WHERE (((- (NULL)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) AND ((('' IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((- (NULL)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) AND ((('' IN (vt0.c0))))));
SELECT * FROM vt0 WHERE (((- (NULL)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END)) AND ((('' IN (vt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2)LIKE(vt1.c0))) IS FALSE)) ORDER BY CASE ((0.5659886191833261)>(rt0.c0))  WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((rt0.c1) ISNULL) THEN ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN (('') NOTNULL) THEN -9223372036854775808 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (((rt0.c0))=((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC, (rt0.c1 IN ())  NULLS FIRST, DATE(vt1.c0, rt0.c1, rt0.c2) COLLATE NOCASE ASC  NULLS FIRST, 0.43290654716630683 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CASE ((0.5659886191833261)>(rt0.c0))  WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((rt0.c1) ISNULL) THEN ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN (('') NOTNULL) THEN -9223372036854775808 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (((rt0.c0))=((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC, (rt0.c1 IN ())  NULLS FIRST, DATE(vt1.c0, rt0.c1, rt0.c2) COLLATE NOCASE ASC  NULLS FIRST, 0.43290654716630683 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2)LIKE(vt1.c0))) IS FALSE)) ORDER BY CASE ((0.5659886191833261)>(rt0.c0))  WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((rt0.c1) ISNULL) THEN ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN (('') NOTNULL) THEN -9223372036854775808 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (((rt0.c0))=((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC, (rt0.c1 IN ())  NULLS FIRST, DATE(vt1.c0, rt0.c1, rt0.c2) COLLATE NOCASE ASC  NULLS FIRST, 0.43290654716630683 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(vt1.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY CASE ((0.5659886191833261)>(rt0.c0))  WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((rt0.c1) ISNULL) THEN ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN (('') NOTNULL) THEN -9223372036854775808 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (((rt0.c0))=((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC, (rt0.c1 IN ())  NULLS FIRST, DATE(vt1.c0, rt0.c1, rt0.c2) COLLATE NOCASE ASC  NULLS FIRST, 0.43290654716630683 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2)LIKE(vt1.c0))) IS FALSE)) ORDER BY CASE ((0.5659886191833261)>(rt0.c0))  WHEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) THEN ((vt1.c0) NOT NULL) WHEN ((rt0.c1) ISNULL) THEN ((NULL) NOT BETWEEN (NULL) AND (vt0.c0)) WHEN (('') NOTNULL) THEN -9223372036854775808 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) WHEN (((rt0.c0))=((vt0.c0))) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE NOCASE END DESC, (rt0.c1 IN ())  NULLS FIRST, DATE(vt1.c0, rt0.c1, rt0.c2) COLLATE NOCASE ASC  NULLS FIRST, 0.43290654716630683 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)OR(rt0.c2)))-(TRIM(rt0.c2, rt0.c2))) ASC  NULLS FIRST, CASE CAST(rt0.c0 AS REAL)  WHEN '' THEN x'0ddf06bd4141' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)OR(rt0.c2)))-(TRIM(rt0.c2, rt0.c2))) ASC  NULLS FIRST, CASE CAST(rt0.c0 AS REAL)  WHEN '' THEN x'0ddf06bd4141' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)OR(rt0.c2)))-(TRIM(rt0.c2, rt0.c2))) ASC  NULLS FIRST, CASE CAST(rt0.c0 AS REAL)  WHEN '' THEN x'0ddf06bd4141' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c2 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)OR(rt0.c2)))-(TRIM(rt0.c2, rt0.c2))) ASC  NULLS FIRST, CASE CAST(rt0.c0 AS REAL)  WHEN '' THEN x'0ddf06bd4141' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c2 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c2)OR(rt0.c2)))-(TRIM(rt0.c2, rt0.c2))) ASC  NULLS FIRST, CASE CAST(rt0.c0 AS REAL)  WHEN '' THEN x'0ddf06bd4141' WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN (vt1.c0 IN ()) WHEN vt1.c0 COLLATE NOCASE THEN CASE WHEN rt0.c1 THEN rt0.c2 END END ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 NATURAL JOIN vt0);
SELECT * FROM rt0, vt1 NATURAL JOIN vt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (((~ (rt0.c1)))*(-1860236085)) ASC, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))*(-1860236085)) ASC, rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (((~ (rt0.c1)))*(-1860236085)) ASC, rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))*(-1860236085)) ASC, rt0.c1  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY (((~ (rt0.c1)))*(-1860236085)) ASC, rt0.c1  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((+ (((x'') BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (('0.36256583395043285') BETWEEN (rt0.c2 COLLATE BINARY) AND ((- (rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN rt0.c1 END)) WHERE (CASE ((rt0.c2)<>(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)<>(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (('0.36256583395043285') BETWEEN (rt0.c2 COLLATE BINARY) AND ((- (rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN vt1 ON (('0.36256583395043285') BETWEEN (rt0.c2 COLLATE BINARY) AND ((- (rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN rt0.c1 END)) WHERE (CASE ((rt0.c2)<>(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)<>(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN CASE WHEN vt1.c0 THEN vt1.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (('0.36256583395043285') BETWEEN (rt0.c2 COLLATE BINARY) AND ((- (rt0.c0)))) RIGHT OUTER JOIN rt0 ON ((((vt0.c0)+(rt0.c0)))IS NOT(CASE WHEN vt1.c0 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0 IN (NULL, rt0.c1)))AND((+ (vt0.c0)))))AND(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (NULL, rt0.c1)))AND((+ (vt0.c0)))))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0 IN (NULL, rt0.c1)))AND((+ (vt0.c0)))))AND(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0 IN (NULL, rt0.c1)))AND((+ (vt0.c0)))))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((((((rt0.c0 IN (NULL, rt0.c1)))AND((+ (vt0.c0)))))AND(((rt0.c2) ISNULL))));
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)AND(x'71836014')))AND((+ (vt0.c0)))) WHERE (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((vt0.c0)AND(x'71836014')))AND((+ (vt0.c0)))) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)AND(x'71836014')))AND((+ (vt0.c0)))) WHERE (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN vt1 ON ((((vt0.c0)AND(x'71836014')))AND((+ (vt0.c0)))) ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)AND(x'71836014')))AND((+ (vt0.c0)))) WHERE (CASE rt0.c0  WHEN rt0.c2 THEN vt0.c0 END COLLATE BINARY) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(CASE WHEN x'' THEN vt0.c0 WHEN 0xfffffffffe229212 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END AS NUMERIC) WHERE ((((rt0.c2, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c1)<<(rt0.c1)), json_remove(rt0.c0, rt0.c2, rt0.c1, x''))) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (rt0.c1)), vt0.c0)))) ORDER BY (vt0.c0 IN (rt0.c2, vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c1)<<(rt0.c1)), json_remove(rt0.c0, rt0.c2, rt0.c1, x''))) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (rt0.c1)), vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON CAST(CASE WHEN x'' THEN vt0.c0 WHEN 0xfffffffffe229212 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END AS NUMERIC) ORDER BY (vt0.c0 IN (rt0.c2, vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(CASE WHEN x'' THEN vt0.c0 WHEN 0xfffffffffe229212 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END AS NUMERIC) WHERE ((((rt0.c2, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c1)<<(rt0.c1)), json_remove(rt0.c0, rt0.c2, rt0.c1, x''))) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (rt0.c1)), vt0.c0)))) ORDER BY (vt0.c0 IN (rt0.c2, vt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c1)<<(rt0.c1)), json_remove(rt0.c0, rt0.c2, rt0.c1, x''))) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (rt0.c1)), vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON CAST(CASE WHEN x'' THEN vt0.c0 WHEN 0xfffffffffe229212 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END AS NUMERIC) ORDER BY (vt0.c0 IN (rt0.c2, vt1.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON CAST(CASE WHEN x'' THEN vt0.c0 WHEN 0xfffffffffe229212 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c0 END AS NUMERIC) WHERE ((((rt0.c2, vt1.c0, rt0.c2)) BETWEEN ((CAST(rt0.c0 AS INTEGER), ((rt0.c1)<<(rt0.c1)), json_remove(rt0.c0, rt0.c2, rt0.c1, x''))) AND ((((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (~ (rt0.c1)), vt0.c0)))) ORDER BY (vt0.c0 IN (rt0.c2, vt1.c0)) COLLATE BINARY;
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('');
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((((((NULL IN ()))OR(((vt1.c0) IS FALSE))))OR(((vt1.c0)IS(vt1.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(vt1.c0)))AND((((vt1.c0))>((vt1.c0))))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)<=(x'ab4b')))))AND(((vt1.c0)||(-688014420)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((NULL IN ()))OR(((vt1.c0) IS FALSE))))OR(((vt1.c0)IS(vt1.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(vt1.c0)))AND((((vt1.c0))>((vt1.c0))))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)<=(x'ab4b')))))AND(((vt1.c0)||(-688014420))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((((((NULL IN ()))OR(((vt1.c0) IS FALSE))))OR(((vt1.c0)IS(vt1.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(vt1.c0)))AND((((vt1.c0))>((vt1.c0))))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)<=(x'ab4b')))))AND(((vt1.c0)||(-688014420)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((NULL IN ()))OR(((vt1.c0) IS FALSE))))OR(((vt1.c0)IS(vt1.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(vt1.c0)))AND((((vt1.c0))>((vt1.c0))))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)<=(x'ab4b')))))AND(((vt1.c0)||(-688014420))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((((((((((NULL IN ()))OR(((vt1.c0) IS FALSE))))OR(((vt1.c0)IS(vt1.c0)))))AND(SQLITE_COMPILEOPTION_GET(vt1.c0))))AND(vt1.c0)))AND((((vt1.c0))>((vt1.c0))))))AND(TRIM(DISTINCT vt1.c0, vt1.c0))))OR(((vt1.c0)<=(x'ab4b')))))AND(((vt1.c0)||(-688014420)))));
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c1)) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c1)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((TYPEOF(DISTINCT rt0.c1)) ISNULL) DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c1))) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (rt0.c2))) ORDER BY ((TYPEOF(DISTINCT rt0.c1)) ISNULL) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (vt0.c0))) ISNULL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((((vt1.c0))==((vt1.c0)))))) ORDER BY x'dea5'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((((vt1.c0))==((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'dea5'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((((vt1.c0))==((vt1.c0)))))) ORDER BY x'dea5'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((((vt1.c0))==((vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY x'dea5'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))>>((((vt1.c0))==((vt1.c0)))))) ORDER BY x'dea5'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) CROSS JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) CROSS JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) CROSS JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) CROSS JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1 IN ()) IN ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))) CROSS JOIN vt0 ON CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) WHERE (CAST(rt0.c2 COLLATE BINARY AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, rt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, rt0.c0))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c2)) AND ((vt0.c0, vt0.c0, rt0.c0))) IN ()));
SELECT ALL * FROM rt0, vt1 WHERE (CAST('' COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('' COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST('' COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST('' COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST('' COLLATE RTRIM AS BLOB));
SELECT * FROM vt1, vt0 WHERE (MAX(CHAR(vt1.c0), (~ (vt0.c0)))) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CHAR(vt1.c0), (~ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (MAX(CHAR(vt1.c0), (~ (vt0.c0)))) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(CHAR(vt1.c0), (~ (vt0.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))));
SELECT * FROM vt1, vt0 WHERE (MAX(CHAR(vt1.c0), (~ (vt0.c0)))) ORDER BY (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1993344865' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1993344865' ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1993344865' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-1993344865' ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY '-1993344865' ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN '-1855093999' COLLATE BINARY THEN NULL WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((x'')IS NOT(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-1855093999' COLLATE BINARY THEN NULL WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((x'')IS NOT(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN '-1855093999' COLLATE BINARY THEN NULL WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((x'')IS NOT(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN '-1855093999' COLLATE BINARY THEN NULL WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((x'')IS NOT(rt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY CASE WHEN '-1855093999' COLLATE BINARY THEN NULL WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END WHEN ((rt0.c0) IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((x'')IS NOT(rt0.c0)) END;
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ()) WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c2, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c2, rt0.c0, rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ()) ORDER BY ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ()) WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c2, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c2, rt0.c0, rt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ()) ORDER BY ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON (((rt0.c2) NOTNULL) IN ()) WHERE (CAST((((rt0.c0, vt0.c0, rt0.c2))>((rt0.c2, rt0.c0, rt0.c0))) AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))IS NOT(vt1.c0)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '!UNu' THEN rt0.c2 ELSE rt0.c0 END)%(((rt0.c0)|(rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '!UNu' THEN rt0.c2 ELSE rt0.c0 END)%(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))IS NOT(vt1.c0)) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))IS NOT(vt1.c0)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '!UNu' THEN rt0.c2 ELSE rt0.c0 END)%(((rt0.c0)|(rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '!UNu' THEN rt0.c2 ELSE rt0.c0 END)%(((rt0.c0)|(rt0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))IS NOT(vt1.c0)) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT NULL))IS NOT(vt1.c0)) WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN '!UNu' THEN rt0.c2 ELSE rt0.c0 END)%(((rt0.c0)|(rt0.c0))))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt1.c0))) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))=((CAST(rt0.c0 AS BLOB)))) INNER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))>=(('s?鼠'))) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))OR(vt0.c0)))AND(IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c0)IS(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))OR(vt0.c0)))AND(IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))=((CAST(rt0.c0 AS BLOB)))) INNER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))>=(('s?鼠'))) ORDER BY TRIM(DISTINCT ((vt0.c0)IS(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))=((CAST(rt0.c0 AS BLOB)))) INNER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))>=(('s?鼠'))) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))OR(vt0.c0)))AND(IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c0)IS(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))OR(vt0.c0)))AND(IFNULL(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))=((CAST(rt0.c0 AS BLOB)))) INNER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))>=(('s?鼠'))) ORDER BY TRIM(DISTINCT ((vt0.c0)IS(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c1 IN ())))=((CAST(rt0.c0 AS BLOB)))) INNER JOIN vt0 ON (((rt0.c0 COLLATE NOCASE))>=(('s?鼠'))) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))))OR(vt0.c0)))AND(IFNULL(DISTINCT vt0.c0, vt0.c0)))) ORDER BY TRIM(DISTINCT ((vt0.c0)IS(rt0.c0)), ((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (NULL);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((+ ('쾂㵿^悛'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('쾂㵿^悛'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((+ ('쾂㵿^悛'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((+ ('쾂㵿^悛'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((+ ('쾂㵿^悛'))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2)<=(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.2826781182364676 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((vt1.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.2826781182364676 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2)<=(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.2826781182364676 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((vt1.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.2826781182364676 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c2)<=(rt0.c0)))LIKE(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0.2826781182364676 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c1 END))) ORDER BY (((vt1.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('akBB>1A6' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('akBB>1A6' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('akBB>1A6' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('akBB>1A6' COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE ('akBB>1A6' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((1218205512) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1218205512) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((1218205512) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((1218205512) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((1218205512) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE ('1917824746') ORDER BY (((NULL IN ()))=(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1917824746') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL IN ()))=(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('1917824746') ORDER BY (((NULL IN ()))=(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1917824746') IS TRUE)  as count FROM vt1, vt0 ORDER BY (((NULL IN ()))=(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE ('1917824746') ORDER BY (((NULL IN ()))=(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(CAST(vt0.c0 AS REAL))) ORDER BY ((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))/(TRIM(DISTINCT vt0.c0, 0.34600393406096164)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))/(TRIM(DISTINCT vt0.c0, 0.34600393406096164))));
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(CAST(vt0.c0 AS REAL))) ORDER BY ((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))/(TRIM(DISTINCT vt0.c0, 0.34600393406096164)));
SELECT SUM(count) FROM (SELECT ((LOWER(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))/(TRIM(DISTINCT vt0.c0, 0.34600393406096164))));
SELECT ALL * FROM rt0, vt0 WHERE (LOWER(CAST(vt0.c0 AS REAL))) ORDER BY ((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(vt0.c0)))OR(rt0.c2)))AND(vt0.c0)))/(TRIM(DISTINCT vt0.c0, 0.34600393406096164)));
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (((vt1.c0, rt0.c1, 0Xffffffffaa7bbe7a))>=((rt0.c0, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN (((vt0.c0, vt0.c0, vt0.c0))<(('-97816741', rt0.c1, rt0.c2))) THEN (vt1.c0 IN (rt0.c1, vt1.c0)) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS FIRST, ((((rt0.c1) NOTNULL)) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (((vt1.c0, rt0.c1, 0xffffffffaa7bbe7a))>=((rt0.c0, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN (((vt0.c0, vt0.c0, vt0.c0))<(('-97816741', rt0.c1, rt0.c2))) THEN (vt1.c0 IN (rt0.c1, vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS FIRST, ((((rt0.c1) NOTNULL)) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (((vt1.c0, rt0.c1, 0Xffffffffaa7bbe7a))>=((rt0.c0, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN (((vt0.c0, vt0.c0, vt0.c0))<(('-97816741', rt0.c1, rt0.c2))) THEN (vt1.c0 IN (rt0.c1, vt1.c0)) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS FIRST, ((((rt0.c1) NOTNULL)) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (((vt1.c0, rt0.c1, 0xffffffffaa7bbe7a))>=((rt0.c0, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN (((vt0.c0, vt0.c0, vt0.c0))<(('-97816741', rt0.c1, rt0.c2))) THEN (vt1.c0 IN (rt0.c1, vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS FIRST, ((((rt0.c1) NOTNULL)) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT * FROM vt1, vt0, rt0 WHERE (CASE WHEN ((vt1.c0)|(vt1.c0)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (((vt1.c0, rt0.c1, 0Xffffffffaa7bbe7a))>=((rt0.c0, vt0.c0, rt0.c0))) THEN ((rt0.c0) NOTNULL) WHEN (((vt0.c0, vt0.c0, vt0.c0))<(('-97816741', rt0.c1, rt0.c2))) THEN (vt1.c0 IN (rt0.c1, vt1.c0)) END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 END) NOT NULL)  NULLS FIRST, ((((rt0.c1) NOTNULL)) BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c0) BETWEEN (rt0.c1) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (NOT (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (NOT (TYPEOF(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (NOT (TYPEOF(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (NOT (TYPEOF(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c1) ISNULL)) AND (rt0.c1 COLLATE NOCASE)) ASC  NULLS FIRST, (NOT (TYPEOF(rt0.c2)));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) ORDER BY STRFTIME(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0)) ASC  NULLS LAST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR('ॿ4qb\r!')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0)) ASC  NULLS LAST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR('ॿ4qb\r!')) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) ORDER BY STRFTIME(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0)) ASC  NULLS LAST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR('ॿ4qb\r!')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0)) ASC  NULLS LAST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR('ॿ4qb\r!')) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)<=(vt1.c0)) COLLATE NOCASE) ORDER BY STRFTIME(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END, UPPER(DISTINCT vt1.c0)) ASC  NULLS LAST, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0) IS FALSE))))OR('ॿ4qb\r!')) DESC  NULLS LAST;
SELECT * FROM vt1, vt0, rt0 WHERE (((LAST_INSERT_ROWID())OR(((rt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c2)) THEN ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) WHEN (rt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN (vt1.c0 IN (vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, (NOT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c2)) THEN ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) WHEN (rt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN (vt1.c0 IN (vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, (NOT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))));
SELECT * FROM vt1, vt0, rt0 WHERE (((LAST_INSERT_ROWID())OR(((rt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c2)) THEN ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) WHEN (rt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN (vt1.c0 IN (vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, (NOT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c2)) THEN ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) WHEN (rt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN (vt1.c0 IN (vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, (NOT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c1)))));
SELECT * FROM vt1, vt0, rt0 WHERE (((LAST_INSERT_ROWID())OR(((rt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((rt0.c2)OR(rt0.c2)) THEN ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(vt0.c0)) WHEN (rt0.c0 IN ()) THEN (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) WHEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) THEN (vt1.c0 IN (vt1.c0)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END DESC, (NOT (((((rt0.c1)OR(vt0.c0)))AND(rt0.c1))));
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS TRUE))OR(rt0.c1 COLLATE BINARY))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS TRUE))OR(rt0.c1 COLLATE BINARY))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE))OR(rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((vt0.c0) IS TRUE))OR(rt0.c1 COLLATE BINARY))) ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((rt0.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((rt0.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) BETWEEN (((vt1.c0)IS(vt1.c0))) AND (((rt0.c0) IS FALSE)))) ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)*(rt0.c1)))OR(((rt0.c2) IS FALSE))))AND((((NULL, rt0.c2, rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c1)))OR(((rt0.c2) IS FALSE))))AND((((NULL, rt0.c2, rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)*(rt0.c1)))OR(((rt0.c2) IS FALSE))))AND((((NULL, rt0.c2, rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)*(rt0.c1)))OR(((rt0.c2) IS FALSE))))AND((((NULL, rt0.c2, rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1)*(rt0.c1)))OR(((rt0.c2) IS FALSE))))AND((((NULL, rt0.c2, rt0.c1, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c2, rt0.c1, rt0.c2))))));
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)<>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END) ASC, rt0.c0 ASC, 'GI';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)<>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END) ASC, rt0.c0 ASC, 'GI');
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)<>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END) ASC, rt0.c0 ASC, 'GI';
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)<>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END) ASC, rt0.c0 ASC, 'GI');
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END)<>(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))))) ORDER BY json_array_length(CASE WHEN rt0.c2 THEN rt0.c1 END) ASC, rt0.c0 ASC, 'GI';
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT 'ॿ4QB\r!', ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 'ॿ4QB\r!', ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT 'ॿ4QB\r!', ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT 'ॿ4QB\r!', ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((CAST(rt0.c0 AS INTEGER))))) ORDER BY NULLIF(DISTINCT 'ॿ4QB\r!', ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL) WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('-1677338398'))  WHEN SUBSTR(vt0.c0, rt0.c2) THEN ((vt1.c0)&(vt1.c0)) ELSE TRIM(rt0.c0, rt0.c0) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('-1677338398'))  WHEN SUBSTR(vt0.c0, rt0.c2) THEN ((vt1.c0)&(vt1.c0)) ELSE TRIM(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL) ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL) WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('-1677338398'))  WHEN SUBSTR(vt0.c0, rt0.c2) THEN ((vt1.c0)&(vt1.c0)) ELSE TRIM(rt0.c0, rt0.c0) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('-1677338398'))  WHEN SUBSTR(vt0.c0, rt0.c2) THEN ((vt1.c0)&(vt1.c0)) ELSE TRIM(rt0.c0, rt0.c0) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL) ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL))|(((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)))) FULL OUTER JOIN vt1 ON ((CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) NOT NULL) WHERE (CASE ((vt0.c0) NOT BETWEEN (rt0.c1) AND ('-1677338398'))  WHEN SUBSTR(vt0.c0, rt0.c2) THEN ((vt1.c0)&(vt1.c0)) ELSE TRIM(rt0.c0, rt0.c0) END) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (NOT ('2107705727'))  NULLS LAST, ((NULLIF(vt0.c0, vt0.c0))-(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (NOT ('2107705727'))  NULLS LAST, ((NULLIF(vt0.c0, vt0.c0))-(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (NOT ('2107705727'))  NULLS LAST, ((NULLIF(vt0.c0, vt0.c0))-(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (NOT ('2107705727'))  NULLS LAST, ((NULLIF(vt0.c0, vt0.c0))-(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE BINARY) ORDER BY (NOT ('2107705727'))  NULLS LAST, ((NULLIF(vt0.c0, vt0.c0))-(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.8444888285445347)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c2, 0.8444888285445347)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.8444888285445347)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT rt0.c2, 0.8444888285445347)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.8444888285445347)) IS FALSE));
SELECT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) ORDER BY (((((0.4028057398475142))<((vt1.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((0.4028057398475142))<((vt1.c0)))) IS FALSE));
SELECT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) ORDER BY (((((0.4028057398475142))<((vt1.c0)))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1 ORDER BY (((((0.4028057398475142))<((vt1.c0)))) IS FALSE));
SELECT * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS REAL)))) ORDER BY (((((0.4028057398475142))<((vt1.c0)))) IS FALSE);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (vt0.c0);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN (('L' COLLATE BINARY)) AND ((x''))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (('L' COLLATE BINARY)) AND ((x''))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN (('L' COLLATE BINARY)) AND ((x''))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS REAL)) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) NOT BETWEEN (('L' COLLATE BINARY)) AND ((x''))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS REAL)) NOT NULL)) ORDER BY (((vt1.c0)) NOT BETWEEN (('L' COLLATE BINARY)) AND ((x''))) DESC;
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.4636902218326381 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END)) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END  WHEN (('#, M')&(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY vt1.c0 DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c0 IN ()))), ((((vt0.c0)OR(((((rt0.c2)AND('-2106465922')))OR(vt1.c0)))))AND(((x'eab9')>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END  WHEN (('#, M')&(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.4636902218326381 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c0 IN ()))), ((((vt0.c0)OR(((((rt0.c2)AND('-2106465922')))OR(vt1.c0)))))AND(((x'eab9')>(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.4636902218326381 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END)) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END  WHEN (('#, M')&(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY vt1.c0 DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c0 IN ()))), ((((vt0.c0)OR(((((rt0.c2)AND('-2106465922')))OR(vt1.c0)))))AND(((x'eab9')>(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END  WHEN (('#, M')&(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.4636902218326381 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END)) ORDER BY vt1.c0 DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c0 IN ()))), ((((vt0.c0)OR(((((rt0.c2)AND('-2106465922')))OR(vt1.c0)))))AND(((x'eab9')>(rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 FULL OUTER JOIN rt0 ON ((rt0.c0 COLLATE NOCASE)|(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 0.4636902218326381 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END)) WHERE (CASE CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c1 END  WHEN (('#, M')&(vt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY vt1.c0 DESC  NULLS FIRST, ((x'') NOT BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c0 IN ()))), ((((vt0.c0)OR(((((rt0.c2)AND('-2106465922')))OR(vt1.c0)))))AND(((x'eab9')>(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((x'')AND(rt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'O2Z0bMq' END)));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'O2Z0bMq' END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((x'')AND(rt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'O2Z0bMq' END)));
SELECT SUM(count) FROM (SELECT ((((((x'')AND(rt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'O2Z0bMq' END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((x'')AND(rt0.c2)))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE 'O2Z0bMq' END)));
