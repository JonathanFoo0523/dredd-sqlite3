-- Time: 2024/06/09 11:25:55
-- Database: database48
-- Database version: 3.40.0
-- seed value: 3611056148
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 BLOB , c1 INT , c2 REAL ); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES ('-1393305206', NULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE (((vt1.c0 IN ()))GLOB((('')>(vt1.c0)))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE ((vt1.c0) IS TRUE) COLLATE BINARY; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 314081846); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1273095422); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
UPDATE t1 SET (c2)=(x''); -- 0ms;
UPDATE OR IGNORE t1 SET c2=x'', c2='-687583177', c2=NULL WHERE (((t1.c1)<<(t1.c1)) IN ()); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE vt1; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.4684930278612267); -- 0ms;
INSERT OR ABORT INTO rt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=4'); -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1796722801); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1392017520); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=7'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1211003946);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -687583177);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (0.10017173196052032, -1.211003946E9, 'a_'), (NULL, 0.1687355366171529, '-2003753309'), (NULL, 0.7577482277622563, NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -2003753309);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=1'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.8190571761794438, c2=x'545b' WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))), CAST(rt0.c2 AS NUMERIC), (rt0.c1 IN ())))<=((rt0.c3 COLLATE NOCASE, (NOT (rt0.c1)), rt0.c1 COLLATE RTRIM))); -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
UPDATE OR FAIL rt0 SET (c2)=(0.15146214308543915) WHERE ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1))) NOT BETWEEN (rt0.c0) AND (((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))); -- 1ms;
INSERT OR ROLLBACK INTO t1(c0, c2) VALUES ('-1235948799', '1346183403'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.30997030762193933); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i6 ON t1((((+ (c0)))<(CASE WHEN c1 THEN '194978893' ELSE c2 END)) ASC,CHAR(((((((((c2)AND(c0)))OR(c0)))OR(')O0I''x^')))OR(c0))) COLLATE BINARY,((c0)|(c1)) COLLATE BINARY) WHERE ((TYPEOF(c1))|(CAST(c1 AS NUMERIC))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(NULL, 'o	⃫b'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (((CASE x''  WHEN NULL THEN NULL END)+(CASE '1385237645'  WHEN 'RE' THEN 0.7613576453681236 WHEN 0.05659501614605977 THEN NULL WHEN '26 aA氌^+' THEN 'now' END)), -1235948799, '1346183403'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('-1211003946', NULL) WHERE CAST((- (vt1.c0)) AS BLOB); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=961175119,8');\n; -- 0ms;
PRAGMA journal_mode; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c43; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('1346183403') WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) IS TRUE); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 4ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt1 SET c0=0.7154736335513526 WHERE vt1.c0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '51173'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 8); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE vt1 SET c0=0x30dda938, c0=x''; -- 0ms;
END; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '1136'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1728270838);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1265925141); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1292832627,15');\n; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.3479116517848313) WHERE (((CAST(rt0.c1 AS TEXT)))=((NULL))); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=(NULL, x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('-1627335789'), (x''), (-1.211003946E9); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
UPDATE OR FAIL vt1 SET (c0)=(NULL) WHERE CAST(((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS BLOB); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.defer_foreign_keys = true; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '23791'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 1569274727);\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -265340011);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
UPDATE vt1 SET c0=0.3479116517848313; -- 2ms;
INSERT OR ABORT INTO t1(c43, c2) VALUES (0.365185705909414, NULL), (x'1aeb8906', x'5ceb'), ('-1404736500', x'8d7c'); -- 0ms;
UPDATE OR IGNORE t1 SET (c0, c43)=(0.5135172804269076, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c2, c0) VALUES (1728270838, NULL, NULL); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=819833144,3');\n; -- 0ms;
UPDATE OR ABORT rt0 SET c0='W'; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=1915148938 WHERE CASE vt1.c0 COLLATE RTRIM  WHEN ((vt1.c0)&(vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND ('1385237645')) END; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1133395747); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0.8646806136597426); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 788150115); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=1385237645,5');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 2129637242);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 3ms;
UPDATE OR FAIL vt1 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1202079564,13');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '13701'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1498131514); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('舳', '舳', 'G>', '0.7613576453681236'); -- 5ms;
INSERT OR REPLACE INTO vt1 VALUES ('-687583177'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('2110973039'), (x''), (0Xffffffffa49b89d6); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1827992063'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c1)=(NULL, NULL); -- 1ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c2, c0) VALUES (NULL, '1991404382', x'b9fa'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('0|L*3ra'); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('0|l*3ra'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL), ('1308665452'), (0.7879631363968372); -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x'f5a6', c0=NULL WHERE CAST(((vt1.c0) NOTNULL) AS REAL); -- 1ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'9788', c1=NULL, c1=0.4110460129747979; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -1935613297);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR FAIL INTO rt0(c0) VALUES (''); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.9411667079645699); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES (1.569274727E9, (- (0.23865017721488768))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1805727183); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '40537'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ()), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), 's4F2U03Dy', ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))<=(((- (rt0.c1)), CASE x''  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), 's4F2U03Dy', ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))<=(((- (rt0.c1)), CASE x''  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ()), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), 's4F2U03Dy', ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))<=(((- (rt0.c1)), CASE x''  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 IN ()), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), 's4F2U03Dy', ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))<=(((- (rt0.c1)), CASE x''  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0 IN ()), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), 's4F2U03Dy', ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0))))<=(((- (rt0.c1)), CASE x''  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END, (rt0.c3 IN ()), (rt0.c0 IN (rt0.c2)), rt0.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE RTRIM THEN (rt0.c0 IN ()) END) ORDER BY ((((rt0.c2) NOTNULL)) IS FALSE) ASC  NULLS LAST, (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST, (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE RTRIM THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2) NOTNULL)) IS FALSE) ASC  NULLS LAST, (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST, (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE RTRIM THEN (rt0.c0 IN ()) END) ORDER BY ((((rt0.c2) NOTNULL)) IS FALSE) ASC  NULLS LAST, (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST, (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE RTRIM THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2) NOTNULL)) IS FALSE) ASC  NULLS LAST, (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST, (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN rt0.c3 COLLATE RTRIM THEN (rt0.c0 IN ()) END) ORDER BY ((((rt0.c2) NOTNULL)) IS FALSE) ASC  NULLS LAST, (NOT (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS LAST, (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)) IN ()) ASC;
SELECT ALL * FROM vt1 WHERE ((~ ((~ (vt1.c0))))) ORDER BY ((0.4773399942175989) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.4773399942175989) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1 WHERE ((~ ((~ (vt1.c0))))) ORDER BY ((0.4773399942175989) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((0.4773399942175989) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE)) DESC);
SELECT ALL * FROM vt1 WHERE ((~ ((~ (vt1.c0))))) ORDER BY ((0.4773399942175989) BETWEEN (vt1.c0) AND (vt1.c0 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ ((((rt0.c0))>=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0))>=((rt0.c2))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ ((((rt0.c0))>=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ ((((rt0.c0))>=((rt0.c2))))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ ((((rt0.c0))>=((rt0.c2))))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)*(x''))) AND (((vt1.c0)|(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)*(x''))) AND (((vt1.c0)|(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)*(x''))) AND (((vt1.c0)|(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)*(x''))) AND (((vt1.c0)|(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((LIKELY(vt1.c0)) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))))) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))) NOT BETWEEN (((vt1.c0)*(x''))) AND (((vt1.c0)|(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(0.43072742978526457 AS INTEGER) WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) IS TRUE) DESC, (+ (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(0.43072742978526457 AS INTEGER) ORDER BY ((rt0.c0 COLLATE NOCASE) IS TRUE) DESC, (+ (((rt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(0.43072742978526457 AS INTEGER) WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) IS TRUE) DESC, (+ (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON CAST(0.43072742978526457 AS INTEGER) ORDER BY ((rt0.c0 COLLATE NOCASE) IS TRUE) DESC, (+ (((rt0.c0) ISNULL)))  NULLS FIRST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON CAST(0.43072742978526457 AS INTEGER) WHERE (rt0.c1) ORDER BY ((rt0.c0 COLLATE NOCASE) IS TRUE) DESC, (+ (((rt0.c0) ISNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN (((rt0.c2)-(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN (((rt0.c2)-(rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN (((rt0.c2)-(rt0.c1)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((~ (rt0.c2))))) ORDER BY (CAST(rt0.c0 AS REAL) IN (((rt0.c2)-(rt0.c1))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM((rt0.c3 IN ()), (vt1.c0 IN ()))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((rt0.c3 IN ()), (vt1.c0 IN ()))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM((rt0.c3 IN ()), (vt1.c0 IN ()))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM((rt0.c3 IN ()), (vt1.c0 IN ()))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (LTRIM((rt0.c3 IN ()), (vt1.c0 IN ()))) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))-((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1385237645', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))-((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1385237645', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))-((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1385237645', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))-((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1385237645', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (- (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))-((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (('1385237645', vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))))) ORDER BY (- (vt1.c0));
SELECT * FROM vt1 WHERE ('HR') ORDER BY UNICODE(vt1.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('HR') IS TRUE)  as count FROM vt1 ORDER BY UNICODE(vt1.c0) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1 WHERE ('HR') ORDER BY UNICODE(vt1.c0) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('HR') IS TRUE)  as count FROM vt1 ORDER BY UNICODE(vt1.c0) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt1 WHERE ('HR') ORDER BY UNICODE(vt1.c0) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) AND ((CAST(NULL AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) AND ((CAST(NULL AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) AND ((CAST(NULL AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) AND ((CAST(NULL AS INTEGER))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((x''))))) AND ((CAST(NULL AS INTEGER)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c3)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c3)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c3)<(rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c3)<(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c3) NOT NULL))) AND ((((rt0.c3)<(rt0.c2))))));
SELECT * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1);
SELECT * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1);
SELECT * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY rt0.c1;
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY (NOT ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((NOT (rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY (NOT ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((NOT (rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (rt0.c3) ORDER BY (NOT ((NOT (rt0.c3))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))LIKE(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))LIKE(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))LIKE(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY (vt1.c0 IN ()) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE BINARY);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (json_type(((rt0.c1)%(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c1)%(rt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (json_type(((rt0.c1)%(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_type(((rt0.c1)%(rt0.c0)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (json_type(((rt0.c1)%(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (0xffffffffe2ebc1e9 IN (vt1.c0, rt0.c3))  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN json_valid(rt0.c2) WHEN (NOT (rt0.c3)) THEN rt0.c0 WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6180129497604575) WHEN '\F' THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -1533310506 END THEN rt0.c1 ELSE CASE x'6009'  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (0Xffffffffe2ebc1e9 IN (vt1.c0, rt0.c3))  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN json_valid(rt0.c2) WHEN (NOT (rt0.c3)) THEN rt0.c0 WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6180129497604575) WHEN '\F' THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -1533310506 END THEN rt0.c1 ELSE CASE x'6009'  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (0xffffffffe2ebc1e9 IN (vt1.c0, rt0.c3))  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN json_valid(rt0.c2) WHEN (NOT (rt0.c3)) THEN rt0.c0 WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6180129497604575) WHEN '\F' THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -1533310506 END THEN rt0.c1 ELSE CASE x'6009'  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (0Xffffffffe2ebc1e9 IN (vt1.c0, rt0.c3))  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN json_valid(rt0.c2) WHEN (NOT (rt0.c3)) THEN rt0.c0 WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6180129497604575) WHEN '\F' THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -1533310506 END THEN rt0.c1 ELSE CASE x'6009'  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (0xffffffffe2ebc1e9 IN (vt1.c0, rt0.c3))  WHEN ((vt1.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN json_valid(rt0.c2) WHEN (NOT (rt0.c3)) THEN rt0.c0 WHEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6180129497604575) WHEN '\F' THEN CAST(rt0.c2 AS BLOB) WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE -1533310506 END THEN rt0.c1 ELSE CASE x'6009'  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((TRIM(rt0.c0, rt0.c0))AND(((vt1.c0)>=(rt0.c0)))))AND(((rt0.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0, rt0.c0))AND(((vt1.c0)>=(rt0.c0)))))AND(((rt0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((TRIM(rt0.c0, rt0.c0))AND(((vt1.c0)>=(rt0.c0)))))AND(((rt0.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0, rt0.c0))AND(((vt1.c0)>=(rt0.c0)))))AND(((rt0.c0)OR(vt1.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((TRIM(rt0.c0, rt0.c0))AND(((vt1.c0)>=(rt0.c0)))))AND(((rt0.c0)OR(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 0.11542202810430857 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)+(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 0.11542202810430857);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 0.11542202810430857 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)+(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)+(rt0.c3))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON 0.11542202810430857);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON 0.11542202810430857 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))OR(((rt0.c0)+(rt0.c3)))));
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST, x'' ASC  NULLS FIRST, rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST, x'' ASC  NULLS FIRST, rt0.c3 ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST, x'' ASC  NULLS FIRST, rt0.c3 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST, x'' ASC  NULLS FIRST, rt0.c3 ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (NULL) ORDER BY CAST(rt0.c0 AS TEXT) COLLATE BINARY ASC  NULLS LAST, x'' ASC  NULLS FIRST, rt0.c3 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))<>(('-799047117'))))) AND ((((rt0.c0)LIKE(rt0.c3)))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c0))!=(('-799047117'))))) AND ((((rt0.c0)LIKE(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))<>(('-799047117'))))) AND ((((rt0.c0)LIKE(rt0.c3)))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((((rt0.c0))!=(('-799047117'))))) AND ((((rt0.c0)LIKE(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN (((((rt0.c0))<>(('-799047117'))))) AND ((((rt0.c0)LIKE(rt0.c3)))))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 COLLATE BINARY))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((+ (vt1.c0)))LIKE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE BINARY))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((+ (vt1.c0)))LIKE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ('')) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 COLLATE BINARY))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((+ (vt1.c0)))LIKE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ('')) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 COLLATE BINARY))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((+ (vt1.c0)))LIKE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ('')) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) IS TRUE)))) ORDER BY (((vt1.c0 COLLATE BINARY))==((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((+ (vt1.c0)))LIKE(((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), ((((vt1.c0)LIKE(vt1.c0))) NOT BETWEEN (((vt1.c0)IS NOT(vt1.c0))) AND ('')) ASC;
SELECT * FROM vt1, rt0 WHERE (((DATETIME(vt1.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((NULL)AND(rt0.c3)))OR(rt0.c3))) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((NULL)AND(rt0.c3)))OR(rt0.c3))) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((DATETIME(vt1.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((NULL)AND(rt0.c3)))OR(rt0.c3))) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(vt1.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((NULL)AND(rt0.c3)))OR(rt0.c3))) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((DATETIME(vt1.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN (((((NULL)AND(rt0.c3)))OR(rt0.c3))) AND ((~ (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c0, 0.13259208081735285) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT vt1.c0, 0.13259208081735285) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c0, 0.13259208081735285) IN ()));
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT vt1.c0, 0.13259208081735285) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c0, 0.13259208081735285) IN ()));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((rt0.c1 COLLATE BINARY IN ()));
SELECT ALL * FROM vt1 WHERE (CASE x''  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE x''  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE x''  WHEN (vt1.c0 IN ()) THEN (vt1.c0 IN ()) ELSE vt1.c0 COLLATE RTRIM END) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN (rt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c0) IS FALSE))AND((rt0.c3 IN (vt1.c0)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))AND((rt0.c3 IN (vt1.c0)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c0) IS FALSE))AND((rt0.c3 IN (vt1.c0)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) IS FALSE))AND((rt0.c3 IN (vt1.c0)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((vt1.c0) IS FALSE))AND((rt0.c3 IN (vt1.c0)))))OR(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))));
SELECT * FROM vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC, (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((1403562020)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (MIN(rt0.c3, 0.0)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC, (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((1403562020)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (MIN(rt0.c3, 0.0))));
SELECT * FROM vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC, (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((1403562020)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (MIN(rt0.c3, 0.0)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, rt0 ORDER BY x'' DESC, (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((1403562020)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (MIN(rt0.c3, 0.0))));
SELECT * FROM vt1, rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS BLOB)) ORDER BY x'' DESC, (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((1403562020)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (MIN(rt0.c3, 0.0)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c3) COLLATE RTRIM) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c3) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c3) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c3) COLLATE RTRIM) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c3) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt0.c3) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c3) IS FALSE) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (HEX(rt0.c3) COLLATE RTRIM) ORDER BY ((CAST(NULL AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) AND (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt0.c3) IS FALSE) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c3)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)=(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)=(rt0.c3)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((+ (rt0.c2))))>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((+ (rt0.c2))))>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((+ (rt0.c2))))>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((+ (rt0.c2))))>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS REAL)) ORDER BY ((((+ (rt0.c2))))>((((((rt0.c3)OR(rt0.c3)))OR(rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY (((+ (vt1.c0)))-(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((+ (vt1.c0)))-(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY (((+ (vt1.c0)))-(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((+ (vt1.c0)))-(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0))) ISNULL)) ORDER BY (((+ (vt1.c0)))-(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3)-(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((((rt0.c1)>(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3)-(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((((rt0.c1)>(vt1.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3)-(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1)>(vt1.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3)-(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))))) ORDER BY ((((rt0.c1)>(vt1.c0))) IS FALSE);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c3) NOTNULL) THEN ((0xffffffff8ca0e28f) ISNULL) END) ORDER BY TYPEOF(((rt0.c2)-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c3) NOTNULL) THEN ((0Xffffffff8ca0e28f) ISNULL) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY TYPEOF(((rt0.c2)-(rt0.c2))));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c3) NOTNULL) THEN ((0xffffffff8ca0e28f) ISNULL) END) ORDER BY TYPEOF(((rt0.c2)-(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c3) NOTNULL) THEN ((0Xffffffff8ca0e28f) ISNULL) END) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY TYPEOF(((rt0.c2)-(rt0.c2))));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (CASE rt0.c3 COLLATE RTRIM  WHEN ((rt0.c3) NOTNULL) THEN ((0xffffffff8ca0e28f) ISNULL) END) ORDER BY TYPEOF(((rt0.c2)-(rt0.c2)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '-1211003946' WHERE (rt0.c1 COLLATE BINARY) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '-1211003946' ORDER BY rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '-1211003946' WHERE (rt0.c1 COLLATE BINARY) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE BINARY) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON '-1211003946' ORDER BY rt0.c3);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON '-1211003946' WHERE (rt0.c1 COLLATE BINARY) ORDER BY rt0.c3;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((x'a4b5') IS FALSE) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END WHEN ((rt0.c3)|(rt0.c3)) THEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'a4b5') IS FALSE) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END WHEN ((rt0.c3)|(rt0.c3)) THEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((x'a4b5') IS FALSE) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END WHEN ((rt0.c3)|(rt0.c3)) THEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((x'a4b5') IS FALSE) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END WHEN ((rt0.c3)|(rt0.c3)) THEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((x'a4b5') IS FALSE) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END WHEN ((rt0.c3)|(rt0.c3)) THEN ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) THEN rt0.c2 COLLATE BINARY ELSE ((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN NULL THEN '-865436315' WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((-1858153167)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN '-865436315' WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((-1858153167)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN NULL THEN '-865436315' WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((-1858153167)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN '-865436315' WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((-1858153167)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN NULL THEN '-865436315' WHEN vt1.c0 THEN ((vt1.c0)IS NOT(vt1.c0)) WHEN ((vt1.c0) NOTNULL) THEN (((-1858153167)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) END);
SELECT * FROM rt0, vt1 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))) AS REAL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))) AS REAL));
SELECT ALL * FROM rt0 WHERE (MIN(((rt0.c0)||(rt0.c1)), ((rt0.c1) ISNULL))) ORDER BY (((rt0.c3 IN (rt0.c2)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((rt0.c0)||(rt0.c1)), ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN (rt0.c2)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (MIN(((rt0.c0)||(rt0.c1)), ((rt0.c1) ISNULL))) ORDER BY (((rt0.c3 IN (rt0.c2)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((MIN(((rt0.c0)||(rt0.c1)), ((rt0.c1) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3 IN (rt0.c2)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) DESC);
SELECT ALL * FROM rt0 WHERE (MIN(((rt0.c0)||(rt0.c1)), ((rt0.c1) ISNULL))) ORDER BY (((rt0.c3 IN (rt0.c2)))IS NOT(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)) DESC;
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(((((x'')AND(vt1.c0)))AND(rt0.c1)))))OR(CASE rt0.c0  WHEN vt1.c0 THEN x'cd7b' ELSE rt0.c1 END)))AND(UPPER(rt0.c2))))OR((((vt1.c0, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(((((x'')AND(vt1.c0)))AND(rt0.c1)))))OR(CASE rt0.c0  WHEN vt1.c0 THEN x'cd7b' ELSE rt0.c1 END)))AND(UPPER(rt0.c2))))OR((((vt1.c0, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(((((x'')AND(vt1.c0)))AND(rt0.c1)))))OR(CASE rt0.c0  WHEN vt1.c0 THEN x'cd7b' ELSE rt0.c1 END)))AND(UPPER(rt0.c2))))OR((((vt1.c0, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(((((x'')AND(vt1.c0)))AND(rt0.c1)))))OR(CASE rt0.c0  WHEN vt1.c0 THEN x'cd7b' ELSE rt0.c1 END)))AND(UPPER(rt0.c2))))OR((((vt1.c0, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)OR(((((x'')AND(vt1.c0)))AND(rt0.c1)))))OR(CASE rt0.c0  WHEN vt1.c0 THEN x'cd7b' ELSE rt0.c1 END)))AND(UPPER(rt0.c2))))OR((((vt1.c0, rt0.c3, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c3, rt0.c1))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), (rt0.c3 IN ())))<>(((((rt0.c1, rt0.c0, rt0.c1, 2110973039, rt0.c2))<((vt1.c0, rt0.c1, rt0.c2, '', vt1.c0))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), CAST(rt0.c2 AS REAL)))) WHERE (CASE rt0.c3  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN '' WHEN '1779028258' THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c0)*(rt0.c3)))-(((rt0.c3)/(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN '' WHEN '1779028258' THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), (rt0.c3 IN ())))<>(((((rt0.c1, rt0.c0, rt0.c1, 2110973039, rt0.c2))<((vt1.c0, rt0.c1, rt0.c2, '', vt1.c0))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), CAST(rt0.c2 AS REAL)))) ORDER BY ((((vt1.c0)*(rt0.c3)))-(((rt0.c3)/(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), (rt0.c3 IN ())))<>(((((rt0.c1, rt0.c0, rt0.c1, 2110973039, rt0.c2))<((vt1.c0, rt0.c1, rt0.c2, '', vt1.c0))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), CAST(rt0.c2 AS REAL)))) WHERE (CASE rt0.c3  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN '' WHEN '1779028258' THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c0)*(rt0.c3)))-(((rt0.c3)/(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN '' WHEN '1779028258' THEN vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), (rt0.c3 IN ())))<>(((((rt0.c1, rt0.c0, rt0.c1, 2110973039, rt0.c2))<((vt1.c0, rt0.c1, rt0.c2, '', vt1.c0))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), CAST(rt0.c2 AS REAL)))) ORDER BY ((((vt1.c0)*(rt0.c3)))-(((rt0.c3)/(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (((vt1.c0 COLLATE NOCASE, CAST(rt0.c0 AS REAL), (rt0.c3 IN ())))<>(((((rt0.c1, rt0.c0, rt0.c1, 2110973039, rt0.c2))<((vt1.c0, rt0.c1, rt0.c2, '', vt1.c0))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)), CAST(rt0.c2 AS REAL)))) WHERE (CASE rt0.c3  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN x'' THEN '' WHEN '1779028258' THEN vt1.c0 END COLLATE NOCASE) ORDER BY ((((vt1.c0)*(rt0.c3)))-(((rt0.c3)/(rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (-1352795001);
SELECT SUM(count) FROM (SELECT ((-1352795001) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (-1352795001);
SELECT SUM(count) FROM (SELECT ((-1352795001) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (-1352795001);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))OR(((rt0.c0) NOT NULL))))OR(((rt0.c3)IS NOT(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))OR(((rt0.c0) NOT NULL))))OR(((rt0.c3)IS NOT(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))OR(((rt0.c0) NOT NULL))))OR(((rt0.c3)IS NOT(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))OR(((rt0.c0) NOT NULL))))OR(((rt0.c3)IS NOT(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON (((((((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))OR(((rt0.c0) NOT NULL))))OR(((rt0.c3)IS NOT(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)))))AND(CASE vt1.c0  WHEN rt0.c1 THEN rt0.c0 END)) WHERE (x'');
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0) IS FALSE))))OR(DATE(rt0.c3, rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0) IS FALSE))))OR(DATE(rt0.c3, rt0.c1, rt0.c3))));
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0) IS FALSE))))OR(DATE(rt0.c3, rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0) IS FALSE))))OR(DATE(rt0.c3, rt0.c1, rt0.c3))));
SELECT ALL * FROM rt0 WHERE ('') ORDER BY ((((UNLIKELY(rt0.c1))OR(((rt0.c0) IS FALSE))))OR(DATE(rt0.c3, rt0.c1, rt0.c3)));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/((- (rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/((- (rt0.c3)))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/((- (rt0.c3)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/((- (rt0.c3)))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON ((((vt1.c0) NOT NULL))/((- (rt0.c3)))) WHERE (NULL);
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOT NULL));
SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c3 AS TEXT))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c3 AS TEXT))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (((CAST(rt0.c3 AS TEXT))<=(((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (-7.99047117E8 COLLATE NOCASE) AND ((NOT (rt0.c3))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN (-7.99047117E8 COLLATE NOCASE) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (-7.99047117E8 COLLATE NOCASE) AND ((NOT (rt0.c3))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE BINARY) BETWEEN (-7.99047117E8 COLLATE NOCASE) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0 COLLATE BINARY) BETWEEN (-7.99047117E8 COLLATE NOCASE) AND ((NOT (rt0.c3))))) ORDER BY (((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (DATE(rt0.c2, rt0.c2, rt0.c3)) AND (json_insert(vt1.c0, rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (DATE(rt0.c2, rt0.c2, rt0.c3)) AND (json_insert(vt1.c0, rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (DATE(rt0.c2, rt0.c2, rt0.c3)) AND (json_insert(vt1.c0, rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (DATE(rt0.c2, rt0.c2, rt0.c3)) AND (json_insert(vt1.c0, rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN 0Xffffffff9528ac13 THEN rt0.c0 ELSE vt1.c0 END) ISNULL) WHERE (((((vt1.c0)AND(rt0.c1)))||(PRINTF(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(rt0.c1)))||(PRINTF(rt0.c3)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN 0xffffffff9528ac13 THEN rt0.c0 ELSE vt1.c0 END) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN 0Xffffffff9528ac13 THEN rt0.c0 ELSE vt1.c0 END) ISNULL) WHERE (((((vt1.c0)AND(rt0.c1)))||(PRINTF(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(rt0.c1)))||(PRINTF(rt0.c3)))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN 0xffffffff9528ac13 THEN rt0.c0 ELSE vt1.c0 END) ISNULL));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((CASE WHEN 0Xffffffff9528ac13 THEN rt0.c0 ELSE vt1.c0 END) ISNULL) WHERE (((((vt1.c0)AND(rt0.c1)))||(PRINTF(rt0.c3))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c3))) IS FALSE) WHERE ((((rt0.c3)) NOT BETWEEN ((load_extension(rt0.c3, rt0.c1))) AND (((((rt0.c2))<((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((load_extension(rt0.c3, rt0.c1))) AND (((((rt0.c2))<((rt0.c1))))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c3))) IS FALSE));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c3))) IS FALSE) WHERE ((((rt0.c3)) NOT BETWEEN ((load_extension(rt0.c3, rt0.c1))) AND (((((rt0.c2))<((rt0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((load_extension(rt0.c3, rt0.c1))) AND (((((rt0.c2))<((rt0.c1))))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c3))) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.4110460129747979 IN ()) COLLATE NOCASE WHERE (((CAST(0.48038949050031543 AS TEXT)) NOTNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.48038949050031543 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (0.4110460129747979 IN ()) COLLATE NOCASE ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.4110460129747979 IN ()) COLLATE NOCASE WHERE (((CAST(0.48038949050031543 AS TEXT)) NOTNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.48038949050031543 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (0.4110460129747979 IN ()) COLLATE NOCASE ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (0.4110460129747979 IN ()) COLLATE NOCASE WHERE (((CAST(0.48038949050031543 AS TEXT)) NOTNULL)) ORDER BY ((rt0.c0) IS TRUE) COLLATE BINARY;
SELECT ALL * FROM vt1 WHERE (((('987296565')) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('987296565')) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((('987296565')) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('987296565')) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((('987296565')) BETWEEN ((vt1.c0 COLLATE BINARY)) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))));
SELECT * FROM vt1, rt0 WHERE ((NOT ((((x'', '-836509118', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2)))))) ORDER BY CAST((~ (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'', '-836509118', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((~ (vt1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((NOT ((((x'', '-836509118', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2)))))) ORDER BY CAST((~ (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((x'', '-836509118', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((~ (vt1.c0)) AS TEXT)  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((NOT ((((x'', '-836509118', rt0.c1)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c3, rt0.c2)))))) ORDER BY CAST((~ (vt1.c0)) AS TEXT)  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ())) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3 IN ())) ISNULL));
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt0.c2 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt0.c2 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c2 END)OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))OR(((rt0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((((rt0.c3)LIKE(rt0.c3)))<<(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c3)))<<(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((((rt0.c3)LIKE(rt0.c3)))<<(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3)LIKE(rt0.c3)))<<(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((~ ((rt0.c0 IN ())))) ORDER BY ((((rt0.c3)LIKE(rt0.c3)))<<(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)OR(rt0.c3)))))AND(GLOB(rt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)OR(rt0.c3)))))AND(GLOB(rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)OR(rt0.c3)))))AND(GLOB(rt0.c0, rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)OR(rt0.c3)))))AND(GLOB(rt0.c0, rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS INTEGER))OR(((rt0.c0)OR(rt0.c3)))))AND(GLOB(rt0.c0, rt0.c3))));
SELECT * FROM vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- (CAST(vt1.c0 AS BLOB))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON TRIM(json_patch(rt0.c2, rt0.c1)) WHERE ((((0xffffffffa557155e)) BETWEEN ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) AND (((('-2003753309') NOT BETWEEN (rt0.c3) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffa557155e)) BETWEEN ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) AND (((('-2003753309') NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON TRIM(json_patch(rt0.c2, rt0.c1)));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON TRIM(json_patch(rt0.c2, rt0.c1)) WHERE ((((0xffffffffa557155e)) BETWEEN ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) AND (((('-2003753309') NOT BETWEEN (rt0.c3) AND (rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffa557155e)) BETWEEN ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) AND (((('-2003753309') NOT BETWEEN (rt0.c3) AND (rt0.c3)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON TRIM(json_patch(rt0.c2, rt0.c1)));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON TRIM(json_patch(rt0.c2, rt0.c1)) WHERE ((((0xffffffffa557155e)) BETWEEN ((((((((((vt1.c0)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))) AND (((('-2003753309') NOT BETWEEN (rt0.c3) AND (rt0.c3))))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((vt1.c0) NOTNULL) ELSE json_array_length(rt0.c0, NULL) END) ORDER BY RTRIM(((rt0.c1)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((vt1.c0) NOTNULL) ELSE json_array_length(rt0.c0, NULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY RTRIM(((rt0.c1)GLOB(vt1.c0))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((vt1.c0) NOTNULL) ELSE json_array_length(rt0.c0, NULL) END) ORDER BY RTRIM(((rt0.c1)GLOB(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((vt1.c0) NOTNULL) ELSE json_array_length(rt0.c0, NULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY RTRIM(((rt0.c1)GLOB(vt1.c0))));
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END  WHEN (((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((vt1.c0) NOTNULL) ELSE json_array_length(rt0.c0, NULL) END) ORDER BY RTRIM(((rt0.c1)GLOB(vt1.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (('-317860309' IN ()));
SELECT SUM(count) FROM (SELECT ((('-317860309' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('-317860309' IN ()));
SELECT SUM(count) FROM (SELECT ((('-317860309' IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (('-317860309' IN ()));
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 COLLATE NOCASE AS BLOB));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))LIKE((~ (vt1.c0))))) ORDER BY (+ (rt0.c2))  NULLS FIRST, CASE WHEN (rt0.c0 IN ()) THEN UNLIKELY(rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c2))  NULLS FIRST, CASE WHEN (rt0.c0 IN ()) THEN UNLIKELY(rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))LIKE((~ (vt1.c0))))) ORDER BY (+ (rt0.c2))  NULLS FIRST, CASE WHEN (rt0.c0 IN ()) THEN UNLIKELY(rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))LIKE((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c2))  NULLS FIRST, CASE WHEN (rt0.c0 IN ()) THEN UNLIKELY(rt0.c0) END DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))LIKE((~ (vt1.c0))))) ORDER BY (+ (rt0.c2))  NULLS FIRST, CASE WHEN (rt0.c0 IN ()) THEN UNLIKELY(rt0.c0) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))>((rt0.c2 IN (rt0.c3, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))>((rt0.c2 IN (rt0.c3, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))>((rt0.c2 IN (rt0.c3, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))>((rt0.c2 IN (rt0.c3, rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c0)))OR(vt1.c0)))>((rt0.c2 IN (rt0.c3, rt0.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON SUBSTR((~ (vt1.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) WHERE ((((x'', x'432b', vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, 0.9509479341005159))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((x'', x'432b', vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, 0.9509479341005159))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON SUBSTR((~ (vt1.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON SUBSTR((~ (vt1.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) WHERE ((((x'', x'432b', vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, 0.9509479341005159))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((x'', x'432b', vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, 0.9509479341005159))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON SUBSTR((~ (vt1.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON SUBSTR((~ (vt1.c0)), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) WHERE ((((x'', x'432b', vt1.c0)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((vt1.c0, rt0.c3, 0.9509479341005159))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (-317860309);
SELECT SUM(count) FROM (SELECT ALL ((-317860309) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (-317860309);
SELECT SUM(count) FROM (SELECT ALL ((-317860309) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (-317860309);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)||((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)||((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)||((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)||((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c2 END)||((((x'')) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS BLOB)) IS FALSE)) ORDER BY (~ (vt1.c0)) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) ORDER BY (+ (CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) ORDER BY (+ (CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END) IS FALSE)) ORDER BY (+ (CAST(vt1.c0 AS TEXT)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST('G>' AS BLOB) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) END WHERE ((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST('G>' AS BLOB) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST('G>' AS BLOB) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) END WHERE ((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST('G>' AS BLOB) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) END);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON CASE WHEN CAST('G>' AS BLOB) THEN ((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)) END WHERE ((((+ (rt0.c2))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND ((~ (rt0.c3)))));
SELECT * FROM vt1 WHERE ((((('1292832627')OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.900345572233824 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((('1292832627')OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.900345572233824 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE ((((('1292832627')OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.900345572233824 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT (((((('1292832627')OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.900345572233824 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE ((((('1292832627')OR(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.900345572233824 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CASE WHEN vt1.c0 THEN vt1.c0 END))) ORDER BY vt1.c0;
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))<>((((vt1.c0))<>((x'3fe2'))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))!=((((vt1.c0))!=((x'3fe2')))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))<>((((vt1.c0))<>((x'3fe2'))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))!=((((vt1.c0))!=((x'3fe2')))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))))<>((((vt1.c0))<>((x'3fe2'))))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)>(rt0.c0)))>=(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c0)))>=(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)>(rt0.c0)))>=(((rt0.c3) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)>(rt0.c0)))>=(((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)>(rt0.c0)))>=(((rt0.c3) IS TRUE))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((x'')OR(vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((x'')OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((x'')OR(vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((x'')OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((x'')OR(vt1.c0))))) ORDER BY (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC;
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL)  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL)  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL)  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL)  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(vt1.c0 COLLATE BINARY AS INTEGER)) ORDER BY CAST(CAST(rt0.c3 AS BLOB) AS REAL)  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((~ (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) ELSE 'i''' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY (- ((~ (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) ELSE 'i''' END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((~ (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) ELSE 'i''' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1 ORDER BY (- ((~ (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) ELSE 'i''' END ASC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0 COLLATE BINARY)))) ORDER BY (- ((~ (vt1.c0)))) DESC, CASE WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 END WHEN x'' THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN ((vt1.c0) IS TRUE) THEN ((vt1.c0) NOTNULL) ELSE 'i''' END ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('￿W') ORDER BY (((((rt0.c1))=((rt0.c1)))) BETWEEN (((rt0.c3)|(x''))) AND ((rt0.c3 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('￿W') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))=((rt0.c1)))) BETWEEN (((rt0.c3)|(x''))) AND ((rt0.c3 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('￿W') ORDER BY (((((rt0.c1))=((rt0.c1)))) BETWEEN (((rt0.c3)|(x''))) AND ((rt0.c3 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('￿W') IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1))=((rt0.c1)))) BETWEEN (((rt0.c3)|(x''))) AND ((rt0.c3 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ('￿W') ORDER BY (((((rt0.c1))=((rt0.c1)))) BETWEEN (((rt0.c3)|(x''))) AND ((rt0.c3 IN ()))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)IS(vt1.c0)))))OR((((vt1.c0))==((vt1.c0))))))AND(((vt1.c0) IS FALSE))))OR(((NULL)<<(vt1.c0))))) ORDER BY (((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)*(vt1.c0)))), (- ((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)IS(vt1.c0)))))OR((((vt1.c0))==((vt1.c0))))))AND(((vt1.c0) IS FALSE))))OR(((NULL)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)*(vt1.c0)))), (- ((~ (vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)IS(vt1.c0)))))OR((((vt1.c0))==((vt1.c0))))))AND(((vt1.c0) IS FALSE))))OR(((NULL)<<(vt1.c0))))) ORDER BY (((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)*(vt1.c0)))), (- ((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)IS(vt1.c0)))))OR((((vt1.c0))==((vt1.c0))))))AND(((vt1.c0) IS FALSE))))OR(((NULL)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)*(vt1.c0)))), (- ((~ (vt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((((((CAST(vt1.c0 AS NUMERIC))OR(((vt1.c0)IS(vt1.c0)))))OR((((vt1.c0))==((vt1.c0))))))AND(((vt1.c0) IS FALSE))))OR(((NULL)<<(vt1.c0))))) ORDER BY (((((((((+ (vt1.c0)))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR(((vt1.c0)*(vt1.c0)))), (- ((~ (vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (0.46348018932966695) ORDER BY (STRFTIME(rt0.c2, rt0.c0, rt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.46348018932966695) IS TRUE)  as count FROM rt0 ORDER BY (STRFTIME(rt0.c2, rt0.c0, rt0.c1) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.46348018932966695) ORDER BY (STRFTIME(rt0.c2, rt0.c0, rt0.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((0.46348018932966695) IS TRUE)  as count FROM rt0 ORDER BY (STRFTIME(rt0.c2, rt0.c0, rt0.c1) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (0.46348018932966695) ORDER BY (STRFTIME(rt0.c2, rt0.c0, rt0.c1) IN ());
SELECT * FROM rt0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST);
SELECT * FROM rt0 WHERE (NULL) ORDER BY SQLITE_SOURCE_ID()  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((CAST(rt0.c3 AS BLOB)) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) ORDER BY ((((NOT (rt0.c3)), ((rt0.c0) IS FALSE), (rt0.c2 IN ()), (rt0.c1 IN ()), ((rt0.c2) NOTNULL)))!=(('&svy5N#', (~ (rt0.c1)), LOWER(rt0.c3), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c3)), ((rt0.c0) IS FALSE), (rt0.c2 IN ()), (rt0.c1 IN ()), ((rt0.c2) NOTNULL)))!=(('&svy5N#', (~ (rt0.c1)), LOWER(rt0.c3), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) ORDER BY ((((NOT (rt0.c3)), ((rt0.c0) IS FALSE), (rt0.c2 IN ()), (rt0.c1 IN ()), ((rt0.c2) NOTNULL)))!=(('&svy5N#', (~ (rt0.c1)), LOWER(rt0.c3), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c3)), ((rt0.c0) IS FALSE), (rt0.c2 IN ()), (rt0.c1 IN ()), ((rt0.c2) NOTNULL)))!=(('&svy5N#', (~ (rt0.c1)), LOWER(rt0.c3), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c1)>>(rt0.c2)) COLLATE NOCASE) ORDER BY ((((NOT (rt0.c3)), ((rt0.c0) IS FALSE), (rt0.c2 IN ()), (rt0.c1 IN ()), ((rt0.c2) NOTNULL)))!=(('&svy5N#', (~ (rt0.c1)), LOWER(rt0.c3), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) ASC;
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY LTRIM((('a7') BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c2) BETWEEN (1991404382) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM((('a7') BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c2) BETWEEN (1991404382) AND (rt0.c1))));
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY LTRIM((('a7') BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c2) BETWEEN (1991404382) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY LTRIM((('a7') BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c2) BETWEEN (1991404382) AND (rt0.c1))));
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY LTRIM((('a7') BETWEEN (rt0.c1) AND (vt1.c0)), ((rt0.c2) BETWEEN (1991404382) AND (rt0.c1)));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) IN ()));
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ())) ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC, ((((((rt0.c0)AND('Y?%G')))AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC, ((((((rt0.c0)AND('Y?%G')))AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ())) ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC, ((((((rt0.c0)AND('Y?%G')))AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC, ((((((rt0.c0)AND('Y?%G')))AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))) IN ())) ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC, ((((((rt0.c0)AND('Y?%G')))AND(rt0.c3)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c2 COLLATE BINARY))=((rt0.c3 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE BINARY))=((rt0.c3 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c2 COLLATE BINARY))=((rt0.c3 COLLATE RTRIM)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 COLLATE BINARY))=((rt0.c3 COLLATE RTRIM)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((- (rt0.c2))))) ORDER BY (((rt0.c2 COLLATE BINARY))=((rt0.c3 COLLATE RTRIM)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS(COALESCE(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (NULLIF(vt1.c0, 0.8190571761794438)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))IS(COALESCE(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((NULL IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (NULLIF(vt1.c0, 0.8190571761794438)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS(COALESCE(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (NULLIF(vt1.c0, 0.8190571761794438)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ()))IS(COALESCE(DISTINCT vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((NULL IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (NULLIF(vt1.c0, 0.8190571761794438)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))IS(COALESCE(DISTINCT vt1.c0, vt1.c0)))) ORDER BY (((NULL IN ())) NOT BETWEEN ((vt1.c0 IN (vt1.c0, vt1.c0))) AND (NULLIF(vt1.c0, 0.8190571761794438)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(x'' AS INTEGER));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)||(rt0.c1))) ISNULL)) ORDER BY (('r{mP') NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND ((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('r{mP') NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND ((+ (NULL)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)||(rt0.c1))) ISNULL)) ORDER BY (('r{mP') NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND ((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)||(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('r{mP') NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND ((+ (NULL)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c3)||(rt0.c1))) ISNULL)) ORDER BY (('r{mP') NOT BETWEEN (((rt0.c3)|(rt0.c0))) AND ((+ (NULL))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS REAL))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))GLOB(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS REAL))GLOB(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))GLOB(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS REAL))GLOB(rt0.c0)));
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOTNULL))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)IS((NOT (rt0.c2))))) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))&(((rt0.c1)<>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))&(((rt0.c1)!=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)IS((NOT (rt0.c2))))) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))&(((rt0.c1)<>(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE)IS((NOT (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))&(((rt0.c1)!=(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE)IS((NOT (rt0.c2))))) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c3)))&(((rt0.c1)<>(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ABS(DISTINCT rt0.c3) THEN ((rt0.c2)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) IS TRUE)  WHEN ABS(DISTINCT rt0.c3) THEN ((rt0.c2)-(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ABS(DISTINCT rt0.c3) THEN ((rt0.c2)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) IS TRUE)  WHEN ABS(DISTINCT rt0.c3) THEN ((rt0.c2)-(rt0.c1)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE ((rt0.c3) IS TRUE)  WHEN ABS(DISTINCT rt0.c3) THEN ((rt0.c2)-(rt0.c1)) END);
SELECT * FROM rt0, vt1 WHERE (CASE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 'yH' END  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 'yH' END  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 'yH' END  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 'yH' END  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN 'yH' END  WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((- (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((- (((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) ISNULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))) AND ((vt1.c0 COLLATE NOCASE))) WHERE ((- (((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((CASE 0.6464951056872695  WHEN x'40ed' THEN rt0.c1 ELSE rt0.c3 END)AND(x'28ee')))AND(((rt0.c3)<>(rt0.c2)))) WHERE ((+ ((((rt0.c3, vt1.c0, rt0.c0))==((NULL, rt0.c3, rt0.c1)))))) ORDER BY CASE WHEN (((x''))>=((rt0.c3))) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c3)) END ASC, (((NOT (rt0.c3)))*(((rt0.c2)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, vt1.c0, rt0.c0))=((NULL, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((CASE 0.6464951056872695  WHEN x'40ed' THEN rt0.c1 ELSE rt0.c3 END)AND(x'28ee')))AND(((rt0.c3)<>(rt0.c2)))) ORDER BY CASE WHEN (((x''))>=((rt0.c3))) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c3)) END ASC, (((NOT (rt0.c3)))*(((rt0.c2)&(rt0.c0)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((CASE 0.6464951056872695  WHEN x'40ed' THEN rt0.c1 ELSE rt0.c3 END)AND(x'28ee')))AND(((rt0.c3)<>(rt0.c2)))) WHERE ((+ ((((rt0.c3, vt1.c0, rt0.c0))==((NULL, rt0.c3, rt0.c1)))))) ORDER BY CASE WHEN (((x''))>=((rt0.c3))) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c3)) END ASC, (((NOT (rt0.c3)))*(((rt0.c2)&(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c3, vt1.c0, rt0.c0))=((NULL, rt0.c3, rt0.c1)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((CASE 0.6464951056872695  WHEN x'40ed' THEN rt0.c1 ELSE rt0.c3 END)AND(x'28ee')))AND(((rt0.c3)<>(rt0.c2)))) ORDER BY CASE WHEN (((x''))>=((rt0.c3))) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c3)) END ASC, (((NOT (rt0.c3)))*(((rt0.c2)&(rt0.c0)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((CASE 0.6464951056872695  WHEN x'40ed' THEN rt0.c1 ELSE rt0.c3 END)AND(x'28ee')))AND(((rt0.c3)<>(rt0.c2)))) WHERE ((+ ((((rt0.c3, vt1.c0, rt0.c0))==((NULL, rt0.c3, rt0.c1)))))) ORDER BY CASE WHEN (((x''))>=((rt0.c3))) THEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c3)) END ASC, (((NOT (rt0.c3)))*(((rt0.c2)&(rt0.c0))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((('0|L*3ra')) BETWEEN ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c1)||(rt0.c2))))) WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((('0|L*3ra')) BETWEEN ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c1)||(rt0.c2))))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((('0|L*3ra')) BETWEEN ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c1)||(rt0.c2))))) WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((('0|L*3ra')) BETWEEN ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c1)||(rt0.c2))))));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((('0|L*3ra')) BETWEEN ((((((vt1.c0)OR(rt0.c1)))OR(rt0.c3)))) AND ((((rt0.c1)||(rt0.c2))))) WHERE (((CAST(rt0.c3 AS BLOB)) NOT BETWEEN (rt0.c2 COLLATE BINARY) AND ((NOT (rt0.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (SQLITE_VERSION()) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.6188338149160283 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (SQLITE_VERSION()) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.6188338149160283 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (SQLITE_VERSION()) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.6188338149160283 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (SQLITE_VERSION()) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1 ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.6188338149160283 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (SQLITE_VERSION()) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) ORDER BY UPPER(DISTINCT CASE WHEN vt1.c0 THEN vt1.c0 WHEN 0.6188338149160283 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0))) BETWEEN ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)IS(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)IS(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c3)<>(vt1.c0))))>((json_object(rt0.c3, rt0.c3)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c3)<>(vt1.c0))))>((json_object(rt0.c3, rt0.c3)))));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c3)<>(vt1.c0))))>((json_object(rt0.c3, rt0.c3)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((((rt0.c3)<>(vt1.c0))))>((json_object(rt0.c3, rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS INTEGER)  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS INTEGER)  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) ELSE (~ (rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN (~ (rt0.c3)) THEN (rt0.c2 IN ()) ELSE (~ (rt0.c2)) END) ORDER BY ((((rt0.c2)OR(rt0.c3)))OR(rt0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0))>=(((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=(((- (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0))>=(((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=(((- (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c0))>=(((- (rt0.c2))))));
SELECT COUNT(*) FROM rt0 WHERE (DATE(((NULL) IS TRUE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, ((rt0.c2)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((DATE(((NULL) IS TRUE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, ((rt0.c2)<=(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (DATE(((NULL) IS TRUE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, ((rt0.c2)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((DATE(((NULL) IS TRUE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, ((rt0.c2)<=(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (DATE(((NULL) IS TRUE), CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 END, ((rt0.c2)<=(rt0.c3))));
SELECT * FROM vt1, rt0 WHERE (TRIM((((rt0.c2))>((vt1.c0))))) ORDER BY (NOT (((x'')/(0.6831643781557267))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2))>((vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((x'')/(0.6831643781557267))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (TRIM((((rt0.c2))>((vt1.c0))))) ORDER BY (NOT (((x'')/(0.6831643781557267))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM((((rt0.c2))>((vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((x'')/(0.6831643781557267))))  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (TRIM((((rt0.c2))>((vt1.c0))))) ORDER BY (NOT (((x'')/(0.6831643781557267))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((~ (rt0.c2)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CAST(rt0.c3 AS NUMERIC)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(TRIM(0.5498520814549906, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(TRIM(0.5498520814549906, vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(TRIM(0.5498520814549906, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(TRIM(0.5498520814549906, vt1.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))!=(TRIM(0.5498520814549906, vt1.c0))));
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3479116517848313)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3479116517848313)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3479116517848313)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(vt1.c0 AS INTEGER))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3479116517848313)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((CAST(vt1.c0 AS INTEGER))AND(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(0.3479116517848313)))))OR(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))))AND((- (vt1.c0)))));
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (('-265340011' IN (vt1.c0, 0Xb9f244d))) AND (((x'')||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (('-265340011' IN (vt1.c0, 0Xb9f244d))) AND (((x'')||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (('-265340011' IN (vt1.c0, 0Xb9f244d))) AND (((x'')||(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (('-265340011' IN (vt1.c0, 0Xb9f244d))) AND (((x'')||(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0) BETWEEN (('-265340011' IN (vt1.c0, 0Xb9f244d))) AND (((x'')||(vt1.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (rt0.c3) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (rt0.c3) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE ORDER BY vt1.c0);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE WHERE (rt0.c3) ORDER BY vt1.c0;
SELECT ALL * FROM vt1 WHERE (((LAST_INSERT_ROWID())||(NULL))) ORDER BY (((vt1.c0, 0x4d741b6f, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (1.308665452E9) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, (~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())||(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, 0x4d741b6f, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (1.308665452E9) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, (~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((LAST_INSERT_ROWID())||(NULL))) ORDER BY (((vt1.c0, 0x4d741b6f, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (1.308665452E9) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, (~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())||(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, 0x4d741b6f, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (1.308665452E9) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, (~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((LAST_INSERT_ROWID())||(NULL))) ORDER BY (((vt1.c0, 0x4d741b6f, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), ((vt1.c0) IS FALSE), ((vt1.c0) NOT BETWEEN (1.308665452E9) AND (vt1.c0)))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, (~ (vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)>(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)>(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)>(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)>(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)>(((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))));
SELECT ALL * FROM rt0, vt1 WHERE (((('-1404736500')) BETWEEN ((CAST(NULL AS TEXT))) AND (('987296565'))));
SELECT SUM(count) FROM (SELECT ((((('-1404736500')) BETWEEN ((CAST(NULL AS TEXT))) AND (('987296565')))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((('-1404736500')) BETWEEN ((CAST(NULL AS TEXT))) AND (('987296565'))));
SELECT SUM(count) FROM (SELECT ((((('-1404736500')) BETWEEN ((CAST(NULL AS TEXT))) AND (('987296565')))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((('-1404736500')) BETWEEN ((CAST(NULL AS TEXT))) AND (('987296565'))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) ISNULL));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY '1385237645';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY '1385237645');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY '1385237645';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0 ORDER BY '1385237645');
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL) ORDER BY '1385237645';
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '9' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((('_5'))<=((rt0.c2)))) AND ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN '9' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((('_5'))<=((rt0.c2)))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '9' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((('_5'))<=((rt0.c2)))) AND ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN '9' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((('_5'))<=((rt0.c2)))) AND ((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '9' WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END) BETWEEN (((('_5'))<=((rt0.c2)))) AND ((+ (rt0.c2)))));
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN ((vt1.c0)IS NOT(x'')) ELSE TRIM(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS NUMERIC) THEN ((vt1.c0)IS NOT(x'')) ELSE TRIM(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN ((vt1.c0)IS NOT(x'')) ELSE TRIM(rt0.c2, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS NUMERIC) THEN ((vt1.c0)IS NOT(x'')) ELSE TRIM(rt0.c2, rt0.c0) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN ((vt1.c0)IS NOT(x'')) ELSE TRIM(rt0.c2, rt0.c0) END);
SELECT ALL * FROM rt0, vt1 WHERE ((+ ((- (rt0.c1))))) ORDER BY ((((vt1.c0)||('-2003753309'))) NOT BETWEEN (((((rt0.c0)OR(x'40c2')))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)||('-2003753309'))) NOT BETWEEN (((((rt0.c0)OR(x'40c2')))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((+ ((- (rt0.c1))))) ORDER BY ((((vt1.c0)||('-2003753309'))) NOT BETWEEN (((((rt0.c0)OR(x'40c2')))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((vt1.c0)||('-2003753309'))) NOT BETWEEN (((((rt0.c0)OR(x'40c2')))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((+ ((- (rt0.c1))))) ORDER BY ((((vt1.c0)||('-2003753309'))) NOT BETWEEN (((((rt0.c0)OR(x'40c2')))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c1) ISNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)%(0Xffffffffde6ec7dc))))>=((rt0.c0, -1.935613297E9, ((rt0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) ISNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)%(0Xffffffffde6ec7dc))))>=((rt0.c0, -1.935613297E9, ((rt0.c0)-(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c1) ISNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)%(0Xffffffffde6ec7dc))))>=((rt0.c0, -1.935613297E9, ((rt0.c0)-(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1) ISNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)%(0Xffffffffde6ec7dc))))>=((rt0.c0, -1.935613297E9, ((rt0.c0)-(rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c1) ISNULL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))), ((rt0.c2)%(0Xffffffffde6ec7dc))))>=((rt0.c0, -1.935613297E9, ((rt0.c0)-(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, '987296565')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c0, '987296565')) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, '987296565')) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LIKE(vt1.c0, '987296565')) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LIKE(vt1.c0, '987296565')) ISNULL));
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY (((rt0.c1 COLLATE NOCASE))<((CAST(rt0.c3 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))<((CAST(rt0.c3 AS BLOB)))) DESC);
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY (((rt0.c1 COLLATE NOCASE))<((CAST(rt0.c3 AS BLOB)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))<((CAST(rt0.c3 AS BLOB)))) DESC);
SELECT * FROM vt1, rt0 WHERE (x'') ORDER BY (((rt0.c1 COLLATE NOCASE))<((CAST(rt0.c3 AS BLOB)))) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL)))>(('1606403305'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) ISNULL)))>(('1606403305')))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL)))>(('1606403305'))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3) ISNULL)))>(('1606403305')))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3) ISNULL)))>(('1606403305'))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c3, rt0.c1, NULL))<=((rt0.c0, -1860076021, rt0.c1)))))=((((x'')/(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3, rt0.c1, NULL))<=((rt0.c0, -1860076021, rt0.c1)))))==((((x'')/(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c3, rt0.c1, NULL))<=((rt0.c0, -1860076021, rt0.c1)))))=((((x'')/(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3, rt0.c1, NULL))<=((rt0.c0, -1860076021, rt0.c1)))))==((((x'')/(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c3, rt0.c1, NULL))<=((rt0.c0, -1860076021, rt0.c1)))))=((((x'')/(rt0.c0))))));
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(0.20544072040279904)))) AND (((('288442822') IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(0.20544072040279904)))) AND (((('288442822') IS FALSE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(0.20544072040279904)))) AND (((('288442822') IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(0.20544072040279904)))) AND (((('288442822') IS FALSE))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((rt0.c2)%(0.20544072040279904)))) AND (((('288442822') IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3 COLLATE NOCASE)OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE NOCASE)OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3 COLLATE NOCASE)OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3 COLLATE NOCASE)OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c3 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3 COLLATE NOCASE)OR(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CASE 2.88442822E8  WHEN 0Xffffffffb45666f0 THEN '-836509118' ELSE rt0.c1 END THEN (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, ''))) WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE (~ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN CASE 2.88442822E8  WHEN 0Xffffffffb45666f0 THEN '-836509118' ELSE rt0.c1 END THEN (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, ''))) WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CASE 2.88442822E8  WHEN 0Xffffffffb45666f0 THEN '-836509118' ELSE rt0.c1 END THEN (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, ''))) WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE (~ (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2 COLLATE NOCASE  WHEN CASE 2.88442822E8  WHEN 0Xffffffffb45666f0 THEN '-836509118' ELSE rt0.c1 END THEN (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, ''))) WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE NOCASE  WHEN CASE 2.88442822E8  WHEN 0Xffffffffb45666f0 THEN '-836509118' ELSE rt0.c1 END THEN (((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, ''))) WHEN rt0.c2 COLLATE NOCASE THEN (- (rt0.c1)) WHEN ((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE (~ (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS(CASE WHEN x'b287' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS(CASE WHEN x'b287' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS(CASE WHEN x'b287' THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS(CASE WHEN x'b287' THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0))))IS(CASE WHEN x'b287' THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)<(rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)<(rt0.c1))) ISNULL));
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((vt1.c0)&((((vt1.c0, rt0.c2, rt0.c1))>((rt0.c1, '-265340011', rt0.c1)))))) ORDER BY (((((rt0.c0 IN ()))OR(((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(NULL)))OR(rt0.c2)))))OR((NOT (rt0.c1)))) DESC, ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&((((vt1.c0, rt0.c2, rt0.c1))>((rt0.c1, '-265340011', rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0 IN ()))OR(((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(NULL)))OR(rt0.c2)))))OR((NOT (rt0.c1)))) DESC, ((rt0.c0) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((vt1.c0)&((((vt1.c0, rt0.c2, rt0.c1))>((rt0.c1, '-265340011', rt0.c1)))))) ORDER BY (((((rt0.c0 IN ()))OR(((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(NULL)))OR(rt0.c2)))))OR((NOT (rt0.c1)))) DESC, ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&((((vt1.c0, rt0.c2, rt0.c1))>((rt0.c1, '-265340011', rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0 IN ()))OR(((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(NULL)))OR(rt0.c2)))))OR((NOT (rt0.c1)))) DESC, ((rt0.c0) IS FALSE)  NULLS FIRST);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE (((vt1.c0)&((((vt1.c0, rt0.c2, rt0.c1))>((rt0.c1, '-265340011', rt0.c1)))))) ORDER BY (((((rt0.c0 IN ()))OR(((((((((rt0.c1)AND(rt0.c1)))AND(vt1.c0)))AND(NULL)))OR(rt0.c2)))))OR((NOT (rt0.c1)))) DESC, ((rt0.c0) IS FALSE)  NULLS FIRST;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((rt0.c1)+(rt0.c3)))) WHERE (rt0.c3) ORDER BY DATETIME(((rt0.c2) NOT NULL), NULL, json_patch(rt0.c0, vt1.c0), TRIM(rt0.c2), 0.7352043637731476)  NULLS FIRST, ((((((rt0.c1)AND(x'')))AND(rt0.c1)))==((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((rt0.c1)+(rt0.c3)))) ORDER BY DATETIME(((rt0.c2) NOT NULL), NULL, json_patch(rt0.c0, vt1.c0), TRIM(rt0.c2), 0.7352043637731476)  NULLS FIRST, ((((((rt0.c1)AND(x'')))AND(rt0.c1)))=((NOT (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((rt0.c1)+(rt0.c3)))) WHERE (rt0.c3) ORDER BY DATETIME(((rt0.c2) NOT NULL), NULL, json_patch(rt0.c0, vt1.c0), TRIM(rt0.c2), 0.7352043637731476)  NULLS FIRST, ((((((rt0.c1)AND(x'')))AND(rt0.c1)))==((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((rt0.c1)+(rt0.c3)))) ORDER BY DATETIME(((rt0.c2) NOT NULL), NULL, json_patch(rt0.c0, vt1.c0), TRIM(rt0.c2), 0.7352043637731476)  NULLS FIRST, ((((((rt0.c1)AND(x'')))AND(rt0.c1)))=((NOT (vt1.c0)))) ASC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt0.c0 AS REAL)) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (((rt0.c1)+(rt0.c3)))) WHERE (rt0.c3) ORDER BY DATETIME(((rt0.c2) NOT NULL), NULL, json_patch(rt0.c0, vt1.c0), TRIM(rt0.c2), 0.7352043637731476)  NULLS FIRST, ((((((rt0.c1)AND(x'')))AND(rt0.c1)))==((NOT (vt1.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)%(rt0.c1))  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c1, rt0.c2, NULL))=((rt0.c1, rt0.c1, rt0.c1))) END) ORDER BY '429281668'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)%(rt0.c1))  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c1, rt0.c2, NULL))==((rt0.c1, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY '429281668'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)%(rt0.c1))  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c1, rt0.c2, NULL))=((rt0.c1, rt0.c1, rt0.c1))) END) ORDER BY '429281668'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3)%(rt0.c1))  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c1, rt0.c2, NULL))==((rt0.c1, rt0.c1, rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY '429281668'  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3)%(rt0.c1))  WHEN LOWER(DISTINCT rt0.c0) THEN (((rt0.c1, rt0.c2, NULL))=((rt0.c1, rt0.c1, rt0.c1))) END) ORDER BY '429281668'  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE (CASE (- (''))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (''))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE (- (''))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (''))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE (- (''))  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) THEN ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)) ELSE CAST(rt0.c1 AS INTEGER) END) ORDER BY TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1858153167'))))) ORDER BY ((((rt0.c3)==(rt0.c0)))<=(LOWER(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1858153167'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)==(rt0.c0)))<=(LOWER(DISTINCT rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1858153167'))))) ORDER BY ((((rt0.c3)==(rt0.c0)))<=(LOWER(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1858153167'))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)==(rt0.c0)))<=(LOWER(DISTINCT rt0.c0))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('-1858153167'))))) ORDER BY ((((rt0.c3)==(rt0.c0)))<=(LOWER(DISTINCT rt0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))/((((rt0.c1, 0.591975639186882, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, vt1.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))/((((rt0.c1, 0.591975639186882, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, vt1.c0, rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))/((((rt0.c1, 0.591975639186882, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, vt1.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))/((((rt0.c1, 0.591975639186882, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, vt1.c0, rt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TOTAL_CHANGES()) ORDER BY ((((((rt0.c0)AND(rt0.c3)))AND(rt0.c3)))/((((rt0.c1, 0.591975639186882, rt0.c1, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c2, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2, vt1.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'7d48'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'7d48'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'7d48'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'7d48'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)IS NOT(vt1.c0)) COLLATE BINARY) ORDER BY ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(x'7d48'))  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND((+ (rt0.c3)))))OR(((((rt0.c2)AND(vt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND((+ (rt0.c3)))))OR(((((rt0.c2)AND(vt1.c0)))OR(x''))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND((+ (rt0.c3)))))OR(((((rt0.c2)AND(vt1.c0)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE NOCASE)AND((+ (rt0.c3)))))OR(((((rt0.c2)AND(vt1.c0)))OR(x''))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1 COLLATE NOCASE)AND((+ (rt0.c3)))))OR(((((rt0.c2)AND(vt1.c0)))OR(x'')))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.4928515061229308)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.4928515061229308)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.4928515061229308)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.4928515061229308)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(0.4928515061229308)))OR(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((0.22840160794269337)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((0.22840160794269337)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((0.22840160794269337)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((0.22840160794269337)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)&(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) WHEN ((vt1.c0)OR(vt1.c0)) THEN ((((0.22840160794269337)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c0 COLLATE RTRIM THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((vt1.c0)&(vt1.c0)) END) ORDER BY vt1.c0 DESC;
SELECT ALL * FROM vt1 WHERE ((((- ('-799047117'))) BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((- ('-799047117'))) BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- ('-799047117'))) BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((- ('-799047117'))) BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((- ('-799047117'))) BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, (((rt0.c3)*(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, (((rt0.c3)*(rt0.c1)) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, (((rt0.c3)*(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, (((rt0.c3)*(rt0.c1)) IN ()) DESC);
SELECT ALL * FROM rt0 WHERE (CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c0 AS INTEGER) END) ORDER BY (rt0.c1 IN ()) COLLATE NOCASE ASC, (((rt0.c3)*(rt0.c1)) IN ()) DESC;
SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((((rt0.c3)>=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE rt0.c3  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE rt0.c3  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((((rt0.c3)>=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE rt0.c3  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE rt0.c3  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)) ASC);
SELECT * FROM rt0 WHERE (((rt0.c3) ISNULL) COLLATE BINARY) ORDER BY ((((rt0.c3)>=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (CASE rt0.c3  WHEN rt0.c0 THEN NULL ELSE rt0.c3 END)) ASC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE LIKE(rt0.c1, vt1.c0, '0')  WHEN ((rt0.c1)LIKE(rt0.c3)) THEN ((rt0.c1)OR(vt1.c0)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(rt0.c1, vt1.c0, '0')  WHEN ((rt0.c1)LIKE(rt0.c3)) THEN ((rt0.c1)OR(vt1.c0)) ELSE rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE LIKE(rt0.c1, vt1.c0, '0')  WHEN ((rt0.c1)LIKE(rt0.c3)) THEN ((rt0.c1)OR(vt1.c0)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(rt0.c1, vt1.c0, '0')  WHEN ((rt0.c1)LIKE(rt0.c3)) THEN ((rt0.c1)OR(vt1.c0)) ELSE rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE LIKE(rt0.c1, vt1.c0, '0')  WHEN ((rt0.c1)LIKE(rt0.c3)) THEN ((rt0.c1)OR(vt1.c0)) ELSE rt0.c1 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (((- (rt0.c2)))))) ORDER BY (x'' IN (((0.05659501614605977) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (x'' IN (((0.05659501614605977) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (((- (rt0.c2)))))) ORDER BY (x'' IN (((0.05659501614605977) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (((- (rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (x'' IN (((0.05659501614605977) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)) AND (((- (rt0.c2)))))) ORDER BY (x'' IN (((0.05659501614605977) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(CAST(rt0.c1 AS NUMERIC) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((- (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (LIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (LIKELY(DISTINCT rt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY vt1.c0  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((0.3976285364041029) NOT BETWEEN ((rt0.c3 IN ())) AND (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3976285364041029) NOT BETWEEN ((rt0.c3 IN ())) AND (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE BINARY) IS FALSE) ASC);
SELECT * FROM vt1, rt0 WHERE (((0.3976285364041029) NOT BETWEEN ((rt0.c3 IN ())) AND (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0.3976285364041029) NOT BETWEEN ((rt0.c3 IN ())) AND (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c0 COLLATE BINARY) IS FALSE) ASC);
SELECT * FROM vt1, rt0 WHERE (((0.3976285364041029) NOT BETWEEN ((rt0.c3 IN ())) AND (((((vt1.c0)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((vt1.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c2)))AND(NULL)) THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)) WHEN (((vt1.c0))==((vt1.c0))) THEN (rt0.c3 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c3, rt0.c2, rt0.c3, rt0.c1, vt1.c0))>=((rt0.c2, vt1.c0, rt0.c2, vt1.c0, rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c2)))AND(NULL)) THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)) WHEN (((vt1.c0))=((vt1.c0))) THEN (rt0.c3 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c3, rt0.c2, rt0.c3, rt0.c1, vt1.c0))>=((rt0.c2, vt1.c0, rt0.c2, vt1.c0, rt0.c3))) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c2)))AND(NULL)) THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)) WHEN (((vt1.c0))==((vt1.c0))) THEN (rt0.c3 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c3, rt0.c2, rt0.c3, rt0.c1, vt1.c0))>=((rt0.c2, vt1.c0, rt0.c2, vt1.c0, rt0.c3))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c2)))AND(NULL)) THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)) WHEN (((vt1.c0))=((vt1.c0))) THEN (rt0.c3 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c3, rt0.c2, rt0.c3, rt0.c1, vt1.c0))>=((rt0.c2, vt1.c0, rt0.c2, vt1.c0, rt0.c3))) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt0.c1) IS FALSE) THEN rt0.c0 COLLATE RTRIM WHEN ((((rt0.c2)OR(rt0.c2)))AND(NULL)) THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN ((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)) WHEN (((vt1.c0))==((vt1.c0))) THEN (rt0.c3 IN ()) WHEN ((rt0.c3) NOT NULL) THEN (((rt0.c3, rt0.c2, rt0.c3, rt0.c1, vt1.c0))>=((rt0.c2, vt1.c0, rt0.c2, vt1.c0, rt0.c3))) END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT CAST('-687583177' AS TEXT))) ORDER BY (((rt0.c3))<((rt0.c0))) COLLATE NOCASE  NULLS LAST, json_insert(CASE WHEN rt0.c3 THEN rt0.c2 END, (((rt0.c0, rt0.c2, vt1.c0))>=((rt0.c1, 0.22094056186532596, vt1.c0))), CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST('-687583177' AS TEXT))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3))<((rt0.c0))) COLLATE NOCASE  NULLS LAST, json_insert(CASE WHEN rt0.c3 THEN rt0.c2 END, (((rt0.c0, rt0.c2, vt1.c0))>=((rt0.c1, 0.22094056186532596, vt1.c0))), CAST(rt0.c0 AS BLOB)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT CAST('-687583177' AS TEXT))) ORDER BY (((rt0.c3))<((rt0.c0))) COLLATE NOCASE  NULLS LAST, json_insert(CASE WHEN rt0.c3 THEN rt0.c2 END, (((rt0.c0, rt0.c2, vt1.c0))>=((rt0.c1, 0.22094056186532596, vt1.c0))), CAST(rt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST('-687583177' AS TEXT))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3))<((rt0.c0))) COLLATE NOCASE  NULLS LAST, json_insert(CASE WHEN rt0.c3 THEN rt0.c2 END, (((rt0.c0, rt0.c2, vt1.c0))>=((rt0.c1, 0.22094056186532596, vt1.c0))), CAST(rt0.c0 AS BLOB)));
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((+ (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((+ (x'')))) DESC);
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((+ (x'')))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((+ (x'')))) DESC);
SELECT * FROM vt1, rt0 WHERE ((+ (((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0))))) ORDER BY (((rt0.c3 IN ())) BETWEEN (CAST(rt0.c3 AS INTEGER)) AND ((+ (x'')))) DESC;
SELECT * FROM rt0, vt1 WHERE ((('9') BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((vt1.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (rt0.c2)))) DESC  NULLS LAST, (((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.46348018932966695)), vt1.c0 COLLATE RTRIM, ((rt0.c3)&(rt0.c0)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('9') BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (rt0.c2)))) DESC  NULLS LAST, (((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.46348018932966695)), vt1.c0 COLLATE RTRIM, ((rt0.c3)&(rt0.c0)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((('9') BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((vt1.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (rt0.c2)))) DESC  NULLS LAST, (((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.46348018932966695)), vt1.c0 COLLATE RTRIM, ((rt0.c3)&(rt0.c0)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('9') BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (rt0.c2)))) DESC  NULLS LAST, (((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.46348018932966695)), vt1.c0 COLLATE RTRIM, ((rt0.c3)&(rt0.c0)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c0) NOTNULL)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((('9') BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1))) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY ((vt1.c0) BETWEEN (rt0.c2 COLLATE NOCASE) AND ((NOT (rt0.c2)))) DESC  NULLS LAST, (((vt1.c0, rt0.c2, rt0.c1)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (0.46348018932966695)), vt1.c0 COLLATE RTRIM, ((rt0.c3)&(rt0.c0)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c0) NOTNULL)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((0X7dd2e46f)||(rt0.c3))) ORDER BY UNLIKELY(UPPER(rt0.c2)) ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X7dd2e46f)||(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(UPPER(rt0.c2)) ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0X7dd2e46f)||(rt0.c3))) ORDER BY UNLIKELY(UPPER(rt0.c2)) ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0X7dd2e46f)||(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(UPPER(rt0.c2)) ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((0X7dd2e46f)||(rt0.c3))) ORDER BY UNLIKELY(UPPER(rt0.c2)) ASC, (- ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<(rt0.c2))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY ((x'85352604' IN (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<(rt0.c2))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((x'85352604' IN (vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<(rt0.c2))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY ((x'85352604' IN (vt1.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<(rt0.c2))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) ORDER BY ((x'85352604' IN (vt1.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON ((((rt0.c1)<(rt0.c2))) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE RTRIM)) WHERE (((rt0.c2) ISNULL) COLLATE RTRIM) ORDER BY ((x'85352604' IN (vt1.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c2)%(vt1.c0)))IS NOT(((((NULL)AND(rt0.c0)))AND(rt0.c3)))) WHERE (((CAST(vt1.c0 AS BLOB))*(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))*(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c2)%(vt1.c0)))IS NOT(((((NULL)AND(rt0.c0)))AND(rt0.c3)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c2)%(vt1.c0)))IS NOT(((((NULL)AND(rt0.c0)))AND(rt0.c3)))) WHERE (((CAST(vt1.c0 AS BLOB))*(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))*(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((rt0.c2)%(vt1.c0)))IS NOT(((((NULL)AND(rt0.c0)))AND(rt0.c3)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((rt0.c2)%(vt1.c0)))IS NOT(((((NULL)AND(rt0.c0)))AND(rt0.c3)))) WHERE (((CAST(vt1.c0 AS BLOB))*(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c0 END)));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('{w')))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR('{w')))*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('{w')))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))OR('{w')))*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))OR('{w')))*(CAST(vt1.c0 AS INTEGER)))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))LIKE(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt1 WHERE (1.915148938E9) ORDER BY (- ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.915148938E9) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (1.915148938E9) ORDER BY (- ((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((1.915148938E9) IS TRUE)  as count FROM vt1 ORDER BY (- ((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (1.915148938E9) ORDER BY (- ((vt1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((('1993777019')) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN '' END)) AND (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((1308665452)))))));
SELECT SUM(count) FROM (SELECT ((((('1993777019')) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN '' END)) AND (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((1308665452))))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((('1993777019')) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN '' END)) AND (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((1308665452)))))));
SELECT SUM(count) FROM (SELECT ((((('1993777019')) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN '' END)) AND (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((1308665452))))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((('1993777019')) NOT BETWEEN ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN '' END)) AND (((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((1308665452)))))));
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((vt1.c0)&(vt1.c0)))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE), (((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)<=(vt1.c0))))=((((vt1.c0)&(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE), (((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((vt1.c0)&(vt1.c0)))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE), (((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)<=(vt1.c0))))=((((vt1.c0)&(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE), (((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((((vt1.c0)<=(vt1.c0))))=((((vt1.c0)&(vt1.c0)))))) ORDER BY ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) IS TRUE), (((+ (vt1.c0))) NOT BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0))) AND (((vt1.c0)GLOB(vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ('1915148938') ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(0X108b6073)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1915148938') IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(0X108b6073)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ('1915148938') ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(0X108b6073)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1915148938') IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(0X108b6073)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ('1915148938') ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)==(0X108b6073)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<=((((rt0.c1)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((((rt0.c1)<=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<=((((rt0.c1)<=(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0))<=((((rt0.c1)<=(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<=((((rt0.c1)<=(rt0.c0))))));
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)%(rt0.c3)) AS TEXT)) ORDER BY CAST('O	' AS BLOB) ASC  NULLS LAST, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)<=(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)%(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST('O	' AS BLOB) ASC  NULLS LAST, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)<=(rt0.c2))) NOTNULL));
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)%(rt0.c3)) AS TEXT)) ORDER BY CAST('O	' AS BLOB) ASC  NULLS LAST, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)<=(rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)%(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST('O	' AS BLOB) ASC  NULLS LAST, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)<=(rt0.c2))) NOTNULL));
SELECT * FROM rt0 WHERE (CAST(((rt0.c3)%(rt0.c3)) AS TEXT)) ORDER BY CAST('O	' AS BLOB) ASC  NULLS LAST, (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) IN ())  NULLS FIRST, ((((rt0.c0)<=(rt0.c2))) NOTNULL);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) ORDER BY ((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (NULL) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (NULL) AND (vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) ORDER BY ((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (NULL) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR((vt1.c0 IN ()))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0 COLLATE BINARY)))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((json_object(vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) BETWEEN (NULL) AND (vt1.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((x'0ce7e40f' COLLATE NOCASE)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) ORDER BY ((vt1.c0)AND(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((x'0ce7e40f' COLLATE NOCASE)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0)AND(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((x'0ce7e40f' COLLATE NOCASE)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) ORDER BY ((vt1.c0)AND(rt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((x'0ce7e40f' COLLATE NOCASE)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0)AND(rt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c2)) BETWEEN ((x'0ce7e40f' COLLATE NOCASE)) AND (((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))))) ORDER BY ((vt1.c0)AND(rt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffff953e2777);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff953e2777) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffff953e2777);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff953e2777) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0Xffffffff953e2777);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS BLOB) AS TEXT)) ORDER BY vt1.c0 DESC;
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN -1285646056 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN -1285646056 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN -1285646056 THEN vt1.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN -1285646056 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) AND ((CASE WHEN -1285646056 THEN vt1.c0 END))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) ORDER BY (+ (0x4a28ecbf)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0x4a28ecbf)) ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) ORDER BY (+ (0x4a28ecbf)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0x4a28ecbf)) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(x'' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(x'' AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1))))) ORDER BY CAST(x'' AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1)!=(vt1.c0)) IN (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<>(vt1.c0)) IN (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1)!=(vt1.c0)) IN (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)<>(vt1.c0)) IN (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((((rt0.c1)!=(vt1.c0)) IN (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT * FROM vt1 WHERE (((vt1.c0)*(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)*(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c0)*(CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0) AND (vt1.c0)) DESC  NULLS FIRST, ((0.8190571761794438)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0) AND (vt1.c0)) DESC  NULLS FIRST, ((0.8190571761794438)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0) AND (vt1.c0)) DESC  NULLS FIRST, ((0.8190571761794438)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0) AND (vt1.c0)) DESC  NULLS FIRST, ((0.8190571761794438)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(vt1.c0, vt1.c0) COLLATE RTRIM COLLATE RTRIM) ORDER BY ((((vt1.c0) ISNULL)) BETWEEN (vt1.c0) AND (vt1.c0)) DESC  NULLS FIRST, ((0.8190571761794438)|(((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN '-1235948799' ELSE SUBSTR(rt0.c0, rt0.c1) END) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) IS FALSE) DESC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN '-1235948799' ELSE SUBSTR(rt0.c0, rt0.c1) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) IS FALSE) DESC, rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN '-1235948799' ELSE SUBSTR(rt0.c0, rt0.c1) END) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) IS FALSE) DESC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT NULL) THEN '-1235948799' ELSE SUBSTR(rt0.c0, rt0.c1) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) IS FALSE) DESC, rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1) NOT NULL) THEN '-1235948799' ELSE SUBSTR(rt0.c0, rt0.c1) END) ORDER BY ((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))OR(NULL)))AND(rt0.c0))) IS FALSE) DESC, rt0.c2  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ('177503372') ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (('177503372') IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1, rt0 WHERE ('177503372') ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ());
SELECT SUM(count) FROM (SELECT ALL (('177503372') IS TRUE)  as count FROM vt1, rt0 ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ()));
SELECT ALL * FROM vt1, rt0 WHERE ('177503372') ORDER BY (CAST(rt0.c3 AS NUMERIC) IN ());
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS TEXT)) ORDER BY x'' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c3))) IS TRUE)) ORDER BY (~ (DATETIME(rt0.c0, rt0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (DATETIME(rt0.c0, rt0.c2, rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c3))) IS TRUE)) ORDER BY (~ (DATETIME(rt0.c0, rt0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (~ (DATETIME(rt0.c0, rt0.c2, rt0.c2))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR(rt0.c3))) IS TRUE)) ORDER BY (~ (DATETIME(rt0.c0, rt0.c2, rt0.c2))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))<=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))<=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))<=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))<=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (x'') AND (vt1.c0)))<=(vt1.c0 COLLATE RTRIM)));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) IS TRUE)) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c0))>=((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)-(rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c0))>=((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c0))>=((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)-(rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c0))>=((rt0.c1))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c0)-(rt0.c2)) THEN rt0.c0 COLLATE RTRIM ELSE (((rt0.c0))>=((rt0.c1))) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c2)>>(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END END WHERE (((rt0.c2) NOT BETWEEN ('rK⨡<⑍C	') AND ((1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN ('rK⨡<⑍C	') AND ((1 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c2)>>(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c2)>>(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END END WHERE (((rt0.c2) NOT BETWEEN ('rK⨡<⑍C	') AND ((1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT BETWEEN ('rK⨡<⑍C	') AND ((1 IN ())))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c2)>>(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN (~ (rt0.c3)) THEN rt0.c3 COLLATE NOCASE WHEN ((rt0.c2)>>(rt0.c0)) THEN rt0.c2 COLLATE RTRIM WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN CAST(vt1.c0 AS INTEGER) ELSE CASE rt0.c1  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c1 END END WHERE (((rt0.c2) NOT BETWEEN ('rK⨡<⑍C	') AND ((1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)==(NULL))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)==(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)==(NULL))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)==(NULL))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0) ISNULL))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(((vt1.c0)==(NULL))))) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON '1915148938' WHERE ((((''))<((CASE rt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<((CASE rt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON '1915148938');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON '1915148938' WHERE ((((''))<((CASE rt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))));
SELECT SUM(count) FROM (SELECT ALL (((((''))<((CASE rt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON '1915148938');
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON '1915148938' WHERE ((((''))<((CASE rt0.c0  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END))));
SELECT * FROM vt1, rt0 WHERE (((((- (rt0.c2))))>((((rt0.c1)<>(rt0.c3)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND ((((vt1.c0, rt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c2))))>((((rt0.c1)<>(rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND ((((vt1.c0, rt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((- (rt0.c2))))>((((rt0.c1)<>(rt0.c3)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND ((((vt1.c0, rt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c3))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((- (rt0.c2))))>((((rt0.c1)<>(rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND ((((vt1.c0, rt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c3))))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (((((- (rt0.c2))))>((((rt0.c1)<>(rt0.c3)))))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN ((+ (rt0.c2))) AND ((((vt1.c0, rt0.c1, rt0.c1))<=((vt1.c0, rt0.c2, rt0.c3))))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)>=(rt0.c0)) IN ('-1393305206'))) ORDER BY rt0.c0 ASC  NULLS LAST, (NOT (json_array_length(rt0.c0, rt0.c2)))  NULLS LAST, ((((0.7260017951307169)AND(rt0.c1)))AND(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c0)) IN ('-1393305206'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST, (NOT (json_array_length(rt0.c0, rt0.c2)))  NULLS LAST, ((((0.7260017951307169)AND(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1)>=(rt0.c0)) IN ('-1393305206'))) ORDER BY rt0.c0 ASC  NULLS LAST, (NOT (json_array_length(rt0.c0, rt0.c2)))  NULLS LAST, ((((0.7260017951307169)AND(rt0.c1)))AND(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)>=(rt0.c0)) IN ('-1393305206'))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC  NULLS LAST, (NOT (json_array_length(rt0.c0, rt0.c2)))  NULLS LAST, ((((0.7260017951307169)AND(rt0.c1)))AND(rt0.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt1 WHERE ((('-1627335789')||(((rt0.c2)>(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) AND ((LENGTH(vt1.c0), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))), TYPEOF(DISTINCT vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1627335789')||(((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) AND ((LENGTH(vt1.c0), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))), TYPEOF(DISTINCT vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((('-1627335789')||(((rt0.c2)>(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) AND ((LENGTH(vt1.c0), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))), TYPEOF(DISTINCT vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1627335789')||(((rt0.c2)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) AND ((LENGTH(vt1.c0), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))), TYPEOF(DISTINCT vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((('-1627335789')||(((rt0.c2)>(rt0.c0))))) ORDER BY (((rt0.c3, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1 COLLATE RTRIM, (NOT (vt1.c0)), ((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))) AND ((LENGTH(vt1.c0), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c0))), TYPEOF(DISTINCT vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS REAL))) AND ((rt0.c3 COLLATE RTRIM, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c1)), ((rt0.c1)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS REAL))) AND ((rt0.c3 COLLATE RTRIM, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c1)), ((rt0.c1)IS NOT(rt0.c2))))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS REAL))) AND ((rt0.c3 COLLATE RTRIM, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c1)), ((rt0.c1)IS NOT(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS REAL))) AND ((rt0.c3 COLLATE RTRIM, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c1)), ((rt0.c1)IS NOT(rt0.c2))))));
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE) ORDER BY (((vt1.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS REAL))) AND ((rt0.c3 COLLATE RTRIM, ((((rt0.c1)AND(vt1.c0)))AND(rt0.c1)), ((rt0.c1)IS NOT(rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0)<(vt1.c0)), vt1.c0))<>((CAST(vt1.c0 AS BLOB), '-558032822', ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER), ((vt1.c0)<(vt1.c0)), vt1.c0))!=((CAST(vt1.c0 AS BLOB), '-558032822', ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0)<(vt1.c0)), vt1.c0))<>((CAST(vt1.c0 AS BLOB), '-558032822', ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c0 AS INTEGER), ((vt1.c0)<(vt1.c0)), vt1.c0))!=((CAST(vt1.c0 AS BLOB), '-558032822', ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((CAST(vt1.c0 AS INTEGER), ((vt1.c0)<(vt1.c0)), vt1.c0))<>((CAST(vt1.c0 AS BLOB), '-558032822', ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, ''))<((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (((rt0.c3)||(-0.0))) AND (((((((((rt0.c1)OR(1.77503372E8)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))) ORDER BY json_quote(UPPER(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, ''))<((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (((rt0.c3)||(-0.0))) AND (((((((((rt0.c1)OR(1.77503372E8)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(UPPER(rt0.c3)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, ''))<((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (((rt0.c3)||(-0.0))) AND (((((((((rt0.c1)OR(1.77503372E8)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))) ORDER BY json_quote(UPPER(rt0.c3));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, ''))<((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (((rt0.c3)||(-0.0))) AND (((((((((rt0.c1)OR(1.77503372E8)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(UPPER(rt0.c3)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, ''))<((rt0.c0, rt0.c1, rt0.c2)))) BETWEEN (((rt0.c3)||(-0.0))) AND (((((((((rt0.c1)OR(1.77503372E8)))OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c0))))) ORDER BY json_quote(UPPER(rt0.c3));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((rt0.c3)<<(rt0.c1)) WHERE (((CAST(rt0.c2 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((rt0.c3)<<(rt0.c1)));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((rt0.c3)<<(rt0.c1)) WHERE (((CAST(rt0.c2 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((rt0.c3)<<(rt0.c1)));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((rt0.c3)<<(rt0.c1)) WHERE (((CAST(rt0.c2 AS NUMERIC)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE RTRIM) ORDER BY (((((rt0.c1)GLOB(x''))))<=(((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)GLOB(x''))))<=(((+ (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE RTRIM) ORDER BY (((((rt0.c1)GLOB(x''))))<=(((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)GLOB(x''))))<=(((+ (rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c3) NOTNULL) COLLATE RTRIM) ORDER BY (((((rt0.c1)GLOB(x''))))<=(((+ (rt0.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c3)AND(rt0.c3)))OR(vt1.c0))) BETWEEN (((rt0.c0) BETWEEN (0x639e847c) AND (rt0.c1))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c3)))OR(vt1.c0))) BETWEEN (((rt0.c0) BETWEEN (0X639e847c) AND (rt0.c1))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c3)AND(rt0.c3)))OR(vt1.c0))) BETWEEN (((rt0.c0) BETWEEN (0x639e847c) AND (rt0.c1))) AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)AND(rt0.c3)))OR(vt1.c0))) BETWEEN (((rt0.c0) BETWEEN (0X639e847c) AND (rt0.c1))) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((((rt0.c3)AND(rt0.c3)))OR(vt1.c0))) BETWEEN (((rt0.c0) BETWEEN (0x639e847c) AND (rt0.c1))) AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+((vt1.c0 IN ())))) ORDER BY (((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END, ((rt0.c3)-(vt1.c0)), CAST(vt1.c0 AS INTEGER)))<((CAST(vt1.c0 AS NUMERIC), NULL, ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END, ((rt0.c3)-(vt1.c0)), CAST(vt1.c0 AS INTEGER)))<((CAST(vt1.c0 AS NUMERIC), NULL, ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+((vt1.c0 IN ())))) ORDER BY (((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END, ((rt0.c3)-(vt1.c0)), CAST(vt1.c0 AS INTEGER)))<((CAST(vt1.c0 AS NUMERIC), NULL, ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2) IS TRUE)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END, ((rt0.c3)-(vt1.c0)), CAST(vt1.c0 AS INTEGER)))<((CAST(vt1.c0 AS NUMERIC), NULL, ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2) IS TRUE)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c3))))+((vt1.c0 IN ())))) ORDER BY (((CASE rt0.c3  WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c0 END, ((rt0.c3)-(vt1.c0)), CAST(vt1.c0 AS INTEGER)))<((CAST(vt1.c0 AS NUMERIC), NULL, ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2))))) ASC  NULLS LAST, (((vt1.c0)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt0.c2) IS TRUE)))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((+ ((((rt0.c0))==((NULL))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))=((NULL)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ ((((rt0.c0))==((NULL))))));
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0))=((NULL)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ ((((rt0.c0))==((NULL))))));
SELECT * FROM rt0 WHERE (x'1307');
SELECT SUM(count) FROM (SELECT ALL ((x'1307') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'1307');
SELECT SUM(count) FROM (SELECT ALL ((x'1307') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'1307');
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1 IN (rt0.c3)))AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0))) AND (vt1.c0)) DESC, (+ (((((rt0.c2)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, 0xffffffffb45666f0;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c3)))AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0))) AND (vt1.c0)) DESC, (+ (((((rt0.c2)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, 0Xffffffffb45666f0);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1 IN (rt0.c3)))AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0))) AND (vt1.c0)) DESC, (+ (((((rt0.c2)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, 0xffffffffb45666f0;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1 IN (rt0.c3)))AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0))) AND (vt1.c0)) DESC, (+ (((((rt0.c2)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, 0Xffffffffb45666f0);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1 IN (rt0.c3)))AND(TRIM(rt0.c0))))OR(((((rt0.c1)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (((((((((vt1.c0)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c0))) AND (vt1.c0)) DESC, (+ (((((rt0.c2)OR(rt0.c1)))OR(NULL)))) DESC  NULLS LAST, 0xffffffffb45666f0;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(1246860951)) AS BLOB)) ORDER BY CASE COALESCE(DISTINCT NULL, 'h&c-5ᄱꠤ歞')  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(1246860951)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE COALESCE(DISTINCT NULL, 'h&c-5ᄱꠤ歞')  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(1246860951)) AS BLOB)) ORDER BY CASE COALESCE(DISTINCT NULL, 'h&c-5ᄱꠤ歞')  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c0)OR(rt0.c2)))AND(1246860951)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE COALESCE(DISTINCT NULL, 'h&c-5ᄱꠤ歞')  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((((rt0.c0)OR(rt0.c2)))AND(1246860951)) AS BLOB)) ORDER BY CASE COALESCE(DISTINCT NULL, 'h&c-5ᄱꠤ歞')  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c2 END;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c2))==((rt0.c3, rt0.c0, rt0.c0))), rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE NOCASE)) AND ((((rt0.c0)IS NOT(rt0.c0)), ((rt0.c3)/('')), '0.6188338149160283')))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c0) ISNULL)) AND ((- (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c2))==((rt0.c3, rt0.c0, rt0.c0))), rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE NOCASE)) AND ((((rt0.c0)IS NOT(rt0.c0)), ((rt0.c3)/('')), '0.6188338149160283')))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c0) ISNULL)) AND ((- (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c2))==((rt0.c3, rt0.c0, rt0.c0))), rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE NOCASE)) AND ((((rt0.c0)IS NOT(rt0.c0)), ((rt0.c3)/('')), '0.6188338149160283')))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c0) ISNULL)) AND ((- (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c2))==((rt0.c3, rt0.c0, rt0.c0))), rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE NOCASE)) AND ((((rt0.c0)IS NOT(rt0.c0)), ((rt0.c3)/('')), '0.6188338149160283')))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c0) ISNULL)) AND ((- (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c2))==((rt0.c3, rt0.c0, rt0.c0))), rt0.c2 COLLATE RTRIM, rt0.c0 COLLATE NOCASE)) AND ((((rt0.c0)IS NOT(rt0.c0)), ((rt0.c3)/('')), '0.6188338149160283')))) ORDER BY ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c0) ISNULL)) AND ((- (rt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (('')||(((rt0.c3)&(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (('')||(((rt0.c3)&(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (('')||(((rt0.c3)&(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (('')||(((rt0.c3)&(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS BLOB)) BETWEEN (rt0.c0) AND (CAST(rt0.c2 AS TEXT)))) ORDER BY (('')||(((rt0.c3)&(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c0 THEN '' END AS NUMERIC)) ORDER BY CAST(rt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c0 THEN '' END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c0 AS TEXT) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c0 THEN '' END AS NUMERIC)) ORDER BY CAST(rt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c0 THEN '' END AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(rt0.c0 AS TEXT) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c0 THEN '' END AS NUMERIC)) ORDER BY CAST(rt0.c0 AS TEXT) ASC;
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<((rt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)<((rt0.c0 IN (x''))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<((rt0.c0 IN (x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM)<((rt0.c0 IN (x''))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM)<((rt0.c0 IN (x'')))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON NULL WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)>(vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON NULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON NULL WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT rt0.c0, rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)>(vt1.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON NULL);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON NULL WHERE (((IFNULL(DISTINCT rt0.c0, rt0.c3)) BETWEEN (CAST(rt0.c3 AS REAL)) AND (((rt0.c2)>(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((NULLIF(rt0.c3, rt0.c0))AND(((rt0.c0)OR(rt0.c2)))))AND(ABS(rt0.c0)))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (highlight(rt0.c0, rt0.c0, vt1.c0, rt0.c0)) AND (((vt1.c0)-(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt0.c3, rt0.c0))AND(((rt0.c0)OR(rt0.c2)))))AND(ABS(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (highlight(rt0.c0, rt0.c0, vt1.c0, rt0.c0)) AND (((vt1.c0)-(NULL)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((NULLIF(rt0.c3, rt0.c0))AND(((rt0.c0)OR(rt0.c2)))))AND(ABS(rt0.c0)))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (highlight(rt0.c0, rt0.c0, vt1.c0, rt0.c0)) AND (((vt1.c0)-(NULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULLIF(rt0.c3, rt0.c0))AND(((rt0.c0)OR(rt0.c2)))))AND(ABS(rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (highlight(rt0.c0, rt0.c0, vt1.c0, rt0.c0)) AND (((vt1.c0)-(NULL)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM)IS(0Xffffffff8e92242f))) ORDER BY rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)IS(0xffffffff8e92242f))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM)IS(0Xffffffff8e92242f))) ORDER BY rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)IS(0xffffffff8e92242f))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 COLLATE RTRIM)IS(0Xffffffff8e92242f))) ORDER BY rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))||(TRIM(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))+('W'));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))||(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))+('W')));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))||(TRIM(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))+('W'));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))||(TRIM(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))+('W')));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))||(TRIM(rt0.c1)))) ORDER BY ((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)))+('W'));
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END) NOT NULL));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (1.40356202E9) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) NOT BETWEEN (1.40356202E9) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (1.40356202E9) AND ((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOTNULL)) NOT BETWEEN (1.40356202E9) AND ((rt0.c3 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) NOTNULL)) NOT BETWEEN (1.40356202E9) AND ((rt0.c3 IN ()))));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((0.12725245523187978)AND((rt0.c0 IN ()))))AND((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))))OR(((rt0.c3)IS(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (((TRIM(DISTINCT vt1.c0, rt0.c2), ((rt0.c3)GLOB(rt0.c1)), CAST(rt0.c3 AS BLOB)))<=((((vt1.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))  NULLS FIRST, ((NULL) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((0.12725245523187978)AND((rt0.c0 IN ()))))AND((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))))OR(((rt0.c3)IS(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((TRIM(DISTINCT vt1.c0, rt0.c2), ((rt0.c3)GLOB(rt0.c1)), CAST(rt0.c3 AS BLOB)))<=((((vt1.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))  NULLS FIRST, ((NULL) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((0.12725245523187978)AND((rt0.c0 IN ()))))AND((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))))OR(((rt0.c3)IS(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (((TRIM(DISTINCT vt1.c0, rt0.c2), ((rt0.c3)GLOB(rt0.c1)), CAST(rt0.c3 AS BLOB)))<=((((vt1.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))  NULLS FIRST, ((NULL) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((0.12725245523187978)AND((rt0.c0 IN ()))))AND((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))))OR(((rt0.c3)IS(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((TRIM(DISTINCT vt1.c0, rt0.c2), ((rt0.c3)GLOB(rt0.c1)), CAST(rt0.c3 AS BLOB)))<=((((vt1.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))  NULLS FIRST, ((NULL) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1))  NULLS FIRST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((0.12725245523187978)AND((rt0.c0 IN ()))))AND((((rt0.c0, vt1.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c3))))))OR(((rt0.c3)IS(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 END))) ORDER BY (((TRIM(DISTINCT vt1.c0, rt0.c2), ((rt0.c3)GLOB(rt0.c1)), CAST(rt0.c3 AS BLOB)))<=((((vt1.c0) NOTNULL), ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)<(rt0.c2)))))  NULLS FIRST, ((NULL) BETWEEN (CAST(rt0.c0 AS REAL)) AND (rt0.c1))  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*(rt0.c0 COLLATE NOCASE)) WHERE (x'05a9');
SELECT SUM(count) FROM (SELECT ALL ((x'05a9') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*(rt0.c0 COLLATE NOCASE)) WHERE (x'05a9');
SELECT SUM(count) FROM (SELECT ALL ((x'05a9') IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*(rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))*(rt0.c0 COLLATE NOCASE)) WHERE (x'05a9');
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)*((((rt0.c2))=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)*((((rt0.c2))==((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)*((((rt0.c2))=((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM)*((((rt0.c2))==((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM)*((((rt0.c2))=((rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((('舳')%(rt0.c1))) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN ((('舳')%(rt0.c1))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((('舳')%(rt0.c1))) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE NOCASE) BETWEEN ((('舳')%(rt0.c1))) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE NOCASE) BETWEEN ((('舳')%(rt0.c1))) AND (((rt0.c3) IS FALSE))));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3)IS(rt0.c0)))+(rt0.c0))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) DESC  NULLS LAST, ((NULL) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c0)))+(rt0.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) DESC  NULLS LAST, ((NULL) IS FALSE) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3)IS(rt0.c0)))+(rt0.c0))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) DESC  NULLS LAST, ((NULL) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c0)))+(rt0.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) DESC  NULLS LAST, ((NULL) IS FALSE) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c3)IS(rt0.c0)))+(rt0.c0))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN ()) DESC  NULLS LAST, ((NULL) IS FALSE) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((NOT (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL)) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((NOT (rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL)) IS FALSE)) ORDER BY ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1))) NOT BETWEEN ((~ (rt0.c2))) AND ((NOT (rt0.c0))));
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0 COLLATE RTRIM)AND((NOT (rt0.c2)))))AND(((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((('0.22094056186532596' IN (rt0.c0)))<=((('9.') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.22094056186532596' IN (rt0.c0)))<=((('9.') BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('0.22094056186532596' IN (rt0.c0)))<=((('9.') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((('0.22094056186532596' IN (rt0.c0)))<=((('9.') BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((('0.22094056186532596' IN (rt0.c0)))<=((('9.') BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (''))) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (''))) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (''))) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (''))) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (''))) BETWEEN (((vt1.c0)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT * FROM rt0, vt1 WHERE (((x'306b') NOT BETWEEN ('h&c-5ᄱꠤ歞') AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY HEX(rt0.c3) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((x'306b') NOT BETWEEN ('h&c-5ᄱꠤ歞') AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY HEX(rt0.c3) COLLATE RTRIM);
SELECT * FROM rt0, vt1 WHERE (((x'306b') NOT BETWEEN ('h&c-5ᄱꠤ歞') AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY HEX(rt0.c3) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((x'306b') NOT BETWEEN ('h&c-5ᄱꠤ歞') AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY HEX(rt0.c3) COLLATE RTRIM);
SELECT * FROM rt0, vt1 WHERE (((x'306b') NOT BETWEEN ('h&c-5ᄱꠤ歞') AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY HEX(rt0.c3) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ ((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ ((- (rt0.c0)))));
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))%((rt0.c0 IN (rt0.c3, rt0.c0, rt0.c2))))) ORDER BY CASE (- (rt0.c3))  WHEN (vt1.c0 IN ()) THEN rt0.c3 ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))%((rt0.c0 IN (rt0.c3, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (- (rt0.c3))  WHEN (vt1.c0 IN ()) THEN rt0.c3 ELSE rt0.c0 END);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))%((rt0.c0 IN (rt0.c3, rt0.c0, rt0.c2))))) ORDER BY CASE (- (rt0.c3))  WHEN (vt1.c0 IN ()) THEN rt0.c3 ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))%((rt0.c0 IN (rt0.c3, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE (- (rt0.c3))  WHEN (vt1.c0 IN ()) THEN rt0.c3 ELSE rt0.c0 END);
SELECT * FROM vt1, rt0 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(rt0.c3)))%((rt0.c0 IN (rt0.c3, rt0.c0, rt0.c2))))) ORDER BY CASE (- (rt0.c3))  WHEN (vt1.c0 IN ()) THEN rt0.c3 ELSE rt0.c0 END;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(HEX(rt0.c1) AS NUMERIC)) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=((rt0.c3 IN (vt1.c0, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=((rt0.c3 IN (vt1.c0, rt0.c0)))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(HEX(rt0.c1) AS NUMERIC)) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=((rt0.c3 IN (vt1.c0, rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(HEX(rt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=((rt0.c3 IN (vt1.c0, rt0.c0)))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(HEX(rt0.c1) AS NUMERIC)) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=((rt0.c3 IN (vt1.c0, rt0.c0)))) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL))==((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)IS NOT(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))==((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)IS NOT(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL))==((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)IS NOT(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))==((vt1.c0 IN (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)IS NOT(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0) ISNULL))==((vt1.c0 IN (vt1.c0))))) ORDER BY (((vt1.c0)IS NOT(vt1.c0)) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0)+(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('\r90oDk5' COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (('\r90oDk5' COLLATE RTRIM) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('\r90oDk5' COLLATE RTRIM) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (('\r90oDk5' COLLATE RTRIM) NOT NULL) DESC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('\r90oDk5' COLLATE RTRIM) NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (COALESCE(vt1.c0, vt1.c0)) AND (vt1.c0)));
SELECT * FROM rt0, vt1 WHERE (LIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST, (('-836509118')=(((rt0.c0)==(rt0.c1)))) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (+ (vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST, (('-836509118')=(((rt0.c0)==(rt0.c1)))) ASC, NULL DESC);
SELECT * FROM rt0, vt1 WHERE (LIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST, (('-836509118')=(((rt0.c0)==(rt0.c1)))) ASC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (+ (vt1.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST, (('-836509118')=(((rt0.c0)==(rt0.c1)))) ASC, NULL DESC);
SELECT * FROM rt0, vt1 WHERE (LIKELY(DISTINCT (+ (vt1.c0)))) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST, (('-836509118')=(((rt0.c0)==(rt0.c1)))) ASC, NULL DESC;
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))))AND(LTRIM(rt0.c2, rt0.c2))))AND((+ (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))))AND(LTRIM(rt0.c2, rt0.c2))))AND((+ (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))))AND(LTRIM(rt0.c2, rt0.c2))))AND((+ (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))))AND(LTRIM(rt0.c2, rt0.c2))))AND((+ (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((rt0.c1 COLLATE RTRIM)OR(((((rt0.c2)AND(rt0.c3)))OR(rt0.c0)))))AND(LTRIM(rt0.c2, rt0.c2))))AND((+ (rt0.c1)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT * FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT * FROM rt0, vt1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT * FROM rt0, vt1 WHERE (rt0.c0);
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (0.03458820029218557))) ORDER BY x'c769'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (0.03458820029218557))) IS TRUE)  as count FROM vt1 ORDER BY x'c769'  NULLS LAST);
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (0.03458820029218557))) ORDER BY x'c769'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (0.03458820029218557))) IS TRUE)  as count FROM vt1 ORDER BY x'c769'  NULLS LAST);
SELECT * FROM vt1 WHERE ((((- (vt1.c0))) BETWEEN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0))) AND (0.03458820029218557))) ORDER BY x'c769'  NULLS LAST;
SELECT * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY LIKELIHOOD(0.15857124710026083, 0.23129891102649414) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(0.15857124710026083, 0.23129891102649414) DESC);
SELECT * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY LIKELIHOOD(0.15857124710026083, 0.23129891102649414) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(0.15857124710026083, 0.23129891102649414) DESC);
SELECT * FROM vt1 WHERE (((NULL) ISNULL)) ORDER BY LIKELIHOOD(0.15857124710026083, 0.23129891102649414) DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS NUMERIC) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS NUMERIC) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c3 AS REAL) AS NUMERIC) WHERE (NULL);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)) ORDER BY UPPER(DISTINCT rt0.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c2, rt0.c1))=((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY UPPER(DISTINCT rt0.c2)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)) ORDER BY UPPER(DISTINCT rt0.c2)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1, rt0.c2, rt0.c1))=((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY UPPER(DISTINCT rt0.c2)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((((rt0.c1, rt0.c2, rt0.c1))==((rt0.c2, rt0.c0, rt0.c0))) AS BLOB)) ORDER BY UPPER(DISTINCT rt0.c2)  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))>>(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))>>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))>>(vt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))>>(vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c0 IN ()))>>(vt1.c0 COLLATE BINARY)));
SELECT ALL * FROM vt1 WHERE (372518774);
SELECT SUM(count) FROM (SELECT ((372518774) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (372518774);
SELECT SUM(count) FROM (SELECT ((372518774) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (372518774);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))LIKE(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))LIKE(((vt1.c0)-(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))LIKE(((vt1.c0)-(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ()))LIKE(((vt1.c0)-(vt1.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ('-Infinity') ORDER BY (- (UNICODE(0.15146214308543915))) ASC;
SELECT SUM(count) FROM (SELECT (('-Infinity') IS TRUE)  as count FROM vt1 ORDER BY (- (UNICODE(0.15146214308543915))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('-Infinity') ORDER BY (- (UNICODE(0.15146214308543915))) ASC;
SELECT SUM(count) FROM (SELECT (('-Infinity') IS TRUE)  as count FROM vt1 ORDER BY (- (UNICODE(0.15146214308543915))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('-Infinity') ORDER BY (- (UNICODE(0.15146214308543915))) ASC;
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY CASE WHEN (+ ('')) THEN vt1.c0 END ASC  NULLS LAST, (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (+ ('')) THEN vt1.c0 END ASC  NULLS LAST, (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, NULL);
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY CASE WHEN (+ ('')) THEN vt1.c0 END ASC  NULLS LAST, (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN (+ ('')) THEN vt1.c0 END ASC  NULLS LAST, (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, NULL);
SELECT * FROM vt1 WHERE ((~ ((vt1.c0 IN ())))) ORDER BY CASE WHEN (+ ('')) THEN vt1.c0 END ASC  NULLS LAST, (CAST(vt1.c0 AS BLOB) IN ())  NULLS FIRST, NULL;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE ((- (((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS TEXT)) ORDER BY (+ ('177503372'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (+ ('177503372'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS TEXT)) ORDER BY (+ ('177503372'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY (+ ('177503372'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (CAST((NOT (vt1.c0)) AS TEXT)) ORDER BY (+ ('177503372'))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)) IN ()));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY (((((NOT (rt0.c3)))OR(((rt0.c1)*(rt0.c1)))))AND(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)))) ASC  NULLS LAST, ((rt0.c2 COLLATE BINARY)+(((vt1.c0)||(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((NOT (rt0.c3)))OR(((rt0.c1)*(rt0.c1)))))AND(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)))) ASC  NULLS LAST, ((rt0.c2 COLLATE BINARY)+(((vt1.c0)||(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY (((((NOT (rt0.c3)))OR(((rt0.c1)*(rt0.c1)))))AND(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)))) ASC  NULLS LAST, ((rt0.c2 COLLATE BINARY)+(((vt1.c0)||(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((NOT (rt0.c3)))OR(((rt0.c1)*(rt0.c1)))))AND(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)))) ASC  NULLS LAST, ((rt0.c2 COLLATE BINARY)+(((vt1.c0)||(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((rt0.c3) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (rt0.c0))) ORDER BY (((((NOT (rt0.c3)))OR(((rt0.c1)*(rt0.c1)))))AND(((((rt0.c3)AND(vt1.c0)))AND(rt0.c1)))) ASC  NULLS LAST, ((rt0.c2 COLLATE BINARY)+(((vt1.c0)||(rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((NOT (vt1.c0))) NOTNULL));
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((x'2206') BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, (NOT (rt0.c2)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c0)-(vt1.c0)), (~ (rt0.c2)), ((vt1.c0) NOT NULL))))) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, (NOT (rt0.c2)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c0)-(vt1.c0)), (~ (rt0.c2)), ((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((x'2206') BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((x'2206') BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, (NOT (rt0.c2)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c0)-(vt1.c0)), (~ (rt0.c2)), ((vt1.c0) NOT NULL))))) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, (NOT (rt0.c2)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c0)-(vt1.c0)), (~ (rt0.c2)), ((vt1.c0) NOT NULL))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((x'2206') BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END) NOT NULL)  NULLS LAST);
SELECT * FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON ((((x'2206') BETWEEN (rt0.c0) AND (rt0.c1))) NOT NULL) WHERE ((((vt1.c0, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, (NOT (rt0.c2)), CAST(rt0.c0 AS BLOB))) AND ((((rt0.c0)-(vt1.c0)), (~ (rt0.c2)), ((vt1.c0) NOT NULL))))) ORDER BY ((CASE WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 ELSE vt1.c0 END THEN ((((rt0.c0)AND(rt0.c3)))AND(rt0.c0)) END);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))>=((rt0.c3)))) ORDER BY (- ('-401182503')), ((UPPER(DISTINCT vt1.c0)) BETWEEN (((rt0.c0)%(rt0.c3))) AND ((rt0.c3 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))>=((rt0.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ('-401182503')), ((UPPER(DISTINCT vt1.c0)) BETWEEN (((rt0.c0)%(rt0.c3))) AND ((rt0.c3 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))>=((rt0.c3)))) ORDER BY (- ('-401182503')), ((UPPER(DISTINCT vt1.c0)) BETWEEN (((rt0.c0)%(rt0.c3))) AND ((rt0.c3 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))>=((rt0.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ('-401182503')), ((UPPER(DISTINCT vt1.c0)) BETWEEN (((rt0.c0)%(rt0.c3))) AND ((rt0.c3 IN (vt1.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))))>=((rt0.c3)))) ORDER BY (- ('-401182503')), ((UPPER(DISTINCT vt1.c0)) BETWEEN (((rt0.c0)%(rt0.c3))) AND ((rt0.c3 IN (vt1.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (rt0.c2)) AS INTEGER)) ORDER BY CAST(vt1.c0 AS BLOB), COALESCE(((vt1.c0) NOTNULL), vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(vt1.c0 AS BLOB), COALESCE(((vt1.c0) NOTNULL), vt1.c0) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (rt0.c2)) AS INTEGER)) ORDER BY CAST(vt1.c0 AS BLOB), COALESCE(((vt1.c0) NOTNULL), vt1.c0) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(vt1.c0 AS BLOB), COALESCE(((vt1.c0) NOTNULL), vt1.c0) DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST((~ (rt0.c2)) AS INTEGER)) ORDER BY CAST(vt1.c0 AS BLOB), COALESCE(((vt1.c0) NOTNULL), vt1.c0) DESC;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (194978893) ORDER BY ((((rt0.c0)&(rt0.c1))) NOT NULL) ASC  NULLS LAST, (~ (((rt0.c3)GLOB(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((194978893) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((rt0.c0)&(rt0.c1))) NOT NULL) ASC  NULLS LAST, (~ (((rt0.c3)GLOB(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (194978893) ORDER BY ((((rt0.c0)&(rt0.c1))) NOT NULL) ASC  NULLS LAST, (~ (((rt0.c3)GLOB(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((194978893) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((rt0.c0)&(rt0.c1))) NOT NULL) ASC  NULLS LAST, (~ (((rt0.c3)GLOB(rt0.c2)))) DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (194978893) ORDER BY ((((rt0.c0)&(rt0.c1))) NOT NULL) ASC  NULLS LAST, (~ (((rt0.c3)GLOB(rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c0)=(rt0.c2))))) ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.09668507031637408)))))OR((((('-1211003946')OR(rt0.c0)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.09668507031637408)))))OR((((('-1211003946')OR(rt0.c0)))OR(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c0)=(rt0.c2))))) ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.09668507031637408)))))OR((((('-1211003946')OR(rt0.c0)))OR(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.09668507031637408)))))OR((((('-1211003946')OR(rt0.c0)))OR(rt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((rt0.c2 COLLATE NOCASE)GLOB(((rt0.c0)=(rt0.c2))))) ORDER BY (((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))OR(((vt1.c0) BETWEEN (vt1.c0) AND (0.09668507031637408)))))OR((((('-1211003946')OR(rt0.c0)))OR(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((rt0.c0) NOT NULL))))OR((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((rt0.c0) NOT NULL))))OR((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((rt0.c0) NOT NULL))))OR((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt0.c1)))OR(((rt0.c0) NOT NULL))))OR((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((+ (rt0.c1)))OR(((rt0.c0) NOT NULL))))OR((((rt0.c2, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c1, NULL, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)+(rt0.c3 COLLATE BINARY))) ORDER BY CASE (+ (rt0.c0))  WHEN ((((((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN '-1211003946' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END DESC, rt0.c1, ((IFNULL(x'', rt0.c3)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE (+ (rt0.c0))  WHEN ((((((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN '-1211003946' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END DESC, rt0.c1, ((IFNULL(x'', rt0.c3)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)+(rt0.c3 COLLATE BINARY))) ORDER BY CASE (+ (rt0.c0))  WHEN ((((((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN '-1211003946' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END DESC, rt0.c1, ((IFNULL(x'', rt0.c3)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)+(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY CASE (+ (rt0.c0))  WHEN ((((((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN '-1211003946' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END DESC, rt0.c1, ((IFNULL(x'', rt0.c3)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)+(rt0.c3 COLLATE BINARY))) ORDER BY CASE (+ (rt0.c0))  WHEN ((((((((((((NULL)OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)) THEN CASE WHEN '-1211003946' THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END END DESC, rt0.c1, ((IFNULL(x'', rt0.c3)) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(rt0.c1 AS INTEGER)))  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((rt0.c0)||((rt0.c1 IN ())))) ORDER BY (('-2126790201')<(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('-2126790201')<(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0)||((rt0.c1 IN ())))) ORDER BY (('-2126790201')<(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('-2126790201')<(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((rt0.c0)||((rt0.c1 IN ())))) ORDER BY (('-2126790201')<(rt0.c2 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c1))) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))  NULLS FIRST, (+ (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))  NULLS FIRST, (+ (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c1))) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))  NULLS FIRST, (+ (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))  NULLS FIRST, (+ (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((- (rt0.c1))) ORDER BY SQLITE_COMPILEOPTION_GET((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))  NULLS FIRST, (+ (((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))AND(NULL)) DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN x'1e3d' END)OR(LOWER(DISTINCT rt0.c2))))AND(TRIM(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c0))AND(NULL)) DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN x'1e3d' END)OR(LOWER(DISTINCT rt0.c2))))AND(TRIM(rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))AND(NULL)) DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN x'1e3d' END)OR(LOWER(DISTINCT rt0.c2))))AND(TRIM(rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c0))AND(NULL)) DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN x'1e3d' END)OR(LOWER(DISTINCT rt0.c2))))AND(TRIM(rt0.c3))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))AND(NULL)) DESC  NULLS FIRST, ((((CASE WHEN rt0.c0 THEN x'1e3d' END)OR(LOWER(DISTINCT rt0.c2))))AND(TRIM(rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c1 END) BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END))) ORDER BY LOWER(DISTINCT CAST(rt0.c1 AS NUMERIC)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c0)) IN ()));
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)AND(vt1.c0))))) ORDER BY '-1510932043'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1510932043'  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)AND(vt1.c0))))) ORDER BY '-1510932043'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY '-1510932043'  NULLS FIRST);
SELECT * FROM vt1 WHERE ((+ (((vt1.c0)AND(vt1.c0))))) ORDER BY '-1510932043'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((-1479240586)<<(rt0.c0))) AND (TRIM(DISTINCT rt0.c0, 0.023422886460801595)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((-1479240586)<<(rt0.c0))) AND (TRIM(DISTINCT rt0.c0, 0.023422886460801595)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((-1479240586)<<(rt0.c0))) AND (TRIM(DISTINCT rt0.c0, 0.023422886460801595)))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((-1479240586)<<(rt0.c0))) AND (TRIM(DISTINCT rt0.c0, 0.023422886460801595)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0))) NOT BETWEEN (((-1479240586)<<(rt0.c0))) AND (TRIM(DISTINCT rt0.c0, 0.023422886460801595)))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TRIM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3))));
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE TRIM(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE TRIM(rt0.c0) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE TRIM(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE TRIM(rt0.c0) END) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c2) IS TRUE) ELSE TRIM(rt0.c0) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(vt1.c0 AS REAL)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)AND(vt1.c0)) AS TEXT) WHERE ((((NOT ('隌^5zh^<z\')))-((((rt0.c0))==((rt0.c2)))))) ORDER BY (+ (((0.05432630054608534) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('隌^5zh^<z\')))-((((rt0.c0))==((rt0.c2)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)AND(vt1.c0)) AS TEXT) ORDER BY (+ (((0.05432630054608534) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)AND(vt1.c0)) AS TEXT) WHERE ((((NOT ('隌^5zh^<z\')))-((((rt0.c0))==((rt0.c2)))))) ORDER BY (+ (((0.05432630054608534) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('隌^5zh^<z\')))-((((rt0.c0))==((rt0.c2)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)AND(vt1.c0)) AS TEXT) ORDER BY (+ (((0.05432630054608534) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c1)AND(vt1.c0)) AS TEXT) WHERE ((((NOT ('隌^5zh^<z\')))-((((rt0.c0))==((rt0.c2)))))) ORDER BY (+ (((0.05432630054608534) BETWEEN (rt0.c0) AND (rt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (IFNULL(NULL, ((rt0.c3)GLOB(rt0.c0)))) ORDER BY ((((rt0.c1)!=(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(NULL, ((rt0.c3)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)!=(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (IFNULL(NULL, ((rt0.c3)GLOB(rt0.c0)))) ORDER BY ((((rt0.c1)!=(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(NULL, ((rt0.c3)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)!=(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (IFNULL(NULL, ((rt0.c3)GLOB(rt0.c0)))) ORDER BY ((((rt0.c1)!=(rt0.c2)))>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT NULL));
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE RTRIM)IS((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((0xffffffffa2998e7d IN ()))OR((NOT (vt1.c0)))))AND(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)IS((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((0Xffffffffa2998e7d IN ()))OR((NOT (vt1.c0)))))AND(CAST(NULL AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE RTRIM)IS((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((0xffffffffa2998e7d IN ()))OR((NOT (vt1.c0)))))AND(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)IS((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((0Xffffffffa2998e7d IN ()))OR((NOT (vt1.c0)))))AND(CAST(NULL AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE RTRIM)IS((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) ORDER BY (((((0xffffffffa2998e7d IN ()))OR((NOT (vt1.c0)))))AND(CAST(NULL AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) NOTNULL) AS REAL) WHERE (((x'')<(NULL))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')<(NULL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) NOTNULL) AS REAL) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) NOTNULL) AS REAL) WHERE (((x'')<(NULL))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'')<(NULL))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) NOTNULL) AS REAL) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON CAST(((rt0.c3) NOTNULL) AS REAL) WHERE (((x'')<(NULL))) ORDER BY (rt0.c1 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((~ (rt0.c2)) IN ()));
SELECT * FROM vt1, rt0 WHERE (CASE (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c3)))  WHEN rt0.c2 THEN (vt1.c0 IN (rt0.c0)) WHEN (((rt0.c1))<=((rt0.c1))) THEN CAST(rt0.c0 AS TEXT) WHEN (('') IS TRUE) THEN ((x'83e1') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c1 IN ()) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 END WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)==(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c3)))  WHEN rt0.c2 THEN (vt1.c0 IN (rt0.c0)) WHEN (((rt0.c1))<=((rt0.c1))) THEN CAST(rt0.c0 AS TEXT) WHEN (('') IS TRUE) THEN ((x'83e1') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c1 IN ()) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 END WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)=(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c3)))  WHEN rt0.c2 THEN (vt1.c0 IN (rt0.c0)) WHEN (((rt0.c1))<=((rt0.c1))) THEN CAST(rt0.c0 AS TEXT) WHEN (('') IS TRUE) THEN ((x'83e1') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c1 IN ()) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 END WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)==(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c3)))  WHEN rt0.c2 THEN (vt1.c0 IN (rt0.c0)) WHEN (((rt0.c1))<=((rt0.c1))) THEN CAST(rt0.c0 AS TEXT) WHEN (('') IS TRUE) THEN ((x'83e1') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c1 IN ()) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 END WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)=(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, vt1.c0, rt0.c3)))  WHEN rt0.c2 THEN (vt1.c0 IN (rt0.c0)) WHEN (((rt0.c1))<=((rt0.c1))) THEN CAST(rt0.c0 AS TEXT) WHEN (('') IS TRUE) THEN ((x'83e1') BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c1 IN ()) THEN CASE vt1.c0  WHEN x'' THEN vt1.c0 END WHEN ((rt0.c0) IS TRUE) THEN ((rt0.c2)==(rt0.c0)) END);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((vt1.c0 IN (vt1.c0)))>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((vt1.c0 IN (vt1.c0)))>>((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (vt1.c0)))>>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 NOT INDEXED WHERE ((((vt1.c0 IN (vt1.c0)))>>((vt1.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0) NOT NULL), ((((rt0.c2)AND(577981785)))AND(vt1.c0)), TIME(vt1.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c0, 9.87296565E8, rt0.c0)))>(('L', x'' COLLATE BINARY, (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT NULL), ((((rt0.c2)AND(577981785)))AND(vt1.c0)), TIME(vt1.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c0, 9.87296565E8, rt0.c0)))>(('L', x'' COLLATE BINARY, (~ (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0) NOT NULL), ((((rt0.c2)AND(577981785)))AND(vt1.c0)), TIME(vt1.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c0, 9.87296565E8, rt0.c0)))>(('L', x'' COLLATE BINARY, (~ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0) NOT NULL), ((((rt0.c2)AND(577981785)))AND(vt1.c0)), TIME(vt1.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c0, 9.87296565E8, rt0.c0)))>(('L', x'' COLLATE BINARY, (~ (vt1.c0)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0) NOT NULL), ((((rt0.c2)AND(577981785)))AND(vt1.c0)), TIME(vt1.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c0, 9.87296565E8, rt0.c0)))>(('L', x'' COLLATE BINARY, (~ (vt1.c0))))));
SELECT * FROM vt1 WHERE ('0.05659501614605977');
SELECT SUM(count) FROM (SELECT ALL (('0.05659501614605977') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('0.05659501614605977');
SELECT SUM(count) FROM (SELECT ALL (('0.05659501614605977') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ('0.05659501614605977');
SELECT ALL * FROM rt0 WHERE ((+ (SUBSTR(rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (SUBSTR(rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (SUBSTR(rt0.c3, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((+ (SUBSTR(rt0.c3, rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (SUBSTR(rt0.c3, rt0.c1))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ('\nF') ORDER BY -1007749504;
SELECT SUM(count) FROM (SELECT (('\nF') IS TRUE)  as count FROM rt0, vt1 ORDER BY -1007749504);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('\nF') ORDER BY -1007749504;
SELECT SUM(count) FROM (SELECT (('\nF') IS TRUE)  as count FROM rt0, vt1 ORDER BY -1007749504);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_quote(vt1.c0))!=(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(vt1.c0))<>(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_quote(vt1.c0))!=(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((json_quote(vt1.c0))<>(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((json_quote(vt1.c0))!=(((((((((x'')OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))/(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ()))/(((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))-(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))-(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ()))-(((vt1.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (TRIM(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (TRIM(DISTINCT vt1.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(((rt0.c3)%(rt0.c1)) AS INTEGER) ASC  NULLS FIRST, CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c1)))OR(0.4928515061229308)) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)%(rt0.c1)) AS INTEGER) ASC  NULLS FIRST, CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c1)))OR(0.4928515061229308)) ELSE rt0.c1 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(((rt0.c3)%(rt0.c1)) AS INTEGER) ASC  NULLS FIRST, CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c1)))OR(0.4928515061229308)) ELSE rt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3)%(rt0.c1)) AS INTEGER) ASC  NULLS FIRST, CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c1)))OR(0.4928515061229308)) ELSE rt0.c1 END DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (CAST(rt0.c1 AS TEXT)))) ORDER BY CAST(((rt0.c3)%(rt0.c1)) AS INTEGER) ASC  NULLS FIRST, CASE WHEN rt0.c3 COLLATE RTRIM THEN ((((rt0.c2)AND(rt0.c1)))OR(0.4928515061229308)) ELSE rt0.c1 END DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))&(((rt0.c0)<(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))&(((rt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))&(((rt0.c0)<(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))&(((rt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 ASC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))&(((rt0.c0)<(rt0.c0))))) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL IN ())) NOTNULL)) ORDER BY 0.9975328600650727  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.9975328600650727  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL IN ())) NOTNULL)) ORDER BY 0.9975328600650727  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0.9975328600650727  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((NULL IN ())) NOTNULL)) ORDER BY 0.9975328600650727  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.7061997467942711) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.7061997467942711) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.7061997467942711) DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.7061997467942711) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c2 IN ())) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.7061997467942711) DESC;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1))==((rt0.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c3)))))>((((((vt1.c0)AND(rt0.c3)))AND(324032588)))))) ORDER BY CASE ((rt0.c0)AND('-1105772725'))  WHEN ((rt0.c1)<=(rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c1 THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c3)-(rt0.c1)) THEN ((((x'baf0')AND(rt0.c3)))AND(rt0.c2)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1))==((rt0.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c3)))))>((((((vt1.c0)AND(rt0.c3)))AND(324032588)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CASE ((rt0.c0)AND('-1105772725'))  WHEN ((rt0.c1)<=(rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c1 THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c3)-(rt0.c1)) THEN ((((x'baf0')AND(rt0.c3)))AND(rt0.c2)) ELSE vt1.c0 END DESC);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1))==((rt0.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c3)))))>((((((vt1.c0)AND(rt0.c3)))AND(324032588)))))) ORDER BY CASE ((rt0.c0)AND('-1105772725'))  WHEN ((rt0.c1)<=(rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c1 THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c3)-(rt0.c1)) THEN ((((x'baf0')AND(rt0.c3)))AND(rt0.c2)) ELSE vt1.c0 END DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1))==((rt0.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c3)))))>((((((vt1.c0)AND(rt0.c3)))AND(324032588)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CASE ((rt0.c0)AND('-1105772725'))  WHEN ((rt0.c1)<=(rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c1 THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c3)-(rt0.c1)) THEN ((((x'baf0')AND(rt0.c3)))AND(rt0.c2)) ELSE vt1.c0 END DESC);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (((((((rt0.c0, rt0.c2, rt0.c3, vt1.c0, rt0.c1))==((rt0.c0, rt0.c0, vt1.c0, rt0.c0, rt0.c3)))))>((((((vt1.c0)AND(rt0.c3)))AND(324032588)))))) ORDER BY CASE ((rt0.c0)AND('-1105772725'))  WHEN ((rt0.c1)<=(rt0.c3)) THEN (rt0.c1 IN ()) WHEN rt0.c1 THEN ((((rt0.c2)AND(vt1.c0)))OR(vt1.c0)) WHEN ((rt0.c3)-(rt0.c1)) THEN ((((x'baf0')AND(rt0.c3)))AND(rt0.c2)) ELSE vt1.c0 END DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('542439593' COLLATE BINARY) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('542439593' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('542439593' COLLATE BINARY) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('542439593' COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ('542439593' COLLATE BINARY) ORDER BY rt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((~ ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((~ ((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ ((+ (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((~ ((+ (rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (load_extension(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (~ (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)), (~ (rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((('-1858153167')IS NOT(vt1.c0)) AS TEXT) WHERE (((TRIM(DISTINCT rt0.c3, rt0.c1))<(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c3, rt0.c1))<(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((('-1858153167')IS NOT(vt1.c0)) AS TEXT));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((('-1858153167')IS NOT(vt1.c0)) AS TEXT) WHERE (((TRIM(DISTINCT rt0.c3, rt0.c1))<(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT rt0.c3, rt0.c1))<(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((('-1858153167')IS NOT(vt1.c0)) AS TEXT));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST((('-1858153167')IS NOT(vt1.c0)) AS TEXT) WHERE (((TRIM(DISTINCT rt0.c3, rt0.c1))<(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (INSTR(CAST(rt0.c3 AS BLOB), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ((+ (rt0.c3))))) ORDER BY ((((rt0.c1) IS FALSE))+(rt0.c0 COLLATE BINARY)) DESC, (((rt0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((vt1.c0 IN (rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ((+ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) IS FALSE))+(rt0.c0 COLLATE BINARY)) DESC, (((rt0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((vt1.c0 IN (rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ((+ (rt0.c3))))) ORDER BY ((((rt0.c1) IS FALSE))+(rt0.c0 COLLATE BINARY)) DESC, (((rt0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((vt1.c0 IN (rt0.c3)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN ()) IN ((+ (rt0.c3))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) IS FALSE))+(rt0.c0 COLLATE BINARY)) DESC, (((rt0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((vt1.c0 IN (rt0.c3)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0 IN ()) IN ((+ (rt0.c3))))) ORDER BY ((((rt0.c1) IS FALSE))+(rt0.c0 COLLATE BINARY)) DESC, (((rt0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND (((vt1.c0 IN (rt0.c3)))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS INTEGER))) ORDER BY '-2003753309'  NULLS FIRST, ((('舳', vt1.c0, vt1.c0, vt1.c0, 0.46348018932966695)) BETWEEN ((((vt1.c0)OR(vt1.c0)), ((vt1.c0) NOT NULL), x'', CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY, x'', ((vt1.c0)>>(vt1.c0))))) ASC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR('6VJV*4')))) AND (((+ (vt1.c0)), ((vt1.c0) ISNULL), (('0|L*3ra')*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY '-2003753309'  NULLS FIRST, ((('舳', vt1.c0, vt1.c0, vt1.c0, 0.46348018932966695)) BETWEEN ((((vt1.c0)OR(vt1.c0)), ((vt1.c0) NOT NULL), x'', CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY, x'', ((vt1.c0)>>(vt1.c0))))) ASC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR('6VJV*4')))) AND (((+ (vt1.c0)), ((vt1.c0) ISNULL), (('0|L*3ra')*(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (load_extension(CAST(vt1.c0 AS INTEGER))) ORDER BY '-2003753309'  NULLS FIRST, ((('舳', vt1.c0, vt1.c0, vt1.c0, 0.46348018932966695)) BETWEEN ((((vt1.c0)OR(vt1.c0)), ((vt1.c0) NOT NULL), x'', CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY, x'', ((vt1.c0)>>(vt1.c0))))) ASC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR('6VJV*4')))) AND (((+ (vt1.c0)), ((vt1.c0) ISNULL), (('0|L*3ra')*(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt1.c0 AS INTEGER))) IS TRUE)  as count FROM vt1 ORDER BY '-2003753309'  NULLS FIRST, ((('舳', vt1.c0, vt1.c0, vt1.c0, 0.46348018932966695)) BETWEEN ((((vt1.c0)OR(vt1.c0)), ((vt1.c0) NOT NULL), x'', CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END, (vt1.c0 IN ()))) AND ((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) IS FALSE), vt1.c0 COLLATE BINARY, x'', ((vt1.c0)>>(vt1.c0))))) ASC, (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)), CAST(vt1.c0 AS INTEGER), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR('6VJV*4')))) AND (((+ (vt1.c0)), ((vt1.c0) ISNULL), (('0|L*3ra')*(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN x'' END)OR(((rt0.c3) ISNULL))))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c2 THEN x'' END)OR(((rt0.c3) ISNULL))))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN x'' END)OR(((rt0.c3) ISNULL))))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c2 THEN x'' END)OR(((rt0.c3) ISNULL))))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((((((((CASE WHEN rt0.c2 THEN x'' END)OR(((rt0.c3) ISNULL))))OR(((rt0.c3) NOTNULL))))OR(rt0.c2 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END)));
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<((((vt1.c0))<((NULL))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<((((vt1.c0))<((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<((((vt1.c0))<((NULL))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))<((((vt1.c0))<((NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<((((vt1.c0))<((NULL))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.7637556067548151) ORDER BY ((((rt0.c3)|(rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.7637556067548151) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c3)|(rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.7637556067548151) ORDER BY ((((rt0.c3)|(rt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0.7637556067548151) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c3)|(rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.7637556067548151) ORDER BY ((((rt0.c3)|(rt0.c1))) NOTNULL);
SELECT ALL * FROM rt0 WHERE (((((NULL) IS TRUE)) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL) IS TRUE)) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) IS TRUE)) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL) IS TRUE)) BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2, rt0.c2, rt0.c0))==((rt0.c0, rt0.c0, rt0.c2))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)+(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)+(rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)+(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1)+(rt0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE NOCASE) ORDER BY (rt0.c2 COLLATE NOCASE IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(NULL));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(NULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0 COLLATE BINARY) ORDER BY ((((DATE(rt0.c0, rt0.c0, rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)))))AND(NULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c2))<>((rt0.c2))) THEN ((vt1.c0)!=(vt1.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) WHEN (rt0.c2 IN (rt0.c0)) THEN -7.99047117E8 COLLATE RTRIM END) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2))!=((rt0.c2))) THEN ((vt1.c0)!=(vt1.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) WHEN (rt0.c2 IN (rt0.c0)) THEN -7.99047117E8 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (''))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c2))<>((rt0.c2))) THEN ((vt1.c0)!=(vt1.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) WHEN (rt0.c2 IN (rt0.c0)) THEN -7.99047117E8 COLLATE RTRIM END) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (''))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c2))!=((rt0.c2))) THEN ((vt1.c0)!=(vt1.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) WHEN (rt0.c2 IN (rt0.c0)) THEN -7.99047117E8 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (''))) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN (((rt0.c2))<>((rt0.c2))) THEN ((vt1.c0)!=(vt1.c0)) WHEN rt0.c3 COLLATE RTRIM THEN CAST(vt1.c0 AS REAL) WHEN (rt0.c2 IN (rt0.c0)) THEN -7.99047117E8 COLLATE RTRIM END) ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (''))) IS TRUE) ASC;
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (NULL);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT * FROM rt0, vt1 WHERE (LIKELY(((rt0.c3)IS(rt0.c1)))) ORDER BY (vt1.c0 IN (CAST(rt0.c1 AS INTEGER))) ASC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ('453412180') AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c3)IS(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c0 IN (CAST(rt0.c1 AS INTEGER))) ASC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ('453412180') AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) DESC, NULL ASC);
SELECT * FROM rt0, vt1 WHERE (LIKELY(((rt0.c3)IS(rt0.c1)))) ORDER BY (vt1.c0 IN (CAST(rt0.c1 AS INTEGER))) ASC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ('453412180') AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) DESC, NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c3)IS(rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c0 IN (CAST(rt0.c1 AS INTEGER))) ASC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ('453412180') AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) DESC, NULL ASC);
SELECT * FROM rt0, vt1 WHERE (LIKELY(((rt0.c3)IS(rt0.c1)))) ORDER BY (vt1.c0 IN (CAST(rt0.c1 AS INTEGER))) ASC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ('453412180') AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) DESC, NULL ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)*(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)*(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0)*(vt1.c0)) AS TEXT));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON LOWER(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))AND(0.2130766392582577)))OR('1957207887'))) WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LOWER(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))AND(0.2130766392582577)))OR('1957207887'))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON LOWER(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))AND(0.2130766392582577)))OR('1957207887'))) WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON LOWER(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))AND(0.2130766392582577)))OR('1957207887'))));
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON LOWER(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c3)))AND(0.2130766392582577)))OR('1957207887'))) WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT));
SELECT * FROM rt0, vt1 WHERE ((+ (x'')) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (x'')) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((+ (x'')) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (x'')) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((+ (x'')) COLLATE RTRIM COLLATE RTRIM);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN 'v)' END THEN ((rt0.c3)LIKE(rt0.c3)) WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (((rt0.c0))<((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY (((rt0.c0))<((CAST(rt0.c2 AS NUMERIC)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN 'v)' END THEN ((rt0.c3)LIKE(rt0.c3)) WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (((rt0.c0))<((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))<((CAST(rt0.c2 AS NUMERIC)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN 'v)' END THEN ((rt0.c3)LIKE(rt0.c3)) WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (((rt0.c0))<((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY (((rt0.c0))<((CAST(rt0.c2 AS NUMERIC)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN 'v)' END THEN ((rt0.c3)LIKE(rt0.c3)) WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (((rt0.c0))<((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))<((CAST(rt0.c2 AS NUMERIC)))) DESC);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN 'v)' END THEN ((rt0.c3)LIKE(rt0.c3)) WHEN ((((rt0.c2)AND(rt0.c3)))OR(rt0.c1)) THEN ((rt0.c1) NOT NULL) WHEN rt0.c0 THEN (((rt0.c0))<((rt0.c1))) ELSE ((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) END) ORDER BY (((rt0.c0))<((CAST(rt0.c2 AS NUMERIC)))) DESC;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 END)))OR((NOT (rt0.c2)))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 END)))OR((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 END)))OR((NOT (rt0.c2)))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 END)))OR((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((NULL)OR(CASE NULL  WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c0 END)))OR((NOT (rt0.c2)))) WHERE (CAST(((rt0.c1) BETWEEN (rt0.c3) AND (vt1.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((0.5744901058137749)OR(0.43401552050611225)))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((((((rt0.c3)OR(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((0.5744901058137749)OR(0.43401552050611225)))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((((((rt0.c3)OR(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((0.5744901058137749)OR(0.43401552050611225)))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((((((rt0.c3)OR(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((0.5744901058137749)OR(0.43401552050611225)))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((((((rt0.c3)OR(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c1) ORDER BY ((((((((0.5744901058137749)OR(0.43401552050611225)))AND(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))))AND(((((((((((((rt0.c3)OR(x'')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c1))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)IS(rt0.c3))) NOTNULL)) ORDER BY (((((NOT (rt0.c2)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((NOT (rt0.c2)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)IS(rt0.c3))) NOTNULL)) ORDER BY (((((NOT (rt0.c2)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((((NOT (rt0.c2)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (((((rt0.c2)IS(rt0.c3))) NOTNULL)) ORDER BY (((((NOT (rt0.c2)))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(NULLIF(rt0.c0, rt0.c3), rt0.c2)) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(NULLIF(rt0.c0, rt0.c3), rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS REAL)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(NULLIF(rt0.c0, rt0.c3), rt0.c2)) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(NULLIF(rt0.c0, rt0.c3), rt0.c2)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS REAL)) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(NULLIF(rt0.c0, rt0.c3), rt0.c2)) ORDER BY SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS REAL)) DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0Xffffffffa49b89d6 THEN x'' END)AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0xffffffffa49b89d6 THEN x'' END)AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0Xffffffffa49b89d6 THEN x'' END)AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN 0xffffffffa49b89d6 THEN x'' END)AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE WHEN 0Xffffffffa49b89d6 THEN x'' END)AND(CAST(rt0.c1 AS INTEGER))))AND(CAST(rt0.c2 AS TEXT))));
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((+ (1724139369)), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, 0.93026895399898)) AND ((0.591975639186882, rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0x394a5e4f ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((+ (1724139369)), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, 0.93026895399898)) AND ((0.591975639186882, rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0X394a5e4f ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((+ (1724139369)), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, 0.93026895399898)) AND ((0.591975639186882, rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0x394a5e4f ELSE rt0.c2 END))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((+ (1724139369)), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, 0.93026895399898)) AND ((0.591975639186882, rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0X394a5e4f ELSE rt0.c2 END)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (((+ (1724139369)), CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, 0.93026895399898)) AND ((0.591975639186882, rt0.c3 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN 0x394a5e4f ELSE rt0.c2 END))));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN rt0.c1 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE '-433207136' END WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END THEN (+ (rt0.c1)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN rt0.c1 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE '-433207136' END WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END THEN (+ (rt0.c1)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN rt0.c1 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE '-433207136' END WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END THEN (+ (rt0.c1)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE ELSE rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN rt0.c1 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE '-433207136' END WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END THEN (+ (rt0.c1)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE ELSE rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT COUNT(*) FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))  WHEN rt0.c1 THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE '-433207136' END WHEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 END THEN (+ (rt0.c1)) WHEN rt0.c0 THEN rt0.c2 COLLATE NOCASE ELSE rt0.c1 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)-(rt0.c3))) NOTNULL)) ORDER BY 0x5fbfc4e9 ASC, (~ (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0x5fbfc4e9 ASC, (~ (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)-(rt0.c3))) NOTNULL)) ORDER BY 0x5fbfc4e9 ASC, (~ (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)-(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY 0x5fbfc4e9 ASC, (~ (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c1 END))  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c2)||(vt1.c0)))OR((((rt0.c2)) BETWEEN ((0.543862594030853)) AND ((rt0.c0))))))OR((NOT (rt0.c3)))) WHERE (((IFNULL(rt0.c0, rt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c2)||(vt1.c0)))OR((((rt0.c2)) BETWEEN ((0.543862594030853)) AND ((rt0.c0))))))OR((NOT (rt0.c3)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c2)||(vt1.c0)))OR((((rt0.c2)) BETWEEN ((0.543862594030853)) AND ((rt0.c0))))))OR((NOT (rt0.c3)))) WHERE (((IFNULL(rt0.c0, rt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt0.c0, rt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c2)||(vt1.c0)))OR((((rt0.c2)) BETWEEN ((0.543862594030853)) AND ((rt0.c0))))))OR((NOT (rt0.c3)))));
SELECT * FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c2)||(vt1.c0)))OR((((rt0.c2)) BETWEEN ((0.543862594030853)) AND ((rt0.c0))))))OR((NOT (rt0.c3)))) WHERE (((IFNULL(rt0.c0, rt0.c0)) NOT NULL));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c3)))OR(rt0.c3))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)*(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)*(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)*(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM)*(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)*(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1 COLLATE NOCASE))>=((CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))>=((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1 COLLATE NOCASE))>=((CAST(vt1.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE NOCASE))>=((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c1 COLLATE NOCASE))>=((CAST(vt1.c0 AS BLOB)))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (0.19219953611414864) AND (NULL))) AND (TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (0.19219953611414864) AND (NULL))) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (0.19219953611414864) AND (NULL))) AND (TYPEOF(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)>(rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (0.19219953611414864) AND (NULL))) AND (TYPEOF(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1))) NOT BETWEEN (((rt0.c3) BETWEEN (0.19219953611414864) AND (NULL))) AND (TYPEOF(rt0.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY ((HEX(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c0)!=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c0)!=(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY ((HEX(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c0)!=(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((HEX(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c0)!=(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0) NOTNULL) IN ())) ORDER BY ((HEX(DISTINCT rt0.c2)) NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (((rt0.c0)!=(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))) DESC, ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1606403305 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB)))>((vt1.c0 COLLATE NOCASE, ((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)AND(x'bba6')))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))) DESC, ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1606403305 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB)))>((vt1.c0 COLLATE NOCASE, ((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)AND(x'bba6')))AND(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))) DESC, ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1606403305 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB)))>((vt1.c0 COLLATE NOCASE, ((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)AND(x'bba6')))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))) DESC, ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1606403305 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB)))>((vt1.c0 COLLATE NOCASE, ((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)AND(x'bba6')))AND(vt1.c0))))));
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)<(vt1.c0)))) AND ((((vt1.c0) NOTNULL)))) DESC, ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN 1606403305 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, CAST(vt1.c0 AS BLOB)))>((vt1.c0 COLLATE NOCASE, ((vt1.c0)GLOB(vt1.c0)), ((((vt1.c0)AND(x'bba6')))AND(vt1.c0)))));
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(rt0.c2) ELSE CAST(vt1.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(rt0.c2) ELSE CAST(vt1.c0 AS INTEGER) END  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(rt0.c2) ELSE CAST(vt1.c0 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(rt0.c2) ELSE CAST(vt1.c0 AS INTEGER) END  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(((vt1.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (~ (rt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN TRIM(rt0.c2) ELSE CAST(vt1.c0 AS INTEGER) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.25782608219539205)) BETWEEN ((CASE rt0.c0  WHEN 0.09357967231380115 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('-1441178200')<<(rt0.c0)))))) ORDER BY (('o	⃫b') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.25782608219539205)) BETWEEN ((CASE rt0.c0  WHEN 0.09357967231380115 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('-1441178200')<<(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('o	⃫b') ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.25782608219539205)) BETWEEN ((CASE rt0.c0  WHEN 0.09357967231380115 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('-1441178200')<<(rt0.c0)))))) ORDER BY (('o	⃫b') ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.25782608219539205)) BETWEEN ((CASE rt0.c0  WHEN 0.09357967231380115 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('-1441178200')<<(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (('o	⃫b') ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((0.25782608219539205)) BETWEEN ((CASE rt0.c0  WHEN 0.09357967231380115 THEN rt0.c0 ELSE rt0.c0 END)) AND (((('-1441178200')<<(rt0.c0)))))) ORDER BY (('o	⃫b') ISNULL)  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (IFNULL((~ (rt0.c1)), ((((-1.105772725E9)AND(rt0.c1)))OR(vt1.c0)))) ORDER BY CAST(((rt0.c3)+(rt0.c1)) AS REAL) ASC  NULLS LAST, '埠P<W4a뺫' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (rt0.c1)), ((((-1.105772725E9)AND(rt0.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c3)+(rt0.c1)) AS REAL) ASC  NULLS LAST, '埠P<W4a뺫' ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (IFNULL((~ (rt0.c1)), ((((-1.105772725E9)AND(rt0.c1)))OR(vt1.c0)))) ORDER BY CAST(((rt0.c3)+(rt0.c1)) AS REAL) ASC  NULLS LAST, '埠P<W4a뺫' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((~ (rt0.c1)), ((((-1.105772725E9)AND(rt0.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c3)+(rt0.c1)) AS REAL) ASC  NULLS LAST, '埠P<W4a뺫' ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (IFNULL((~ (rt0.c1)), ((((-1.105772725E9)AND(rt0.c1)))OR(vt1.c0)))) ORDER BY CAST(((rt0.c3)+(rt0.c1)) AS REAL) ASC  NULLS LAST, '埠P<W4a뺫' ASC  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((rt0.c1, vt1.c0, rt0.c2))<>((rt0.c1, rt0.c0, rt0.c1)))))!=(((rt0.c1 IN ())))) WHERE (((((0.2901756295852703)AND(((rt0.c1) NOTNULL))))OR((((rt0.c1, 0.046331710889801925, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (-824156295))) AND ((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.2901756295852703)AND(((rt0.c1) NOTNULL))))OR((((rt0.c1, 0.046331710889801925, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((rt0.c1, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1)))))<>(((rt0.c1 IN ())))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (-824156295))) AND ((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((rt0.c1, vt1.c0, rt0.c2))<>((rt0.c1, rt0.c0, rt0.c1)))))!=(((rt0.c1 IN ())))) WHERE (((((0.2901756295852703)AND(((rt0.c1) NOTNULL))))OR((((rt0.c1, 0.046331710889801925, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (-824156295))) AND ((- (vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.2901756295852703)AND(((rt0.c1) NOTNULL))))OR((((rt0.c1, 0.046331710889801925, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((rt0.c1, vt1.c0, rt0.c2))!=((rt0.c1, rt0.c0, rt0.c1)))))<>(((rt0.c1 IN ())))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (-824156295))) AND ((- (vt1.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((((rt0.c1, vt1.c0, rt0.c2))<>((rt0.c1, rt0.c0, rt0.c1)))))!=(((rt0.c1 IN ())))) WHERE (((((0.2901756295852703)AND(((rt0.c1) NOTNULL))))OR((((rt0.c1, 0.046331710889801925, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c1, rt0.c1, rt0.c3)))))) ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (((rt0.c2) BETWEEN (vt1.c0) AND (-824156295))) AND ((- (vt1.c0))))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (CAST(LIKELIHOOD(rt0.c3, 0.1344860205178846) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c3, 0.1344860205178846) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(LIKELIHOOD(rt0.c3, 0.1344860205178846) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(rt0.c3, 0.1344860205178846) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST(LIKELIHOOD(rt0.c3, 0.1344860205178846) AS NUMERIC));
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0, 0.6268742366767699, vt1.c0) WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.22094056186532596 WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0, 0.6268742366767699, vt1.c0) WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.22094056186532596 WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0, 0.6268742366767699, vt1.c0) WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.22094056186532596 WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0, 0.6268742366767699, vt1.c0) WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.22094056186532596 WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN COALESCE(vt1.c0, vt1.c0, 0.6268742366767699, vt1.c0) WHEN (~ (vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.22094056186532596 WHEN vt1.c0 THEN vt1.c0 END THEN (vt1.c0 IN ()) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL))))) ORDER BY (0xffffffffcea17c22 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (0Xffffffffcea17c22 IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL))))) ORDER BY (0xffffffffcea17c22 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL))))) IS TRUE)  as count FROM rt0 ORDER BY (0Xffffffffcea17c22 IN ()) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))&(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL))))) ORDER BY (0xffffffffcea17c22 IN ()) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c3))>((rt0.c1, 813650228, rt0.c3, rt0.c1, x'', rt0.c3, rt0.c1)))) IS TRUE)) ORDER BY ((0.93026895399898) NOT NULL) DESC  NULLS FIRST, (((('쓑*') IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c3))>((rt0.c1, 813650228, rt0.c3, rt0.c1, x'', rt0.c3, rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((0.93026895399898) NOT NULL) DESC  NULLS FIRST, (((('쓑*') IS FALSE)) ISNULL) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c3))>((rt0.c1, 813650228, rt0.c3, rt0.c1, x'', rt0.c3, rt0.c1)))) IS TRUE)) ORDER BY ((0.93026895399898) NOT NULL) DESC  NULLS FIRST, (((('쓑*') IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3, rt0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c3))>((rt0.c1, 813650228, rt0.c3, rt0.c1, x'', rt0.c3, rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((0.93026895399898) NOT NULL) DESC  NULLS FIRST, (((('쓑*') IS FALSE)) ISNULL) DESC);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c3, rt0.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c2, rt0.c3))>((rt0.c1, 813650228, rt0.c3, rt0.c1, x'', rt0.c3, rt0.c1)))) IS TRUE)) ORDER BY ((0.93026895399898) NOT NULL) DESC  NULLS FIRST, (((('쓑*') IS FALSE)) ISNULL) DESC;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (CASE ''  WHEN rt0.c0 THEN (((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, 0.7260017951307169)) AND ((rt0.c3, rt0.c2, rt0.c3, -1510932043, 1.957207887E9))) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN rt0.c0 THEN (((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, 0.7260017951307169)) AND ((rt0.c3, rt0.c2, rt0.c3, -1510932043, 1.957207887E9))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ''  WHEN rt0.c0 THEN (((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, 0.7260017951307169)) AND ((rt0.c3, rt0.c2, rt0.c3, -1510932043, 1.957207887E9))) END);
SELECT SUM(count) FROM (SELECT ((CASE ''  WHEN rt0.c0 THEN (((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, 0.7260017951307169)) AND ((rt0.c3, rt0.c2, rt0.c3, -1510932043, 1.957207887E9))) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE ''  WHEN rt0.c0 THEN (((rt0.c2, rt0.c2, rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c0, rt0.c3, 0.7260017951307169)) AND ((rt0.c3, rt0.c2, rt0.c3, -1510932043, 1.957207887E9))) END);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(UNICODE(vt1.c0))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(UNICODE(vt1.c0))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(UNICODE(vt1.c0))))AND(((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(UNICODE(vt1.c0))))AND(((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(UNICODE(vt1.c0))))AND(((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))>=((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM))>=((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))>=((vt1.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 COLLATE RTRIM))>=((vt1.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 COLLATE RTRIM))>=((vt1.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c0) ISNULL))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN (((((vt1.c0)OR(0.0630136888977828)))AND(vt1.c0)), (+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(vt1.c0)) IN (((((vt1.c0)OR(0.0630136888977828)))AND(vt1.c0)), (+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN (((((vt1.c0)OR(0.0630136888977828)))AND(vt1.c0)), (+ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)IS NOT(vt1.c0)) IN (((((vt1.c0)OR(0.0630136888977828)))AND(vt1.c0)), (+ (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)IS NOT(vt1.c0)) IN (((((vt1.c0)OR(0.0630136888977828)))AND(vt1.c0)), (+ (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN rt0 ON (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((~ (((vt1.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN rt0 ON (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((~ (((vt1.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))));
SELECT * FROM vt1 INNER JOIN rt0 ON (- (((rt0.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) WHERE ((~ (((vt1.c0)GLOB(rt0.c2)))));
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(vt1.c0));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (TRIM(DISTINCT (+ (rt0.c1)))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) ORDER BY (CAST(rt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c3)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (TRIM(DISTINCT (+ (rt0.c1)))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (+ (rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) ORDER BY (CAST(rt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c3)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON ((rt0.c2 COLLATE RTRIM) IS TRUE) WHERE (TRIM(DISTINCT (+ (rt0.c1)))) ORDER BY (CAST(rt0.c0 AS INTEGER) IN (rt0.c2 COLLATE NOCASE, (rt0.c0 IN (rt0.c3))));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY IFNULL(((vt1.c0) NOTNULL), (vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(((vt1.c0) NOTNULL), (vt1.c0 IN ())) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY IFNULL(((vt1.c0) NOTNULL), (vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(((vt1.c0) NOTNULL), (vt1.c0 IN ())) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((vt1.c0) NOT NULL))AND(CAST(vt1.c0 AS INTEGER))))OR(((vt1.c0)IS NOT(vt1.c0))))) ORDER BY IFNULL(((vt1.c0) NOTNULL), (vt1.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (json_type(0xffffffffaf27c547) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_type(0Xffffffffaf27c547) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_type(0xffffffffaf27c547) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((json_type(0Xffffffffaf27c547) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (json_type(0xffffffffaf27c547) COLLATE RTRIM);
SELECT * FROM vt1 WHERE (((HEX(DISTINCT '-InfHnity')) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), vt1.c0, CAST(vt1.c0 AS REAL)))<((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)), ((vt1.c0)-(vt1.c0)), (~ (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT '-InfHnity')) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), vt1.c0, CAST(vt1.c0 AS REAL)))<((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)), ((vt1.c0)-(vt1.c0)), (~ (vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((HEX(DISTINCT '-InfHnity')) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), vt1.c0, CAST(vt1.c0 AS REAL)))<((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)), ((vt1.c0)-(vt1.c0)), (~ (vt1.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT '-InfHnity')) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), vt1.c0, CAST(vt1.c0 AS REAL)))<((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)), ((vt1.c0)-(vt1.c0)), (~ (vt1.c0))))) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((HEX(DISTINCT '-InfHnity')) BETWEEN ((vt1.c0 IN ())) AND (vt1.c0 COLLATE NOCASE))) ORDER BY ((((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((NULL))), vt1.c0, CAST(vt1.c0 AS REAL)))<((((vt1.c0) BETWEEN (vt1.c0) AND (NULL)), ((vt1.c0)-(vt1.c0)), (~ (vt1.c0))))) ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((+ (rt0.c1))) NOTNULL));
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL));
SELECT * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NULL IN (((vt1.c0)==(rt0.c3)), (rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c0)==(rt0.c3)), (rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NULL IN (((vt1.c0)==(rt0.c3)), (rt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt1.c0)==(rt0.c3)), (rt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NULL IN (((vt1.c0)==(rt0.c3)), (rt0.c0 IN (rt0.c1)))));
SELECT * FROM vt1, rt0 WHERE (CASE x'3c4b'  WHEN (+ (rt0.c1)) THEN (((rt0.c3))>((rt0.c1))) ELSE '-1344387648' END);
SELECT SUM(count) FROM (SELECT ((CASE x'3c4b'  WHEN (+ (rt0.c1)) THEN (((rt0.c3))>((rt0.c1))) ELSE '-1344387648' END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE x'3c4b'  WHEN (+ (rt0.c1)) THEN (((rt0.c3))>((rt0.c1))) ELSE '-1344387648' END);
SELECT SUM(count) FROM (SELECT ((CASE x'3c4b'  WHEN (+ (rt0.c1)) THEN (((rt0.c3))>((rt0.c1))) ELSE '-1344387648' END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE x'3c4b'  WHEN (+ (rt0.c1)) THEN (((rt0.c3))>((rt0.c1))) ELSE '-1344387648' END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(vt1.c0 AS BLOB) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))/(((vt1.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.c0)))/(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))/(((vt1.c0)>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (vt1.c0, vt1.c0)))/(((vt1.c0)>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0 IN (vt1.c0, vt1.c0)))/(((vt1.c0)>(vt1.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (UPPER(CAST(rt0.c2 AS TEXT))) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c1) AND (NULL)))), TRIM(DISTINCT (+ (rt0.c2))) DESC, (~ (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3) BETWEEN (rt0.c1) AND (NULL)))), TRIM(DISTINCT (+ (rt0.c2))) DESC, (~ (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (UPPER(CAST(rt0.c2 AS TEXT))) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c1) AND (NULL)))), TRIM(DISTINCT (+ (rt0.c2))) DESC, (~ (rt0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3) BETWEEN (rt0.c1) AND (NULL)))), TRIM(DISTINCT (+ (rt0.c2))) DESC, (~ (rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (UPPER(CAST(rt0.c2 AS TEXT))) ORDER BY (- (((rt0.c3) BETWEEN (rt0.c1) AND (NULL)))), TRIM(DISTINCT (+ (rt0.c2))) DESC, (~ (rt0.c2)) COLLATE RTRIM;
SELECT * FROM rt0, vt1 WHERE (((((NULL)AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))OR((286362191 IN ())))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))OR((286362191 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 DESC);
SELECT * FROM rt0, vt1 WHERE (((((NULL)AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))OR((286362191 IN ())))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))OR((286362191 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c0 DESC);
SELECT * FROM rt0, vt1 WHERE (((((NULL)AND(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)))OR((286362191 IN ())))) ORDER BY rt0.c0 DESC;
SELECT * FROM rt0 WHERE (CASE WHEN '0.7637556067548151' THEN (('-2003753309')-('F[')) WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c2, rt0.c1, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2))) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (+ (rt0.c2)) ELSE (- ('987296565')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.7637556067548151' THEN (('-2003753309')-('F[')) WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c2, rt0.c1, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2))) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (+ (rt0.c2)) ELSE (- ('987296565')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN '0.7637556067548151' THEN (('-2003753309')-('F[')) WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c2, rt0.c1, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2))) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (+ (rt0.c2)) ELSE (- ('987296565')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.7637556067548151' THEN (('-2003753309')-('F[')) WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c2, rt0.c1, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2))) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (+ (rt0.c2)) ELSE (- ('987296565')) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN '0.7637556067548151' THEN (('-2003753309')-('F[')) WHEN rt0.c3 COLLATE RTRIM THEN (((rt0.c2, rt0.c1, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2))) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END THEN (+ (rt0.c2)) ELSE (- ('987296565')) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c1, 0.426096705075497))AND(QUOTE('0.05432630054608534'))))AND((- (rt0.c2))))) ORDER BY CAST(CAST(x'' AS TEXT) AS TEXT) DESC  NULLS FIRST, '' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT rt0.c1, 0.426096705075497))AND(QUOTE('0.05432630054608534'))))AND((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(x'' AS TEXT) AS TEXT) DESC  NULLS FIRST, '' COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c1, 0.426096705075497))AND(QUOTE('0.05432630054608534'))))AND((- (rt0.c2))))) ORDER BY CAST(CAST(x'' AS TEXT) AS TEXT) DESC  NULLS FIRST, '' COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT rt0.c1, 0.426096705075497))AND(QUOTE('0.05432630054608534'))))AND((- (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(x'' AS TEXT) AS TEXT) DESC  NULLS FIRST, '' COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((LIKELIHOOD(DISTINCT rt0.c1, 0.426096705075497))AND(QUOTE('0.05432630054608534'))))AND((- (rt0.c2))))) ORDER BY CAST(CAST(x'' AS TEXT) AS TEXT) DESC  NULLS FIRST, '' COLLATE RTRIM ASC;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, rt0.c1) WHERE (json_array(((rt0.c3)%(vt1.c0)), ((vt1.c0) ISNULL), CAST(rt0.c1 AS REAL), ((rt0.c1)GLOB(rt0.c1)))) ORDER BY NULL DESC, TRIM((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c3)%(vt1.c0)), ((vt1.c0) ISNULL), CAST(rt0.c1 AS REAL), ((rt0.c1)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, rt0.c1) ORDER BY NULL DESC, TRIM((- (rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, rt0.c1) WHERE (json_array(((rt0.c3)%(vt1.c0)), ((vt1.c0) ISNULL), CAST(rt0.c1 AS REAL), ((rt0.c1)GLOB(rt0.c1)))) ORDER BY NULL DESC, TRIM((- (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((rt0.c3)%(vt1.c0)), ((vt1.c0) ISNULL), CAST(rt0.c1 AS REAL), ((rt0.c1)GLOB(rt0.c1)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, rt0.c1) ORDER BY NULL DESC, TRIM((- (rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON IFNULL(DISTINCT rt0.c1 COLLATE RTRIM, rt0.c1) WHERE (json_array(((rt0.c3)%(vt1.c0)), ((vt1.c0) ISNULL), CAST(rt0.c1 AS REAL), ((rt0.c1)GLOB(rt0.c1)))) ORDER BY NULL DESC, TRIM((- (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ABS(rt0.c3) THEN (((0.4928266270917664, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, -1603700820)) AND ((0Xffffffff816b029f, rt0.c1, rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN ABS(rt0.c3) THEN (((0.4928266270917664, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, -1603700820)) AND ((0Xffffffff816b029f, rt0.c1, rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ABS(rt0.c3) THEN (((0.4928266270917664, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, -1603700820)) AND ((0Xffffffff816b029f, rt0.c1, rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE RTRIM  WHEN ABS(rt0.c3) THEN (((0.4928266270917664, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, -1603700820)) AND ((0Xffffffff816b029f, rt0.c1, rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c2 COLLATE RTRIM  WHEN ABS(rt0.c3) THEN (((0.4928266270917664, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, -1603700820)) AND ((0Xffffffff816b029f, rt0.c1, rt0.c3))) ELSE ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) ORDER BY (+ (json_array_length(rt0.c1, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (+ (json_array_length(rt0.c1, rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) ORDER BY (+ (json_array_length(rt0.c1, rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (+ (json_array_length(rt0.c1, rt0.c2)))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND('!H穞xXt')))AND(vt1.c0)))OR(x'2598')))OR(vt1.c0)))AND(vt1.c0))))<=((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND('!H穞xXt')))AND(vt1.c0)))OR(x'2598')))OR(vt1.c0)))AND(vt1.c0))))<=((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND('!H穞xXt')))AND(vt1.c0)))OR(x'2598')))OR(vt1.c0)))AND(vt1.c0))))<=((((vt1.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((((((((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND('!H穞xXt')))AND(vt1.c0)))OR(x'2598')))OR(vt1.c0)))AND(vt1.c0))))<=((((vt1.c0) IS TRUE))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((((((((((((((((vt1.c0)AND(NULL)))AND(vt1.c0)))AND(vt1.c0)))AND('!H穞xXt')))AND(vt1.c0)))OR(x'2598')))OR(vt1.c0)))AND(vt1.c0))))<=((((vt1.c0) IS TRUE)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))>=((rt0.c0))))>>(rt0.c2))) ORDER BY ((CASE WHEN 0.4928266270917664 THEN rt0.c3 END) NOT BETWEEN (LOWER(rt0.c3)) AND (rt0.c0))  NULLS LAST, STRFTIME(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((rt0.c0))))>>(rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN 0.4928266270917664 THEN rt0.c3 END) NOT BETWEEN (LOWER(rt0.c3)) AND (rt0.c0))  NULLS LAST, STRFTIME(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))>=((rt0.c0))))>>(rt0.c2))) ORDER BY ((CASE WHEN 0.4928266270917664 THEN rt0.c3 END) NOT BETWEEN (LOWER(rt0.c3)) AND (rt0.c0))  NULLS LAST, STRFTIME(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3))>=((rt0.c0))))>>(rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE WHEN 0.4928266270917664 THEN rt0.c3 END) NOT BETWEEN (LOWER(rt0.c3)) AND (rt0.c0))  NULLS LAST, STRFTIME(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c3))>=((rt0.c0))))>>(rt0.c2))) ORDER BY ((CASE WHEN 0.4928266270917664 THEN rt0.c3 END) NOT BETWEEN (LOWER(rt0.c3)) AND (rt0.c0))  NULLS LAST, STRFTIME(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)), CAST(rt0.c1 AS INTEGER), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) DESC;
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ABS(541991343) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.c0))  WHEN ABS(541991343) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ABS(541991343) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt1.c0))  WHEN ABS(541991343) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE (+ (vt1.c0))  WHEN ABS(541991343) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END);
SELECT ALL * FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CHANGES());
SELECT ALL * FROM vt1 WHERE (((((((((((((((((((vt1.c0)-(vt1.c0)))AND(0.7879631363968372)))OR((+ (vt1.c0)))))AND(((vt1.c0)>('')))))AND(ABS(DISTINCT vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0))) ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt1.c0)-(vt1.c0)))AND(0.7879631363968372)))OR((+ (vt1.c0)))))AND(((vt1.c0)>('')))))AND(ABS(DISTINCT vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((((vt1.c0)-(vt1.c0)))AND(0.7879631363968372)))OR((+ (vt1.c0)))))AND(((vt1.c0)>('')))))AND(ABS(DISTINCT vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0))) ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((((((vt1.c0)-(vt1.c0)))AND(0.7879631363968372)))OR((+ (vt1.c0)))))AND(((vt1.c0)>('')))))AND(ABS(DISTINCT vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC);
SELECT ALL * FROM vt1 WHERE (((((((((((((((((((vt1.c0)-(vt1.c0)))AND(0.7879631363968372)))OR((+ (vt1.c0)))))AND(((vt1.c0)>('')))))AND(ABS(DISTINCT vt1.c0))))AND(vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))AND(((vt1.c0)IS NOT(vt1.c0)))))AND(vt1.c0))) ORDER BY CASE WHEN ((vt1.c0)AND(vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END DESC;
SELECT * FROM vt1 WHERE (((x'33fb')-(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'33fb')-(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'33fb')-(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((x'33fb')-(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((x'33fb')-(vt1.c0)) COLLATE BINARY);
SELECT * FROM rt0, vt1 WHERE ((((((((rt0.c2))==((rt0.c3))))OR((((rt0.c0))!=((rt0.c0))))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0 IN ()))-(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))==((rt0.c3))))OR((((rt0.c0))<>((rt0.c0))))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ()))-(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt0, vt1 WHERE ((((((((rt0.c2))==((rt0.c3))))OR((((rt0.c0))!=((rt0.c0))))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0 IN ()))-(((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))==((rt0.c3))))OR((((rt0.c0))<>((rt0.c0))))))OR(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c0 IN ()))-(((rt0.c0) NOTNULL))) DESC);
SELECT * FROM rt0, vt1 WHERE ((((((((rt0.c2))==((rt0.c3))))OR((((rt0.c0))!=((rt0.c0))))))OR(CAST(vt1.c0 AS BLOB)))) ORDER BY (((vt1.c0 IN ()))-(((rt0.c0) NOTNULL))) DESC;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT ((((rt0.c3)AND(rt0.c2)))AND(vt1.c0))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (+ (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT ((((rt0.c3)AND(rt0.c2)))AND(vt1.c0))) ORDER BY (+ (rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT ((((rt0.c3)AND(rt0.c2)))AND(vt1.c0))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (+ (rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT ((((rt0.c3)AND(rt0.c2)))AND(vt1.c0))) ORDER BY (+ (rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON TRIM(DISTINCT ((((rt0.c3)AND(rt0.c2)))AND(vt1.c0))) WHERE (CAST(rt0.c1 COLLATE RTRIM AS TEXT)) ORDER BY (+ (rt0.c1)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))/(((vt1.c0) NOT BETWEEN (-1860076021) AND (vt1.c0))))) ORDER BY (('' COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST, (((vt1.c0))>=((vt1.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))/(((vt1.c0) NOT BETWEEN (-1860076021) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('' COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST, (((vt1.c0))>=((vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))/(((vt1.c0) NOT BETWEEN (-1860076021) AND (vt1.c0))))) ORDER BY (('' COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST, (((vt1.c0))>=((vt1.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt1.c0)))/(((vt1.c0) NOT BETWEEN (-1860076021) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (('' COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST, (((vt1.c0))>=((vt1.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((NOT (vt1.c0)))/(((vt1.c0) NOT BETWEEN (-1860076021) AND (vt1.c0))))) ORDER BY (('' COLLATE RTRIM) IS TRUE) ASC  NULLS FIRST, (((vt1.c0))>=((vt1.c0))) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('-1224657666' IN (rt0.c0)))LIKE(((((((((rt0.c0)AND(x'')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((('-1224657666' IN (rt0.c0)))LIKE(((((((((rt0.c0)AND(x'')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('-1224657666' IN (rt0.c0)))LIKE(((((((((rt0.c0)AND(x'')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((('-1224657666' IN (rt0.c0)))LIKE(((((((((rt0.c0)AND(x'')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('-1224657666' IN (rt0.c0)))LIKE(((((((((rt0.c0)AND(x'')))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)&((((rt0.c1))!=((0.6481812867974481)))))) ORDER BY ((CAST(0X204e21af AS NUMERIC))<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)&((((rt0.c1))<>((0.6481812867974481)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0x204e21af AS NUMERIC))<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)&((((rt0.c1))!=((0.6481812867974481)))))) ORDER BY ((CAST(0X204e21af AS NUMERIC))<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)&((((rt0.c1))<>((0.6481812867974481)))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(0x204e21af AS NUMERIC))<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3 COLLATE BINARY)&((((rt0.c1))!=((0.6481812867974481)))))) ORDER BY ((CAST(0X204e21af AS NUMERIC))<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2)AND(rt0.c2)))OR(0.4049967950286171)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2)))OR(0.4049967950286171)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2)AND(rt0.c2)))OR(0.4049967950286171)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c2)))OR(0.4049967950286171)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((((rt0.c2)AND(rt0.c2)))OR(0.4049967950286171)) IN ()));
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (0.6464951056872695))) ORDER BY (NOT (((vt1.c0)AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (0.6464951056872695))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)AND(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (0.6464951056872695))) ORDER BY (NOT (((vt1.c0)AND(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (0.6464951056872695))) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0)AND(vt1.c0)))) ASC);
SELECT * FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (0.6464951056872695))) ORDER BY (NOT (((vt1.c0)AND(vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 ELSE '1701806214' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 ELSE '1701806214' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 ELSE '1701806214' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 ELSE '1701806214' END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON rt0.c0 WHERE (CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c0 ELSE '1701806214' END);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c3)OR(((rt0.c2)IS NOT(rt0.c2)))))OR((((vt1.c0, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, vt1.c0)))))) ORDER BY CAST((((rt0.c2))<=((rt0.c0))) AS REAL) DESC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1)))<(((rt0.c2)&(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(((rt0.c2)IS NOT(rt0.c2)))))OR((((vt1.c0, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((((rt0.c2))<=((rt0.c0))) AS REAL) DESC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1)))<(((rt0.c2)&(rt0.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c3)OR(((rt0.c2)IS NOT(rt0.c2)))))OR((((vt1.c0, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, vt1.c0)))))) ORDER BY CAST((((rt0.c2))<=((rt0.c0))) AS REAL) DESC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1)))<(((rt0.c2)&(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)OR(((rt0.c2)IS NOT(rt0.c2)))))OR((((vt1.c0, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((((rt0.c2))<=((rt0.c0))) AS REAL) DESC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1)))<(((rt0.c2)&(rt0.c0))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c3)OR(((rt0.c2)IS NOT(rt0.c2)))))OR((((vt1.c0, rt0.c1, rt0.c0))<>((rt0.c1, rt0.c0, vt1.c0)))))) ORDER BY CAST((((rt0.c2))<=((rt0.c0))) AS REAL) DESC  NULLS FIRST, ((((rt0.c2)<=(rt0.c1)))<(((rt0.c2)&(rt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) NOTNULL)))) ORDER BY LIKELY('1308665452') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY('1308665452') DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) NOTNULL)))) ORDER BY LIKELY('1308665452') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY('1308665452') DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0) NOTNULL)))) ORDER BY LIKELY('1308665452') DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c2)))) ORDER BY ((rt0.c0)>(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)>(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c2)))) ORDER BY ((rt0.c0)>(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c2)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)>(rt0.c1)) COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c3)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c2)))) ORDER BY ((rt0.c0)>(rt0.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((-1827992063) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((-1827992063) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((-1827992063) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((-1827992063) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c0) ORDER BY (((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)), ((vt1.c0)||(vt1.c0)))) AND (((vt1.c0 IN ()), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ((-1827992063) BETWEEN (vt1.c0) AND (vt1.c0))))) ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c3)))|(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))|(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c3)))|(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN (rt0.c3)))|(rt0.c0)));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 494358685 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 494358685 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 494358685 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 494358685 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) BETWEEN (((NOT (vt1.c0)))) AND ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 494358685 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) ORDER BY (RTRIM(rt0.c1) IN (((((rt0.c2)AND(0.4959966366037809)))AND(rt0.c3)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (RTRIM(rt0.c1) IN (((((rt0.c2)AND(0.4959966366037809)))AND(rt0.c3)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) ORDER BY (RTRIM(rt0.c1) IN (((((rt0.c2)AND(0.4959966366037809)))AND(rt0.c3)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (RTRIM(rt0.c1) IN (((((rt0.c2)AND(0.4959966366037809)))AND(rt0.c3)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS BLOB)) ORDER BY (RTRIM(rt0.c1) IN (((((rt0.c2)AND(0.4959966366037809)))AND(rt0.c3)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS BLOB)) BETWEEN ((- (rt0.c0))) AND ((+ (rt0.c3)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((0.03458820029218557)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((0.03458820029218557)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((0.03458820029218557)) AND ((vt1.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) NOT BETWEEN ((0.03458820029218557)) AND ((vt1.c0))) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((rt0.c2)) NOT BETWEEN ((0.03458820029218557)) AND ((vt1.c0))) IN ()));
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT)) ORDER BY (((((((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))))AND(((((rt0.c0)AND(rt0.c1)))OR(rt0.c3)))) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-401182503')))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-401182503')))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-401182503')))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-401182503')))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((vt1.c0)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0, vt1.c0, '-401182503')))) BETWEEN (((vt1.c0)<(vt1.c0))) AND (((vt1.c0)AND(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2)LIKE(NULL)) THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE(NULL)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2)LIKE(NULL)) THEN (NOT (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)LIKE(NULL)) THEN (NOT (rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c2)LIKE(NULL)) THEN (NOT (rt0.c1)) END);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE (CAST('' AS NUMERIC)) ORDER BY ((0.543862594030853) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE ORDER BY ((0.543862594030853) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE (CAST('' AS NUMERIC)) ORDER BY ((0.543862594030853) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE ORDER BY ((0.543862594030853) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0) IS TRUE) COLLATE NOCASE WHERE (CAST('' AS NUMERIC)) ORDER BY ((0.543862594030853) ISNULL) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))<((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))) ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN CAST(x'' AS BLOB) WHEN ((0.10911845712356283)|(NULL)) THEN rt0.c3 COLLATE BINARY WHEN MIN(rt0.c3, rt0.c3, rt0.c0, NULL) THEN '-2070626253' END) ORDER BY ((x'') NOTNULL) COLLATE BINARY ASC, ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN CAST(x'' AS BLOB) WHEN ((0.10911845712356283)|(NULL)) THEN rt0.c3 COLLATE BINARY WHEN MIN(rt0.c3, rt0.c3, rt0.c0, NULL) THEN '-2070626253' END) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOTNULL) COLLATE BINARY ASC, ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN CAST(x'' AS BLOB) WHEN ((0.10911845712356283)|(NULL)) THEN rt0.c3 COLLATE BINARY WHEN MIN(rt0.c3, rt0.c3, rt0.c0, NULL) THEN '-2070626253' END) ORDER BY ((x'') NOTNULL) COLLATE BINARY ASC, ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (rt0.c0)) THEN CAST(x'' AS BLOB) WHEN ((0.10911845712356283)|(NULL)) THEN rt0.c3 COLLATE BINARY WHEN MIN(rt0.c3, rt0.c3, rt0.c0, NULL) THEN '-2070626253' END) IS TRUE)  as count FROM rt0 ORDER BY ((x'') NOTNULL) COLLATE BINARY ASC, ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN (- (rt0.c0)) THEN CAST(x'' AS BLOB) WHEN ((0.10911845712356283)|(NULL)) THEN rt0.c3 COLLATE BINARY WHEN MIN(rt0.c3, rt0.c3, rt0.c0, NULL) THEN '-2070626253' END) ORDER BY ((x'') NOTNULL) COLLATE BINARY ASC, ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c0))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0) ISNULL) IN ()) WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (((rt0.c2) IS TRUE)) AND (vt1.c0)));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((((((rt0.c1))<>((rt0.c1))))OR(((vt1.c0)IS(vt1.c0)))))AND(CAST(rt0.c3 AS NUMERIC))) WHERE (('SR' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('SR' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((((rt0.c1))<>((rt0.c1))))OR(((vt1.c0)IS(vt1.c0)))))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((((((rt0.c1))<>((rt0.c1))))OR(((vt1.c0)IS(vt1.c0)))))AND(CAST(rt0.c3 AS NUMERIC))) WHERE (('SR' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('SR' IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (((((((rt0.c1))<>((rt0.c1))))OR(((vt1.c0)IS(vt1.c0)))))AND(CAST(rt0.c3 AS NUMERIC))));
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON (((((((rt0.c1))<>((rt0.c1))))OR(((vt1.c0)IS(vt1.c0)))))AND(CAST(rt0.c3 AS NUMERIC))) WHERE (('SR' IN ()));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, -2126654988, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, -2126654988, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, -2126654988, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, -2126654988, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0, -2126654988, vt1.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, NULL)))) NOT BETWEEN (x'') AND (CAST(vt1.c0 AS TEXT))));
SELECT ALL * FROM rt0, vt1 WHERE (((json_remove(rt0.c2, rt0.c1, vt1.c0, rt0.c1, NULL, rt0.c3)) IS TRUE)) ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c0))<=((vt1.c0))) THEN (- (rt0.c0)) ELSE (('-1344387648') NOT BETWEEN (vt1.c0) AND (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c2, rt0.c1, vt1.c0, rt0.c1, NULL, rt0.c3)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c0))<=((vt1.c0))) THEN (- (rt0.c0)) ELSE (('-1344387648') NOT BETWEEN (vt1.c0) AND (rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((json_remove(rt0.c2, rt0.c1, vt1.c0, rt0.c1, NULL, rt0.c3)) IS TRUE)) ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c0))<=((vt1.c0))) THEN (- (rt0.c0)) ELSE (('-1344387648') NOT BETWEEN (vt1.c0) AND (rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_remove(rt0.c2, rt0.c1, vt1.c0, rt0.c1, NULL, rt0.c3)) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (rt0.c2 IN ())  WHEN (((rt0.c0))<=((vt1.c0))) THEN (- (rt0.c0)) ELSE (('-1344387648') NOT BETWEEN (vt1.c0) AND (rt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ('-1727526785') ORDER BY (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1727526785') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ('-1727526785') ORDER BY (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1727526785') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ('-1727526785') ORDER BY (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c1)), 0.7899918102208967 COLLATE NOCASE, (+ (rt0.c2))))!=((((rt0.c2) NOTNULL), ((rt0.c1) BETWEEN (-1858153167) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c1)), 0.7899918102208967 COLLATE NOCASE, (+ (rt0.c2))))<>((((rt0.c2) NOTNULL), ((rt0.c1) BETWEEN (-1858153167) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c1)), 0.7899918102208967 COLLATE NOCASE, (+ (rt0.c2))))!=((((rt0.c2) NOTNULL), ((rt0.c1) BETWEEN (-1858153167) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c1)), 0.7899918102208967 COLLATE NOCASE, (+ (rt0.c2))))<>((((rt0.c2) NOTNULL), ((rt0.c1) BETWEEN (-1858153167) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c1)), 0.7899918102208967 COLLATE NOCASE, (+ (rt0.c2))))!=((((rt0.c2) NOTNULL), ((rt0.c1) BETWEEN (-1858153167) AND (rt0.c1)), (((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT ALL * FROM rt0 WHERE (((0.05659501614605977) BETWEEN ((NOT (rt0.c3))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.05659501614605977) BETWEEN ((NOT (rt0.c3))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0.05659501614605977) BETWEEN ((NOT (rt0.c3))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.05659501614605977) BETWEEN ((NOT (rt0.c3))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((0.05659501614605977) BETWEEN ((NOT (rt0.c3))) AND ((rt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)GLOB(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)GLOB(NULL))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CAST(vt1.c0 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0)GLOB(NULL)))));
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'')AND(rt0.c3)))OR(rt0.c2))) IS FALSE)) ORDER BY ((LIKELY(DISTINCT ''))+((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.731118771390639, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LIKELY(DISTINCT ''))+((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.731118771390639, rt0.c3))))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'')AND(rt0.c3)))OR(rt0.c2))) IS FALSE)) ORDER BY ((LIKELY(DISTINCT ''))+((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.731118771390639, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))OR(rt0.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((LIKELY(DISTINCT ''))+((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.731118771390639, rt0.c3))))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((((x'')AND(rt0.c3)))OR(rt0.c2))) IS FALSE)) ORDER BY ((LIKELY(DISTINCT ''))+((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c1)) AND ((rt0.c0, 0.731118771390639, rt0.c3))))) ASC;
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('&Q');
SELECT SUM(count) FROM (SELECT ALL (('&Q') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('&Q');
SELECT SUM(count) FROM (SELECT ALL (('&Q') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('&Q');
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)<(rt0.c1))) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)<(rt0.c1))) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)<(rt0.c1))) AND ((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)<(rt0.c1))) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (((rt0.c1)<(rt0.c1))) AND ((NOT (rt0.c0)))));
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE BINARY);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('w6') ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN '1346183403' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('w6') ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN '1346183403' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('w6') ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN '1346183403' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('w6') ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN '1346183403' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('w6') ISNULL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND ((rt0.c2 IN ())))) ORDER BY ((((((rt0.c1) NOT NULL))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END)))AND(CASE WHEN rt0.c3 THEN rt0.c2 WHEN '1346183403' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c3 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT rt0.c3 COLLATE RTRIM, CASE ''  WHEN vt1.c0 THEN x'' ELSE rt0.c3 END)) ORDER BY UPPER(DISTINCT ((rt0.c1) BETWEEN (0.7437158425589626) AND (vt1.c0))) DESC  NULLS LAST, 0.8126228411948054 DESC, CASE WHEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN rt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (0.3955317742069496 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c3 COLLATE RTRIM, CASE ''  WHEN vt1.c0 THEN x'' ELSE rt0.c3 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(DISTINCT ((rt0.c1) BETWEEN (0.7437158425589626) AND (vt1.c0))) DESC  NULLS LAST, 0.8126228411948054 DESC, CASE WHEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN rt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (0.3955317742069496 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT rt0.c3 COLLATE RTRIM, CASE ''  WHEN vt1.c0 THEN x'' ELSE rt0.c3 END)) ORDER BY UPPER(DISTINCT ((rt0.c1) BETWEEN (0.7437158425589626) AND (vt1.c0))) DESC  NULLS LAST, 0.8126228411948054 DESC, CASE WHEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN rt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (0.3955317742069496 IN ()) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT rt0.c3 COLLATE RTRIM, CASE ''  WHEN vt1.c0 THEN x'' ELSE rt0.c3 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY UPPER(DISTINCT ((rt0.c1) BETWEEN (0.7437158425589626) AND (vt1.c0))) DESC  NULLS LAST, 0.8126228411948054 DESC, CASE WHEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN rt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (0.3955317742069496 IN ()) END  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (COALESCE(DISTINCT rt0.c3 COLLATE RTRIM, CASE ''  WHEN vt1.c0 THEN x'' ELSE rt0.c3 END)) ORDER BY UPPER(DISTINCT ((rt0.c1) BETWEEN (0.7437158425589626) AND (vt1.c0))) DESC  NULLS LAST, 0.8126228411948054 DESC, CASE WHEN ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c0)) THEN rt0.c1 WHEN (rt0.c3 IN ()) THEN ((rt0.c1) ISNULL) WHEN rt0.c1 THEN ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE (0.3955317742069496 IN ()) END  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(vt1.c0 AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((vt1.c0)))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>((vt1.c0)))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))));
SELECT * FROM rt0 WHERE ((((((((rt0.c3))=((rt0.c1))))AND(CASE WHEN rt0.c0 THEN 372518774 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))==((rt0.c1))))AND(CASE WHEN rt0.c0 THEN 372518774 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c3))=((rt0.c1))))AND(CASE WHEN rt0.c0 THEN 372518774 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3))==((rt0.c1))))AND(CASE WHEN rt0.c0 THEN 372518774 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c3))=((rt0.c1))))AND(CASE WHEN rt0.c0 THEN 372518774 ELSE rt0.c1 END)))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((+ (''))) ORDER BY (- ((rt0.c1 IN (rt0.c1, rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (- ((rt0.c1 IN (rt0.c1, rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((+ (''))) ORDER BY (- ((rt0.c1 IN (rt0.c1, rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (- ((rt0.c1 IN (rt0.c1, rt0.c2)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((+ (''))) ORDER BY (- ((rt0.c1 IN (rt0.c1, rt0.c2)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c3)) BETWEEN (((((rt0.c0, rt0.c0, x''))>=((rt0.c3, rt0.c1, rt0.c2))))) AND ((((rt0.c1)*(rt0.c1))))), rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN (((((rt0.c0, rt0.c0, x''))>=((rt0.c3, rt0.c1, rt0.c2))))) AND ((((rt0.c1)*(rt0.c1))))), rt0.c2 ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c3)) BETWEEN (((((rt0.c0, rt0.c0, x''))>=((rt0.c3, rt0.c1, rt0.c2))))) AND ((((rt0.c1)*(rt0.c1))))), rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN (((((rt0.c0, rt0.c0, x''))>=((rt0.c3, rt0.c1, rt0.c2))))) AND ((((rt0.c1)*(rt0.c1))))), rt0.c2 ASC);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (((rt0.c3)) BETWEEN (((((rt0.c0, rt0.c0, x''))>=((rt0.c3, rt0.c1, rt0.c2))))) AND ((((rt0.c1)*(rt0.c1))))), rt0.c2 ASC;
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) ISNULL));
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ())) ISNULL));
SELECT * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((vt1.c0 IN ())) ISNULL);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)%(rt0.c0)), (+ (rt0.c3)), CAST(rt0.c2 AS INTEGER), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CAST(rt0.c2 AS NUMERIC), 'lR', (NOT ('-856423868')), ((rt0.c1)OR(rt0.c2)), ((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)%(rt0.c0)), (+ (rt0.c3)), CAST(rt0.c2 AS INTEGER), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CAST(rt0.c2 AS NUMERIC), 'lR', (NOT ('-856423868')), ((rt0.c1)OR(rt0.c2)), ((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)%(rt0.c0)), (+ (rt0.c3)), CAST(rt0.c2 AS INTEGER), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CAST(rt0.c2 AS NUMERIC), 'lR', (NOT ('-856423868')), ((rt0.c1)OR(rt0.c2)), ((rt0.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)%(rt0.c0)), (+ (rt0.c3)), CAST(rt0.c2 AS INTEGER), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CAST(rt0.c2 AS NUMERIC), 'lR', (NOT ('-856423868')), ((rt0.c1)OR(rt0.c2)), ((rt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c3)%(rt0.c0)), (+ (rt0.c3)), CAST(rt0.c2 AS INTEGER), (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) AND ((CAST(rt0.c2 AS NUMERIC), 'lR', (NOT ('-856423868')), ((rt0.c1)OR(rt0.c2)), ((rt0.c0) NOT NULL)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN '-1' THEN rt0.c0 END)AND(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN '-1' THEN rt0.c0 END)AND(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN '-1' THEN rt0.c0 END)AND(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN '-1' THEN rt0.c0 END)AND(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CASE WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c1 THEN vt1.c0 WHEN '-1' THEN rt0.c0 END)AND(rt0.c3 COLLATE BINARY)))AND(CASE WHEN rt0.c1 THEN rt0.c0 END)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(((rt0.c0)%(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)%(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(((rt0.c0)%(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c0)%(rt0.c3)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF(((rt0.c0)%(rt0.c3))));
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, (((rt0.c3)=(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, (((rt0.c3)==(rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, (((rt0.c3)=(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS FALSE)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, (((rt0.c3)==(rt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN ())) IS FALSE)) ORDER BY CAST(x'' AS TEXT) DESC  NULLS LAST, (((rt0.c3)=(rt0.c1)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (CAST(vt1.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 AS REAL)) ORDER BY (+ (CAST(vt1.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT ((rt0.c3 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT ((rt0.c3 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT ((rt0.c3 IN (rt0.c3)))));
SELECT COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0))))<=((ABS(DISTINCT 0.3912049523723681), (('-1235948799') NOTNULL), ((((vt1.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY (((('	l')AND(CASE x''  WHEN vt1.c0 THEN -1.533310506E9 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.682469306444303))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0))))<=((ABS(DISTINCT 0.3912049523723681), (('-1235948799') NOTNULL), ((((vt1.c0)AND(NULL)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((('	l')AND(CASE x''  WHEN vt1.c0 THEN -1.533310506E9 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.682469306444303))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0))))<=((ABS(DISTINCT 0.3912049523723681), (('-1235948799') NOTNULL), ((((vt1.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY (((('	l')AND(CASE x''  WHEN vt1.c0 THEN -1.533310506E9 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.682469306444303))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0))))<=((ABS(DISTINCT 0.3912049523723681), (('-1235948799') NOTNULL), ((((vt1.c0)AND(NULL)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((('	l')AND(CASE x''  WHEN vt1.c0 THEN -1.533310506E9 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.682469306444303))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((CASE WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c0) NOTNULL), ((vt1.c0)>>(vt1.c0))))<=((ABS(DISTINCT 0.3912049523723681), (('-1235948799') NOTNULL), ((((vt1.c0)AND(NULL)))AND(vt1.c0)))))) ORDER BY (((('	l')AND(CASE x''  WHEN vt1.c0 THEN -1.533310506E9 ELSE vt1.c0 END)))OR(((((vt1.c0)AND(vt1.c0)))OR(0.682469306444303))))  NULLS FIRST, (+ (vt1.c0)) COLLATE BINARY DESC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))/(CASE WHEN ')VY<1lC ' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))/(CASE WHEN ')VY<1lC ' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))/(CASE WHEN ')VY<1lC ' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS INTEGER))/(CASE WHEN ')VY<1lC ' THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS INTEGER))/(CASE WHEN ')VY<1lC ' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND('%S?')));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>=(vt1.c0)))AND(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND('%S?'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND('%S?')));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)>=(vt1.c0)))AND(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND('%S?'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c0)>=(vt1.c0)))AND(CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END)))AND('%S?')));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)), ((vt1.c0)AND(rt0.c0)), ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE NOCASE))<((((rt0.c2)IS(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)), (rt0.c3 IN ()), (rt0.c2 IN ()), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)), ((vt1.c0)AND(rt0.c0)), ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE NOCASE))<((((rt0.c2)IS(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)), (rt0.c3 IN ()), (rt0.c2 IN ()), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)), ((vt1.c0)AND(rt0.c0)), ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE NOCASE))<((((rt0.c2)IS(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)), (rt0.c3 IN ()), (rt0.c2 IN ()), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)), ((vt1.c0)AND(rt0.c0)), ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE NOCASE))<((((rt0.c2)IS(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)), (rt0.c3 IN ()), (rt0.c2 IN ()), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c0)), ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)), ((vt1.c0)AND(rt0.c0)), ((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)), rt0.c1 COLLATE NOCASE))<((((rt0.c2)IS(rt0.c0)), ((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)), (rt0.c3 IN ()), (rt0.c2 IN ()), ((((rt0.c0)AND(vt1.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (((((NULL)>(vt1.c0)))IS(LIKELY(DISTINCT vt1.c0)))) ORDER BY ((((vt1.c0)-(vt1.c0))) NOT NULL)  NULLS FIRST, ((((vt1.c0)*(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(vt1.c0)))IS(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0))) NOT NULL)  NULLS FIRST, ((((vt1.c0)*(vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL)>(vt1.c0)))IS(LIKELY(DISTINCT vt1.c0)))) ORDER BY ((((vt1.c0)-(vt1.c0))) NOT NULL)  NULLS FIRST, ((((vt1.c0)*(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)>(vt1.c0)))IS(LIKELY(DISTINCT vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)-(vt1.c0))) NOT NULL)  NULLS FIRST, ((((vt1.c0)*(vt1.c0))) IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((NULL)>(vt1.c0)))IS(LIKELY(DISTINCT vt1.c0)))) ORDER BY ((((vt1.c0)-(vt1.c0))) NOT NULL)  NULLS FIRST, ((((vt1.c0)*(vt1.c0))) IS TRUE) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0))) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0) IS FALSE) IN ());
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS FALSE) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((((rt0.c3)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (((rt0.c0) IS FALSE) IN ());
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3 COLLATE BINARY)OR((rt0.c0 IN ()))))OR(rt0.c1))) ORDER BY (LAST_INSERT_ROWID() IN (((rt0.c3)==(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE BINARY)OR((rt0.c0 IN ()))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (LAST_INSERT_ROWID() IN (((rt0.c3)=(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3 COLLATE BINARY)OR((rt0.c0 IN ()))))OR(rt0.c1))) ORDER BY (LAST_INSERT_ROWID() IN (((rt0.c3)==(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 COLLATE BINARY)OR((rt0.c0 IN ()))))OR(rt0.c1))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (LAST_INSERT_ROWID() IN (((rt0.c3)=(rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c3 COLLATE BINARY)OR((rt0.c0 IN ()))))OR(rt0.c1))) ORDER BY (LAST_INSERT_ROWID() IN (((rt0.c3)==(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) END WHERE ((((rt0.c3))>((rt0.c1))) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) END ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) END WHERE ((((rt0.c3))>((rt0.c1))) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3))>((rt0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) END ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CASE ((rt0.c3) NOT NULL)  WHEN (NOT (rt0.c1)) THEN CAST(rt0.c1 AS REAL) END WHERE ((((rt0.c3))>((rt0.c1))) COLLATE NOCASE) ORDER BY (NOT (((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0))>((vt1.c0))), ((vt1.c0)>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))<>((((vt1.c0)<=(x'')), (NOT ('355406129')), vt1.c0 COLLATE RTRIM)))) ORDER BY (~ (0.6501913239140681))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>((vt1.c0))), ((vt1.c0)>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))!=((((vt1.c0)<=(x'')), (NOT ('355406129')), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (0.6501913239140681))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0))>((vt1.c0))), ((vt1.c0)>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))<>((((vt1.c0)<=(x'')), (NOT ('355406129')), vt1.c0 COLLATE RTRIM)))) ORDER BY (~ (0.6501913239140681))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0))>((vt1.c0))), ((vt1.c0)>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))!=((((vt1.c0)<=(x'')), (NOT ('355406129')), vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (0.6501913239140681))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0))>((vt1.c0))), ((vt1.c0)>(vt1.c0)), CASE WHEN vt1.c0 THEN vt1.c0 END))<>((((vt1.c0)<=(x'')), (NOT ('355406129')), vt1.c0 COLLATE RTRIM)))) ORDER BY (~ (0.6501913239140681))  NULLS LAST;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ()) WHERE ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))=((rt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c0))))IS(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c0))))IS(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ()) WHERE ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))=((rt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c0))))IS(CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))==((rt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c0))))IS(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ()));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((rt0.c2) IS FALSE) IN ()) WHERE ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c0, rt0.c2))=((rt0.c0, rt0.c1, vt1.c0, rt0.c3, rt0.c0))))IS(CAST(rt0.c1 AS INTEGER))));
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))OR((NOT (vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))OR((NOT (vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))OR((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))OR((NOT (vt1.c0))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((vt1.c0 IN (vt1.c0, vt1.c0)) COLLATE BINARY) ORDER BY ((vt1.c0)IS(rt0.c2)) COLLATE RTRIM ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('', rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt0.c3, '\nf', rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((('', rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt0.c3, '\nf', rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('', rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt0.c3, '\nf', rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((('', rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt0.c3, '\nf', rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('', rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, NULL, rt0.c3)) AND ((rt0.c3, '\nf', rt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((rt0.c3, x'', rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, x'', rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((rt0.c3, x'', rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c3, x'', rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((NOT ((((rt0.c3, x'', rt0.c1)) NOT BETWEEN ((rt0.c2, vt1.c0, rt0.c1)) AND ((rt0.c3, rt0.c0, rt0.c3))))));
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0))<((vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt1.c0))<((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((- ((((vt1.c0))<((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('1069758806' AS REAL) ELSE ((vt1.c0)=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('1069758806' AS REAL) ELSE ((vt1.c0)=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('1069758806' AS REAL) ELSE ((vt1.c0)=(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('1069758806' AS REAL) ELSE ((vt1.c0)=(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CAST(vt1.c0 AS TEXT) THEN CAST('1069758806' AS REAL) ELSE ((vt1.c0)=(vt1.c0)) END);
SELECT * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (SQLITE_VERSION());
SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(rt0.c2))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, 0xffffffff9528ac13 DESC  NULLS FIRST, ((rt0.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, 0Xffffffff9528ac13 DESC  NULLS FIRST, ((rt0.c2) IS TRUE) ASC);
SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(rt0.c2))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, 0xffffffff9528ac13 DESC  NULLS FIRST, ((rt0.c2) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, 0Xffffffff9528ac13 DESC  NULLS FIRST, ((rt0.c2) IS TRUE) ASC);
SELECT * FROM rt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))OR((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))OR(rt0.c2))) ORDER BY ((rt0.c0 IN ()) IN ()) DESC  NULLS LAST, 0xffffffff9528ac13 DESC  NULLS FIRST, ((rt0.c2) IS TRUE) ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (json_patch(rt0.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND('-1838114912'))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND('-1838114912')))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (json_patch(rt0.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND('-1838114912'))));
SELECT SUM(count) FROM (SELECT ((json_patch(rt0.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND('-1838114912')))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (json_patch(rt0.c0 COLLATE RTRIM, ((((((((rt0.c2)OR(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND('-1838114912'))));
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1)))&((((vt1.c0, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c2, rt0.c2)))))) ORDER BY (((NOT (rt0.c2)))<=(TIME(vt1.c0, rt0.c3, rt0.c2, rt0.c2, vt1.c0))), ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c1)))&((((vt1.c0, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((NOT (rt0.c2)))<=(TIME(vt1.c0, rt0.c3, rt0.c2, rt0.c2, vt1.c0))), ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1)))&((((vt1.c0, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c2, rt0.c2)))))) ORDER BY (((NOT (rt0.c2)))<=(TIME(vt1.c0, rt0.c3, rt0.c2, rt0.c2, vt1.c0))), ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(rt0.c1)))&((((vt1.c0, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c2, rt0.c2)))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((NOT (rt0.c2)))<=(TIME(vt1.c0, rt0.c3, rt0.c2, rt0.c2, vt1.c0))), ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END)  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c0)>(rt0.c1)))&((((vt1.c0, rt0.c3, rt0.c2))>=((rt0.c3, rt0.c2, rt0.c2)))))) ORDER BY (((NOT (rt0.c2)))<=(TIME(vt1.c0, rt0.c3, rt0.c2, rt0.c2, vt1.c0))), ABS(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 END)  NULLS LAST;
SELECT * FROM rt0 WHERE (((SQLITE_VERSION()) NOTNULL)) ORDER BY CAST(LTRIM(rt0.c3, rt0.c3) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(LTRIM(rt0.c3, rt0.c3) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((SQLITE_VERSION()) NOTNULL)) ORDER BY CAST(LTRIM(rt0.c3, rt0.c3) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((SQLITE_VERSION()) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(LTRIM(rt0.c3, rt0.c3) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((SQLITE_VERSION()) NOTNULL)) ORDER BY CAST(LTRIM(rt0.c3, rt0.c3) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt0 INNER JOIN vt1 ON (+ (1994434480)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (+ (1994434480)));
SELECT * FROM rt0 INNER JOIN vt1 ON (+ (1994434480)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (+ (1994434480)));
SELECT * FROM rt0 INNER JOIN vt1 ON (+ (1994434480)) WHERE (((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY HEX(NULL) COLLATE BINARY, (((((((((NOT (rt0.c3)))OR(((-1105772725)>>(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((('mP') IS TRUE))))AND(CASE x'ac58'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY HEX(NULL) COLLATE BINARY, (((((((((NOT (rt0.c3)))OR(((-1105772725)>>(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((('mP') IS TRUE))))AND(CASE x'ac58'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY HEX(NULL) COLLATE BINARY, (((((((((NOT (rt0.c3)))OR(((-1105772725)>>(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((('mP') IS TRUE))))AND(CASE x'ac58'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY HEX(NULL) COLLATE BINARY, (((((((((NOT (rt0.c3)))OR(((-1105772725)>>(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((('mP') IS TRUE))))AND(CASE x'ac58'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY HEX(NULL) COLLATE BINARY, (((((((((NOT (rt0.c3)))OR(((-1105772725)>>(rt0.c2)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((('mP') IS TRUE))))AND(CASE x'ac58'  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END))  NULLS LAST;
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS FALSE))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CAST(rt0.c3 AS NUMERIC))=(((rt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))==(((rt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS FALSE))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS FALSE))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CAST(rt0.c3 AS NUMERIC))=(((rt0.c0)IS NOT(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS NUMERIC))==(((rt0.c0)IS NOT(vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS FALSE))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((((rt0.c1) IS FALSE))AND((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(rt0.c1 COLLATE BINARY)) WHERE (((CAST(rt0.c3 AS NUMERIC))=(((rt0.c0)IS NOT(vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE ((~ (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((~ (x'' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((~ (x'' COLLATE RTRIM)));
SELECT * FROM vt1, rt0 WHERE ((+ (SUBSTR(rt0.c0, vt1.c0)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'ꈝ(''CxꞰ' WHEN 0.1827122841889809 THEN rt0.c2 WHEN -2133692577 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((((NULL))<=((vt1.c0)))) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (SUBSTR(rt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'ꈝ(''CxꞰ' WHEN 0.1827122841889809 THEN rt0.c2 WHEN -2133692577 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((((NULL))<=((vt1.c0)))) AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((+ (SUBSTR(rt0.c0, vt1.c0)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'ꈝ(''CxꞰ' WHEN 0.1827122841889809 THEN rt0.c2 WHEN -2133692577 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((((NULL))<=((vt1.c0)))) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (SUBSTR(rt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'ꈝ(''CxꞰ' WHEN 0.1827122841889809 THEN rt0.c2 WHEN -2133692577 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((((NULL))<=((vt1.c0)))) AND ((+ (rt0.c3))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((+ (SUBSTR(rt0.c0, vt1.c0)))) ORDER BY ((CASE vt1.c0  WHEN rt0.c1 THEN '' WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 'ꈝ(''CxꞰ' WHEN 0.1827122841889809 THEN rt0.c2 WHEN -2133692577 THEN rt0.c3 ELSE rt0.c3 END) NOT BETWEEN ((((NULL))<=((vt1.c0)))) AND ((+ (rt0.c3))))  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c0 AS NUMERIC));
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))|(((vt1.c0)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))|(((vt1.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))|(((vt1.c0)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))|(((vt1.c0)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))|(((vt1.c0)LIKE(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), NULL COLLATE NOCASE, (rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END, ((rt0.c2) IS TRUE), rt0.c3))) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (x''))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), NULL COLLATE NOCASE, (rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END, ((rt0.c2) IS TRUE), rt0.c3))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), NULL COLLATE NOCASE, (rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END, ((rt0.c2) IS TRUE), rt0.c3))) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (x''))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), NULL COLLATE NOCASE, (rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END, ((rt0.c2) IS TRUE), rt0.c3))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (((rt0.c1, vt1.c0, rt0.c0)) BETWEEN ((CAST(rt0.c2 AS INTEGER), NULL COLLATE NOCASE, (rt0.c1 IN ()))) AND ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 END, ((rt0.c2) IS TRUE), rt0.c3))) WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (x'')));
SELECT * FROM rt0 WHERE (0.14526792210894568);
SELECT SUM(count) FROM (SELECT ((0.14526792210894568) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.14526792210894568);
SELECT SUM(count) FROM (SELECT ((0.14526792210894568) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (0.14526792210894568);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, 'soGv', vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), CAST('-2123693409' AS INTEGER), 0.25775747935413973))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, 'soGv', vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), CAST('-2123693409' AS INTEGER), 0.25775747935413973)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, 'soGv', vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), CAST('-2123693409' AS INTEGER), 0.25775747935413973))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, 'soGv', vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), CAST('-2123693409' AS INTEGER), 0.25775747935413973)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (((((vt1.c0, vt1.c0, 'soGv', vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))), ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), CAST('-2123693409' AS INTEGER), 0.25775747935413973))));
SELECT COUNT(*) FROM vt1 WHERE (((NULL)<>('-1285646056')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>('-1285646056')) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)<>('-1285646056')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<>('-1285646056')) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)<>('-1285646056')) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS NUMERIC)  NULLS FIRST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY CAST(((vt1.c0) IS FALSE) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (x'21a3') ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<<(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'21a3') IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<<(x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (x'21a3') ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<<(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'21a3') IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<<(x'')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (x'21a3') ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<<(x'')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NOT (vt1.c0))))<((0.7154736335513526))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN (x'1c17f209' IN ()) THEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c0))) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((rt0.c1) NOTNULL) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((UPPER(rt0.c3))>>(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN (x'1c17f209' IN ()) THEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c0))) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((rt0.c1) NOTNULL) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((NOT (vt1.c0))))<((0.7154736335513526))) ORDER BY ((UPPER(rt0.c3))>>(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NOT (vt1.c0))))<((0.7154736335513526))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN (x'1c17f209' IN ()) THEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c0))) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((rt0.c1) NOTNULL) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((UPPER(rt0.c3))>>(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN (x'1c17f209' IN ()) THEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c0))) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((rt0.c1) NOTNULL) ELSE vt1.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((((NOT (vt1.c0))))<((0.7154736335513526))) ORDER BY ((UPPER(rt0.c3))>>(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((((NOT (vt1.c0))))<((0.7154736335513526))) WHERE (CASE (((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 WHEN (x'1c17f209' IN ()) THEN (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, vt1.c0, rt0.c3)) AND ((vt1.c0, rt0.c1, rt0.c0))) WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) THEN ((rt0.c1) NOTNULL) ELSE vt1.c0 COLLATE NOCASE END) ORDER BY ((UPPER(rt0.c3))>>(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) DESC;
SELECT * FROM rt0 WHERE ((((((((rt0.c2))>=((rt0.c1))))AND((rt0.c1 IN ()))))AND((+ (rt0.c3))))) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN '1156279022' ELSE TYPEOF(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>=((rt0.c1))))AND((rt0.c1 IN ()))))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN '1156279022' ELSE TYPEOF(DISTINCT rt0.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((rt0.c2))>=((rt0.c1))))AND((rt0.c1 IN ()))))AND((+ (rt0.c3))))) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN '1156279022' ELSE TYPEOF(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))>=((rt0.c1))))AND((rt0.c1 IN ()))))AND((+ (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN '1156279022' ELSE TYPEOF(DISTINCT rt0.c0) END DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((((rt0.c2))>=((rt0.c1))))AND((rt0.c1 IN ()))))AND((+ (rt0.c3))))) ORDER BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN '1156279022' ELSE TYPEOF(DISTINCT rt0.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c2))&((((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, '0.05659501614605977')) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2))&((((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, '0.05659501614605977')) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c2))&((((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, '0.05659501614605977')) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2))&((((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, '0.05659501614605977')) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY NULL);
SELECT ALL * FROM rt0 WHERE (((LOWER(rt0.c2))&((((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, '0.05659501614605977')) AND ((rt0.c0, rt0.c1, rt0.c3, rt0.c3, rt0.c2)))))) ORDER BY NULL;
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS TEXT) ASC, 'rK⨡<⑍C	', ((vt1.c0)>=(vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS TEXT) ASC, 'rK⨡<⑍C	', ((vt1.c0)>=(vt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS TEXT) ASC, 'rK⨡<⑍C	', ((vt1.c0)>=(vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT NULL)) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS TEXT) ASC, 'rK⨡<⑍C	', ((vt1.c0)>=(vt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT NULL)) ORDER BY CAST(CAST(vt1.c0 AS TEXT) AS TEXT) ASC, 'rK⨡<⑍C	', ((vt1.c0)>=(vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt1.c0)) NOT BETWEEN ('-514835570') AND (CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0 COLLATE BINARY))<=((0.5407014881524087))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, vt1.c0)) NOT BETWEEN ('-514835570') AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 COLLATE BINARY))<=((0.5407014881524087))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt1.c0)) NOT BETWEEN ('-514835570') AND (CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0 COLLATE BINARY))<=((0.5407014881524087))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c3, vt1.c0)) NOT BETWEEN ('-514835570') AND (CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((rt0.c0 COLLATE BINARY))<=((0.5407014881524087))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((COALESCE(DISTINCT rt0.c3, vt1.c0)) NOT BETWEEN ('-514835570') AND (CAST(rt0.c1 AS REAL)))) ORDER BY (((rt0.c0 COLLATE BINARY))<=((0.5407014881524087))) ASC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) ORDER BY CASE WHEN (+ (rt0.c2)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c2)) THEN NULL END  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) ORDER BY CASE WHEN (+ (rt0.c2)) THEN NULL END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (+ (rt0.c2)) THEN NULL END  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT)) ORDER BY CASE WHEN (+ (rt0.c2)) THEN NULL END  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))IS NOT(((rt0.c3)AND(rt0.c3))))) ORDER BY ((rt0.c3) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))IS NOT(((rt0.c3)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))IS NOT(((rt0.c3)AND(rt0.c3))))) ORDER BY ((rt0.c3) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))IS NOT(((rt0.c3)AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) IS TRUE) COLLATE BINARY ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CAST(rt0.c3 AS REAL))IS NOT(((rt0.c3)AND(rt0.c3))))) ORDER BY ((rt0.c3) IS TRUE) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((vt1.c0 IN ((+ (rt0.c0)), CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((+ (rt0.c0)), CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((vt1.c0 IN ((+ (rt0.c0)), CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ((+ (rt0.c0)), CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((vt1.c0 IN ((+ (rt0.c0)), CAST(rt0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c0 IN (PRINTF('', rt0.c3, rt0.c3)))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))%(0.7577482277622563)) DESC, rtreenode(TRIM(rt0.c1), ((x'fa2a') BETWEEN (rt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (PRINTF('', rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))%(0.7577482277622563)) DESC, rtreenode(TRIM(rt0.c1), ((x'fa2a') BETWEEN (rt0.c0) AND (vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c0 IN (PRINTF('', rt0.c3, rt0.c3)))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))%(0.7577482277622563)) DESC, rtreenode(TRIM(rt0.c1), ((x'fa2a') BETWEEN (rt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN (PRINTF('', rt0.c3, rt0.c3)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))%(0.7577482277622563)) DESC, rtreenode(TRIM(rt0.c1), ((x'fa2a') BETWEEN (rt0.c0) AND (vt1.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((rt0.c0 IN (PRINTF('', rt0.c3, rt0.c3)))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)))%(0.7577482277622563)) DESC, rtreenode(TRIM(rt0.c1), ((x'fa2a') BETWEEN (rt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c2)=(rt0.c2))))<=((((rt0.c3)AND(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)==(rt0.c2))))<=((((rt0.c3)AND(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c2)=(rt0.c2))))<=((((rt0.c3)AND(rt0.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2)==(rt0.c2))))<=((((rt0.c3)AND(rt0.c3))))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (LIKELY(rt0.c3)) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (((((rt0.c2)=(rt0.c2))))<=((((rt0.c3)AND(rt0.c3))))) DESC;
SELECT * FROM rt0, vt1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((CAST(rt0.c1 AS NUMERIC) IN ()));
SELECT * FROM rt0 WHERE (x'8068' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'8068' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'8068' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'8068' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'8068' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (0.10604433124116497)))))) ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END DESC, CAST(((vt1.c0) NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (0.10604433124116497)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END DESC, CAST(((vt1.c0) NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (0.10604433124116497)))))) ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END DESC, CAST(((vt1.c0) NOT NULL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (0.10604433124116497)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END DESC, CAST(((vt1.c0) NOT NULL) AS REAL));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((vt1.c0 IN (vt1.c0, vt1.c0)))) AND ((((vt1.c0) BETWEEN (vt1.c0) AND (0.10604433124116497)))))) ORDER BY CASE ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))  WHEN (vt1.c0 IN ()) THEN vt1.c0 END DESC, CAST(((vt1.c0) NOT NULL) AS REAL);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)<<(rt0.c3)))>((((rt0.c3))>((rt0.c3)))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN rtreenode(rt0.c0, rt0.c0) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) WHEN x'' THEN ((rt0.c1) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c3)))>((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c2 ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN rtreenode(rt0.c0, rt0.c0) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) WHEN x'' THEN ((rt0.c1) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)<<(rt0.c3)))>((((rt0.c3))>((rt0.c3)))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN rtreenode(rt0.c0, rt0.c0) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) WHEN x'' THEN ((rt0.c1) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<<(rt0.c3)))>((((rt0.c3))>((rt0.c3)))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON rt0.c2 ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN rtreenode(rt0.c0, rt0.c0) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) WHEN x'' THEN ((rt0.c1) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM END ASC);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)<<(rt0.c3)))>((((rt0.c3))>((rt0.c3)))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN rtreenode(rt0.c0, rt0.c0) WHEN rt0.c2 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) WHEN (vt1.c0 IN ()) THEN ((rt0.c3) BETWEEN (NULL) AND (rt0.c2)) WHEN x'' THEN ((rt0.c1) NOTNULL) WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c2 COLLATE RTRIM END ASC;
SELECT * FROM rt0 WHERE ((- (((rt0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)/(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c1)/(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)/(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c1)/(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((vt1.c0 IN ())))) ORDER BY JULIANDAY((((rt0.c0))<=((rt0.c0))), rt0.c1, rt0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY JULIANDAY((((rt0.c0))<=((rt0.c0))), rt0.c1, rt0.c2) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((vt1.c0 IN ())))) ORDER BY JULIANDAY((((rt0.c0))<=((rt0.c0))), rt0.c1, rt0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY JULIANDAY((((rt0.c0))<=((rt0.c0))), rt0.c1, rt0.c2) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (((vt1.c0)GLOB(rt0.c2))) AND ((vt1.c0 IN ())))) ORDER BY JULIANDAY((((rt0.c0))<=((rt0.c0))), rt0.c1, rt0.c2) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2, x'', rt0.c2)) BETWEEN (((rt0.c2 IN ()), ((rt0.c1)%(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND (((((rt0.c1, 0.34451619107654907, rt0.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))), ((((((((((((rt0.c0)AND(rt0.c1)))OR(x'')))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)), NULLIF(rt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, x'', rt0.c2)) BETWEEN (((rt0.c2 IN ()), ((rt0.c1)%(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND (((((rt0.c1, 0.34451619107654907, rt0.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))), ((((((((((((rt0.c0)AND(rt0.c1)))OR(x'')))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)), NULLIF(rt0.c1, rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2, x'', rt0.c2)) BETWEEN (((rt0.c2 IN ()), ((rt0.c1)%(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND (((((rt0.c1, 0.34451619107654907, rt0.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))), ((((((((((((rt0.c0)AND(rt0.c1)))OR(x'')))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)), NULLIF(rt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, x'', rt0.c2)) BETWEEN (((rt0.c2 IN ()), ((rt0.c1)%(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND (((((rt0.c1, 0.34451619107654907, rt0.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))), ((((((((((((rt0.c0)AND(rt0.c1)))OR(x'')))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)), NULLIF(rt0.c1, rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((rt0.c2, x'', rt0.c2)) BETWEEN (((rt0.c2 IN ()), ((rt0.c1)%(rt0.c0)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) AND (((((rt0.c1, 0.34451619107654907, rt0.c3)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c0, rt0.c0))), ((((((((((((rt0.c0)AND(rt0.c1)))OR(x'')))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c3)), NULLIF(rt0.c1, rt0.c2)))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((0.682469306444303, LIKELIHOOD(rt0.c0, 0.48235471803010777), (((rt0.c1, rt0.c0, vt1.c0))<=((rt0.c3, rt0.c1, vt1.c0)))))<=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c1)!=(rt0.c3)), CAST(vt1.c0 AS TEXT)))) WHERE ((((rt0.c3) NOT NULL) IN ((rt0.c2 IN (rt0.c3, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT NULL) IN ((rt0.c2 IN (rt0.c3, vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((0.682469306444303, LIKELIHOOD(rt0.c0, 0.48235471803010777), (((rt0.c1, rt0.c0, vt1.c0))<=((rt0.c3, rt0.c1, vt1.c0)))))<=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c1)<>(rt0.c3)), CAST(vt1.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((0.682469306444303, LIKELIHOOD(rt0.c0, 0.48235471803010777), (((rt0.c1, rt0.c0, vt1.c0))<=((rt0.c3, rt0.c1, vt1.c0)))))<=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c1)!=(rt0.c3)), CAST(vt1.c0 AS TEXT)))) WHERE ((((rt0.c3) NOT NULL) IN ((rt0.c2 IN (rt0.c3, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) NOT NULL) IN ((rt0.c2 IN (rt0.c3, vt1.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((0.682469306444303, LIKELIHOOD(rt0.c0, 0.48235471803010777), (((rt0.c1, rt0.c0, vt1.c0))<=((rt0.c3, rt0.c1, vt1.c0)))))<=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c1)<>(rt0.c3)), CAST(vt1.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (((0.682469306444303, LIKELIHOOD(rt0.c0, 0.48235471803010777), (((rt0.c1, rt0.c0, vt1.c0))<=((rt0.c3, rt0.c1, vt1.c0)))))<=((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((rt0.c1)!=(rt0.c3)), CAST(vt1.c0 AS TEXT)))) WHERE ((((rt0.c3) NOT NULL) IN ((rt0.c2 IN (rt0.c3, vt1.c0)))));
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, '-1860076021', vt1.c0)) AND (((NULL)/(vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, '-1860076021', vt1.c0)) AND (((NULL)/(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, '-1860076021', vt1.c0)) AND (((NULL)/(vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, '-1860076021', vt1.c0)) AND (((NULL)/(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c0) AND (x''))) BETWEEN (COALESCE(DISTINCT vt1.c0, vt1.c0, '-1860076021', vt1.c0)) AND (((NULL)/(vt1.c0))))) ORDER BY CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE (((((rt0.c3)>=(vt1.c0))) NOT BETWEEN (rt0.c2) AND (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(vt1.c0))) NOT BETWEEN (rt0.c2) AND (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(x''))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((- (vt1.c0)) IN ()) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE (((((rt0.c3)>=(vt1.c0))) NOT BETWEEN (rt0.c2) AND (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)>=(vt1.c0))) NOT BETWEEN (rt0.c2) AND (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(x''))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((- (vt1.c0)) IN ()) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY ASC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((- (vt1.c0)) IN ()) WHERE (((((rt0.c3)>=(vt1.c0))) NOT BETWEEN (rt0.c2) AND (((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(x''))))) ORDER BY (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE (CAST(ABS(0X66693bc1) AS INTEGER)) ORDER BY 0.9783165551796512 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(0x66693bc1) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 0.9783165551796512 DESC);
SELECT * FROM rt0 WHERE (CAST(ABS(0X66693bc1) AS INTEGER)) ORDER BY 0.9783165551796512 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(0x66693bc1) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY 0.9783165551796512 DESC);
SELECT * FROM rt0 WHERE (CAST(ABS(0X66693bc1) AS INTEGER)) ORDER BY 0.9783165551796512 DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2)==(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c0)) AS TEXT));
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>=(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>=(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>=(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt1.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>=(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((vt1.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))>=(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((x'') NOT BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x'f1f625f0'))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.1586873970758491)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x'f1f625f0'))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.1586873970758491)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((x'') NOT BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x'f1f625f0'))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.1586873970758491)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x'f1f625f0'))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.1586873970758491)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((x'') NOT BETWEEN (vt1.c0) AND (((vt1.c0) BETWEEN (vt1.c0) AND (x'f1f625f0'))))) ORDER BY LIKELIHOOD(vt1.c0 COLLATE NOCASE, 0.1586873970758491)  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))+(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))+(CAST(rt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))+(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))+(CAST(rt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))+(CAST(rt0.c0 AS REAL)));
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END))) ORDER BY (((rt0.c3)*(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)*(rt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END))) ORDER BY (((rt0.c3)*(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)*(rt0.c0)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c3))<>((rt0.c0)))) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END))) ORDER BY (((rt0.c3)*(rt0.c0)) IN ()) ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)>=(vt1.c0)));
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(CAST(vt1.c0 AS INTEGER), 987296565)) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'1311' WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(vt1.c0 AS INTEGER), 987296565)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'1311' WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(CAST(vt1.c0 AS INTEGER), 987296565)) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'1311' WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((rtreenode(CAST(vt1.c0 AS INTEGER), 987296565)) IS TRUE)  as count FROM vt1 ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'1311' WHEN vt1.c0 THEN vt1.c0 END)) DESC);
SELECT COUNT(*) FROM vt1 WHERE (rtreenode(CAST(vt1.c0 AS INTEGER), 987296565)) ORDER BY (((+ (vt1.c0))) BETWEEN ((- (vt1.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN x'1311' WHEN vt1.c0 THEN vt1.c0 END)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((NOT (rt0.c1)));
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ()))%(((rt0.c0) BETWEEN (0.2011988742928551) AND (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'c0da') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))%(((rt0.c0) BETWEEN (0.2011988742928551) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'c0da') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ()))%(((rt0.c0) BETWEEN (0.2011988742928551) AND (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'c0da') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ()))%(((rt0.c0) BETWEEN (0.2011988742928551) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'c0da') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ()))%(((rt0.c0) BETWEEN (0.2011988742928551) AND (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (((x'c0da') NOT NULL)) AND (rt0.c0 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (NOT (CAST(vt1.c0 AS INTEGER))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt1.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CAST((vt1.c0 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('0.543862594030853')OR('1275704807')))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((((((('0.543862594030853')OR('1275704807')))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('0.543862594030853')OR('1275704807')))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((((((('0.543862594030853')OR('1275704807')))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (((((((('0.543862594030853')OR('1275704807')))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c1) BETWEEN (x'e5ab') AND (rt0.c2))))) ORDER BY '.' DESC, (NOT (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c1) BETWEEN (x'e5ab') AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '.' DESC, (NOT (rt0.c0)) DESC);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c1) BETWEEN (x'e5ab') AND (rt0.c2))))) ORDER BY '.' DESC, (NOT (rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c1) BETWEEN (x'e5ab') AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY '.' DESC, (NOT (rt0.c0)) DESC);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3)))OR(((rt0.c1) BETWEEN (x'e5ab') AND (rt0.c2))))) ORDER BY '.' DESC, (NOT (rt0.c0)) DESC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c1);
