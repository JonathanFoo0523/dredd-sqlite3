-- Time: 2024/06/09 07:12:47
-- Database: database31
-- Database version: 3.40.0
-- seed value: 320187831
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=('514271481'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3='-1406865759' WHERE ((CASE WHEN rt1.c0 THEN rt1.c0 END)AND((rt1.c4 IN ()))); -- 0ms;
INSERT OR ABORT INTO rt1(c4) VALUES (0.7659662799805986), (x'be60'), (-664587274), (-6.64587274E8), (x''); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0x1ea728f9); -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('-2113145146'); -- 4ms;
PRAGMA main.secure_delete = false; -- 0ms;
UPDATE OR FAIL rt1 SET (c3, c1)=(NULL, '-1808980701') WHERE CAST(CAST(rt1.c1 AS TEXT) AS NUMERIC); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=(NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (''), (x''), (0.37438150223873656); -- 0ms;
UPDATE OR ABORT vt0 SET c0='鰑3lm-P''Y '; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('-664587274', x'', '', x'1610', '-194975030'), ('!-A_+N', '-194975030', NULL, x'76c3', 0.9093585729218701), (NULL, 'X|H', '', NULL, NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c4) VALUES ('-2113145146', x'de9e'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2129264450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1122735000 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=514271481 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1107378250 sz=-1808980701 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-664587274'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'9729')&(1.10737825E9)))OR(NULL)))OR('P!*}(,la%' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-0.0'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3439668109203381 IN ('-2113145146'))) ISNULL); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(CASE WHEN '-1808980701' THEN NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=558338193 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=161922100 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UNLIKELY(0.7659662799805986) AS TEXT); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1486018006'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('-2075576522')>>(x'')) THEN (x'' IN ()) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2129264450 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1811899226'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND('⴬\n^UQ')))OR(0.4304221525655748)))IS NOT(((NULL)<<(0.6172708396549337)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(highlight('0.3439668109203381', 0X7ee9ff42, '', 0.6703405002162135)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-245895593 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-934191543 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-2057667474 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2129264450 sz=463496575 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'26b13905')>(x'f744' COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1589424302 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=558338193'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '9fh'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1129786668 sz=1396524682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('2129264450' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0.08923492530961463)-('')), ((x'') IS TRUE), ((0.6703405002162135)<(x'7799'))))!=((('' IN ()), (NOT ('-1469716556')), CASE '幉e'  WHEN '-1076959737' THEN x'246f' WHEN '0.6172708396549337' THEN NULL WHEN 0.801641427403499 THEN NULL END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('e4G')==('0.7659662799805986')))OR(((-1.469716556E9)>>(x'17da')))))AND(((('P!*}(,la%')) BETWEEN (('tk헖uqnGd')) AND ((x'4de3'))))))AND(json_type(x''))))AND(((0xffffffffec517f21) NOT BETWEEN (x'') AND (1212594369)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=(NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1757363386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-822456230 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-860037254 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')IS(x'')) AS NUMERIC); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '558338193 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '514271481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((2017145920)) NOT BETWEEN ((((NULL) NOT NULL))) AND ((((0.2632038352563256) BETWEEN (0.9218968078427029) AND (0.9559232901451467))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (x'') AND (1.486018006E9)))AND(1590099233)))OR(CASE 0.12709109674875851  WHEN x'e14483c6' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))>=((x''))))AND(((x'7323')*('y''M\rT')))))AND(((((597381208)OR(NULL)))OR(463496575)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1136089523')OR(((((((((0xffffffffd6eee3a8)AND(0.3566251721880517)))OR('0.6703405002162135')))AND(0X783b3440)))OR(-1757363386)))))AND(((('0.9218968078427029'))!=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-534442634 sz=483591817 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('')||(0Xfffffffff87b950b)))AND(CAST('-1589424302' AS INTEGER))))AND(((x'e319') BETWEEN (1471191243) AND (x'')))))OR(CASE WHEN 0.29989293060977384 THEN x'' END)))AND((NOT ('188607573')))))OR((NULL IN ()))))AND((('-2113145146') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1901726997 2 sz=-260172462 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1826315051 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x''  WHEN x'' THEN x'' ELSE 0.46957047086296744 END  WHEN ((-1589424302)||(0.9620675264285277)) THEN (((x'', x'', '-1406865759'))>=((-569996426, 0xffffffffd0f600c6, NULL))) ELSE ((558338193)|(-1076959737)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 -352833462 sz=430584966 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1122735000'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.6703405002162135' COLLATE NOCASE) NOT BETWEEN ((0.40686257911902424 IN ())) AND (NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.8980821482416825)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-321968103 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=387883268 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1769380236'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1560850041 0 sz=430584966'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1560850041 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=514271481 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-508530047 sz=1883222811 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.018854944002225316) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(DISTINCT NULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('846082127')IS NOT(')')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('_6') NOT BETWEEN ('1?E0') AND (NULL)))>=(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=86334299 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'6243')) NOT BETWEEN ((x'f7d9')) AND ((-6.88987224E8)))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1826315051 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((')') BETWEEN (NULL) AND ('-2127455826'))  WHEN (('0.12709109674875851')IS(1129786668)) THEN CAST('139890644' AS BLOB) WHEN CHANGES() THEN ('' IN ()) WHEN CASE x''  WHEN 0xffffffffdcecb860 THEN NULL WHEN '-1560850041' THEN '903887485' WHEN 'ꁏ' THEN NULL END THEN HEX(x'') ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffbd146c68 COLLATE RTRIM)IS NOT('')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1811899226 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1406865759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '%*cNS'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=901664664 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-379150321 -1122735000 sz=755065145'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=2066921963 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-508530047 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') NOTNULL)))>((((0.7819347503835318) BETWEEN ('b]~\ri') AND ('-1406865759'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1687023882 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1486018006'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1471191243 sz=9223372036854775807 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (((('0.0'))<=((x'8eb8')))) AND (LENGTH(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-934191543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(x'', ''))AND((((NULL, '#^8/+9ﲨ', 0Xffffffffa99ac41e)) NOT BETWEEN ((x'7cd4', x'', x'')) AND (('', -688987224, x'f7bd'))))))OR(((0.8980821482416825)IS NOT(0.40686257911902424)))))AND((('582944736') BETWEEN ('754404598') AND ('Epp_')))))AND((((NULL)) NOT BETWEEN ((NULL)) AND ((x'a857'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((x'8028')) NOT BETWEEN ((0.08923492530961463)) AND ((x''))))) AND ((((((((((0.4304221525655748)OR('-228639898')))OR('1?E0')))OR(x'a6bf')))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'582c') NOT NULL))LIKE((x'ba9a' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-812997280 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1449475042 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.40235975125947665; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2017145920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN (((0X5892d5d6) ISNULL)) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS REAL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1443831865 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-750843924 sz=384295606 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'13ca')<>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.9620675264285277'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ((('C7\rE')&('밴i튕>st#')), (+ ('')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 9223372036854775807 sz=-812997280 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN 0.5916300682927406 THEN NULL ELSE 0.3439668109203381 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-2035815412 sz=-1109462731 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-60163251') IS FALSE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=86334299 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-1619781192 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-1782110060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ''  WHEN 0.47330081991043194 THEN 0.35858314275725744 WHEN 0.3176279340626884 THEN -8.1299728E8 WHEN NULL THEN '' WHEN -3.21968103E8 THEN NULL WHEN -1479050832 THEN '-781313021' END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '230538309 2 sz=-812997280 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', 0.18691479525266996, '-260172462')) NOT BETWEEN ((0.5432460337548167 COLLATE RTRIM, ((0.9043155469698874) IS FALSE), '-2057667474')) AND ((((NULL)|(x'15f5')), ((('1443831865')) BETWEEN ((-1295995572)) AND ((NULL))), ((0.24384345616882597) NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=785105513 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-38465387 2 sz=-2068268494'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((0X7964324f))<(('P.	DF('))))AND(CASE NULL  WHEN x'' THEN NULL WHEN '#z' THEN '' WHEN x'c195' THEN NULL ELSE -2.113145146E9 END)))AND(ABS(0.7907058418319061))))OR(((0.08923492530961463)LIKE(0Xffffffff855a7c6e)))))AND(UNLIKELY(DISTINCT '-1603040858'))))OR(json_type('-688987224'))))AND(CAST('-2113145146' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE((('')LIKE('mk'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=846082127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('P!*}(,la%') NOTNULL))AND((((0.3752300771923692, '', -7.89184314E8))>=((',x', '387883268', -7.50843924E8))))))AND(TRIM(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 0 sz=638907024 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.43890828656283876)-('}p軲')))+(((((((((-1170883398)AND(0Xffffffff8300752c)))AND(x'')))AND(x'')))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))!=((x''))))|(((0.9559232901451467) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 -569996426 sz=1744508245 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.2510613068994819)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('754404598')) NOT BETWEEN ((COALESCE(DISTINCT 0.9125296494824239, NULL))) AND ((((0.46957047086296744)<(x'830e'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('UH' IN ())))==(((((NULL, 0Xffffffffb21d12b3, NULL)) NOT BETWEEN ((NULL, NULL, 0.5548578217539146)) AND ((0.14418284984026308, x'', NULL)))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1272250764 sz=344780066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=344780066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-198053316'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1155961956 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-2113535139 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.2981693610798638 IN (NULL, 1.212594369E9)))AND(((('384295606', -1225951399, '{8hCl*Umr')) BETWEEN ((NULL, NULL, '')) AND (('-1596268963', NULL, NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1329198451'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-387900268'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('1516347846')))AND(NULL))) BETWEEN (((x'')OR(0.14418284984026308))) AND (((1909318823)|('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=66493433 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CASE WHEN 0.9766602142939684 THEN 0X229e8913 ELSE NULL END, 0.9078320702589346); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-60163251 -2813658 sz=-1673995821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('vL|\rR~')>('&')) THEN (('') IS FALSE) WHEN (('밴i튕>st#') IS FALSE) THEN (((((((('-615023268')OR(0.8591326942125526)))OR('-846256379')))OR(5.14271481E8)))OR('430584966')) WHEN ((((NULL)AND(NULL)))OR(x'')) THEN ((((0.905474549600056)OR(0.4304221525655748)))AND(1.39890644E8)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7907058418319061)%(0.08891265031230866))))>=((((0.166100176738613) ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1295995572 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('&' AS INTEGER))AND(CASE 0.8723506126530385  WHEN NULL THEN NULL WHEN '-860037254' THEN 0Xffffffffd50f5d38 WHEN NULL THEN 0.028443288332896333 ELSE x'' END)))AND(((((((((x'')OR('')))OR(NULL)))AND(0.586344956619394)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1007189789'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-775491188'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=901145537 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(('-860037254' IN (x'', 0.4677606414967159)), ((0.4304221525655748) NOT BETWEEN (0.7819347503835318) AND (0.09344203482103897)), ((NULL)/('')), x'', CAST(NULL AS TEXT), CAST(553020543 AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((- (x''))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((- ('*v(7s+-2}')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1883222811'))<((x'e5bc'))) COLLATE RTRIM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1009157590 2095142749 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('-352833462' IN (0X7af6354f, '-228639898')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffff97e92043)<<(NULL)))GLOB(CASE x'5f03'  WHEN NULL THEN x'' ELSE 2059437099 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((GLOB(NULL, 0x286ae1d8)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1852632991 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1323003437 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('Y\')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)&(0.294670443050173)), ((570323582)>=('-2097122004')), ((-394374766)+(x'62f6'))))<>((UPPER(DISTINCT 0x8568fd4), CASE NULL  WHEN '0.9620675264285277' THEN NULL ELSE NULL END, CASE -1.155961956E9  WHEN x'' THEN x'' WHEN NULL THEN NULL WHEN '-887230767' THEN -1769380236 ELSE 0.7559789053030327 END))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT ((((x'')OR(-888548404)))AND(0Xffffffff992c8d55))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1352299320'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'f844'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-261708692 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((UPPER(0Xffffffffbb196b9c))AND((('') NOT BETWEEN (0x189cad1b) AND (NULL)))))AND(((((x'')AND('-789184314')))OR(x'221f')))))OR((NULL IN (0.3414712160391705)))))AND((((0.5274285263447732, '-812997280', x'')) NOT BETWEEN ((NULL, NULL, 'o툦')) AND ((0.6544758538996229, 0.11738912148181158, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(-821273342)))>=((('vu	C]㏶t') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1542682506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1757181859 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '508435884 sz=326228090 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(0.48357830203188445))>(('188607573' IN (0.09344203482103897)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-302918420 sz=-349977496 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0xffffffffd0e4b492 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-1482110059 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-270972287 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=941987559'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1648011492 sz=1571313796 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-292571904 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.23503442133982766) ISNULL))OR(((0.7787384956537725)||(x'5c12')))))OR(((x'502e') BETWEEN (x'') AND (0.9125296494824239)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '473113017 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=459162193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=638907024'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN x'' THEN 0X4528e12 ELSE NULL END) BETWEEN (CAST(0.7147615684569081 AS REAL)) AND (CAST(0.6585053632030536 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1695745121 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (0.5274285263447732)))AND(((NULL)>=('-514818906')))))AND(CASE WHEN '-1449475042' THEN x'' ELSE '' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0.7920575685070538)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-41253794'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.40686257911902424)OR((('-829690200') NOT BETWEEN (NULL) AND (NULL)))))OR(((x'') BETWEEN ('2066921963') AND (x'245d')))))AND(((x'')*(-431124778)))))AND((NOT (0.5986418626719874)))))AND(((((NULL)OR('9|%SM>E')))OR('J羚J0')))))AND(((NULL) BETWEEN (2092181792) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=2058243204 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'6ceb')OR(-634828099)))OR(-1205090036)))GLOB(CASE WHEN '344780066' THEN '-1801444253' WHEN '' THEN 0Xffffffff84493736 WHEN x'9526677c' THEN 'j羚j0' ELSE 0.7316748882771684 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.9544462408588821 WHEN '&' THEN x'' WHEN '-2075576522' THEN '784650901' WHEN '' THEN '' WHEN 0.1170777599102264 THEN 0.6322077529067481 END) NOT BETWEEN (((NULL)<('P.	DF('))) AND (LIKELIHOOD(NULL, 0.2492215055577084))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)AND('-665352757')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-509318156 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1619781192 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ('198109592' COLLATE NOCASE IN (((0x22bf07e0) BETWEEN (NULL) AND ('-379150321')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1590099233 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2068268494) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-2087159974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN (('-2075576522')) AND ((x'0858'))) IN ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1281939084 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=7994327 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-750843924 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-126118645 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1139453407 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('幉e')) BETWEEN (((((0.17170223551444863))<(('o)'))))) AND ((0xffffffff9324a4d5))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1737285143 sz=-493014227 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1109462731 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'H!'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-260172462 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=815671042 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=230538309 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((x'da75')/(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0Xffffffffaed98ef2)OR('Z\')))AND('-1619781192')))AND(NULL)))AND(-321968103)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1782110060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=2124205425 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1406865759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd463' IN (x'1154')))||((((('L_')AND('Xz<P<E')))AND(597381208)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=1457723270 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=668997487 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.8496132414955194 COLLATE NOCASE  WHEN ((750937746) BETWEEN (0.941070611406753) AND (NULL)) THEN 0.3667872361987582 COLLATE BINARY END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-633535542 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'Yf*-,1[!'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-860037254 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((0.14509679429397604))<=((NULL))) THEN TYPEOF(DISTINCT x'') ELSE (+ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1085377742 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD(NULL, 0.022330710361273542)) NOT BETWEEN (((x'')AND(x'3c772e62'))) AND (((((NULL)OR(0.07113744426036939)))AND(x'd27f')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=755065145 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1470205667'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-194975030 1667553526 2132310410 sz=1282796142 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES())GLOB(((3.87883268E8)AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=-889086074 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1819487956 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=188607573 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.9125296494824239) NOT BETWEEN (x'') AND (0.15117722516365606)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1514301954 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1789826498') BETWEEN ('') AND ('')))&('W<''\r|F3')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-560765124 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9824879132208513 AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'd798' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7154253517531276)=(NULL)))>>(((((((((NULL)AND(NULL)))AND('')))OR(x'')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1409272351 sz=1751597515'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0Xffffffffbe64c31f) BETWEEN ('') AND (NULL))  WHEN json_array(0xffffffffa0b6aa75, 'ԟ녦jhhT''V') THEN CASE WHEN 0.12904914678590618 THEN 0.22766930986332767 END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.166100176738613') BETWEEN (x'') AND (0.6150915624262754))  WHEN CASE WHEN 0.5480172731067078 THEN x'b596' ELSE NULL END THEN x'' COLLATE RTRIM ELSE (((('-1808980701')AND(1542451029)))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '784650901 sz=1590099233 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'cf07') NOT NULL))>>((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '2083704288' THEN '-524943637' COLLATE RTRIM WHEN 0.5782884257511551 THEN CAST(NULL AS REAL) WHEN (('g!')&(NULL)) THEN (NULL IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'f9d2' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 9.01664664E8  WHEN x'' THEN -1.170883398E9 END)>(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '387883268'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 86334299 sz=1342008390 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1284217038 -569996426'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1822964150')))/((('-239087410')AND('-1617377511')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT (((0.4643322392396143, NULL, '0.6322077529067481'))>((x'', 0xffffffffdf9bce21, NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5782884257511551)) BETWEEN ((x'424c')) AND ((''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)IS(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-546856329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1555389999 sz=-981673372'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC)) NOT BETWEEN (NULL COLLATE BINARY) AND (0.6694468773093267 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1978641127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1170883398 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('tjc	[''y%{') IS FALSE)) BETWEEN (CAST(x'' AS NUMERIC)) AND (((0.35937354112248476) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1536750866 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1978872549 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('630423666') IS TRUE) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (x'' IN ()) THEN ((0.3828481423708172) IS FALSE) WHEN CASE WHEN 'u' THEN 'F]' ELSE x'' END THEN (((638907024, 0.18667796057338848, ''))<>((0.23877328370618967, x'', NULL))) WHEN CAST(x'22f7' AS BLOB) THEN x'' COLLATE RTRIM WHEN json_insert(x'', 0.4196246567100672, '1e500') THEN (('XR&92䰞 }') BETWEEN ('') AND ('')) WHEN ((x'65e3')&(0.6322077529067481)) THEN TRIM('647659599', 'Hj|6}f') END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-700870809')) NOT BETWEEN ((NULL)) AND ((NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE '1309976522'  WHEN 0x33fb8056 THEN 0Xffffffffbad9d03a ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.8591326942125526')OR(NULL)))OR(0.8095118925622408)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-260172462 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-317546583 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 -330203359 sz=258004102 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((((0.8283040458831293))<(('901664664'))))) AND (((- (x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))<((''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1306717517 sz=1923595705 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(DATE(NULL, x'1120', 0.5984656506568046, NULL, 'TRUE') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(CAST(-1.122735E9 AS REAL), 0.8060115801712553); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-790841617'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1069380396 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(json_remove(-245895593, -7.89184314E8))))OR(UPPER(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES() COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '840875403 sz=1057509772'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)GLOB(NULL)))OR(((NULL) NOT BETWEEN (x'd6da') AND (0.931449046780271)))))AND(LAST_INSERT_ROWID())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1136089523' AS INTEGER))>>((((0.051857740268405284, '-1737439057', ''))<=((0.028598440573492034, '-126118645', x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1603040858 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-350912083' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=8896266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8803505803315128) NOTNULL) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x35e03a7d IN ()))&(CASE -250718038  WHEN '-1469716556' THEN 'z>^iG7ꀏ_' WHEN NULL THEN 0Xffffffffbfcee607 WHEN NULL THEN NULL WHEN NULL THEN 0.04048085235130561 WHEN NULL THEN x'dd70' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=692361282 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=695727851 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1385019278 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2017145920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2072095292 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.6544758538996229 AS NUMERIC) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=384295606 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1255659475' IN ()))IS NOT((('')IS NOT('>P')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1851090320 sz=-508530047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1449475042 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1068599640 0 sz=-1546909014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-534442634 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1868328223 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-745055003 sz=-930099324'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('298732461') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((x'') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN x'' WHEN 0.26781164010801595 THEN '582944736' WHEN 0.9432971133519965 THEN x'' END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('-228639898'))  WHEN ((x'')GLOB(NULL)) THEN ((x'')=(NULL)) WHEN NULL COLLATE NOCASE THEN CASE 0.8251747603505376  WHEN '' THEN '-656803767' ELSE '' END WHEN ((x'') BETWEEN (0.951043414014367) AND ('-962261043')) THEN (~ (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1043006055 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1711693757 -1484150195'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.18000118467911796)<<('-2035815412')))IS(((('903887485', x'', '-1639373020')) NOT BETWEEN ((0X1c0ae811, 0.8496132414955194, 0.16545610423738788)) AND ((x'd7ed1e64', x'', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'1e25')AND('-194975030')))OR(0.9035149248716308)))>=(x'5c42')); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.901726997E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2658296982736914) BETWEEN (785105513) AND (NULL)))|(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2050776722 -1782110060'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1396524682 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=999597884'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2058246460 -37827115 sz=813083821'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '', NULL, x'', 2.9351786E7)) NOT BETWEEN (((- (0.6035187001521849)), (- (1471191243)), (NOT ('-2075576522')), '1218414812' COLLATE BINARY, ((x'') ISNULL))) AND ((0X35e03a7d, (('MI')/(855873273)), (NULL IN ()), IFNULL('430584966', '2066921963'), LOWER(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1321008584 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1107378250'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.002463424627973332 COLLATE NOCASE)>(CASE WHEN '148394440' THEN 0.7263284216950174 ELSE x'8bef' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1296595343 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1747681127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-158281013 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=633205038'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2022583471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 0.7632334788228603)) BETWEEN (CASE WHEN 0.6880004922587292 THEN -484786113 WHEN 0.69752496320836 THEN NULL WHEN NULL THEN x'' END) AND ((0xffffffffeaf8304a IN ('1883222811')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))*(((((((((NULL)OR(NULL)))AND(0.5030985787920147)))AND(x'6789a1ef')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('J⻋j9' IN ()))AND(NULL)))AND(((((((((NULL)AND('DZD[')))AND(-2.113145146E9)))AND(0.06328362010890254)))OR(-9.34191543E8)))))OR((((('-781313021')AND(0X24f1082a)))AND(-8.2245623E8)))))OR((((0X560f2039))>=(('옣AX\r)&#'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-822456230'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 1532397469 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=522096525 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1486018006 sz=1914483570 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '566688616 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'3daa' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (1133656232)))*((('3tS')%('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.8512117251889261) BETWEEN (x'41e3e1aa') AND (NULL)))AND(((2036609615) BETWEEN (x'') AND (0x5e581d7)))))OR(QUOTE('xr&92䰞 }'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-860037254'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1606744955) BETWEEN (x'2f1e') AND (0X19aa3486)))>>((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=393718708'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -735118689 sz=-484064014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-690911587 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-847401090 sz=302844786 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1107378250 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'fb8f')AND('-352833462')))OR('778724199'))) BETWEEN (((0.8980821482416825) BETWEEN (NULL) AND (x''))) AND (CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-958470215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1760191471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((-1.811899226E9)) BETWEEN ((x'a813')) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6859055578859048)OR('-1234647930')))AND(0.8651618833385133)))AND((('-2057667474')<(x'9728')))))AND(((NULL)||('-990940260')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-660450908 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('''' IN ('-750843924', NULL))))>(((~ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (x'15e5')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((463496575)>('')) IN ((('-1109462731') BETWEEN ('YF\ne') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=597381208 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=2102133987 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=344780066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=164145251'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((0.438550177588965) NOT BETWEEN (0xffffffff9ea04ce2) AND (-652144269)), -1092689658, ((0.5646699859484332) ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=-84418837 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=98303395 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '230538309 0 sz=-909728864'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1742936280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.166100176738613) NOTNULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-934191543'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '972313786 2 sz=-1883737479 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1153709346 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-458216133 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('417070263'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=903887485'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1396524682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered'); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1110781420 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((highlight(x'3145', x'', '-1199435851', 0.8061236398151604))OR((((x'')) NOT BETWEEN ((x'')) AND ((NULL))))))OR(((('384295606', '*)7h*hW⷟', x'8672'))=((NULL, 230538309, x''))))))OR(NULL)))AND(CASE WHEN x'' THEN NULL WHEN ' PwF|ࣼ' THEN 0x4bb46a7c WHEN '' THEN 0Xfffffffff5638085 WHEN x'98ca' THEN 0.47872766283679347 WHEN 0.9596542536280063 THEN NULL ELSE 116274188 END)))AND((('J%') NOT BETWEEN (NULL) AND (NULL)))))OR((x'a154' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2071500354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-934191543 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(NULL)))AND(61386827)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1233953149') ISNULL))OR(x'4b8f1731')))AND(((0.7068917266207873)OR('?x7~j\n쐞x')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-8.2245623E8 AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1576679313'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'qr[V' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x'')))-(((NULL) BETWEEN (0.7316748882771684) AND ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('pzRb.iz')) BETWEEN ((((0.994935200880694)>(1920179381)))) AND (('430584966' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1680603163 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TOTAL_CHANGES())OR((('1e500') ISNULL))))OR(((0.5171738865855067) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object(((x'')>(0.6710803465619596)), CAST('F' AS REAL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE 0.801641427403499  WHEN 0.6544758538996229 THEN '0.9125296494824239' ELSE 0.2748806492245449 END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1326738018 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL) NOTNULL))AND((NULL IN (-1952233948)))))OR(NULLIF(DISTINCT x'', 0x703fb31b))))OR(('-1122735000' IN (0.3109350073902234)))))OR(('-1306717517' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('' AS NUMERIC))AND(CAST(NULL AS BLOB))))AND(((NULL) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>('419305642')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT 0.4089605495813393, '-492178333'))*(json_quote('-1782110060'))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=-859551322 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('J^km1煋?~'))<>((''))))&(((0.7400822054018823)GLOB('-303802175')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-126118645 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-1407973185 sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1801543071 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1462118614 sz=2066921963 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((470365371, '', 'E(MOJk'))>=(('1030108661', 0.07649019940343904, ''))) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1797252180'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1103038268 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('254186484')<<('B6'))  WHEN ((x'')*(NULL)) THEN TRIM('-934191543') ELSE ((x'') NOT BETWEEN (-1949067087) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1449475042 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1361256725 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1125423924 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=344780066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-2113145146')) NOT BETWEEN ((NULL)) AND (('J')))) NOT BETWEEN ((((x'8aa0', 0.7742356321804164, 0Xffffffffffa99bc5))<>((0xfffffffff9c04634, 0xffffffffa07389a6, 0.15750023129399637)))) AND (((x'2262')>=(-284486881)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1589424302))>=((x'7695'))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE NULL  WHEN '#z' THEN 'GrZ_5⁭x|4' END THEN ((x'') NOT BETWEEN ('387883268') AND ('XsKim\''X9')) ELSE (((((((('c7\re')OR('')))OR(x'83da')))AND('-822456230')))OR('0.7907058418319061')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT NULL))OR(((0X3b87300c) ISNULL))))OR((('') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1299226982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-728748652 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=410558373 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1641004777 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(1.883222811E9, (((0.6921690448240341)) BETWEEN ((NULL)) AND (('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-508530047 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '2055040252 93122093 sz=145707858'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1725116126 -2075576522 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (390770534 IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))+((x'' IN (0.586344956619394)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -894243684 sz=-781313021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1936436793 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-126118645 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=344780066 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0.16531176045488183)) THEN '-1361473806' COLLATE RTRIM ELSE CAST('' AS REAL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=653136505'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=785105513 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.12904914678590618)>(2.9351786E7)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1107378250'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.08178888533209183) NOT BETWEEN (1436671849) AND ('Xz<P<E'))) BETWEEN ('-1808980701') AND (((x'')<<('-1406865759')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1305418010 sz=344390671 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-60163251 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-934191543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-261746079 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1782110060'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('!<') BETWEEN (0.14509679429397604) AND ('1289321622')))<=(((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5851866359376002)<=(x''))) NOT BETWEEN (0Xffffffffd680d664 COLLATE NOCASE) AND (CASE x'646b'  WHEN 0.8586826267984471 THEN x'' ELSE x'dd21' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.09324395580771128)) BETWEEN ((NULL)) AND ((x'')))) BETWEEN (NULL) AND (('-1149727531' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1552033012 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1603040858 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1361473806 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 1092712412 COLLATE RTRIM  WHEN ('-2093834409' IN (0.5556545903742188)) THEN (((((((('-1999276835')AND(0.3828481423708172)))OR(NULL)))OR(-1.760191471E9)))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1744508245 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '789507312 sz=1653421852'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '161922100' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=514271481'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(CHANGES(), (('2129264450') BETWEEN (0.6585053632030536) AND (x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=1877319514 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (1.590099233E9)) COLLATE RTRIM COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1471191243'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.733255089E9 IN ()))IS NOT(CAST(0.9727260483890933 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-198053316 0 sz=549418756 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)+(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1613400636')GLOB('N*IC,')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>=(NULL)))OR((+ ('4e	e\hMl,')))))OR(CASE NULL  WHEN '1212594369' THEN 1926510586 WHEN 3.44780066E8 THEN x'' WHEN NULL THEN '483591817' ELSE '0.905474549600056' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-664587274'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=755065145 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-239925690 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-617809391 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((NULL)<(-6.0163251E7))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1076959737 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-352833462' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-456663837 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1122735000')) NOT BETWEEN ((((x'8c94') NOT BETWEEN (x'') AND (x'')))) AND ((((x'')==(0.2640670078713975))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1769380236 sz=-651344894'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=901664664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1603040858 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('-969445652', 0.5222709672499893)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-778156278'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-621546145'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=846082127'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '328226378 1822544446 sz=-241769400 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.30982688973078976, NULL, '0.3439668109203381')) BETWEEN ((0Xffffffff8b0dc20a, 0.4773799180000021, '淘(')) AND ((NULL, x'', 0.7848963066639831))))AND(json_array_length(731094175, NULL))))OR((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=74550172'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 sz=847439070'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1028816355'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '0 sz=-1136089523 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '1904854467 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=138975918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.7147615684569081)) THEN '846082127' WHEN x'' COLLATE NOCASE THEN ((-272716099) NOT NULL) WHEN ((-1661683893)<<(x'c569')) THEN (('0.4304221525655748') BETWEEN (NULL) AND ('<?Y')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((('')OR(2.01714592E9)))OR(-86488499)) THEN CAST(x'e89a' AS REAL) ELSE ((('XZ<P<E')) BETWEEN ((x'')) AND ((''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-934191543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=960785973 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)>(0.23380473803397472)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '2 sz=1362390574 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=671871763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2121758161 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-904444392 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -553365195; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-329863794 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '0 -1823886950 sz=-1878130824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.8757403228271667)OR((NOT (0.4514166546611804)))))OR((((('-1757363386')AND('577254267')))OR('vu	C]㏶t')))))AND((('') NOT BETWEEN (NULL) AND ('A ')))))OR(((0.8865074473298071) NOT BETWEEN (0.6125303623337554) AND ('8z')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TOTAL_CHANGES() AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1516247102 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' sz=-1526979207'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-160537894 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=29351786 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT LENGTH('옣AX\r)&#'), (((4.63496575E8))>=((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2138405877 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(((-1.122735E9) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1406865759; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB)) BETWEEN (('-1479050832' IN ())) AND (((((0.3752300771923692)OR(NULL)))OR(1597625407)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '0.9824879132208513', 0xffffffffcb2163ac, NULL, x''))>((2.9351786E7, '1/ys}', 0.1170777599102264, 1892570489, '2082333296'))))<<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1769039190 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT ((NULL)=(x'')), x'222b' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.028598440573492034, '275568939')) BETWEEN ((((((((((-492195933)AND(0Xffffffffd8fe82f4)))OR(NULL)))OR(0.15117722516365606)))OR('1486018006')), (x'' IN ()), '?' COLLATE BINARY)) AND ((((139890644) NOTNULL), ABS(DISTINCT NULL), CAST('847439070' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=-1821520512 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1406865759 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOTNULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-137241893 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '209767887 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x171ea104) NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.05951101065400066, x'', 0.8871616632239223))<((NULL, '3쉩[Yb罻', 0.32557166693342343))))>(((NULL)<(-7.89184314E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=762161482 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-605678685'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'b93d'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-235219859 0 sz=480188706'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'd9a6') IS TRUE) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '847439070 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1443831865'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=301652752 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '1951969775 1358777233 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-2075576522 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=1227284464'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-411896152 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER))<=((5.58338193E8 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-704988505 sz=977808398 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT ('-1589424302'))  WHEN ('' IN ()) THEN (((NULL))=((0.5160127878669792))) ELSE ((x'') NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1757363386'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-790538189 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', '-208584564 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1299959023)||(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', ' sz=395895940 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2145006014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-82911826 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 1191843764  WHEN -1909938652 THEN x'' END AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('P')<(x'2ddd31d7'))))>=((((0Xffffffff97159c11) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '1580150680 sz=1594086085 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1901726997'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '-1842787446 -1667075899 sz=409010957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=847439070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=935896176'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', '0 -566090322 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1560850041'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((-9.34191543E8))<(('1674787475')))  WHEN (((('-1317937761')AND(x'')))AND(-2088460742)) THEN ((x'9ec8') NOT NULL) WHEN ((('h9[o')) NOT BETWEEN (('-228639898')) AND ((0.01641006164065184))) THEN ((('p/K!J5')) NOT BETWEEN (('1272250764')) AND ((0.3089000484762573))) WHEN ((x'')LIKE(x'')) THEN ((('|L4y]', x'', NULL))==((x'4a47', 0.14567751097306392, '795530399'))) ELSE ((x'') IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '260418215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'rt1', '-379150321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1661259155 unordered'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
UPDATE rt1 SET (c0)=(x'9e56'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, '-569996426', 'r') WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))<=((vt0.c0 COLLATE NOCASE))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c0='}1k~t'; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'f3cb'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=NULL; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA cache_spill = -6367107517289190893; -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (NULL)) AS INTEGER); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c0, c1, c2) VALUES ('-389080813', x'', x'9977', '鎚Xu0>j'), (x'efcd', x'', 0x338adf7f, 'ෘ'), (NULL, x'', x'', 'hbT7*Z페'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c4, c2)=('', 'dW9 Vj*ډ') WHERE ABS(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c1 ELSE 0.8078636320545647 END); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE vt0.c0; -- 0ms;
UPDATE vt0 SET (c0)=(0.028598440573492034); -- 1ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c2) VALUES ('da', 'vX9i'); -- 0ms;
END; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.5753843645206028) WHERE ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) ISNULL); -- 0ms;
UPDATE vt0 SET c0='1888529389'; -- 1ms;
VACUUM; -- 0ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES (-5.8846608E8, '2066921963'); -- 0ms;
UPDATE OR FAIL rt1 SET c4='J⻋J9' WHERE ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (rt1.c1 COLLATE RTRIM) AND ((((rt1.c4, rt1.c1, rt1.c3)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c1))))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA temp.mmap_size = 2213378997316707400; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1212594369 unordered'); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c1) VALUES ('-1938677335', '<RH*~'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.9673553046433474); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync; -- 0ms;
PRAGMA temp.auto_vacuum = FULL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.05811437077250825), ('-2057667474'), (1.590099233E9); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL vt0 SET c0='o>q[''0[R' WHERE ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))=(x'')); -- 0ms;
DROP TABLE rt1; -- 1ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x''); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.8591326942125526); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (0.4960425017212581), (x''), ('^-D\n0'), (0.8135434750484792); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(x'ea2c13e1') WHERE vt0.c0; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0*GFj\nk\r铲'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (-1.560850041E9); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'0598', '0.9093585729218701'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=(NULL)))LIKE(0.12337480388363531)); -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(x'f364'); -- 1ms;
PRAGMA cache_size; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0Xffffffff9455b2d4); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-1122735000'); -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=('/t W븎xp#y'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-308000692); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL), (x'11a04f14'), (0.4978212240182598); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0xffffffff82d87ebd, '-1687023882'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=('-1589424302'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.166100176738613; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'166c', vt0.c0))) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN '0.018854944002225316' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'166c', vt0.c0))) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN '0.018854944002225316' END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'166c', vt0.c0))) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN '0.018854944002225316' END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'166c', vt0.c0))) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN '0.018854944002225316' END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, x'166c', vt0.c0))) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((vt0.c0 COLLATE NOCASE)AND(vt0.c0 COLLATE RTRIM)), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN '0.018854944002225316' END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES());
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)LIKE(vt0.c0)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)LIKE(vt0.c0)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((rt0.c0)LIKE(vt0.c0)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt0.c0)));
SELECT * FROM rt0 WHERE (((((rt0.c1)|(0.9408763697292601)))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY NULLIF(DISTINCT ((rt0.c2)&(rt0.c1)), ((rt0.c1) IS FALSE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(0.9408763697292601)))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c2)&(rt0.c1)), ((rt0.c1) IS FALSE)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(0.9408763697292601)))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY NULLIF(DISTINCT ((rt0.c2)&(rt0.c1)), ((rt0.c1) IS FALSE)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)|(0.9408763697292601)))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY NULLIF(DISTINCT ((rt0.c2)&(rt0.c1)), ((rt0.c1) IS FALSE)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1)|(0.9408763697292601)))-(((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(x'')))AND(rt0.c0)))OR(rt0.c0))))) ORDER BY NULLIF(DISTINCT ((rt0.c2)&(rt0.c1)), ((rt0.c1) IS FALSE)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)-(0.38327878960449535)) IN ())) ORDER BY ((((0.6694468773093267)OR(((rt0.c0)-(rt0.c2)))))OR(((x'ce01') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(0.38327878960449535)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((0.6694468773093267)OR(((rt0.c0)-(rt0.c2)))))OR(((x'ce01') ISNULL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)-(0.38327878960449535)) IN ())) ORDER BY ((((0.6694468773093267)OR(((rt0.c0)-(rt0.c2)))))OR(((x'ce01') ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)-(0.38327878960449535)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((0.6694468773093267)OR(((rt0.c0)-(rt0.c2)))))OR(((x'ce01') ISNULL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1)-(0.38327878960449535)) IN ())) ORDER BY ((((0.6694468773093267)OR(((rt0.c0)-(rt0.c2)))))OR(((x'ce01') ISNULL))) DESC;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY CASE WHEN ((rt0.c1)>=(0.6544758538996229)) THEN vt0.c0 COLLATE NOCASE END  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((vt0.c0)%(NULL)))) AND ((ABS(rt0.c1))))  NULLS LAST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) IN ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((rt0.c1)>=(0.6544758538996229)) THEN vt0.c0 COLLATE NOCASE END  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((vt0.c0)%(NULL)))) AND ((ABS(rt0.c1))))  NULLS LAST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) IN ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY CASE WHEN ((rt0.c1)>=(0.6544758538996229)) THEN vt0.c0 COLLATE NOCASE END  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((vt0.c0)%(NULL)))) AND ((ABS(rt0.c1))))  NULLS LAST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) IN ((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN ((rt0.c1)>=(0.6544758538996229)) THEN vt0.c0 COLLATE NOCASE END  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((vt0.c0)%(NULL)))) AND ((ABS(rt0.c1))))  NULLS LAST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) IN ((rt0.c1 IN ()))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))) NOTNULL)) ORDER BY CASE WHEN ((rt0.c1)>=(0.6544758538996229)) THEN vt0.c0 COLLATE NOCASE END  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((((vt0.c0)%(NULL)))) AND ((ABS(rt0.c1))))  NULLS LAST, ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c2))) IN ((rt0.c1 IN ())));
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY) ORDER BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, UPPER(DISTINCT rt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, UPPER(DISTINCT rt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY) ORDER BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, UPPER(DISTINCT rt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, UPPER(DISTINCT rt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY) ORDER BY (((rt0.c0))>=((rt0.c0))) COLLATE NOCASE, UPPER(DISTINCT rt0.c1) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (0.9514491953535785) ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, (((vt0.c0)-(vt0.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9514491953535785) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, (((vt0.c0)-(vt0.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (0.9514491953535785) ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, (((vt0.c0)-(vt0.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9514491953535785) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, (((vt0.c0)-(vt0.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (0.9514491953535785) ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, (((vt0.c0)-(vt0.c0)) IN (((vt0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)-(vt0.c0)))*((((vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(vt0.c0)))*((((vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)-(vt0.c0)))*((((vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)-(vt0.c0)))*((((vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0)-(vt0.c0)))*((((vt0.c0, rt0.c2, vt0.c0, vt0.c0, rt0.c2))<=((vt0.c0, rt0.c2, rt0.c2, rt0.c1, vt0.c0))))));
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((((+ (vt0.c0)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))OR(TRIM(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))OR(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((((+ (vt0.c0)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))OR(TRIM(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((+ (vt0.c0)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))OR(TRIM(DISTINCT rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 NOT INDEXED WHERE ((((((+ (vt0.c0)))AND(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)))))OR(TRIM(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))IS((+ (rt0.c0)))) WHERE (6.38907024E8);
SELECT SUM(count) FROM (SELECT ALL ((6.38907024E8) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))IS((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))IS((+ (rt0.c0)))) WHERE (6.38907024E8);
SELECT SUM(count) FROM (SELECT ALL ((6.38907024E8) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))IS((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))IS((+ (rt0.c0)))) WHERE (6.38907024E8);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN (NULLIF(DISTINCT NULL, rt0.c1), ((rt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN (NULLIF(DISTINCT NULL, rt0.c1), ((rt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN (NULLIF(DISTINCT NULL, rt0.c1), ((rt0.c0)!=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN (NULLIF(DISTINCT NULL, rt0.c1), ((rt0.c0)<>(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) IN (NULLIF(DISTINCT NULL, rt0.c1), ((rt0.c0)!=(vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((0.9544462408588821)AND(NULL)))AND(rt0.c1))) NOTNULL), (((((- (rt0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.5753342461049433 END)))AND(rt0.c0 COLLATE RTRIM)) DESC, (2036609615 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((0.9544462408588821)AND(NULL)))AND(rt0.c1))) NOTNULL), (((((- (rt0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.5753342461049433 END)))AND(rt0.c0 COLLATE RTRIM)) DESC, (2036609615 IN ())  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((0.9544462408588821)AND(NULL)))AND(rt0.c1))) NOTNULL), (((((- (rt0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.5753342461049433 END)))AND(rt0.c0 COLLATE RTRIM)) DESC, (2036609615 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((0.9544462408588821)AND(NULL)))AND(rt0.c1))) NOTNULL), (((((- (rt0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.5753342461049433 END)))AND(rt0.c0 COLLATE RTRIM)) DESC, (2036609615 IN ())  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (x'') ORDER BY ((((((0.9544462408588821)AND(NULL)))AND(rt0.c1))) NOTNULL), (((((- (rt0.c0)))AND(CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.5753342461049433 END)))AND(rt0.c0 COLLATE RTRIM)) DESC, (2036609615 IN ())  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((('-1095627486') IS FALSE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC  NULLS FIRST, rt0.c1 DESC  NULLS LAST, CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((('-1095627486') IS FALSE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC  NULLS FIRST, rt0.c1 DESC  NULLS LAST, CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((('-1095627486') IS FALSE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC  NULLS FIRST, rt0.c1 DESC  NULLS LAST, CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((('-1095627486') IS FALSE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC  NULLS FIRST, rt0.c1 DESC  NULLS LAST, CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (((('-1095627486') IS FALSE))LIKE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))) WHERE (NULL) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC  NULLS FIRST, rt0.c1 DESC  NULLS LAST, CAST((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) AS INTEGER) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY HEX(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY HEX(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY HEX(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY HEX(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))+((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))+((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))+((rt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CAST((- (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))+((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((- (vt0.c0)) AS INTEGER)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))+((rt0.c1 IN ())));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST((- (vt0.c0)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST((- (vt0.c0)) AS REAL));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST((- (vt0.c0)) AS REAL) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST((- (vt0.c0)) AS REAL));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST((- (vt0.c0)) AS REAL) WHERE (vt0.c0);
SELECT * FROM vt0, rt0 WHERE (CASE 0.5986418626719874  WHEN ((-1.78211006E9) IS FALSE) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.5986418626719874  WHEN ((-1.78211006E9) IS FALSE) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE 0.5986418626719874  WHEN ((-1.78211006E9) IS FALSE) THEN rt0.c2 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.5986418626719874  WHEN ((-1.78211006E9) IS FALSE) THEN rt0.c2 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE 0.5986418626719874  WHEN ((-1.78211006E9) IS FALSE) THEN rt0.c2 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) END  NULLS FIRST, ((((rt0.c1) ISNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) END  NULLS FIRST, ((((rt0.c1) ISNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) END  NULLS FIRST, ((((rt0.c1) ISNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) END  NULLS FIRST, ((((rt0.c1) ISNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)) THEN (rt0.c0 IN ()) END  NULLS FIRST, ((((rt0.c1) ISNULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((NOT (rt0.c0)))) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((((rt0.c0)AND(0Xffffffffb2c0ad4c)))AND(vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY CAST(TYPEOF(DISTINCT rt0.c0) AS INTEGER) DESC  NULLS LAST, vt0.c0 ASC, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((((rt0.c0)AND(0Xffffffffb2c0ad4c)))AND(vt0.c0))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(TYPEOF(DISTINCT rt0.c0) AS INTEGER) DESC  NULLS LAST, vt0.c0 ASC, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((((rt0.c0)AND(0Xffffffffb2c0ad4c)))AND(vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY CAST(TYPEOF(DISTINCT rt0.c0) AS INTEGER) DESC  NULLS LAST, vt0.c0 ASC, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL)) BETWEEN (((((rt0.c0)AND(0Xffffffffb2c0ad4c)))AND(vt0.c0))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(TYPEOF(DISTINCT rt0.c0) AS INTEGER) DESC  NULLS LAST, vt0.c0 ASC, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((((rt0.c0)AND(0Xffffffffb2c0ad4c)))AND(vt0.c0))) AND (((rt0.c1) IS TRUE)))) ORDER BY CAST(TYPEOF(DISTINCT rt0.c0) AS INTEGER) DESC  NULLS LAST, vt0.c0 ASC, ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c2) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, rt0.c2 DESC);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, rt0.c2 DESC);
SELECT * FROM rt0 WHERE (rt0.c1 COLLATE NOCASE) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, rt0.c2 DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))<=(((~ (rt0.c2))))), rt0.c1, CAST(TRIM(DISTINCT rt0.c2) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))<=(((~ (rt0.c2))))), rt0.c1, CAST(TRIM(DISTINCT rt0.c2) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))<=(((~ (rt0.c2))))), rt0.c1, CAST(TRIM(DISTINCT rt0.c2) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))<=(((~ (rt0.c2))))), rt0.c1, CAST(TRIM(DISTINCT rt0.c2) AS TEXT) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) AS INTEGER)) ORDER BY (((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c1))))<=(((~ (rt0.c2))))), rt0.c1, CAST(TRIM(DISTINCT rt0.c2) AS TEXT) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((58470411) ISNULL) THEN ((rt0.c1)>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((58470411) ISNULL) THEN ((rt0.c1)>(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((58470411) ISNULL) THEN ((rt0.c1)>(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((58470411) ISNULL) THEN ((rt0.c1)>(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((58470411) ISNULL) THEN ((rt0.c1)>(rt0.c2)) END);
SELECT ALL * FROM vt0, rt0 WHERE (0.49072528429552376) ORDER BY TRIM((rt0.c1 IN (rt0.c2))) ASC, CASE (+ (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((0Xffffffff97159c11)IS NOT(rt0.c1)) ELSE ((rt0.c1)/(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.49072528429552376) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM((rt0.c1 IN (rt0.c2))) ASC, CASE (+ (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((0xffffffff97159c11)IS NOT(rt0.c1)) ELSE ((rt0.c1)/(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (0.49072528429552376) ORDER BY TRIM((rt0.c1 IN (rt0.c2))) ASC, CASE (+ (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((0Xffffffff97159c11)IS NOT(rt0.c1)) ELSE ((rt0.c1)/(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.49072528429552376) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM((rt0.c1 IN (rt0.c2))) ASC, CASE (+ (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((0xffffffff97159c11)IS NOT(rt0.c1)) ELSE ((rt0.c1)/(rt0.c1)) END DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (0.49072528429552376) ORDER BY TRIM((rt0.c1 IN (rt0.c2))) ASC, CASE (+ (rt0.c0))  WHEN ((rt0.c0) NOTNULL) THEN ((0Xffffffff97159c11)IS NOT(rt0.c1)) ELSE ((rt0.c1)/(rt0.c1)) END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'17cc');
SELECT SUM(count) FROM (SELECT ALL ((x'17cc') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'17cc');
SELECT SUM(count) FROM (SELECT ALL ((x'17cc') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'17cc');
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(TRIM(vt0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<<(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(TRIM(vt0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS REAL))<<(TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS REAL))<<(TRIM(vt0.c0)))) ORDER BY CAST((vt0.c0 IN ()) AS TEXT) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(((x'7bfd700a')<(rt0.c2)) AS INTEGER)) ORDER BY (((+ (rt0.c1)))IS NOT(((rt0.c1) NOT BETWEEN (0Xffffffff8d807385) AND (0.2606520051386245)))), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'7bfd700a')<(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))IS NOT(((rt0.c1) NOT BETWEEN (0Xffffffff8d807385) AND (0.2606520051386245)))), rt0.c0 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((x'7bfd700a')<(rt0.c2)) AS INTEGER)) ORDER BY (((+ (rt0.c1)))IS NOT(((rt0.c1) NOT BETWEEN (0Xffffffff8d807385) AND (0.2606520051386245)))), rt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'7bfd700a')<(rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c1)))IS NOT(((rt0.c1) NOT BETWEEN (0Xffffffff8d807385) AND (0.2606520051386245)))), rt0.c0 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CAST(((x'7bfd700a')<(rt0.c2)) AS INTEGER)) ORDER BY (((+ (rt0.c1)))IS NOT(((rt0.c1) NOT BETWEEN (0Xffffffff8d807385) AND (0.2606520051386245)))), rt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN '149874445' THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2))!=((rt0.c2)))))!=((CAST(rt0.c0 AS REAL), ((rt0.c0)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN '149874445' THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2))!=((rt0.c2)))))<>((CAST(rt0.c0 AS REAL), ((rt0.c0)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN '149874445' THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2))!=((rt0.c2)))))!=((CAST(rt0.c0 AS REAL), ((rt0.c0)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN '149874445' THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2))!=((rt0.c2)))))<>((CAST(rt0.c0 AS REAL), ((rt0.c0)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN '149874445' THEN rt0.c1 END, CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END, (((rt0.c2))!=((rt0.c2)))))!=((CAST(rt0.c0 AS REAL), ((rt0.c0)<<(rt0.c1)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS REAL));
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0 WHERE ((NOT (((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))>(((rt0.c0)<>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))>(((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))>(((rt0.c0)<>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (rt0.c0)))>(((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0 IN (rt0.c0)))>(((rt0.c0)<>(rt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC) WHERE ((((rtreenode(rt0.c0, rt0.c1), ((rt0.c0)IS(rt0.c2)), CHANGES()))==((rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, HEX(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rtreenode(rt0.c0, rt0.c1), ((rt0.c0)IS(rt0.c2)), CHANGES()))=((rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, HEX(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC) WHERE ((((rtreenode(rt0.c0, rt0.c1), ((rt0.c0)IS(rt0.c2)), CHANGES()))==((rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, HEX(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((rtreenode(rt0.c0, rt0.c1), ((rt0.c0)IS(rt0.c2)), CHANGES()))=((rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, HEX(rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC));
SELECT * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c0)&(rt0.c0)) AS NUMERIC) WHERE ((((rtreenode(rt0.c0, rt0.c1), ((rt0.c0)IS(rt0.c2)), CHANGES()))==((rt0.c2, CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 END, HEX(rt0.c1)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-1520501393' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c0)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-1520501393' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-1520501393' END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c0)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-1520501393' END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))>(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN '-1520501393' END)));
SELECT * FROM vt0 CROSS JOIN rt0 ON '-228639898' COLLATE NOCASE WHERE ((rt0.c0 IN ((((vt0.c0))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((((vt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-228639898' COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN rt0 ON '-228639898' COLLATE NOCASE WHERE ((rt0.c0 IN ((((vt0.c0))>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ((((vt0.c0))>((rt0.c2)))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON '-228639898' COLLATE NOCASE);
SELECT * FROM vt0 CROSS JOIN rt0 ON '-228639898' COLLATE NOCASE WHERE ((rt0.c0 IN ((((vt0.c0))>((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (((rt0.c0)+(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (((rt0.c0)+(rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)+(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (((rt0.c0)+(rt0.c1)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (((+ (rt0.c2)))))) ORDER BY (~ (CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS NUMERIC))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (((+ (rt0.c2)))))) ORDER BY (~ (CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c0 AS NUMERIC))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c1)) BETWEEN (((rt0.c1 IN ()))) AND (((+ (rt0.c2)))))) ORDER BY (~ (CAST(rt0.c0 AS NUMERIC))) DESC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN (vt0.c0)) IN ()) WHERE ((- (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('29351786') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('29351786') IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('29351786') IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((('29351786') IS TRUE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('29351786') IS TRUE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1))>((rt0.c1)))) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1))>((rt0.c1)))) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1))>((rt0.c1)))) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((DATE((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1))>((rt0.c1)))) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (DATE((- (rt0.c2)), (rt0.c0 IN ()), rt0.c0 COLLATE BINARY)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN ((((rt0.c1))>((rt0.c1)))) AND (((((vt0.c0)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)+(RTRIM(vt0.c0))) ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0))))<<(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)+(RTRIM(vt0.c0))) ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0))))<<(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)+(RTRIM(vt0.c0))) ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0))))<<(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)+(RTRIM(vt0.c0))) ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0))))<<(((vt0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)+(RTRIM(vt0.c0))) ASC  NULLS LAST, (((((vt0.c0))!=((vt0.c0))))<<(((vt0.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((highlight(rt0.c2, rt0.c1, rt0.c0, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((highlight(rt0.c2, rt0.c1, rt0.c0, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((highlight(rt0.c2, rt0.c1, rt0.c0, rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((highlight(rt0.c2, rt0.c1, rt0.c0, rt0.c2) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((highlight(rt0.c2, rt0.c1, rt0.c0, rt0.c2) IN ()));
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c1)))OR(0.4032727960319745))))>((((rt0.c0)&(rt0.c0)), rt0.c0, COALESCE(rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c1)))OR(0.4032727960319745))))>((((rt0.c0)&(rt0.c0)), rt0.c0, COALESCE(rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c1)))OR(0.4032727960319745))))>((((rt0.c0)&(rt0.c0)), rt0.c0, COALESCE(rt0.c0, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c1)))OR(0.4032727960319745))))>((((rt0.c0)&(rt0.c0)), rt0.c0, COALESCE(rt0.c0, rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))), CAST(rt0.c1 AS INTEGER), ((((rt0.c0)OR(rt0.c1)))OR(0.4032727960319745))))>((((rt0.c0)&(rt0.c0)), rt0.c0, COALESCE(rt0.c0, rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN HEX(DISTINCT rt0.c0) THEN (rt0.c0 IN (rt0.c1, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT rt0.c0) THEN (rt0.c0 IN (rt0.c1, rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN HEX(DISTINCT rt0.c0) THEN (rt0.c0 IN (rt0.c1, rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN HEX(DISTINCT rt0.c0) THEN (rt0.c0 IN (rt0.c1, rt0.c1)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN HEX(DISTINCT rt0.c0) THEN (rt0.c0 IN (rt0.c1, rt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CAST(vt0.c0 AS NUMERIC))OR(vt0.c0 COLLATE RTRIM)))AND(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c1) NOTNULL))) WHERE (((((vt0.c0)LIKE(rt0.c2))) BETWEEN ((((vt0.c0))<(('0.7659662799805986')))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(rt0.c2))) BETWEEN ((((vt0.c0))<(('0.7659662799805986')))) AND (''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c1) NOTNULL))) WHERE (((((vt0.c0)LIKE(rt0.c2))) BETWEEN ((((vt0.c0))<(('0.7659662799805986')))) AND ('')));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(rt0.c2))) BETWEEN ((((vt0.c0))<(('0.7659662799805986')))) AND (''))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c1) NOTNULL))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON (~ (((rt0.c1) NOTNULL))) WHERE (((((vt0.c0)LIKE(rt0.c2))) BETWEEN ((((vt0.c0))<(('0.7659662799805986')))) AND ('')));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (CASE SQLITE_VERSION()  WHEN ((rt0.c2)>=(-3.79150321E8)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (~ (SUBSTR(vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_VERSION()  WHEN ((rt0.c2)>=(-3.79150321E8)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (SUBSTR(vt0.c0, rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (CASE SQLITE_VERSION()  WHEN ((rt0.c2)>=(-3.79150321E8)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (~ (SUBSTR(vt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE SQLITE_VERSION()  WHEN ((rt0.c2)>=(-3.79150321E8)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (SUBSTR(vt0.c0, rt0.c0))));
SELECT * FROM rt0, vt0 WHERE (CASE SQLITE_VERSION()  WHEN ((rt0.c2)>=(-3.79150321E8)) THEN CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END) ORDER BY (~ (SUBSTR(vt0.c0, rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((~ (NULL))) ORDER BY ((((0.46957047086296744)>>(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY ((((0.46957047086296744)>>(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((~ (NULL))) ORDER BY ((((0.46957047086296744)>>(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 ORDER BY ((((0.46957047086296744)>>(vt0.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((~ (NULL))) ORDER BY ((((0.46957047086296744)>>(vt0.c0))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ('F]');
SELECT SUM(count) FROM (SELECT (('F]') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('F]');
SELECT SUM(count) FROM (SELECT (('F]') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('F]');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0) ISNULL) IN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0 CROSS JOIN rt0 ON DATE(((rt0.c2)<=(rt0.c1)), rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt0.c0))) WHERE (CASE ((rt0.c0)-(rt0.c1))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.9544462408588821)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)-(rt0.c1))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.9544462408588821)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON DATE(((rt0.c2)<=(rt0.c1)), rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt0.c0))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON DATE(((rt0.c2)<=(rt0.c1)), rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt0.c0))) WHERE (CASE ((rt0.c0)-(rt0.c1))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.9544462408588821)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0)-(rt0.c1))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.9544462408588821)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON DATE(((rt0.c2)<=(rt0.c1)), rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt0.c0))) ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON DATE(((rt0.c2)<=(rt0.c1)), rt0.c0 COLLATE BINARY, ((rt0.c1)GLOB(rt0.c0))) WHERE (CASE ((rt0.c0)-(rt0.c1))  WHEN CAST(rt0.c1 AS TEXT) THEN ((((rt0.c2)AND(rt0.c1)))AND(0.9544462408588821)) ELSE ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) END) ORDER BY CAST(((rt0.c0)GLOB(rt0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY '-287559277' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '-287559277' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY '-287559277' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY '-287559277' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOTNULL) IN ())) ORDER BY '-287559277' ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))*(''))) ORDER BY ((((rt0.c1)<=(rt0.c0)))<(((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))*(''))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c0)))<(((rt0.c0)>=(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))*(''))) ORDER BY ((((rt0.c1)<=(rt0.c0)))<(((rt0.c0)>=(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))*(''))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)<=(rt0.c0)))<(((rt0.c0)>=(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))*(''))) ORDER BY ((((rt0.c1)<=(rt0.c0)))<(((rt0.c0)>=(rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>=(rt0.c0)))))) ORDER BY CASE WHEN json_array_length(vt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2)OR(vt0.c0)) END DESC  NULLS FIRST, (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((0Xfffffffff6a35b5a, ((rt0.c1)>>(vt0.c0)), json_array_length(rt0.c1))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), vt0.c0 COLLATE BINARY, 1.471191243E9)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN json_array_length(vt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2)OR(vt0.c0)) END DESC  NULLS FIRST, (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((0Xfffffffff6a35b5a, ((rt0.c1)>>(vt0.c0)), json_array_length(rt0.c1))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), vt0.c0 COLLATE BINARY, 1.471191243E9)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>=(rt0.c0)))))) ORDER BY CASE WHEN json_array_length(vt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2)OR(vt0.c0)) END DESC  NULLS FIRST, (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((0Xfffffffff6a35b5a, ((rt0.c1)>>(vt0.c0)), json_array_length(rt0.c1))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), vt0.c0 COLLATE BINARY, 1.471191243E9)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>=(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN json_array_length(vt0.c0, vt0.c0) THEN rt0.c0 COLLATE NOCASE ELSE ((rt0.c2)OR(vt0.c0)) END DESC  NULLS FIRST, (((vt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((0Xfffffffff6a35b5a, ((rt0.c1)>>(vt0.c0)), json_array_length(rt0.c1))) AND ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)), vt0.c0 COLLATE BINARY, 1.471191243E9)))  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))<>(x'8ad3')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))!=(x'8ad3'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))<>(x'8ad3')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) ISNULL))!=(x'8ad3'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0) ISNULL))<>(x'8ad3')));
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c0))=((rt0.c1))) END) ORDER BY CASE 0Xfffffffffe147c56  WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c0 END DESC, ((((rt0.c0)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c0))=((rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY CASE 0Xfffffffffe147c56  WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c0 END DESC, ((((rt0.c0)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c0))=((rt0.c1))) END) ORDER BY CASE 0Xfffffffffe147c56  WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c0 END DESC, ((((rt0.c0)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c0))=((rt0.c1))) END) IS TRUE)  as count FROM rt0 ORDER BY CASE 0Xfffffffffe147c56  WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c0 END DESC, ((((rt0.c0)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))  WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END THEN (((rt0.c0))=((rt0.c1))) END) ORDER BY CASE 0Xfffffffffe147c56  WHEN (- (rt0.c0)) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN rt0.c1 THEN rt0.c2 COLLATE BINARY WHEN (rt0.c2 IN ()) THEN (rt0.c0 IN ()) ELSE rt0.c0 END DESC, ((((rt0.c0)AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS FIRST, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), 0.9486328546466707, CAST(vt0.c0 AS BLOB))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), 0.9486328546466707, CAST(vt0.c0 AS BLOB))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), 0.9486328546466707, CAST(vt0.c0 AS BLOB))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), 0.9486328546466707, CAST(vt0.c0 AS BLOB))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))+(vt0.c0 COLLATE BINARY)) DESC  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), 0.9486328546466707, CAST(vt0.c0 AS BLOB))) AND ((vt0.c0, (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c2))<((rt0.c2))) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c2)))&(((rt0.c2)<<(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c2)))&(((rt0.c2)<<(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2)))&(((rt0.c2)<<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((- (rt0.c2)))&(((rt0.c2)<<(rt0.c2))))) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT BETWEEN ((rt0.c0 IN ())) AND (CAST(rt0.c1 AS NUMERIC))) ASC;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0)&(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0)&(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0)&(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0)&(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((vt0.c0)AND(vt0.c0)))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((IFNULL(vt0.c0, vt0.c0))) AND ((((vt0.c0)&(vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) ORDER BY CAST(vt0.c0 AS INTEGER) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((x'')=(vt0.c0)))) AND ((0.46340883946756795))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((x'')=(vt0.c0)))) AND ((0.46340883946756795)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((x'')=(vt0.c0)))) AND ((0.46340883946756795))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((x'')=(vt0.c0)))) AND ((0.46340883946756795)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((x'')=(vt0.c0)))) AND ((0.46340883946756795))));
SELECT ALL * FROM vt0 WHERE (((((((((((((x'dd08' COLLATE BINARY)OR(((vt0.c0)*(x'f39c')))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'dd08' COLLATE BINARY)OR(((vt0.c0)*(x'f39c')))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((x'dd08' COLLATE BINARY)OR(((vt0.c0)*(x'f39c')))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((x'dd08' COLLATE BINARY)OR(((vt0.c0)*(x'f39c')))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((((x'dd08' COLLATE BINARY)OR(((vt0.c0)*(x'f39c')))))OR((vt0.c0 IN (vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))))AND(vt0.c0)))AND((NOT (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((x'')OR(rt0.c1)) THEN (((rt0.c2))>=((rt0.c1))) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt0.c0, rt0.c2) THEN CASE 0xfffffffffded3f68  WHEN rt0.c2 THEN x'e14e' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'')OR(rt0.c1)) THEN (((rt0.c2))>=((rt0.c1))) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt0.c0, rt0.c2) THEN CASE 0xfffffffffded3f68  WHEN rt0.c2 THEN x'e14e' END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((x'')OR(rt0.c1)) THEN (((rt0.c2))>=((rt0.c1))) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt0.c0, rt0.c2) THEN CASE 0xfffffffffded3f68  WHEN rt0.c2 THEN x'e14e' END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((x'')OR(rt0.c1)) THEN (((rt0.c2))>=((rt0.c1))) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt0.c0, rt0.c2) THEN CASE 0xfffffffffded3f68  WHEN rt0.c2 THEN x'e14e' END END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((x'')OR(rt0.c1)) THEN (((rt0.c2))>=((rt0.c1))) WHEN ((rt0.c1) NOT NULL) THEN ((rt0.c2)*(rt0.c0)) WHEN COALESCE(rt0.c0, rt0.c2) THEN CASE 0xfffffffffded3f68  WHEN rt0.c2 THEN x'e14e' END END);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (ROUND(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (ROUND(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (ROUND(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (ROUND(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((((+ (vt0.c0))) BETWEEN (CAST(vt0.c0 AS REAL)) AND (vt0.c0))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN (ROUND(vt0.c0, vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))), (((~ (vt0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)||(vt0.c0)) IN ())) ORDER BY (((('vY')OR(CAST(rt0.c2 AS BLOB))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('vY')OR(CAST(rt0.c2 AS BLOB))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)||(vt0.c0)) IN ())) ORDER BY (((('vY')OR(CAST(rt0.c2 AS BLOB))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)||(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((('vY')OR(CAST(rt0.c2 AS BLOB))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0)||(vt0.c0)) IN ())) ORDER BY (((('vY')OR(CAST(rt0.c2 AS BLOB))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((((('')OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((('')OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((((('')OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((((((('')OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) NOT NULL) IN ())) ORDER BY (((((((('')OR(NULL)))OR(vt0.c0)))AND(vt0.c0)))OR(NULL)) COLLATE NOCASE COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (COALESCE(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL)) IS TRUE) DESC  NULLS LAST, ((0.11284914275734159) NOT BETWEEN (((NULL) ISNULL)) AND ((rt0.c1 IN ()))) ASC, ((((rt0.c2)AND(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS REAL)) IS TRUE) DESC  NULLS LAST, ((0.11284914275734159) NOT BETWEEN (((NULL) ISNULL)) AND ((rt0.c1 IN ()))) ASC, ((((rt0.c2)AND(rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL)) IS TRUE) DESC  NULLS LAST, ((0.11284914275734159) NOT BETWEEN (((NULL) ISNULL)) AND ((rt0.c1 IN ()))) ASC, ((((rt0.c2)AND(rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(NULL AS REAL)) IS TRUE) DESC  NULLS LAST, ((0.11284914275734159) NOT BETWEEN (((NULL) ISNULL)) AND ((rt0.c1 IN ()))) ASC, ((((rt0.c2)AND(rt0.c0))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((CAST(NULL AS REAL)) IS TRUE) DESC  NULLS LAST, ((0.11284914275734159) NOT BETWEEN (((NULL) ISNULL)) AND ((rt0.c1 IN ()))) ASC, ((((rt0.c2)AND(rt0.c0))) NOTNULL);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE RTRIM AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(CAST(vt0.c0 AS TEXT), x'bdf2')) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('0.07113744426036939') AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(vt0.c0 AS TEXT), x'bdf2')) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('0.07113744426036939') AND (vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(CAST(vt0.c0 AS TEXT), x'bdf2')) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('0.07113744426036939') AND (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND(CAST(vt0.c0 AS TEXT), x'bdf2')) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('0.07113744426036939') AND (vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (ROUND(CAST(vt0.c0 AS TEXT), x'bdf2')) ORDER BY ABS(DISTINCT ((vt0.c0) NOT BETWEEN ('0.07113744426036939') AND (vt0.c0)))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.7976931348623157E308)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((-6.64587274E8))))<(LIKE(rt0.c1, rt0.c0)))) ORDER BY ((CAST('-1631176525' AS BLOB)) BETWEEN ('0.8283040458831293') AND ((rt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((-6.64587274E8))))<(LIKE(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((-1.7976931348623157E308)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ORDER BY ((CAST('-1631176525' AS BLOB)) BETWEEN ('0.8283040458831293') AND ((rt0.c1 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.7976931348623157E308)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((-6.64587274E8))))<(LIKE(rt0.c1, rt0.c0)))) ORDER BY ((CAST('-1631176525' AS BLOB)) BETWEEN ('0.8283040458831293') AND ((rt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((-6.64587274E8))))<(LIKE(rt0.c1, rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((-1.7976931348623157E308)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) ORDER BY ((CAST('-1631176525' AS BLOB)) BETWEEN ('0.8283040458831293') AND ((rt0.c1 IN ()))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN rt0 ON ((-1.7976931348623157E308)OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) WHERE ((((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((-6.64587274E8))))<(LIKE(rt0.c1, rt0.c0)))) ORDER BY ((CAST('-1631176525' AS BLOB)) BETWEEN ('0.8283040458831293') AND ((rt0.c1 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)*(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0)*(x'')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND (('1978171655'))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND (('1978171655')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND (('1978171655'))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND (('1978171655')))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((vt0.c0)) AND (('1978171655'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y{0') AND (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y{0') AND (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y{0') AND (((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y{0') AND (((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN ('Y{0') AND (((vt0.c0)<=(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)+(-961340673))))==((((((NULL)AND(rt0.c1)))AND(rt0.c1)))))) ORDER BY '0.5432460337548167' DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)+(-961340673))))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '0.5432460337548167' DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)+(-961340673))))==((((((NULL)AND(rt0.c1)))AND(rt0.c1)))))) ORDER BY '0.5432460337548167' DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)+(-961340673))))=((((((NULL)AND(rt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY '0.5432460337548167' DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)+(-961340673))))==((((((NULL)AND(rt0.c1)))AND(rt0.c1)))))) ORDER BY '0.5432460337548167' DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)=(vt0.c0)))))AND(vt0.c0)))OR(NULL COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)==(vt0.c0)))))AND(vt0.c0)))OR(NULL COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)=(vt0.c0)))))AND(vt0.c0)))OR(NULL COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)==(vt0.c0)))))AND(vt0.c0)))OR(NULL COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)<<(vt0.c0)))<((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY ((IFNULL(vt0.c0, vt0.c0)) NOT NULL) ASC  NULLS FIRST, (((((((((vt0.c0 IN (vt0.c0, vt0.c0)))OR(vt0.c0)))AND(((vt0.c0)=(vt0.c0)))))AND(vt0.c0)))OR(NULL COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(x'82b4' AS REAL))) DESC, ((NULL)LIKE((~ (rt0.c1))))  NULLS LAST, (((((- (rt0.c1)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))OR(0.35980540312304443));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(x'82b4' AS REAL))) DESC, ((NULL)LIKE((~ (rt0.c1))))  NULLS LAST, (((((- (rt0.c1)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))OR(0.35980540312304443)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(x'82b4' AS REAL))) DESC, ((NULL)LIKE((~ (rt0.c1))))  NULLS LAST, (((((- (rt0.c1)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))OR(0.35980540312304443));
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<=(rt0.c1)) END) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(x'82b4' AS REAL))) DESC, ((NULL)LIKE((~ (rt0.c1))))  NULLS LAST, (((((- (rt0.c1)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))OR(0.35980540312304443)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c0 COLLATE BINARY  WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c0)<=(rt0.c1)) END) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(x'82b4' AS REAL))) DESC, ((NULL)LIKE((~ (rt0.c1))))  NULLS LAST, (((((- (rt0.c1)))AND(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))))OR(0.35980540312304443));
SELECT * FROM rt0 WHERE ((((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c1)))OR(HEX(rt0.c2))))AND(rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT BETWEEN (((('%Te{'))<((x'431a')))) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c1)))OR(HEX(rt0.c2))))AND(rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT BETWEEN (((('%Te{'))<((x'431a')))) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c1)))OR(HEX(rt0.c2))))AND(rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT BETWEEN (((('%Te{'))<((x'431a')))) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c1)))OR(HEX(rt0.c2))))AND(rtreenode(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT BETWEEN (((('%Te{'))<((x'431a')))) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((NOT (rt0.c0)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(rt0.c1)))OR(HEX(rt0.c2))))AND(rtreenode(rt0.c0, rt0.c0)))) ORDER BY ((((rt0.c0)AND(rt0.c1))) NOT BETWEEN (((('%Te{'))<((x'431a')))) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c0, rt0.c1)))))  NULLS FIRST, ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c0);
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (+ (((rt0.c1) NOT NULL))) WHERE (((((rt0.c0) NOT BETWEEN ('-1750746474') AND (rt0.c1)))IS(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN ('-1750746474') AND (rt0.c1)))IS(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c1) NOT NULL))));
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (+ (((rt0.c1) NOT NULL))) WHERE (((((rt0.c0) NOT BETWEEN ('-1750746474') AND (rt0.c1)))IS(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN ('-1750746474') AND (rt0.c1)))IS(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (+ (((rt0.c1) NOT NULL))));
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON (+ (((rt0.c1) NOT NULL))) WHERE (((((rt0.c0) NOT BETWEEN ('-1750746474') AND (rt0.c1)))IS(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c0, '227005177') AS BLOB)) ORDER BY IFNULL(rt0.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c1)))AND('784650901'))) DESC, ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c2) IS FALSE))))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)<<(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c2)))OR(0.6053074920189394))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(rt0.c0, '227005177') AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c1)))AND('784650901'))) DESC, ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c2) IS FALSE))))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)<<(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c2)))OR(0.6053074920189394))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c0, '227005177') AS BLOB)) ORDER BY IFNULL(rt0.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c1)))AND('784650901'))) DESC, ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c2) IS FALSE))))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)<<(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c2)))OR(0.6053074920189394))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULLIF(rt0.c0, '227005177') AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(rt0.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c1)))AND('784650901'))) DESC, ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c2) IS FALSE))))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)<<(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c2)))OR(0.6053074920189394))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(NULLIF(rt0.c0, '227005177') AS BLOB)) ORDER BY IFNULL(rt0.c2 COLLATE NOCASE, ((((rt0.c0)OR(rt0.c1)))AND('784650901'))) DESC, ((((((((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c2) IS FALSE))))OR(rt0.c0 COLLATE RTRIM)))AND(((rt0.c2)<<(rt0.c2)))))OR(((((rt0.c2)OR(rt0.c2)))OR(0.6053074920189394))))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (TYPEOF(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) ORDER BY (((((NULL) NOT NULL), LIKELY(DISTINCT vt0.c0), ((((0Xffffffffa017ea49)AND(rt0.c0)))AND(rt0.c2))))>=((((rt0.c0) NOTNULL), rt0.c1 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((NULL) NOT NULL), LIKELY(DISTINCT vt0.c0), ((((0Xffffffffa017ea49)AND(rt0.c0)))AND(rt0.c2))))>=((((rt0.c0) NOTNULL), rt0.c1 COLLATE RTRIM, (- (rt0.c1))))) ASC);
SELECT * FROM vt0, rt0 WHERE (TYPEOF(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) ORDER BY (((((NULL) NOT NULL), LIKELY(DISTINCT vt0.c0), ((((0Xffffffffa017ea49)AND(rt0.c0)))AND(rt0.c2))))>=((((rt0.c0) NOTNULL), rt0.c1 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((NULL) NOT NULL), LIKELY(DISTINCT vt0.c0), ((((0Xffffffffa017ea49)AND(rt0.c0)))AND(rt0.c2))))>=((((rt0.c0) NOTNULL), rt0.c1 COLLATE RTRIM, (- (rt0.c1))))) ASC);
SELECT * FROM vt0, rt0 WHERE (TYPEOF(((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))) ORDER BY (((((NULL) NOT NULL), LIKELY(DISTINCT vt0.c0), ((((0Xffffffffa017ea49)AND(rt0.c0)))AND(rt0.c2))))>=((((rt0.c0) NOTNULL), rt0.c1 COLLATE RTRIM, (- (rt0.c1))))) ASC;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS NUMERIC))) WHERE (((((vt0.c0)OR(x'')))%((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(x'')))%((+ (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS NUMERIC))) WHERE (((((vt0.c0)OR(x'')))%((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(x'')))%((+ (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (+ (CAST(rt0.c0 AS NUMERIC))) WHERE (((((vt0.c0)OR(x'')))%((+ (rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) IS TRUE))|((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))|((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) IS TRUE))|((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))|((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) IS TRUE))|((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN (('1830981753', rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))) ORDER BY ((((rt0.c2) IS TRUE))AND(LIKELY(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN (('1830981753', rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE))AND(LIKELY(DISTINCT rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN (('1830981753', rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))) ORDER BY ((((rt0.c2) IS TRUE))AND(LIKELY(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN (('1830981753', rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE))AND(LIKELY(DISTINCT rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN (('1830981753', rt0.c1, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))) ORDER BY ((((rt0.c2) IS TRUE))AND(LIKELY(DISTINCT rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((- (vt0.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY CAST((+ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((- (vt0.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((- (vt0.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY CAST((+ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((- (vt0.c0)))))OR(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST((+ (vt0.c0)) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((- (vt0.c0)))))OR(((vt0.c0) ISNULL)))) ORDER BY CAST((+ (vt0.c0)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(x''))) NOTNULL)) ORDER BY vt0.c0 ASC, NULL  NULLS LAST, CAST(vt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(x''))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC, NULL  NULLS LAST, CAST(vt0.c0 AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(x''))) NOTNULL)) ORDER BY vt0.c0 ASC, NULL  NULLS LAST, CAST(vt0.c0 AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<<(x''))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0 ASC, NULL  NULLS LAST, CAST(vt0.c0 AS NUMERIC) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)<<(x''))) NOTNULL)) ORDER BY vt0.c0 ASC, NULL  NULLS LAST, CAST(vt0.c0 AS NUMERIC) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('0.07113744426036939'))) THEN (~ (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (0.900888294764979) AND (NULL)) END) ORDER BY ((((rt0.c1) NOTNULL))<(rt0.c2)) ASC  NULLS LAST, (+ (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('0.07113744426036939'))) THEN (~ (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (0.900888294764979) AND (NULL)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL))<(rt0.c2)) ASC  NULLS LAST, (+ (vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('0.07113744426036939'))) THEN (~ (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (0.900888294764979) AND (NULL)) END) ORDER BY ((((rt0.c1) NOTNULL))<(rt0.c2)) ASC  NULLS LAST, (+ (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('0.07113744426036939'))) THEN (~ (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (0.900888294764979) AND (NULL)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1) NOTNULL))<(rt0.c2)) ASC  NULLS LAST, (+ (vt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE (rt0.c2 IN ())  WHEN (((rt0.c1)) NOT BETWEEN ((vt0.c0)) AND (('0.07113744426036939'))) THEN (~ (rt0.c1)) ELSE ((rt0.c1) NOT BETWEEN (0.900888294764979) AND (NULL)) END) ORDER BY ((((rt0.c1) NOTNULL))<(rt0.c2)) ASC  NULLS LAST, (+ (vt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (((rt0.c0) NOT NULL) IN ())  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<(json_array_length(rt0.c2, rt0.c0))) ASC  NULLS FIRST, (((x'')) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOT NULL) IN ())  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<(json_array_length(rt0.c2, rt0.c0))) ASC  NULLS FIRST, (((x'')) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (((rt0.c0) NOT NULL) IN ())  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<(json_array_length(rt0.c2, rt0.c0))) ASC  NULLS FIRST, (((x'')) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) NOT NULL) IN ())  NULLS LAST, (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))<(json_array_length(rt0.c2, rt0.c0))) ASC  NULLS FIRST, (((x'')) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY x'8360e321';
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'8360e321');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY x'8360e321';
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'8360e321');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY x'8360e321';
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)||(rt0.c2))) IS TRUE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN 0xffffffffd8473652 WHEN rt0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY ((((rt0.c2) IS TRUE))/(((0.3566251721880517)+(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN 0xffffffffd8473652 WHEN rt0.c0 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)||(rt0.c2))) IS TRUE) ORDER BY ((((rt0.c2) IS TRUE))/(((0.3566251721880517)+(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)||(rt0.c2))) IS TRUE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN 0xffffffffd8473652 WHEN rt0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY ((((rt0.c2) IS TRUE))/(((0.3566251721880517)+(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN 0xffffffffd8473652 WHEN rt0.c0 THEN x'' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)||(rt0.c2))) IS TRUE) ORDER BY ((((rt0.c2) IS TRUE))/(((0.3566251721880517)+(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((((rt0.c1)||(rt0.c2))) IS TRUE) WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))))AND(CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END)))AND(CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN 0xffffffffd8473652 WHEN rt0.c0 THEN x'' ELSE vt0.c0 END))) ORDER BY ((((rt0.c2) IS TRUE))/(((0.3566251721880517)+(rt0.c2)))) ASC;
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)==(rt0.c0 COLLATE NOCASE))) ORDER BY 0.166100176738613  NULLS FIRST, (- (((rt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.166100176738613  NULLS FIRST, (- (((rt0.c0)||(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)==(rt0.c0 COLLATE NOCASE))) ORDER BY 0.166100176738613  NULLS FIRST, (- (((rt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)=(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.166100176738613  NULLS FIRST, (- (((rt0.c0)||(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2)==(rt0.c0 COLLATE NOCASE))) ORDER BY 0.166100176738613  NULLS FIRST, (- (((rt0.c0)||(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c2) NOT BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2) NOT BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c2) NOT BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c2) NOT BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (NULL) ORDER BY ((rt0.c2) NOT BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM DESC;
SELECT ALL * FROM rt0 WHERE (STRFTIME(('1	cE渶mq' IN ()), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c0)))) ORDER BY (- (((rt0.c2) IS FALSE))) DESC, ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(('1	cE渶mq' IN ()), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) IS FALSE))) DESC, ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (STRFTIME(('1	cE渶mq' IN ()), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c0)))) ORDER BY (- (((rt0.c2) IS FALSE))) DESC, ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(('1	cE渶mq' IN ()), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c2) IS FALSE))) DESC, ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (STRFTIME(('1	cE渶mq' IN ()), ((rt0.c1)LIKE(rt0.c1)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c1)>>(rt0.c0)))) ORDER BY (- (((rt0.c2) IS FALSE))) DESC, ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE (rt0.c2) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE (rt0.c2) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c2 AS BLOB)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON (rt0.c2 COLLATE BINARY IN ()) WHERE (rt0.c2) ORDER BY ((('')) NOT BETWEEN ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) AND ((CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)-(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)-(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)-(vt0.c0)) AS BLOB));
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((NULL)<<(rt0.c1))))) ORDER BY ((((vt0.c0)LIKE(rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((~ (((NULL)<<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)LIKE(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((NULL)<<(rt0.c1))))) ORDER BY ((((vt0.c0)LIKE(rt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((~ (((NULL)<<(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)LIKE(rt0.c0))) ISNULL));
SELECT ALL * FROM rt0, vt0 WHERE ((~ (((NULL)<<(rt0.c1))))) ORDER BY ((((vt0.c0)LIKE(rt0.c0))) ISNULL);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (x'') ORDER BY CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE COLLATE BINARY;
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT -1.757363386E9));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT -1.757363386E9)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT -1.757363386E9));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT -1.757363386E9)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(DISTINCT -1.757363386E9));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c2)IS NOT(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE ((~ (((rt0.c2)IS NOT(rt0.c2))))) ORDER BY (rt0.c2 IN ());
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (NULL))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS NUMERIC)) NOT BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c1) AND (NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN NULL END, (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), (~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN NULL END, (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN NULL END, (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), (~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN NULL END, (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), (~ (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(CASE vt0.c0  WHEN vt0.c0 THEN NULL END, (vt0.c0 IN ()), CAST(vt0.c0 AS INTEGER), (~ (vt0.c0))));
SELECT * FROM vt0, rt0 WHERE (IFNULL(((((((((rt0.c0)AND(rt0.c2)))OR(-7.50843924E8)))AND(rt0.c0)))OR(vt0.c0)), (((vt0.c0))>(('602957517'))))) ORDER BY (((+ (vt0.c0)))==(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((((((rt0.c0)AND(rt0.c2)))OR(-7.50843924E8)))AND(rt0.c0)))OR(vt0.c0)), (((vt0.c0))>(('602957517'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY (((+ (vt0.c0)))==(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (IFNULL(((((((((rt0.c0)AND(rt0.c2)))OR(-7.50843924E8)))AND(rt0.c0)))OR(vt0.c0)), (((vt0.c0))>(('602957517'))))) ORDER BY (((+ (vt0.c0)))==(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((((((rt0.c0)AND(rt0.c2)))OR(-7.50843924E8)))AND(rt0.c0)))OR(vt0.c0)), (((vt0.c0))>(('602957517'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY (((+ (vt0.c0)))==(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (IFNULL(((((((((rt0.c0)AND(rt0.c2)))OR(-7.50843924E8)))AND(rt0.c0)))OR(vt0.c0)), (((vt0.c0))>(('602957517'))))) ORDER BY (((+ (vt0.c0)))==(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE ((+ (NULL))) ORDER BY x'1fc9' COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'1fc9' COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((+ (NULL))) ORDER BY x'1fc9' COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY x'1fc9' COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((+ (NULL))) ORDER BY x'1fc9' COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(vt0.c0, vt0.c0)) NOTNULL)) ORDER BY CASE WHEN NULL THEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c0))) ORDER BY (((((rt0.c2))<>((rt0.c1))))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TRIM(DISTINCT rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2))<>((rt0.c1))))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c0))) ORDER BY (((((rt0.c2))<>((rt0.c1))))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT TRIM(DISTINCT rt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2))<>((rt0.c1))))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (ABS(DISTINCT TRIM(DISTINCT rt0.c0))) ORDER BY (((((rt0.c2))<>((rt0.c1))))IS NOT(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x''))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE -572967896  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE -572967896  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE -572967896  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE -572967896  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE -572967896  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END) AND (((vt0.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(x''))) ORDER BY LIKE(((((((((vt0.c0)AND(x'3737')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), SQLITE_VERSION(), ',')  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))OR(x''))) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((((((((vt0.c0)AND(x'3737')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), SQLITE_VERSION(), ',')  NULLS LAST, (vt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(x''))) ORDER BY LIKE(((((((((vt0.c0)AND(x'3737')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), SQLITE_VERSION(), ',')  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))OR(x''))) IS TRUE)  as count FROM vt0 ORDER BY LIKE(((((((((vt0.c0)AND(x'3737')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), SQLITE_VERSION(), ',')  NULLS LAST, (vt0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))OR(x''))) ORDER BY LIKE(((((((((vt0.c0)AND(x'3737')))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), SQLITE_VERSION(), ',')  NULLS LAST, (vt0.c0 IN ()) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY (+ (rt0.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))-(CAST(']B*' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))-(CAST(']B*' AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))-(CAST(']B*' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))-(CAST(']B*' AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))-(CAST(']B*' AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(TRIM(rt0.c0))))AND('-1041660077')));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(TRIM(rt0.c0))))AND('-1041660077'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(TRIM(rt0.c0))))AND('-1041660077')));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(TRIM(rt0.c0))))AND('-1041660077'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(TRIM(rt0.c0))))AND('-1041660077')));
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL))>=(((rt0.c0) ISNULL)))) ORDER BY ((~ (rt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (0.43890828656283876))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (0.43890828656283876))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL))>=(((rt0.c0) ISNULL)))) ORDER BY ((~ (rt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (0.43890828656283876))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>=(((rt0.c0) ISNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((~ (rt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (0.43890828656283876))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOTNULL))>=(((rt0.c0) ISNULL)))) ORDER BY ((~ (rt0.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (0.43890828656283876))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(CAST(rt0.c1 AS REAL))))AND((~ (0x575ca3a)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(CAST(rt0.c1 AS REAL))))AND((~ (0x575ca3a))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(CAST(rt0.c1 AS REAL))))AND((~ (0x575ca3a)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(CAST(rt0.c1 AS REAL))))AND((~ (0x575ca3a))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND(CAST(rt0.c1 AS REAL))))AND((~ (0x575ca3a)))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE (CASE (rt0.c2 IN ())  WHEN (rt0.c2 IN ()) THEN 9.016439877022053E-4 WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (rt0.c2 IN ()) THEN 9.016439877022053E-4 WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)=(vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE (CASE (rt0.c2 IN ())  WHEN (rt0.c2 IN ()) THEN 9.016439877022053E-4 WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (rt0.c2 IN ())  WHEN (rt0.c2 IN ()) THEN 9.016439877022053E-4 WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)=(vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) WHERE (CASE (rt0.c2 IN ())  WHEN (rt0.c2 IN ()) THEN 9.016439877022053E-4 WHEN ((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)) THEN ((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c1 IN ()) ELSE ((rt0.c2)=(vt0.c0)) END);
SELECT * FROM vt0 WHERE (CAST((('')OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('')OR(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')OR(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((('')OR(vt0.c0)) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt0.c0)));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt0.c0)) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt0.c0)));
SELECT * FROM rt0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END)GLOB(vt0.c0)) WHERE (rt0.c0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)IS NOT(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0)IS NOT(rt0.c0)) IN ()));
SELECT ALL * FROM vt0 WHERE (('29351786' COLLATE NOCASE IN (((vt0.c0)<>(vt0.c0)), vt0.c0))) ORDER BY QUOTE(vt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('29351786' COLLATE NOCASE IN (((vt0.c0)<>(vt0.c0)), vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(vt0.c0) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (('29351786' COLLATE NOCASE IN (((vt0.c0)<>(vt0.c0)), vt0.c0))) ORDER BY QUOTE(vt0.c0) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((('29351786' COLLATE NOCASE IN (((vt0.c0)<>(vt0.c0)), vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY QUOTE(vt0.c0) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (('29351786' COLLATE NOCASE IN (((vt0.c0)<>(vt0.c0)), vt0.c0))) ORDER BY QUOTE(vt0.c0) COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE ('㨦-') ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('㨦-') IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('㨦-') ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('㨦-') IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ('㨦-') ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (x'77f5') AND (rt0.c2)))IS NOT(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (x'77f5') AND (rt0.c2)))IS NOT(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (x'77f5') AND (rt0.c2)))IS NOT(((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (x'77f5') AND (rt0.c2)))IS NOT(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (x'77f5') AND (rt0.c2)))IS NOT(((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c0))))))OR(CAST(NULL AS REAL))))AND(TRIM(DISTINCT rt0.c1))))AND((((('0.3752300771923692')AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c1, rt0.c1, rt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))))))OR(CAST(NULL AS REAL))))AND(TRIM(DISTINCT rt0.c1))))AND((((('0.3752300771923692')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c0))))))OR(CAST(NULL AS REAL))))AND(TRIM(DISTINCT rt0.c1))))AND((((('0.3752300771923692')AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c1, rt0.c1, rt0.c0))<>((rt0.c2, rt0.c1, rt0.c0))))))OR(CAST(NULL AS REAL))))AND(TRIM(DISTINCT rt0.c1))))AND((((('0.3752300771923692')AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((CAST(rt0.c0 AS TEXT))AND((((rt0.c1, rt0.c1, rt0.c0))!=((rt0.c2, rt0.c1, rt0.c0))))))OR(CAST(NULL AS REAL))))AND(TRIM(DISTINCT rt0.c1))))AND((((('0.3752300771923692')AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULLIF(DISTINCT rt0.c2, rt0.c0), NULL)) AND ((rt0.c1, 0.22405079118877613, json_valid(rt0.c0)))) WHERE ((((COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c2)))<=((((vt0.c0)LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c2)))<=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULLIF(DISTINCT rt0.c2, rt0.c0), NULL)) AND ((rt0.c1, 0.22405079118877613, json_valid(rt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULLIF(DISTINCT rt0.c2, rt0.c0), NULL)) AND ((rt0.c1, 0.22405079118877613, json_valid(rt0.c0)))) WHERE ((((COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c2)))<=((((vt0.c0)LIKE(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c2)))<=((((vt0.c0)LIKE(vt0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULLIF(DISTINCT rt0.c2, rt0.c0), NULL)) AND ((rt0.c1, 0.22405079118877613, json_valid(rt0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (((rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))), NULLIF(DISTINCT rt0.c2, rt0.c0), NULL)) AND ((rt0.c1, 0.22405079118877613, json_valid(rt0.c0)))) WHERE ((((COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c2)))<=((((vt0.c0)LIKE(vt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN -5.34442634E8 ELSE rt0.c2 END)<(((0x76ddd961)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN -5.34442634E8 ELSE rt0.c2 END)<(((0x76ddd961)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN -5.34442634E8 ELSE rt0.c2 END)<(((0x76ddd961)==(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN -5.34442634E8 ELSE rt0.c2 END)<(((0x76ddd961)=(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN -5.34442634E8 ELSE rt0.c2 END)<(((0x76ddd961)==(rt0.c1)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (NULL))) ORDER BY (~ (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (vt0.c0)) COLLATE RTRIM ORDER BY (~ (rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (NULL))) ORDER BY (~ (rt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (NOT (vt0.c0)) COLLATE RTRIM ORDER BY (~ (rt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (NOT (vt0.c0)) COLLATE RTRIM WHERE (((((rt0.c2) ISNULL)) NOT BETWEEN ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))) AND (NULL))) ORDER BY (~ (rt0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c1)) THEN rt0.c1 COLLATE BINARY END) ORDER BY TYPEOF((vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF((vt0.c0 IN ())) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c1)) THEN rt0.c1 COLLATE BINARY END) ORDER BY TYPEOF((vt0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF((vt0.c0 IN ())) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN (- (rt0.c1)) THEN rt0.c1 COLLATE BINARY END) ORDER BY TYPEOF((vt0.c0 IN ())) DESC;
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('');
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY CAST(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c2)>(rt0.c0)))) WHERE ((NOT (x''))) ORDER BY ((((rt0.c1) ISNULL))LIKE(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c2)>(rt0.c0)))) ORDER BY ((((rt0.c1) ISNULL))LIKE(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c2)>(rt0.c0)))) WHERE ((NOT (x''))) ORDER BY ((((rt0.c1) ISNULL))LIKE(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c2)>(rt0.c0)))) ORDER BY ((((rt0.c1) ISNULL))LIKE(rt0.c2 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND (((rt0.c2)>(rt0.c0)))) WHERE ((NOT (x''))) ORDER BY ((((rt0.c1) ISNULL))LIKE(rt0.c2 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((((rt0.c2)OR(NULL)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) BETWEEN (((((rt0.c2)OR(NULL)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((((rt0.c2)OR(NULL)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(rt0.c2))) BETWEEN (((((rt0.c2)OR(NULL)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)OR(rt0.c2))) BETWEEN (((((rt0.c2)OR(NULL)))AND(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) BETWEEN (((rt0.c0)>>(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY (NOT (LAST_INSERT_ROWID()))  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) BETWEEN (((rt0.c0)>>(rt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LAST_INSERT_ROWID()))  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) BETWEEN (((rt0.c0)>>(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY (NOT (LAST_INSERT_ROWID()))  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) BETWEEN (((rt0.c0)>>(rt0.c0))) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (LAST_INSERT_ROWID()))  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ()));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) BETWEEN (((rt0.c0)>>(rt0.c0))) AND ((~ (rt0.c1))))) ORDER BY (NOT (LAST_INSERT_ROWID()))  NULLS LAST, (rt0.c0 COLLATE RTRIM IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((vt0.c0 IN ()))))) ORDER BY (NOT (vt0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(((rt0.c2) IS TRUE)) WHERE (((((((rt0.c1)|(rt0.c1)))AND((- (rt0.c0)))))AND('-228639898')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)|(rt0.c1)))AND((- (rt0.c0)))))AND('-228639898'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(((rt0.c2) IS TRUE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(((rt0.c2) IS TRUE)) WHERE (((((((rt0.c1)|(rt0.c1)))AND((- (rt0.c0)))))AND('-228639898')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)|(rt0.c1)))AND((- (rt0.c0)))))AND('-228639898'))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(((rt0.c2) IS TRUE)));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON UNLIKELY(((rt0.c2) IS TRUE)) WHERE (((((((rt0.c1)|(rt0.c1)))AND((- (rt0.c0)))))AND('-228639898')));
SELECT ALL * FROM vt0, rt0 WHERE (HEX(DISTINCT (~ (0.4230056033526085)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (0.4230056033526085)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (HEX(DISTINCT (~ (0.4230056033526085)))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT (~ (0.4230056033526085)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (HEX(DISTINCT (~ (0.4230056033526085)))) ORDER BY rt0.c1  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))+(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY ((((PRINTF(x'59e8'))AND(',)')))OR(((rt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))+(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((PRINTF(x'59e8'))AND(',)')))OR(((rt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))+(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY ((((PRINTF(x'59e8'))AND(',)')))OR(((rt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ()))+(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((PRINTF(x'59e8'))AND(',)')))OR(((rt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c0 IN ()))+(((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))))) ORDER BY ((((PRINTF(x'59e8'))AND(',)')))OR(((rt0.c0)LIKE(rt0.c0)))) DESC  NULLS FIRST, (NOT (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((rt0.c1))<=((0.2510613068994819))))))OR(LTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((rt0.c1))<=((0.2510613068994819))))))OR(LTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((rt0.c1))<=((0.2510613068994819))))))OR(LTRIM(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((rt0.c1))<=((0.2510613068994819))))))OR(LTRIM(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)OR((((rt0.c1))<=((0.2510613068994819))))))OR(LTRIM(rt0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), '601470102', ((vt0.c0) BETWEEN ('-1782110060') AND (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), '601470102', ((vt0.c0) BETWEEN ('-1782110060') AND (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), '601470102', ((vt0.c0) BETWEEN ('-1782110060') AND (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), '601470102', ((vt0.c0) BETWEEN ('-1782110060') AND (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL), '601470102', ((vt0.c0) BETWEEN ('-1782110060') AND (vt0.c0)))) AND ((((vt0.c0) NOT NULL), CAST(vt0.c0 AS NUMERIC), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (((vt0.c0))>((vt0.c0)))  WHEN TRIM(DISTINCT vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (NULL IN ()) THEN JULIANDAY('', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))>((vt0.c0)))  WHEN TRIM(DISTINCT vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (NULL IN ()) THEN JULIANDAY('', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (((vt0.c0))>((vt0.c0)))  WHEN TRIM(DISTINCT vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (NULL IN ()) THEN JULIANDAY('', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))>((vt0.c0)))  WHEN TRIM(DISTINCT vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (NULL IN ()) THEN JULIANDAY('', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS INTEGER)) ORDER BY CASE (((vt0.c0))>((vt0.c0)))  WHEN TRIM(DISTINCT vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c0)%(vt0.c0)) WHEN (NULL IN ()) THEN JULIANDAY('', vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0) END;
SELECT * FROM rt0, vt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0 COLLATE RTRIM);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)GLOB(rt0.c0)) THEN json_array_length(rt0.c0) WHEN HEX('\rr') THEN '' WHEN vt0.c0 THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE '''坠0Z)' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)GLOB(rt0.c0)) THEN json_array_length(rt0.c0) WHEN HEX('\rr') THEN '' WHEN vt0.c0 THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE '''坠0Z)' END  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)GLOB(rt0.c0)) THEN json_array_length(rt0.c0) WHEN HEX('\rr') THEN '' WHEN vt0.c0 THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE '''坠0Z)' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)GLOB(rt0.c0)) THEN json_array_length(rt0.c0) WHEN HEX('\rr') THEN '' WHEN vt0.c0 THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE '''坠0Z)' END  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0)<(rt0.c1)) AS TEXT)) ORDER BY CASE WHEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) THEN CASE WHEN vt0.c0 THEN rt0.c1 END WHEN ((vt0.c0)GLOB(rt0.c0)) THEN json_array_length(rt0.c0) WHEN HEX('\rr') THEN '' WHEN vt0.c0 THEN ((rt0.c2) NOTNULL) WHEN vt0.c0 THEN CAST(rt0.c0 AS NUMERIC) ELSE '''坠0Z)' END  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)/(rt0.c2))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END THEN (x'' IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (0.754489443862787) AND (rt0.c2)) THEN (((x'', rt0.c1, rt0.c0))=((rt0.c2, rt0.c1, rt0.c0))) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN NULL WHEN ((rt0.c0) IS FALSE) THEN ((0.8980821482416825)>=(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN '^h}Wd' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (-1.170883398E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)/(rt0.c2))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END THEN (x'' IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (0.754489443862787) AND (rt0.c2)) THEN (((x'', rt0.c1, rt0.c0))=((rt0.c2, rt0.c1, rt0.c0))) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN NULL WHEN ((rt0.c0) IS FALSE) THEN ((0.8980821482416825)>=(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN '^h}Wd' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (-1.170883398E9)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)/(rt0.c2))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END THEN (x'' IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (0.754489443862787) AND (rt0.c2)) THEN (((x'', rt0.c1, rt0.c0))=((rt0.c2, rt0.c1, rt0.c0))) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN NULL WHEN ((rt0.c0) IS FALSE) THEN ((0.8980821482416825)>=(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN '^h}Wd' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (-1.170883398E9)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)/(rt0.c2))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END THEN (x'' IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (0.754489443862787) AND (rt0.c2)) THEN (((x'', rt0.c1, rt0.c0))=((rt0.c2, rt0.c1, rt0.c0))) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN NULL WHEN ((rt0.c0) IS FALSE) THEN ((0.8980821482416825)>=(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN '^h}Wd' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (-1.170883398E9)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((rt0.c2)/(rt0.c2))  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END THEN (x'' IN ()) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN '' ELSE rt0.c2 END WHEN ((rt0.c0) BETWEEN (0.754489443862787) AND (rt0.c2)) THEN (((x'', rt0.c1, rt0.c0))=((rt0.c2, rt0.c1, rt0.c0))) WHEN rt0.c0 COLLATE RTRIM THEN (+ (rt0.c2)) WHEN ((rt0.c2)GLOB(rt0.c2)) THEN NULL WHEN ((rt0.c0) IS FALSE) THEN ((0.8980821482416825)>=(rt0.c1)) WHEN ((rt0.c0) IS FALSE) THEN '^h}Wd' WHEN CAST(rt0.c2 AS INTEGER) THEN (~ (-1.170883398E9)) END);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((CASE WHEN vt0.c0 THEN vt0.c0 END))>((vt0.c0)))) ORDER BY ((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))IS(CAST(vt0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC)) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) ISNULL), CASE x'5b41'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, '-9223372036854775808', ((rt0.c2)<>(rt0.c0)), ((rt0.c2)IS NOT(rt0.c0)))) AND ((((rt0.c0)==(rt0.c0)), ((rt0.c2)<(rt0.c2)), ((rt0.c1)<>(rt0.c2)), 0.0018656559352135949, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) ISNULL), CASE x'5b41'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, '-9223372036854775808', ((rt0.c2)!=(rt0.c0)), ((rt0.c2)IS NOT(rt0.c0)))) AND ((((rt0.c0)==(rt0.c0)), ((rt0.c2)<(rt0.c2)), ((rt0.c1)<>(rt0.c2)), 0.0018656559352135949, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) ISNULL), CASE x'5b41'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, '-9223372036854775808', ((rt0.c2)<>(rt0.c0)), ((rt0.c2)IS NOT(rt0.c0)))) AND ((((rt0.c0)==(rt0.c0)), ((rt0.c2)<(rt0.c2)), ((rt0.c1)<>(rt0.c2)), 0.0018656559352135949, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) ISNULL), CASE x'5b41'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, '-9223372036854775808', ((rt0.c2)!=(rt0.c0)), ((rt0.c2)IS NOT(rt0.c0)))) AND ((((rt0.c0)==(rt0.c0)), ((rt0.c2)<(rt0.c2)), ((rt0.c1)<>(rt0.c2)), 0.0018656559352135949, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1, rt0.c2, rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1) ISNULL), CASE x'5b41'  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END, '-9223372036854775808', ((rt0.c2)<>(rt0.c0)), ((rt0.c2)IS NOT(rt0.c0)))) AND ((((rt0.c0)==(rt0.c0)), ((rt0.c2)<(rt0.c2)), ((rt0.c1)<>(rt0.c2)), 0.0018656559352135949, rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(x'c925' AS INTEGER))-((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'c925' AS INTEGER))-((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(x'c925' AS INTEGER))-((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'c925' AS INTEGER))-((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(x'c925' AS INTEGER))-((- (rt0.c1)))));
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'b24b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)/(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'b24b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)/(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'b24b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)/(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'b24b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)/(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)));
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN x'b24b' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END)/(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN x'' THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '785105513' ELSE vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN LIKE('-40934145', vt0.c0) WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 344780066 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN x'' THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '785105513' ELSE vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN LIKE('-40934145', vt0.c0) WHEN (NOT (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 344780066 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) DESC, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN x'' THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '785105513' ELSE vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN LIKE('-40934145', vt0.c0) WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 344780066 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) DESC, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN x'' THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '785105513' ELSE vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN LIKE('-40934145', vt0.c0) WHEN (NOT (vt0.c0)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 344780066 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) DESC, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CASE vt0.c0  WHEN x'' THEN vt0.c0 END  WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN '785105513' ELSE vt0.c0 END WHEN ((vt0.c0)>(vt0.c0)) THEN LIKE('-40934145', vt0.c0) WHEN (NOT (vt0.c0)) THEN vt0.c0 END) ORDER BY vt0.c0 ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 344780066 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) DESC, vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))/(x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0))/(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))/(x'' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c0))/(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c0))/(x'' COLLATE BINARY)));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(vt0.c0)))AND(ABS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE BINARY)AND(vt0.c0)))AND(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(vt0.c0)))AND(ABS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2 COLLATE BINARY)AND(vt0.c0)))AND(ABS(rt0.c2)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c2 COLLATE BINARY)AND(vt0.c0)))AND(ABS(rt0.c2))));
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c0 IN (rt0.c0)) AS REAL));
SELECT ALL * FROM rt0 WHERE (((((0.8647606542274908)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1) BETWEEN (0.5885845323890455) AND (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((0.8647606542274908)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (0.5885845323890455) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((0.8647606542274908)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1) BETWEEN (0.5885845323890455) AND (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((0.8647606542274908)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) BETWEEN (0.5885845323890455) AND (rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((0.8647606542274908)OR((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR(rt0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1) BETWEEN (0.5885845323890455) AND (rt0.c2))) NOTNULL);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((rt0.c0 IN ()));
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(NULL)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(NULL)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((LENGTH(NULL)) BETWEEN ((~ (vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (MIN(rt0.c0, rt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE -789184314 END) BETWEEN ((rt0.c2 IN ())) AND (0.7345334434956469)) ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS FIRST, ((((rt0.c2)|(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.6656348344203872)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (MIN(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE -789184314 END) BETWEEN ((rt0.c2 IN ())) AND (0.7345334434956469)) ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS FIRST, ((((rt0.c2)|(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.6656348344203872)) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (MIN(rt0.c0, rt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE -789184314 END) BETWEEN ((rt0.c2 IN ())) AND (0.7345334434956469)) ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS FIRST, ((((rt0.c2)|(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.6656348344203872)) ASC;
SELECT SUM(count) FROM (SELECT (((+ (MIN(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE -789184314 END) BETWEEN ((rt0.c2 IN ())) AND (0.7345334434956469)) ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS FIRST, ((((rt0.c2)|(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.6656348344203872)) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (MIN(rt0.c0, rt0.c0)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE -789184314 END) BETWEEN ((rt0.c2 IN ())) AND (0.7345334434956469)) ASC, ((((vt0.c0) NOTNULL)) IS FALSE) DESC  NULLS FIRST, ((((rt0.c2)|(vt0.c0))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (0.6656348344203872)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (((vt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY (((((((((vt0.c0 IN ()))OR(x'')))AND(vt0.c0)))OR(TRIM(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR(x'')))AND(vt0.c0)))OR(TRIM(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY (((((((((vt0.c0 IN ()))OR(x'')))AND(vt0.c0)))OR(TRIM(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c0 IN ()))OR(x'')))AND(vt0.c0)))OR(TRIM(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c0)<(vt0.c0)) END) ORDER BY (((((((((vt0.c0 IN ()))OR(x'')))AND(vt0.c0)))OR(TRIM(vt0.c0))))OR(CAST(vt0.c0 AS REAL))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.5584344523227245)) ORDER BY (((rt0.c2)%(rt0.c0)) IN ()), (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c1))!=((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.5584344523227245)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)%(rt0.c0)) IN ()), (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c1))!=((rt0.c1)))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.5584344523227245)) ORDER BY (((rt0.c2)%(rt0.c0)) IN ()), (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c1))!=((rt0.c1)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.5584344523227245)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)%(rt0.c0)) IN ()), (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c1))!=((rt0.c1)))))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), 0.5584344523227245)) ORDER BY (((rt0.c2)%(rt0.c0)) IN ()), (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))<>(((((rt0.c1))!=((rt0.c1)))))) DESC;
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)&(rt0.c0)) IN ()) WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)&(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)&(rt0.c0)) IN ()) WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)&(rt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c1)&(rt0.c0)) IN ()) WHERE (((rt0.c0) BETWEEN (rt0.c0 COLLATE RTRIM) AND ((((rt0.c2)) BETWEEN ((NULL)) AND ((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c2 AS REAL))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) NOT NULL))) DESC, (((rt0.c0))<=((rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) NOT NULL))) DESC, (((rt0.c0))<=((rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c2 AS REAL))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) NOT NULL))) DESC, (((rt0.c0))<=((rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(rt0.c2 AS REAL))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) NOT NULL))) DESC, (((rt0.c0))<=((rt0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(CAST(rt0.c2 AS NUMERIC)))) ORDER BY ((((CAST(rt0.c2 AS REAL))OR(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c0)))))AND(((rt0.c0) NOT NULL))) DESC, (((rt0.c0))<=((rt0.c2))) ASC;
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<=((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))<=((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((- ((((vt0.c0))<=((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)<>(rt0.c0)) COLLATE NOCASE WHERE (((-8.60037254E8)-(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-8.60037254E8)-(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)<>(rt0.c0)) COLLATE NOCASE WHERE (((-8.60037254E8)-(((vt0.c0)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((-8.60037254E8)-(((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)!=(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((rt0.c2)<>(rt0.c0)) COLLATE NOCASE WHERE (((-8.60037254E8)-(((vt0.c0)-(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0) IS TRUE)) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB) ASC;
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c1))<=((rt0.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c1))<=((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c1))<=((rt0.c0))))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((rt0.c1))<=((rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT (((rt0.c1))<=((rt0.c0))))) ORDER BY x'' ASC;
SELECT * FROM rt0 WHERE ('-1136089523');
SELECT SUM(count) FROM (SELECT (('-1136089523') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1136089523');
SELECT SUM(count) FROM (SELECT (('-1136089523') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1136089523');
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (vt0.c0))))) WHERE (((CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) ISNULL)) ORDER BY '-1170883398' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (vt0.c0))))) ORDER BY '-1170883398' ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (vt0.c0))))) WHERE (((CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) ISNULL)) ORDER BY '-1170883398' ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (vt0.c0))))) ORDER BY '-1170883398' ASC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND (((~ (vt0.c0))))) WHERE (((CASE WHEN NULL THEN vt0.c0 ELSE rt0.c2 END) ISNULL)) ORDER BY '-1170883398' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c2  WHEN NULL THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c2  WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c2  WHEN NULL THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt0.c2  WHEN NULL THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c2  WHEN NULL THEN rt0.c1 END)));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS BLOB) WHERE ((((x'279a')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS REAL))))) ORDER BY ((rt0.c0)<(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x'279a')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS BLOB) ORDER BY ((rt0.c0)<(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS BLOB) WHERE ((((x'279a')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS REAL))))) ORDER BY ((rt0.c0)<(rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((x'279a')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS REAL))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS BLOB) ORDER BY ((rt0.c0)<(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON CAST(((rt0.c1)IS(rt0.c2)) AS BLOB) WHERE ((((x'279a')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) AND ((CAST(rt0.c0 AS REAL))))) ORDER BY ((rt0.c0)<(rt0.c2)) COLLATE NOCASE;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2)/(rt0.c0)) ELSE (rt0.c2 IN ()) END) ORDER BY (LOWER(vt0.c0) IN ())  NULLS FIRST, ((((rt0.c1)GLOB(rt0.c0)))%(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) ASC, ((rt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2)/(rt0.c0)) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (LOWER(vt0.c0) IN ())  NULLS FIRST, ((((rt0.c1)GLOB(rt0.c0)))%(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) ASC, ((rt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2)/(rt0.c0)) ELSE (rt0.c2 IN ()) END) ORDER BY (LOWER(vt0.c0) IN ())  NULLS FIRST, ((((rt0.c1)GLOB(rt0.c0)))%(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) ASC, ((rt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2)/(rt0.c0)) ELSE (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (LOWER(vt0.c0) IN ())  NULLS FIRST, ((((rt0.c1)GLOB(rt0.c0)))%(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) ASC, ((rt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE NULL  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2)/(rt0.c0)) ELSE (rt0.c2 IN ()) END) ORDER BY (LOWER(vt0.c0) IN ())  NULLS FIRST, ((((rt0.c1)GLOB(rt0.c0)))%(((((rt0.c0)OR(vt0.c0)))AND(rt0.c0)))) ASC, ((rt0.c0) NOTNULL);
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END IN ())  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END IN ())  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((NOT (rt0.c2 COLLATE BINARY))) ORDER BY (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE x'' END IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(NULL))) AND (LOWER(rt0.c1)))  NULLS LAST, (((((rt0.c2, rt0.c0, 0.5431354397222846))=(('758819431', rt0.c2, rt0.c1)))) BETWEEN ((((NULL, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((NULL, rt0.c0, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) DESC, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.07086742886512754) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(NULL))) AND (LOWER(rt0.c1)))  NULLS LAST, (((((rt0.c2, rt0.c0, 0.5431354397222846))=(('758819431', rt0.c2, rt0.c1)))) BETWEEN ((((NULL, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((NULL, rt0.c0, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) DESC, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.07086742886512754) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(NULL))) AND (LOWER(rt0.c1)))  NULLS LAST, (((((rt0.c2, rt0.c0, 0.5431354397222846))=(('758819431', rt0.c2, rt0.c1)))) BETWEEN ((((NULL, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((NULL, rt0.c0, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) DESC, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.07086742886512754) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(NULL))) AND (LOWER(rt0.c1)))  NULLS LAST, (((((rt0.c2, rt0.c0, 0.5431354397222846))=(('758819431', rt0.c2, rt0.c1)))) BETWEEN ((((NULL, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((NULL, rt0.c0, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) DESC, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.07086742886512754) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY (((NOT (vt0.c0))) BETWEEN (((vt0.c0)|(NULL))) AND (LOWER(rt0.c1)))  NULLS LAST, (((((rt0.c2, rt0.c0, 0.5431354397222846))=(('758819431', rt0.c2, rt0.c1)))) BETWEEN ((((NULL, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((NULL, rt0.c0, vt0.c0)))) AND (CAST(rt0.c1 AS TEXT))) DESC, LIKELIHOOD(DISTINCT ((((vt0.c0)AND(rt0.c1)))AND(vt0.c0)), 0.07086742886512754) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (NULL COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (NULL COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (NULL COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (+ (NULL COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (x'') AND (rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (+ (NULL COLLATE BINARY))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, vt0.c0, vt0.c0))))LIKE(MAX(rt0.c0, rt0.c2))) WHERE (((((rt0.c2) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, vt0.c0, vt0.c0))))LIKE(MAX(rt0.c0, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, vt0.c0, vt0.c0))))LIKE(MAX(rt0.c0, rt0.c2))) WHERE (((((rt0.c2) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, vt0.c0, vt0.c0))))LIKE(MAX(rt0.c0, rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((((rt0.c2, rt0.c2, rt0.c0))<((rt0.c1, vt0.c0, vt0.c0))))LIKE(MAX(rt0.c0, rt0.c2))) WHERE (((((rt0.c2) NOTNULL)) NOTNULL));
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, rt0.c2, rt0.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, rt0.c2, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, rt0.c2, rt0.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, rt0.c2, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0, rt0.c2, rt0.c2))!=((rt0.c2, rt0.c2, rt0.c1)))) NOTNULL));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))OR(((138560556)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))OR(((138560556)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))OR(((138560556)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))OR(((138560556)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(((vt0.c0) NOTNULL))))OR(((138560556)%(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, (- (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, (- (((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, (- (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, (- (((vt0.c0)OR(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST, (- (((vt0.c0)OR(vt0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(x''))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(x''))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(x''))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(x''))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c2)AND(vt0.c0)))OR('412748379')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c2)AND(vt0.c0)))OR('412748379'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c2)AND(vt0.c0)))OR('412748379')))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c2)AND(vt0.c0)))OR('412748379'))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c2)AND(vt0.c0)))OR('412748379')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN (- (rt0.c1)) ELSE 'u# E#dyM8' END WHERE (((rt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((x'', (-0.0 IN ()), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) AND ((((((rt0.c0)AND(x'')))OR(rt0.c2)), (('')/(rt0.c2)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE '-343220914' END))) DESC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>=(LOWER(rt0.c2))) ASC, IFNULL(DISTINCT LIKELIHOOD(rt0.c0, 0.9697891893505987), ((rt0.c1)GLOB(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN (- (rt0.c1)) ELSE 'u# E#dyM8' END ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((x'', (-0.0 IN ()), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) AND ((((((rt0.c0)AND(x'')))OR(rt0.c2)), (('')/(rt0.c2)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE '-343220914' END))) DESC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>=(LOWER(rt0.c2))) ASC, IFNULL(DISTINCT LIKELIHOOD(rt0.c0, 0.9697891893505987), ((rt0.c1)GLOB(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN (- (rt0.c1)) ELSE 'u# E#dyM8' END WHERE (((rt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((x'', (-0.0 IN ()), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) AND ((((((rt0.c0)AND(x'')))OR(rt0.c2)), (('')/(rt0.c2)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE '-343220914' END))) DESC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>=(LOWER(rt0.c2))) ASC, IFNULL(DISTINCT LIKELIHOOD(rt0.c0, 0.9697891893505987), ((rt0.c1)GLOB(vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN (- (rt0.c1)) ELSE 'u# E#dyM8' END ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((x'', (-0.0 IN ()), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) AND ((((((rt0.c0)AND(x'')))OR(rt0.c2)), (('')/(rt0.c2)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE '-343220914' END))) DESC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>=(LOWER(rt0.c2))) ASC, IFNULL(DISTINCT LIKELIHOOD(rt0.c0, 0.9697891893505987), ((rt0.c1)GLOB(vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CASE WHEN CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END THEN (- (rt0.c1)) ELSE 'u# E#dyM8' END WHERE (((rt0.c0 COLLATE BINARY) NOT NULL)) ORDER BY (((rt0.c1, vt0.c0, rt0.c1)) BETWEEN ((x'', (-0.0 IN ()), ((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))) AND ((((((rt0.c0)AND(x'')))OR(rt0.c2)), (('')/(rt0.c2)), CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE '-343220914' END))) DESC  NULLS FIRST, ((rt0.c0 COLLATE NOCASE)>=(LOWER(rt0.c2))) ASC, IFNULL(DISTINCT LIKELIHOOD(rt0.c0, 0.9697891893505987), ((rt0.c1)GLOB(vt0.c0))) DESC;
SELECT * FROM rt0 WHERE ((((x'' IN ())) BETWEEN ((~ (rt0.c2))) AND (-198053316))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) BETWEEN ((~ (rt0.c2))) AND (-198053316))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((x'' IN ())) BETWEEN ((~ (rt0.c2))) AND (-198053316))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ())) BETWEEN ((~ (rt0.c2))) AND (-198053316))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((x'' IN ())) BETWEEN ((~ (rt0.c2))) AND (-198053316))) ORDER BY rt0.c2;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2) BETWEEN ((((vt0.c0, x'', rt0.c2))>=((NULL, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ((rtreenode(rt0.c2, vt0.c0))IS(((((9223372036854775807)OR(vt0.c0)))AND(NULL)))) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((((vt0.c0, x'', rt0.c2))>=((NULL, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ((rtreenode(rt0.c2, vt0.c0))IS(((((9223372036854775807)OR(vt0.c0)))AND(NULL)))) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2) BETWEEN ((((vt0.c0, x'', rt0.c2))>=((NULL, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ((rtreenode(rt0.c2, vt0.c0))IS(((((9223372036854775807)OR(vt0.c0)))AND(NULL)))) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN ((((vt0.c0, x'', rt0.c2))>=((NULL, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ((rtreenode(rt0.c2, vt0.c0))IS(((((9223372036854775807)OR(vt0.c0)))AND(NULL)))) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((rt0.c2) BETWEEN ((((vt0.c0, x'', rt0.c2))>=((NULL, rt0.c2, vt0.c0)))) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) ORDER BY (rt0.c2 IN ()) ASC  NULLS LAST, ((rtreenode(rt0.c2, vt0.c0))IS(((((9223372036854775807)OR(vt0.c0)))AND(NULL)))) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))IS(vt0.c0)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((x'36a6')<(((((x'')OR('')))AND(NULL))))) ORDER BY 0.8591326942125526  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'36a6')<(((((x'')OR('')))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY 0.8591326942125526  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((x'36a6')<(((((x'')OR('')))AND(NULL))))) ORDER BY 0.8591326942125526  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((x'36a6')<(((((x'')OR('')))AND(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY 0.8591326942125526  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((x'36a6')<(((((x'')OR('')))AND(NULL))))) ORDER BY 0.8591326942125526  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0x537b9427 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR((((rt0.c1, rt0.c1, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c1))))))OR(NULLIF(rt0.c2, rt0.c0))))AND('-508530047')))OR(0.11423102162871568)))OR(rt0.c2))) ORDER BY ((((rt0.c1) IS FALSE))!=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0x537b9427 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR((((rt0.c1, rt0.c1, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c1))))))OR(NULLIF(rt0.c2, rt0.c0))))AND('-508530047')))OR(0.11423102162871568)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) IS FALSE))<>((vt0.c0 IN ()))));
SELECT * FROM vt0, rt0 WHERE (((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0x537b9427 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR((((rt0.c1, rt0.c1, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c1))))))OR(NULLIF(rt0.c2, rt0.c0))))AND('-508530047')))OR(0.11423102162871568)))OR(rt0.c2))) ORDER BY ((((rt0.c1) IS FALSE))!=((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0x537b9427 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR((((rt0.c1, rt0.c1, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c1))))))OR(NULLIF(rt0.c2, rt0.c0))))AND('-508530047')))OR(0.11423102162871568)))OR(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1) IS FALSE))<>((vt0.c0 IN ()))));
SELECT * FROM vt0, rt0 WHERE (((((((((((((CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN 0x537b9427 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)AND(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))OR((((rt0.c1, rt0.c1, rt0.c2))>=((vt0.c0, vt0.c0, rt0.c1))))))OR(NULLIF(rt0.c2, rt0.c0))))AND('-508530047')))OR(0.11423102162871568)))OR(rt0.c2))) ORDER BY ((((rt0.c1) IS FALSE))!=((vt0.c0 IN ())));
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND('h3U.?E')))AND(JULIANDAY(vt0.c0, 0.27257637552744796, vt0.c0))), (((x'0031' IN ()))/(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND('h3U.?E')))AND(JULIANDAY(vt0.c0, 0.27257637552744796, vt0.c0))), (((x'0031' IN ()))/(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (load_extension(vt0.c0, vt0.c0) COLLATE BINARY) ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND('h3U.?E')))AND(JULIANDAY(vt0.c0, 0.27257637552744796, vt0.c0))), (((x'0031' IN ()))/(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(vt0.c0, vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0 IN (vt0.c0, vt0.c0)))AND('h3U.?E')))AND(JULIANDAY(vt0.c0, 0.27257637552744796, vt0.c0))), (((x'0031' IN ()))/(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_quote(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt0.c0)), '~R~BN뀎'))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_quote(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt0.c0)), '~R~BN뀎'))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_quote(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt0.c0)), '~R~BN뀎'))) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_quote(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt0.c0)), '~R~BN뀎'))) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt0.c0)AND(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), json_quote(vt0.c0))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0)||(vt0.c0)), '~R~BN뀎'))) DESC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c0)))OR(-61498781))  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c0)))OR(-61498781))  NULLS FIRST, rt0.c1);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c0)))OR(-61498781))  NULLS FIRST, rt0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c0)))OR(-61498781))  NULLS FIRST, rt0.c1);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c2 AS REAL)) ORDER BY ((((((rt0.c0) NOT NULL))AND(rt0.c0)))OR(-61498781))  NULLS FIRST, rt0.c1;
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE ((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), TRIM(rt0.c0, rt0.c0), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((vt0.c0 IN (rt0.c2)), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0))), ((((0.25813943885769486)OR(rt0.c0)))AND(vt0.c0)))))) ORDER BY ((((HEX(rt0.c2))OR(((vt0.c0)OR(rt0.c0)))))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), TRIM(rt0.c0, rt0.c0), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((vt0.c0 IN (rt0.c2)), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0))), ((((0.25813943885769486)OR(rt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY ((((HEX(rt0.c2))OR(((vt0.c0)OR(rt0.c0)))))OR(rt0.c0)) DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE ((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), TRIM(rt0.c0, rt0.c0), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((vt0.c0 IN (rt0.c2)), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0))), ((((0.25813943885769486)OR(rt0.c0)))AND(vt0.c0)))))) ORDER BY ((((HEX(rt0.c2))OR(((vt0.c0)OR(rt0.c0)))))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), TRIM(rt0.c0, rt0.c0), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((vt0.c0 IN (rt0.c2)), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0))), ((((0.25813943885769486)OR(rt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) ORDER BY ((((HEX(rt0.c2))OR(((vt0.c0)OR(rt0.c0)))))OR(rt0.c0)) DESC);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON (~ ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) WHERE ((((rt0.c0, vt0.c0, rt0.c2)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.c0)), TRIM(rt0.c0, rt0.c0), ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c2)))) AND (((vt0.c0 IN (rt0.c2)), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, vt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c0, rt0.c0))), ((((0.25813943885769486)OR(rt0.c0)))AND(vt0.c0)))))) ORDER BY ((((HEX(rt0.c2))OR(((vt0.c0)OR(rt0.c0)))))OR(rt0.c0)) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS LAST, ((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS LAST, ((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS LAST, ((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS LAST, ((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (CAST(vt0.c0 AS REAL)))  NULLS LAST, ((CASE ''  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN ((vt0.c0 IN (vt0.c0, vt0.c0))) AND (((vt0.c0) BETWEEN (NULL) AND (vt0.c0))));
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c0)))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ''  NULLS LAST, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<(((vt0.c0)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ''  NULLS LAST, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<(((vt0.c0)LIKE(rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c0)))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ''  NULLS LAST, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<(((vt0.c0)LIKE(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0)))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ''  NULLS LAST, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<(((vt0.c0)LIKE(rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE ((((NOT (vt0.c0)))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ''  NULLS LAST, (((((vt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))<<(((vt0.c0)LIKE(rt0.c2))));
SELECT * FROM rt0 INNER JOIN vt0 ON ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE WHERE (LIKE(rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN x'' END, '0')) ORDER BY ((CASE x''  WHEN rt0.c1 THEN 'Zpw1튕Hjq' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN x'' END, '0')) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE ORDER BY ((CASE x''  WHEN rt0.c1 THEN 'Zpw1튕Hjq' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE));
SELECT * FROM rt0 INNER JOIN vt0 ON ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE WHERE (LIKE(rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN x'' END, '0')) ORDER BY ((CASE x''  WHEN rt0.c1 THEN 'Zpw1튕Hjq' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((LIKE(rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN x'' END, '0')) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE ORDER BY ((CASE x''  WHEN rt0.c1 THEN 'Zpw1튕Hjq' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE));
SELECT * FROM rt0 INNER JOIN vt0 ON ((rt0.c2)>>(rt0.c0)) COLLATE NOCASE WHERE (LIKE(rt0.c2 COLLATE NOCASE, CASE WHEN rt0.c2 THEN x'' END, '0')) ORDER BY ((CASE x''  WHEN rt0.c1 THEN 'Zpw1튕Hjq' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.26422717615722446) BETWEEN (rt0.c2) AND (754404598)))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c2 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.26422717615722446) BETWEEN (rt0.c2) AND (754404598)))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c2 AS INTEGER) END DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.26422717615722446) BETWEEN (rt0.c2) AND (754404598)))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c2 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.26422717615722446) BETWEEN (rt0.c2) AND (754404598)))IS NOT(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c2 AS INTEGER) END DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((0.26422717615722446) BETWEEN (rt0.c2) AND (754404598)))IS NOT(rt0.c2 COLLATE NOCASE))) ORDER BY CASE WHEN (((rt0.c0))==((rt0.c1))) THEN CAST(rt0.c2 AS INTEGER) END DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((((rt0.c1)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(558338193)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c1)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(558338193)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((((rt0.c1)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(558338193)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((rt0.c1)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(558338193)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((((((((((rt0.c1)OR(NULL)))OR(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(558338193)))OR(vt0.c0)))AND(rt0.c1)))AND(rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((rt0.c2 IN (rt0.c0)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))), ((((rt0.c0)==(rt0.c1))) BETWEEN (rt0.c2) AND (UPPER(DISTINCT rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c0)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))), ((((rt0.c0)==(rt0.c1))) BETWEEN (rt0.c2) AND (UPPER(DISTINCT rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((rt0.c2 IN (rt0.c0)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))), ((((rt0.c0)==(rt0.c1))) BETWEEN (rt0.c2) AND (UPPER(DISTINCT rt0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2 IN (rt0.c0)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))), ((((rt0.c0)==(rt0.c1))) BETWEEN (rt0.c2) AND (UPPER(DISTINCT rt0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY (((((rt0.c2 IN (rt0.c0)))OR(rt0.c1)))AND(((rt0.c1) NOT NULL))), ((((rt0.c0)==(rt0.c1))) BETWEEN (rt0.c2) AND (UPPER(DISTINCT rt0.c2)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN NULL THEN rt0.c1 ELSE rt0.c0 END) ISNULL)) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)<=(NULL)) ELSE (rt0.c0 IN (rt0.c2, rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)<=(NULL)) ELSE (rt0.c0 IN (rt0.c2, rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)<=(NULL)) ELSE (rt0.c0 IN (rt0.c2, rt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)<=(NULL)) ELSE (rt0.c0 IN (rt0.c2, rt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c1))) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c1)<=(NULL)) ELSE (rt0.c0 IN (rt0.c2, rt0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))))AND(((0.9432971133519965)|(vt0.c0))))) ORDER BY CASE WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))))AND(((0.9432971133519965)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))))AND(((0.9432971133519965)|(vt0.c0))))) ORDER BY CASE WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))))AND(((0.9432971133519965)|(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) ISNULL))OR(((vt0.c0)AND(vt0.c0)))))AND(((0.9432971133519965)|(vt0.c0))))) ORDER BY CASE WHEN TRIM(vt0.c0, vt0.c0) THEN ((vt0.c0) NOT NULL) END;
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((0.028443288332896333)OR(NULL)))OR(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((0.028443288332896333)OR(NULL)))OR(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((0.028443288332896333)OR(NULL)))OR(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((0.028443288332896333)OR(NULL)))OR(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((0.028443288332896333)OR(NULL)))OR(vt0.c0)))) AND ((vt0.c0 COLLATE BINARY)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL) WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL) WHERE (((vt0.c0) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOTNULL) WHERE (((vt0.c0) IS FALSE));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))||((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))||((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))||((- (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))||((- (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0) NOT NULL))||((- (rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((((0.018021208519776732, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))==((((vt0.c0) NOT BETWEEN (x'04b8') AND (vt0.c0)))))) ORDER BY (UPPER(DISTINCT vt0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.018021208519776732, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))=((((vt0.c0) NOT BETWEEN (x'04b8') AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (UPPER(DISTINCT vt0.c0) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((0.018021208519776732, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))==((((vt0.c0) NOT BETWEEN (x'04b8') AND (vt0.c0)))))) ORDER BY (UPPER(DISTINCT vt0.c0) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((0.018021208519776732, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))=((((vt0.c0) NOT BETWEEN (x'04b8') AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (UPPER(DISTINCT vt0.c0) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((0.018021208519776732, vt0.c0, vt0.c0, vt0.c0, vt0.c0))<=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))))==((((vt0.c0) NOT BETWEEN (x'04b8') AND (vt0.c0)))))) ORDER BY (UPPER(DISTINCT vt0.c0) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON x'');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON x'' WHERE (((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.4905627786026818  WHEN ((rt0.c0)>>(rt0.c0)) THEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0)AND(rt0.c1)) END) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(CAST(x'2ab6' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.4905627786026818  WHEN ((rt0.c0)>>(rt0.c0)) THEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0)AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(CAST(x'2ab6' AS REAL))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.4905627786026818  WHEN ((rt0.c0)>>(rt0.c0)) THEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0)AND(rt0.c1)) END) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(CAST(x'2ab6' AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.4905627786026818  WHEN ((rt0.c0)>>(rt0.c0)) THEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0)AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(CAST(x'2ab6' AS REAL))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE 0.4905627786026818  WHEN ((rt0.c0)>>(rt0.c0)) THEN ((((vt0.c0)OR(rt0.c2)))AND(rt0.c2)) WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)) THEN ((vt0.c0)||(rt0.c1)) WHEN ((rt0.c2)&(rt0.c0)) THEN ((rt0.c0)AND(rt0.c1)) END) ORDER BY ((CAST(vt0.c0 AS NUMERIC))IS(CAST(x'2ab6' AS REAL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE RTRIM) ORDER BY '' ASC;
SELECT ALL * FROM rt0 WHERE (((((((((PRINTF(rt0.c0))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(1966291887)))OR(json_patch(rt0.c0, rt0.c0))))OR(((rt0.c0)!=(rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((PRINTF(rt0.c0))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(1966291887)))OR(json_patch(rt0.c0, rt0.c0))))OR(((rt0.c0)<>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((((((PRINTF(rt0.c0))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(1966291887)))OR(json_patch(rt0.c0, rt0.c0))))OR(((rt0.c0)!=(rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((((PRINTF(rt0.c0))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(1966291887)))OR(json_patch(rt0.c0, rt0.c0))))OR(((rt0.c0)<>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL));
SELECT ALL * FROM rt0 WHERE (((((((((PRINTF(rt0.c0))OR(((((rt0.c0)OR(rt0.c2)))OR(rt0.c2)))))AND(1966291887)))OR(json_patch(rt0.c0, rt0.c0))))OR(((rt0.c0)!=(rt0.c0))))) ORDER BY ((((rt0.c2) IS TRUE)) NOTNULL);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((- (rt0.c2)))OR((x'' IN ()))))OR(((rt0.c2)<<(rt0.c0)))))OR(NULL)))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR('A '))))) ORDER BY CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))OR((x'' IN ()))))OR(((rt0.c2)<<(rt0.c0)))))OR(NULL)))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR('A '))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((- (rt0.c2)))OR((x'' IN ()))))OR(((rt0.c2)<<(rt0.c0)))))OR(NULL)))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR('A '))))) ORDER BY CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((- (rt0.c2)))OR((x'' IN ()))))OR(((rt0.c2)<<(rt0.c0)))))OR(NULL)))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR('A '))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((- (rt0.c2)))OR((x'' IN ()))))OR(((rt0.c2)<<(rt0.c0)))))OR(NULL)))AND(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c0)))OR('A '))))) ORDER BY CAST(((rt0.c2)OR(vt0.c0)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ())))) ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((0.9824879132208513)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((0.9824879132208513)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((x'')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ())))) ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((0.9824879132208513)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((0.9824879132208513)AND(vt0.c0)))OR(vt0.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)==(vt0.c0)))));
SELECT * FROM vt0 WHERE (CAST(NULL AS INTEGER)) ORDER BY ((((vt0.c0) NOTNULL)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)=(vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)AND(NULL)))OR(rt0.c1)))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY (((((rt0.c1 IN ()))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c1, x'df77', vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c1, x'df77', vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c0)AND(NULL)))OR(rt0.c1)))LIKE(rt0.c2 COLLATE NOCASE))) ORDER BY (((((rt0.c1 IN ()))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c1, x'df77', vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))LIKE(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)))))AND((((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, x'')) AND ((rt0.c1, x'df77', vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((NULLIF(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((~ (rt0.c0)))) WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (~ (vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c0) ISNULL) THEN ((vt0.c0) IS FALSE) END) ORDER BY 933725605 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (~ (vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c0) ISNULL) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULLIF(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((~ (rt0.c0)))) ORDER BY 933725605 DESC);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((NULLIF(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((~ (rt0.c0)))) WHERE (CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (~ (vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c0) ISNULL) THEN ((vt0.c0) IS FALSE) END) ORDER BY 933725605 DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) THEN (~ (vt0.c0)) WHEN (((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (~ (rt0.c1)) WHEN ((rt0.c0) ISNULL) THEN ((vt0.c0) IS FALSE) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((NULLIF(DISTINCT rt0.c1, rt0.c0)) NOT BETWEEN (((rt0.c1)AND(vt0.c0))) AND ((~ (rt0.c0)))) ORDER BY 933725605 DESC);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS TEXT) COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((((LOWER(vt0.c0), CAST(rt0.c2 AS REAL), NULL))<((((vt0.c0)>=(rt0.c2)), (rt0.c1 IN ()), (- (vt0.c0)))))) ORDER BY NULL COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c0), CAST(rt0.c2 AS REAL), NULL))<((((vt0.c0)>=(rt0.c2)), (rt0.c1 IN ()), (- (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((((LOWER(vt0.c0), CAST(rt0.c2 AS REAL), NULL))<((((vt0.c0)>=(rt0.c2)), (rt0.c1 IN ()), (- (vt0.c0)))))) ORDER BY NULL COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((LOWER(vt0.c0), CAST(rt0.c2 AS REAL), NULL))<((((vt0.c0)>=(rt0.c2)), (rt0.c1 IN ()), (- (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL COLLATE BINARY);
SELECT * FROM rt0, vt0 WHERE ((((LOWER(vt0.c0), CAST(rt0.c2 AS REAL), NULL))<((((vt0.c0)>=(rt0.c2)), (rt0.c1 IN ()), (- (vt0.c0)))))) ORDER BY NULL COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST, ((vt0.c0)*(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY (NOT ('1850625719')) DESC  NULLS FIRST, (((NOT (rt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('v,\r2*_愭Y3')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ('1850625719')) DESC  NULLS FIRST, (((NOT (rt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('v,\r2*_愭Y3'))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY (NOT ('1850625719')) DESC  NULLS FIRST, (((NOT (rt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('v,\r2*_愭Y3')))));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY (NOT ('1850625719')) DESC  NULLS FIRST, (((NOT (rt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('v,\r2*_愭Y3'))))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)) COLLATE NOCASE) ORDER BY (NOT ('1850625719')) DESC  NULLS FIRST, (((NOT (rt0.c1)))OR((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND (('v,\r2*_愭Y3')))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((- ((vt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((- ((vt0.c0 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON vt0.c0 WHERE ((- ((vt0.c0 IN (rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)||((vt0.c0 IN ()))));
SELECT ALL * FROM vt0 WHERE (CAST('xOr㓥^Q ' AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST('xOr㓥^Q ' AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (CAST('xOr㓥^Q ' AS INTEGER)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST('xOr㓥^Q ' AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE (CAST('xOr㓥^Q ' AS INTEGER)) ORDER BY NULL;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(rt0.c1)))LIKE(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(x'9f478ebc')))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c1)))LIKE(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(x'9f478ebc')))OR(NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(rt0.c1)))LIKE(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(x'9f478ebc')))OR(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)*(rt0.c1)))LIKE(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(x'9f478ebc')))OR(NULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(rt0.c1)))LIKE(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c0)))OR(x'9f478ebc')))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULLIF(DISTINCT NULL, json_type('-588466080')) WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c0 ASC  NULLS LAST, (((+ (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN rt0 ON NULLIF(DISTINCT NULL, json_type('-588466080')) ORDER BY rt0.c0 ASC  NULLS LAST, (((+ (rt0.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULLIF(DISTINCT NULL, json_type('-588466080')) WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c0 ASC  NULLS LAST, (((+ (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS REAL) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN rt0 ON NULLIF(DISTINCT NULL, json_type('-588466080')) ORDER BY rt0.c0 ASC  NULLS LAST, (((+ (rt0.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON NULLIF(DISTINCT NULL, json_type('-588466080')) WHERE (CAST(rt0.c1 AS REAL) COLLATE NOCASE COLLATE RTRIM) ORDER BY rt0.c0 ASC  NULLS LAST, (((+ (rt0.c1))) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)OR(rt0.c0)))<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c0)))<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)OR(rt0.c0)))<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c0)))<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((((rt0.c0)OR(rt0.c0)))<<(CASE WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ('Me鷧K႕')));
SELECT SUM(count) FROM (SELECT (((+ ('Me鷧K႕'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ('Me鷧K႕')));
SELECT SUM(count) FROM (SELECT (((+ ('Me鷧K႕'))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ ('Me鷧K႕')));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c1)>=(rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c1)>=(rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>=(rt0.c1))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0 ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (((rt0.c1)>=(rt0.c1))))) ORDER BY ((rt0.c2 COLLATE RTRIM) NOT NULL);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, NULL))<((rt0.c0, rt0.c1, rt0.c2)))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2, rt0.c1, NULL))<((rt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, NULL))<((rt0.c0, rt0.c1, rt0.c2)))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c2, rt0.c1, NULL))<((rt0.c0, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c1, NULL))<((rt0.c0, rt0.c1, rt0.c2)))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) BETWEEN ('-1794590811') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE ((((('mi')OR((x'' IN ()))))OR(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('mi')OR((x'' IN ()))))OR(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) BETWEEN ('-1794590811') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) BETWEEN ('-1794590811') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE ((((('mi')OR((x'' IN ()))))OR(((rt0.c0)AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((('mi')OR((x'' IN ()))))OR(((rt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) BETWEEN ('-1794590811') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((rt0.c1) NOTNULL)) BETWEEN ('-1794590811') AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) WHERE ((((('mi')OR((x'' IN ()))))OR(((rt0.c0)AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL)) ORDER BY rt0.c2 ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, 0xffffffffae740d7b, rt0.c1)))))) ORDER BY (((((rt0.c2))<((x'')))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, 0xffffffffae740d7b, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2))<((x'')))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, 0xffffffffae740d7b, rt0.c1)))))) ORDER BY (((((rt0.c2))<((x'')))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ()))!=((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, 0xffffffffae740d7b, rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2))<((x'')))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN ()))!=((((rt0.c0, x'', rt0.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((rt0.c1, 0xffffffffae740d7b, rt0.c1)))))) ORDER BY (((((rt0.c2))<((x'')))) IS FALSE) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)!=(NULL)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))>=(((((((((((((rt0.c2)AND(0.9745087830329408)))OR(rt0.c2)))OR(rt0.c2)))AND(2138432657)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<>(NULL)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))>=(((((((((((((rt0.c2)AND(0.9745087830329408)))OR(rt0.c2)))OR(rt0.c2)))AND(2138432657)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)!=(NULL)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))>=(((((((((((((rt0.c2)AND(0.9745087830329408)))OR(rt0.c2)))OR(rt0.c2)))AND(2138432657)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)<>(NULL)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))>=(((((((((((((rt0.c2)AND(0.9745087830329408)))OR(rt0.c2)))OR(rt0.c2)))AND(2138432657)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)!=(NULL)) COLLATE NOCASE COLLATE RTRIM) ORDER BY ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))>=(((((((((((((rt0.c2)AND(0.9745087830329408)))OR(rt0.c2)))OR(rt0.c2)))AND(2138432657)))OR(rt0.c1)))AND(rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NULL) NOTNULL) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NULL) NOTNULL) IN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(NULL)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(NULL)))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(NULL)))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(NULL)))AND(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(NULL)))AND(rt0.c2)));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN (((- (NULL)), vt0.c0, ((rt0.c0)+(vt0.c0)))) AND ((((vt0.c0)|(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1)-(x'2537')))))) ORDER BY ((((rt0.c1) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN (((- (NULL)), vt0.c0, ((rt0.c0)+(vt0.c0)))) AND ((((vt0.c0)|(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1)-(x'2537')))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((((rt0.c1) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN (((- (NULL)), vt0.c0, ((rt0.c0)+(vt0.c0)))) AND ((((vt0.c0)|(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1)-(x'2537')))))) ORDER BY ((((rt0.c1) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN (((- (NULL)), vt0.c0, ((rt0.c0)+(vt0.c0)))) AND ((((vt0.c0)|(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1)-(x'2537')))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((((rt0.c1) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((((rt0.c0, vt0.c0, rt0.c1)) BETWEEN (((- (NULL)), vt0.c0, ((rt0.c0)+(vt0.c0)))) AND ((((vt0.c0)|(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)), ((rt0.c1)-(x'2537')))))) ORDER BY ((((rt0.c1) IS TRUE))%(((((((((rt0.c2)OR(rt0.c2)))AND(vt0.c0)))OR(x'')))AND(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(rt0.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LIKELY(rt0.c2 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))>=((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c0))>=((vt0.c0))) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY (rt0.c1 COLLATE NOCASE IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY (rt0.c1 COLLATE NOCASE IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 COLLATE NOCASE IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2))) NOTNULL)) ORDER BY (rt0.c1 COLLATE NOCASE IN (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END, CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((~ (((vt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (((vt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((~ (((vt0.c0)>=(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((0.47031271982734424) ISNULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2))) BETWEEN ((- (rt0.c1))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((0.47031271982734424) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2))) BETWEEN ((- (rt0.c1))) AND (rt0.c2)) DESC);
SELECT ALL * FROM rt0 WHERE (((0.47031271982734424) ISNULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2))) BETWEEN ((- (rt0.c1))) AND (rt0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ((((0.47031271982734424) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2))) BETWEEN ((- (rt0.c1))) AND (rt0.c2)) DESC);
SELECT ALL * FROM rt0 WHERE (((0.47031271982734424) ISNULL)) ORDER BY ((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))OR(NULL)))OR(rt0.c2))) BETWEEN ((- (rt0.c1))) AND (rt0.c2)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('-1361473806') NOTNULL)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0) NOT NULL))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)), ((((LIKELY(DISTINCT x''))OR('s3)PJ')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-1361473806') NOTNULL)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)), ((((LIKELY(DISTINCT x''))OR('s3)PJ')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('-1361473806') NOTNULL)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0) NOT NULL))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)), ((((LIKELY(DISTINCT x''))OR('s3)PJ')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((('-1361473806') NOTNULL)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0) NOT NULL))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)), ((((LIKELY(DISTINCT x''))OR('s3)PJ')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((('-1361473806') NOTNULL)) BETWEEN (rt0.c1) AND (rt0.c1 COLLATE NOCASE))) ORDER BY ((((((rt0.c0) NOT NULL))AND((- (rt0.c0)))))OR(rt0.c0 COLLATE RTRIM)), ((((LIKELY(DISTINCT x''))OR('s3)PJ')))OR(vt0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c2)) AS BLOB)) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE NOCASE;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 END)) AND ((((((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(rt0.c0)))AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>>(((vt0.c0)-(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>>(((vt0.c0)-(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>>(((vt0.c0)-(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>>(((vt0.c0)-(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0) NOT BETWEEN ('') AND (vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>>(((vt0.c0)-(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1) COLLATE BINARY ASC, rt0.c0, ((rt0.c2 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1) COLLATE BINARY ASC, rt0.c0, ((rt0.c2 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1) COLLATE BINARY ASC, rt0.c0, ((rt0.c2 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1) COLLATE BINARY ASC, rt0.c0, ((rt0.c2 COLLATE NOCASE) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT NULL)) ORDER BY SQLITE_COMPILEOPTION_USED(rt0.c1) COLLATE BINARY ASC, rt0.c0, ((rt0.c2 COLLATE NOCASE) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((vt0.c0)>=(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((vt0.c0)>=(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)>=(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((vt0.c0)>=(rt0.c0)) AS REAL));
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.518676507823948) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((0.518676507823948) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.518676507823948) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((0.518676507823948) IS TRUE)  as count FROM rt0 ORDER BY (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.518676507823948) ORDER BY (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(-1622939171))  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)/(NULL)) THEN CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END WHEN (('-836756255') ISNULL) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(-1622939171))  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)/(NULL)) THEN CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END WHEN (('-836756255') ISNULL) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(-1622939171))  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)/(NULL)) THEN CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END WHEN (('-836756255') ISNULL) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(-1622939171))  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)/(NULL)) THEN CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END WHEN (('-836756255') ISNULL) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ())) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(-1622939171))  WHEN vt0.c0 THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0)/(NULL)) THEN CASE WHEN vt0.c0 THEN x'' ELSE vt0.c0 END WHEN (('-836756255') ISNULL) THEN CAST(vt0.c0 AS BLOB) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)*(rt0.c1)))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), IFNULL(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0) ISNULL), ((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), IFNULL(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0) ISNULL), ((rt0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)*(rt0.c1)))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), IFNULL(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0) ISNULL), ((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)*(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), IFNULL(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0) ISNULL), ((rt0.c1) IS FALSE)))) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((rt0.c1)*(rt0.c1)))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC), IFNULL(DISTINCT x'', rt0.c1), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c0) ISNULL), ((rt0.c1) IS FALSE)))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (IFNULL(DISTINCT rt0.c0, rt0.c1)))) ORDER BY (+ ((+ (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (IFNULL(DISTINCT rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((+ (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (IFNULL(DISTINCT rt0.c0, rt0.c1)))) ORDER BY (+ ((+ (rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (IFNULL(DISTINCT rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((+ (rt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)+(rt0.c2))) NOT BETWEEN (((rt0.c1) ISNULL)) AND (IFNULL(DISTINCT rt0.c0, rt0.c1)))) ORDER BY (+ ((+ (rt0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'd58f', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((x'd58f', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'd58f', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((x'd58f', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((x'd58f', rt0.c2, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((vt0.c0, rt0.c1, rt0.c1))) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((NULL)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((NULL)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))));
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)+(CASE WHEN rt0.c1 THEN '-1733255089' WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((rt0.c1)*('-1155961956')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*('-1155961956')) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1)+(CASE WHEN rt0.c1 THEN '-1733255089' WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)+(CASE WHEN rt0.c1 THEN '-1733255089' WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((rt0.c1)*('-1155961956')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)*('-1155961956')) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((rt0.c1)+(CASE WHEN rt0.c1 THEN '-1733255089' WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((rt0.c1)+(CASE WHEN rt0.c1 THEN '-1733255089' WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) WHERE (((rt0.c1)*('-1155961956')) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)-((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)-((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)-((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)-((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN NULL THEN rt0.c1 WHEN x'' THEN rt0.c0 WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)-((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (HEX(DISTINCT ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1068816947') NOT BETWEEN (NULL) AND ((NOT (rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c0))))-(x'' COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1068816947') NOT BETWEEN (NULL) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c0))))-(x'' COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1068816947') NOT BETWEEN (NULL) AND ((NOT (rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c0))))-(x'' COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('-1068816947') NOT BETWEEN (NULL) AND ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c0))))-(x'' COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((('-1068816947') NOT BETWEEN (NULL) AND ((NOT (rt0.c0))))) ORDER BY (((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c2, rt0.c2, rt0.c0))))-(x'' COLLATE BINARY)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (rt0.c0))) BETWEEN ((NOT (NULL))) AND ((((('b''')OR(rt0.c2)))OR(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)*(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE WHEN (('-1921539190')<(rt0.c2)) THEN TRIM(vt0.c0) END) ORDER BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((x'')<=(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -1.687023882E9 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN ABS(rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)*(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE WHEN (('-1921539190')<(rt0.c2)) THEN TRIM(vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (rt0.c0))) BETWEEN ((NOT (NULL))) AND ((((('b''')OR(rt0.c2)))OR(rt0.c1)))) ORDER BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((x'')<=(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -1.687023882E9 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN ABS(rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (rt0.c0))) BETWEEN ((NOT (NULL))) AND ((((('b''')OR(rt0.c2)))OR(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)*(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE WHEN (('-1921539190')<(rt0.c2)) THEN TRIM(vt0.c0) END) ORDER BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((x'')<=(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -1.687023882E9 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN ABS(rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)*(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE WHEN (('-1921539190')<(rt0.c2)) THEN TRIM(vt0.c0) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (rt0.c0))) BETWEEN ((NOT (NULL))) AND ((((('b''')OR(rt0.c2)))OR(rt0.c1)))) ORDER BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((x'')<=(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -1.687023882E9 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN ABS(rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (((NOT (rt0.c0))) BETWEEN ((NOT (NULL))) AND ((((('b''')OR(rt0.c2)))OR(rt0.c1)))) WHERE (CASE WHEN ((rt0.c2)*(rt0.c0)) THEN rt0.c2 WHEN CAST(rt0.c1 AS BLOB) THEN vt0.c0 COLLATE NOCASE WHEN (('-1921539190')<(rt0.c2)) THEN TRIM(vt0.c0) END) ORDER BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((x'')<=(rt0.c2))) AND (CASE WHEN rt0.c2 THEN rt0.c0 END))  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN -1.687023882E9 WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END THEN ABS(rt0.c2) ELSE CAST(rt0.c1 AS TEXT) END ASC;
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa2f75187);
SELECT SUM(count) FROM (SELECT ((0xffffffffa2f75187) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa2f75187);
SELECT SUM(count) FROM (SELECT ((0xffffffffa2f75187) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (0Xffffffffa2f75187);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c1)||(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c1)||(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 WHERE (((((rt0.c1)||(rt0.c2))) NOTNULL));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY COALESCE(rt0.c0, ((rt0.c2)IS(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(rt0.c0, ((rt0.c2)IS(rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY COALESCE(rt0.c0, ((rt0.c2)IS(rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0 ORDER BY COALESCE(rt0.c0, ((rt0.c2)IS(rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2) ORDER BY COALESCE(rt0.c0, ((rt0.c2)IS(rt0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN '582944736' END THEN (~ (rt0.c2)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN (NOT (-507793881)) THEN ((-1037858333) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((0.29664166353644406)) AND ((CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN '582944736' END THEN (~ (rt0.c2)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN (NOT (-507793881)) THEN ((-1037858333) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((0.29664166353644406)) AND ((CAST(rt0.c1 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN '582944736' END THEN (~ (rt0.c2)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN (NOT (-507793881)) THEN ((-1037858333) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((0.29664166353644406)) AND ((CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN '582944736' END THEN (~ (rt0.c2)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN (NOT (-507793881)) THEN ((-1037858333) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((0.29664166353644406)) AND ((CAST(rt0.c1 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN vt0.c0 THEN '582944736' END THEN (~ (rt0.c2)) WHEN CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 END THEN CAST(rt0.c2 AS INTEGER) WHEN (NOT (-507793881)) THEN ((-1037858333) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) ORDER BY (((rt0.c1)) NOT BETWEEN ((0.29664166353644406)) AND ((CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c1, vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c1)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (rt0.c1, vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((((rt0.c2))!=((rt0.c1)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c1, vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c1)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (rt0.c1, vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((((rt0.c2))!=((rt0.c1)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c0 IN ()) IN (rt0.c1, vt0.c0 COLLATE NOCASE))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN ((((rt0.c2))<>((rt0.c1)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (LIKELY('-1479050832')))) ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'16cb' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY('-1479050832')))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'16cb' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (LIKELY('-1479050832')))) ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'16cb' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (LIKELY('-1479050832')))) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'16cb' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (LIKELY('-1479050832')))) ORDER BY COALESCE(vt0.c0 COLLATE NOCASE, x'', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'16cb' THEN vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c0 END) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND ((CAST(vt0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM rt0 WHERE ('0.3828481423708172');
SELECT SUM(count) FROM (SELECT ALL (('0.3828481423708172') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('0.3828481423708172');
SELECT SUM(count) FROM (SELECT ALL (('0.3828481423708172') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('0.3828481423708172');
SELECT ALL * FROM vt0 WHERE (0Xffffffffa1434f52) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffa1434f52) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (0Xffffffffa1434f52) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffa1434f52) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (0Xffffffffa1434f52) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (- (((vt0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (- (((vt0.c0)>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL)) ORDER BY (- (((vt0.c0)>=(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(rt0.c2)))=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2)))=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(rt0.c2)))=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)*(rt0.c2)))=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c2)*(rt0.c2)))=(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE ('1450055438');
SELECT SUM(count) FROM (SELECT (('1450055438') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1450055438');
SELECT SUM(count) FROM (SELECT (('1450055438') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('1450055438');
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c2) ISNULL) IN ())) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2) ISNULL) IN ()));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)!=(rt0.c2)) COLLATE NOCASE) ORDER BY (('iz')*(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('iz')*(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)!=(rt0.c2)) COLLATE NOCASE) ORDER BY (('iz')*(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)!=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('iz')*(vt0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1)!=(rt0.c2)) COLLATE NOCASE) ORDER BY (('iz')*(vt0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c1)IS(rt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c1)<<(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (SQLITE_SOURCE_ID()))) ORDER BY ((((vt0.c0) IS FALSE))AND(x'5aaa')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))AND(x'5aaa')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (SQLITE_SOURCE_ID()))) ORDER BY ((((vt0.c0) IS FALSE))AND(x'5aaa')) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))AND(x'5aaa')) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (SQLITE_SOURCE_ID()))) ORDER BY ((((vt0.c0) IS FALSE))AND(x'5aaa')) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS INTEGER)) IS TRUE)) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))==(((((vt0.c0))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=(((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))==(((((vt0.c0))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 COLLATE NOCASE))=(((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 COLLATE NOCASE))==(((((vt0.c0))>=((vt0.c0)))))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) BETWEEN ((((rt0.c0))!=((rt0.c0)))) AND (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) BETWEEN ((((rt0.c0))<>((rt0.c0)))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) BETWEEN ((((rt0.c0))!=((rt0.c0)))) AND (((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)*(vt0.c0))) BETWEEN ((((rt0.c0))<>((rt0.c0)))) AND (((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)*(vt0.c0))) BETWEEN ((((rt0.c0))!=((rt0.c0)))) AND (((rt0.c1) ISNULL))));
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))OR((rt0.c1 IN ()))))AND(DATE(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR((rt0.c1 IN ()))))AND(DATE(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))OR((rt0.c1 IN ()))))AND(DATE(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((- (rt0.c2)))OR((rt0.c1 IN ()))))AND(DATE(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((- (rt0.c2)))OR((rt0.c1 IN ()))))AND(DATE(rt0.c1, rt0.c0, rt0.c1, rt0.c0, rt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('	'))) ORDER BY (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)) DESC, CAST(((vt0.c0)|(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('	'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)) DESC, CAST(((vt0.c0)|(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('	'))) ORDER BY (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)) DESC, CAST(((vt0.c0)|(vt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('	'))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)) DESC, CAST(((vt0.c0)|(vt0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))<>('	'))) ORDER BY (((((vt0.c0))==((vt0.c0)))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (vt0.c0)) DESC, CAST(((vt0.c0)|(vt0.c0)) AS INTEGER);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC)) ORDER BY vt0.c0;
SELECT ALL * FROM vt0, rt0 WHERE (((((0x3b5b9381)+(rt0.c2))) NOTNULL)) ORDER BY (((((rt0.c1 IN ()))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((NOT (rt0.c0)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN (((((((((0.30848904809321287)AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((rt0.c1)|(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0X3b5b9381)+(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((NOT (rt0.c0)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN (((((((((0.30848904809321287)AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((rt0.c1)|(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((0x3b5b9381)+(rt0.c2))) NOTNULL)) ORDER BY (((((rt0.c1 IN ()))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((NOT (rt0.c0)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN (((((((((0.30848904809321287)AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((rt0.c1)|(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0X3b5b9381)+(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1 IN ()))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((NOT (rt0.c0)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN (((((((((0.30848904809321287)AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((rt0.c1)|(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((0x3b5b9381)+(rt0.c2))) NOTNULL)) ORDER BY (((((rt0.c1 IN ()))OR((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((NOT (rt0.c0)))) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC)) IS FALSE) ASC, ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END) BETWEEN (((((((((0.30848904809321287)AND(rt0.c2)))OR(rt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((rt0.c1)|(rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE 0.7802204487973208  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ORDER BY ((('514271481' IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE 0.7802204487973208  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY ((('514271481' IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE 0.7802204487973208  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ORDER BY ((('514271481' IN ())) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE 0.7802204487973208  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) IS TRUE)  as count FROM rt0 ORDER BY ((('514271481' IN ())) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN CASE 0.7802204487973208  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END ELSE CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END END) ORDER BY ((('514271481' IN ())) NOTNULL)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN '160718580' THEN rt0.c2 END)AND('2104048134')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '160718580' THEN rt0.c2 END)AND('2104048134'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN '160718580' THEN rt0.c2 END)AND('2104048134')));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN '160718580' THEN rt0.c2 END)AND('2104048134'))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((CASE WHEN '160718580' THEN rt0.c2 END)AND('2104048134')));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS TEXT) WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END) AND (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) BETWEEN (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END) AND (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS TEXT) WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END) AND (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS REAL)) BETWEEN (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END) AND (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS TEXT));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS TEXT) WHERE (((CAST(rt0.c2 AS REAL)) BETWEEN (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 END) AND (((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((((vt0.c0)OR(rt0.c2)))+((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1))) NOT NULL), (((rt0.c0 IN ()))<=(((rt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)OR(rt0.c2)))+((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1))) NOT NULL), (((rt0.c0 IN ()))<=(((rt0.c1) ISNULL))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((((vt0.c0)OR(rt0.c2)))+((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1))) NOT NULL), (((rt0.c0 IN ()))<=(((rt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)OR(rt0.c2)))+((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1))) NOT NULL), (((rt0.c0 IN ()))<=(((rt0.c1) ISNULL))) DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c0) IS TRUE) COLLATE BINARY) ORDER BY ((((vt0.c0)OR(rt0.c2)))+((rt0.c2 IN ()))) ASC  NULLS LAST, ((((rt0.c1)AND(rt0.c1))) NOT NULL), (((rt0.c0 IN ()))<=(((rt0.c1) ISNULL))) DESC;
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (0.11677452381000741) AND (8.46082127E8 COLLATE RTRIM))) ORDER BY (x'' IN (((rt0.c1)%(vt0.c0)), (+ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (0.11677452381000741) AND (8.46082127E8 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (((rt0.c1)%(vt0.c0)), (+ (rt0.c1)))) ASC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (0.11677452381000741) AND (8.46082127E8 COLLATE RTRIM))) ORDER BY (x'' IN (((rt0.c1)%(vt0.c0)), (+ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (0.11677452381000741) AND (8.46082127E8 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (x'' IN (((rt0.c1)%(vt0.c0)), (+ (rt0.c1)))) ASC);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (0.11677452381000741) AND (8.46082127E8 COLLATE RTRIM))) ORDER BY (x'' IN (((rt0.c1)%(vt0.c0)), (+ (rt0.c1)))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0)*(vt0.c0)))) AND ((vt0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((x''))<(((NOT (vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN (vt0.c0))))  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((x''))<(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN (vt0.c0))))  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((x''))<(((NOT (vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN (vt0.c0))))  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((x''))<(((NOT (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN (vt0.c0))))  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((x''))<(((NOT (vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE))LIKE((vt0.c0 IN (vt0.c0))))  NULLS LAST, (vt0.c0 IN ()) COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE ('-1295995572');
SELECT SUM(count) FROM (SELECT ALL (('-1295995572') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1295995572');
SELECT SUM(count) FROM (SELECT ALL (('-1295995572') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('-1295995572');
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (rt0.c2)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(rt0.c2)) IN ())) ORDER BY ((rt0.c1 COLLATE BINARY) NOT BETWEEN (x'') AND (rt0.c2)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY (~ (((vt0.c0)<<(0.6021108737469825))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0))) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (~ (((vt0.c0)<<(0.6021108737469825)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY (~ (((vt0.c0)<<(0.6021108737469825))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0))) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (~ (((vt0.c0)<<(0.6021108737469825)))));
SELECT * FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0))) BETWEEN ((((vt0.c0))>=((vt0.c0)))) AND ((- (vt0.c0))))) ORDER BY (~ (((vt0.c0)<<(0.6021108737469825))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) ORDER BY rt0.c1 ASC  NULLS FIRST, CAST(DATE(rt0.c1, rt0.c1, vt0.c0) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS FIRST, CAST(DATE(rt0.c1, rt0.c1, vt0.c0) AS INTEGER) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) ORDER BY rt0.c1 ASC  NULLS FIRST, CAST(DATE(rt0.c1, rt0.c1, vt0.c0) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 ASC  NULLS FIRST, CAST(DATE(rt0.c1, rt0.c1, vt0.c0) AS INTEGER) ASC);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN TYPEOF(rt0.c2) THEN CAST(rt0.c2 AS BLOB) END) ORDER BY rt0.c1 ASC  NULLS FIRST, CAST(DATE(rt0.c1, rt0.c1, vt0.c0) AS INTEGER) ASC;
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c0 COLLATE RTRIM)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((vt0.c0 IN ()))))AND((vt0.c0 IN ()))))OR(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<(x'')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<(x'')) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2)<(x'')) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>>(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((((rt0.c0)>>(rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '846082127' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '846082127' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '846082127' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY '846082127' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY '846082127' ASC;
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) IN ((rt0.c1 IN (rt0.c1)), NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) IN ((rt0.c1 IN (rt0.c1)), NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) IN ((rt0.c1 IN (rt0.c1)), NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) IN ((rt0.c1 IN (rt0.c1)), NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c2)) IN ((rt0.c1 IN (rt0.c1)), NULL COLLATE NOCASE)));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt0.c2)IS(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)IS(vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt0.c2)IS(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)IS(vt0.c0))) NOT NULL));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(rt0.c1 AS BLOB)))) ORDER BY ((((rt0.c2)IS(vt0.c0))) NOT NULL);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((NULL)OR(rt0.c1)) THEN (~ (rt0.c2)) END) ORDER BY CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)OR(rt0.c1)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS LAST, rt0.c2 DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((NULL)OR(rt0.c1)) THEN (~ (rt0.c2)) END) ORDER BY CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((NULL)OR(rt0.c1)) THEN (~ (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS LAST, rt0.c2 DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((NULL)OR(rt0.c1)) THEN (~ (rt0.c2)) END) ORDER BY CAST(((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)) AS BLOB)  NULLS LAST, rt0.c2 DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE (((((((rt0.c1)-(vt0.c0)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c0) IS TRUE)))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)-(vt0.c0)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE (((((((rt0.c1)-(vt0.c0)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c0) IS TRUE)))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)-(vt0.c0)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((~ (rt0.c0)) IN (((((((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) WHERE (((((((rt0.c1)-(vt0.c0)))OR((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((rt0.c0) IS TRUE)))) ORDER BY ((rt0.c0) NOTNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND(((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND(((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND(((rt0.c0)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND(((rt0.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CAST(rt0.c2 AS TEXT))AND(rt0.c1)))AND(((rt0.c0)IS NOT(rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (json_type(rt0.c2) IN ()) WHERE (CASE rt0.c0  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN '252105386' THEN rt0.c0 END THEN CASE WHEN vt0.c0 THEN NULL END ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN '252105386' THEN rt0.c0 END THEN CASE WHEN vt0.c0 THEN NULL END ELSE rt0.c2 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (json_type(rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (json_type(rt0.c2) IN ()) WHERE (CASE rt0.c0  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN '252105386' THEN rt0.c0 END THEN CASE WHEN vt0.c0 THEN NULL END ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN '252105386' THEN rt0.c0 END THEN CASE WHEN vt0.c0 THEN NULL END ELSE rt0.c2 END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (json_type(rt0.c2) IN ()));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (json_type(rt0.c2) IN ()) WHERE (CASE rt0.c0  WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN '252105386' THEN rt0.c0 END THEN CASE WHEN vt0.c0 THEN NULL END ELSE rt0.c2 END);
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.3439668109203381') ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR(TOTAL_CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.3439668109203381') IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR(TOTAL_CHANGES()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.3439668109203381') ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR(TOTAL_CHANGES()))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('0.3439668109203381') IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR(TOTAL_CHANGES()))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ('0.3439668109203381') ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)OR(TOTAL_CHANGES()))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c1 AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0 COLLATE RTRIM) NOTNULL)) ORDER BY CAST(rt0.c1 AS INTEGER);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-2.035815412E9) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2.035815412E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-2.035815412E9) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2.035815412E9) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (-2.035815412E9) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(CAST(rt0.c0 AS INTEGER) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNLIKELY(((vt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6150915624262754) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c1) NOTNULL)))==(((rt0.c1 IN (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6150915624262754) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c1) NOTNULL)))==(((rt0.c1 IN (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6150915624262754) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c1) NOTNULL)))==(((rt0.c1 IN (rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.6150915624262754) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c1) NOTNULL)))==(((rt0.c1 IN (rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.6150915624262754) ORDER BY CASE WHEN (~ (rt0.c1)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, (((((rt0.c1) NOTNULL)))==(((rt0.c1 IN (rt0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'7834') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)||(vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'7834') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'7834') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)||(vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'7834') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'7834') NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((vt0.c0)||(vt0.c0))))) ORDER BY (+ (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) ASC;
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<=(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<=(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)<=(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(((rt0.c1)<=(vt0.c0)) AS REAL)) ORDER BY (((rt0.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0)) IN ())  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE LIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE LIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)>=(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END ELSE LIKELY(rt0.c0) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c0) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c0) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c0) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c0) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CAST(vt0.c0 AS REAL) COLLATE RTRIM WHERE (((CAST(rt0.c0 AS TEXT)) BETWEEN (rt0.c0) AND ((~ (rt0.c2)))));
SELECT * FROM vt0 WHERE ((((NULL COLLATE RTRIM))=((vt0.c0 COLLATE NOCASE)))) ORDER BY -860037254 DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'')) AND ((LIKE(vt0.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE RTRIM))=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY -860037254 DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'')) AND ((LIKE(vt0.c0, vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((NULL COLLATE RTRIM))=((vt0.c0 COLLATE NOCASE)))) ORDER BY -860037254 DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'')) AND ((LIKE(vt0.c0, vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE RTRIM))=((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0 ORDER BY -860037254 DESC  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((x'')) AND ((LIKE(vt0.c0, vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((vt0.c0 IN ())) ORDER BY CAST(vt0.c0 COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c0) COLLATE RTRIM);
SELECT * FROM vt0, rt0 WHERE ((LOWER(DISTINCT rt0.c2) IN (((vt0.c0) IS TRUE), rt0.c1)));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT rt0.c2) IN (((vt0.c0) IS TRUE), rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((LOWER(DISTINCT rt0.c2) IN (((vt0.c0) IS TRUE), rt0.c1)));
SELECT SUM(count) FROM (SELECT (((LOWER(DISTINCT rt0.c2) IN (((vt0.c0) IS TRUE), rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((LOWER(DISTINCT rt0.c2) IN (((vt0.c0) IS TRUE), rt0.c1)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.2541114952740313, (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0) NOTNULL), 0X16e7e2b6, ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))))) ORDER BY LOWER(DISTINCT 0X12a40140);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.2541114952740313, (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0) NOTNULL), 0x16e7e2b6, ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT 0X12a40140));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.2541114952740313, (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0) NOTNULL), 0X16e7e2b6, ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))))) ORDER BY LOWER(DISTINCT 0X12a40140);
SELECT SUM(count) FROM (SELECT (((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.2541114952740313, (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0) NOTNULL), 0x16e7e2b6, ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY LOWER(DISTINCT 0X12a40140));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((0.2541114952740313, (rt0.c1 IN ()), CAST(rt0.c2 AS BLOB))) AND ((((rt0.c0) NOTNULL), 0X16e7e2b6, ((((rt0.c2)OR(vt0.c0)))OR(rt0.c0)))))) ORDER BY LOWER(DISTINCT 0X12a40140);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c1)) THEN INSTR(rt0.c1, rt0.c1) ELSE ((rt0.c1)OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)/(rt0.c1)) THEN INSTR(rt0.c1, rt0.c1) ELSE ((rt0.c1)OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c1)) THEN INSTR(rt0.c1, rt0.c1) ELSE ((rt0.c1)OR(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)/(rt0.c1)) THEN INSTR(rt0.c1, rt0.c1) ELSE ((rt0.c1)OR(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((rt0.c0)/(rt0.c1)) THEN INSTR(rt0.c1, rt0.c1) ELSE ((rt0.c1)OR(rt0.c1)) END);
SELECT * FROM vt0, rt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS BLOB));
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC), vt0.c0, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((json_array(((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC), vt0.c0, CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (json_array(((vt0.c0) IS TRUE), CAST(vt0.c0 AS NUMERIC), vt0.c0, CAST(vt0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0 WHERE (CASE ((0Xffffffff8e0ae683) IS TRUE)  WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE LIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0Xffffffff8e0ae683) IS TRUE)  WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((0Xffffffff8e0ae683) IS TRUE)  WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE LIKELY(rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((0Xffffffff8e0ae683) IS TRUE)  WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE LIKELY(rt0.c0) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE ((0Xffffffff8e0ae683) IS TRUE)  WHEN CAST(rt0.c2 AS NUMERIC) THEN CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END ELSE LIKELY(rt0.c0) END);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((0.5316579790420767)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((0.5316579790420767)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((0.5316579790420767)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((0.5316579790420767)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) IN ((((vt0.c0)) BETWEEN ((0.5316579790420767)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((('j\nyt䵤x')OR(vt0.c0)))AND((+ (vt0.c0)))), ((NULL)|(UPPER(DISTINCT '1254345285')))  NULLS FIRST, TRIM((~ ('-352833462')), (vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((('j\nyt䵤x')OR(vt0.c0)))AND((+ (vt0.c0)))), ((NULL)|(UPPER(DISTINCT '1254345285')))  NULLS FIRST, TRIM((~ ('-352833462')), (vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((('j\nyt䵤x')OR(vt0.c0)))AND((+ (vt0.c0)))), ((NULL)|(UPPER(DISTINCT '1254345285')))  NULLS FIRST, TRIM((~ ('-352833462')), (vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((('j\nyt䵤x')OR(vt0.c0)))AND((+ (vt0.c0)))), ((NULL)|(UPPER(DISTINCT '1254345285')))  NULLS FIRST, TRIM((~ ('-352833462')), (vt0.c0 IN ())) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((('j\nyt䵤x')OR(vt0.c0)))AND((+ (vt0.c0)))), ((NULL)|(UPPER(DISTINCT '1254345285')))  NULLS FIRST, TRIM((~ ('-352833462')), (vt0.c0 IN ())) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.8771909608603192)OR(NULL)) COLLATE NOCASE WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((((NULL)AND(rt0.c0)))OR(rt0.c2)) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((((NULL)AND(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.8771909608603192)OR(NULL)) COLLATE NOCASE ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.8771909608603192)OR(NULL)) COLLATE NOCASE WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((((NULL)AND(rt0.c0)))OR(rt0.c2)) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((((NULL)AND(rt0.c0)))OR(rt0.c2)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.8771909608603192)OR(NULL)) COLLATE NOCASE ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((0.8771909608603192)OR(NULL)) COLLATE NOCASE WHERE (CASE WHEN ((((rt0.c1)OR(vt0.c0)))OR(vt0.c0)) THEN ((((NULL)AND(rt0.c0)))OR(rt0.c2)) END) ORDER BY (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=(rt0.c0)) ASC;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((vt0.c0) NOT NULL))) AND ((CASE WHEN rt0.c0 THEN rt0.c0 END))));
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN vt0.c0 ELSE ((vt0.c0)<=(vt0.c0)) END);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)%(rt0.c2)) THEN vt0.c0 END WHERE (CASE WHEN (- (rt0.c0)) THEN CHAR(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 WHEN ((vt0.c0)||(rt0.c1)) THEN (~ (rt0.c0)) ELSE (~ (rt0.c0)) END) ORDER BY CAST(MIN(0.09072427353892332, rt0.c0, rt0.c1, '') AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN CHAR(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 WHEN ((vt0.c0)||(rt0.c1)) THEN (~ (rt0.c0)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)%(rt0.c2)) THEN vt0.c0 END ORDER BY CAST(MIN(0.09072427353892332, rt0.c0, rt0.c1, '') AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)%(rt0.c2)) THEN vt0.c0 END WHERE (CASE WHEN (- (rt0.c0)) THEN CHAR(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 WHEN ((vt0.c0)||(rt0.c1)) THEN (~ (rt0.c0)) ELSE (~ (rt0.c0)) END) ORDER BY CAST(MIN(0.09072427353892332, rt0.c0, rt0.c1, '') AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c0)) THEN CHAR(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 WHEN ((vt0.c0)||(rt0.c1)) THEN (~ (rt0.c0)) ELSE (~ (rt0.c0)) END) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)%(rt0.c2)) THEN vt0.c0 END ORDER BY CAST(MIN(0.09072427353892332, rt0.c0, rt0.c1, '') AS BLOB));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)%(rt0.c2)) THEN vt0.c0 END WHERE (CASE WHEN (- (rt0.c0)) THEN CHAR(vt0.c0) WHEN ((rt0.c0) NOT NULL) THEN rt0.c1 WHEN ((vt0.c0)||(rt0.c1)) THEN (~ (rt0.c0)) ELSE (~ (rt0.c0)) END) ORDER BY CAST(MIN(0.09072427353892332, rt0.c0, rt0.c1, '') AS BLOB);
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC);
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL ASC);
SELECT * FROM vt0, rt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY NULL ASC;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((TRIM(DISTINCT '1486018006', rt0.c2)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ((((rt0.c2))<>((vt0.c0))))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((TRIM(DISTINCT '1486018006', rt0.c2)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ((((rt0.c2))<>((vt0.c0))))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((TRIM(DISTINCT '1486018006', rt0.c2)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ((((rt0.c2))<>((vt0.c0))))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((TRIM(DISTINCT '1486018006', rt0.c2)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ((((rt0.c2))<>((vt0.c0))))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((TRIM(DISTINCT '1486018006', rt0.c2)) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND ((((rt0.c2))<>((vt0.c0))))) WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (LIKELY(DISTINCT rt0.c0)))) ORDER BY ((- (rt0.c0)) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) WHERE (((rt0.c2)GLOB(((rt0.c0)|(vt0.c0))))) ORDER BY ((((((((0.9042075945778619)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ())))  NULLS FIRST, ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND ((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((rt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) ORDER BY ((((((((0.9042075945778619)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ())))  NULLS FIRST, ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND ((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) WHERE (((rt0.c2)GLOB(((rt0.c0)|(vt0.c0))))) ORDER BY ((((((((0.9042075945778619)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ())))  NULLS FIRST, ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND ((NOT (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)GLOB(((rt0.c0)|(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c2) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))) ORDER BY ((((((((0.9042075945778619)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND((rt0.c0 IN ())))  NULLS FIRST, ((LOWER(DISTINCT rt0.c1)) NOT BETWEEN (((((rt0.c2)OR(rt0.c0)))AND(rt0.c2))) AND ((NOT (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS FALSE));
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, -321968103)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))))AND((vt0.c0 IN (rt0.c2)))))AND(((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2, rt0.c0, -321968103)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))))AND((vt0.c0 IN (rt0.c2)))))AND(((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, -321968103)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))))AND((vt0.c0 IN (rt0.c2)))))AND(((rt0.c1)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2, rt0.c0, -321968103)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))))AND((vt0.c0 IN (rt0.c2)))))AND(((rt0.c1)<>(rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((((rt0.c2, rt0.c0, -321968103)) BETWEEN ((rt0.c0, rt0.c2, vt0.c0)) AND ((rt0.c1, vt0.c0, rt0.c2))))AND((vt0.c0 IN (rt0.c2)))))AND(((rt0.c1)!=(rt0.c2)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))>((0.4050879125801412, rt0.c0, NULL)))) AND (('-1306717517' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))>((0.4050879125801412, rt0.c0, NULL)))) AND (('-1306717517' IN ()))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))>((0.4050879125801412, rt0.c0, NULL)))) AND (('-1306717517' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))>((0.4050879125801412, rt0.c0, NULL)))) AND (('-1306717517' IN ()))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0))) NOT BETWEEN ((((rt0.c1, rt0.c2, rt0.c1))>((0.4050879125801412, rt0.c0, NULL)))) AND (('-1306717517' IN ()))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((vt0.c0 IN ()))))AND('-830208906'))) ORDER BY ((CAST(vt0.c0 AS BLOB))>>(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((LTRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -6.0163251E7 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND((vt0.c0 IN ()))))AND('-830208906'))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))>>(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((LTRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -6.0163251E7 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((vt0.c0 IN ()))))AND('-830208906'))) ORDER BY ((CAST(vt0.c0 AS BLOB))>>(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((LTRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -6.0163251E7 END))) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND((vt0.c0 IN ()))))AND('-830208906'))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS BLOB))>>(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((LTRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -6.0163251E7 END))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND((vt0.c0 IN ()))))AND('-830208906'))) ORDER BY ((CAST(vt0.c0 AS BLOB))>>(((vt0.c0) IS TRUE))) ASC  NULLS FIRST, (((LTRIM(vt0.c0)))>((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN -6.0163251E7 END))) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN 0Xfffffffff157ee57 THEN rt0.c2 END)OR((((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))<((rt0.c1, vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY INSTR(((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0xfffffffff157ee57 THEN rt0.c2 END)OR((((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))<((rt0.c1, vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY INSTR(((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS BLOB)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN 0Xfffffffff157ee57 THEN rt0.c2 END)OR((((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))<((rt0.c1, vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY INSTR(((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS BLOB)) DESC;
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN 0xfffffffff157ee57 THEN rt0.c2 END)OR((((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))<((rt0.c1, vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY INSTR(((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS BLOB)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((CASE vt0.c0  WHEN 0Xfffffffff157ee57 THEN rt0.c2 END)OR((((rt0.c2, vt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c1))<((rt0.c1, vt0.c0, vt0.c0, rt0.c2, rt0.c2, rt0.c1, rt0.c0))))))OR(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY INSTR(((rt0.c0)%(rt0.c2)), CAST(rt0.c1 AS BLOB)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((- (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((- (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>>(vt0.c0)))AND((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(vt0.c0)))AND((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>>(vt0.c0)))AND((NOT (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)>>(vt0.c0)))AND((NOT (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c2)>>(vt0.c0)))AND((NOT (NULL)))));
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c0)))OR(CASE WHEN NULL THEN 1228229787 ELSE vt0.c0 END)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c0)))OR(CASE WHEN NULL THEN 1228229787 ELSE vt0.c0 END)))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c0)))OR(CASE WHEN NULL THEN 1228229787 ELSE vt0.c0 END)))OR(rt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((~ (rt0.c0)))OR(CASE WHEN NULL THEN 1228229787 ELSE vt0.c0 END)))OR(rt0.c1))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((((~ (rt0.c0)))OR(CASE WHEN NULL THEN 1228229787 ELSE vt0.c0 END)))OR(rt0.c1)));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c2, rt0.c2, rt0.c1))))));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2)*(rt0.c1)))) AND ((0.562581554934049)))) ORDER BY (((highlight(rt0.c0, rt0.c1, rt0.c1, vt0.c0)))>=(((rt0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2)*(rt0.c1)))) AND ((0.562581554934049)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((highlight(rt0.c0, rt0.c1, rt0.c1, vt0.c0)))>=(((rt0.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c2)*(rt0.c1)))) AND ((0.562581554934049)))) ORDER BY (((highlight(rt0.c0, rt0.c1, rt0.c1, vt0.c0)))>=(((rt0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c2)*(rt0.c1)))) AND ((0.562581554934049)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((highlight(rt0.c0, rt0.c1, rt0.c1, vt0.c0)))>=(((rt0.c0 IN ())))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((NULL)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((NULL)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((NULL)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((NULL)+(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((NULL)+(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)) AS REAL));
SELECT ALL * FROM rt0 WHERE (((((TYPEOF(DISTINCT rt0.c0))OR(((rt0.c0)&(rt0.c2)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa959fb4f))))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c0))OR(((rt0.c0)&(rt0.c2)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa959fb4f)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((TYPEOF(DISTINCT rt0.c0))OR(((rt0.c0)&(rt0.c2)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa959fb4f))))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c0))OR(((rt0.c0)&(rt0.c2)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa959fb4f)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((TYPEOF(DISTINCT rt0.c0))OR(((rt0.c0)&(rt0.c2)))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((0xffffffffa959fb4f))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(x'')))OR(0.27795680950721147)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((880015910, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(x'')))OR(x'')))OR(0.27795680950721147)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((880015910, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(x'')))OR(0.27795680950721147)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((880015910, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)OR(x'')))OR(x'')))OR(0.27795680950721147)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((880015910, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR(x'')))OR(x'')))OR(0.27795680950721147)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((880015910, vt0.c0, vt0.c0))))>>(CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('B+DJnowjり0') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (('B+DJnowjり0') IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('B+DJnowjり0') IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (('B+DJnowjり0') IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c2) ORDER BY (('B+DJnowjり0') IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), rt0.c1, CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), rt0.c1, CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), rt0.c1, CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ((COALESCE(vt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), rt0.c1, CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (COALESCE(vt0.c0 COLLATE NOCASE, (rt0.c2 IN ()), rt0.c1, CAST(rt0.c1 AS REAL)));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((NULL)<=(vt0.c0)))>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(0.20330610553909112)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(0.20330610553909112)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(0.20330610553909112)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(0.20330610553909112)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(0.20330610553909112)))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))AND((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((('0.07113744426036939')+(x'cc4f')));
SELECT SUM(count) FROM (SELECT ALL (((('0.07113744426036939')+(x'cc4f'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('0.07113744426036939')+(x'cc4f')));
SELECT SUM(count) FROM (SELECT ALL (((('0.07113744426036939')+(x'cc4f'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('0.07113744426036939')+(x'cc4f')));
SELECT ALL * FROM rt0 WHERE ((rtreenode(rt0.c2, rt0.c1) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT (((rtreenode(rt0.c2, rt0.c1) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((rtreenode(rt0.c2, rt0.c1) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT (((rtreenode(rt0.c2, rt0.c1) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 WHERE ((rtreenode(rt0.c2, rt0.c1) IN (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((CAST(rt0.c1 AS TEXT)) BETWEEN (((rt0.c0) NOT NULL)) AND (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c2)||(rt0.c0)) ELSE ((rt0.c1)<=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c2)||(rt0.c0)) ELSE ((rt0.c1)<=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c2)||(rt0.c0)) ELSE ((rt0.c1)<=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c2)||(rt0.c0)) ELSE ((rt0.c1)<=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c2)>=(rt0.c1)) THEN ((rt0.c2)||(rt0.c0)) ELSE ((rt0.c1)<=(rt0.c0)) END);
SELECT * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))>=((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0))>=((vt0.c0))) IN ())) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END DESC;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ()))||((- (vt0.c0)))) DESC, ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))||((- (vt0.c0)))) DESC, ((- (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ()))||((- (vt0.c0)))) DESC, ((- (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ()))||((- (vt0.c0)))) DESC, ((- (vt0.c0)) IN ()));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY (((vt0.c0 IN ()))||((- (vt0.c0)))) DESC, ((- (vt0.c0)) IN ());
SELECT * FROM vt0, rt0 WHERE ('-2057667474') ORDER BY (- (((rt0.c1)+(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2057667474') IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c1)+(rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ('-2057667474') ORDER BY (- (((rt0.c1)+(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-2057667474') IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c1)+(rt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ('-2057667474') ORDER BY (- (((rt0.c1)+(rt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((('') ISNULL));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0)))IS NOT(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM rt0, vt0 WHERE (CASE -1826315051  WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(x'063cc588')))AND(vt0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1826315051  WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(x'063cc588')))AND(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE -1826315051  WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(x'063cc588')))AND(vt0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE -1826315051  WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(x'063cc588')))AND(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (CASE -1826315051  WHEN (NOT (rt0.c2)) THEN ((((rt0.c1)OR(x'063cc588')))AND(vt0.c0)) END) ORDER BY NULL  NULLS LAST;
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) AS INTEGER));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY 0.5716140902524672 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5716140902524672 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY 0.5716140902524672 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.5716140902524672 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c0 COLLATE RTRIM END) ORDER BY 0.5716140902524672 ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((((((x'5ead')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)), vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'5ead')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)), vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((x'5ead')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)), vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((x'5ead')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)), vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((x'5ead')OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((+ (vt0.c0)), CAST(vt0.c0 AS TEXT), (((vt0.c0))<((vt0.c0))))) AND ((((vt0.c0)|(vt0.c0)), vt0.c0, vt0.c0)));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS INTEGER))>=(((rt0.c0)<>(rt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))>=(((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS INTEGER))>=(((rt0.c0)<>(rt0.c0))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS INTEGER))>=(((rt0.c0)!=(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c2 AS INTEGER))>=(((rt0.c0)<>(rt0.c0))))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST, vt0.c0  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC))/(ABS(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST, vt0.c0  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC))/(ABS(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST, vt0.c0  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC))/(ABS(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST, vt0.c0  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC))/(ABS(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOT NULL)) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) END ASC  NULLS LAST, vt0.c0  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC))/(ABS(vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(TRIM(DISTINCT rt0.c1, rt0.c0))) WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(TRIM(DISTINCT rt0.c1, rt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(TRIM(DISTINCT rt0.c1, rt0.c0))) WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(TRIM(DISTINCT rt0.c1, rt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((((((rt0.c2)LIKE(rt0.c2)))AND(CAST(rt0.c2 AS BLOB))))AND(TRIM(DISTINCT rt0.c1, rt0.c0))) WHERE (CAST(((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) END WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((vt0.c0)%(vt0.c0)) THEN TRIM(rt0.c0) END) ORDER BY CAST(((rt0.c0)*(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((vt0.c0)%(vt0.c0)) THEN TRIM(rt0.c0) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) END ORDER BY CAST(((rt0.c0)*(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) END WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((vt0.c0)%(vt0.c0)) THEN TRIM(rt0.c0) END) ORDER BY CAST(((rt0.c0)*(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((vt0.c0)%(vt0.c0)) THEN TRIM(rt0.c0) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) END ORDER BY CAST(((rt0.c0)*(vt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON CASE WHEN ((vt0.c0) IS FALSE) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)) END WHERE (CASE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))  WHEN ((vt0.c0)%(vt0.c0)) THEN TRIM(rt0.c0) END) ORDER BY CAST(((rt0.c0)*(vt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(x'c6dc')))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (NULL) AND (0.9325494343684436)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)-(rt0.c0)))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(x'c6dc')))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (NULL) AND (0.9325494343684436))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(x'c6dc')))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (NULL) AND (0.9325494343684436)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)-(rt0.c0)))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(x'c6dc')))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (NULL) AND (0.9325494343684436))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))AND(x'c6dc')))AND(rt0.c1)))))AND(((rt0.c0) NOT BETWEEN (NULL) AND (0.9325494343684436)))));
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND ('903887485')) THEN ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) WHEN TRIM(DISTINCT rt0.c2, rt0.c0) THEN (NOT (rt0.c0)) WHEN (rt0.c1 IN ()) THEN (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND ('903887485')) THEN ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) WHEN TRIM(DISTINCT rt0.c2, rt0.c0) THEN (NOT (rt0.c0)) WHEN (rt0.c1 IN ()) THEN (+ (vt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND ('903887485')) THEN ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) WHEN TRIM(DISTINCT rt0.c2, rt0.c0) THEN (NOT (rt0.c0)) WHEN (rt0.c1 IN ()) THEN (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND ('903887485')) THEN ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) WHEN TRIM(DISTINCT rt0.c2, rt0.c0) THEN (NOT (rt0.c0)) WHEN (rt0.c1 IN ()) THEN (+ (vt0.c0)) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((COALESCE(DISTINCT vt0.c0, vt0.c0, x'', vt0.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE vt0.c0 END) AND (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c0) AND ('903887485')) THEN ((((rt0.c0)AND(rt0.c2)))AND(vt0.c0)) WHEN TRIM(DISTINCT rt0.c2, rt0.c0) THEN (NOT (rt0.c0)) WHEN (rt0.c1 IN ()) THEN (+ (vt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((-1.769380236E9)>>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((-1.769380236E9)>>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((-1.769380236E9)>>(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((-1.769380236E9)>>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((-1.769380236E9)>>(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR('LUT䘭2')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR('LUT䘭2')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR('LUT䘭2')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR('LUT䘭2')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)OR('LUT䘭2')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)*((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, NULL))>=((vt0.c0, NULL, vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((rt0.c1)*(rt0.c0)) AS TEXT)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((rt0.c1)*(rt0.c0)) AS TEXT)) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)*(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(((rt0.c1)*(rt0.c0)) AS TEXT)) ORDER BY rt0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((vt0.c0 IN ())))) ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((0.11626873948952621)) AND (('dN'))))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))OR((('9N>썆')LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((0.11626873948952621)) AND (('dN'))))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))OR((('9N>썆')LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((vt0.c0 IN ())))) ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((0.11626873948952621)) AND (('dN'))))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))OR((('9N>썆')LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((0.11626873948952621)) AND (('dN'))))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))OR((('9N>썆')LIKE(vt0.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)GLOB((vt0.c0 IN ())))) ORDER BY ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((0.11626873948952621)) AND (('dN'))))))AND(((vt0.c0)>>(vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT NULL))))OR((('9N>썆')LIKE(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON HEX((((rt0.c1))==((rt0.c0)))) WHERE (((rt0.c0) NOT BETWEEN (CASE '-1653294479'  WHEN 'JLZ_2!1OT' THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (CASE '-1653294479'  WHEN 'JLZ_2!1OT' THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON HEX((((rt0.c1))=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON HEX((((rt0.c1))==((rt0.c0)))) WHERE (((rt0.c0) NOT BETWEEN (CASE '-1653294479'  WHEN 'JLZ_2!1OT' THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (CASE '-1653294479'  WHEN 'JLZ_2!1OT' THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON HEX((((rt0.c1))=((rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON HEX((((rt0.c1))==((rt0.c0)))) WHERE (((rt0.c0) NOT BETWEEN (CASE '-1653294479'  WHEN 'JLZ_2!1OT' THEN rt0.c1 ELSE rt0.c1 END) AND (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL))==((IFNULL(rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))==((IFNULL(rt0.c0, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL))==((IFNULL(rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL))==((IFNULL(rt0.c0, vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL))==((IFNULL(rt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))>=(RTRIM(x'')))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>=(RTRIM(x'')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))>=(RTRIM(x'')))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))>=(RTRIM(x'')))) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 IN ()))>=(RTRIM(x'')))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c1)/(rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c1)/(rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c1)/(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c0 AS REAL)) NOT BETWEEN (((((rt0.c0)AND(rt0.c1)))OR(rt0.c0))) AND (((rt0.c1)/(rt0.c1))))) ORDER BY (((rt0.c1)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))) AND ((((rt0.c2) ISNULL))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))&((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))&((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))&((NULL IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))&((NULL IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN ()))&((NULL IN ()))));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (+ (CAST('' AS NUMERIC)))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((rt0.c2 IN ())))  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CAST('' AS NUMERIC)))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((rt0.c2 IN ())))  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (+ (CAST('' AS NUMERIC)))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((rt0.c2 IN ())))  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0 ORDER BY (+ (CAST('' AS NUMERIC)))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((rt0.c2 IN ())))  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM rt0, vt0 WHERE (NULL) ORDER BY (+ (CAST('' AS NUMERIC)))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((rt0.c2 IN ())))  NULLS LAST, CAST(vt0.c0 COLLATE NOCASE AS INTEGER);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)>=(rt0.c1)))))AND((((rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) ORDER BY (+ (CASE vt0.c0  WHEN -3.21968103E8 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)>=(rt0.c1)))))AND((((rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE vt0.c0  WHEN -3.21968103E8 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)>=(rt0.c1)))))AND((((rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) ORDER BY (+ (CASE vt0.c0  WHEN -3.21968103E8 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)>=(rt0.c1)))))AND((((rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (CASE vt0.c0  WHEN -3.21968103E8 THEN rt0.c1 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c0 COLLATE NOCASE)AND(((rt0.c0)>=(rt0.c1)))))AND((((rt0.c1, NULL, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0)))))) ORDER BY (+ (CASE vt0.c0  WHEN -3.21968103E8 THEN rt0.c1 END)) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS INTEGER)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (CAST(vt0.c0 AS INTEGER));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE -321968103  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c1)<<(x'ad4e')) THEN vt0.c0 WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '' END THEN ((rt0.c1)>>(rt0.c2)) END) ORDER BY IFNULL(DISTINCT (((rt0.c1))!=((rt0.c2))), (vt0.c0 IN ())), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(NULL))  NULLS LAST, CAST((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE -321968103  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c1)<<(x'ad4e')) THEN vt0.c0 WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '' END THEN ((rt0.c1)>>(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT (((rt0.c1))!=((rt0.c2))), (vt0.c0 IN ())), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(NULL))  NULLS LAST, CAST((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE -321968103  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c1)<<(x'ad4e')) THEN vt0.c0 WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '' END THEN ((rt0.c1)>>(rt0.c2)) END) ORDER BY IFNULL(DISTINCT (((rt0.c1))!=((rt0.c2))), (vt0.c0 IN ())), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(NULL))  NULLS LAST, CAST((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CASE -321968103  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c1)<<(x'ad4e')) THEN vt0.c0 WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '' END THEN ((rt0.c1)>>(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY IFNULL(DISTINCT (((rt0.c1))!=((rt0.c2))), (vt0.c0 IN ())), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(NULL))  NULLS LAST, CAST((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE -321968103  WHEN rt0.c1 COLLATE NOCASE THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)) WHEN ((rt0.c1)<<(x'ad4e')) THEN vt0.c0 WHEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE '' END THEN ((rt0.c1)>>(rt0.c2)) END) ORDER BY IFNULL(DISTINCT (((rt0.c1))!=((rt0.c2))), (vt0.c0 IN ())), (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))>=(NULL))  NULLS LAST, CAST((((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) AS BLOB);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((('F,45C9甬')IS(((rt0.c2)OR(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((vt0.c0, -1.109462731E9, rt0.c0))), ((vt0.c0)IS NOT(rt0.c0)), rt0.c0 COLLATE RTRIM)) AND ((NULL, (- (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((('F,45C9甬')IS(((rt0.c2)OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((vt0.c0, -1.109462731E9, rt0.c0))), ((vt0.c0)IS NOT(rt0.c0)), rt0.c0 COLLATE RTRIM)) AND ((NULL, (- (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((('F,45C9甬')IS(((rt0.c2)OR(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((vt0.c0, -1.109462731E9, rt0.c0))), ((vt0.c0)IS NOT(rt0.c0)), rt0.c0 COLLATE RTRIM)) AND ((NULL, (- (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT (((('F,45C9甬')IS(((rt0.c2)OR(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((vt0.c0, -1.109462731E9, rt0.c0))), ((vt0.c0)IS NOT(rt0.c0)), rt0.c0 COLLATE RTRIM)) AND ((NULL, (- (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((('F,45C9甬')IS(((rt0.c2)OR(vt0.c0))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN (((((rt0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c2)) AND ((vt0.c0, -1.109462731E9, rt0.c0))), ((vt0.c0)IS NOT(rt0.c0)), rt0.c0 COLLATE RTRIM)) AND ((NULL, (- (rt0.c1)), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF((((('bNbM')OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((('bNbM')OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF((((('bNbM')OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((((('bNbM')OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULLIF((((('bNbM')OR(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))<>(((x'1040')AND(rt0.c0))))  NULLS LAST, IFNULL(DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((-3561537, rt0.c2, rt0.c1))), LIKE('-1109462731', rt0.c2, '	')), ('' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))!=(((x'1040')AND(rt0.c0))))  NULLS LAST, IFNULL(DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((-3561537, rt0.c2, rt0.c1))), LIKE('-1109462731', rt0.c2, '	')), ('' IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))<>(((x'1040')AND(rt0.c0))))  NULLS LAST, IFNULL(DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((-3561537, rt0.c2, rt0.c1))), LIKE('-1109462731', rt0.c2, '	')), ('' IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))!=(((x'1040')AND(rt0.c0))))  NULLS LAST, IFNULL(DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((-3561537, rt0.c2, rt0.c1))), LIKE('-1109462731', rt0.c2, '	')), ('' IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((- (rt0.c1)) IN ())) ORDER BY ((((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))<>(((x'1040')AND(rt0.c0))))  NULLS LAST, IFNULL(DISTINCT (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((-3561537, rt0.c2, rt0.c1))), LIKE('-1109462731', rt0.c2, '	')), ('' IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN x'3ebf' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN x'3ebf' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN x'3ebf' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN x'3ebf' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c2)) THEN CASE WHEN x'3ebf' THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END END);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN ((+ (rt0.c2))))) ORDER BY (NOT ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN ((+ (rt0.c2))))) ORDER BY (NOT ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) ISNULL) IN ((+ (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT ((rt0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2) ISNULL) IN ((+ (rt0.c2))))) ORDER BY (NOT ((rt0.c1 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (json_insert(vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0) COLLATE NOCASE) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_insert(vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0) COLLATE NOCASE) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_insert(vt0.c0, vt0.c0, vt0.c0, NULL, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'', vt0.c0))))<=((((NULL, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, x'', vt0.c0))))<=((((NULL, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'', vt0.c0))))<=((((NULL, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, x'', vt0.c0))))<=((((NULL, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN (((- (vt0.c0)))) AND (((((vt0.c0))>=((vt0.c0))))))) ORDER BY (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, x'', vt0.c0))))<=((((NULL, vt0.c0, NULL)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT ALL * FROM rt0, vt0 WHERE (((QUOTE(rt0.c0))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN (~ (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c0))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN (~ (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((QUOTE(rt0.c0))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN (~ (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c0))AND(((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN (~ (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((QUOTE(rt0.c0))AND(((rt0.c1)*(rt0.c2))))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN (rt0.c2 IN ()) THEN (~ (rt0.c0)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST(rt0.c1 AS BLOB) WHEN rt0.c2 COLLATE BINARY THEN ((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)) END  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS REAL));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS FALSE) COLLATE BINARY);
SELECT * FROM rt0 WHERE ((((CAST(0x4846b8c1 AS NUMERIC)))<=(((rt0.c1 IN ()))))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE (rt0.c1 IN ()) END ASC  NULLS LAST, highlight(rt0.c1, ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, NULL, rt0.c2))>((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c0)<(rt0.c1))) ASC, (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(0x4846b8c1 AS NUMERIC)))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE (rt0.c1 IN ()) END ASC  NULLS LAST, highlight(rt0.c1, ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, NULL, rt0.c2))>((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c0)<(rt0.c1))) ASC, (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c2)) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE ((((CAST(0x4846b8c1 AS NUMERIC)))<=(((rt0.c1 IN ()))))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE (rt0.c1 IN ()) END ASC  NULLS LAST, highlight(rt0.c1, ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, NULL, rt0.c2))>((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c0)<(rt0.c1))) ASC, (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c2)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(0x4846b8c1 AS NUMERIC)))<=(((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE (rt0.c1 IN ()) END ASC  NULLS LAST, highlight(rt0.c1, ((((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)), (((rt0.c2, NULL, rt0.c2))>((rt0.c2, rt0.c2, rt0.c1))), ((rt0.c0)<(rt0.c1))) ASC, (rt0.c1 IN (rt0.c0, rt0.c1, rt0.c2)) COLLATE BINARY ASC);
SELECT * FROM rt0 WHERE (((((~ (rt0.c2)), CAST(rt0.c2 AS REAL), rt0.c1 COLLATE NOCASE))>((rt0.c0, ((rt0.c2) IS TRUE), x'')))) ORDER BY json_quote(((rt0.c2) ISNULL))  NULLS FIRST, (('-60163251') BETWEEN (0.9559232901451467) AND (UNLIKELY(DISTINCT x'af95')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2)), CAST(rt0.c2 AS REAL), rt0.c1 COLLATE NOCASE))>((rt0.c0, ((rt0.c2) IS TRUE), x'')))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c2) ISNULL))  NULLS FIRST, (('-60163251') BETWEEN (0.9559232901451467) AND (UNLIKELY(DISTINCT x'af95')))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c2)), CAST(rt0.c2 AS REAL), rt0.c1 COLLATE NOCASE))>((rt0.c0, ((rt0.c2) IS TRUE), x'')))) ORDER BY json_quote(((rt0.c2) ISNULL))  NULLS FIRST, (('-60163251') BETWEEN (0.9559232901451467) AND (UNLIKELY(DISTINCT x'af95')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((~ (rt0.c2)), CAST(rt0.c2 AS REAL), rt0.c1 COLLATE NOCASE))>((rt0.c0, ((rt0.c2) IS TRUE), x'')))) IS TRUE)  as count FROM rt0 ORDER BY json_quote(((rt0.c2) ISNULL))  NULLS FIRST, (('-60163251') BETWEEN (0.9559232901451467) AND (UNLIKELY(DISTINCT x'af95')))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((~ (rt0.c2)), CAST(rt0.c2 AS REAL), rt0.c1 COLLATE NOCASE))>((rt0.c0, ((rt0.c2) IS TRUE), x'')))) ORDER BY json_quote(((rt0.c2) ISNULL))  NULLS FIRST, (('-60163251') BETWEEN (0.9559232901451467) AND (UNLIKELY(DISTINCT x'af95')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0)&(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((CAST(rt0.c2 AS INTEGER) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0)&(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0)&(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((CAST(rt0.c2 AS INTEGER) IN ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c2 AS INTEGER) IN ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0)&(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END);
SELECT * FROM vt0 CROSS JOIN rt0 ON CASE WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c0)&(rt0.c1)) WHEN ((rt0.c2) IS FALSE) THEN ((rt0.c0)<(rt0.c2)) WHEN ((rt0.c2)<=(rt0.c1)) THEN rt0.c1 COLLATE NOCASE END WHERE ((CAST(rt0.c2 AS INTEGER) IN ((+ (vt0.c0)))));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY WHERE ((CAST('-1757363386' AS REAL) IN ())) ORDER BY CAST(rt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((CAST('-1757363386' AS REAL) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY ORDER BY CAST(rt0.c0 AS REAL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY WHERE ((CAST('-1757363386' AS REAL) IN ())) ORDER BY CAST(rt0.c0 AS REAL);
SELECT SUM(count) FROM (SELECT (((CAST('-1757363386' AS REAL) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY ORDER BY CAST(rt0.c0 AS REAL));
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY WHERE ((CAST('-1757363386' AS REAL) IN ())) ORDER BY CAST(rt0.c0 AS REAL);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE)) ORDER BY ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE)) ORDER BY ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE)) ORDER BY ((((((((rt0.c0)AND(rt0.c1)))AND(vt0.c0)))OR(((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))))AND(rt0.c2)) ASC;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)||(rt0.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '>' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (-1.26118645E8 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)||(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE (~ (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '>' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (-1.26118645E8 IN ()) END DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)||(rt0.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '>' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (-1.26118645E8 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)||(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY CASE (~ (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '>' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (-1.26118645E8 IN ()) END DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE)||(rt0.c0 COLLATE RTRIM))) ORDER BY CASE (~ (rt0.c0))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN '>' WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END THEN (-1.26118645E8 IN ()) END DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.c0))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt0.c0))=((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.c0))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((vt0.c0))=((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (LIKELY((((vt0.c0))==((vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c2 END)));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (json_remove(rt0.c0, rt0.c2) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(x'dc04c8ed' AS TEXT))))AND((((rt0.c0, vt0.c0, 0.07955362846752412)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0))))))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC, ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)=(rt0.c0 COLLATE RTRIM)), ((('1486018006'))<(((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_remove(rt0.c0, rt0.c2) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(x'dc04c8ed' AS TEXT))))AND((((rt0.c0, vt0.c0, 0.07955362846752412)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0))))))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC, ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)=(rt0.c0 COLLATE RTRIM)), ((('1486018006'))<(((+ (rt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (json_remove(rt0.c0, rt0.c2) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(x'dc04c8ed' AS TEXT))))AND((((rt0.c0, vt0.c0, 0.07955362846752412)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0))))))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC, ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)=(rt0.c0 COLLATE RTRIM)), ((('1486018006'))<(((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_remove(rt0.c0, rt0.c2) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(x'dc04c8ed' AS TEXT))))AND((((rt0.c0, vt0.c0, 0.07955362846752412)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0))))))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC, ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)=(rt0.c0 COLLATE RTRIM)), ((('1486018006'))<(((+ (rt0.c0))))));
SELECT ALL * FROM rt0 NATURAL JOIN vt0 WHERE (json_remove(rt0.c0, rt0.c2) COLLATE BINARY COLLATE BINARY) ORDER BY ((((((((((((((vt0.c0)>>(vt0.c0)))AND(vt0.c0 COLLATE NOCASE)))OR(CAST(x'dc04c8ed' AS TEXT))))AND((((rt0.c0, vt0.c0, 0.07955362846752412)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, vt0.c0, vt0.c0))))))OR(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))))AND(((((rt0.c1)OR(rt0.c1)))OR(vt0.c0)))))OR(((vt0.c0) IS TRUE))) DESC, ((CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)=(rt0.c0 COLLATE RTRIM)), ((('1486018006'))<(((+ (rt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN NULL ELSE 0.37184336735174195 END ELSE (((rt0.c1))>=((rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN NULL ELSE 0.37184336735174195 END ELSE (((rt0.c1))>=((rt0.c1))) END ASC);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN NULL ELSE 0.37184336735174195 END ELSE (((rt0.c1))>=((rt0.c1))) END ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN NULL ELSE 0.37184336735174195 END ELSE (((rt0.c1))>=((rt0.c1))) END ASC);
SELECT * FROM rt0, vt0 WHERE (rt0.c0) ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN ((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)) THEN CASE rt0.c1  WHEN vt0.c0 THEN NULL ELSE 0.37184336735174195 END ELSE (((rt0.c1))>=((rt0.c1))) END ASC;
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c2, rt0.c2))) AND ((UNLIKELY(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c2, rt0.c2))) AND ((UNLIKELY(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c2, rt0.c2))) AND ((UNLIKELY(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c2, rt0.c2))) AND ((UNLIKELY(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (UPPER(DISTINCT (~ (vt0.c0)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((TRIM(rt0.c2, rt0.c2))) AND ((UNLIKELY(rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((((rt0.c2)>(NULL))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(NULL))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((((rt0.c2)>(NULL))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)>(NULL))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0) ISNULL) IN ())) ORDER BY ((((rt0.c2)>(NULL))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LOWER(TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(TRIM(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(TRIM(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(TRIM(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (LOWER(TRIM(DISTINCT vt0.c0)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)AND(LTRIM(rt0.c1, rt0.c2))))AND(((rt0.c2)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)AND(LTRIM(rt0.c1, rt0.c2))))AND(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)AND(LTRIM(rt0.c1, rt0.c2))))AND(((rt0.c2)<<(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)AND(LTRIM(rt0.c1, rt0.c2))))AND(((rt0.c2)<<(rt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (((((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END)AND(LTRIM(rt0.c1, rt0.c2))))AND(((rt0.c2)<<(rt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY '' COLLATE NOCASE COLLATE RTRIM  NULLS LAST, (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' COLLATE NOCASE COLLATE RTRIM  NULLS LAST, (LOWER(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY '' COLLATE NOCASE COLLATE RTRIM  NULLS LAST, (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY '' COLLATE NOCASE COLLATE RTRIM  NULLS LAST, (LOWER(rt0.c0) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY '' COLLATE NOCASE COLLATE RTRIM  NULLS LAST, (LOWER(rt0.c0) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(DISTINCT rt0.c0)  WHEN UPPER(DISTINCT rt0.c1) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT rt0.c0)  WHEN UPPER(DISTINCT rt0.c1) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(DISTINCT rt0.c0)  WHEN UPPER(DISTINCT rt0.c1) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE TRIM(DISTINCT rt0.c0)  WHEN UPPER(DISTINCT rt0.c1) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE TRIM(DISTINCT rt0.c0)  WHEN UPPER(DISTINCT rt0.c1) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt0.c1)) END);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(x'')))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(x'')))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(x'')))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(x'')))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c0)))AND(x'')))) AND (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))));
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))) COLLATE BINARY);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (((rt0.c1) IS TRUE))) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (((rt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (((rt0.c1) IS TRUE))) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (NOT (((rt0.c1) IS TRUE))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON (NOT (((rt0.c1) IS TRUE))) WHERE ((((vt0.c0)) BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((rt0.c1 COLLATE BINARY))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR(NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL)))), CAST(x'ec37' AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL)))), CAST(x'ec37' AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR(NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL)))), CAST(x'ec37' AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL)))), CAST(x'ec37' AS REAL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0)))GLOB(((((vt0.c0)AND(vt0.c0)))OR(NULL))))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0) ISNULL))) AND ((((vt0.c0) NOTNULL)))), CAST(x'ec37' AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE -386810147  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1244183783' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>((((vt0.c0)%(rt0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE -386810147  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1244183783' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>((((vt0.c0)%(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE -386810147  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1244183783' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>((((vt0.c0)%(rt0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE -386810147  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1244183783' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>((((vt0.c0)%(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((CASE -386810147  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '-1244183783' WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END))>((((vt0.c0)%(rt0.c0)))))) ORDER BY x'' ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((rt0.c0 IN ())))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)LIKE(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE NOCASE WHERE ((~ (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE NOCASE WHERE ((~ (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON rt0.c1 COLLATE BINARY COLLATE NOCASE WHERE ((~ (CAST(rt0.c1 AS BLOB))));
SELECT * FROM rt0 WHERE ((- (NULL))) ORDER BY ((((((((NULL)AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c0)))OR(x'99dc4743')))))AND(0.15401562199043584)))AND((NOT (rt0.c2))))  NULLS LAST, (('|51#~')IS NOT(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c0)))OR(x'99dc4743')))))AND(0.15401562199043584)))AND((NOT (rt0.c2))))  NULLS LAST, (('|51#~')IS NOT(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE ((- (NULL))) ORDER BY ((((((((NULL)AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c0)))OR(x'99dc4743')))))AND(0.15401562199043584)))AND((NOT (rt0.c2))))  NULLS LAST, (('|51#~')IS NOT(rt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((- (NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((NULL)AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c0)))OR(x'99dc4743')))))AND(0.15401562199043584)))AND((NOT (rt0.c2))))  NULLS LAST, (('|51#~')IS NOT(rt0.c1 COLLATE NOCASE)));
SELECT * FROM rt0 WHERE ((- (NULL))) ORDER BY ((((((((NULL)AND(rt0.c0)))AND(((((rt0.c1)AND(rt0.c0)))OR(x'99dc4743')))))AND(0.15401562199043584)))AND((NOT (rt0.c2))))  NULLS LAST, (('|51#~')IS NOT(rt0.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c1) IS TRUE), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) IS TRUE), (NOT (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c1) IS TRUE), (NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ((rt0.c1) IS TRUE), (NOT (vt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (COALESCE(DISTINCT ((rt0.c1) IS TRUE), (NOT (vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&(vt0.c0))) ORDER BY UPPER((vt0.c0 IN ())) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(MAX(vt0.c0, vt0.c0))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((vt0.c0 IN ())) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(MAX(vt0.c0, vt0.c0))), vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&(vt0.c0))) ORDER BY UPPER((vt0.c0 IN ())) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(MAX(vt0.c0, vt0.c0))), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))&(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY UPPER((vt0.c0 IN ())) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(MAX(vt0.c0, vt0.c0))), vt0.c0 DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))&(vt0.c0))) ORDER BY UPPER((vt0.c0 IN ())) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR((vt0.c0 IN ()))))AND(MAX(vt0.c0, vt0.c0))), vt0.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)==(rt0.c1))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0)) WHERE (LOWER(DISTINCT ((rt0.c2)>=(x'')))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END IN (((NULL)+(0.07113744426036939))))  NULLS LAST, (CASE 0.6993452731763323  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN ()) DESC, (((NOT (rt0.c1)))|((((((((('')OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c2)>=(x'')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c1))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0)) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END IN (((NULL)+(0.07113744426036939))))  NULLS LAST, (CASE 0.6993452731763323  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN ()) DESC, (((NOT (rt0.c1)))|((((((((('')OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)==(rt0.c1))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0)) WHERE (LOWER(DISTINCT ((rt0.c2)>=(x'')))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END IN (((NULL)+(0.07113744426036939))))  NULLS LAST, (CASE 0.6993452731763323  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN ()) DESC, (((NOT (rt0.c1)))|((((((((('')OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c2)>=(x'')))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c1))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0)) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END IN (((NULL)+(0.07113744426036939))))  NULLS LAST, (CASE 0.6993452731763323  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN ()) DESC, (((NOT (rt0.c1)))|((((((((('')OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)==(rt0.c1))) BETWEEN (TRIM(DISTINCT rt0.c0)) AND (rt0.c0)) WHERE (LOWER(DISTINCT ((rt0.c2)>=(x'')))) ORDER BY (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END IN (((NULL)+(0.07113744426036939))))  NULLS LAST, (CASE 0.6993452731763323  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c2 END IN ()) DESC, (((NOT (rt0.c1)))|((((((((('')OR(vt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))));
SELECT ALL * FROM vt0 WHERE (COALESCE(((vt0.c0) BETWEEN (x'') AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-664587274' END, ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0) BETWEEN (x'') AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-664587274' END, ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(((vt0.c0) BETWEEN (x'') AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-664587274' END, ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((vt0.c0) BETWEEN (x'') AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-664587274' END, ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(((vt0.c0) BETWEEN (x'') AND (vt0.c0)), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '-664587274' END, ((vt0.c0)GLOB(vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(-664587274)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((((rt0.c1))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(-664587274)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(-664587274)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((((rt0.c1))==((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(-664587274)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((((rt0.c1))==((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))AND(-664587274)))AND(rt0.c1))) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((((rt0.c1))==((rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2 IN ())) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT * FROM vt0 INNER JOIN rt0 ON IFNULL(DISTINCT (((rt0.c1, rt0.c2, rt0.c1))==(('I甬', rt0.c2, rt0.c1))), (+ (rt0.c2))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON IFNULL(DISTINCT (((rt0.c1, rt0.c2, rt0.c1))==(('I甬', rt0.c2, rt0.c1))), (+ (rt0.c2))));
SELECT * FROM vt0 INNER JOIN rt0 ON IFNULL(DISTINCT (((rt0.c1, rt0.c2, rt0.c1))==(('I甬', rt0.c2, rt0.c1))), (+ (rt0.c2))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON IFNULL(DISTINCT (((rt0.c1, rt0.c2, rt0.c1))==(('I甬', rt0.c2, rt0.c1))), (+ (rt0.c2))));
SELECT * FROM vt0 INNER JOIN rt0 ON IFNULL(DISTINCT (((rt0.c1, rt0.c2, rt0.c1))==(('I甬', rt0.c2, rt0.c1))), (+ (rt0.c2))) WHERE ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()));
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1888919009'))))) ORDER BY CAST(((vt0.c0)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1888919009'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c0)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1888919009'))))) ORDER BY CAST(((vt0.c0)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1888919009'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((vt0.c0)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (((vt0.c0 COLLATE BINARY)*(((vt0.c0) NOT BETWEEN (rt0.c0) AND ('1888919009'))))) ORDER BY CAST(((vt0.c0)GLOB(rt0.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END AS BLOB));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) THEN COALESCE(DISTINCT rt0.c1, vt0.c0) ELSE rt0.c2 END WHERE (((rt0.c1)GLOB(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) THEN COALESCE(DISTINCT rt0.c1, vt0.c0) ELSE rt0.c2 END);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) THEN COALESCE(DISTINCT rt0.c1, vt0.c0) ELSE rt0.c2 END WHERE (((rt0.c1)GLOB(rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt0.c1)GLOB(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) THEN COALESCE(DISTINCT rt0.c1, vt0.c0) ELSE rt0.c2 END);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c0)) THEN COALESCE(DISTINCT rt0.c1, vt0.c0) ELSE rt0.c2 END WHERE (((rt0.c1)GLOB(rt0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c0);
SELECT * FROM vt0, rt0 WHERE (load_extension(rt0.c2)) ORDER BY (((((NULL))>=((rt0.c2)))) NOT BETWEEN (vt0.c0) AND (((rt0.c0)<<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((NULL))>=((rt0.c2)))) NOT BETWEEN (vt0.c0) AND (((rt0.c0)<<(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (load_extension(rt0.c2)) ORDER BY (((((NULL))>=((rt0.c2)))) NOT BETWEEN (vt0.c0) AND (((rt0.c0)<<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(rt0.c2)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((NULL))>=((rt0.c2)))) NOT BETWEEN (vt0.c0) AND (((rt0.c0)<<(rt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffe132a762 END)<=((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0Xffffffffe132a762 END)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffe132a762 END)<=((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0Xffffffffe132a762 END)<=((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffe132a762 END)<=((NOT (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((highlight(rt0.c1, 0x3b450c35, rt0.c1, rt0.c1))>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) NOT BETWEEN ('-534442634') AND (rt0.c2)) ELSE ((rt0.c0) ISNULL) END ASC  NULLS FIRST, ((((rt0.c2 COLLATE BINARY)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt0.c1, 0x3b450c35, rt0.c1, rt0.c1))>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) NOT BETWEEN ('-534442634') AND (rt0.c2)) ELSE ((rt0.c0) ISNULL) END ASC  NULLS FIRST, ((((rt0.c2 COLLATE BINARY)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((highlight(rt0.c1, 0x3b450c35, rt0.c1, rt0.c1))>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) NOT BETWEEN ('-534442634') AND (rt0.c2)) ELSE ((rt0.c0) ISNULL) END ASC  NULLS FIRST, ((((rt0.c2 COLLATE BINARY)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((highlight(rt0.c1, 0x3b450c35, rt0.c1, rt0.c1))>>(((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN ()) THEN ((rt0.c2)=(rt0.c0)) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c1) NOT BETWEEN ('-534442634') AND (rt0.c2)) ELSE ((rt0.c0) ISNULL) END ASC  NULLS FIRST, ((((rt0.c2 COLLATE BINARY)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)=(vt0.c0))))) ORDER BY (((vt0.c0) IS TRUE) IN ()) DESC;
SELECT COUNT(*) FROM rt0 WHERE (('-2035815412' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((('-2035815412' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('-2035815412' IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((('-2035815412' IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (('-2035815412' IN ()) COLLATE NOCASE);
SELECT ALL * FROM rt0, vt0 WHERE (CASE x''  WHEN (- (rt0.c1)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN x'6088' THEN ((rt0.c2)<>(vt0.c0)) ELSE rt0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN (((((((((rt0.c2)AND('-1943092011')))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (- (rt0.c1)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN x'6088' THEN ((rt0.c2)!=(vt0.c0)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c2 COLLATE NOCASE IN (((((((((rt0.c2)AND('-1943092011')))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE x''  WHEN (- (rt0.c1)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN x'6088' THEN ((rt0.c2)<>(vt0.c0)) ELSE rt0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN (((((((((rt0.c2)AND('-1943092011')))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN (- (rt0.c1)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN x'6088' THEN ((rt0.c2)!=(vt0.c0)) ELSE rt0.c0 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c2 COLLATE NOCASE IN (((((((((rt0.c2)AND('-1943092011')))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE x''  WHEN (- (rt0.c1)) THEN x'' WHEN CAST(rt0.c0 AS REAL) THEN (rt0.c1 IN (rt0.c1, rt0.c0)) WHEN x'6088' THEN ((rt0.c2)<>(vt0.c0)) ELSE rt0.c0 END) ORDER BY (rt0.c2 COLLATE NOCASE IN (((((((((rt0.c2)AND('-1943092011')))OR(rt0.c1)))OR(rt0.c0)))OR(vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (x'51fd');
SELECT SUM(count) FROM (SELECT ((x'51fd') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'51fd');
SELECT SUM(count) FROM (SELECT ((x'51fd') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'51fd');
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('^G\n', vt0.c0, vt0.c0)))))) ORDER BY '702142714';
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('^G\n', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '702142714');
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('^G\n', vt0.c0, vt0.c0)))))) ORDER BY '702142714';
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('^G\n', vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY '702142714');
SELECT * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND (('^G\n', vt0.c0, vt0.c0)))))) ORDER BY '702142714';
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((((rt0.c1))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((((rt0.c1))<>((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c1))!=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- ((((rt0.c1))<>((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE ((NOT (0.15164967198347834 COLLATE RTRIM))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (0.15164967198347834 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (0.15164967198347834 COLLATE RTRIM))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (0.15164967198347834 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((NOT (0.15164967198347834 COLLATE RTRIM))) ORDER BY rt0.c0 COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY ((rt0.c2)==(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)==(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY ((rt0.c2)==(rt0.c2)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)==(rt0.c2)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (((rt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY ((rt0.c2)==(rt0.c2)) COLLATE RTRIM DESC;
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) ORDER BY x'b14c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY x'b14c'  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) ORDER BY x'b14c'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY x'b14c'  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c0 IN ())) NOT NULL)) ORDER BY x'b14c'  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))/(LIKELIHOOD(DISTINCT rt0.c0, 0.6434989630567345))) WHERE (((+ (vt0.c0)) IN ())) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)), -1361473806  NULLS FIRST, CASE rt0.c2  WHEN x'9af5b1bd5c19' THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))/(LIKELIHOOD(DISTINCT rt0.c0, 0.6434989630567345))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)), -1361473806  NULLS FIRST, CASE rt0.c2  WHEN x'9af5b1bd5c19' THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))/(LIKELIHOOD(DISTINCT rt0.c0, 0.6434989630567345))) WHERE (((+ (vt0.c0)) IN ())) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)), -1361473806  NULLS FIRST, CASE rt0.c2  WHEN x'9af5b1bd5c19' THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0 IN ()))/(LIKELIHOOD(DISTINCT rt0.c0, 0.6434989630567345))) ORDER BY (~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c1 END)), -1361473806  NULLS FIRST, CASE rt0.c2  WHEN x'9af5b1bd5c19' THEN rt0.c0 END COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((vt0.c0)*(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(vt0.c0)  WHEN (((vt0.c0))=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(vt0.c0)  WHEN (((vt0.c0))=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END);
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(vt0.c0)  WHEN (((vt0.c0))=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END;
SELECT SUM(count) FROM (SELECT ((CASE UNLIKELY(vt0.c0)  WHEN (((vt0.c0))=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END);
SELECT COUNT(*) FROM vt0 WHERE (CASE UNLIKELY(vt0.c0)  WHEN (((vt0.c0))=((vt0.c0))) THEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) END) ORDER BY ((vt0.c0) ISNULL) COLLATE BINARY ASC  NULLS LAST, CASE WHEN UPPER(DISTINCT vt0.c0) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE NULL END;
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((0.6483004700662435)LIKE(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((vt0.c0)+(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((0.6483004700662435)LIKE(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((vt0.c0)+(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((0.6483004700662435)LIKE(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((vt0.c0)+(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((0.6483004700662435)LIKE(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((vt0.c0)+(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM vt0 WHERE ((vt0.c0 IN ())) ORDER BY ((((((0.6483004700662435)LIKE(vt0.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ASC, ((vt0.c0)+(((vt0.c0)AND(vt0.c0))));
SELECT * FROM rt0 WHERE (TRIM(rt0.c0 COLLATE RTRIM)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TRIM(rt0.c0 COLLATE RTRIM)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TRIM(rt0.c0 COLLATE RTRIM)) ORDER BY x'' ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c1))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c1))-(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c1))-(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c1))-(x''))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((LIKELY(DISTINCT rt0.c1))-(x'')));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (''))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (''))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c2) AND (''))) IS FALSE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED FULL OUTER JOIN rt0 ON CAST(vt0.c0 COLLATE NOCASE AS NUMERIC) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c2) AND (''))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>(((vt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1)&(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c1)))OR(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)&(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c1)))OR(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1)&(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c1)))OR(rt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c1)&(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c1)))OR(rt0.c1)) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM) NOT BETWEEN ((+ (rt0.c2))) AND (((((rt0.c2)OR(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((((((((rt0.c1)&(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(rt0.c1)))OR(rt0.c1)) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.6429081866451344)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.6429081866451344)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.6429081866451344)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.6429081866451344)) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN ((rt0.c2) NOT BETWEEN (vt0.c0) AND (0.6429081866451344)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((GLOB(vt0.c0, rt0.c0))IS(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN (((rt0.c0))>((vt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(vt0.c0, rt0.c0))IS(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c0))>((vt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((GLOB(vt0.c0, rt0.c0))IS(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN (((rt0.c0))>((vt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(vt0.c0, rt0.c0))IS(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c0))>((vt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((GLOB(vt0.c0, rt0.c0))IS(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY CASE WHEN (((rt0.c0))>((vt0.c0))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ('1025684728');
SELECT SUM(count) FROM (SELECT (('1025684728') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1025684728');
SELECT SUM(count) FROM (SELECT (('1025684728') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('1025684728');
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((LOWER(rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1))) ORDER BY 0.6190454174524456 ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6190454174524456 ASC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((LOWER(rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1))) ORDER BY 0.6190454174524456 ASC  NULLS FIRST, vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.6190454174524456 ASC  NULLS FIRST, vt0.c0 DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (((LOWER(rt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c1))) ORDER BY 0.6190454174524456 ASC  NULLS FIRST, vt0.c0 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)/((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)/((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c2)/((rt0.c1 IN ()))));
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c1)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c1)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c1)%(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c1)%(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END THEN ((rt0.c0) NOT NULL) ELSE ((rt0.c1)%(rt0.c2)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(' END, ((rt0.c2) IS FALSE))) ORDER BY (rt0.c1 IN ()) DESC, json_array_length(((rt0.c0)+(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(' END, ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN ()) DESC, json_array_length(((rt0.c0)+(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(' END, ((rt0.c2) IS FALSE))) ORDER BY (rt0.c1 IN ()) DESC, json_array_length(((rt0.c0)+(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ((IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(' END, ((rt0.c2) IS FALSE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c1 IN ()) DESC, json_array_length(((rt0.c0)+(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (IFNULL(CASE WHEN vt0.c0 THEN vt0.c0 ELSE '(' END, ((rt0.c2) IS FALSE))) ORDER BY (rt0.c1 IN ()) DESC, json_array_length(((rt0.c0)+(rt0.c0))) DESC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE))-(NULL))) ORDER BY ((rt0.c2)AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))-(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE))-(NULL))) ORDER BY ((rt0.c2)AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))-(NULL))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) IS FALSE))-(NULL))) ORDER BY ((rt0.c2)AND(rt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE NOCASE);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN (vt0.c0)))))AND(TRIM(DISTINCT vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((vt0.c0)>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN (vt0.c0)))))AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((vt0.c0)>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN (vt0.c0)))))AND(TRIM(DISTINCT vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((vt0.c0)>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN (vt0.c0)))))AND(TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((vt0.c0)>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN (vt0.c0)))))AND(TRIM(DISTINCT vt0.c0)))) ORDER BY (+ (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC, (~ ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC, ((vt0.c0)>(CAST(vt0.c0 AS BLOB))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST('!<' AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), vt0.c0))), ((((('188607573', vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))) IS TRUE)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))IS NOT(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST('!<' AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), vt0.c0))), ((((('188607573', vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))) IS TRUE)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))IS NOT(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST('!<' AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), vt0.c0))), ((((('188607573', vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))) IS TRUE)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))IS NOT(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST('!<' AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), vt0.c0))), ((((('188607573', vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))) IS TRUE)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))IS NOT(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR((+ (vt0.c0)))))AND(vt0.c0 COLLATE NOCASE))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CAST('!<' AS REAL), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (NOT (vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM, ((vt0.c0) BETWEEN (x'') AND (vt0.c0)), vt0.c0))), ((((('188607573', vt0.c0, vt0.c0))>=((x'', vt0.c0, vt0.c0)))) IS TRUE)  NULLS LAST, ((((vt0.c0)>=(vt0.c0)))IS NOT(json_array(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<((~ (rt0.c0)))) WHERE ((((- (rt0.c2)))||(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))||(NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<((~ (rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<((~ (rt0.c0)))) WHERE ((((- (rt0.c2)))||(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))||(NULL))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<((~ (rt0.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)))<((~ (rt0.c0)))) WHERE ((((- (rt0.c2)))||(NULL)));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CHAR(rt0.c1) THEN x'' WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) THEN TRIM(rt0.c0, vt0.c0) WHEN ((((rt0.c2)OR(NULL)))AND('>&gz鲦Pf愹㻌')) THEN ((rt0.c0) ISNULL) WHEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c0)||(rt0.c0)) END) ORDER BY ((MAX(vt0.c0, vt0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHAR(rt0.c1) THEN x'' WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) THEN TRIM(rt0.c0, vt0.c0) WHEN ((((rt0.c2)OR(NULL)))AND('>&gz鲦Pf愹㻌')) THEN ((rt0.c0) ISNULL) WHEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c0)||(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((MAX(vt0.c0, vt0.c0)) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CHAR(rt0.c1) THEN x'' WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) THEN TRIM(rt0.c0, vt0.c0) WHEN ((((rt0.c2)OR(NULL)))AND('>&gz鲦Pf愹㻌')) THEN ((rt0.c0) ISNULL) WHEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c0)||(rt0.c0)) END) ORDER BY ((MAX(vt0.c0, vt0.c0)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHAR(rt0.c1) THEN x'' WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) THEN TRIM(rt0.c0, vt0.c0) WHEN ((((rt0.c2)OR(NULL)))AND('>&gz鲦Pf愹㻌')) THEN ((rt0.c0) ISNULL) WHEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c0)||(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((MAX(vt0.c0, vt0.c0)) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN CHAR(rt0.c1) THEN x'' WHEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) THEN TRIM(rt0.c0, vt0.c0) WHEN ((((rt0.c2)OR(NULL)))AND('>&gz鲦Pf愹㻌')) THEN ((rt0.c0) ISNULL) WHEN (((rt0.c2, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, vt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1))) THEN rt0.c0 COLLATE BINARY WHEN ((((rt0.c1)AND(vt0.c0)))AND(rt0.c0)) THEN ((rt0.c0)||(rt0.c0)) END) ORDER BY ((MAX(vt0.c0, vt0.c0)) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2)/(rt0.c0)) THEN TRIM(DISTINCT x'5d7f') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2)/(rt0.c0)) THEN TRIM(DISTINCT x'5d7f') END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2)/(rt0.c0)) THEN TRIM(DISTINCT x'5d7f') END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2)/(rt0.c0)) THEN TRIM(DISTINCT x'5d7f') END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((rt0.c2)/(rt0.c0)) THEN TRIM(DISTINCT x'5d7f') END);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1) ISNULL) IN ((+ (rt0.c2)))) WHERE (rt0.c1) ORDER BY (((((rt0.c0 IN (vt0.c0, rt0.c2)))AND(((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1) ISNULL) IN ((+ (rt0.c2)))) ORDER BY (((((rt0.c0 IN (vt0.c0, rt0.c2)))AND(((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1) ISNULL) IN ((+ (rt0.c2)))) WHERE (rt0.c1) ORDER BY (((((rt0.c0 IN (vt0.c0, rt0.c2)))AND(((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((rt0.c1) ISNULL) IN ((+ (rt0.c2)))) ORDER BY (((((rt0.c0 IN (vt0.c0, rt0.c2)))AND(((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt0 ON (((rt0.c1) ISNULL) IN ((+ (rt0.c2)))) WHERE (rt0.c1) ORDER BY (((((rt0.c0 IN (vt0.c0, rt0.c2)))AND(((((rt0.c1)AND(vt0.c0)))AND(rt0.c1)))))OR(((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c1))<>((rt0.c0))) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))+((NOT ('X|H')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))<>((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)GLOB(rt0.c2)))+((NOT ('X|H')))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c1))<>((rt0.c0))) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))+((NOT ('X|H')))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1))<>((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0)GLOB(rt0.c2)))+((NOT ('X|H')))) DESC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((((rt0.c1))<>((rt0.c0))) AS BLOB)) ORDER BY ((((rt0.c0)GLOB(rt0.c2)))+((NOT ('X|H')))) DESC;
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<>((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (0.6927988861757426))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))!=((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (0.6927988861757426))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<>((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (0.6927988861757426))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)IS(rt0.c0))))!=((((vt0.c0)GLOB(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (0.6927988861757426))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))));
SELECT * FROM vt0, rt0 WHERE ((((((rt0.c0)IS(rt0.c0))))<>((((vt0.c0)GLOB(rt0.c0)))))) ORDER BY ((((rt0.c2) BETWEEN (vt0.c0) AND (0.6927988861757426))) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, (- (rt0.c2)), ''))<=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, (- (rt0.c2)), ''))<=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, (- (rt0.c2)), ''))<=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT (((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, (- (rt0.c2)), ''))<=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 END, (- (rt0.c2)), ''))<=((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)), (rt0.c2 IN ()), ((rt0.c2) IS TRUE)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, '-1170883398')) BETWEEN ((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, x'', rt0.c2, rt0.c1))))<=((~ (rt0.c1)))) WHERE (((rt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, '-1170883398')) BETWEEN ((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, x'', rt0.c2, rt0.c1))))<=((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, '-1170883398')) BETWEEN ((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, x'', rt0.c2, rt0.c1))))<=((~ (rt0.c1)))) WHERE (((rt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, '-1170883398')) BETWEEN ((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, x'', rt0.c2, rt0.c1))))<=((~ (rt0.c1)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON (((((rt0.c1, rt0.c0, rt0.c1, rt0.c0, '-1170883398')) BETWEEN ((rt0.c0, rt0.c1, vt0.c0, rt0.c1, rt0.c1)) AND ((vt0.c0, rt0.c2, x'', rt0.c2, rt0.c1))))<=((~ (rt0.c1)))) WHERE (((rt0.c0 COLLATE BINARY)IS(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END)));
SELECT * FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE RTRIM) ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE RTRIM) ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)==(vt0.c0)) COLLATE RTRIM) ORDER BY ((- (vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((x''))>=((rt0.c1))) IN (rt0.c0)) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN ('430584966') AND (rt0.c2))))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)IS(rt0.c0)))OR(SQLITE_SOURCE_ID()))  NULLS FIRST, CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN ('430584966') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((x''))>=((rt0.c1))) IN (rt0.c0)) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)IS(rt0.c0)))OR(SQLITE_SOURCE_ID()))  NULLS FIRST, CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((x''))>=((rt0.c1))) IN (rt0.c0)) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN ('430584966') AND (rt0.c2))))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)IS(rt0.c0)))OR(SQLITE_SOURCE_ID()))  NULLS FIRST, CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN ('430584966') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((x''))>=((rt0.c1))) IN (rt0.c0)) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)IS(rt0.c0)))OR(SQLITE_SOURCE_ID()))  NULLS FIRST, CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((x''))>=((rt0.c1))) IN (rt0.c0)) WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))+(((rt0.c0) NOT BETWEEN ('430584966') AND (rt0.c2))))) ORDER BY x'' ASC  NULLS LAST, ((((vt0.c0)IS(rt0.c0)))OR(SQLITE_SOURCE_ID()))  NULLS FIRST, CASE CAST(rt0.c1 AS INTEGER)  WHEN rt0.c2 COLLATE RTRIM THEN CAST(rt0.c2 AS INTEGER) END  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((UNLIKELY(rt0.c0))OR(((rt0.c0) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(json(vt0.c0))))OR((((rt0.c1, vt0.c0, 1.39890644E8, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2, NULL)) AND ((rt0.c1, rt0.c1, vt0.c0, rt0.c2, 0.4503599570898883, rt0.c0, vt0.c0))))) WHERE (((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT ((((((((('1443831865')OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))IS(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((UNLIKELY(rt0.c0))OR(((rt0.c0) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(json(vt0.c0))))OR((((rt0.c1, vt0.c0, 1.39890644E8, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2, NULL)) AND ((rt0.c1, rt0.c1, vt0.c0, rt0.c2, 0.4503599570898883, rt0.c0, vt0.c0))))) ORDER BY (NOT ((((((((('1443831865')OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((UNLIKELY(rt0.c0))OR(((rt0.c0) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(json(vt0.c0))))OR((((rt0.c1, vt0.c0, 1.39890644E8, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2, NULL)) AND ((rt0.c1, rt0.c1, vt0.c0, rt0.c2, 0.4503599570898883, rt0.c0, vt0.c0))))) WHERE (((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT ((((((((('1443831865')OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))IS(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((((((UNLIKELY(rt0.c0))OR(((rt0.c0) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(json(vt0.c0))))OR((((rt0.c1, vt0.c0, 1.39890644E8, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2, NULL)) AND ((rt0.c1, rt0.c1, vt0.c0, rt0.c2, 0.4503599570898883, rt0.c0, vt0.c0))))) ORDER BY (NOT ((((((((('1443831865')OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON ((((((((UNLIKELY(rt0.c0))OR(((rt0.c0) NOTNULL))))OR(rt0.c1 COLLATE NOCASE)))AND(json(vt0.c0))))OR((((rt0.c1, vt0.c0, 1.39890644E8, rt0.c0, rt0.c2, vt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2, rt0.c0, rt0.c2, rt0.c2, NULL)) AND ((rt0.c1, rt0.c1, vt0.c0, rt0.c2, 0.4503599570898883, rt0.c0, vt0.c0))))) WHERE (((((((rt0.c1)AND(rt0.c2)))OR(vt0.c0)))IS(rt0.c0 COLLATE RTRIM))) ORDER BY (NOT ((((((((('1443831865')OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
