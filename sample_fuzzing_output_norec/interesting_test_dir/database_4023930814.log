-- Time: 2024/06/09 06:58:47
-- Database: database14
-- Database version: 3.40.0
-- seed value: 4023930814
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, notindexed=c0, languageid="lid", compress=likely, uncompress=likely); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt0 SET (lid)=('15395320'); -- 1ms;
UPDATE OR IGNORE vt0 SET lid=1.539532E7, c0=0Xeae9f8, lid=-1069928176; -- 4ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 273134082); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 871059193);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-850694197,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1666801168); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
PRAGMA integrity_check; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '44819'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1731241594); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9833'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 658641601); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('[') WHERE vt0.c0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1442462187,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2084601397,2');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '22134'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
ANALYZE; -- 7ms;
ROLLBACK TRANSACTION; -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 6ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (lid)=(NULL) WHERE (+ (LIKELIHOOD(vt0.c0, 0.5194263275804668))); -- 0ms;
UPDATE OR IGNORE vt0 SET lid=x'' WHERE ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.lid)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0.2910980594065329)) BETWEEN ((-8.50694197E8)) AND ((x''))))AND(CAST(NULL AS REAL))))AND((((('871059193')AND('138570391')))OR(0.5643647933176659)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1069928176 sz=1179859888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2032763987 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1810244476 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1826437025 unordered noskipscan'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE ((((x'36514956')%(0x46533bb0))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1742691535'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=352740966 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-522184370'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2016089672 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1968881247 0 sz=-2032763987'); -- 3ms;
DELETE FROM sqlite_stat1 WHERE ((0.5897118997929022 COLLATE RTRIM)!=((('') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=486411287 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.955621689820486 AS INTEGER)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1891313007'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1891313007')|(0.7809064369940821)))!=(((0.17647268146932849)<(0.955621689820486)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2086820117 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.2900822990727713)-(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((-2008056804) NOT BETWEEN (x'') AND (-2032763987))))<=((CAST(NULL AS INTEGER)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-850694197'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1451921734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (NULL)))OR(((-331653496)>=('-619905874')))))OR(TRIM(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1270489642 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-2008056804'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1112216377 sz=1933253810 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1112216377 THEN NULL ELSE x'' END) BETWEEN (CASE WHEN x'03a6' THEN x'cb73' ELSE '1891313007' END) AND (0X4223577a)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('FALSE')OR(x'fb06')))AND('-1112322897'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '904533866 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-975841137 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4879819813243521)||(x'')), ((-1415434267)LIKE(0.5643647933176659)), ((((0Xffffffff9820a331)AND(792657291)))OR('2086820117'))))>((('GT\n夕SX]O' IN ()), ((NULL)AND(x'')), UPPER(DISTINCT '-289275298')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-619905874')/('q(臋#<>')), ((0.8260044408705272) IS FALSE), CAST(x'' AS NUMERIC)))<=((((1.539532E7)+(0.5158968902355137)), ((x'')<<(0Xeae9f8)), PRINTF('', 'HA&CqwꌱO', '-1347516240', 0.9251758646864696, '950785474')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3289371355356785) NOT NULL)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0x1cfe0c17)&(0.776410868406596)))OR(((x'') NOT BETWEEN (0Xffffffff884f7c1c) AND (0.5158968902355137)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1933253810 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1298986598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-274607075 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2032763987 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('-331653496')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1730053502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '950785474 sz=1730053502'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.783007398477515 AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-327319421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(UPPER(DISTINCT 'O|y') AS BLOB); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'085c') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1478358158 COLLATE BINARY) BETWEEN ((+ (1048110565))) AND (((0.2808278895703654) BETWEEN ('MNaNV') AND (0.2195451865704765)))); -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-331653496' THEN CAST('-2084601397' AS BLOB) ELSE ((NULL)IS(0xeae9f8)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '673891764 sz=-553944223 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1467') NOT NULL))OR(0.6492442039658871 COLLATE NOCASE)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('QH}gq(')OR('0.2808278895703654')))AND(x'')) IN (((((NULL)AND(x'')))AND('1857054058')), CAST(x'' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1349259975)IS NOT(NULL)))OR(CAST(x'e956' AS REAL))))OR((('1857054058') BETWEEN (x'') AND (0Xffffffffae65e351)))))AND(SUBSTR(NULL, x'cfaf'))))OR(CASE NULL  WHEN 0Xffffffffae65e351 THEN x'f68e' ELSE '-1112322897' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1109612410 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)/(0.9139623294294085)))IS(('-478813953' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'09c3', NULL, 0.17673900706124146)) NOT BETWEEN ((NULL, 1.93325381E9, x'16ac')) AND ((x'6ee6', x'', NULL))))OR(0Xffffffffd205bb38 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-327319421 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-771376328 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('')>=(NULL))  WHEN ((0X568a9146) BETWEEN (x'') AND ('-2008056804')) THEN (('~')*(x'')) ELSE ((((x'a3aa')OR(1.048110565E9)))AND(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((-121181373)OR(x'')))AND('SPyd''')))GLOB(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (NULL) AND (NULL))) BETWEEN (((((NULL)AND(x'34d5d343')))OR(1.857054058E9))) AND (CASE WHEN x'' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1699047060'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1347516240' IN ()), (0.7041556665898263 IN ()), -1415965280 COLLATE BINARY))<(((('1349259975') ISNULL), CAST('(W8U0oI' AS NUMERIC), CASE WHEN x'' THEN x'' ELSE 'Gt' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-522184370'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '138570391 sz=-1027179173'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-650630868'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1590413464 sz=-1878617702'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.17647268146932849 AS TEXT)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=950785474 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-45238257 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=1721934323'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.021623098043387357) IS TRUE))>=((~ ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1451921734 sz=-1457087568 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CAST(x'' AS INTEGER)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=336157799 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5979cf46')&(0X46533bb0)))<(((x'')=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-850694197' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1196787911 sz=1509770007 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((1.826437025E9)OR('-392484610')))AND(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1886888586 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1270489642', 0.21744911254304078, x'')) NOT BETWEEN ((((NULL)GLOB('HS')), CAST(0.6674392129061276 AS BLOB), ((('哧Q7W]\nF2'))==((x''))))) AND (((((NULL))==((NULL))), CAST(1857054058 AS BLOB), 0.2824442055316998 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (9.50785474E8)))OR(CASE WHEN 898925744 THEN 0.6097386635159787 WHEN NULL THEN 0.8260044408705272 WHEN 0xffffffffbea38e35 THEN '}l' WHEN x'' THEN 'WU4' WHEN NULL THEN 0.8877430546359183 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1235609719 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-564181874 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('' IN ()))OR((('-1147957480') IS TRUE))))OR('Ry')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-199510886'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1763058447 -1742691535 sz=984001460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1857054058 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1478358158 1968881247 sz=871059193 unordered'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1924029063'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1699047060')) BETWEEN ((HEX(NULL))) AND ((x'aa52' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1369172146 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR((NULL IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1098893145'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1721934323 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1929709496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1339174817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1763058447 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-987172030 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.5897118997929022)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '-688590528'  WHEN NULL THEN -821957800 ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1436072311 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CAST(NULL AS INTEGER), ((0.27046973170254585)+(0.1851336028123649))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=792657291 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1457087568 sz=-2008056804 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8877430546359183 COLLATE BINARY)<<(CASE WHEN x'' THEN x'' ELSE 1538098101 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1894616029', 0.7779967796444353, x'')) BETWEEN (('', NULL, 434434989)) AND ((NULL, x'', x'')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1074601785'); -- 5ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN x'1530' WHEN x'' THEN x'f8ff' WHEN NULL THEN x'' END)OR(CASE WHEN '-975841137' THEN x'537d' END)))AND(((NULL) BETWEEN (NULL) AND (-2.084601397E9)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-274607075 sz=-688590528 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1992506190 993854330 sz=253009966 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1147957480 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1369172146 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.43719934138292527, x'', '')) BETWEEN ((NULL COLLATE NOCASE, 0.3143938967594925 COLLATE RTRIM, (((('1222058456')OR(0.18397814518414535)))OR(x'af4d')))) AND ((CAST('晦ACQ~I/' AS REAL), CAST(0Xffffffff86d67bad AS INTEGER), ((NULL)IS NOT(-1.878617702E9))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(UNLIKELY(DISTINCT x'dcd8')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(TRIM(DISTINCT NULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-98321611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f8eb')) NOT BETWEEN ((((x'')<>(0.035359639277714794)))) AND ((((-1.41596528E9)>(''))))); -- 4ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-232332172 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=984001460 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1064268004'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1570853589'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN ('0.6492442039658871') AND (NULL)))LIKE((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.42741538863508166; -- 0ms;
DELETE FROM sqlite_stat1; -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('(7')AND(0.8260044408705272)))OR(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'ab46')) BETWEEN ((1339174817)) AND ((0.0028982719717615124))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1412874755 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1040577793 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-627276365 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffe9f166b8)OR(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1146152503'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.7500580997178367 COLLATE BINARY)AND((+ ('XPF')))))AND(((0x33eb4ef9) ISNULL))))AND(LOWER('*.4? Y)'))))OR(((((0.16777040544052746)OR(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffff9659eabb COLLATE RTRIM)>((('904533866') BETWEEN ('e^''펳') AND ('V')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0.6393365086931114)==(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2084601397 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5897118997929022, NULL, 6.21204403E8)) BETWEEN (((- (NULL)), x'', x'')) AND ((highlight(NULL, NULL, 'r', x''), x'' COLLATE BINARY, NULL COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.040577793E9 IN (x'de65')))>>(CASE NULL  WHEN 0.5643647933176659 THEN x'' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-104485571 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-619905874', NULL, '<]RP%ﺚ&')) BETWEEN ((CAST(1083179886 AS TEXT), CASE WHEN x'' THEN -8.219578E8 END, (((('0.776410868406596')AND(x'')))OR(0x55c6618)))) AND ((((NULL) IS TRUE), (x'' IN ()), '898925744' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1369172146 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1842035408 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((- (0.957440275666146)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))-(((0.4697161367469447) BETWEEN (NULL) AND (1740544675)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('~0(*[m\nQ*') IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('[')LIKE('0.021623098043387357')) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN (((0xffffffff9afe1e47)) BETWEEN ((x'')) AND ((0.91902644435861))) THEN ((x'') BETWEEN (-1763058447) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1458789953 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-951437724'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1357936611'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('Qዘ᥎^')AND('1074601785')))OR('-1085193037')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2069296879 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-82354137 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1163444861 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1698642046 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(((NULL) BETWEEN ('8T') AND (''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) ISNULL)  WHEN (('0.17647268146932849') NOT BETWEEN ('M0') AND (0.6418095602808559)) THEN ((0.9454646705300833) BETWEEN ('x3') AND (NULL)) WHEN ((x'') NOT BETWEEN ('-370055496') AND (NULL)) THEN (NOT ('')) WHEN ((x'') NOTNULL) THEN ((NULL) IS TRUE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-384130360'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-553944223'  WHEN NULL THEN x'' WHEN x'ab67' THEN x'' WHEN 0.830008313571033 THEN '1116550421' ELSE NULL END) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|(NULL))) NOT BETWEEN (CAST('D+e#jh' AS REAL)) AND (((((x'f162')AND(x'')))OR('1968881247')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1924029063 0 0 sz=830837645 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-232332172 sz=-1810244476'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('z'))<>((CAST(3.6902477075861917E-4 AS TEXT)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<((-1590413464))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1763058447 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1890293674'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -994677981 sz=486411287 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-2008056804 IN (NULL)))>>(((NULL)-(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(0.1872434038139298)))AND('')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1063520234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=306130079 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('%%') NOT BETWEEN (NULL) AND ('950785474')))AND(LOWER('516428490'))))OR((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1293329463 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=27803452 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -113771942 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7809064369940821 AS INTEGER))OR(CASE NULL  WHEN NULL THEN 0.6427063110679074 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(json_patch(x'', x'4e46')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '352740966 sz=1043902420'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1098893145')))>=(CAST('bVOx1RA' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=645526863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((x'')AND(NULL)))OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((+ (x'')), (((0.7834241021799916))<=(('!Gdmi'))), CASE x''  WHEN NULL THEN '' WHEN '-1421165046' THEN 0Xffffffff86d67bad WHEN x'' THEN NULL WHEN '0.2808278895703654' THEN '-771376328' WHEN 0.9139623294294085 THEN '396220710' END))=(((('-1347516240') BETWEEN ('1956368371') AND (NULL)), ((('^匂 '))<=((NULL))), x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('', 0.8310827550049563)) BETWEEN (((0.3649881009907793)<>(0.27036141580793394))) AND (CAST(x'ae97' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')GLOB(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-987172030 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=905465478 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN 0.7463379693173495 ELSE x'' END) NOT BETWEEN (CAST(x'' AS REAL)) AND (json_patch(88699707, ''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '877051637 2 sz=1084970870 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '192203182 -428142026 sz=-1630069940'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.9454646705300833' AS REAL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2045971741 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=1992506190 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.955621689820486)LIKE(-564181874))  WHEN (((('''Z')AND(0.11368418181978801)))AND(NULL)) THEN 1.048110565E9 ELSE '-478813953' END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=901579439 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1919156532 sz=-522184370 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=293774'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1810244476'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-816237915 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.783007398477515) IS FALSE)  WHEN (- (737844540)) THEN ((NULL) IS TRUE) ELSE CASE WHEN '''s29⟻m' THEN '8T' WHEN x'' THEN x'88b2' WHEN -1415965280 THEN NULL ELSE x'b0af' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1222058456 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1835983045 1179859888 sz=-331653496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1401320864 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1150218989'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (0.02533302720118258))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')OR(((NULL)|(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=902516770 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('950785474')AND(-237706161)))AND('1063483524')))+(((0.906259236113464) ISNULL))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((('SPyd''')) NOT BETWEEN ((CASE WHEN 0xffffffff9820a331 THEN 0.8844230879112984 WHEN '-573796006' THEN x'' WHEN 0.4411165342216796 THEN -445229600 WHEN x'e81a' THEN '' WHEN -1.878617702E9 THEN NULL ELSE 0.29686362720467707 END)) AND ((IFNULL('', NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=44545704 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('932701247' COLLATE NOCASE)OR((('1601747356') IS TRUE))))OR(x'' COLLATE BINARY)))OR(((x'') BETWEEN (NULL) AND (NULL)))))OR(CAST('-379038743' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('[逦' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '209165131 sz=-297583270 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-274607075 sz=1694801639 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1311252267 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5158968902355137 AS REAL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-493152876 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1811179546 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))>(UNLIKELY(DISTINCT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-315499360 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1371993586'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1173298098 sz=-1978575456 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-327319421 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1235609719 1120360185 sz=-859102845'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-63974564 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1590413464 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'f964')>(NULL))) NOT BETWEEN (CAST(x'' AS TEXT)) AND (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.5093725070908172))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=990738160 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-482033659 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-240113496 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff9820a331))>((NULL)))))=(((('-987172030')>(0.9767760618063687))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X4223577a; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1355217119 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((('bvox1ra')AND(NULL)))AND('?Y')))<=((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('1891313007')==('-1096577483')))AND((+ ('')))))AND(((((x'')AND('285485278')))OR(0.3289371355356785)))))OR(((0.10949171829723714) NOT BETWEEN ('47308658') AND (x'980d')))))AND(COALESCE(0.7779967796444353, 0xfffffffffd4db80f))); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((+ ('-1994810366')))OR(((((((((1.179859888E9)OR(0.3991145216457578)))AND(x'')))AND(0.41463816135415255)))OR(x'')))))OR('瘼[Jq' COLLATE BINARY)))AND(x'' COLLATE RTRIM)))OR((((NULL))>=((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-818957046 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'b8ca' IN ('', '416561611')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0xffffffffc0908f1c  WHEN 'Mꅀ' THEN NULL ELSE 928472466 END)AND((+ (NULL)))))OR(((0x506c12c7) NOT BETWEEN (x'') AND (x'a086')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1903108508 sz=-392484610 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-45238257 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=815963665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(336157799 AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(LIKELY(-525741672), NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2111831749 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-279406210'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2016089672 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (NULL)))GLOB((- ('0.9251758646864696')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1865621035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=14898407'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2107132041'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2106012937'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-966275979 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3768362384834769)AND(NULL)))OR('-303302264')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1730053502'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '' COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(x'' AS BLOB) THEN '1142009857' COLLATE BINARY WHEN (((((((((((('-358442766')OR(0x400d1f39)))OR(x'5292')))OR(-1570946388)))OR(-5.2218437E8)))AND(x'')))OR('-289275298')) THEN (('') BETWEEN (NULL) AND (0.11368418181978801)) WHEN CASE WHEN 0X417fc759 THEN NULL ELSE NULL END THEN ((NULL) IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.28821985811059125) BETWEEN ('6') AND (x'')))LIKE(((0.1851336028123649) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT '0.3143938967594925', NULL))OR(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-398373117 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.6393365086931114') NOT BETWEEN (-1069928176) AND ('-98321611'))) BETWEEN (CAST(x'' AS INTEGER)) AND (CASE ''  WHEN x'' THEN -1.99510886E8 WHEN NULL THEN 0.5378933909311738 WHEN '591377330' THEN -3.70055496E8 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=475820370 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=690390166 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '435828223 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=984001460'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1928211460 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=984001460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1467848754 sz=-1570852759 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-338713582 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '497371661 sz=1721934323 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=673891764 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1281303484') BETWEEN (NULL) AND (x'bb1d')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.035359639277714794'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-650630868 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1705082125 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1049015794'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-347564841 -619905874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=154210354'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((628326308) IS FALSE)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1504943790 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-821957800 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (0.4911161193320621)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-559770432 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.772492101E9)/((('<7*Jg9|}') NOT BETWEEN (0.11191534103761469) AND (-1442462187)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '14898407 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '621204403 709906026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN -1.069928176E9 THEN x'e4cb' WHEN '15395320' THEN '' WHEN 0.12628223387687398 THEN '0.7809064369940821' END)AND((~ (0X7d8eae50)))))AND((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('', -265277007, x'418c', 0.8600213049819132, NULL)) BETWEEN ((-1.270489642E9, '1826437025', 0.9791796472404587, x'b9f4', x'd813')) AND ((0.18326686355008792, '', x'', x'', x'')))  WHEN (- (1968881247)) THEN IFNULL(DISTINCT '-2084601397', '-1853078176') WHEN ((NULL)&(0.6998407762379281)) THEN (((x'', x'', x'961b')) NOT BETWEEN ((NULL, NULL, 'QH}gq(')) AND ((NULL, '5*', NULL))) WHEN (~ (-850694197)) THEN 0.5643647933176659 COLLATE NOCASE ELSE ((NULL) NOT BETWEEN (0x46ce8e62) AND ('-1415434267')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1886888586 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1027179173') BETWEEN (((((((((NULL)AND(x'ae53')))OR('-1457087568')))OR(NULL)))OR(x'd6fc'))) AND (((0.7253245260397199) BETWEEN (0.3356580600478155) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) IS FALSE)))<((CAST(NULL AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1027179173 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -2032763987 sz=-255184247 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1810764323 sz=1933253810 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-589507196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1081615015 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS(x''))) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN '4' THEN '-1092793593' ELSE NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1445029406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=269272418 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 sz=980835288 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1280835404 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-440034355 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-771376328 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1763058447'); -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=138570391'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-370055496 0 sz=-1436072311 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4f97')) BETWEEN ((x'')) AND (((~ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1053144208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE BINARY IN (CHAR(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'aT0 '; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2016089672 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1081173297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1112322897 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1347516240'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((1.478358158E9)) BETWEEN (('簜xG' COLLATE BINARY)) AND ((CAST(NULL AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-420216495 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((- (0.2064908574710954)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)!=(1604719048)))IS NOT(((('1e500', 'z', x'')) NOT BETWEEN ((NULL, '14898407', 0x5192ea47)) AND ((NULL, 0.722307364396151, x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=622434009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.3356580600478155)))<=((x'' IN (0.5425804964191773, x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '367240295 636966989 sz=-316435250 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-370055496 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=352740966 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1853513326'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') BETWEEN ('-1457087568') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-289275298 sz=1048110565 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS FALSE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('G'))=(('721920112')))  WHEN ((x'') NOT BETWEEN (x'') AND ('')) THEN ((0.882007794831546) BETWEEN (0.5284445327946745) AND ('\rc&h+O#E')) WHEN (((''))<>((1328414655))) THEN CASE 'IB'  WHEN '-299285328' THEN 0.2865151271323576 WHEN 184076505 THEN x'' WHEN 507417594 THEN 0.9705743887272218 WHEN NULL THEN 'Jqv' WHEN 'PQ\h' THEN x'' ELSE NULL END WHEN (NULL IN ()) THEN ((NULL)>=(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1577169862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'1a33' AS TEXT)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 9ms;
DELETE FROM sqlite_stat1 WHERE ((('	z3[Zf' IN (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)&(x'')))>((~ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -619905874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1147957480 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-331653496 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1772492101 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-326667238'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.1340834142539542; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8391516273400967)OR('-1415434267' COLLATE RTRIM)))OR(((NULL)%(0.9846203784970781)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1422539286 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1315293039 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=884920450'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-887760147'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2044127008 -1050654457 sz=-2008056804 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('xN1u0En') NOT BETWEEN ('h쫭jL5ui낀') AND ('1538098101')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6215942944933368) BETWEEN ('0.3649881009907793') AND ('琣Bv(\,dX'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '96203278 -1146147843 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT -1.146152503E9, '-2145789016') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LENGTH(CAST('' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE QUOTE(x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-91305291'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.11930640866749864 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.4241543847726389))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9812583976847665)||(0.6516721642352075)) THEN CAST('pq\h' AS INTEGER) ELSE CAST('' AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1453010651 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(0.9446812361026274) IN (TYPEOF(NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '673891764' THEN 0.9261710215954484 ELSE x'' END)<=('-295970752' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-138951807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1221650426 sz=-2096170130'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1104972670'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-159947607 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-317189949'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-337963861 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-75077999 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LIKELIHOOD(x'e9e920cd', 0.8922939587468511) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1810244476 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'067c') BETWEEN (x'2849') AND ('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-392484610 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.11191534103761469 IN (x'', '-1878617702'))  WHEN ((NULL)AND(NULL)) THEN (((NULL))!=((NULL))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2086820117 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-987429210 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-698908435 sz=551543430'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1548819702 201969936 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1654180090 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.3782207330253762) NOT BETWEEN ('\r8') AND (NULL)))AND(CAST('1349259975' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((((441392671)) NOT BETWEEN ((NULL)) AND ((0.5423036661520891))), CAST(0.6081085989942749 AS INTEGER), 'K'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json_quote(0.4542523005831244) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1538098101 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-975841137 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9180062284091555; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=792657291'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1262017661'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3781739248649054)LIKE('-407733440')) IN ((~ (NULL)), (- (0.5668105739507997)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1346925135'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'8be4'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL))>=((0.7926572277844698))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.570853589E9) BETWEEN ((NOT (0.9706358155118092))) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2051518999'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(TOTAL_CHANGES() AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1369172146'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('0.9139623294294085')) BETWEEN ((x'')) AND (('JQV'))))&((('0.41463816135415255') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (1112216377)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-460334931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'9df0') ISNULL), NULL, ((('1904-1453:1460-kqdG', '0.9251758646864696', 0Xfffffffffe0b39c9)) NOT BETWEEN ((0.21047888088028377, '哧Q7W]aF2', NULL)) AND (('[', x'', x'')))))<>((CASE WHEN NULL THEN x'8a3c' ELSE '0.11191534103761469' END, (((1924029063, x'', 0.008151803624697473)) BETWEEN ((NULL, NULL, 'XA*]k+\r')) AND ((9.8400146E8, 'J', 0.6300082334917497))), (('157531553')OR(0.41643016598720584))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -1.590413464E9; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-599627991 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-478813953 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1198796566 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL, 'FD', 1.074601785E9))>=((NULL, x'', '-1590413464'))))AND(((((((((-1874356279)AND(-3.9248461E8)))OR(NULL)))OR(2086820117)))AND(x'6400c1cf')))))AND(CASE NULL  WHEN 0x57987ede THEN x'' END)))OR(TRIM(DISTINCT NULL, x''))))OR(((0X5bad83b5) NOT BETWEEN (NULL) AND (-1146152503)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-1.742691535E9)))*((NOT (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=1137563470 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1112216377 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-238805371 sz=1222058456 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=207322139 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))==((0x109c4a)))) NOT BETWEEN (((NULL)||(NULL))) AND (UNLIKELY(0Xffffffffae65e351))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1078876215'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-495534875'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.2910980594065329 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '882221858 sz=-55264370'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'7aa8')) NOT BETWEEN ((((x'')+(0xfffffffff4095bc5)))) AND ((((x'') ISNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-327319421 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-119673499 sz=-1569129085 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('253009966')) BETWEEN ((x'')) AND ((0.33708266246324226))) IN (((-1.457087568E9) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.8432827737594595 COLLATE RTRIM))<((NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1116109998 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1450972227 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=514151469 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (IFNULL(DISTINCT 0.15467040040459357, 0.1983099633989912))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1786888944 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS INTEGER) IN ((NULL IN ('')), ((NULL) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-803604927 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((-5.2218437E8)) BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('3k') BETWEEN (json_valid('0.[9?8')) AND (((x'34e7')>=('''s29⟻m')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(((((((((((((0.5897118997929022)OR(-3.9248461E8)))OR('-1e500')))AND(0.7907546517526504)))OR(x'')))AND(NULL)))AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)OR(NULL)))AND(NULL)) THEN (('-1064268004')%('㘕	0u6? ')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1069928176 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=621204403 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1502363558 1517441083 sz=-1742691535 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.69904706E9 COLLATE NOCASE AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('e/')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1886888586 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1074601785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.9706358155118092') NOTNULL) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1349259975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=993854330 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-770031001 -1732445376 sz=808245577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2114042391 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1361600223 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1772492101 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=450378844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-720389817'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'', NULL, NULL))<=((0.5142309036978414, '㝟n', 0.09729360972021572))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1097396225 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=913829085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-45238257 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1253784957 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=871059193 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))LIKE((((0.4004107014410848)) NOT BETWEEN ((0Xffffffff82e9d4fd)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 762740667 sz=1118844400 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'', 0.024131186780627978, '')) NOT BETWEEN ((0x4239552e, 1205485246, 520749843)) AND ((x'219d', NULL, '-771376328'))) IN (((('266173517'))!=((0.21744911254304078))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-227034941 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT '') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('Jqv')|(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1490859026 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=61227783 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.5580986316941735)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((NULL IN ()))) AND (((((x'd9f6'))>((x'd7c7')))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1023413653 sz=1298986598 noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-376340882')AND(x'')))AND(0.8200598942418091)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('+-U-ʖ?p3' AS INTEGER))IS(((-90965552) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2108224294 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '621204403 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('팺닀_ru' COLLATE BINARY)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 17ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1478358158 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-688590528 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-394833940 unordered'); -- 7ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1235609719 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1147957480 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Xd') NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-934425321 0 sz=1857054058 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7356948385912434)) NOT BETWEEN (('-478813953' COLLATE RTRIM)) AND ((((((((((x'dc4b')OR('-734194365')))OR('*')))OR('876740401')))OR(-395872287))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)) BETWEEN (('-435829359')) AND ((0.6427063110679074))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.41694756464661376 AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x73de080a; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-323260762'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1674387726 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7d07'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('KO' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Ha' COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-534572629'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-619905874 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2024801885'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5641946704051037 COLLATE NOCASE AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.567145603754892) ISNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1991821196 sz=742823382'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-630468368 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=131781917 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'a845'  WHEN 3.6902477075861917E-4 THEN NULL WHEN x'' THEN NULL WHEN x'622a' THEN -430802394 END) BETWEEN (x'') AND (CASE -2.008056804E9  WHEN NULL THEN NULL WHEN x'11977eb9' THEN x'' WHEN '' THEN 0.20770038251871692 WHEN NULL THEN NULL WHEN NULL THEN x'' ELSE '㠽D+U|\r┎D' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-594396108'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(x'3956' AS TEXT)  WHEN NULL THEN ((NULL)-('-1112322897')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((NULL)OR(x'')))OR('-1747091')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1146367739 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'zF9觔['; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1294836512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1120818940'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1441448778 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1891313007 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(((x'')<>(-1.457087568E9)), (0xffffffff8066f1ce IN (x'4130d5d5')), IFNULL('253009966', 1.339174817E9)); -- 0ms;
DELETE FROM sqlite_stat1; -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1285220777 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1878617702 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '' THEN '' END)|(((((-1.810244476E9)OR(x'')))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (TYPEOF(x'') IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1696053765 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1992506190'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=333825786'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1584589553'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffdb0cfcae)>>(0.10553123642925688)))==(NULL)); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1082195808 sz=-1627828810 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-850333646 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-289275298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA wal_autocheckpoint = 5542918103585197686; -- 0ms;
PRAGMA main.foreign_keys = true; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (NULL), (NULL), ('jᝪ'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 5ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52993'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'ec2f') WHERE ((((TYPEOF(vt0.lid))AND((vt0.lid IN (vt0.c0)))))AND(((vt0.lid) ISNULL))); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'', '0.9705743887272218'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.5313355323376627), ('1298986598'), (x''); -- 0ms;
UPDATE OR FAIL vt0 SET (lid)=('CK''庈6|衤b'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1721128159); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 4ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0xffffffffaba22fe5), (''), (0.8651553899545237), ('0.5897118997929022'), (x''), (x''), (NULL); -- 2ms;
ROLLBACK TRANSACTION; -- 6ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 TEXT ); -- 0ms;
PRAGMA main.threads = -3060607889844401335; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 7ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 15ms;
PRAGMA automatic_index; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt0 SET lid=x'3e42'; -- 17ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c0)=('0.3649881009907793', NULL); -- 0ms;
PRAGMA foreign_keys = false; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
CREATE INDEX i79 ON t0(((((c0 COLLATE RTRIM)AND(c0)))AND('')) COLLATE RTRIM); -- 0ms;
ROLLBACK TRANSACTION; -- 8ms;
DROP TABLE IF EXISTS t0; -- 0ms;
PRAGMA soft_heap_limit = 3491925666674394596; -- 0ms;
UPDATE vt0 SET (c0)=('Gc'); -- 17ms;
CREATE VIEW v0(c0, c1, c2, c3, c4) AS SELECT DISTINCT (((((vt0.c0, vt0.lid, vt0.lid)) BETWEEN ((vt0.c0, x'e324', vt0.c0)) AND ((vt0.lid, vt0.c0, vt0.lid))))<<(vt0.c0 COLLATE BINARY)), NULL, ((SQLITE_SOURCE_ID())||(AVG(-1.7976931348623157E308))), (NOT (COUNT(*))), (+ (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE ((((('545249980') NOT NULL)) ISNULL)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '10600'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('1109612410', 0.18326686355008792); -- 0ms;
INSERT OR ABORT INTO vt0(c0, lid) VALUES ('-1270489642', '-1870813728'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, lid) VALUES ('-552339765', NULL); -- 1ms;
REINDEX; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR ABORT INTO vt0(lid) VALUES ('1-5000001m'); -- 3ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
UPDATE OR FAIL vt0 SET (c0, lid)=('1730053502', NULL); -- 4ms;
UPDATE OR IGNORE vt0 SET (c0)=('1179859888') WHERE ((vt0.c0 COLLATE NOCASE)>(((NULL) NOT BETWEEN (NULL) AND (vt0.lid)))); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE CASE (+ (vt0.c0))  WHEN ((vt0.c0)>>(vt0.lid)) THEN (vt0.lid IN ()) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, x''); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (-1027179173, x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (NULL), (x''); -- 17ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 5ms;
INSERT INTO vt0(vt0) VALUES('merge=886601589,8');\n; -- 0ms;
UPDATE OR REPLACE vt0 SET lid='eL HSNW漹' WHERE ((((((vt0.c0)=(vt0.c0)))AND(((vt0.lid) NOT BETWEEN (vt0.c0) AND (NULL)))))AND(((vt0.c0)*(vt0.lid)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1 UNINDEXED); -- 0ms;
UPDATE vt1 SET c0='' WHERE ((((((vt1.c1)AND(1560180845)))OR(0.6674392129061276))) ISNULL); -- 0ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=89612350,2');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'a9f3')AND(x'')))OR(NULL)) AS REAL); -- 0ms;
DROP VIEW v0; -- 20ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE NULL; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 19ms;
UPDATE OR IGNORE vt0 SET (c0)=('-366317169'); -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt0.lid WHEN '' THEN vt0.lid WHEN vt0.lid THEN vt1.c0 ELSE x'' END) IS TRUE) WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt0.lid WHEN '' THEN vt0.lid WHEN vt0.lid THEN vt1.c0 ELSE x'' END) IS TRUE) ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt0.lid WHEN '' THEN vt0.lid WHEN vt0.lid THEN vt1.c0 ELSE x'' END) IS TRUE) WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt0.lid WHEN '' THEN vt0.lid WHEN vt0.lid THEN vt1.c0 ELSE x'' END) IS TRUE) ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt1.c1 THEN vt0.lid WHEN '' THEN vt0.lid WHEN vt0.lid THEN vt1.c0 ELSE x'' END) IS TRUE) WHERE ((NOT ((NOT (vt1.c1))))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND('')))AND(((NULL)<(rt0.c0))))) ORDER BY x'b6b7', x'' DESC  NULLS LAST, ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c2, rt0.c1, x'bc77')))))==(((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND('')))AND(((NULL)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'b6b7', x'' DESC  NULLS LAST, ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c2, rt0.c1, x'bc77')))))==(((rt0.c1 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND('')))AND(((NULL)<(rt0.c0))))) ORDER BY x'b6b7', x'' DESC  NULLS LAST, ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c2, rt0.c1, x'bc77')))))==(((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND('')))AND(((NULL)<(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY x'b6b7', x'' DESC  NULLS LAST, ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c2, rt0.c1, x'bc77')))))==(((rt0.c1 IN ())))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(((rt0.c2)LIKE(rt0.c0)))))OR(((rt0.c1) NOTNULL))))AND('')))AND(((NULL)<(rt0.c0))))) ORDER BY x'b6b7', x'' DESC  NULLS LAST, ((((((rt0.c0, rt0.c2, rt0.c0, rt0.c1, rt0.c2))>=((rt0.c0, rt0.c1, rt0.c2, rt0.c1, x'bc77')))))==(((rt0.c1 IN ())))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN ('0.5093725070908172') AND (vt1.c1)) WHEN UPPER(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN NULL ELSE (vt1.c1 IN ()) END) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN ('0.5093725070908172') AND (vt1.c1)) WHEN UPPER(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN NULL ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN ('0.5093725070908172') AND (vt1.c1)) WHEN UPPER(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN NULL ELSE (vt1.c1 IN ()) END) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN ('0.5093725070908172') AND (vt1.c1)) WHEN UPPER(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN NULL ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN (vt1.c0 IN ()) THEN ((vt1.c0) BETWEEN ('0.5093725070908172') AND (vt1.c1)) WHEN UPPER(vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) WHEN (vt1.c1 IN ()) THEN NULL ELSE (vt1.c1 IN ()) END) ORDER BY vt1.c1 ASC  NULLS LAST;
SELECT * FROM rt0, vt0, vt1 WHERE ('2043311717') ORDER BY ((((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST('-1750123627' AS BLOB)) AND (((0.2964919946855127) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) DESC, ((((((rt0.c0)LIKE(rt0.c2)))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(0.9767760618063687, 0.2981376288625821)));
SELECT SUM(count) FROM (SELECT (('2043311717') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST('-1750123627' AS BLOB)) AND (((0.2964919946855127) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) DESC, ((((((rt0.c0)LIKE(rt0.c2)))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(0.9767760618063687, 0.2981376288625821))));
SELECT * FROM rt0, vt0, vt1 WHERE ('2043311717') ORDER BY ((((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST('-1750123627' AS BLOB)) AND (((0.2964919946855127) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) DESC, ((((((rt0.c0)LIKE(rt0.c2)))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(0.9767760618063687, 0.2981376288625821)));
SELECT SUM(count) FROM (SELECT (('2043311717') IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST('-1750123627' AS BLOB)) AND (((0.2964919946855127) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) DESC, ((((((rt0.c0)LIKE(rt0.c2)))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(0.9767760618063687, 0.2981376288625821))));
SELECT * FROM rt0, vt0, vt1 WHERE ('2043311717') ORDER BY ((((vt0.lid) NOT BETWEEN (rt0.c1) AND (rt0.c0))) NOT BETWEEN (CAST('-1750123627' AS BLOB)) AND (((0.2964919946855127) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) DESC, ((((((rt0.c0)LIKE(rt0.c2)))OR((vt1.c0 IN ()))))OR(LIKELIHOOD(0.9767760618063687, 0.2981376288625821)));
SELECT * FROM rt0 WHERE (x'fd2b');
SELECT SUM(count) FROM (SELECT ALL ((x'fd2b') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'fd2b');
SELECT SUM(count) FROM (SELECT ALL ((x'fd2b') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'fd2b');
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0) IS FALSE)))) ORDER BY (UPPER(vt1.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (UPPER(vt1.c1) IN ()));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0) IS FALSE)))) ORDER BY (UPPER(vt1.c1) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (UPPER(vt1.c1) IN ()));
SELECT * FROM vt0, vt1 WHERE (((vt1.c0) NOT BETWEEN (NULL) AND (((vt0.c0) IS FALSE)))) ORDER BY (UPPER(vt1.c1) IN ());
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'2bad'))))<<(((0Xffffffffe2a088ed) IS FALSE)))) ORDER BY load_extension(x'') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'2bad'))))<<(((0Xffffffffe2a088ed) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY load_extension(x'') ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'2bad'))))<<(((0Xffffffffe2a088ed) IS FALSE)))) ORDER BY load_extension(x'') ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'2bad'))))<<(((0Xffffffffe2a088ed) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY load_extension(x'') ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((x'2bad'))))<<(((0Xffffffffe2a088ed) IS FALSE)))) ORDER BY load_extension(x'') ASC;
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))OR('' COLLATE RTRIM))) ORDER BY x'' DESC  NULLS FIRST, CASE ((((rt0.c0)OR(rt0.c1)))OR(0.957440275666146))  WHEN rt0.c1 THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (((rt0.c0))<>((rt0.c2))) ELSE ((rt0.c1)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))OR('' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST, CASE ((((rt0.c0)OR(rt0.c1)))OR(0.957440275666146))  WHEN rt0.c1 THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (((rt0.c0))<>((rt0.c2))) ELSE ((rt0.c1)AND(rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))OR('' COLLATE RTRIM))) ORDER BY x'' DESC  NULLS FIRST, CASE ((((rt0.c0)OR(rt0.c1)))OR(0.957440275666146))  WHEN rt0.c1 THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (((rt0.c0))<>((rt0.c2))) ELSE ((rt0.c1)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))OR('' COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS FIRST, CASE ((((rt0.c0)OR(rt0.c1)))OR(0.957440275666146))  WHEN rt0.c1 THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (((rt0.c0))<>((rt0.c2))) ELSE ((rt0.c1)AND(rt0.c0)) END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOTNULL))OR('' COLLATE RTRIM))) ORDER BY x'' DESC  NULLS FIRST, CASE ((((rt0.c0)OR(rt0.c1)))OR(0.957440275666146))  WHEN rt0.c1 THEN (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (((rt0.c0))<>((rt0.c2))) ELSE ((rt0.c1)AND(rt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END)+(((vt0.lid)<(vt0.lid))))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))|(ABS(0.9937488776400784))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END)+(((vt0.lid)<(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))|(ABS(0.9937488776400784))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END)+(((vt0.lid)<(vt0.lid))))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))|(ABS(0.9937488776400784))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END)+(((vt0.lid)<(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))|(ABS(0.9937488776400784))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt0.lid END)+(((vt0.lid)<(vt0.lid))))) ORDER BY (((((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))|(ABS(0.9937488776400784))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.lid)) AS REAL)) ORDER BY (((((NOT (vt0.lid)))OR((+ (vt0.c0)))))OR(vt0.lid)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.lid)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.lid)))OR((+ (vt0.c0)))))OR(vt0.lid)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.lid)) AS REAL)) ORDER BY (((((NOT (vt0.lid)))OR((+ (vt0.c0)))))OR(vt0.lid)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)+(vt0.lid)) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.lid)))OR((+ (vt0.c0)))))OR(vt0.lid)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)+(vt0.lid)) AS REAL)) ORDER BY (((((NOT (vt0.lid)))OR((+ (vt0.c0)))))OR(vt0.lid)) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((((rt0.c0)AND(vt0.lid)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN vt0.lid COLLATE NOCASE END DESC, LIKE(rt0.c2, rt0.c0, 'V') COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0)IS(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((((rt0.c0)AND(vt0.lid)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN vt0.lid COLLATE NOCASE END DESC, LIKE(rt0.c2, rt0.c0, 'V') COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0)IS(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((((rt0.c0)AND(vt0.lid)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN vt0.lid COLLATE NOCASE END DESC, LIKE(rt0.c2, rt0.c0, 'V') COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0)IS(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((((rt0.c0)AND(vt0.lid)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN vt0.lid COLLATE NOCASE END DESC, LIKE(rt0.c2, rt0.c0, 'V') COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0)IS(rt0.c0)))))  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((((((rt0.c0)AND(vt0.lid)))OR(rt0.c0)))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c1 AS INTEGER) WHEN (~ (rt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN CAST(rt0.c1 AS REAL) THEN vt0.lid COLLATE NOCASE END DESC, LIKE(rt0.c2, rt0.c0, 'V') COLLATE BINARY COLLATE NOCASE, (((rt0.c0)) NOT BETWEEN (('')) AND ((((rt0.c0)IS(rt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ('-1270489642' IN ())  NULLS FIRST, (((- (vt1.c1))) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c0))<>((vt1.c0, vt1.c1, '{Y')))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ('-1270489642' IN ())  NULLS FIRST, (((- (vt1.c1))) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c0))!=((vt1.c0, vt1.c1, '{Y')))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ('-1270489642' IN ())  NULLS FIRST, (((- (vt1.c1))) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c0))<>((vt1.c0, vt1.c1, '{Y')))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(((vt1.c0)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ('-1270489642' IN ())  NULLS FIRST, (((- (vt1.c1))) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c0))!=((vt1.c0, vt1.c1, '{Y')))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))<=(((vt1.c0)GLOB(vt1.c0))))) ORDER BY ('-1270489642' IN ())  NULLS FIRST, (((- (vt1.c1))) NOT BETWEEN ((((vt1.c0, vt1.c1, vt1.c0))<>((vt1.c0, vt1.c1, '{Y')))) AND (vt1.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.lid))))>>(((vt0.lid)AND(vt0.c0)))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY NULL COLLATE RTRIM, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.lid))))>>(((vt0.lid)AND(vt0.c0)))) ORDER BY NULL COLLATE RTRIM, vt1.c0 ASC);
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.lid))))>>(((vt0.lid)AND(vt0.c0)))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY NULL COLLATE RTRIM, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.lid))))>>(((vt0.lid)AND(vt0.c0)))) ORDER BY NULL COLLATE RTRIM, vt1.c0 ASC);
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON (((((vt1.c0)) NOT BETWEEN ((NULL)) AND ((vt0.lid))))>>(((vt0.lid)AND(vt0.c0)))) WHERE ((((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)) IN ())) ORDER BY NULL COLLATE RTRIM, vt1.c0 ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&('904290317')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&('904290317')) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&('904290317')) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)&('904290317')) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)&('904290317')) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt1 WHERE (((((NOT (vt1.c0)), ((vt1.c0)IS(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))<((LIKELY(rt0.c0), x'e9df', rt0.c1 COLLATE NOCASE)))) ORDER BY ((UPPER(DISTINCT rt0.c1))LIKE((~ (rt0.c1)))) ASC, CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) IS FALSE) END DESC, (((rt0.c0)) BETWEEN (('')) AND (((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0)), ((vt1.c0)IS(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))<((LIKELY(rt0.c0), x'e9df', rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UPPER(DISTINCT rt0.c1))LIKE((~ (rt0.c1)))) ASC, CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) IS FALSE) END DESC, (((rt0.c0)) BETWEEN (('')) AND (((~ (NULL))))));
SELECT ALL * FROM rt0, vt1 WHERE (((((NOT (vt1.c0)), ((vt1.c0)IS(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))<((LIKELY(rt0.c0), x'e9df', rt0.c1 COLLATE NOCASE)))) ORDER BY ((UPPER(DISTINCT rt0.c1))LIKE((~ (rt0.c1)))) ASC, CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) IS FALSE) END DESC, (((rt0.c0)) BETWEEN (('')) AND (((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((NOT (vt1.c0)), ((vt1.c0)IS(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))<((LIKELY(rt0.c0), x'e9df', rt0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UPPER(DISTINCT rt0.c1))LIKE((~ (rt0.c1)))) ASC, CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) IS FALSE) END DESC, (((rt0.c0)) BETWEEN (('')) AND (((~ (NULL))))));
SELECT ALL * FROM rt0, vt1 WHERE (((((NOT (vt1.c0)), ((vt1.c0)IS(rt0.c1)), ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))<((LIKELY(rt0.c0), x'e9df', rt0.c1 COLLATE NOCASE)))) ORDER BY ((UPPER(DISTINCT rt0.c1))LIKE((~ (rt0.c1)))) ASC, CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c0) IS FALSE) END DESC, (((rt0.c0)) BETWEEN (('')) AND (((~ (NULL)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.lid THEN (NOT (rt0.c2)) ELSE ((((((((vt0.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c1)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.lid THEN (NOT (rt0.c2)) ELSE ((((((((vt0.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c1)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.lid THEN (NOT (rt0.c2)) ELSE ((((((((vt0.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c1)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.lid THEN (NOT (rt0.c2)) ELSE ((((((((vt0.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c1)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE WHEN vt0.lid THEN (NOT (rt0.c2)) ELSE ((((((((vt0.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c1)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.lid IN ()))>=((0.44706364213295435 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN ()))>=((0.44706364213295435 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.lid IN ()))>=((0.44706364213295435 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN ()))>=((0.44706364213295435 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.lid IN ()))>=((0.44706364213295435 IN ()))));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(NULL AS BLOB)) NOT NULL)) ORDER BY (((((rt0.c1))>=((vt0.lid))))<(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1))>=((vt0.lid))))<(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(NULL AS BLOB)) NOT NULL)) ORDER BY (((((rt0.c1))>=((vt0.lid))))<(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS BLOB)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1))>=((vt0.lid))))<(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(NULL AS BLOB)) NOT NULL)) ORDER BY (((((rt0.c1))>=((vt0.lid))))<(CAST(rt0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(TYPEOF(vt1.c0)))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(TYPEOF(vt1.c0)))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c1 IN (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((((vt1.c1 IN (vt1.c0)))AND(CAST(vt1.c0 AS INTEGER))))OR(TYPEOF(vt1.c0)))) ORDER BY ((vt1.c0) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CASE rt0.c2  WHEN vt0.lid THEN 0.6427063110679074 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN vt0.lid THEN 0.6427063110679074 END IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CASE rt0.c2  WHEN vt0.lid THEN 0.6427063110679074 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN vt0.lid THEN 0.6427063110679074 END IN ())) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE ((CASE rt0.c2  WHEN vt0.lid THEN 0.6427063110679074 END IN ()));
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (- (x'')) WHERE ((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c1)))AND(NULL)), CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.lid WHEN rt0.c1 THEN vt1.c0 END, '-1463240707'))>=((CAST(vt1.c1 AS INTEGER), x'0d94', ((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c1)))AND(NULL)), CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.lid WHEN rt0.c1 THEN vt1.c0 END, '-1463240707'))>=((CAST(vt1.c1 AS INTEGER), x'0d94', ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (- (x'')));
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (- (x'')) WHERE ((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c1)))AND(NULL)), CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.lid WHEN rt0.c1 THEN vt1.c0 END, '-1463240707'))>=((CAST(vt1.c1 AS INTEGER), x'0d94', ((rt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c1)))AND(NULL)), CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.lid WHEN rt0.c1 THEN vt1.c0 END, '-1463240707'))>=((CAST(vt1.c1 AS INTEGER), x'0d94', ((rt0.c0) IS FALSE))))) IS TRUE)  as count FROM rt0, vt1 INNER JOIN vt0 ON (- (x'')));
SELECT COUNT(*) FROM rt0, vt1 INNER JOIN vt0 ON (- (x'')) WHERE ((((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c1)))AND(NULL)), CASE WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c0 THEN vt0.lid WHEN rt0.c1 THEN vt1.c0 END, '-1463240707'))>=((CAST(vt1.c1 AS INTEGER), x'0d94', ((rt0.c0) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((((vt1.c0)<(vt1.c1)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<(vt1.c1)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((((vt1.c0)<(vt1.c1)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)<(vt1.c1)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((((vt1.c0)<(vt1.c1)))AND(CAST(vt1.c0 AS REAL))))OR(vt1.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(x'' AS INTEGER));
SELECT * FROM vt0, rt0 WHERE ('V\n');
SELECT SUM(count) FROM (SELECT ALL (('V\n') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('V\n');
SELECT SUM(count) FROM (SELECT ALL (('V\n') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('V\n');
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c0 AS BLOB) COLLATE RTRIM);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOTNULL) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c0) NOTNULL) IN ())) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1))) IS TRUE)  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((rt0.c0)GLOB(vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((rt0.c0)GLOB(vt0.lid)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((rt0.c0)GLOB(vt0.lid))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((rt0.c0)GLOB(vt0.lid)))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((((rt0.c0)GLOB(vt0.lid))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((rt0.c0)IS NOT('G7 G')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)IS NOT('G7 G')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((rt0.c0)IS NOT('G7 G')) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0)IS NOT('G7 G')) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY ((rt0.c0)IS NOT('G7 G')) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (UPPER(DISTINCT CAST(x'' AS BLOB))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS FIRST, ((rt0.c1)<((((rt0.c2))!=((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS FIRST, ((rt0.c1)<((((rt0.c2))<>((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (UPPER(DISTINCT CAST(x'' AS BLOB))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS FIRST, ((rt0.c1)<((((rt0.c2))!=((rt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT CAST(x'' AS BLOB))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS FIRST, ((rt0.c1)<((((rt0.c2))<>((rt0.c0))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (UPPER(DISTINCT CAST(x'' AS BLOB))) ORDER BY (- (((rt0.c2) IS TRUE))) ASC  NULLS FIRST, ((rt0.c1)<((((rt0.c2))!=((rt0.c0))))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE TIME(rt0.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1)  WHEN ((vt1.c0) NOTNULL) THEN '1901634388' END RIGHT OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) WHERE (rt0.c1) ORDER BY 0X480abb5a  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE TIME(rt0.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1)  WHEN ((vt1.c0) NOTNULL) THEN '1901634388' END RIGHT OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY 0x480abb5a  NULLS FIRST);
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CASE TIME(rt0.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1)  WHEN ((vt1.c0) NOTNULL) THEN '1901634388' END RIGHT OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) WHERE (rt0.c1) ORDER BY 0X480abb5a  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE TIME(rt0.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1)  WHEN ((vt1.c0) NOTNULL) THEN '1901634388' END RIGHT OUTER JOIN rt0 ON ((((rt0.c0)=(rt0.c2)))IS NOT(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)) ORDER BY 0x480abb5a  NULLS FIRST);
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c0) AND (vt0.lid)) IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (rt0.c0) AND (vt0.lid)) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c0) AND (vt0.lid)) IN (((vt1.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1) BETWEEN (rt0.c0) AND (vt0.lid)) IN (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE ((((vt1.c1) BETWEEN (rt0.c0) AND (vt0.lid)) IN (((vt1.c0) NOTNULL))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((NULL)<<(vt1.c0))) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c1)))OR(1054407683)))), MAX(((vt0.c0)>=(rt0.c1)), CAST(vt0.lid AS REAL), ABS(DISTINCT vt0.lid), (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(vt1.c0))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c1)))OR(1054407683)))), MAX(((vt0.c0)>=(rt0.c1)), CAST(vt0.lid AS REAL), ABS(DISTINCT vt0.lid), (- (rt0.c2))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((NULL)<<(vt1.c0))) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c1)))OR(1054407683)))), MAX(((vt0.c0)>=(rt0.c1)), CAST(vt0.lid AS REAL), ABS(DISTINCT vt0.lid), (- (rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(vt1.c0))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c1)))OR(1054407683)))), MAX(((vt0.c0)>=(rt0.c1)), CAST(vt0.lid AS REAL), ABS(DISTINCT vt0.lid), (- (rt0.c2))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((NULL)<<(vt1.c0))) ORDER BY (((((rt0.c1))!=((rt0.c0)))) NOT BETWEEN (CAST(rt0.c0 AS REAL)) AND (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(vt1.c1)))OR(1054407683)))), MAX(((vt0.c0)>=(rt0.c1)), CAST(vt0.lid AS REAL), ABS(DISTINCT vt0.lid), (- (rt0.c2)));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND((((vt1.c1))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND((((vt1.c1))>=((rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND((((vt1.c1))>=((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0 ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND((((vt1.c1))>=((rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (vt1.c1) ORDER BY (+ (rt0.c0)) ASC  NULLS FIRST, ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))AND((((vt1.c1))>=((rt0.c0)))));
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((',a') BETWEEN (CAST(vt0.lid AS NUMERIC)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((',a') BETWEEN (CAST(vt0.lid AS NUMERIC)) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((',a') BETWEEN (CAST(vt0.lid AS NUMERIC)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((',a') BETWEEN (CAST(vt0.lid AS NUMERIC)) AND (vt0.c0))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1 NOT INDEXED, vt0 WHERE (((',a') BETWEEN (CAST(vt0.lid AS NUMERIC)) AND (vt0.c0)));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|((~ (NULL))))) ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 0.40952649959623866) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|((~ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 0.40952649959623866) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|((~ (NULL))))) ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 0.40952649959623866) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|((~ (NULL))))) IS TRUE)  as count FROM vt1 ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 0.40952649959623866) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))|((~ (NULL))))) ORDER BY LIKELIHOOD(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)), 0.40952649959623866) ASC  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOTNULL))>>(((vt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>>(((vt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOTNULL))>>(((vt0.c0)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL))>>(((vt0.c0)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((((rt0.c0) NOTNULL))>>(((vt0.c0)LIKE(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), TYPEOF(rt0.c0)) WHERE (CAST((vt0.lid IN ()) AS REAL)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, (((((rt0.c1) IS FALSE)))<(((vt0.lid IN ())))) ASC, ((rt0.c1 IN ()) IN (((rt0.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), TYPEOF(rt0.c0)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, (((((rt0.c1) IS FALSE)))<(((vt0.lid IN ())))) ASC, ((rt0.c1 IN ()) IN (((rt0.c0)<(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), TYPEOF(rt0.c0)) WHERE (CAST((vt0.lid IN ()) AS REAL)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, (((((rt0.c1) IS FALSE)))<(((vt0.lid IN ())))) ASC, ((rt0.c1 IN ()) IN (((rt0.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.lid IN ()) AS REAL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN vt1 ON GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), TYPEOF(rt0.c0)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, (((((rt0.c1) IS FALSE)))<(((vt0.lid IN ())))) ASC, ((rt0.c1 IN ()) IN (((rt0.c0)<(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 INNER JOIN vt1 ON GLOB(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)), TYPEOF(rt0.c0)) WHERE (CAST((vt0.lid IN ()) AS REAL)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST, (((((rt0.c1) IS FALSE)))<(((vt0.lid IN ())))) ASC, ((rt0.c1 IN ()) IN (((rt0.c0)<(vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)|(vt0.lid)))||(IFNULL('-102975089', vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)|(vt0.lid)))||(IFNULL('-102975089', vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)|(vt0.lid)))||(IFNULL('-102975089', vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)|(vt0.lid)))||(IFNULL('-102975089', vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)|(vt0.lid)))||(IFNULL('-102975089', vt1.c1))));
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS FALSE))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (rt0.c1 IN (0.2865151271323576, rt0.c1)), ((NULL) NOT BETWEEN (TRIM(rt0.c1)) AND (((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS FALSE))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (0.2865151271323576, rt0.c1)), ((NULL) NOT BETWEEN (TRIM(rt0.c1)) AND (((rt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS FALSE))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (rt0.c1 IN (0.2865151271323576, rt0.c1)), ((NULL) NOT BETWEEN (TRIM(rt0.c1)) AND (((rt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS FALSE))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c1 IN (0.2865151271323576, rt0.c1)), ((NULL) NOT BETWEEN (TRIM(rt0.c1)) AND (((rt0.c0) NOTNULL))) DESC);
SELECT ALL * FROM rt0 WHERE ((((((((((rt0.c1 IN (rt0.c1)))OR((rt0.c0 IN ()))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c1) IS FALSE))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))) ORDER BY (rt0.c1 IN (0.2865151271323576, rt0.c1)), ((NULL) NOT BETWEEN (TRIM(rt0.c1)) AND (((rt0.c0) NOTNULL))) DESC;
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c1)))OR('sK')))AND(rt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((((((((((('AHwRt')AND(rt0.c2)))OR(0.3752211844511548)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2)) BETWEEN ((0.3781739248649054)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)OR(rt0.c1)))OR('sK')))AND(rt0.c0)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((((((((((('AHwRt')AND(rt0.c2)))OR(0.3752211844511548)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2)) BETWEEN ((0.3781739248649054)) AND ((rt0.c1))))));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c1)))OR('sK')))AND(rt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((((((((((('AHwRt')AND(rt0.c2)))OR(0.3752211844511548)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2)) BETWEEN ((0.3781739248649054)) AND ((rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c2)OR(rt0.c1)))OR('sK')))AND(rt0.c0)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((((((((((('AHwRt')AND(rt0.c2)))OR(0.3752211844511548)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2)) BETWEEN ((0.3781739248649054)) AND ((rt0.c1))))));
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c2)OR(rt0.c1)))OR('sK')))AND(rt0.c0)))OR(rt0.c0)) AS TEXT)) ORDER BY (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) BETWEEN ((((((((((((('AHwRt')AND(rt0.c2)))OR(0.3752211844511548)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c2))) AND ((((rt0.c2)) BETWEEN ((0.3781739248649054)) AND ((rt0.c1)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (UNLIKELY(vt1.c0))) WHERE ((((vt1.c1)) BETWEEN ((NULL)) AND ((CAST(vt0.lid AS TEXT))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((NULL)) AND ((CAST(vt0.lid AS TEXT))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (UNLIKELY(vt1.c0))) ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (UNLIKELY(vt1.c0))) WHERE ((((vt1.c1)) BETWEEN ((NULL)) AND ((CAST(vt0.lid AS TEXT))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((NULL)) AND ((CAST(vt0.lid AS TEXT))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (UNLIKELY(vt1.c0))) ORDER BY vt0.c0 ASC);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON (CAST(vt0.c0 AS NUMERIC) IN (UNLIKELY(vt1.c0))) WHERE ((((vt1.c1)) BETWEEN ((NULL)) AND ((CAST(vt0.lid AS TEXT))))) ORDER BY vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)GLOB(vt0.lid))) NOTNULL)) ORDER BY CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)GLOB(vt0.lid))) NOTNULL)) ORDER BY CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (((((rt0.c0)GLOB(vt0.lid))) NOTNULL)) ORDER BY CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c1 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((+ (((vt0.c0)||(vt1.c1))))) ORDER BY COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)||(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((+ (((vt0.c0)||(vt1.c1))))) ORDER BY COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)||(vt1.c1))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((+ (((vt0.c0)||(vt1.c1))))) ORDER BY COALESCE(DISTINCT vt0.c0 COLLATE RTRIM, (NOT (vt0.c0))) DESC;
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((~ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.44809592739825543))==((797112503, ((vt0.lid) BETWEEN (vt1.c1) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))))) WHERE ((((x'6fc8')>(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'6fc8')>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((~ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.44809592739825543))==((797112503, ((vt0.lid) BETWEEN (vt1.c1) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((~ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.44809592739825543))==((797112503, ((vt0.lid) BETWEEN (vt1.c1) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))))) WHERE ((((x'6fc8')>(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((x'6fc8')>(vt1.c1)) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((((~ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.44809592739825543))==((797112503, ((vt0.lid) BETWEEN (vt1.c1) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))))));
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON ((((~ (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), 0.44809592739825543))==((797112503, ((vt0.lid) BETWEEN (vt1.c1) AND (vt0.c0)), (vt0.c0 IN (vt0.c0))))) WHERE ((((x'6fc8')>(vt1.c1)) IN ()));
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (((rt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (((rt0.c1) IS TRUE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS NUMERIC))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((CAST(rt0.c1 AS NUMERIC))<=(rt0.c2 COLLATE NOCASE)));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((CAST(rt0.c1 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((~ (vt0.lid)) AS TEXT)) ORDER BY ((((vt0.lid IN ())))<=((CASE WHEN vt0.lid THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.lid)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.lid IN ())))<=((CASE WHEN vt0.lid THEN vt0.c0 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((~ (vt0.lid)) AS TEXT)) ORDER BY ((((vt0.lid IN ())))<=((CASE WHEN vt0.lid THEN vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.lid)) AS TEXT)) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt0.lid IN ())))<=((CASE WHEN vt0.lid THEN vt0.c0 END))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST((~ (vt0.lid)) AS TEXT)) ORDER BY ((((vt0.lid IN ())))<=((CASE WHEN vt0.lid THEN vt0.c0 END))) ASC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE vt1.c1  WHEN rt0.c2 THEN (- (vt1.c1)) ELSE ((vt0.lid)+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN rt0.c2 THEN (- (vt1.c1)) ELSE ((vt0.lid)+(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE vt1.c1  WHEN rt0.c2 THEN (- (vt1.c1)) ELSE ((vt0.lid)+(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1  WHEN rt0.c2 THEN (- (vt1.c1)) ELSE ((vt0.lid)+(vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE vt1.c1  WHEN rt0.c2 THEN (- (vt1.c1)) ELSE ((vt0.lid)+(vt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'' COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((- (x'')))%(CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))%(CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((- (x'')))%(CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))%(CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE ((((- (x'')))%(CASE vt1.c1  WHEN rt0.c1 THEN vt0.c0 END)));
SELECT * FROM vt0 WHERE (((x'')AND((- (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'')AND((- (vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND((- (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'')AND((- (vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((x'')AND((- (vt0.lid)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1)LIKE(vt1.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(vt1.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1)LIKE(vt1.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((vt1.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)LIKE(vt1.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE (((((rt0.c1)LIKE(vt1.c1))) NOT BETWEEN (((rt0.c2) NOT NULL)) AND (((vt1.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (ABS(DISTINCT ' !sSe'))) ASC  NULLS FIRST, CASE WHEN (vt0.lid IN ()) THEN rt0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (ABS(DISTINCT ' !sSe'))) ASC  NULLS FIRST, CASE WHEN (vt0.lid IN ()) THEN rt0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (ABS(DISTINCT ' !sSe'))) ASC  NULLS FIRST, CASE WHEN (vt0.lid IN ()) THEN rt0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (ABS(DISTINCT ' !sSe'))) ASC  NULLS FIRST, CASE WHEN (vt0.lid IN ()) THEN rt0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY (+ (ABS(DISTINCT ' !sSe'))) ASC  NULLS FIRST, CASE WHEN (vt0.lid IN ()) THEN rt0.c0 COLLATE BINARY ELSE CASE WHEN rt0.c0 THEN rt0.c2 END END;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.lid)))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0)GLOB(vt0.lid)) THEN (vt0.lid IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0)GLOB(vt0.lid)) THEN (vt0.lid IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.lid)))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0)GLOB(vt0.lid)) THEN (vt0.lid IN ()) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF((~ (vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0)GLOB(vt0.lid)) THEN (vt0.lid IN ()) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (PRINTF((~ (vt0.lid)))) ORDER BY CASE ((vt0.c0) NOTNULL)  WHEN ((vt0.c0)GLOB(vt0.lid)) THEN (vt0.lid IN ()) END DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0)<<(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0)<<(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))>=((vt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)<<(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))>=((vt1.c0)))) ISNULL)) ORDER BY ((((vt1.c0)<<(vt1.c0)))-(((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY (+ ('DU'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('DU'))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY (+ ('DU'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (NULL))) IS TRUE)  as count FROM vt0 ORDER BY (+ ('DU'))  NULLS LAST);
SELECT * FROM vt0 WHERE ((~ (NULL))) ORDER BY (+ ('DU'))  NULLS LAST;
SELECT * FROM rt0, vt1, vt0 WHERE (((0.27146689509839683)|(((rt0.c2)>(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.27146689509839683)|(((rt0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((0.27146689509839683)|(((rt0.c2)>(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.27146689509839683)|(((rt0.c2)>(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) END DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((0.27146689509839683)|(((rt0.c2)>(rt0.c1))))) ORDER BY CASE WHEN ((rt0.c1)>>(vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 END)*((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 END)*((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 END)*((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 END)*((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.lid  WHEN vt0.lid THEN vt0.c0 END)*((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) ISNULL))))AND(((rt0.c0) IS FALSE)))) ORDER BY (((rt0.c1) ISNULL) IN (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) ISNULL))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c1) ISNULL) IN (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) ISNULL))))AND(((rt0.c0) IS FALSE)))) ORDER BY (((rt0.c1) ISNULL) IN (NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) ISNULL))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (((rt0.c1) ISNULL) IN (NULL)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((((((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))OR(((rt0.c0) ISNULL))))AND(((rt0.c0) IS FALSE)))) ORDER BY (((rt0.c1) ISNULL) IN (NULL)) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((('-1394213526')IS NOT(rt0.c2)))/((~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN -1369172146 THEN vt1.c0 WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1394213526')IS NOT(rt0.c2)))/((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN -1369172146 THEN vt1.c0 WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((('-1394213526')IS NOT(rt0.c2)))/((~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN -1369172146 THEN vt1.c0 WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('-1394213526')IS NOT(rt0.c2)))/((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN -1369172146 THEN vt1.c0 WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((('-1394213526')IS NOT(rt0.c2)))/((~ (vt1.c0))))) ORDER BY (+ (CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN -1369172146 THEN vt1.c0 WHEN rt0.c0 THEN vt0.lid ELSE rt0.c2 END))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) AS TEXT));
SELECT * FROM vt1 WHERE ((+ (CAST('' AS BLOB)))) ORDER BY ((((vt1.c1, vt1.c1, x'0278'))>((vt1.c0, vt1.c0, vt1.c0))) IN ()) DESC, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT (((+ (CAST('' AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1, vt1.c1, x'0278'))>((vt1.c0, vt1.c0, vt1.c0))) IN ()) DESC, SQLITE_VERSION());
SELECT * FROM vt1 WHERE ((+ (CAST('' AS BLOB)))) ORDER BY ((((vt1.c1, vt1.c1, x'0278'))>((vt1.c0, vt1.c0, vt1.c0))) IN ()) DESC, SQLITE_VERSION();
SELECT SUM(count) FROM (SELECT (((+ (CAST('' AS BLOB)))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1, vt1.c1, x'0278'))>((vt1.c0, vt1.c0, vt1.c0))) IN ()) DESC, SQLITE_VERSION());
SELECT * FROM vt1 WHERE ((+ (CAST('' AS BLOB)))) ORDER BY ((((vt1.c1, vt1.c1, x'0278'))>((vt1.c0, vt1.c0, vt1.c0))) IN ()) DESC, SQLITE_VERSION();
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((((vt1.c1, rt0.c0, vt1.c0))!=((rt0.c1, vt1.c1, 0.3082808818293552)))) BETWEEN ((((rt0.c0))<=((vt1.c1)))) AND (((rt0.c0)>>(rt0.c2)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt1 ON (((((vt1.c1, rt0.c0, vt1.c0))<>((rt0.c1, vt1.c1, 0.3082808818293552)))) BETWEEN ((((rt0.c0))<=((vt1.c1)))) AND (((rt0.c0)>>(rt0.c2)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((((vt1.c1, rt0.c0, vt1.c0))!=((rt0.c1, vt1.c1, 0.3082808818293552)))) BETWEEN ((((rt0.c0))<=((vt1.c1)))) AND (((rt0.c0)>>(rt0.c2)))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 NOT INDEXED INNER JOIN vt1 ON (((((vt1.c1, rt0.c0, vt1.c0))<>((rt0.c1, vt1.c1, 0.3082808818293552)))) BETWEEN ((((rt0.c0))<=((vt1.c1)))) AND (((rt0.c0)>>(rt0.c2)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((((vt1.c1, rt0.c0, vt1.c0))!=((rt0.c1, vt1.c1, 0.3082808818293552)))) BETWEEN ((((rt0.c0))<=((vt1.c1)))) AND (((rt0.c0)>>(rt0.c2)))) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.lid))))) ORDER BY CASE WHEN ((x'') IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.lid))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((x'') IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.lid))))) ORDER BY CASE WHEN ((x'') IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.lid))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN ((x'') IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)) END);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CAST(rt0.c1 AS BLOB))GLOB((NOT (vt0.lid))))) ORDER BY CASE WHEN ((x'') IS FALSE) THEN rt0.c0 COLLATE BINARY ELSE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt0.lid)) END;
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN 0.07977993970029629 THEN vt0.lid ELSE vt0.c0 END) NOT NULL) LEFT OUTER JOIN vt1 ON (~ (NULL)) WHERE ('100245152') ORDER BY (((rt0.c2, rt0.c0, NULL, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt1.c0 ELSE NULL END, (+ (vt1.c0)), ((vt0.c0) NOTNULL), CAST(vt1.c1 AS TEXT), ((rt0.c1)<<(rt0.c0)))) AND ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT), CASE vt0.lid  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, CAST(rt0.c1 AS BLOB), vt1.c1 COLLATE NOCASE))) ASC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (('100245152') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN 0.07977993970029629 THEN vt0.lid ELSE vt0.c0 END) NOT NULL) LEFT OUTER JOIN vt1 ON (~ (NULL)) ORDER BY (((rt0.c2, rt0.c0, NULL, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt1.c0 ELSE NULL END, (+ (vt1.c0)), ((vt0.c0) NOTNULL), CAST(vt1.c1 AS TEXT), ((rt0.c1)<<(rt0.c0)))) AND ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT), CASE vt0.lid  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, CAST(rt0.c1 AS BLOB), vt1.c1 COLLATE NOCASE))) ASC  NULLS LAST, rt0.c2 DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN 0.07977993970029629 THEN vt0.lid ELSE vt0.c0 END) NOT NULL) LEFT OUTER JOIN vt1 ON (~ (NULL)) WHERE ('100245152') ORDER BY (((rt0.c2, rt0.c0, NULL, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt1.c0 ELSE NULL END, (+ (vt1.c0)), ((vt0.c0) NOTNULL), CAST(vt1.c1 AS TEXT), ((rt0.c1)<<(rt0.c0)))) AND ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT), CASE vt0.lid  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, CAST(rt0.c1 AS BLOB), vt1.c1 COLLATE NOCASE))) ASC  NULLS LAST, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (('100245152') IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN 0.07977993970029629 THEN vt0.lid ELSE vt0.c0 END) NOT NULL) LEFT OUTER JOIN vt1 ON (~ (NULL)) ORDER BY (((rt0.c2, rt0.c0, NULL, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt1.c0 ELSE NULL END, (+ (vt1.c0)), ((vt0.c0) NOTNULL), CAST(vt1.c1 AS TEXT), ((rt0.c1)<<(rt0.c0)))) AND ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT), CASE vt0.lid  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, CAST(rt0.c1 AS BLOB), vt1.c1 COLLATE NOCASE))) ASC  NULLS LAST, rt0.c2 DESC);
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON ((CASE WHEN 0.07977993970029629 THEN vt0.lid ELSE vt0.c0 END) NOT NULL) LEFT OUTER JOIN vt1 ON (~ (NULL)) WHERE ('100245152') ORDER BY (((rt0.c2, rt0.c0, NULL, vt1.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt0.lid THEN vt1.c0 ELSE NULL END, (+ (vt1.c0)), ((vt0.c0) NOTNULL), CAST(vt1.c1 AS TEXT), ((rt0.c1)<<(rt0.c0)))) AND ((CASE vt1.c0  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, CAST(rt0.c2 AS TEXT), CASE vt0.lid  WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, CAST(rt0.c1 AS BLOB), vt1.c1 COLLATE NOCASE))) ASC  NULLS LAST, rt0.c2 DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1)>(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)), vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)>(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)), vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1)>(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)), vt0.lid COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)>(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)), vt0.lid COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((((vt1.c1)>(vt0.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid)), vt0.lid COLLATE RTRIM)));
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE '1034977907'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END AS BLOB)) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid)=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '1034977907'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid)==(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE '1034977907'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END AS BLOB)) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid)=(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE '1034977907'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END AS BLOB)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid)==(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(CASE '1034977907'  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END AS BLOB)) ORDER BY (((vt1.c1)) BETWEEN ((CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid)=(vt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((0.8700357490864797)OR(vt1.c1)))OR(vt1.c1))))<=((((((vt1.c1)OR('B8~m')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((0.8700357490864797)OR(vt1.c1)))OR(vt1.c1))))<=((((((vt1.c1)OR('B8~m')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((0.8700357490864797)OR(vt1.c1)))OR(vt1.c1))))<=((((((vt1.c1)OR('B8~m')))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((0.8700357490864797)OR(vt1.c1)))OR(vt1.c1))))<=((((((vt1.c1)OR('B8~m')))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((((0.8700357490864797)OR(vt1.c1)))OR(vt1.c1))))<=((((((vt1.c1)OR('B8~m')))AND(vt1.c0))))));
SELECT * FROM rt0, vt1, vt0 WHERE (LIKE(((rt0.c1) IS TRUE), ((((((((NULL)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c1) IS TRUE), ((((((((NULL)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (LIKE(((rt0.c1) IS TRUE), ((((((((NULL)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKE(((rt0.c1) IS TRUE), ((((((((NULL)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (LIKE(((rt0.c1) IS TRUE), ((((((((NULL)AND(rt0.c1)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c0))));
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST((- (rt0.c2)) AS NUMERIC) WHERE (((((rt0.c2) NOT NULL))OR(vt0.lid COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))OR(vt0.lid COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((- (rt0.c2)) AS NUMERIC));
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST((- (rt0.c2)) AS NUMERIC) WHERE (((((rt0.c2) NOT NULL))OR(vt0.lid COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL))OR(vt0.lid COLLATE BINARY))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CAST((- (rt0.c2)) AS NUMERIC));
SELECT * FROM rt0 CROSS JOIN vt0 ON CAST((- (rt0.c2)) AS NUMERIC) WHERE (((((rt0.c2) NOT NULL))OR(vt0.lid COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((rt0.c2)<<('0.3768362384834769')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)|(((rt0.c2)<<('0.3768362384834769'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((rt0.c2)<<('0.3768362384834769')))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY)|(((rt0.c2)<<('0.3768362384834769'))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)|(((rt0.c2)<<('0.3768362384834769')))));
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((+ (((((vt1.c0)OR(rt0.c2)))AND(-3.9248461E8)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(rt0.c2)))AND(-3.9248461E8))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((+ (((((vt1.c0)OR(rt0.c2)))AND(-3.9248461E8)))));
SELECT SUM(count) FROM (SELECT (((+ (((((vt1.c0)OR(rt0.c2)))AND(-3.9248461E8))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 NOT INDEXED WHERE ((+ (((((vt1.c0)OR(rt0.c2)))AND(-3.9248461E8)))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR('?')))AND(0x782b1648)))AND(vt1.c1)))AND(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt1.c0)LIKE(vt0.c0))))<((((((((((vt1.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)), rt0.c2 COLLATE BINARY, ((vt1.c0) NOT NULL)))) WHERE ((((((vt1.c0))<=((rt0.c2))))%(((vt1.c0)IS NOT(rt0.c1))))) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((rt0.c2))))%(((vt1.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR('?')))AND(0x782b1648)))AND(vt1.c1)))AND(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt1.c0)LIKE(vt0.c0))))<((((((((((vt1.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)), rt0.c2 COLLATE BINARY, ((vt1.c0) NOT NULL)))) ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR('?')))AND(0x782b1648)))AND(vt1.c1)))AND(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt1.c0)LIKE(vt0.c0))))<((((((((((vt1.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)), rt0.c2 COLLATE BINARY, ((vt1.c0) NOT NULL)))) WHERE ((((((vt1.c0))<=((rt0.c2))))%(((vt1.c0)IS NOT(rt0.c1))))) ORDER BY TOTAL_CHANGES() DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((rt0.c2))))%(((vt1.c0)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR('?')))AND(0x782b1648)))AND(vt1.c1)))AND(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt1.c0)LIKE(vt0.c0))))<((((((((((vt1.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)), rt0.c2 COLLATE BINARY, ((vt1.c0) NOT NULL)))) ORDER BY TOTAL_CHANGES() DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON (((((((((((vt0.c0)OR('?')))AND(0x782b1648)))AND(vt1.c1)))AND(rt0.c0)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)), ((vt1.c0)LIKE(vt0.c0))))<((((((((((vt1.c1)AND(rt0.c2)))OR(vt0.c0)))AND(rt0.c2)))AND(rt0.c1)), rt0.c2 COLLATE BINARY, ((vt1.c0) NOT NULL)))) WHERE ((((((vt1.c0))<=((rt0.c2))))%(((vt1.c0)IS NOT(rt0.c1))))) ORDER BY TOTAL_CHANGES() DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('HS') AND (((vt1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, vt0.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('HS') AND (((vt1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, vt0.lid ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('HS') AND (((vt1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, vt0.lid ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('HS') AND (((vt1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, vt0.lid ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE ((NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ('HS') AND (((vt1.c0)AND(vt1.c0)))) ASC  NULLS FIRST, vt0.lid ASC  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0 WHERE (LIKELY((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt0.lid))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (LIKELY((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt0.lid))))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (LIKELY((((vt0.lid)) NOT BETWEEN ((rt0.c1)) AND ((vt0.lid)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((vt0.lid))!=((vt0.lid))) IN ())) ORDER BY (((NOT (vt0.c0)))*(((((vt0.c0)OR('')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid))!=((vt0.lid))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(((((vt0.c0)OR('')))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.lid))!=((vt0.lid))) IN ())) ORDER BY (((NOT (vt0.c0)))*(((((vt0.c0)OR('')))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.lid))!=((vt0.lid))) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))*(((((vt0.c0)OR('')))AND(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.lid))!=((vt0.lid))) IN ())) ORDER BY (((NOT (vt0.c0)))*(((((vt0.c0)OR('')))AND(vt0.c0))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(NULL)))AND(vt1.c0 COLLATE RTRIM)))OR(x'')))AND(COALESCE(DISTINCT vt1.c1, vt0.c0))))OR(ABS(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)&(NULL)))AND(vt1.c0 COLLATE RTRIM)))OR(x'')))AND(COALESCE(DISTINCT vt1.c1, vt0.c0))))OR(ABS(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(NULL)))AND(vt1.c0 COLLATE RTRIM)))OR(x'')))AND(COALESCE(DISTINCT vt1.c1, vt0.c0))))OR(ABS(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)&(NULL)))AND(vt1.c0 COLLATE RTRIM)))OR(x'')))AND(COALESCE(DISTINCT vt1.c1, vt0.c0))))OR(ABS(DISTINCT vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((((((((vt1.c0)&(NULL)))AND(vt1.c0 COLLATE RTRIM)))OR(x'')))AND(COALESCE(DISTINCT vt1.c1, vt0.c0))))OR(ABS(DISTINCT vt1.c1))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (UPPER(DISTINCT LIKELIHOOD(rt0.c1, 0.7616743112300839)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT LIKELIHOOD(rt0.c1, 0.7616743112300839))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (UPPER(DISTINCT LIKELIHOOD(rt0.c1, 0.7616743112300839)));
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT LIKELIHOOD(rt0.c1, 0.7616743112300839))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (UPPER(DISTINCT LIKELIHOOD(rt0.c1, 0.7616743112300839)));
SELECT ALL * FROM rt0 WHERE ((+ ('Tp')));
SELECT SUM(count) FROM (SELECT (((+ ('Tp'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ('Tp')));
SELECT SUM(count) FROM (SELECT (((+ ('Tp'))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ('Tp')));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (INSTR(((vt0.c0) IS TRUE), CAST(rt0.c0 AS INTEGER))) ORDER BY COALESCE((rt0.c2 IN ()), HEX(DISTINCT rt0.c0), vt0.lid COLLATE BINARY, TYPEOF(vt1.c1), ((((vt0.lid)OR(0.47650498301270094)))AND(vt1.c1)), (+ (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0) IS TRUE), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY COALESCE((rt0.c2 IN ()), HEX(DISTINCT rt0.c0), vt0.lid COLLATE BINARY, TYPEOF(vt1.c1), ((((vt0.lid)OR(0.47650498301270094)))AND(vt1.c1)), (+ (rt0.c2))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (INSTR(((vt0.c0) IS TRUE), CAST(rt0.c0 AS INTEGER))) ORDER BY COALESCE((rt0.c2 IN ()), HEX(DISTINCT rt0.c0), vt0.lid COLLATE BINARY, TYPEOF(vt1.c1), ((((vt0.lid)OR(0.47650498301270094)))AND(vt1.c1)), (+ (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ((INSTR(((vt0.c0) IS TRUE), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY COALESCE((rt0.c2 IN ()), HEX(DISTINCT rt0.c0), vt0.lid COLLATE BINARY, TYPEOF(vt1.c1), ((((vt0.lid)OR(0.47650498301270094)))AND(vt1.c1)), (+ (rt0.c2))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (INSTR(((vt0.c0) IS TRUE), CAST(rt0.c0 AS INTEGER))) ORDER BY COALESCE((rt0.c2 IN ()), HEX(DISTINCT rt0.c0), vt0.lid COLLATE BINARY, TYPEOF(vt1.c1), ((((vt0.lid)OR(0.47650498301270094)))AND(vt1.c1)), (+ (rt0.c2))) ASC;
SELECT * FROM rt0, vt1, vt0 WHERE (((CAST(vt0.lid AS TEXT)) BETWEEN ((- (vt1.c1))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS TEXT)) BETWEEN ((- (vt1.c1))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((CAST(vt0.lid AS TEXT)) BETWEEN ((- (vt1.c1))) AND (CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS TEXT)) BETWEEN ((- (vt1.c1))) AND (CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT * FROM rt0, vt1, vt0 WHERE (((CAST(vt0.lid AS TEXT)) BETWEEN ((- (vt1.c1))) AND (CAST(rt0.c2 AS BLOB))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END)) AND ((((vt1.c0)/(0Xffffffffdb0cfcae))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END)) AND ((((vt1.c0)/(0xffffffffdb0cfcae)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END)) AND ((((vt1.c0)/(0Xffffffffdb0cfcae))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END)) AND ((((vt1.c0)/(0xffffffffdb0cfcae)))))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) BETWEEN ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 ELSE rt0.c2 END)) AND ((((vt1.c0)/(0Xffffffffdb0cfcae))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.650424141387531 COLLATE BINARY) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.650424141387531 COLLATE BINARY) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.650424141387531 COLLATE BINARY) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.650424141387531 COLLATE BINARY) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0.650424141387531 COLLATE BINARY) NOT BETWEEN ((- (rt0.c0))) AND (CASE WHEN vt0.lid THEN vt0.lid WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM rt0, vt0 WHERE (((LAST_INSERT_ROWID())*((((rt0.c1, 0Xffffffffda45cbd0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*((((rt0.c1, 0xffffffffda45cbd0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((LAST_INSERT_ROWID())*((((rt0.c1, 0Xffffffffda45cbd0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID())*((((rt0.c1, 0xffffffffda45cbd0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((LAST_INSERT_ROWID())*((((rt0.c1, 0Xffffffffda45cbd0, rt0.c0))<((rt0.c1, vt0.c0, rt0.c2))))));
SELECT * FROM vt0 WHERE (CASE 'iip9k	_'  WHEN (- (vt0.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 END WHEN (- (vt0.lid)) THEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (x'' IN ()) THEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.lid AS REAL) END) ORDER BY ((((vt0.lid) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 1.38570391E8 ELSE vt0.lid END) AND (json_insert(vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 'iip9k	_'  WHEN (- (vt0.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 END WHEN (- (vt0.lid)) THEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (x'' IN ()) THEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.lid AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 1.38570391E8 ELSE vt0.lid END) AND (json_insert(vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM vt0 WHERE (CASE 'iip9k	_'  WHEN (- (vt0.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 END WHEN (- (vt0.lid)) THEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (x'' IN ()) THEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.lid AS REAL) END) ORDER BY ((((vt0.lid) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 1.38570391E8 ELSE vt0.lid END) AND (json_insert(vt0.c0, vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE 'iip9k	_'  WHEN (- (vt0.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 END WHEN (- (vt0.lid)) THEN ((vt0.lid) NOT BETWEEN (vt0.lid) AND (vt0.c0)) WHEN (x'' IN ()) THEN ((((((((vt0.lid)AND(vt0.c0)))OR(vt0.lid)))OR(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.lid AS REAL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.lid) NOTNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN 1.38570391E8 ELSE vt0.lid END) AND (json_insert(vt0.c0, vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY '253009966';
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 ORDER BY '253009966');
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY '253009966';
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 ORDER BY '253009966');
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY '253009966';
SELECT * FROM vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1) NOTNULL) AS TEXT)) ORDER BY vt1.c0;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND('1359116371')))AND(vt0.lid)))&((vt0.lid IN (0.03285378544403783)))) WHERE (ROUND(((((((((rt0.c2)OR(vt0.c0)))AND(0.8236490839660369)))OR(vt0.lid)))AND(vt0.lid)), (vt0.c0 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((rt0.c2)OR(vt0.c0)))AND(0.8236490839660369)))OR(vt0.lid)))AND(vt0.lid)), (vt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND('1359116371')))AND(vt0.lid)))&((vt0.lid IN (0.03285378544403783)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND('1359116371')))AND(vt0.lid)))&((vt0.lid IN (0.03285378544403783)))) WHERE (ROUND(((((((((rt0.c2)OR(vt0.c0)))AND(0.8236490839660369)))OR(vt0.lid)))AND(vt0.lid)), (vt0.c0 IN (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ROUND(((((((((rt0.c2)OR(vt0.c0)))AND(0.8236490839660369)))OR(vt0.lid)))AND(vt0.lid)), (vt0.c0 IN (rt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND('1359116371')))AND(vt0.lid)))&((vt0.lid IN (0.03285378544403783)))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)))AND('1359116371')))AND(vt0.lid)))&((vt0.lid IN (0.03285378544403783)))) WHERE (ROUND(((((((((rt0.c2)OR(vt0.c0)))AND(0.8236490839660369)))OR(vt0.lid)))AND(vt0.lid)), (vt0.c0 IN (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON 0X45d1542e INNER JOIN vt0 ON ((((rt0.c2)|(rt0.c2)))>((vt0.c0 IN (rt0.c0)))) WHERE (TIME(rt0.c2, ((vt1.c1)<>(vt0.lid)), ((vt1.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c2, ((vt1.c1)!=(vt0.lid)), ((vt1.c0)>(vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON 0X45d1542e INNER JOIN vt0 ON ((((rt0.c2)|(rt0.c2)))>((vt0.c0 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON 0X45d1542e INNER JOIN vt0 ON ((((rt0.c2)|(rt0.c2)))>((vt0.c0 IN (rt0.c0)))) WHERE (TIME(rt0.c2, ((vt1.c1)<>(vt0.lid)), ((vt1.c0)>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(rt0.c2, ((vt1.c1)!=(vt0.lid)), ((vt1.c0)>(vt0.c0)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON 0X45d1542e INNER JOIN vt0 ON ((((rt0.c2)|(rt0.c2)))>((vt0.c0 IN (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON 0X45d1542e INNER JOIN vt0 ON ((((rt0.c2)|(rt0.c2)))>((vt0.c0 IN (rt0.c0)))) WHERE (TIME(rt0.c2, ((vt1.c1)<>(vt0.lid)), ((vt1.c0)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(((vt0.lid) NOTNULL))))AND(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(((vt0.lid) NOTNULL))))AND(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(((vt0.lid) NOTNULL))))AND(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)OR(((vt0.lid) NOTNULL))))AND(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c1)OR(((vt0.lid) NOTNULL))))AND(CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON json_remove(rt0.c0 COLLATE NOCASE, CASE 0.5801188384901226  WHEN rt0.c2 THEN rt0.c1 END) WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_remove(rt0.c0 COLLATE NOCASE, CASE 0.5801188384901226  WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON json_remove(rt0.c0 COLLATE NOCASE, CASE 0.5801188384901226  WHEN rt0.c2 THEN rt0.c1 END) WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((x'')) AND ((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON json_remove(rt0.c0 COLLATE NOCASE, CASE 0.5801188384901226  WHEN rt0.c2 THEN rt0.c1 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON json_remove(rt0.c0 COLLATE NOCASE, CASE 0.5801188384901226  WHEN rt0.c2 THEN rt0.c1 END) WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt0.c2) IS FALSE)))));
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) WHERE (x'') ORDER BY -569349781 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) ORDER BY -569349781 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) WHERE (x'') ORDER BY -569349781 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON ((CAST(vt0.c0 AS TEXT)) IS TRUE) ORDER BY -569349781 DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.12102323552093097  WHEN '393070070' COLLATE BINARY THEN (~ (x'')) WHEN ABS(rt0.c2) THEN ((rt0.c1)%(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c0) ISNULL) END) ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) ELSE (((rt0.c1))=((rt0.c2))) END DESC  NULLS FIRST, CAST(rt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.12102323552093097  WHEN '393070070' COLLATE BINARY THEN (~ (x'')) WHEN ABS(rt0.c2) THEN ((rt0.c1)%(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) ELSE (((rt0.c1))=((rt0.c2))) END DESC  NULLS FIRST, CAST(rt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.12102323552093097  WHEN '393070070' COLLATE BINARY THEN (~ (x'')) WHEN ABS(rt0.c2) THEN ((rt0.c1)%(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c0) ISNULL) END) ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) ELSE (((rt0.c1))=((rt0.c2))) END DESC  NULLS FIRST, CAST(rt0.c0 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.12102323552093097  WHEN '393070070' COLLATE BINARY THEN (~ (x'')) WHEN ABS(rt0.c2) THEN ((rt0.c1)%(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) ELSE (((rt0.c1))=((rt0.c2))) END DESC  NULLS FIRST, CAST(rt0.c0 AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE 0.12102323552093097  WHEN '393070070' COLLATE BINARY THEN (~ (x'')) WHEN ABS(rt0.c2) THEN ((rt0.c1)%(rt0.c0)) WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c0) ISNULL) END) ORDER BY CASE (+ (rt0.c2))  WHEN rt0.c0 THEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((x''))) ELSE (((rt0.c1))=((rt0.c2))) END DESC  NULLS FIRST, CAST(rt0.c0 AS BLOB);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((vt0.c0)|(vt0.c0)), CAST(rt0.c1 AS INTEGER), (NOT (vt0.c0))))<((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.lid END, (((vt1.c0))==((vt0.lid))), vt1.c1))) CROSS JOIN vt0 ON ((((((((((((((vt0.lid)<<(vt0.lid)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((vt0.c0) IS TRUE))))AND(LOWER(vt0.lid))))AND(load_extension(rt0.c1, '-1929709496'))))AND(CASE vt0.lid  WHEN vt1.c1 THEN rt0.c2 ELSE vt0.lid END)))AND(((rt0.c1)LIKE(vt0.lid)))) WHERE (((((((((rt0.c1)AND(((rt0.c0) NOTNULL))))OR((((vt1.c0, vt0.lid, rt0.c0))<((vt0.lid, vt0.lid, vt0.lid))))))OR(rt0.c2)))AND((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(((rt0.c0) NOTNULL))))OR((((vt1.c0, vt0.lid, rt0.c0))<((vt0.lid, vt0.lid, vt0.lid))))))OR(rt0.c2)))AND((vt0.lid IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((vt0.c0)|(vt0.c0)), CAST(rt0.c1 AS INTEGER), (NOT (vt0.c0))))<((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.lid END, (((vt1.c0))==((vt0.lid))), vt1.c1))) CROSS JOIN vt0 ON ((((((((((((((vt0.lid)<<(vt0.lid)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((vt0.c0) IS TRUE))))AND(LOWER(vt0.lid))))AND(load_extension(rt0.c1, '-1929709496'))))AND(CASE vt0.lid  WHEN vt1.c1 THEN rt0.c2 ELSE vt0.lid END)))AND(((rt0.c1)LIKE(vt0.lid)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((vt0.c0)|(vt0.c0)), CAST(rt0.c1 AS INTEGER), (NOT (vt0.c0))))<((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.lid END, (((vt1.c0))==((vt0.lid))), vt1.c1))) CROSS JOIN vt0 ON ((((((((((((((vt0.lid)<<(vt0.lid)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((vt0.c0) IS TRUE))))AND(LOWER(vt0.lid))))AND(load_extension(rt0.c1, '-1929709496'))))AND(CASE vt0.lid  WHEN vt1.c1 THEN rt0.c2 ELSE vt0.lid END)))AND(((rt0.c1)LIKE(vt0.lid)))) WHERE (((((((((rt0.c1)AND(((rt0.c0) NOTNULL))))OR((((vt1.c0, vt0.lid, rt0.c0))<((vt0.lid, vt0.lid, vt0.lid))))))OR(rt0.c2)))AND((vt0.lid IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c1)AND(((rt0.c0) NOTNULL))))OR((((vt1.c0, vt0.lid, rt0.c0))<((vt0.lid, vt0.lid, vt0.lid))))))OR(rt0.c2)))AND((vt0.lid IN ())))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((((vt0.c0)|(vt0.c0)), CAST(rt0.c1 AS INTEGER), (NOT (vt0.c0))))<((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.lid END, (((vt1.c0))==((vt0.lid))), vt1.c1))) CROSS JOIN vt0 ON ((((((((((((((vt0.lid)<<(vt0.lid)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((vt0.c0) IS TRUE))))AND(LOWER(vt0.lid))))AND(load_extension(rt0.c1, '-1929709496'))))AND(CASE vt0.lid  WHEN vt1.c1 THEN rt0.c2 ELSE vt0.lid END)))AND(((rt0.c1)LIKE(vt0.lid)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((((vt0.c0)|(vt0.c0)), CAST(rt0.c1 AS INTEGER), (NOT (vt0.c0))))<((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c1 THEN vt0.c0 WHEN vt1.c1 THEN vt0.lid END, (((vt1.c0))==((vt0.lid))), vt1.c1))) CROSS JOIN vt0 ON ((((((((((((((vt0.lid)<<(vt0.lid)))OR(CASE WHEN rt0.c2 THEN rt0.c2 END)))OR(((vt0.c0) IS TRUE))))AND(LOWER(vt0.lid))))AND(load_extension(rt0.c1, '-1929709496'))))AND(CASE vt0.lid  WHEN vt1.c1 THEN rt0.c2 ELSE vt0.lid END)))AND(((rt0.c1)LIKE(vt0.lid)))) WHERE (((((((((rt0.c1)AND(((rt0.c0) NOTNULL))))OR((((vt1.c0, vt0.lid, rt0.c0))<((vt0.lid, vt0.lid, vt0.lid))))))OR(rt0.c2)))AND((vt0.lid IN ()))));
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (~ (CAST(vt1.c0 AS TEXT))) WHERE (0.0015414087665546194) ORDER BY ABS(vt1.c0) COLLATE BINARY DESC, 0Xffffffffb62e4d18  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0015414087665546194) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (~ (CAST(vt1.c0 AS TEXT))) ORDER BY ABS(vt1.c0) COLLATE BINARY DESC, 0Xffffffffb62e4d18  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (~ (CAST(vt1.c0 AS TEXT))) WHERE (0.0015414087665546194) ORDER BY ABS(vt1.c0) COLLATE BINARY DESC, 0Xffffffffb62e4d18  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0015414087665546194) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (~ (CAST(vt1.c0 AS TEXT))) ORDER BY ABS(vt1.c0) COLLATE BINARY DESC, 0Xffffffffb62e4d18  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON (~ (CAST(vt1.c0 AS TEXT))) WHERE (0.0015414087665546194) ORDER BY ABS(vt1.c0) COLLATE BINARY DESC, 0Xffffffffb62e4d18  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) ISNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (x'6603');
SELECT SUM(count) FROM (SELECT ((x'6603') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'6603');
SELECT SUM(count) FROM (SELECT ((x'6603') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'6603');
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (CAST(load_extension(vt1.c0, vt1.c0) AS BLOB)) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((((NULL)OR(vt0.c0)))AND(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(vt1.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((((NULL)OR(vt0.c0)))AND(vt1.c0))))) DESC);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) WHERE (CAST(load_extension(vt1.c0, vt1.c0) AS BLOB)) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((((NULL)OR(vt0.c0)))AND(vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(vt1.c0, vt1.c0) AS BLOB)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CAST(NULL AS NUMERIC) ORDER BY (((vt1.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((((NULL)OR(vt0.c0)))AND(vt1.c0))))) DESC);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(TRIM(vt0.c0, vt0.c0) AS REAL)) ORDER BY CASE WHEN '' THEN vt1.c0 ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN '' THEN vt1.c0 ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(TRIM(vt0.c0, vt0.c0) AS REAL)) ORDER BY CASE WHEN '' THEN vt1.c0 ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.c0, vt0.c0) AS REAL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY CASE WHEN '' THEN vt1.c0 ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (CAST(TRIM(vt0.c0, vt0.c0) AS REAL)) ORDER BY CASE WHEN '' THEN vt1.c0 ELSE CAST(rt0.c0 AS NUMERIC) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (1.451921734E9) AND (vt0.lid)) IN ())) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (1.451921734E9) AND (vt0.lid)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (1.451921734E9) AND (vt0.lid)) IN ())) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (1.451921734E9) AND (vt0.lid)) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0) NOT BETWEEN (1.451921734E9) AND (vt0.lid)) IN ())) ORDER BY rt0.c2;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.lid)-(vt1.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END WHERE (json_valid(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.lid)-(vt1.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.lid)-(vt1.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END WHERE (json_valid(CAST(rt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(CAST(rt0.c0 AS REAL))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.lid)-(vt1.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON rt0.c0 LEFT OUTER JOIN vt0 ON CASE WHEN ((vt0.lid)-(vt1.c0)) THEN CASE WHEN vt0.lid THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END ELSE rt0.c0 COLLATE RTRIM END WHERE (json_valid(CAST(rt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(rt0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)))AND(x''))) ORDER BY '2131261841'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)))AND(x''))) IS TRUE)  as count FROM vt1 ORDER BY '2131261841'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)))AND(x''))) ORDER BY '2131261841'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)))AND(x''))) IS TRUE)  as count FROM vt1 ORDER BY '2131261841'  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)))AND(x''))) ORDER BY '2131261841'  NULLS LAST;
SELECT * FROM rt0 WHERE (INSTR((rt0.c2 IN ()), CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((INSTR((rt0.c2 IN ()), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (INSTR((rt0.c2 IN ()), CAST(rt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((INSTR((rt0.c2 IN ()), CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (INSTR((rt0.c2 IN ()), CAST(rt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((CAST(vt0.lid AS INTEGER), CAST(vt1.c0 AS BLOB), (NOT (vt0.c0)), CASE WHEN vt1.c1 THEN vt0.lid END, CAST(vt1.c0 AS INTEGER)))==((((vt1.c1)-(vt0.lid)), (((vt1.c0))>=((vt1.c0))), NULL, ((vt0.c0)IS(vt1.c1)), ((vt0.c0)<=(vt0.c0)))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND ('Mstart of day7wM')))&((vt1.c0 IN (vt1.c1)))) ASC, CAST(vt1.c1 COLLATE NOCASE AS REAL)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.lid END)) AND ((vt0.lid))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.lid AS INTEGER), CAST(vt1.c0 AS BLOB), (NOT (vt0.c0)), CASE WHEN vt1.c1 THEN vt0.lid END, CAST(vt1.c0 AS INTEGER)))=((((vt1.c1)-(vt0.lid)), (((vt1.c0))>=((vt1.c0))), NULL, ((vt0.c0)IS(vt1.c1)), ((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND ('Mstart of day7wM')))&((vt1.c0 IN (vt1.c1)))) ASC, CAST(vt1.c1 COLLATE NOCASE AS REAL)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.lid END)) AND ((vt0.lid))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((CAST(vt0.lid AS INTEGER), CAST(vt1.c0 AS BLOB), (NOT (vt0.c0)), CASE WHEN vt1.c1 THEN vt0.lid END, CAST(vt1.c0 AS INTEGER)))==((((vt1.c1)-(vt0.lid)), (((vt1.c0))>=((vt1.c0))), NULL, ((vt0.c0)IS(vt1.c1)), ((vt0.c0)<=(vt0.c0)))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND ('Mstart of day7wM')))&((vt1.c0 IN (vt1.c1)))) ASC, CAST(vt1.c1 COLLATE NOCASE AS REAL)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.lid END)) AND ((vt0.lid))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.lid AS INTEGER), CAST(vt1.c0 AS BLOB), (NOT (vt0.c0)), CASE WHEN vt1.c1 THEN vt0.lid END, CAST(vt1.c0 AS INTEGER)))=((((vt1.c1)-(vt0.lid)), (((vt1.c0))>=((vt1.c0))), NULL, ((vt0.c0)IS(vt1.c1)), ((vt0.c0)<=(vt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND ('Mstart of day7wM')))&((vt1.c0 IN (vt1.c1)))) ASC, CAST(vt1.c1 COLLATE NOCASE AS REAL)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.lid END)) AND ((vt0.lid))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE ((((CAST(vt0.lid AS INTEGER), CAST(vt1.c0 AS BLOB), (NOT (vt0.c0)), CASE WHEN vt1.c1 THEN vt0.lid END, CAST(vt1.c0 AS INTEGER)))==((((vt1.c1)-(vt0.lid)), (((vt1.c0))>=((vt1.c0))), NULL, ((vt0.c0)IS(vt1.c1)), ((vt0.c0)<=(vt0.c0)))))) ORDER BY ((((vt1.c1) NOT BETWEEN (vt1.c0) AND ('Mstart of day7wM')))&((vt1.c0 IN (vt1.c1)))) ASC, CAST(vt1.c1 COLLATE NOCASE AS REAL)  NULLS LAST, (((vt1.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.lid END)) AND ((vt0.lid))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)AND((('-1369054383') NOT BETWEEN (x'') AND (rt0.c0)))))AND(UPPER(rt0.c2)))  NULLS FIRST, (- (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND((('-1369054383') NOT BETWEEN (x'') AND (rt0.c0)))))AND(UPPER(rt0.c2)))  NULLS FIRST, (- (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)AND((('-1369054383') NOT BETWEEN (x'') AND (rt0.c0)))))AND(UPPER(rt0.c2)))  NULLS FIRST, (- (rt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)AND((('-1369054383') NOT BETWEEN (x'') AND (rt0.c0)))))AND(UPPER(rt0.c2)))  NULLS FIRST, (- (rt0.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY ((((rt0.c2)AND((('-1369054383') NOT BETWEEN (x'') AND (rt0.c0)))))AND(UPPER(rt0.c2)))  NULLS FIRST, (- (rt0.c1)) COLLATE NOCASE;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY ('姙㝨8' IN ()) DESC, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ('姙㝨8' IN ()) DESC, LAST_INSERT_ROWID() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY ('姙㝨8' IN ()) DESC, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ('姙㝨8' IN ()) DESC, LAST_INSERT_ROWID() ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE RTRIM) ORDER BY ('姙㝨8' IN ()) DESC, LAST_INSERT_ROWID() ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST, (- ((+ (0.5349508661340328))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (- ((+ (0.5349508661340328))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST, (- ((+ (0.5349508661340328))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST, (- ((+ (0.5349508661340328))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((+ (CAST(rt0.c0 AS BLOB)))) ORDER BY rt0.c2  NULLS FIRST, (- ((+ (0.5349508661340328))))  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE));
SELECT * FROM vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE));
SELECT * FROM vt1 NOT INDEXED WHERE (((vt1.c0 COLLATE RTRIM) ISNULL)) ORDER BY ((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((- (vt0.c0)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((- (vt0.c0)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((- (vt0.c0)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)) ORDER BY (((- (vt0.c0)))OR(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (TYPEOF(0.005688575222010828));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.005688575222010828)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TYPEOF(0.005688575222010828));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(0.005688575222010828)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (TYPEOF(0.005688575222010828));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt0.lid AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt0.lid AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.lid AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (((CAST(vt0.lid AS INTEGER)) IS FALSE));
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.43719934138292527) IS TRUE) INNER JOIN rt0 ON (NOT (vt1.c1)) COLLATE RTRIM WHERE (CAST(((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)) AS BLOB)) ORDER BY (((- (0.9434749281562865))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((0.43719934138292527) IS TRUE) INNER JOIN rt0 ON (NOT (vt1.c1)) COLLATE RTRIM ORDER BY (((- (0.9434749281562865))) ISNULL) DESC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.43719934138292527) IS TRUE) INNER JOIN rt0 ON (NOT (vt1.c1)) COLLATE RTRIM WHERE (CAST(((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)) AS BLOB)) ORDER BY (((- (0.9434749281562865))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((0.43719934138292527) IS TRUE) INNER JOIN rt0 ON (NOT (vt1.c1)) COLLATE RTRIM ORDER BY (((- (0.9434749281562865))) ISNULL) DESC);
SELECT * FROM vt1 FULL OUTER JOIN vt0 ON ((0.43719934138292527) IS TRUE) INNER JOIN rt0 ON (NOT (vt1.c1)) COLLATE RTRIM WHERE (CAST(((((((((rt0.c0)AND(vt1.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(vt1.c1)) AS BLOB)) ORDER BY (((- (0.9434749281562865))) ISNULL) DESC;
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((((((NULL)OR(((((vt0.lid)AND(vt0.c0)))AND('l{})')))))OR(((vt0.c0)>=(vt1.c1)))))OR(TRIM(DISTINCT rt0.c0, vt0.c0))))AND(((vt0.lid)>(vt1.c1)))) FULL OUTER JOIN vt0 ON ((PRINTF(vt0.lid)) NOT BETWEEN (rt0.c2) AND ((rt0.c2 IN ()))) WHERE ((~ (((vt1.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((((((NULL)OR(((((vt0.lid)AND(vt0.c0)))AND('l{})')))))OR(((vt0.c0)>=(vt1.c1)))))OR(TRIM(DISTINCT rt0.c0, vt0.c0))))AND(((vt0.lid)>(vt1.c1)))) FULL OUTER JOIN vt0 ON ((PRINTF(vt0.lid)) NOT BETWEEN (rt0.c2) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN rt0 ON ((((((((NULL)OR(((((vt0.lid)AND(vt0.c0)))AND('l{})')))))OR(((vt0.c0)>=(vt1.c1)))))OR(TRIM(DISTINCT rt0.c0, vt0.c0))))AND(((vt0.lid)>(vt1.c1)))) FULL OUTER JOIN vt0 ON ((PRINTF(vt0.lid)) NOT BETWEEN (rt0.c2) AND ((rt0.c2 IN ()))) WHERE ((~ (((vt1.c1)IS(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c1)IS(vt0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((((((NULL)OR(((((vt0.lid)AND(vt0.c0)))AND('l{})')))))OR(((vt0.c0)>=(vt1.c1)))))OR(TRIM(DISTINCT rt0.c0, vt0.c0))))AND(((vt0.lid)>(vt1.c1)))) FULL OUTER JOIN vt0 ON ((PRINTF(vt0.lid)) NOT BETWEEN (rt0.c2) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN vt0.lid END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN vt0.lid END AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN vt0.lid END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c1 THEN vt0.lid END AS BLOB)) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c1 THEN vt0.lid END AS BLOB));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)|(vt1.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (((vt1.c1)=(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)|(vt1.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)==(vt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)|(vt1.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (((vt1.c1)=(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c1)|(vt1.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)==(vt1.c1)) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)|(vt1.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN ((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) ELSE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END) ORDER BY (((vt1.c1)=(vt1.c1)) IN ()) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(vt1.c0)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(vt1.c0));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (vt0.lid)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.lid)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((~ (vt0.lid)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((vt1.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS TEXT))OR((vt1.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((vt1.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c0 AS TEXT))OR((vt1.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((CAST(vt1.c0 AS TEXT))OR((vt1.c1 IN ()))))AND(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (MAX(TRIM(vt0.c0), vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((MAX(TRIM(vt0.c0), vt1.c1)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (MAX(TRIM(vt0.c0), vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((MAX(TRIM(vt0.c0), vt1.c1)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (MAX(TRIM(vt0.c0), vt1.c1));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>(((+ (vt1.c0)))))) ORDER BY CASE UNLIKELY(vt1.c0)  WHEN vt1.c0 THEN ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1) NOT BETWEEN ('oV') AND (vt1.c1)) WHEN HEX(DISTINCT vt1.c1) THEN CAST(vt1.c0 AS REAL) END DESC, ((vt1.c0)IS(vt1.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL)))>(((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE UNLIKELY(vt1.c0)  WHEN vt1.c0 THEN ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1) NOT BETWEEN ('oV') AND (vt1.c1)) WHEN HEX(DISTINCT vt1.c1) THEN CAST(vt1.c0 AS REAL) END DESC, ((vt1.c0)IS(vt1.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>(((+ (vt1.c0)))))) ORDER BY CASE UNLIKELY(vt1.c0)  WHEN vt1.c0 THEN ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1) NOT BETWEEN ('oV') AND (vt1.c1)) WHEN HEX(DISTINCT vt1.c1) THEN CAST(vt1.c0 AS REAL) END DESC, ((vt1.c0)IS(vt1.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) ISNULL)))>(((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY CASE UNLIKELY(vt1.c0)  WHEN vt1.c0 THEN ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1) NOT BETWEEN ('oV') AND (vt1.c1)) WHEN HEX(DISTINCT vt1.c1) THEN CAST(vt1.c0 AS REAL) END DESC, ((vt1.c0)IS(vt1.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0) ISNULL)))>(((+ (vt1.c0)))))) ORDER BY CASE UNLIKELY(vt1.c0)  WHEN vt1.c0 THEN ((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)) WHEN ((vt1.c0) NOT NULL) THEN ((vt1.c1) NOT BETWEEN ('oV') AND (vt1.c1)) WHEN HEX(DISTINCT vt1.c1) THEN CAST(vt1.c0 AS REAL) END DESC, ((vt1.c0)IS(vt1.c1)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT json_patch(rt0.c2, vt0.lid)) RIGHT OUTER JOIN vt1 ON (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(((rt0.c2)GLOB(vt1.c1)))) WHERE (((0.6215942944933368) NOT NULL)) ORDER BY ((((((((UNLIKELY(DISTINCT vt0.c0))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt0.lid)*(NULL)))))OR(CAST(rt0.c1 AS TEXT))))AND(json_type(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.6215942944933368) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT json_patch(rt0.c2, vt0.lid)) RIGHT OUTER JOIN vt1 ON (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(((rt0.c2)GLOB(vt1.c1)))) ORDER BY ((((((((UNLIKELY(DISTINCT vt0.c0))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt0.lid)*(NULL)))))OR(CAST(rt0.c1 AS TEXT))))AND(json_type(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT json_patch(rt0.c2, vt0.lid)) RIGHT OUTER JOIN vt1 ON (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(((rt0.c2)GLOB(vt1.c1)))) WHERE (((0.6215942944933368) NOT NULL)) ORDER BY ((((((((UNLIKELY(DISTINCT vt0.c0))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt0.lid)*(NULL)))))OR(CAST(rt0.c1 AS TEXT))))AND(json_type(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.6215942944933368) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT json_patch(rt0.c2, vt0.lid)) RIGHT OUTER JOIN vt1 ON (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(((rt0.c2)GLOB(vt1.c1)))) ORDER BY ((((((((UNLIKELY(DISTINCT vt0.c0))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt0.lid)*(NULL)))))OR(CAST(rt0.c1 AS TEXT))))AND(json_type(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON UNLIKELY(DISTINCT json_patch(rt0.c2, vt0.lid)) RIGHT OUTER JOIN vt1 ON (((((x'')) NOT BETWEEN ((rt0.c2)) AND ((vt0.c0))))>>(((rt0.c2)GLOB(vt1.c1)))) WHERE (((0.6215942944933368) NOT NULL)) ORDER BY ((((((((UNLIKELY(DISTINCT vt0.c0))AND(((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))))AND(((vt0.lid)*(NULL)))))OR(CAST(rt0.c1 AS TEXT))))AND(json_type(rt0.c1))) DESC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0)))AND(0.4785703533255494 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))AND(0.4785703533255494 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0)))AND(0.4785703533255494 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((- (vt1.c0)))AND(0.4785703533255494 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((- (vt1.c0)))AND(0.4785703533255494 COLLATE NOCASE)));
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c1 IN (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c1) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))OR((vt1.c1 IN (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c1) IS FALSE))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c1 IN (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c1) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt1.c0 AS REAL))OR((vt1.c1 IN (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c1) IS FALSE))))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((((CAST(vt1.c0 AS REAL))OR((vt1.c1 IN (vt1.c0)))))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1))))>((((vt1.c1) IS FALSE))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY IFNULL(((vt1.c1) IS FALSE), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)  NULLS LAST, ((CASE WHEN 'rC}n+' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(((vt1.c1) IS FALSE), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)  NULLS LAST, ((CASE WHEN 'rC}n+' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY IFNULL(((vt1.c1) IS FALSE), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)  NULLS LAST, ((CASE WHEN 'rC}n+' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY IFNULL(((vt1.c1) IS FALSE), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)  NULLS LAST, ((CASE WHEN 'rC}n+' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOTNULL) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT NULL) AS NUMERIC)) ORDER BY IFNULL(((vt1.c1) IS FALSE), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)  NULLS LAST, ((CASE WHEN 'rC}n+' THEN vt1.c0 WHEN vt1.c0 THEN x'' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END) NOTNULL) DESC;
SELECT * FROM vt1, rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(((rt0.c1) NOTNULL) AS NUMERIC), (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS NUMERIC), (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((NOT (vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(((rt0.c1) NOTNULL) AS NUMERIC), (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c1) NOTNULL) AS NUMERIC), (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((NOT (vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE ((~ (CAST(rt0.c2 AS NUMERIC)))) ORDER BY CAST(((rt0.c1) NOTNULL) AS NUMERIC), (((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND ((NOT (vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)!=(vt1.c1)))GLOB(((rt0.c2)OR(vt0.lid)))) WHERE ((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt0.lid END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt0.lid END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)<>(vt1.c1)))GLOB(((rt0.c2)OR(vt0.lid)))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)!=(vt1.c1)))GLOB(((rt0.c2)OR(vt0.lid)))) WHERE ((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt0.lid END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt0.lid END))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)<>(vt1.c1)))GLOB(((rt0.c2)OR(vt0.lid)))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC);
SELECT ALL * FROM rt0, vt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c0)!=(vt1.c1)))GLOB(((rt0.c2)OR(vt0.lid)))) WHERE ((+ (CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt0.lid END))) ORDER BY ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND (((rt0.c1) BETWEEN (vt0.c0) AND (vt1.c1)))) DESC;
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0 IN (vt0.lid)))AND(x'')))AND((vt1.c0 IN ())))) ORDER BY CAST((vt1.c1 IN (vt1.c1)) AS REAL) ASC, (~ (LTRIM(vt1.c1))) DESC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR('' COLLATE RTRIM)))AND(LIKELY(DISTINCT 0Xffffffffb83914c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN (vt0.lid)))AND(x'')))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c1)) AS REAL) ASC, (~ (LTRIM(vt1.c1))) DESC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR('' COLLATE RTRIM)))AND(LIKELY(DISTINCT 0xffffffffb83914c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0 IN (vt0.lid)))AND(x'')))AND((vt1.c0 IN ())))) ORDER BY CAST((vt1.c1 IN (vt1.c1)) AS REAL) ASC, (~ (LTRIM(vt1.c1))) DESC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR('' COLLATE RTRIM)))AND(LIKELY(DISTINCT 0Xffffffffb83914c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0 IN (vt0.lid)))AND(x'')))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST((vt1.c1 IN (vt1.c1)) AS REAL) ASC, (~ (LTRIM(vt1.c1))) DESC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR('' COLLATE RTRIM)))AND(LIKELY(DISTINCT 0xffffffffb83914c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE ((((((vt1.c0 IN (vt0.lid)))AND(x'')))AND((vt1.c0 IN ())))) ORDER BY CAST((vt1.c1 IN (vt1.c1)) AS REAL) ASC, (~ (LTRIM(vt1.c1))) DESC  NULLS LAST, ((((CAST(vt0.c0 AS REAL))OR('' COLLATE RTRIM)))AND(LIKELY(DISTINCT 0Xffffffffb83914c0)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c0 END) IS TRUE));
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c1))))) ORDER BY (- (TRIM(rt0.c2, rt0.c1)))  NULLS LAST, ((rt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- (TRIM(rt0.c2, rt0.c1)))  NULLS LAST, ((rt0.c0) IS TRUE));
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c1))))) ORDER BY (- (TRIM(rt0.c2, rt0.c1)))  NULLS LAST, ((rt0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (- (TRIM(rt0.c2, rt0.c1)))  NULLS LAST, ((rt0.c0) IS TRUE));
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c2)&(rt0.c1))))) ORDER BY (- (TRIM(rt0.c2, rt0.c1)))  NULLS LAST, ((rt0.c0) IS TRUE);
SELECT ALL * FROM vt0 WHERE (((x'3aa6') BETWEEN (CASE WHEN vt0.lid THEN NULL WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END) AND (((vt0.lid)%(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'3aa6') BETWEEN (CASE WHEN vt0.lid THEN NULL WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END) AND (((vt0.lid)%(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'3aa6') BETWEEN (CASE WHEN vt0.lid THEN NULL WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END) AND (((vt0.lid)%(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((x'3aa6') BETWEEN (CASE WHEN vt0.lid THEN NULL WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END) AND (((vt0.lid)%(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'3aa6') BETWEEN (CASE WHEN vt0.lid THEN NULL WHEN vt0.c0 THEN vt0.lid WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END) AND (((vt0.lid)%(vt0.lid)))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c1 END) ISNULL) WHERE (0.5051207069896614);
SELECT SUM(count) FROM (SELECT ((0.5051207069896614) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c1 END) ISNULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c1 END) ISNULL) WHERE (0.5051207069896614);
SELECT SUM(count) FROM (SELECT ((0.5051207069896614) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c1 END) ISNULL));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c2 THEN vt1.c1 END) ISNULL) WHERE (0.5051207069896614);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY 'Q!''' ASC  NULLS FIRST, CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((vt0.c0)IS NOT(vt0.lid)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY 'Q!''' ASC  NULLS FIRST, CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((vt0.c0)IS NOT(vt0.lid)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY 'Q!''' ASC  NULLS FIRST, CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((vt0.c0)IS NOT(vt0.lid)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY 'Q!''' ASC  NULLS FIRST, CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((vt0.c0)IS NOT(vt0.lid)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM) ORDER BY 'Q!''' ASC  NULLS FIRST, CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((vt0.c0)IS NOT(vt0.lid)) THEN ((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2)OR(vt1.c1)))AND(vt1.c0)))/(((NULL) NOT NULL)))) ORDER BY ((vt1.c1 COLLATE RTRIM) BETWEEN (((((0.1663331308752073)AND(vt0.c0)))OR(vt1.c0))) AND ((vt1.c0 IN ())))  NULLS LAST, (+ ('^{7%K}'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt1.c1)))AND(vt1.c0)))/(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c1 COLLATE RTRIM) BETWEEN (((((0.1663331308752073)AND(vt0.c0)))OR(vt1.c0))) AND ((vt1.c0 IN ())))  NULLS LAST, (+ ('^{7%K}'))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2)OR(vt1.c1)))AND(vt1.c0)))/(((NULL) NOT NULL)))) ORDER BY ((vt1.c1 COLLATE RTRIM) BETWEEN (((((0.1663331308752073)AND(vt0.c0)))OR(vt1.c0))) AND ((vt1.c0 IN ())))  NULLS LAST, (+ ('^{7%K}'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(vt1.c1)))AND(vt1.c0)))/(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((vt1.c1 COLLATE RTRIM) BETWEEN (((((0.1663331308752073)AND(vt0.c0)))OR(vt1.c0))) AND ((vt1.c0 IN ())))  NULLS LAST, (+ ('^{7%K}'))  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((rt0.c2)OR(vt1.c1)))AND(vt1.c0)))/(((NULL) NOT NULL)))) ORDER BY ((vt1.c1 COLLATE RTRIM) BETWEEN (((((0.1663331308752073)AND(vt0.c0)))OR(vt1.c0))) AND ((vt1.c0 IN ())))  NULLS LAST, (+ ('^{7%K}'))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))))) ORDER BY ((ABS(vt1.c0)) BETWEEN (((((((((vt1.c1)OR(vt0.lid)))OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))), CASE ((vt0.lid) IS FALSE)  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN (- (vt0.lid)) WHEN (0xffffffffe39a27e8 IN ()) THEN ((vt1.c0) NOTNULL) WHEN ABS(DISTINCT vt1.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)<<(vt1.c1)) THEN ((vt1.c1)<>('180375210')) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(vt1.c0)) BETWEEN (((((((((vt1.c1)OR(vt0.lid)))OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))), CASE ((vt0.lid) IS FALSE)  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN (- (vt0.lid)) WHEN (0xffffffffe39a27e8 IN ()) THEN ((vt1.c0) NOTNULL) WHEN ABS(DISTINCT vt1.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)<<(vt1.c1)) THEN ((vt1.c1)!=('180375210')) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))))) ORDER BY ((ABS(vt1.c0)) BETWEEN (((((((((vt1.c1)OR(vt0.lid)))OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))), CASE ((vt0.lid) IS FALSE)  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN (- (vt0.lid)) WHEN (0xffffffffe39a27e8 IN ()) THEN ((vt1.c0) NOTNULL) WHEN ABS(DISTINCT vt1.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)<<(vt1.c1)) THEN ((vt1.c1)<>('180375210')) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((json((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((ABS(vt1.c0)) BETWEEN (((((((((vt1.c1)OR(vt0.lid)))OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))), CASE ((vt0.lid) IS FALSE)  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN (- (vt0.lid)) WHEN (0xffffffffe39a27e8 IN ()) THEN ((vt1.c0) NOTNULL) WHEN ABS(DISTINCT vt1.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)<<(vt1.c1)) THEN ((vt1.c1)!=('180375210')) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (json((((vt0.c0, vt0.lid, vt0.c0)) BETWEEN ((vt1.c0, vt0.lid, vt0.c0)) AND ((vt0.c0, vt0.c0, vt1.c1))))) ORDER BY ((ABS(vt1.c0)) BETWEEN (((((((((vt1.c1)OR(vt0.lid)))OR(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))) AND (CAST(vt1.c0 AS INTEGER))), CASE ((vt0.lid) IS FALSE)  WHEN ((vt1.c0)GLOB(vt0.c0)) THEN (- (vt0.lid)) WHEN (0xffffffffe39a27e8 IN ()) THEN ((vt1.c0) NOTNULL) WHEN ABS(DISTINCT vt1.c0) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0)<<(vt1.c1)) THEN ((vt1.c1)<>('180375210')) WHEN ((((((((vt1.c0)OR(vt1.c0)))OR(vt0.lid)))AND(NULL)))AND(vt1.c0)) THEN ((vt1.c0)IS(vt1.c0)) END;
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>((x'' IN ())))) ORDER BY vt1.c0, (((vt0.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((vt0.lid))) DESC, (((((((((~ (0xffffffffd689cc93)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.lid)<<('-660843076')))))AND(CASE WHEN vt0.lid THEN vt1.c0 END)))OR(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)!=((x'' IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, (((vt0.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((vt0.lid))) DESC, (((((((((~ (0xffffffffd689cc93)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.lid)<<('-660843076')))))AND(CASE WHEN vt0.lid THEN vt1.c0 END)))OR(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>((x'' IN ())))) ORDER BY vt1.c0, (((vt0.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((vt0.lid))) DESC, (((((((((~ (0xffffffffd689cc93)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.lid)<<('-660843076')))))AND(CASE WHEN vt0.lid THEN vt1.c0 END)))OR(((vt1.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)!=((x'' IN ())))) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt1.c0, (((vt0.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((vt0.lid))) DESC, (((((((((~ (0xffffffffd689cc93)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.lid)<<('-660843076')))))AND(CASE WHEN vt0.lid THEN vt1.c0 END)))OR(((vt1.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)<>((x'' IN ())))) ORDER BY vt1.c0, (((vt0.c0)) BETWEEN ((((vt1.c1) IS FALSE))) AND ((vt0.lid))) DESC, (((((((((~ (0xffffffffd689cc93)))AND(vt1.c0 COLLATE RTRIM)))AND(((vt0.lid)<<('-660843076')))))AND(CASE WHEN vt0.lid THEN vt1.c0 END)))OR(((vt1.c0) NOTNULL))) DESC;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2 IN ()), (vt0.lid IN ()), vt1.c1))<>((((rt0.c2) NOTNULL), CAST(vt1.c1 AS BLOB), ((rt0.c2)AND(vt0.lid)))))) ORDER BY (('1857054058') BETWEEN (((vt1.c0) NOT NULL)) AND ((rt0.c2 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ()), (vt0.lid IN ()), vt1.c1))<>((((rt0.c2) NOTNULL), CAST(vt1.c1 AS BLOB), ((rt0.c2)AND(vt0.lid)))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (('1857054058') BETWEEN (((vt1.c0) NOT NULL)) AND ((rt0.c2 IN (rt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2 IN ()), (vt0.lid IN ()), vt1.c1))<>((((rt0.c2) NOTNULL), CAST(vt1.c1 AS BLOB), ((rt0.c2)AND(vt0.lid)))))) ORDER BY (('1857054058') BETWEEN (((vt1.c0) NOT NULL)) AND ((rt0.c2 IN (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 IN ()), (vt0.lid IN ()), vt1.c1))<>((((rt0.c2) NOTNULL), CAST(vt1.c1 AS BLOB), ((rt0.c2)AND(vt0.lid)))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (('1857054058') BETWEEN (((vt1.c0) NOT NULL)) AND ((rt0.c2 IN (rt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((rt0.c2 IN ()), (vt0.lid IN ()), vt1.c1))<>((((rt0.c2) NOTNULL), CAST(vt1.c1 AS BLOB), ((rt0.c2)AND(vt0.lid)))))) ORDER BY (('1857054058') BETWEEN (((vt1.c0) NOT NULL)) AND ((rt0.c2 IN (rt0.c0))));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.lid)GLOB(rt0.c0)) COLLATE RTRIM WHERE ((- (((vt0.lid) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.lid) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.lid)GLOB(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.lid)GLOB(rt0.c0)) COLLATE RTRIM WHERE ((- (((vt0.lid) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.lid) BETWEEN (rt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((vt0.lid)GLOB(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN rt0 ON ((vt0.lid)GLOB(rt0.c0)) COLLATE RTRIM WHERE ((- (((vt0.lid) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c1)<<(vt1.c0)) IN ())) ORDER BY (((vt1.c1 IN (vt0.c0, vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))) AND (((vt1.c0)=(vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)<<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c1 IN (vt0.c0, vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))) AND (((vt1.c0)==(vt0.lid)))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c1)<<(vt1.c0)) IN ())) ORDER BY (((vt1.c1 IN (vt0.c0, vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))) AND (((vt1.c0)=(vt0.lid)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)<<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c1 IN (vt0.c0, vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))) AND (((vt1.c0)==(vt0.lid)))) ASC);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE ((((vt1.c1)<<(vt1.c0)) IN ())) ORDER BY (((vt1.c1 IN (vt0.c0, vt1.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt0.c0))) AND (((vt1.c0)=(vt0.lid)))) ASC;
SELECT * FROM vt1, vt0, rt0 WHERE ('') ORDER BY rt0.c2, (((+ (rt0.c2)))<<(((((rt0.c0)AND(rt0.c0)))AND('1339174817'))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c2, (((+ (rt0.c2)))<<(((((rt0.c0)AND(rt0.c0)))AND('1339174817')))));
SELECT * FROM vt1, vt0, rt0 WHERE ('') ORDER BY rt0.c2, (((+ (rt0.c2)))<<(((((rt0.c0)AND(rt0.c0)))AND('1339174817'))));
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY rt0.c2, (((+ (rt0.c2)))<<(((((rt0.c0)AND(rt0.c0)))AND('1339174817')))));
SELECT * FROM vt1, vt0, rt0 WHERE ('') ORDER BY rt0.c2, (((+ (rt0.c2)))<<(((((rt0.c0)AND(rt0.c0)))AND('1339174817'))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (vt0.lid);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((x'' IN ()))LIKE(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((x'' IN ()))LIKE(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))LIKE(rt0.c0))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((x'' IN ()))LIKE(rt0.c0)));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0 WHERE (MIN(rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((MIN(rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MIN(rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((MIN(rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (MIN(rt0.c1, CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN rt0.c2 ELSE rt0.c0 END));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.lid) AND (((vt0.lid)LIKE(vt0.lid))))) ORDER BY ((CAST(vt0.lid AS INTEGER)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.lid) AND (((vt0.lid)LIKE(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.lid AS INTEGER)) NOT NULL));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.lid) AND (((vt0.lid)LIKE(vt0.lid))))) ORDER BY ((CAST(vt0.lid AS INTEGER)) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.lid) AND (((vt0.lid)LIKE(vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.lid AS INTEGER)) NOT NULL));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (vt0.lid) AND (((vt0.lid)LIKE(vt0.lid))))) ORDER BY ((CAST(vt0.lid AS INTEGER)) NOT NULL);
SELECT ALL * FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.lid)) WHEN (- (vt0.c0)) THEN (x'' IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.lid)) WHEN (- (vt0.c0)) THEN (x'' IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.lid)) WHEN (- (vt0.c0)) THEN (x'' IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.lid)) WHEN (- (vt0.c0)) THEN (x'' IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.lid COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN (- (vt0.lid)) WHEN (- (vt0.c0)) THEN (x'' IN (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid)) THEN CAST(vt0.c0 AS BLOB) ELSE ((vt0.lid) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(LOWER(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(LOWER(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(LOWER(DISTINCT rt0.c1)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(LOWER(DISTINCT rt0.c1))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (UNLIKELY(LOWER(DISTINCT rt0.c1)));
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT * FROM vt1, rt0, vt0 WHERE (rt0.c2);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON (((((vt1.c0))>((vt1.c0)))) BETWEEN ((((vt1.c0))>=((0.9929056037639657)))) AND (((rt0.c0)||(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((NULL)+(vt0.lid)))))AND(((vt1.c1)%(vt1.c0))))) ORDER BY CAST((('拿6egAC') NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((NULL)+(vt0.lid)))))AND(((vt1.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON (((((vt1.c0))>((vt1.c0)))) BETWEEN ((((vt1.c0))>=((0.9929056037639657)))) AND (((rt0.c0)||(rt0.c1)))) ORDER BY CAST((('拿6egAC') NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON (((((vt1.c0))>((vt1.c0)))) BETWEEN ((((vt1.c0))>=((0.9929056037639657)))) AND (((rt0.c0)||(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((NULL)+(vt0.lid)))))AND(((vt1.c1)%(vt1.c0))))) ORDER BY CAST((('拿6egAC') NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((NULL)+(vt0.lid)))))AND(((vt1.c1)%(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 INNER JOIN vt0 ON (((((vt1.c0))>((vt1.c0)))) BETWEEN ((((vt1.c0))>=((0.9929056037639657)))) AND (((rt0.c0)||(rt0.c1)))) ORDER BY CAST((('拿6egAC') NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS BLOB) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 INNER JOIN vt0 ON (((((vt1.c0))>((vt1.c0)))) BETWEEN ((((vt1.c0))>=((0.9929056037639657)))) AND (((rt0.c0)||(rt0.c1)))) WHERE ((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))OR(((NULL)+(vt0.lid)))))AND(((vt1.c1)%(vt1.c0))))) ORDER BY CAST((('拿6egAC') NOT BETWEEN (rt0.c0) AND (vt1.c0)) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))||(CAST(rt0.c1 AS TEXT)))) ORDER BY (((((rt0.c1, vt1.c1, rt0.c0))>=((rt0.c0, rt0.c0, vt1.c1))))!=(x''));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))||(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1, vt1.c1, rt0.c0))>=((rt0.c0, rt0.c0, vt1.c1))))<>(x'')));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))||(CAST(rt0.c1 AS TEXT)))) ORDER BY (((((rt0.c1, vt1.c1, rt0.c0))>=((rt0.c0, rt0.c0, vt1.c1))))!=(x''));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))||(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c1, vt1.c1, rt0.c0))>=((rt0.c0, rt0.c0, vt1.c1))))<>(x'')));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS TEXT))||(CAST(rt0.c1 AS TEXT)))) ORDER BY (((((rt0.c1, vt1.c1, rt0.c0))>=((rt0.c0, rt0.c0, vt1.c1))))!=(x''));
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((+ (((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((+ (((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE ((+ (((vt1.c0) BETWEEN (vt0.c0) AND (rt0.c0)))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c1 THEN vt1.c0 END IN (TIME(vt1.c0, vt0.lid, rt0.c2), COALESCE(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((0.8657416489069744) NOT BETWEEN (((vt0.c0)LIKE(''))) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN vt1.c0 END IN (TIME(vt1.c0, vt0.lid, rt0.c2), COALESCE(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((0.8657416489069744) NOT BETWEEN (((vt0.c0)LIKE(''))) AND (rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c1 THEN vt1.c0 END IN (TIME(vt1.c0, vt0.lid, rt0.c2), COALESCE(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((0.8657416489069744) NOT BETWEEN (((vt0.c0)LIKE(''))) AND (rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN vt1.c0 END IN (TIME(vt1.c0, vt0.lid, rt0.c2), COALESCE(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((0.8657416489069744) NOT BETWEEN (((vt0.c0)LIKE(''))) AND (rt0.c0))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((CASE WHEN rt0.c1 THEN vt1.c0 END IN (TIME(vt1.c0, vt0.lid, rt0.c2), COALESCE(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((0.8657416489069744) NOT BETWEEN (((vt0.c0)LIKE(''))) AND (rt0.c0))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.lid, ((vt1.c1)GLOB(vt1.c0)), CASE 0.43719934138292527  WHEN vt0.c0 THEN vt1.c1 END))>=((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt1.c1)), (((vt1.c1))==((vt1.c1))))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END  WHEN vt0.c0 COLLATE NOCASE THEN IFNULL(vt0.c0, vt0.lid) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid, ((vt1.c1)GLOB(vt1.c0)), CASE 0.43719934138292527  WHEN vt0.c0 THEN vt1.c1 END))>=((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt1.c1)), (((vt1.c1))=((vt1.c1))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END  WHEN vt0.c0 COLLATE NOCASE THEN IFNULL(vt0.c0, vt0.lid) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.lid, ((vt1.c1)GLOB(vt1.c0)), CASE 0.43719934138292527  WHEN vt0.c0 THEN vt1.c1 END))>=((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt1.c1)), (((vt1.c1))==((vt1.c1))))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END  WHEN vt0.c0 COLLATE NOCASE THEN IFNULL(vt0.c0, vt0.lid) END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid, ((vt1.c1)GLOB(vt1.c0)), CASE 0.43719934138292527  WHEN vt0.c0 THEN vt1.c1 END))>=((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt1.c1)), (((vt1.c1))=((vt1.c1))))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END  WHEN vt0.c0 COLLATE NOCASE THEN IFNULL(vt0.c0, vt0.lid) END);
SELECT ALL * FROM vt1, vt0 WHERE ((((vt0.lid, ((vt1.c1)GLOB(vt1.c0)), CASE 0.43719934138292527  WHEN vt0.c0 THEN vt1.c1 END))>=((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((vt1.c0) NOT BETWEEN (vt0.lid) AND (vt1.c1)), (((vt1.c1))==((vt1.c1))))))) ORDER BY CASE CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 WHEN vt0.lid THEN vt0.lid WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END  WHEN vt0.c0 COLLATE NOCASE THEN IFNULL(vt0.c0, vt0.lid) END;
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-45238257'  NULLS LAST, CASE ((vt1.c0) BETWEEN (x'') AND (-5.64181874E8))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(0X6f2b446c)) THEN NULL ELSE LTRIM(vt1.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-45238257'  NULLS LAST, CASE ((vt1.c0) BETWEEN (x'') AND (-5.64181874E8))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(0X6f2b446c)) THEN NULL ELSE LTRIM(vt1.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-45238257'  NULLS LAST, CASE ((vt1.c0) BETWEEN (x'') AND (-5.64181874E8))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(0X6f2b446c)) THEN NULL ELSE LTRIM(vt1.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY '-45238257'  NULLS LAST, CASE ((vt1.c0) BETWEEN (x'') AND (-5.64181874E8))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(0X6f2b446c)) THEN NULL ELSE LTRIM(vt1.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY '-45238257'  NULLS LAST, CASE ((vt1.c0) BETWEEN (x'') AND (-5.64181874E8))  WHEN ((((vt1.c0)OR(vt1.c0)))AND(0X6f2b446c)) THEN NULL ELSE LTRIM(vt1.c1) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((('0.7926572277844698') BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(vt1.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), vt1.c0, vt1.c1 COLLATE BINARY)) AND ((vt0.lid COLLATE RTRIM, rt0.c0, CAST(vt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), vt1.c0, vt1.c1 COLLATE BINARY)) AND ((vt0.lid COLLATE RTRIM, rt0.c0, CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((('0.7926572277844698') BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((('0.7926572277844698') BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(vt1.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), vt1.c0, vt1.c1 COLLATE BINARY)) AND ((vt0.lid COLLATE RTRIM, rt0.c0, CAST(vt1.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), vt1.c0, vt1.c1 COLLATE BINARY)) AND ((vt0.lid COLLATE RTRIM, rt0.c0, CAST(vt1.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((('0.7926572277844698') BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (((('0.7926572277844698') BETWEEN (rt0.c0) AND (rt0.c2)))GLOB(vt1.c0 COLLATE RTRIM)) WHERE ((((rt0.c1, vt0.c0, vt1.c0)) NOT BETWEEN (((vt1.c0 IN ()), vt1.c0, vt1.c1 COLLATE BINARY)) AND ((vt0.lid COLLATE RTRIM, rt0.c0, CAST(vt1.c0 AS INTEGER)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END)%(((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM(((NULL) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END)%(((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(((NULL) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END)%(((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM(((NULL) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END)%(((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY TRIM(((NULL) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 END)%(((((((((vt1.c1)OR(rt0.c0)))AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c0))))) ORDER BY TRIM(((NULL) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.lid COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((- (NULL)) IN (PRINTF(vt0.lid)))) ORDER BY ((CAST(-5.53944223E8 AS BLOB))<(((vt0.lid)GLOB(vt0.lid)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (NULL)) IN (PRINTF(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(-5.53944223E8 AS BLOB))<(((vt0.lid)GLOB(vt0.lid)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((- (NULL)) IN (PRINTF(vt0.lid)))) ORDER BY ((CAST(-5.53944223E8 AS BLOB))<(((vt0.lid)GLOB(vt0.lid)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((- (NULL)) IN (PRINTF(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(-5.53944223E8 AS BLOB))<(((vt0.lid)GLOB(vt0.lid)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((- (NULL)) IN (PRINTF(vt0.lid)))) ORDER BY ((CAST(-5.53944223E8 AS BLOB))<(((vt0.lid)GLOB(vt0.lid)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((rt0.c2))>((vt1.c1))), (rt0.c0 IN (NULL)), (- (vt1.c1))))==((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.lid)*(rt0.c0)), ((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))OR(rt0.c0)))AND(vt1.c1)))))) ORDER BY (~ (x'57fe')), rt0.c2 ASC, '' DESC  NULLS LAST, LIKE((- (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (0x35ea176a))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))>((vt1.c1))), (rt0.c0 IN (NULL)), (- (vt1.c1))))=((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.lid)*(rt0.c0)), ((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))OR(rt0.c0)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON NULL ORDER BY (~ (x'57fe')), rt0.c2 ASC, '' DESC  NULLS LAST, LIKE((- (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (0x35ea176a))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((rt0.c2))>((vt1.c1))), (rt0.c0 IN (NULL)), (- (vt1.c1))))==((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.lid)*(rt0.c0)), ((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))OR(rt0.c0)))AND(vt1.c1)))))) ORDER BY (~ (x'57fe')), rt0.c2 ASC, '' DESC  NULLS LAST, LIKE((- (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (0x35ea176a))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2))>((vt1.c1))), (rt0.c0 IN (NULL)), (- (vt1.c1))))=((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.lid)*(rt0.c0)), ((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))OR(rt0.c0)))AND(vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN rt0 ON NULL ORDER BY (~ (x'57fe')), rt0.c2 ASC, '' DESC  NULLS LAST, LIKE((- (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (0x35ea176a))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 FULL OUTER JOIN rt0 ON NULL WHERE (((((((rt0.c2))>((vt1.c1))), (rt0.c0 IN (NULL)), (- (vt1.c1))))==((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c0)), ((vt0.lid)*(rt0.c0)), ((((((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)))OR(rt0.c0)))AND(vt1.c1)))))) ORDER BY (~ (x'57fe')), rt0.c2 ASC, '' DESC  NULLS LAST, LIKE((- (rt0.c2)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (0x35ea176a))) ASC;
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.lid)>(vt0.lid))  WHEN 0.6038614905087701 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (('-821957800') IS TRUE) WHEN ((rt0.c1) NOTNULL) THEN ((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid)>(vt0.lid))  WHEN 0.6038614905087701 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (('-821957800') IS TRUE) WHEN ((rt0.c1) NOTNULL) THEN ((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.lid)>(vt0.lid))  WHEN 0.6038614905087701 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (('-821957800') IS TRUE) WHEN ((rt0.c1) NOTNULL) THEN ((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.lid)>(vt0.lid))  WHEN 0.6038614905087701 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (('-821957800') IS TRUE) WHEN ((rt0.c1) NOTNULL) THEN ((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC);
SELECT * FROM vt0, rt0 WHERE (CASE ((vt0.lid)>(vt0.lid))  WHEN 0.6038614905087701 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN ((x'') NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN (('-821957800') IS TRUE) WHEN ((rt0.c1) NOTNULL) THEN ((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c1)) END) ORDER BY ((rt0.c1) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (CAST(rt0.c2 AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN 0X4ecd7717 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN 0X4ecd7717 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN 0X4ecd7717 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)AND(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN 0X4ecd7717 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)AND(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0))) NOT BETWEEN (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN 0X4ecd7717 THEN vt1.c0 ELSE vt1.c1 END) AND (((vt1.c1)AND(vt1.c0)))));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt0.lid)LIKE(vt1.c1)))<<(vt1.c1 COLLATE NOCASE)) CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.lid)LIKE(vt1.c1)))<<(vt1.c1 COLLATE NOCASE)) CROSS JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt0.lid)LIKE(vt1.c1)))<<(vt1.c1 COLLATE NOCASE)) CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt0.lid)LIKE(vt1.c1)))<<(vt1.c1 COLLATE NOCASE)) CROSS JOIN rt0 ON rt0.c0);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt0.lid)LIKE(vt1.c1)))<<(vt1.c1 COLLATE NOCASE)) CROSS JOIN rt0 ON rt0.c0 WHERE (CAST(((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.lid) NOTNULL) THEN (((vt0.c0, vt0.lid, vt0.c0))>((vt0.lid, vt0.lid, vt0.lid))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.lid) NOTNULL) THEN (((vt0.c0, vt0.lid, vt0.c0))>((vt0.lid, vt0.lid, vt0.lid))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.lid) NOTNULL) THEN (((vt0.c0, vt0.lid, vt0.c0))>((vt0.lid, vt0.lid, vt0.lid))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.lid) NOTNULL) THEN (((vt0.c0, vt0.lid, vt0.c0))>((vt0.lid, vt0.lid, vt0.lid))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.lid) NOTNULL) THEN (((vt0.c0, vt0.lid, vt0.c0))>((vt0.lid, vt0.lid, vt0.lid))) END);
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 COLLATE RTRIM LEFT OUTER JOIN vt1 ON vt0.lid WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY '-333707309';
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 COLLATE RTRIM LEFT OUTER JOIN vt1 ON vt0.lid ORDER BY '-333707309');
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 COLLATE RTRIM LEFT OUTER JOIN vt1 ON vt0.lid WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY '-333707309';
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 COLLATE RTRIM LEFT OUTER JOIN vt1 ON vt0.lid ORDER BY '-333707309');
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 COLLATE RTRIM LEFT OUTER JOIN vt1 ON vt0.lid WHERE (LIKELY(((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) ORDER BY '-333707309';
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE ((vt0.lid) BETWEEN (x'') AND (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.lid WHEN rt0.c2 THEN vt1.c0 END THEN CASE 1593238695  WHEN vt0.lid THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN (~ (vt1.c0)) WHEN rt0.c0 THEN ((vt0.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END WHERE (CASE TIME(vt1.c0, rt0.c0, vt0.lid)  WHEN (+ (rt0.c2)) THEN ((vt1.c0)/(rt0.c0)) WHEN CAST(vt0.lid AS NUMERIC) THEN CAST(vt1.c1 AS NUMERIC) WHEN (((vt1.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt1.c0, x'7a9fcc2c')) AND ((rt0.c0, vt1.c1, vt0.c0))) THEN highlight(vt0.lid, rt0.c1, vt0.c0, vt0.lid) ELSE (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE TIME(vt1.c0, rt0.c0, vt0.lid)  WHEN (+ (rt0.c2)) THEN ((vt1.c0)/(rt0.c0)) WHEN CAST(vt0.lid AS NUMERIC) THEN CAST(vt1.c1 AS NUMERIC) WHEN (((vt1.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt1.c0, x'7a9fcc2c')) AND ((rt0.c0, vt1.c1, vt0.c0))) THEN highlight(vt0.lid, rt0.c1, vt0.c0, vt0.lid) ELSE (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE ((vt0.lid) BETWEEN (x'') AND (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.lid WHEN rt0.c2 THEN vt1.c0 END THEN CASE 1593238695  WHEN vt0.lid THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN (~ (vt1.c0)) WHEN rt0.c0 THEN ((vt0.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE ((vt0.lid) BETWEEN (x'') AND (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.lid WHEN rt0.c2 THEN vt1.c0 END THEN CASE 1593238695  WHEN vt0.lid THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN (~ (vt1.c0)) WHEN rt0.c0 THEN ((vt0.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END WHERE (CASE TIME(vt1.c0, rt0.c0, vt0.lid)  WHEN (+ (rt0.c2)) THEN ((vt1.c0)/(rt0.c0)) WHEN CAST(vt0.lid AS NUMERIC) THEN CAST(vt1.c1 AS NUMERIC) WHEN (((vt1.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt1.c0, x'7a9fcc2c')) AND ((rt0.c0, vt1.c1, vt0.c0))) THEN highlight(vt0.lid, rt0.c1, vt0.c0, vt0.lid) ELSE (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE TIME(vt1.c0, rt0.c0, vt0.lid)  WHEN (+ (rt0.c2)) THEN ((vt1.c0)/(rt0.c0)) WHEN CAST(vt0.lid AS NUMERIC) THEN CAST(vt1.c1 AS NUMERIC) WHEN (((vt1.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt1.c0, x'7a9fcc2c')) AND ((rt0.c0, vt1.c1, vt0.c0))) THEN highlight(vt0.lid, rt0.c1, vt0.c0, vt0.lid) ELSE (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt0 ON CASE ((vt0.lid) BETWEEN (x'') AND (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.lid WHEN rt0.c2 THEN vt1.c0 END THEN CASE 1593238695  WHEN vt0.lid THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN (~ (vt1.c0)) WHEN rt0.c0 THEN ((vt0.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN rt0 ON CASE ((vt0.lid) BETWEEN (x'') AND (vt0.c0))  WHEN CASE WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN vt0.lid WHEN rt0.c2 THEN vt1.c0 END THEN CASE 1593238695  WHEN vt0.lid THEN vt1.c0 ELSE vt1.c0 END WHEN NULL THEN (~ (vt1.c0)) WHEN rt0.c0 THEN ((vt0.lid) NOT BETWEEN (vt1.c0) AND (rt0.c0)) END WHERE (CASE TIME(vt1.c0, rt0.c0, vt0.lid)  WHEN (+ (rt0.c2)) THEN ((vt1.c0)/(rt0.c0)) WHEN CAST(vt0.lid AS NUMERIC) THEN CAST(vt1.c1 AS NUMERIC) WHEN (((vt1.c1, rt0.c1, vt0.c0)) BETWEEN ((rt0.c0, vt1.c0, x'7a9fcc2c')) AND ((rt0.c0, vt1.c1, vt0.c0))) THEN highlight(vt0.lid, rt0.c1, vt0.c0, vt0.lid) ELSE (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON (~ (((((rt0.c2)OR(NULL)))AND(vt0.c0)))) WHERE (CASE WHEN ((NULL)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.lid) AND (rt0.c2)) END) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.lid) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON (~ (((((rt0.c2)OR(NULL)))AND(vt0.c0)))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON (~ (((((rt0.c2)OR(NULL)))AND(vt0.c0)))) WHERE (CASE WHEN ((NULL)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.lid) AND (rt0.c2)) END) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.lid) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, vt1 INNER JOIN rt0 ON (~ (((((rt0.c2)OR(NULL)))AND(vt0.c0)))) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0, vt1 INNER JOIN rt0 ON (~ (((((rt0.c2)OR(NULL)))AND(vt0.c0)))) WHERE (CASE WHEN ((NULL)-(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.lid) AND (rt0.c2)) END) ORDER BY CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((- (0Xfffffffff86cb060)))-(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (0Xfffffffff86cb060)))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((- (0Xfffffffff86cb060)))-(CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((- (0Xfffffffff86cb060)))-(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((((- (0Xfffffffff86cb060)))-(CAST(vt1.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ABS(DISTINCT ((vt0.lid)<>(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (NOT (295343590)), ABS(vt0.lid))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(NULL AS NUMERIC), (vt0.lid IN (vt0.lid, vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT ((vt0.lid)!=(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (NOT (295343590)), ABS(vt0.lid))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(NULL AS NUMERIC), (vt0.lid IN (vt0.lid, vt0.lid))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ABS(DISTINCT ((vt0.lid)<>(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (NOT (295343590)), ABS(vt0.lid))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(NULL AS NUMERIC), (vt0.lid IN (vt0.lid, vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE RTRIM AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT ((vt0.lid)!=(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (NOT (295343590)), ABS(vt0.lid))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(NULL AS NUMERIC), (vt0.lid IN (vt0.lid, vt0.lid))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS TEXT)) ORDER BY ABS(DISTINCT ((vt0.lid)<>(vt0.c0))) DESC  NULLS FIRST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)), (NOT (295343590)), ABS(vt0.lid))) AND ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(NULL AS NUMERIC), (vt0.lid IN (vt0.lid, vt0.lid)))));
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (CAST(vt0.lid AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2);
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (CAST(vt0.lid AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.lid AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c2);
SELECT * FROM vt0 INNER JOIN rt0 ON rt0.c2 WHERE (CAST(vt0.lid AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (621204403);
SELECT SUM(count) FROM (SELECT ALL ((621204403) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (621204403);
SELECT SUM(count) FROM (SELECT ALL ((621204403) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (621204403);
SELECT ALL * FROM vt1 WHERE ((((0xffffffffa883ec38) NOT BETWEEN (NULL) AND (vt1.c1)) IN ())) ORDER BY (((~ (vt1.c0))) IS FALSE) ASC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN (((((vt1.c1))<=((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)), TRIM(vt1.c0, vt1.c1))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1)-(vt1.c0)), (('pﶋᲲi0SD')<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffa883ec38) NOT BETWEEN (NULL) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) IS FALSE) ASC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN (((((vt1.c1))<=((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)), TRIM(vt1.c0, vt1.c1))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1)-(vt1.c0)), (('pﶋᲲi0SD')<(vt1.c1))))));
SELECT ALL * FROM vt1 WHERE ((((0xffffffffa883ec38) NOT BETWEEN (NULL) AND (vt1.c1)) IN ())) ORDER BY (((~ (vt1.c0))) IS FALSE) ASC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN (((((vt1.c1))<=((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)), TRIM(vt1.c0, vt1.c1))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1)-(vt1.c0)), (('pﶋᲲi0SD')<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((0Xffffffffa883ec38) NOT BETWEEN (NULL) AND (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c0))) IS FALSE) ASC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN (((((vt1.c1))<=((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)), TRIM(vt1.c0, vt1.c1))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1)-(vt1.c0)), (('pﶋᲲi0SD')<(vt1.c1))))));
SELECT ALL * FROM vt1 WHERE ((((0xffffffffa883ec38) NOT BETWEEN (NULL) AND (vt1.c1)) IN ())) ORDER BY (((~ (vt1.c0))) IS FALSE) ASC  NULLS FIRST, (((vt1.c0, vt1.c0, vt1.c1)) NOT BETWEEN (((((vt1.c1))<=((vt1.c0))), ((vt1.c0)LIKE(vt1.c0)), TRIM(vt1.c0, vt1.c1))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1)-(vt1.c0)), (('pﶋᲲi0SD')<(vt1.c1)))));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (+ (vt1.c1 COLLATE NOCASE)) WHERE (((vt0.lid COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (+ (vt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (+ (vt1.c1 COLLATE NOCASE)) WHERE (((vt0.lid COLLATE NOCASE) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (+ (vt1.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON (+ (vt1.c1 COLLATE NOCASE)) WHERE (((vt0.lid COLLATE NOCASE) IS FALSE));
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)*(vt1.c0)))OR(UPPER(DISTINCT vt0.c0))))AND(CAST(vt1.c0 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST, vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)*(vt1.c0)))OR(UPPER(DISTINCT vt0.c0))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, vt1.c1  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)*(vt1.c0)))OR(UPPER(DISTINCT vt0.c0))))AND(CAST(vt1.c0 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST, vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)*(vt1.c0)))OR(UPPER(DISTINCT vt0.c0))))AND(CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, vt1.c1  NULLS LAST);
SELECT ALL * FROM vt1, vt0 WHERE (((((((vt1.c0)*(vt1.c0)))OR(UPPER(DISTINCT vt0.c0))))AND(CAST(vt1.c0 AS INTEGER)))) ORDER BY vt0.c0 ASC  NULLS FIRST, vt1.c1  NULLS LAST;
SELECT * FROM vt1, vt0, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY CAST(vt0.lid COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt0.lid COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY CAST(vt0.lid COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt0.c0)) IN ())) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY CAST(vt0.lid COLLATE RTRIM AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt1, vt0, rt0 WHERE (((+ (rt0.c0)) IN ())) ORDER BY CAST(vt0.lid COLLATE RTRIM AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(TRIM(vt0.lid, x'') AS TEXT)) ORDER BY ((((vt0.c0 IN ())))>=((vt0.lid COLLATE RTRIM))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.lid END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.lid, x'') AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((vt0.lid COLLATE RTRIM))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.lid END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(TRIM(vt0.lid, x'') AS TEXT)) ORDER BY ((((vt0.c0 IN ())))>=((vt0.lid COLLATE RTRIM))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.lid END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(vt0.lid, x'') AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((vt0.lid COLLATE RTRIM))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.lid END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(TRIM(vt0.lid, x'') AS TEXT)) ORDER BY ((((vt0.c0 IN ())))>=((vt0.lid COLLATE RTRIM))) ASC, (+ (CASE WHEN vt0.c0 THEN vt0.lid END))  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (+ (vt0.lid))  WHEN UPPER(DISTINCT vt0.c0) THEN (vt0.lid IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.lid))  WHEN UPPER(DISTINCT vt0.c0) THEN (vt0.lid IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (+ (vt0.lid))  WHEN UPPER(DISTINCT vt0.c0) THEN (vt0.lid IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.lid))  WHEN UPPER(DISTINCT vt0.c0) THEN (vt0.lid IN ()) END) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (CASE (+ (vt0.lid))  WHEN UPPER(DISTINCT vt0.c0) THEN (vt0.lid IN ()) END);
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((((((((((vt1.c1 IN ()))AND('1968881247')))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0)))AND(((vt0.lid)IS NOT(vt1.c1)))))AND(((rt0.c2) IS TRUE))))AND((('p?%뽅X\c')>=(rt0.c0)))) WHERE (0.11368418181978801);
SELECT SUM(count) FROM (SELECT ALL ((0.11368418181978801) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((((((((((vt1.c1 IN ()))AND('1968881247')))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0)))AND(((vt0.lid)IS NOT(vt1.c1)))))AND(((rt0.c2) IS TRUE))))AND((('p?%뽅X\c')>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((((((((((vt1.c1 IN ()))AND('1968881247')))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0)))AND(((vt0.lid)IS NOT(vt1.c1)))))AND(((rt0.c2) IS TRUE))))AND((('p?%뽅X\c')>=(rt0.c0)))) WHERE (0.11368418181978801);
SELECT SUM(count) FROM (SELECT ALL ((0.11368418181978801) IS TRUE)  as count FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((((((((((vt1.c1 IN ()))AND('1968881247')))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0)))AND(((vt0.lid)IS NOT(vt1.c1)))))AND(((rt0.c2) IS TRUE))))AND((('p?%뽅X\c')>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0 FULL OUTER JOIN rt0 ON (((((((((((((vt1.c1 IN ()))AND('1968881247')))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0)))AND(((vt0.lid)IS NOT(vt1.c1)))))AND(((rt0.c2) IS TRUE))))AND((('p?%뽅X\c')>=(rt0.c0)))) WHERE (0.11368418181978801);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((1553782678))=((rt0.c1))) THEN ((((vt1.c1)OR(rt0.c2)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((1553782678))==((rt0.c1))) THEN ((((vt1.c1)OR(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((1553782678))=((rt0.c1))) THEN ((((vt1.c1)OR(rt0.c2)))AND(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((1553782678))==((rt0.c1))) THEN ((((vt1.c1)OR(rt0.c2)))AND(rt0.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE WHEN (((1553782678))=((rt0.c1))) THEN ((((vt1.c1)OR(rt0.c2)))AND(rt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)>(rt0.c2)) AS BLOB)) ORDER BY ((rt0.c0) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)>(rt0.c2)) AS BLOB)) ORDER BY ((rt0.c0) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1)>(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c0) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c1)>(rt0.c2)) AS BLOB)) ORDER BY ((rt0.c0) ISNULL) DESC;
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 WHERE ((((- (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS REAL), ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS REAL), ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 WHERE ((((- (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS REAL), ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 ORDER BY CAST(CAST(vt0.c0 AS REAL) AS REAL), ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON vt0.c0 WHERE ((((- (rt0.c2))) NOT BETWEEN ((- (rt0.c0))) AND ((rt0.c1 IN ())))) ORDER BY CAST(CAST(vt0.c0 AS REAL) AS REAL), ((((((vt0.lid)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt0.lid)))<(vt1.c0 COLLATE RTRIM))) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt0.lid)) BETWEEN ((vt1.c1, vt0.c0, vt1.c0, vt1.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, vt1.c1, vt1.c1, vt0.lid)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.lid)))<(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt0.lid)) BETWEEN ((vt1.c1, vt0.c0, vt1.c0, vt1.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, vt1.c1, vt1.c1, vt0.lid)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt0.lid)))<(vt1.c0 COLLATE RTRIM))) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt0.lid)) BETWEEN ((vt1.c1, vt0.c0, vt1.c0, vt1.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, vt1.c1, vt1.c1, vt0.lid)))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.lid)))<(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt0.lid)) BETWEEN ((vt1.c1, vt0.c0, vt1.c0, vt1.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, vt1.c1, vt1.c1, vt0.lid)))) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0)*(vt0.lid)))<(vt1.c0 COLLATE RTRIM))) ORDER BY (((((vt1.c1, vt1.c1, vt1.c1, vt0.c0, vt0.lid)) BETWEEN ((vt1.c1, vt0.c0, vt1.c0, vt1.c0, vt0.lid)) AND ((vt0.lid, vt0.c0, vt1.c1, vt1.c1, vt0.lid)))) IS TRUE)  NULLS LAST;
SELECT * FROM vt1 WHERE (load_extension((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c0)<>(vt1.c0)))) ORDER BY x'' DESC, ((((vt1.c1)||(vt1.c1)))<>('7')) DESC;
SELECT SUM(count) FROM (SELECT ((load_extension((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC, ((((vt1.c1)||(vt1.c1)))!=('7')) DESC);
SELECT * FROM vt1 WHERE (load_extension((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c0)<>(vt1.c0)))) ORDER BY x'' DESC, ((((vt1.c1)||(vt1.c1)))<>('7')) DESC;
SELECT SUM(count) FROM (SELECT ((load_extension((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c0)!=(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY x'' DESC, ((((vt1.c1)||(vt1.c1)))!=('7')) DESC);
SELECT * FROM vt1 WHERE (load_extension((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c0))), ((vt1.c0)<>(vt1.c0)))) ORDER BY x'' DESC, ((((vt1.c1)||(vt1.c1)))<>('7')) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (LOWER(DISTINCT (((vt0.lid)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0)))));
SELECT ALL * FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('');
SELECT * FROM vt0 WHERE ((vt0.lid IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.lid IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.lid IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.lid IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.lid IN ()));
SELECT ALL * FROM vt1 WHERE (CASE WHEN (('')*(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN ((vt1.c1)GLOB(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 174935667 COLLATE RTRIM THEN TRIM(vt1.c1) END) ORDER BY CASE (((x'')) NOT BETWEEN ((0.6674392129061276)) AND ((vt1.c1)))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((((NULL)OR(vt1.c1)))OR(-1040577793)) THEN CASE WHEN '' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END WHEN NULLIF(DISTINCT vt1.c0, vt1.c1) THEN ((vt1.c1) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')*(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN ((vt1.c1)GLOB(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 174935667 COLLATE RTRIM THEN TRIM(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (((x'')) NOT BETWEEN ((0.6674392129061276)) AND ((vt1.c1)))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((((NULL)OR(vt1.c1)))OR(-1040577793)) THEN CASE WHEN '' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END WHEN NULLIF(DISTINCT vt1.c0, vt1.c1) THEN ((vt1.c1) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (('')*(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN ((vt1.c1)GLOB(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 174935667 COLLATE RTRIM THEN TRIM(vt1.c1) END) ORDER BY CASE (((x'')) NOT BETWEEN ((0.6674392129061276)) AND ((vt1.c1)))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((((NULL)OR(vt1.c1)))OR(-1040577793)) THEN CASE WHEN '' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END WHEN NULLIF(DISTINCT vt1.c0, vt1.c1) THEN ((vt1.c1) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (('')*(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN ((vt1.c1)GLOB(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 174935667 COLLATE RTRIM THEN TRIM(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY CASE (((x'')) NOT BETWEEN ((0.6674392129061276)) AND ((vt1.c1)))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((((NULL)OR(vt1.c1)))OR(-1040577793)) THEN CASE WHEN '' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END WHEN NULLIF(DISTINCT vt1.c0, vt1.c1) THEN ((vt1.c1) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN (('')*(vt1.c0)) THEN (((vt1.c0))>=((vt1.c0))) WHEN ((vt1.c1)GLOB(vt1.c1)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN 174935667 COLLATE RTRIM THEN TRIM(vt1.c1) END) ORDER BY CASE (((x'')) NOT BETWEEN ((0.6674392129061276)) AND ((vt1.c1)))  WHEN ((vt1.c0)>>(vt1.c0)) THEN ((vt1.c0)<<(vt1.c1)) WHEN ((((NULL)OR(vt1.c1)))OR(-1040577793)) THEN CASE WHEN '' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 END WHEN NULLIF(DISTINCT vt1.c0, vt1.c1) THEN ((vt1.c1) NOT NULL) END  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((- ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- ((~ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- ((~ (rt0.c0)))));
SELECT * FROM rt0, vt1 WHERE (NULLIF(rt0.c1, vt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, vt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULLIF(rt0.c1, vt1.c1) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(rt0.c1, vt1.c1) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULLIF(rt0.c1, vt1.c1) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('d');
SELECT SUM(count) FROM (SELECT (('d') IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('d');
SELECT SUM(count) FROM (SELECT (('d') IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ('d');
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0)==('673891764')) THEN (((vt1.c0))=((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)=('673891764')) THEN (((vt1.c0))=((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0)==('673891764')) THEN (((vt1.c0))=((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c0)=('673891764')) THEN (((vt1.c0))=((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN ((vt1.c0)==('673891764')) THEN (((vt1.c0))=((rt0.c2))) END);
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c0)||(vt1.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((IFNULL(rt0.c1, vt0.c0))&(((vt0.c0)<<(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(vt1.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((IFNULL(rt0.c1, vt0.c0))&(((vt0.c0)<<(rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c0)||(vt1.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((IFNULL(rt0.c1, vt0.c0))&(((vt0.c0)<<(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0)||(vt1.c1)) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((IFNULL(rt0.c1, vt0.c0))&(((vt0.c0)<<(rt0.c0))))  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (((rt0.c0)||(vt1.c1)) COLLATE NOCASE COLLATE BINARY) ORDER BY ((IFNULL(rt0.c1, vt0.c0))&(((vt0.c0)<<(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN (CAST(vt0.lid AS REAL)))  NULLS LAST, vt0.c0  NULLS FIRST, ((((NULL)>(vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0) NOTNULL) IN (CAST(vt0.lid AS REAL)))  NULLS LAST, vt0.c0  NULLS FIRST, ((((NULL)>(vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN (CAST(vt0.lid AS REAL)))  NULLS LAST, vt0.c0  NULLS FIRST, ((((NULL)>(vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0) NOTNULL) IN (CAST(vt0.lid AS REAL)))  NULLS LAST, vt0.c0  NULLS FIRST, ((((NULL)>(vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (NULL) ORDER BY (((vt0.c0) NOTNULL) IN (CAST(vt0.lid AS REAL)))  NULLS LAST, vt0.c0  NULLS FIRST, ((((NULL)>(vt1.c1)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END))  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (CHANGES()) ORDER BY (+ ((('OLj8') BETWEEN (vt1.c1) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ ((('OLj8') BETWEEN (vt1.c1) AND (rt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (CHANGES()) ORDER BY (+ ((('OLj8') BETWEEN (vt1.c1) AND (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CHANGES()) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ ((('OLj8') BETWEEN (vt1.c1) AND (rt0.c0)))) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (CHANGES()) ORDER BY (+ ((('OLj8') BETWEEN (vt1.c1) AND (rt0.c0)))) DESC;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)+(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)+(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)+(rt0.c1)) AS BLOB));
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(NULL AS INTEGER) COLLATE RTRIM WHERE (((x'') BETWEEN (CASE WHEN 0.2445656528856568 THEN rt0.c1 END) AND (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (CASE WHEN 0.2445656528856568 THEN rt0.c1 END) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(NULL AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(NULL AS INTEGER) COLLATE RTRIM WHERE (((x'') BETWEEN (CASE WHEN 0.2445656528856568 THEN rt0.c1 END) AND (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (CASE WHEN 0.2445656528856568 THEN rt0.c1 END) AND (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(NULL AS INTEGER) COLLATE RTRIM);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(NULL AS INTEGER) COLLATE RTRIM WHERE (((x'') BETWEEN (CASE WHEN 0.2445656528856568 THEN rt0.c1 END) AND (CAST(vt1.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.06745853025362569)IS NOT(0.986183062042835)) IN ())) ORDER BY ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1)))))<>((CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((0.06745853025362569)IS NOT(0.986183062042835)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1)))))!=((CAST(vt1.c1 AS REAL)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.06745853025362569)IS NOT(0.986183062042835)) IN ())) ORDER BY ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1)))))<>((CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((0.06745853025362569)IS NOT(0.986183062042835)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1)))))!=((CAST(vt1.c1 AS REAL)))));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((0.06745853025362569)IS NOT(0.986183062042835)) IN ())) ORDER BY ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c1, vt1.c0, vt1.c1)))))<>((CAST(vt1.c1 AS REAL))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (MIN(COALESCE(DISTINCT rt0.c2, rt0.c2), rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((MIN(COALESCE(DISTINCT rt0.c2, rt0.c2), rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (MIN(COALESCE(DISTINCT rt0.c2, rt0.c2), rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((MIN(COALESCE(DISTINCT rt0.c2, rt0.c2), rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (MIN(COALESCE(DISTINCT rt0.c2, rt0.c2), rt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)), 0.9630378482282608)) ORDER BY ((((- (rt0.c2))))=(((rt0.c2 IN ())))), ((vt0.lid)*(0.23468351829811596)) COLLATE BINARY, (((rt0.c2, ((x'2a2c') NOTNULL), ((rt0.c1)>(rt0.c2))))<((CAST(rt0.c1 AS BLOB), ((vt0.lid)IS NOT(rt0.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)), 0.9630378482282608)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((- (rt0.c2))))=(((rt0.c2 IN ())))), ((vt0.lid)*(0.23468351829811596)) COLLATE BINARY, (((rt0.c2, ((x'2a2c') NOTNULL), ((rt0.c1)>(rt0.c2))))<((CAST(rt0.c1 AS BLOB), ((vt0.lid)IS NOT(rt0.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)), 0.9630378482282608)) ORDER BY ((((- (rt0.c2))))=(((rt0.c2 IN ())))), ((vt0.lid)*(0.23468351829811596)) COLLATE BINARY, (((rt0.c2, ((x'2a2c') NOTNULL), ((rt0.c1)>(rt0.c2))))<((CAST(rt0.c1 AS BLOB), ((vt0.lid)IS NOT(rt0.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)), 0.9630378482282608)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((- (rt0.c2))))=(((rt0.c2 IN ())))), ((vt0.lid)*(0.23468351829811596)) COLLATE BINARY, (((rt0.c2, ((x'2a2c') NOTNULL), ((rt0.c1)>(rt0.c2))))<((CAST(rt0.c1 AS BLOB), ((vt0.lid)IS NOT(rt0.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((vt0.lid) NOT BETWEEN (vt0.c0) AND (vt1.c1)), 0.9630378482282608)) ORDER BY ((((- (rt0.c2))))=(((rt0.c2 IN ())))), ((vt0.lid)*(0.23468351829811596)) COLLATE BINARY, (((rt0.c2, ((x'2a2c') NOTNULL), ((rt0.c1)>(rt0.c2))))<((CAST(rt0.c1 AS BLOB), ((vt0.lid)IS NOT(rt0.c1)), ((vt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (259898827, vt0.lid)))+('1395269588'))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN (259898827, vt0.lid)))+('1395269588'))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (259898827, vt0.lid)))+('1395269588'))) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.lid IN (259898827, vt0.lid)))+('1395269588'))) IS TRUE)  as count FROM vt0 ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (259898827, vt0.lid)))+('1395269588'))) ORDER BY x'' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON CAST(ABS(vt1.c0) AS BLOB) WHERE ((UNLIKELY(rt0.c1) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c1) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON CAST(ABS(vt1.c0) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON CAST(ABS(vt1.c0) AS BLOB) WHERE ((UNLIKELY(rt0.c1) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(rt0.c1) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt0 ON CAST(ABS(vt1.c0) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt0 ON CAST(ABS(vt1.c0) AS BLOB) WHERE ((UNLIKELY(rt0.c1) IN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1) ISNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE BINARY) ORDER BY LIKELIHOOD(DISTINCT vt0.lid, 0.7425477590196) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT vt0.lid, 0.7425477590196) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE BINARY) ORDER BY LIKELIHOOD(DISTINCT vt0.lid, 0.7425477590196) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY LIKELIHOOD(DISTINCT vt0.lid, 0.7425477590196) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE BINARY) ORDER BY LIKELIHOOD(DISTINCT vt0.lid, 0.7425477590196) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.lid)) AND ((rt0.c0, rt0.c1, rt0.c0))), (rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT x'aa57', 0.11184167021351521), LIKELY(rt0.c0), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.lid)) AND ((rt0.c0, rt0.c1, rt0.c0))), (rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT x'aa57', 0.11184167021351521), LIKELY(rt0.c0), (+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.lid)) AND ((rt0.c0, rt0.c1, rt0.c0))), (rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT x'aa57', 0.11184167021351521), LIKELY(rt0.c0), (+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.lid)) AND ((rt0.c0, rt0.c1, rt0.c0))), (rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT x'aa57', 0.11184167021351521), LIKELY(rt0.c0), (+ (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c0) ORDER BY (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN (((rt0.c2 IN ()), (((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, rt0.c1, vt0.lid)) AND ((rt0.c0, rt0.c1, rt0.c0))), (rt0.c1 IN ()))) AND ((LIKELIHOOD(DISTINCT x'aa57', 0.11184167021351521), LIKELY(rt0.c0), (+ (rt0.c1)))));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.lid)))*(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.lid)))*(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.lid)))*(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.lid)))*(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0)>=(vt0.lid)))*(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c1)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON (+ (RTRIM(vt1.c0))) WHERE (((CAST(rt0.c0 AS TEXT))GLOB(COALESCE(vt1.c0, rt0.c1, vt0.lid, vt0.c0)))) ORDER BY (((((vt0.lid))>=((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))GLOB(COALESCE(vt1.c0, rt0.c1, vt0.lid, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON (+ (RTRIM(vt1.c0))) ORDER BY (((((vt0.lid))>=((vt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON (+ (RTRIM(vt1.c0))) WHERE (((CAST(rt0.c0 AS TEXT))GLOB(COALESCE(vt1.c0, rt0.c1, vt0.lid, vt0.c0)))) ORDER BY (((((vt0.lid))>=((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS TEXT))GLOB(COALESCE(vt1.c0, rt0.c1, vt0.lid, vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON (+ (RTRIM(vt1.c0))) ORDER BY (((((vt0.lid))>=((vt0.c0)))) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 CROSS JOIN vt1 ON (+ (RTRIM(vt1.c0))) WHERE (((CAST(rt0.c0 AS TEXT))GLOB(COALESCE(vt1.c0, rt0.c1, vt0.lid, vt0.c0)))) ORDER BY (((((vt0.lid))>=((vt0.c0)))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON 0.5224049906809904 WHERE ((- (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt1.c1)/(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON 0.5224049906809904 ORDER BY (((vt1.c1)/(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON 0.5224049906809904 WHERE ((- (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt1.c1)/(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON 0.5224049906809904 ORDER BY (((vt1.c1)/(rt0.c0)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN rt0 ON 0.5224049906809904 WHERE ((- (CAST(vt1.c1 AS REAL)))) ORDER BY (((vt1.c1)/(rt0.c0)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c2)IS NOT(vt0.lid)))))AND(vt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(vt1.c0)) LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM WHERE (((((((vt1.c0) NOT NULL))OR(CAST(rt0.c0 AS BLOB))))OR((vt0.lid IN (rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(CAST(rt0.c0 AS BLOB))))OR((vt0.lid IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c2)IS NOT(vt0.lid)))))AND(vt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(vt1.c0)) LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c2)IS NOT(vt0.lid)))))AND(vt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(vt1.c0)) LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM WHERE (((((((vt1.c0) NOT NULL))OR(CAST(rt0.c0 AS BLOB))))OR((vt0.lid IN (rt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) NOT NULL))OR(CAST(rt0.c0 AS BLOB))))OR((vt0.lid IN (rt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c2)IS NOT(vt0.lid)))))AND(vt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(vt1.c0)) LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((((((((CAST(rt0.c2 AS TEXT))AND(((rt0.c2)IS NOT(vt0.lid)))))AND(vt1.c0)))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(vt1.c0)) LEFT OUTER JOIN vt0 ON ((vt1.c1) IS TRUE) COLLATE RTRIM WHERE (((((((vt1.c0) NOT NULL))OR(CAST(rt0.c0 AS BLOB))))OR((vt0.lid IN (rt0.c0, vt0.c0)))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(vt0.lid)))>=((+ (rt0.c0))))) ORDER BY TIME(((rt0.c0) NOTNULL), (- (vt0.lid)), ((vt0.lid)=(vt0.lid))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c2)))AND(vt0.lid)))>=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TIME(((rt0.c0) NOTNULL), (- (vt0.lid)), ((vt0.lid)=(vt0.lid))), vt0.c0  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(vt0.lid)))>=((+ (rt0.c0))))) ORDER BY TIME(((rt0.c0) NOTNULL), (- (vt0.lid)), ((vt0.lid)=(vt0.lid))), vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)OR(rt0.c2)))AND(vt0.lid)))>=((+ (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TIME(((rt0.c0) NOTNULL), (- (vt0.lid)), ((vt0.lid)=(vt0.lid))), vt0.c0  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c2)OR(rt0.c2)))AND(vt0.lid)))>=((+ (rt0.c0))))) ORDER BY TIME(((rt0.c0) NOTNULL), (- (vt0.lid)), ((vt0.lid)=(vt0.lid))), vt0.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid) NOT NULL)))<=((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid) NOT NULL)))<=((NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid) NOT NULL)))<=((NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.lid) NOT NULL)))<=((NULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.lid) ORDER BY (((((vt0.lid) NOT NULL)))<=((NULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (GLOB((((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c1))), COALESCE(DISTINCT rt0.c0, rt0.c1))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))>(((((0.9377779067919297)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c1))), COALESCE(DISTINCT rt0.c0, rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))>(((((0.9377779067919297)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (GLOB((((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c1))), COALESCE(DISTINCT rt0.c0, rt0.c1))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))>(((((0.9377779067919297)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c1))), COALESCE(DISTINCT rt0.c0, rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))>(((((0.9377779067919297)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (GLOB((((rt0.c1)) BETWEEN ((NULL)) AND ((vt1.c1))), COALESCE(DISTINCT rt0.c0, rt0.c1))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))>(((((0.9377779067919297)OR(rt0.c0)))AND(rt0.c0)))) ASC  NULLS LAST;
SELECT * FROM vt1, rt0, vt0 WHERE (((((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END)AND(UNLIKELY(vt0.lid))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY (((0.2824442055316998 COLLATE RTRIM))<>((LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END)AND(UNLIKELY(vt0.lid))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((0.2824442055316998 COLLATE RTRIM))<>((LOWER(vt0.c0)))));
SELECT * FROM vt1, rt0, vt0 WHERE (((((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END)AND(UNLIKELY(vt0.lid))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY (((0.2824442055316998 COLLATE RTRIM))<>((LOWER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END)AND(UNLIKELY(vt0.lid))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((0.2824442055316998 COLLATE RTRIM))<>((LOWER(vt0.c0)))));
SELECT * FROM vt1, rt0, vt0 WHERE (((((CASE vt1.c0  WHEN rt0.c0 THEN vt0.c0 END)AND(UNLIKELY(vt0.lid))))OR(((vt0.lid) BETWEEN (vt0.c0) AND (rt0.c0))))) ORDER BY (((0.2824442055316998 COLLATE RTRIM))<>((LOWER(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(vt0.lid AS NUMERIC))) AND ((((vt0.c0)>(vt0.c0))))), LOWER(DISTINCT (rt0.c1 IN (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c2)) BETWEEN ((CAST(vt0.lid AS NUMERIC))) AND ((((vt0.c0)>(vt0.c0))))), LOWER(DISTINCT (rt0.c1 IN (vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(vt0.lid AS NUMERIC))) AND ((((vt0.c0)>(vt0.c0))))), LOWER(DISTINCT (rt0.c1 IN (vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c2)) BETWEEN ((CAST(vt0.lid AS NUMERIC))) AND ((((vt0.c0)>(vt0.c0))))), LOWER(DISTINCT (rt0.c1 IN (vt1.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((NOT ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0)))))) ORDER BY (((rt0.c2)) BETWEEN ((CAST(vt0.lid AS NUMERIC))) AND ((((vt0.c0)>(vt0.c0))))), LOWER(DISTINCT (rt0.c1 IN (vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN vt0.lid THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN MAX('253009966', vt1.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN vt0.lid THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN MAX('253009966', vt1.c1) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN vt0.lid THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN MAX('253009966', vt1.c1) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN vt0.lid THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0, vt0 NOT INDEXED ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN MAX('253009966', vt1.c1) END  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (((CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END)/(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN vt0.lid THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY CASE WHEN ((rt0.c1) NOT NULL) THEN MAX('253009966', vt1.c1) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((vt0.lid) NOTNULL))OR(((vt0.lid)OR(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, vt0.lid)))) ORDER BY CAST(0.48428380400048876 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid) NOTNULL))OR(((vt0.lid)OR(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, vt0.lid)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(0.48428380400048876 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((vt0.lid) NOTNULL))OR(((vt0.lid)OR(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, vt0.lid)))) ORDER BY CAST(0.48428380400048876 AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid) NOTNULL))OR(((vt0.lid)OR(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, vt0.lid)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(0.48428380400048876 AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((((((vt0.lid) NOTNULL))OR(((vt0.lid)OR(rt0.c0)))))AND(TRIM(DISTINCT rt0.c1, vt0.lid)))) ORDER BY CAST(0.48428380400048876 AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c0)))))) ORDER BY ((((((((UNLIKELY(DISTINCT rt0.c1))AND((rt0.c0 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))))AND(rt0.c2)), rt0.c1 DESC, '-1929366761' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((UNLIKELY(DISTINCT rt0.c1))AND((rt0.c0 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))))AND(rt0.c2)), rt0.c1 DESC, '-1929366761' COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c0)))))) ORDER BY ((((((((UNLIKELY(DISTINCT rt0.c1))AND((rt0.c0 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))))AND(rt0.c2)), rt0.c1 DESC, '-1929366761' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((UNLIKELY(DISTINCT rt0.c1))AND((rt0.c0 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))))AND(rt0.c2)), rt0.c1 DESC, '-1929366761' COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (((~ (rt0.c0)))))) ORDER BY ((((((((UNLIKELY(DISTINCT rt0.c1))AND((rt0.c0 IN ()))))OR(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c2 IN ()))))AND(rt0.c2)), rt0.c1 DESC, '-1929366761' COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN x'' THEN '1451921734' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt1.c1) NOT NULL)))) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN x'' THEN '1451921734' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN x'' THEN '1451921734' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt1.c1) NOT NULL)))) ORDER BY ((vt1.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN x'' THEN '1451921734' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((CASE rt0.c1  WHEN x'' THEN '1451921734' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (((vt1.c1) NOT NULL)))) ORDER BY ((vt1.c0) IS FALSE);
SELECT * FROM rt0 WHERE (((((NULL)AND((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((NULL)AND((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((NULL)AND((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((NULL)AND((NOT (rt0.c1)))))OR(((rt0.c1)>=(rt0.c0))))) ORDER BY (((rt0.c0 IN ())) ISNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (((x'0f0a') BETWEEN (((vt1.c1)>>(vt0.lid))) AND (ABS(DISTINCT vt0.lid))));
SELECT SUM(count) FROM (SELECT ((((x'0f0a') BETWEEN (((vt1.c1)>>(vt0.lid))) AND (ABS(DISTINCT vt0.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((x'0f0a') BETWEEN (((vt1.c1)>>(vt0.lid))) AND (ABS(DISTINCT vt0.lid))));
SELECT SUM(count) FROM (SELECT ((((x'0f0a') BETWEEN (((vt1.c1)>>(vt0.lid))) AND (ABS(DISTINCT vt0.lid)))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (((x'0f0a') BETWEEN (((vt1.c1)>>(vt0.lid))) AND (ABS(DISTINCT vt0.lid))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c0) IS TRUE))) WHERE (((((~ (vt0.c0))))>((JULIANDAY(rt0.c1, vt0.c0, vt0.c0, vt0.lid, rt0.c1, vt0.lid, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))>((JULIANDAY(rt0.c1, vt0.c0, vt0.c0, vt0.lid, rt0.c1, vt0.lid, rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c0) IS TRUE))) WHERE (((((~ (vt0.c0))))>((JULIANDAY(rt0.c1, vt0.c0, vt0.c0, vt0.lid, rt0.c1, vt0.lid, rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))>((JULIANDAY(rt0.c1, vt0.c0, vt0.c0, vt0.lid, rt0.c1, vt0.lid, rt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (NOT (((rt0.c0) IS TRUE))) WHERE (((((~ (vt0.c0))))>((JULIANDAY(rt0.c1, vt0.c0, vt0.c0, vt0.lid, rt0.c1, vt0.lid, rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('~⨰'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('~⨰')))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('~⨰'))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('~⨰')))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('~⨰'))));
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))!=(0.9009089415823259))) ORDER BY ((((rt0.c2) IS FALSE))>>((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<>(0.9009089415823259))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))>>((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))!=(0.9009089415823259))) ORDER BY ((((rt0.c2) IS FALSE))>>((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL))<>(0.9009089415823259))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) IS FALSE))>>((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c1) NOT NULL))!=(0.9009089415823259))) ORDER BY ((((rt0.c2) IS FALSE))>>((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((vt1.c0)AND(vt1.c1)))AND('1418892710'))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c1 IN ())) BETWEEN ((x'' IN (vt1.c1, vt1.c0))) AND ('1076462600')) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN (((((vt1.c0)AND(vt1.c1)))AND('1418892710'))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) BETWEEN ((x'' IN (vt1.c1, vt1.c0))) AND ('1076462600')) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((vt1.c0)AND(vt1.c1)))AND('1418892710'))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c1 IN ())) BETWEEN ((x'' IN (vt1.c1, vt1.c0))) AND ('1076462600')) DESC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE NOCASE) BETWEEN (((((vt1.c0)AND(vt1.c1)))AND('1418892710'))) AND (vt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ())) BETWEEN ((x'' IN (vt1.c1, vt1.c0))) AND ('1076462600')) DESC);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) BETWEEN (((((vt1.c0)AND(vt1.c1)))AND('1418892710'))) AND (vt1.c1 COLLATE NOCASE))) ORDER BY (((vt1.c1 IN ())) BETWEEN ((x'' IN (vt1.c1, vt1.c0))) AND ('1076462600')) DESC;
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.lid)))AND(-623196456)) AS NUMERIC)) ORDER BY (+ (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.lid)))AND(-623196456)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))));
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.lid)))AND(-623196456)) AS NUMERIC)) ORDER BY (+ (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))));
SELECT SUM(count) FROM (SELECT ((CAST(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.lid)))AND(-623196456)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid)))));
SELECT * FROM vt0 WHERE (CAST(((((((((vt0.lid)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.lid)))AND(-623196456)) AS NUMERIC)) ORDER BY (+ (((((vt0.lid)AND(vt0.c0)))AND(vt0.lid))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.lid)))OR((vt0.lid IN ()))))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))OR(x'aad4')))OR(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(vt0.lid)))OR((vt0.lid IN ()))))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))OR(x'aad4')))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.lid)))OR((vt0.lid IN ()))))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))OR(x'aad4')))OR(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c0 IN ()))AND(vt0.lid)))OR((vt0.lid IN ()))))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))OR(x'aad4')))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((((((vt0.c0 IN ()))AND(vt0.lid)))OR((vt0.lid IN ()))))OR((- (vt0.c0)))))AND((vt0.c0 IN ()))))OR(x'aad4')))OR(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.c0) NOT NULL) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN x'e544' THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)AND((vt1.c1 IN ()))))AND(((rt0.c0)LIKE(rt0.c2)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((CASE rt0.c1  WHEN x'e544' THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)AND((vt1.c1 IN ()))))AND(((rt0.c0)LIKE(rt0.c2)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN x'e544' THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)AND((vt1.c1 IN ()))))AND(((rt0.c0)LIKE(rt0.c2)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((CASE rt0.c1  WHEN x'e544' THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)AND((vt1.c1 IN ()))))AND(((rt0.c0)LIKE(rt0.c2)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((vt1.c0)>=(vt1.c0)) AS REAL)) ORDER BY ((((((((CASE rt0.c1  WHEN x'e544' THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)AND((vt1.c1 IN ()))))AND(((rt0.c0)LIKE(rt0.c2)))))AND(rt0.c1)))OR(CAST(rt0.c1 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)IS(rt0.c1))  WHEN (((((((('SPyd''')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) THEN (rt0.c2 IN ()) END) ORDER BY vt1.c0  NULLS LAST, TYPEOF((vt1.c0 IN ()))  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS(rt0.c1))  WHEN (((((((('SPyd''')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0  NULLS LAST, TYPEOF((vt1.c0 IN ()))  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)IS(rt0.c1))  WHEN (((((((('SPyd''')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) THEN (rt0.c2 IN ()) END) ORDER BY vt1.c0  NULLS LAST, TYPEOF((vt1.c0 IN ()))  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS(rt0.c1))  WHEN (((((((('SPyd''')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0  NULLS LAST, TYPEOF((vt1.c0 IN ()))  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)IS(rt0.c1))  WHEN (((((((('SPyd''')OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)) THEN (rt0.c2 IN ()) END) ORDER BY vt1.c0  NULLS LAST, TYPEOF((vt1.c0 IN ()))  NULLS FIRST, CASE WHEN rt0.c1 THEN rt0.c0 END COLLATE RTRIM COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(vt0.c0))) IS FALSE)) ORDER BY ((((((vt0.lid) BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'272f')))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.lid) BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'272f')))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(vt0.c0))) IS FALSE)) ORDER BY ((((((vt0.lid) BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'272f')))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.lid) BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'272f')))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0)<<(vt0.c0))) IS FALSE)) ORDER BY ((((((vt0.lid) BETWEEN (rt0.c2) AND (rt0.c1)))OR(x'272f')))AND(rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT * FROM vt1, vt0 INNER JOIN rt0 ON 0.14918464134505627 WHERE (CASE WHEN ((vt0.lid)AND(0X3e78e5e5)) THEN (((vt0.lid, vt0.c0, vt0.lid, vt1.c0, vt0.lid)) NOT BETWEEN (('6loJ((', vt0.c0, rt0.c2, vt0.lid, vt1.c0)) AND ((rt0.c2, vt1.c1, rt0.c1, rt0.c1, vt0.lid))) WHEN SQLITE_COMPILEOPTION_GET(vt1.c1) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c1)*(rt0.c2)) THEN TYPEOF(rt0.c0) WHEN TRIM(rt0.c1) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)AND(0X3e78e5e5)) THEN (((vt0.lid, vt0.c0, vt0.lid, vt1.c0, vt0.lid)) NOT BETWEEN (('6loJ((', vt0.c0, rt0.c2, vt0.lid, vt1.c0)) AND ((rt0.c2, vt1.c1, rt0.c1, rt0.c1, vt0.lid))) WHEN SQLITE_COMPILEOPTION_GET(vt1.c1) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c1)*(rt0.c2)) THEN TYPEOF(rt0.c0) WHEN TRIM(rt0.c1) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON 0.14918464134505627);
SELECT * FROM vt1, vt0 INNER JOIN rt0 ON 0.14918464134505627 WHERE (CASE WHEN ((vt0.lid)AND(0X3e78e5e5)) THEN (((vt0.lid, vt0.c0, vt0.lid, vt1.c0, vt0.lid)) NOT BETWEEN (('6loJ((', vt0.c0, rt0.c2, vt0.lid, vt1.c0)) AND ((rt0.c2, vt1.c1, rt0.c1, rt0.c1, vt0.lid))) WHEN SQLITE_COMPILEOPTION_GET(vt1.c1) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c1)*(rt0.c2)) THEN TYPEOF(rt0.c0) WHEN TRIM(rt0.c1) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)AND(0X3e78e5e5)) THEN (((vt0.lid, vt0.c0, vt0.lid, vt1.c0, vt0.lid)) NOT BETWEEN (('6loJ((', vt0.c0, rt0.c2, vt0.lid, vt1.c0)) AND ((rt0.c2, vt1.c1, rt0.c1, rt0.c1, vt0.lid))) WHEN SQLITE_COMPILEOPTION_GET(vt1.c1) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c1)*(rt0.c2)) THEN TYPEOF(rt0.c0) WHEN TRIM(rt0.c1) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON 0.14918464134505627);
SELECT * FROM vt1, vt0 INNER JOIN rt0 ON 0.14918464134505627 WHERE (CASE WHEN ((vt0.lid)AND(0X3e78e5e5)) THEN (((vt0.lid, vt0.c0, vt0.lid, vt1.c0, vt0.lid)) NOT BETWEEN (('6loJ((', vt0.c0, rt0.c2, vt0.lid, vt1.c0)) AND ((rt0.c2, vt1.c1, rt0.c1, rt0.c1, vt0.lid))) WHEN SQLITE_COMPILEOPTION_GET(vt1.c1) THEN rt0.c2 COLLATE BINARY WHEN ((vt1.c1)*(rt0.c2)) THEN TYPEOF(rt0.c0) WHEN TRIM(rt0.c1) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt0.lid)) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c1 AS NUMERIC) END);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.lid);
SELECT SUM(count) FROM (SELECT ALL ((vt0.lid) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (vt0.lid);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)||(DATE(vt1.c1, rt0.c0, vt1.c0)))) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)||(DATE(vt1.c1, rt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)||(DATE(vt1.c1, rt0.c0, vt1.c0)))) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)||(DATE(vt1.c1, rt0.c0, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)||(DATE(vt1.c1, rt0.c0, vt1.c0)))) ORDER BY ((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)) COLLATE NOCASE ASC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.lid END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.lid END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.lid END))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((NOT (CASE rt0.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt0.lid END)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt0 WHERE ((NOT (vt0.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.lid)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.lid)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((NOT (vt0.lid)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT (+ (vt0.lid)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((vt0.lid IN ())) AND (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((vt0.lid IN ())) AND (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT (+ (vt0.lid)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((vt0.lid IN ())) AND (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT (+ (vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((vt0.lid IN ())) AND (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(DISTINCT (+ (vt0.lid)))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN ((vt0.lid IN ())) AND (((vt0.lid) BETWEEN (vt0.c0) AND (vt0.lid))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((NOT (0.5575910359367753))) ORDER BY (((rt0.c1)) BETWEEN ((json(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.5575910359367753))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((json(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (0.5575910359367753))) ORDER BY (((rt0.c1)) BETWEEN ((json(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0.5575910359367753))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1)) BETWEEN ((json(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (0.5575910359367753))) ORDER BY (((rt0.c1)) BETWEEN ((json(rt0.c2))) AND ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN (~ (vt0.lid)) THEN ((vt0.lid) ISNULL) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.lid)) THEN ((vt0.lid) ISNULL) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN (~ (vt0.lid)) THEN ((vt0.lid) ISNULL) ELSE (- (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.lid)) THEN ((vt0.lid) ISNULL) ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN (~ (vt0.lid)) THEN ((vt0.lid) ISNULL) ELSE (- (vt0.c0)) END);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) ORDER BY (rt0.c0 COLLATE BINARY IN (((rt0.c1)<(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE BINARY IN (((rt0.c1)<(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) ORDER BY (rt0.c0 COLLATE BINARY IN (((rt0.c1)<(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c0 COLLATE BINARY IN (((rt0.c1)<(rt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c0)))>>(CAST(rt0.c0 AS TEXT)))) ORDER BY (rt0.c0 COLLATE BINARY IN (((rt0.c1)<(rt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) NOT NULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('-1096577483'))) ORDER BY CAST(DATETIME(vt0.lid, vt0.c0, vt0.c0, vt0.c0, vt0.lid) AS NUMERIC) DESC  NULLS LAST, LIKELIHOOD(vt0.c0, 0.16072928092862826) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('-1096577483'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(DATETIME(vt0.lid, vt0.c0, vt0.c0, vt0.c0, vt0.lid) AS NUMERIC) DESC  NULLS LAST, LIKELIHOOD(vt0.c0, 0.16072928092862826) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('-1096577483'))) ORDER BY CAST(DATETIME(vt0.lid, vt0.c0, vt0.c0, vt0.c0, vt0.lid) AS NUMERIC) DESC  NULLS LAST, LIKELIHOOD(vt0.c0, 0.16072928092862826) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('-1096577483'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(DATETIME(vt0.lid, vt0.c0, vt0.c0, vt0.c0, vt0.lid) AS NUMERIC) DESC  NULLS LAST, LIKELIHOOD(vt0.c0, 0.16072928092862826) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT ('-1096577483'))) ORDER BY CAST(DATETIME(vt0.lid, vt0.c0, vt0.c0, vt0.c0, vt0.lid) AS NUMERIC) DESC  NULLS LAST, LIKELIHOOD(vt0.c0, 0.16072928092862826) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((~ (x'')))IS NOT(((NULL) BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY ((((vt0.lid)GLOB(x'')))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (x'')))IS NOT(((NULL) BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt0.lid)GLOB(x'')))AND(CAST(rt0.c2 AS BLOB))) ASC);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((~ (x'')))IS NOT(((NULL) BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY ((((vt0.lid)GLOB(x'')))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (x'')))IS NOT(((NULL) BETWEEN (vt1.c1) AND (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((vt0.lid)GLOB(x'')))AND(CAST(rt0.c2 AS BLOB))) ASC);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((((~ (x'')))IS NOT(((NULL) BETWEEN (vt1.c1) AND (rt0.c1))))) ORDER BY ((((vt0.lid)GLOB(x'')))AND(CAST(rt0.c2 AS BLOB))) ASC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((rt0.c1 IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((~ ((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '' THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((((((((('-199510886')AND(0.6349725318398466)))OR(vt1.c1)))OR(vt0.c0)))AND(rt0.c0)))<>(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '' THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((((((('-199510886')AND(0.6349725318398466)))OR(vt1.c1)))OR(vt0.c0)))AND(rt0.c0)))!=(LOWER(DISTINCT rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '' THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((((((((('-199510886')AND(0.6349725318398466)))OR(vt1.c1)))OR(vt0.c0)))AND(rt0.c0)))<>(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '' THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((((((((('-199510886')AND(0.6349725318398466)))OR(vt1.c1)))OR(vt0.c0)))AND(rt0.c0)))!=(LOWER(DISTINCT rt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN NULL WHEN '' THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE) ORDER BY (((((((((('-199510886')AND(0.6349725318398466)))OR(vt1.c1)))OR(vt0.c0)))AND(rt0.c0)))<>(LOWER(DISTINCT rt0.c0)))  NULLS LAST;
SELECT * FROM vt0, vt1, rt0 WHERE (-1991798210) ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1991798210) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))<=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (-1991798210) ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-1991798210) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))<=((rt0.c2 IN ()))) ASC  NULLS LAST);
SELECT * FROM vt0, vt1, rt0 WHERE (-1991798210) ORDER BY ((((vt1.c0) BETWEEN (vt1.c1) AND (NULL)))<=((rt0.c2 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((vt1.c1)<>('I\rH^5x\nX')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)<>('I\rH^5x\nX')) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((vt1.c1)<>('I\rH^5x\nX')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)<>('I\rH^5x\nX')) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((vt1.c1)<>('I\rH^5x\nX')) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NULL)>>(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((22200764)OR(((0X316cb0be) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c2, NULL, vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c1, 'mnanv', rt0.c0))))))OR(rt0.c2)))AND(((vt0.c0)>=(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((22200764)OR(((0X316cb0be) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c2, NULL, vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c1, 'mnanv', rt0.c0))))))OR(rt0.c2)))AND(((vt0.c0)>=(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NULL)>>(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((22200764)OR(((0X316cb0be) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c2, NULL, vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c1, 'mnanv', rt0.c0))))))OR(rt0.c2)))AND(((vt0.c0)>=(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((NULL)>>(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c2))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((22200764)OR(((0X316cb0be) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c2, NULL, vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c1, 'mnanv', rt0.c0))))))OR(rt0.c2)))AND(((vt0.c0)>=(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((NULL)>>(rt0.c0))) BETWEEN (rt0.c1) AND ((((rt0.c2))<>((rt0.c1)))))) ORDER BY ((((((((22200764)OR(((0X316cb0be) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c2, NULL, vt0.c0, vt0.c0, rt0.c0))<>((rt0.c2, vt0.c0, rt0.c1, 'mnanv', rt0.c0))))))OR(rt0.c2)))AND(((vt0.c0)>=(rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)IS NOT(vt0.c0))) NOTNULL)) ORDER BY '378171015'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '378171015'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)IS NOT(vt0.c0))) NOTNULL)) ORDER BY '378171015'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY '378171015'  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((((vt1.c1)IS NOT(vt0.c0))) NOTNULL)) ORDER BY '378171015'  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((vt0.lid)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((vt0.lid)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((vt0.lid)=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((vt0.lid)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB)) NOT BETWEEN (((vt0.lid) IS FALSE)) AND (((vt0.lid)=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.436875685562937 END))) ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.436875685562937 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.436875685562937 END))) ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.436875685562937 END))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((~ (CASE WHEN vt0.c0 THEN rt0.c1 ELSE 0.436875685562937 END))) ORDER BY ((((vt1.c1) NOTNULL)) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((0.6307747174555529)) BETWEEN ((CASE NULL  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.6307747174555529)) BETWEEN ((CASE NULL  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((0.6307747174555529)) BETWEEN ((CASE NULL  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.6307747174555529)) BETWEEN ((CASE NULL  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((((0.6307747174555529)) BETWEEN ((CASE NULL  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.lid) NOT BETWEEN (vt1.c1) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1)AND(vt1.c1)))OR(vt0.lid)) COLLATE NOCASE WHERE (((((((((((vt1.c0)==(x'')))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((('') IS TRUE))))AND(LIKELY(vt0.lid))))AND(rt0.c2))) ORDER BY CAST(((NULL) BETWEEN (vt1.c1) AND (vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)==(x'')))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((('') IS TRUE))))AND(LIKELY(vt0.lid))))AND(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1)AND(vt1.c1)))OR(vt0.lid)) COLLATE NOCASE ORDER BY CAST(((NULL) BETWEEN (vt1.c1) AND (vt1.c1)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1)AND(vt1.c1)))OR(vt0.lid)) COLLATE NOCASE WHERE (((((((((((vt1.c0)==(x'')))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((('') IS TRUE))))AND(LIKELY(vt0.lid))))AND(rt0.c2))) ORDER BY CAST(((NULL) BETWEEN (vt1.c1) AND (vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt1.c0)==(x'')))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((('') IS TRUE))))AND(LIKELY(vt0.lid))))AND(rt0.c2))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1)AND(vt1.c1)))OR(vt0.lid)) COLLATE NOCASE ORDER BY CAST(((NULL) BETWEEN (vt1.c1) AND (vt1.c1)) AS BLOB) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((((vt1.c1)AND(vt1.c1)))OR(vt0.lid)) COLLATE NOCASE WHERE (((((((((((vt1.c0)==(x'')))AND(CASE WHEN vt1.c0 THEN vt1.c1 END)))OR((('') IS TRUE))))AND(LIKELY(vt0.lid))))AND(rt0.c2))) ORDER BY CAST(((NULL) BETWEEN (vt1.c1) AND (vt1.c1)) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt0.lid) ISNULL)) ISNULL) WHERE (((((vt0.c0) IS FALSE))LIKE(x''))) ORDER BY NULLIF(rt0.c2, rt0.c1) COLLATE BINARY COLLATE NOCASE  NULLS LAST, ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))|((('yYe^Nf')GLOB(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))LIKE(x''))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.lid) ISNULL)) ISNULL) ORDER BY NULLIF(rt0.c2, rt0.c1) COLLATE BINARY COLLATE NOCASE  NULLS LAST, ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))|((('yYe^Nf')GLOB(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt0.lid) ISNULL)) ISNULL) WHERE (((((vt0.c0) IS FALSE))LIKE(x''))) ORDER BY NULLIF(rt0.c2, rt0.c1) COLLATE BINARY COLLATE NOCASE  NULLS LAST, ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))|((('yYe^Nf')GLOB(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))LIKE(x''))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((vt0.lid) ISNULL)) ISNULL) ORDER BY NULLIF(rt0.c2, rt0.c1) COLLATE BINARY COLLATE NOCASE  NULLS LAST, ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))|((('yYe^Nf')GLOB(rt0.c2)))) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((vt0.lid) ISNULL)) ISNULL) WHERE (((((vt0.c0) IS FALSE))LIKE(x''))) ORDER BY NULLIF(rt0.c2, rt0.c1) COLLATE BINARY COLLATE NOCASE  NULLS LAST, ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))|((('yYe^Nf')GLOB(rt0.c2)))) ASC;
SELECT ALL * FROM vt1, rt0, vt0 WHERE (TRIM(DISTINCT (NOT (vt1.c0)), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt1.c0)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (TRIM(DISTINCT (NOT (vt1.c0)), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (vt1.c0)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL * FROM vt1, rt0, vt0 WHERE (TRIM(DISTINCT (NOT (vt1.c0)), rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))||(((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))||(((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))||(((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))||(((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((vt0.lid)AND(vt0.lid)))OR(vt0.c0)))||(((((((((rt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((986422905)GLOB(vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(STRFTIME(rt0.c0, vt1.c0, rt0.c2)))  NULLS FIRST, CAST(((vt0.lid) IS TRUE) AS INTEGER) ASC  NULLS LAST, x'b98b' DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((986422905)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((vt0.c0 COLLATE RTRIM)%(STRFTIME(rt0.c0, vt1.c0, rt0.c2)))  NULLS FIRST, CAST(((vt0.lid) IS TRUE) AS INTEGER) ASC  NULLS LAST, x'b98b' DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((986422905)GLOB(vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(STRFTIME(rt0.c0, vt1.c0, rt0.c2)))  NULLS FIRST, CAST(((vt0.lid) IS TRUE) AS INTEGER) ASC  NULLS LAST, x'b98b' DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((986422905)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((vt0.c0 COLLATE RTRIM)%(STRFTIME(rt0.c0, vt1.c0, rt0.c2)))  NULLS FIRST, CAST(((vt0.lid) IS TRUE) AS INTEGER) ASC  NULLS LAST, x'b98b' DESC);
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE ((NOT (((986422905)GLOB(vt1.c0))))) ORDER BY ((vt0.c0 COLLATE RTRIM)%(STRFTIME(rt0.c0, vt1.c0, rt0.c2)))  NULLS FIRST, CAST(((vt0.lid) IS TRUE) AS INTEGER) ASC  NULLS LAST, x'b98b' DESC;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY vt0.c0  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE (CAST(vt1.c0 AS TEXT) COLLATE NOCASE) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (CAST(CASE WHEN vt0.c0 THEN 0.463162844399722 ELSE vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c1)LIKE(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN 0.463162844399722 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) ORDER BY ((((vt1.c1)LIKE(vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (CAST(CASE WHEN vt0.c0 THEN 0.463162844399722 ELSE vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c1)LIKE(vt1.c0))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN 0.463162844399722 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) ORDER BY ((((vt1.c1)LIKE(vt1.c0))) IS TRUE) ASC);
SELECT ALL * FROM vt1 FULL OUTER JOIN vt0 ON (((vt1.c0 IN ()))AND(((((vt1.c1)OR(vt1.c0)))AND(vt0.c0)))) WHERE (CAST(CASE WHEN vt0.c0 THEN 0.463162844399722 ELSE vt0.c0 END AS BLOB)) ORDER BY ((((vt1.c1)LIKE(vt1.c0))) IS TRUE) ASC;
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN ((vt0.c0)<<(vt0.lid)) WHEN (- (vt0.c0)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN vt0.lid END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.lid IN ()) THEN ((vt0.c0)<<(vt0.lid)) WHEN (- (vt0.c0)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN vt0.lid END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN ((vt0.c0)<<(vt0.lid)) WHEN (- (vt0.c0)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN vt0.lid END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.lid IN ()) THEN ((vt0.c0)<<(vt0.lid)) WHEN (- (vt0.c0)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN vt0.lid END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)  NULLS FIRST);
SELECT * FROM vt0 WHERE (CASE WHEN (vt0.lid IN ()) THEN ((vt0.c0)<<(vt0.lid)) WHEN (- (vt0.c0)) THEN vt0.lid WHEN TRIM(vt0.c0) THEN vt0.lid END) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.lid)) AND ((vt0.c0)))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON DATE((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((vt0.lid) NOT NULL), (((vt0.lid, rt0.c2, rt0.c2, x'', rt0.c0))<>((vt0.lid, NULL, '-1264279889', rt0.c2, rt0.c1)))) CROSS JOIN vt1 ON (((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))OR((- (rt0.c0)))))AND(((((((((rt0.c2)AND(vt1.c1)))OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))) WHERE ((((((((((rt0.c1 IN (rt0.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c1 AS BLOB))))AND(((((vt1.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(((vt0.lid)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN (rt0.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c1 AS BLOB))))AND(((((vt1.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(((vt0.lid)<>(vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON DATE((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((vt0.lid) NOT NULL), (((vt0.lid, rt0.c2, rt0.c2, x'', rt0.c0))<>((vt0.lid, NULL, '-1264279889', rt0.c2, rt0.c1)))) CROSS JOIN vt1 ON (((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))OR((- (rt0.c0)))))AND(((((((((rt0.c2)AND(vt1.c1)))OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON DATE((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((vt0.lid) NOT NULL), (((vt0.lid, rt0.c2, rt0.c2, x'', rt0.c0))<>((vt0.lid, NULL, '-1264279889', rt0.c2, rt0.c1)))) CROSS JOIN vt1 ON (((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))OR((- (rt0.c0)))))AND(((((((((rt0.c2)AND(vt1.c1)))OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))) WHERE ((((((((((rt0.c1 IN (rt0.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c1 AS BLOB))))AND(((((vt1.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(((vt0.lid)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1 IN (rt0.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c1 AS BLOB))))AND(((((vt1.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(((vt0.lid)<>(vt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON DATE((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((vt0.lid) NOT NULL), (((vt0.lid, rt0.c2, rt0.c2, x'', rt0.c0))<>((vt0.lid, NULL, '-1264279889', rt0.c2, rt0.c1)))) CROSS JOIN vt1 ON (((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))OR((- (rt0.c0)))))AND(((((((((rt0.c2)AND(vt1.c1)))OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt0 ON DATE((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((vt0.lid) NOT NULL), (((vt0.lid, rt0.c2, rt0.c2, x'', rt0.c0))<>((vt0.lid, NULL, '-1264279889', rt0.c2, rt0.c1)))) CROSS JOIN vt1 ON (((((((vt1.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c0))))OR((- (rt0.c0)))))AND(((((((((rt0.c2)AND(vt1.c1)))OR(NULL)))OR(rt0.c2)))AND(vt1.c0)))) WHERE ((((((((((rt0.c1 IN (rt0.c0)))OR(vt1.c1 COLLATE RTRIM)))OR(CAST(vt1.c1 AS BLOB))))AND(((((vt1.c1)OR(rt0.c0)))OR(rt0.c2)))))OR(((vt0.lid)<>(vt0.c0)))));
SELECT * FROM vt1 WHERE (0.906259236113464) ORDER BY (NOT (((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.906259236113464) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (0.906259236113464) ORDER BY (NOT (((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.906259236113464) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ASC);
SELECT * FROM vt1 WHERE (0.906259236113464) ORDER BY (NOT (((((((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))) ASC;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.lid))) IS TRUE) WHERE (CASE (((vt1.c0, NULL, vt1.c1))==((vt0.lid, vt1.c0, vt1.c1)))  WHEN ((vt1.c0)<=(vt0.lid)) THEN (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((vt0.c0, vt1.c1, vt0.lid))) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0, NULL, vt1.c1))==((vt0.lid, vt1.c0, vt1.c1)))  WHEN ((vt1.c0)<=(vt0.lid)) THEN (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((vt0.c0, vt1.c1, vt0.lid))) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.lid))) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.lid))) IS TRUE) WHERE (CASE (((vt1.c0, NULL, vt1.c1))==((vt0.lid, vt1.c0, vt1.c1)))  WHEN ((vt1.c0)<=(vt0.lid)) THEN (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((vt0.c0, vt1.c1, vt0.lid))) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE (((vt1.c0, NULL, vt1.c1))==((vt0.lid, vt1.c0, vt1.c1)))  WHEN ((vt1.c0)<=(vt0.lid)) THEN (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((vt0.c0, vt1.c1, vt0.lid))) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.lid))) IS TRUE));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)%(vt0.lid))) IS TRUE) WHERE (CASE (((vt1.c0, NULL, vt1.c1))==((vt0.lid, vt1.c0, vt1.c1)))  WHEN ((vt1.c0)<=(vt0.lid)) THEN (((vt0.c0, vt1.c1, vt1.c0)) BETWEEN ((vt0.c0, vt0.lid, vt0.lid)) AND ((vt0.c0, vt1.c1, vt0.lid))) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c1))) NOTNULL) WHERE (((vt0.c0)IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c1))) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c1))) NOTNULL) WHERE (((vt0.c0)IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c1))) NOTNULL));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)<<(rt0.c1))) NOTNULL) WHERE (((vt0.c0)IS(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END)));
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE BINARY) ORDER BY ((((((vt0.c0)OR(vt0.lid)))OR(vt0.c0)))LIKE(((vt0.c0)/(vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0x32498f53 THEN (((rt0.c1))!=((rt0.c2))) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE BINARY WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY (((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(CAST(0.5248060706511913 AS TEXT))))OR((rt0.c1 IN (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0x32498f53 THEN (((rt0.c1))<>((rt0.c2))) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE BINARY WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(CAST(0.5248060706511913 AS TEXT))))OR((rt0.c1 IN (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0x32498f53 THEN (((rt0.c1))!=((rt0.c2))) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE BINARY WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY (((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(CAST(0.5248060706511913 AS TEXT))))OR((rt0.c1 IN (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0x32498f53 THEN (((rt0.c1))<>((rt0.c2))) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE BINARY WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0 ORDER BY (((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(CAST(0.5248060706511913 AS TEXT))))OR((rt0.c1 IN (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE WHEN 0x32498f53 THEN (((rt0.c1))!=((rt0.c2))) WHEN CAST(rt0.c1 AS BLOB) THEN rt0.c0 COLLATE BINARY WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY (((((((((~ (rt0.c0)))AND((rt0.c1 IN ()))))AND(CAST(0.5248060706511913 AS TEXT))))OR((rt0.c1 IN (rt0.c0)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.lid AS NUMERIC) IN (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.lid AS NUMERIC) IN (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.lid AS NUMERIC) IN (((vt0.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.lid AS NUMERIC) IN (((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.lid AS NUMERIC) IN (((vt0.c0)&(vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((rt0.c1)IS NOT(vt0.lid)))-((((vt0.c0))<>((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)IS NOT(vt0.lid)))-((((vt0.c0))<>((rt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((rt0.c1)IS NOT(vt0.lid)))-((((vt0.c0))<>((rt0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c1)IS NOT(vt0.lid)))-((((vt0.c0))<>((rt0.c0)))))  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN vt0.lid WHEN rt0.c2 THEN rt0.c1 END AS BLOB)) ORDER BY ((((rt0.c1)IS NOT(vt0.lid)))-((((vt0.c0))<>((rt0.c0)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((LIKELY(vt1.c0)) NOT BETWEEN (-98321611) AND (NULLIF(vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt1.c0)) NOT BETWEEN (-98321611) AND (NULLIF(vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((LIKELY(vt1.c0)) NOT BETWEEN (-98321611) AND (NULLIF(vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(vt1.c0)) NOT BETWEEN (-98321611) AND (NULLIF(vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 NOT INDEXED WHERE (((LIKELY(vt1.c0)) NOT BETWEEN (-98321611) AND (NULLIF(vt1.c1, vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.13089917205960788) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt1.c0, 0.13089917205960788) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.13089917205960788) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT vt1.c0, 0.13089917205960788) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT vt1.c0, 0.13089917205960788) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((LIKELIHOOD(vt1.c1, 0.4100697772298103)) BETWEEN (((rt0.c2)<<(vt1.c1))) AND (0.08825055646872859)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt1.c1, 0.4100697772298103)) BETWEEN (((rt0.c2)<<(vt1.c1))) AND (0.08825055646872859))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((LIKELIHOOD(vt1.c1, 0.4100697772298103)) BETWEEN (((rt0.c2)<<(vt1.c1))) AND (0.08825055646872859)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(vt1.c1, 0.4100697772298103)) BETWEEN (((rt0.c2)<<(vt1.c1))) AND (0.08825055646872859))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((LIKELIHOOD(vt1.c1, 0.4100697772298103)) BETWEEN (((rt0.c2)<<(vt1.c1))) AND (0.08825055646872859)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON NULL);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON NULL WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.lid)))) ORDER BY -8.50694197E8, (((((vt0.c0)+(x''))))=((((vt0.c0)<>(vt0.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY -8.50694197E8, (((((vt0.c0)+(x''))))==((((vt0.c0)<>(vt0.lid)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.lid)))) ORDER BY -8.50694197E8, (((((vt0.c0)+(x''))))=((((vt0.c0)<>(vt0.lid)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY -8.50694197E8, (((((vt0.c0)+(x''))))==((((vt0.c0)<>(vt0.lid)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (UPPER(((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.lid)))OR(vt0.c0)))OR(vt0.lid)))OR(vt0.lid)))) ORDER BY -8.50694197E8, (((((vt0.c0)+(x''))))=((((vt0.c0)<>(vt0.lid)))))  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)/(rt0.c1)))/(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)/(rt0.c1)))/(vt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)/(rt0.c1)))/(vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c1)/(rt0.c1)))/(vt1.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LOWER(DISTINCT ((vt0.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) AS REAL));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)) AND ((COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, x''))))) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END IN (rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)) AND ((COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, x''))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END IN (rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)) AND ((COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, x''))))) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END IN (rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)) AND ((COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, x''))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END IN (rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c1 END)) AND ((COALESCE(rt0.c0, rt0.c0, rt0.c1, rt0.c2, rt0.c1, x''))))) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END IN (rt0.c1 COLLATE RTRIM, rt0.c1 COLLATE NOCASE)) ASC;
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c0)=(NULL)))>(LIKELY(DISTINCT rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)=(NULL)))>(LIKELY(DISTINCT rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c0)=(NULL)))>(LIKELY(DISTINCT rt0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)=(NULL)))>(LIKELY(DISTINCT rt0.c2))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c2 IN ())) IS TRUE)) ORDER BY ((((rt0.c0)=(NULL)))>(LIKELY(DISTINCT rt0.c2))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c2) THEN LIKELIHOOD(DISTINCT 0.15186764453887025, 0.7710946655987693) END) ORDER BY (((+ (0.8923573970573653))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT rt0.c2) THEN LIKELIHOOD(DISTINCT 0.15186764453887025, 0.7710946655987693) END) IS TRUE)  as count FROM rt0 ORDER BY (((+ (0.8923573970573653))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c2) THEN LIKELIHOOD(DISTINCT 0.15186764453887025, 0.7710946655987693) END) ORDER BY (((+ (0.8923573970573653))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT rt0.c2) THEN LIKELIHOOD(DISTINCT 0.15186764453887025, 0.7710946655987693) END) IS TRUE)  as count FROM rt0 ORDER BY (((+ (0.8923573970573653))) ISNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN UPPER(DISTINCT rt0.c2) THEN LIKELIHOOD(DISTINCT 0.15186764453887025, 0.7710946655987693) END) ORDER BY (((+ (0.8923573970573653))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((((((((vt0.lid)OR(vt0.lid)))AND(vt1.c0)))OR(0.5222485953552781)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.lid)OR(vt0.lid)))AND(vt1.c0)))OR(0.5222485953552781)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((((((((vt0.lid)OR(vt0.lid)))AND(vt1.c0)))OR(0.5222485953552781)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt0.lid)OR(vt0.lid)))AND(vt1.c0)))OR(0.5222485953552781)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE ((((((((vt0.lid)OR(vt0.lid)))AND(vt1.c0)))OR(0.5222485953552781)))OR(vt1.c1))  WHEN (vt0.c0 IN ()) THEN SQLITE_SOURCE_ID() END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) BETWEEN (vt1.c0) AND (NULL))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))) AND (LOWER(vt1.c0))) RIGHT OUTER JOIN rt0 ON ((vt1.c0 COLLATE RTRIM)&(rt0.c2 COLLATE NOCASE)) WHERE (((CASE WHEN rt0.c2 THEN vt1.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt1.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) BETWEEN (vt1.c0) AND (NULL))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))) AND (LOWER(vt1.c0))) RIGHT OUTER JOIN rt0 ON ((vt1.c0 COLLATE RTRIM)&(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) BETWEEN (vt1.c0) AND (NULL))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))) AND (LOWER(vt1.c0))) RIGHT OUTER JOIN rt0 ON ((vt1.c0 COLLATE RTRIM)&(rt0.c2 COLLATE NOCASE)) WHERE (((CASE WHEN rt0.c2 THEN vt1.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt1.c1 END)<=((vt1.c0 IN (rt0.c1, vt1.c0))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((((vt0.lid) BETWEEN (vt1.c0) AND (NULL))) BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt0.lid)) AND ((vt0.lid)))) AND (LOWER(vt1.c0))) RIGHT OUTER JOIN rt0 ON ((vt1.c0 COLLATE RTRIM)&(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c0)>>(vt0.c0)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0)>>(vt0.c0)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_array_length(((vt0.c0)>>(vt0.c0)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0)>>(vt0.c0)), CASE WHEN vt0.lid THEN vt0.c0 ELSE vt0.lid END)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (MIN(SQLITE_COMPILEOPTION_GET(rt0.c2), UNLIKELY(rt0.c1), LOWER(rt0.c0), vt1.c0)) ORDER BY rt0.c0, ((((rt0.c1) BETWEEN (vt0.lid) AND (vt0.lid))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((MIN(SQLITE_COMPILEOPTION_GET(rt0.c2), UNLIKELY(rt0.c1), LOWER(rt0.c0), vt1.c0)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c0, ((((rt0.c1) BETWEEN (vt0.lid) AND (vt0.lid))) NOTNULL));
SELECT ALL * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (MIN(SQLITE_COMPILEOPTION_GET(rt0.c2), UNLIKELY(rt0.c1), LOWER(rt0.c0), vt1.c0)) ORDER BY rt0.c0, ((((rt0.c1) BETWEEN (vt0.lid) AND (vt0.lid))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((MIN(SQLITE_COMPILEOPTION_GET(rt0.c2), UNLIKELY(rt0.c1), LOWER(rt0.c0), vt1.c0)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY rt0.c0, ((((rt0.c1) BETWEEN (vt0.lid) AND (vt0.lid))) NOTNULL));
SELECT ALL * FROM vt0, rt0 NOT INDEXED, vt1 WHERE (MIN(SQLITE_COMPILEOPTION_GET(rt0.c2), UNLIKELY(rt0.c1), LOWER(rt0.c0), vt1.c0)) ORDER BY rt0.c0, ((((rt0.c1) BETWEEN (vt0.lid) AND (vt0.lid))) NOTNULL);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((((vt0.lid)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt1.c1 THEN ((((rt0.c2)AND(vt0.lid)))AND(vt0.c0)) WHEN ((vt1.c1)%(rt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.lid)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt1.c1 THEN ((((rt0.c2)AND(vt0.lid)))AND(vt0.c0)) WHEN ((vt1.c1)%(rt0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((((vt0.lid)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt1.c1 THEN ((((rt0.c2)AND(vt0.lid)))AND(vt0.c0)) WHEN ((vt1.c1)%(rt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.lid)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt1.c1 THEN ((((rt0.c2)AND(vt0.lid)))AND(vt0.c0)) WHEN ((vt1.c1)%(rt0.c0)) THEN (vt1.c0 IN ()) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((((vt0.lid)AND(rt0.c0)))OR(rt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) WHEN vt1.c1 THEN ((((rt0.c2)AND(vt0.lid)))AND(vt0.c0)) WHEN ((vt1.c1)%(rt0.c0)) THEN (vt1.c0 IN ()) END);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE IFNULL(NULL, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE IFNULL(NULL, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE IFNULL(NULL, rt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE IFNULL(NULL, rt0.c0) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c0 AS INTEGER) THEN CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END ELSE IFNULL(NULL, rt0.c0) END);
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))LIKE(((((((((vt1.c1)OR(x'911057b6')))AND(vt1.c1)))AND(rt0.c1)))OR('᱖6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))LIKE(((((((((vt1.c1)OR(x'911057b6')))AND(vt1.c1)))AND(rt0.c1)))OR('᱖6'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))LIKE(((((((((vt1.c1)OR(x'911057b6')))AND(vt1.c1)))AND(rt0.c1)))OR('᱖6')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))LIKE(((((((((vt1.c1)OR(x'911057b6')))AND(vt1.c1)))AND(rt0.c1)))OR('᱖6'))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)))LIKE(((((((((vt1.c1)OR(x'911057b6')))AND(vt1.c1)))AND(rt0.c1)))OR('᱖6')))));
SELECT COUNT(*) FROM vt0, vt1 WHERE ('LI');
SELECT SUM(count) FROM (SELECT ALL (('LI') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('LI');
SELECT SUM(count) FROM (SELECT ALL (('LI') IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ('LI');
SELECT * FROM vt0 CROSS JOIN rt0 ON TYPEOF(((((rt0.c1)OR(vt1.c1)))AND(rt0.c2))) FULL OUTER JOIN vt1 ON ((CAST(vt1.c1 AS TEXT))*((('-821957800')GLOB('^\}')))) WHERE ((((((vt1.c1))!=((rt0.c0))))<(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))!=((rt0.c0))))<(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON TYPEOF(((((rt0.c1)OR(vt1.c1)))AND(rt0.c2))) FULL OUTER JOIN vt1 ON ((CAST(vt1.c1 AS TEXT))*((('-821957800')GLOB('^\}')))));
SELECT * FROM vt0 CROSS JOIN rt0 ON TYPEOF(((((rt0.c1)OR(vt1.c1)))AND(rt0.c2))) FULL OUTER JOIN vt1 ON ((CAST(vt1.c1 AS TEXT))*((('-821957800')GLOB('^\}')))) WHERE ((((((vt1.c1))!=((rt0.c0))))<(((rt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1))!=((rt0.c0))))<(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON TYPEOF(((((rt0.c1)OR(vt1.c1)))AND(rt0.c2))) FULL OUTER JOIN vt1 ON ((CAST(vt1.c1 AS TEXT))*((('-821957800')GLOB('^\}')))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((1529954396)AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CASE rt0.c0  WHEN vt0.lid THEN rt0.c1 END)) WHERE ((- (((vt0.lid) IS FALSE)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.lid) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((1529954396)AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CASE rt0.c0  WHEN vt0.lid THEN rt0.c1 END)) ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((1529954396)AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CASE rt0.c0  WHEN vt0.lid THEN rt0.c1 END)) WHERE ((- (((vt0.lid) IS FALSE)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((vt0.lid) IS FALSE)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((1529954396)AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CASE rt0.c0  WHEN vt0.lid THEN rt0.c1 END)) ORDER BY vt1.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON CAST(((vt0.c0) NOTNULL) AS REAL) LEFT OUTER JOIN vt1 ON ((((((((1529954396)AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))OR(CASE WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c2 END)))AND(vt0.c0 COLLATE NOCASE)))AND(CASE rt0.c0  WHEN vt0.lid THEN rt0.c1 END)) WHERE ((- (((vt0.lid) IS FALSE)))) ORDER BY vt1.c0 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0.2468504877619777) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2468504877619777) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.2468504877619777) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.2468504877619777) IS TRUE)  as count FROM rt0 ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.2468504877619777) ORDER BY CAST(NULL COLLATE BINARY AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c1) NOT NULL))))OR(((0.9251758646864696) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND(((rt0.c1) NOT NULL))))OR(((0.9251758646864696) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c1) NOT NULL))))OR(((0.9251758646864696) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT NULL))AND(((rt0.c1) NOT NULL))))OR(((0.9251758646864696) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT NULL))AND(((rt0.c1) NOT NULL))))OR(((0.9251758646864696) NOT NULL))));
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)) AS REAL));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((CASE vt0.lid  WHEN vt1.c0 THEN vt1.c0 END)AND(-598803893)))AND(COALESCE(rt0.c0, 'nW6'))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.lid  WHEN vt1.c0 THEN vt1.c0 END)AND(-598803893)))AND(COALESCE(rt0.c0, 'nW6')))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((CASE vt0.lid  WHEN vt1.c0 THEN vt1.c0 END)AND(-598803893)))AND(COALESCE(rt0.c0, 'nW6'))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE vt0.lid  WHEN vt1.c0 THEN vt1.c0 END)AND(-598803893)))AND(COALESCE(rt0.c0, 'nW6')))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (((((CASE vt0.lid  WHEN vt1.c0 THEN vt1.c0 END)AND(-598803893)))AND(COALESCE(rt0.c0, 'nW6'))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)IS NOT((vt1.c1 IN ())))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c1) IS TRUE)) AND (((vt1.c1)<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT((vt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c1) IS TRUE)) AND (((vt1.c1)<(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)IS NOT((vt1.c1 IN ())))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c1) IS TRUE)) AND (((vt1.c1)<(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)IS NOT((vt1.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c1) IS TRUE)) AND (((vt1.c1)<(rt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1)IS NOT((vt1.c1 IN ())))) ORDER BY ((((rt0.c1) IS FALSE)) BETWEEN (((rt0.c1) IS TRUE)) AND (((vt1.c1)<(rt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((1.924029063E9 COLLATE NOCASE)<=(CAST('' AS INTEGER)))) ORDER BY (+ (rt0.c2 COLLATE RTRIM)), ((ABS(rt0.c2))IS NOT(load_extension(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((1.924029063E9 COLLATE NOCASE)<=(CAST('' AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ (rt0.c2 COLLATE RTRIM)), ((ABS(rt0.c2))IS NOT(load_extension(vt1.c0))));
SELECT * FROM rt0, vt1 WHERE (((1.924029063E9 COLLATE NOCASE)<=(CAST('' AS INTEGER)))) ORDER BY (+ (rt0.c2 COLLATE RTRIM)), ((ABS(rt0.c2))IS NOT(load_extension(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((1.924029063E9 COLLATE NOCASE)<=(CAST('' AS INTEGER)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ (rt0.c2 COLLATE RTRIM)), ((ABS(rt0.c2))IS NOT(load_extension(vt1.c0))));
SELECT * FROM rt0, vt1 WHERE (((1.924029063E9 COLLATE NOCASE)<=(CAST('' AS INTEGER)))) ORDER BY (+ (rt0.c2 COLLATE RTRIM)), ((ABS(rt0.c2))IS NOT(load_extension(vt1.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(DISTINCT vt0.c0) IN (UNLIKELY(DISTINCT vt0.lid)))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)&(vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT vt0.c0) IN (UNLIKELY(DISTINCT vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)&(vt0.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(DISTINCT vt0.c0) IN (UNLIKELY(DISTINCT vt0.lid)))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)&(vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((UPPER(DISTINCT vt0.c0) IN (UNLIKELY(DISTINCT vt0.lid)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)&(vt0.lid))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((UPPER(DISTINCT vt0.c0) IN (UNLIKELY(DISTINCT vt0.lid)))) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((vt0.c0)&(vt0.lid))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(TYPEOF(DISTINCT vt0.lid), 0.7856828663900606)) ORDER BY (- (CAST(vt0.lid AS REAL))), (((((+ (vt1.c1)))OR(vt0.lid COLLATE BINARY)))AND(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(TYPEOF(DISTINCT vt0.lid), 0.7856828663900606)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY (- (CAST(vt0.lid AS REAL))), (((((+ (vt1.c1)))OR(vt0.lid COLLATE BINARY)))AND(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(TYPEOF(DISTINCT vt0.lid), 0.7856828663900606)) ORDER BY (- (CAST(vt0.lid AS REAL))), (((((+ (vt1.c1)))OR(vt0.lid COLLATE BINARY)))AND(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(TYPEOF(DISTINCT vt0.lid), 0.7856828663900606)) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN vt1 ORDER BY (- (CAST(vt0.lid AS REAL))), (((((+ (vt1.c1)))OR(vt0.lid COLLATE BINARY)))AND(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 NATURAL JOIN vt1 WHERE (LIKELIHOOD(TYPEOF(DISTINCT vt0.lid), 0.7856828663900606)) ORDER BY (- (CAST(vt0.lid AS REAL))), (((((+ (vt1.c1)))OR(vt0.lid COLLATE BINARY)))AND(rt0.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(IFNULL(vt0.c0, vt0.lid), ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((LTRIM(IFNULL(vt0.c0, vt0.lid), ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(IFNULL(vt0.c0, vt0.lid), ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((LTRIM(IFNULL(vt0.c0, vt0.lid), ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (LTRIM(IFNULL(vt0.c0, vt0.lid), ((vt0.lid) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (-3.31653496E8) ORDER BY ((((NULL)OR(((vt1.c0)OR(0.16880697284755042)))))AND(vt0.c0)), ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt0.c0)+(vt1.c1)))))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-3.31653496E8) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((NULL)OR(((vt1.c0)OR(0.16880697284755042)))))AND(vt0.c0)), ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt0.c0)+(vt1.c1)))))AND(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (-3.31653496E8) ORDER BY ((((NULL)OR(((vt1.c0)OR(0.16880697284755042)))))AND(vt0.c0)), ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt0.c0)+(vt1.c1)))))AND(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-3.31653496E8) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((NULL)OR(((vt1.c0)OR(0.16880697284755042)))))AND(vt0.c0)), ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt0.c0)+(vt1.c1)))))AND(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE (-3.31653496E8) ORDER BY ((((NULL)OR(((vt1.c0)OR(0.16880697284755042)))))AND(vt0.c0)), ((((((vt0.lid) NOT BETWEEN (vt1.c0) AND (vt1.c1)))OR(((vt0.c0)+(vt1.c1)))))AND(rt0.c1))  NULLS LAST;
SELECT ALL * FROM vt1, vt0 WHERE (((-1854493643)<<(COALESCE(vt0.lid, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((-1854493643)<<(COALESCE(vt0.lid, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((-1854493643)<<(COALESCE(vt0.lid, vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((-1854493643)<<(COALESCE(vt0.lid, vt1.c1)))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((-1854493643)<<(COALESCE(vt0.lid, vt1.c1))));
SELECT * FROM vt0, rt0, vt1 WHERE (CASE WHEN (- (',%Qlo쟩')) THEN (((vt0.c0))>=((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (',%Qlo쟩')) THEN (((vt0.c0))>=((rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CASE WHEN (- (',%Qlo쟩')) THEN (((vt0.c0))>=((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (',%Qlo쟩')) THEN (((vt0.c0))>=((rt0.c1))) END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT * FROM vt0, rt0, vt1 WHERE (CASE WHEN (- (',%Qlo쟩')) THEN (((vt0.c0))>=((rt0.c1))) END);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LIKELY(DISTINCT '') THEN vt0.c0 ELSE ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT '') THEN vt0.c0 ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LIKELY(DISTINCT '') THEN vt0.c0 ELSE ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LIKELY(DISTINCT '') THEN vt0.c0 ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN LIKELY(DISTINCT '') THEN vt0.c0 ELSE ((rt0.c1) IS TRUE) END);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY (((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC, (~ (vt1.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC, (~ (vt1.c1 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY (((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC, (~ (vt1.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC, (~ (vt1.c1 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt1 WHERE ((- (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) ORDER BY (((x'') NOT BETWEEN (vt1.c0) AND (vt1.c0)) IN ()) ASC, (~ (vt1.c1 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (vt0.c0, vt0.lid)))|(((vt0.lid)IS NOT(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid IN (vt0.c0, vt0.lid)))|(((vt0.lid)IS NOT(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (vt0.c0, vt0.lid)))|(((vt0.lid)IS NOT(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.lid IN (vt0.c0, vt0.lid)))|(((vt0.lid)IS NOT(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.lid IN (vt0.c0, vt0.lid)))|(((vt0.lid)IS NOT(vt0.lid)))));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((vt0.c0)!=(vt1.c1)) IN ()) WHERE ((((0.8840683414171214, vt0.lid, rt0.c2)) NOT BETWEEN ((((((((((0xfffffffff41893bd)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)), vt0.lid COLLATE NOCASE, ((vt0.c0)|(NULL)))) AND ((((vt0.c0) NOTNULL), (((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.lid))), UPPER(DISTINCT vt1.c0))))) ORDER BY (((vt1.c0)GLOB(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((0.8840683414171214, vt0.lid, rt0.c2)) NOT BETWEEN ((((((((((0xfffffffff41893bd)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)), vt0.lid COLLATE NOCASE, ((vt0.c0)|(NULL)))) AND ((((vt0.c0) NOTNULL), (((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.lid))), UPPER(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((vt0.c0)!=(vt1.c1)) IN ()) ORDER BY (((vt1.c0)GLOB(rt0.c0)) IN ()));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((vt0.c0)!=(vt1.c1)) IN ()) WHERE ((((0.8840683414171214, vt0.lid, rt0.c2)) NOT BETWEEN ((((((((((0xfffffffff41893bd)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)), vt0.lid COLLATE NOCASE, ((vt0.c0)|(NULL)))) AND ((((vt0.c0) NOTNULL), (((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.lid))), UPPER(DISTINCT vt1.c0))))) ORDER BY (((vt1.c0)GLOB(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((0.8840683414171214, vt0.lid, rt0.c2)) NOT BETWEEN ((((((((((0xfffffffff41893bd)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)), vt0.lid COLLATE NOCASE, ((vt0.c0)|(NULL)))) AND ((((vt0.c0) NOTNULL), (((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.lid))), UPPER(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((vt0.c0)!=(vt1.c1)) IN ()) ORDER BY (((vt1.c0)GLOB(rt0.c0)) IN ()));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON vt0.c0 FULL OUTER JOIN vt1 ON (((vt0.c0)!=(vt1.c1)) IN ()) WHERE ((((0.8840683414171214, vt0.lid, rt0.c2)) NOT BETWEEN ((((((((((0xfffffffff41893bd)AND(rt0.c0)))OR(rt0.c2)))AND(vt0.c0)))OR(rt0.c2)), vt0.lid COLLATE NOCASE, ((vt0.c0)|(NULL)))) AND ((((vt0.c0) NOTNULL), (((rt0.c0)) BETWEEN ((NULL)) AND ((vt0.lid))), UPPER(DISTINCT vt1.c0))))) ORDER BY (((vt1.c0)GLOB(rt0.c0)) IN ());
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) ORDER BY (NOT (((rt0.c1)|(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)|(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) ORDER BY (NOT (((rt0.c1)|(rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT (((rt0.c1)|(rt0.c2)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(DISTINCT (((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c1, rt0.c1, rt0.c2))))) ORDER BY (NOT (((rt0.c1)|(rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((NULL))>=((rt0.c1))))<=(CAST(vt0.lid AS TEXT)))) ORDER BY CASE CAST(x'' AS TEXT)  WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN '64>Z,#j_L' THEN vt1.c0 ELSE vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))>=((rt0.c1))))<=(CAST(vt0.lid AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE CAST(x'' AS TEXT)  WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN '64>Z,#j_L' THEN vt1.c0 ELSE vt1.c0 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((NULL))>=((rt0.c1))))<=(CAST(vt0.lid AS TEXT)))) ORDER BY CASE CAST(x'' AS TEXT)  WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN '64>Z,#j_L' THEN vt1.c0 ELSE vt1.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL))>=((rt0.c1))))<=(CAST(vt0.lid AS TEXT)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE CAST(x'' AS TEXT)  WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN '64>Z,#j_L' THEN vt1.c0 ELSE vt1.c0 END END DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, vt1 WHERE ((((((NULL))>=((rt0.c1))))<=(CAST(vt0.lid AS TEXT)))) ORDER BY CASE CAST(x'' AS TEXT)  WHEN (rt0.c1 IN (rt0.c2)) THEN CASE rt0.c0  WHEN '64>Z,#j_L' THEN vt1.c0 ELSE vt1.c0 END END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((- (rt0.c1)))))) ORDER BY (((rt0.c2))<>((4.34434989E8))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<>((4.34434989E8))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((- (rt0.c1)))))) ORDER BY (((rt0.c2))<>((4.34434989E8))) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2))<>((4.34434989E8))) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND (((- (rt0.c1)))))) ORDER BY (((rt0.c2))<>((4.34434989E8))) COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))<=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))<=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))<=((vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))<=((vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 END))<=((vt1.c0))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)AND(rt0.c2)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)AND(rt0.c2)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)AND(rt0.c2)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((((rt0.c0)AND(rt0.c2)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0)AND(rt0.c2)))) AND ((rt0.c1))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c2) ORDER BY 'SPyd''' ASC  NULLS LAST, DATE((NOT (vt1.c0)), (+ (vt1.c0)), vt0.c0 COLLATE RTRIM) DESC, LOWER(((rt0.c2) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY 'SPyd''' ASC  NULLS LAST, DATE((NOT (vt1.c0)), (+ (vt1.c0)), vt0.c0 COLLATE RTRIM) DESC, LOWER(((rt0.c2) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c2) ORDER BY 'SPyd''' ASC  NULLS LAST, DATE((NOT (vt1.c0)), (+ (vt1.c0)), vt0.c0 COLLATE RTRIM) DESC, LOWER(((rt0.c2) IS TRUE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY 'SPyd''' ASC  NULLS LAST, DATE((NOT (vt1.c0)), (+ (vt1.c0)), vt0.c0 COLLATE RTRIM) DESC, LOWER(((rt0.c2) IS TRUE)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (rt0.c2) ORDER BY 'SPyd''' ASC  NULLS LAST, DATE((NOT (vt1.c0)), (+ (vt1.c0)), vt0.c0 COLLATE RTRIM) DESC, LOWER(((rt0.c2) IS TRUE)) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.lid)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.lid)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.lid)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.lid)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.lid)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ((('㘕	0u6? '))=((((((rt0.c0)AND(vt1.c1)))OR(vt0.lid))))) WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((('㘕	0u6? '))==((((((rt0.c0)AND(vt1.c1)))OR(vt0.lid))))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ((('㘕	0u6? '))=((((((rt0.c0)AND(vt1.c1)))OR(vt0.lid))))) WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0, vt1 CROSS JOIN vt0 ON ((('㘕	0u6? '))==((((((rt0.c0)AND(vt1.c1)))OR(vt0.lid))))));
SELECT ALL COUNT(*) FROM rt0, vt1 CROSS JOIN vt0 ON ((('㘕	0u6? '))=((((((rt0.c0)AND(vt1.c1)))OR(vt0.lid))))) WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((rt0.c2) NOTNULL))));
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c2)-(rt0.c1 COLLATE NOCASE))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) DESC, STRFTIME(rt0.c2 COLLATE RTRIM, 0.15297175990697431, ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) DESC, STRFTIME(rt0.c2 COLLATE RTRIM, 0.15297175990697431, ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c2)-(rt0.c1 COLLATE NOCASE))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) DESC, STRFTIME(rt0.c2 COLLATE RTRIM, 0.15297175990697431, ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) DESC, STRFTIME(rt0.c2 COLLATE RTRIM, 0.15297175990697431, ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM rt0, vt0, vt1 WHERE (((rt0.c2)-(rt0.c1 COLLATE NOCASE))) ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC) DESC, STRFTIME(rt0.c2 COLLATE RTRIM, 0.15297175990697431, ((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN (CAST(vt0.c0 AS REAL))) WHERE (0X780e03f5 COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN ((vt0.c0)<(vt1.c1)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x780e03f5 COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN (CAST(vt0.c0 AS REAL))) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN ((vt0.c0)<(vt1.c1)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN (CAST(vt0.c0 AS REAL))) WHERE (0X780e03f5 COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN ((vt0.c0)<(vt1.c1)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x780e03f5 COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN (CAST(vt0.c0 AS REAL))) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN ((vt0.c0)<(vt1.c1)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) IN (CAST(vt0.c0 AS REAL))) WHERE (0X780e03f5 COLLATE NOCASE) ORDER BY CASE WHEN ((vt1.c0) BETWEEN (NULL) AND (vt1.c0)) THEN ((vt0.c0)<(vt1.c1)) ELSE ((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid)LIKE(vt0.lid)))!=('-1369054383')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)LIKE(vt0.lid)))!=('-1369054383'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid)LIKE(vt0.lid)))!=('-1369054383')));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid)LIKE(vt0.lid)))!=('-1369054383'))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid)LIKE(vt0.lid)))!=('-1369054383')));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt1.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((vt1.c1) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt1.c1) NOTNULL);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((vt1.c1) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (rt0.c0) ORDER BY ((vt1.c1) NOTNULL);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((vt0.lid)AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.lid, rt0.c1, rt0.c1)) AND (('-622164640', rt0.c2, NULL))))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.lid)AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.lid, rt0.c1, rt0.c1)) AND (('-622164640', rt0.c2, NULL))))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((vt0.lid)AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.lid, rt0.c1, rt0.c1)) AND (('-622164640', rt0.c2, NULL))))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.lid)AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.lid, rt0.c1, rt0.c1)) AND (('-622164640', rt0.c2, NULL))))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((((((((vt0.lid)AND((vt0.c0 IN (rt0.c1, vt0.c0)))))AND((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((vt0.lid, rt0.c1, rt0.c1)) AND (('-622164640', rt0.c2, NULL))))))AND(((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER))));
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((~ (vt0.lid))) NOTNULL)) ORDER BY ((((rt0.c0) ISNULL))<(CASE vt0.lid  WHEN '109701150' THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c0) ISNULL))<(CASE vt0.lid  WHEN '109701150' THEN x'' END))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((~ (vt0.lid))) NOTNULL)) ORDER BY ((((rt0.c0) ISNULL))<(CASE vt0.lid  WHEN '109701150' THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (vt0.lid))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((((rt0.c0) ISNULL))<(CASE vt0.lid  WHEN '109701150' THEN x'' END))  NULLS FIRST);
SELECT ALL * FROM vt1, rt0, vt0 WHERE ((((~ (vt0.lid))) NOTNULL)) ORDER BY ((((rt0.c0) ISNULL))<(CASE vt0.lid  WHEN '109701150' THEN x'' END))  NULLS FIRST;
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.lid END))) ORDER BY (NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.lid END))) ORDER BY (NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.lid END))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.lid THEN vt1.c1 WHEN vt0.c0 THEN vt1.c1 ELSE vt0.lid END))) ORDER BY (NOT ((((vt1.c1)) BETWEEN ((vt0.lid)) AND ((vt1.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((ABS(DISTINCT rt0.c0))%(((vt0.lid) ISNULL))) WHERE ((vt1.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((ABS(DISTINCT rt0.c0))%(((vt0.lid) ISNULL))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((ABS(DISTINCT rt0.c0))%(((vt0.lid) ISNULL))) WHERE ((vt1.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt1.c1 IN (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((ABS(DISTINCT rt0.c0))%(((vt0.lid) ISNULL))));
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN vt1 ON ((ABS(DISTINCT rt0.c0))%(((vt0.lid) ISNULL))) WHERE ((vt1.c1 IN (rt0.c1)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.lid)IS(vt0.lid)))<(JULIANDAY(vt0.c0, vt0.lid, vt0.c0, 'l<K', vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (- ((((vt0.lid, vt0.lid, vt0.lid)) BETWEEN ((vt0.lid, '692633762', vt0.lid)) AND ((vt0.lid, vt0.c0, vt0.lid))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)IS(vt0.lid)))<(JULIANDAY(vt0.c0, vt0.lid, vt0.c0, 'l<K', vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.lid, vt0.lid, vt0.lid)) BETWEEN ((vt0.lid, '692633762', vt0.lid)) AND ((vt0.lid, vt0.c0, vt0.lid))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.lid)IS(vt0.lid)))<(JULIANDAY(vt0.c0, vt0.lid, vt0.c0, 'l<K', vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (- ((((vt0.lid, vt0.lid, vt0.lid)) BETWEEN ((vt0.lid, '692633762', vt0.lid)) AND ((vt0.lid, vt0.c0, vt0.lid))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)IS(vt0.lid)))<(JULIANDAY(vt0.c0, vt0.lid, vt0.c0, 'l<K', vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.lid, vt0.lid, vt0.lid)) BETWEEN ((vt0.lid, '692633762', vt0.lid)) AND ((vt0.lid, vt0.c0, vt0.lid))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.lid)IS(vt0.lid)))<(JULIANDAY(vt0.c0, vt0.lid, vt0.c0, 'l<K', vt0.c0, vt0.c0, vt0.c0)))) ORDER BY (- ((((vt0.lid, vt0.lid, vt0.lid)) BETWEEN ((vt0.lid, '692633762', vt0.lid)) AND ((vt0.lid, vt0.c0, vt0.lid))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LOWER((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) WHERE (rt0.c0) ORDER BY (~ (((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON LOWER((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ORDER BY (~ (((vt1.c0)&(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LOWER((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) WHERE (rt0.c0) ORDER BY (~ (((vt1.c0)&(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON LOWER((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ORDER BY (~ (((vt1.c0)&(vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON LOWER((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) WHERE (rt0.c0) ORDER BY (~ (((vt1.c0)&(vt1.c0))));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((((((((((((vt0.lid)<(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c0)>=(0.5345037080773607)))))OR(NULL)))AND(((vt0.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.lid)<(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c0)>=(0.5345037080773607)))))OR(NULL)))AND(((vt0.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((((((((((((vt0.lid)<(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c0)>=(0.5345037080773607)))))OR(NULL)))AND(((vt0.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((vt0.lid)<(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c0)>=(0.5345037080773607)))))OR(NULL)))AND(((vt0.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(vt1.c0))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) NOTNULL) WHERE (((((((((((((((vt0.lid)<(vt1.c0)))OR(((vt0.c0) NOTNULL))))AND(((rt0.c0)>=(0.5345037080773607)))))OR(NULL)))AND(((vt0.c0)<<(vt1.c0)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))))OR(vt1.c0)));
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c1))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c1))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((NOT (rt0.c1))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END IN ()) ASC;
SELECT * FROM vt0 WHERE (((vt0.c0)<(0.7834241021799916))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(0.7834241021799916))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)<(0.7834241021799916))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<(0.7834241021799916))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0)<(0.7834241021799916))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((+ (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((+ (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((+ (CASE vt1.c1  WHEN vt1.c1 THEN rt0.c0 END)));
SELECT * FROM vt0, vt1, rt0 WHERE (CASE x'9818'  WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE x'9818'  WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CASE x'9818'  WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE x'9818'  WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT * FROM vt0, vt1, rt0 WHERE (CASE x'9818'  WHEN vt0.c0 THEN rt0.c1 END COLLATE NOCASE);
SELECT * FROM vt1 CROSS JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON ((0.13534421340849656)=(CAST(vt1.c0 AS NUMERIC))) WHERE (0.9122117614541617) ORDER BY (- (((rt0.c2)<(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9122117614541617) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON ((0.13534421340849656)=(CAST(vt1.c0 AS NUMERIC))) ORDER BY (- (((rt0.c2)<(rt0.c0)))) DESC);
SELECT * FROM vt1 CROSS JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON ((0.13534421340849656)=(CAST(vt1.c0 AS NUMERIC))) WHERE (0.9122117614541617) ORDER BY (- (((rt0.c2)<(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9122117614541617) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON rt0.c2 RIGHT OUTER JOIN rt0 ON ((0.13534421340849656)=(CAST(vt1.c0 AS NUMERIC))) ORDER BY (- (((rt0.c2)<(rt0.c0)))) DESC);
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)%(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)%(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c2)%(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((UNICODE(vt0.lid)) NOTNULL) ASC  NULLS LAST, ((((((0.7161617656747667) IS TRUE))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.lid)) NOTNULL) ASC  NULLS LAST, ((((((0.7161617656747667) IS TRUE))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((UNICODE(vt0.lid)) NOTNULL) ASC  NULLS LAST, ((((((0.7161617656747667) IS TRUE))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.lid)) NOTNULL) ASC  NULLS LAST, ((((((0.7161617656747667) IS TRUE))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ())) ORDER BY ((UNICODE(vt0.lid)) NOTNULL) ASC  NULLS LAST, ((((((0.7161617656747667) IS TRUE))OR(((vt0.lid) BETWEEN (vt0.lid) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)) DESC, CAST(((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt1 WHERE (0.9178598050547859) ORDER BY (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))<((json_array_length(vt1.c0), ((vt1.c0)|(vt1.c0)), ((vt1.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9178598050547859) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))<((json_array_length(vt1.c0), ((vt1.c0)|(vt1.c0)), ((vt1.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.9178598050547859) ORDER BY (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))<((json_array_length(vt1.c0), ((vt1.c0)|(vt1.c0)), ((vt1.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9178598050547859) IS TRUE)  as count FROM vt1 ORDER BY (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))<((json_array_length(vt1.c0), ((vt1.c0)|(vt1.c0)), ((vt1.c0) ISNULL)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.9178598050547859) ORDER BY (((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)), vt1.c0, ((((vt1.c0)AND(vt1.c1)))OR(vt1.c0))))<((json_array_length(vt1.c0), ((vt1.c0)|(vt1.c0)), ((vt1.c0) ISNULL)))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(((x'd787')/(rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((x'd787')/(rt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(((x'd787')/(rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((x'd787')/(rt0.c0)) AS INTEGER)  NULLS FIRST);
SELECT * FROM rt0 WHERE ((+ (((((rt0.c1)OR(rt0.c2)))AND(rt0.c2))))) ORDER BY CAST(((x'd787')/(rt0.c0)) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END COLLATE NOCASE DESC, ((CAST(388456 AS NUMERIC))|(rt0.c1)) ASC, ((((((x'')AND(rt0.c0)))AND(((rt0.c1)&(vt1.c0)))))OR((((vt1.c1))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END COLLATE NOCASE DESC, ((CAST(388456 AS NUMERIC))|(rt0.c1)) ASC, ((((((x'')AND(rt0.c0)))AND(((rt0.c1)&(vt1.c0)))))OR((((vt1.c1))>((vt1.c0))))));
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END COLLATE NOCASE DESC, ((CAST(388456 AS NUMERIC))|(rt0.c1)) ASC, ((((((x'')AND(rt0.c0)))AND(((rt0.c1)&(vt1.c0)))))OR((((vt1.c1))>((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END COLLATE NOCASE DESC, ((CAST(388456 AS NUMERIC))|(rt0.c1)) ASC, ((((((x'')AND(rt0.c0)))AND(((rt0.c1)&(vt1.c0)))))OR((((vt1.c1))>((vt1.c0))))));
SELECT * FROM vt1, rt0 WHERE (vt1.c0) ORDER BY CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c0 END COLLATE NOCASE DESC, ((CAST(388456 AS NUMERIC))|(rt0.c1)) ASC, ((((((x'')AND(rt0.c0)))AND(((rt0.c1)&(vt1.c0)))))OR((((vt1.c1))>((vt1.c0)))));
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY CASE (+ (rt0.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN ((((((((0.8391516273400967)AND(vt1.c1)))AND('1302735912')))OR(rt0.c0)))OR(rt0.c0)) END DESC  NULLS LAST, ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE (+ (rt0.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN ((((((((0.8391516273400967)AND(vt1.c1)))AND('1302735912')))OR(rt0.c0)))OR(rt0.c0)) END DESC  NULLS LAST, ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY CASE (+ (rt0.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN ((((((((0.8391516273400967)AND(vt1.c1)))AND('1302735912')))OR(rt0.c0)))OR(rt0.c0)) END DESC  NULLS LAST, ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY CASE (+ (rt0.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN ((((((((0.8391516273400967)AND(vt1.c1)))AND('1302735912')))OR(rt0.c0)))OR(rt0.c0)) END DESC  NULLS LAST, ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())  NULLS LAST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE ((~ (((rt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY CASE (+ (rt0.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN ((((((((0.8391516273400967)AND(vt1.c1)))AND('1302735912')))OR(rt0.c0)))OR(rt0.c0)) END DESC  NULLS LAST, ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (GLOB(((rt0.c0)==(rt0.c1)), rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0)=(rt0.c1)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (GLOB(((rt0.c0)==(rt0.c1)), rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((rt0.c0)=(rt0.c1)), rt0.c2)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (GLOB(((rt0.c0)==(rt0.c1)), rt0.c2));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)-(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)-(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))OR(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c0)))))OR(rt0.c1 COLLATE NOCASE))) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c1)))  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c1)))  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c1)))  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c1)))  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE CAST(vt0.c0 AS BLOB) END) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CASE (((vt0.c0)) NOT BETWEEN ((vt0.lid)) AND ((vt1.c1)))  WHEN vt1.c1 THEN ((vt1.c1)>(vt1.c1)) ELSE CAST(vt0.c0 AS BLOB) END);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt0.c0)&(rt0.c2)) COLLATE BINARY) ORDER BY (((x'37cb')) NOT BETWEEN ((CAST('0.9261710215954484' AS TEXT))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((x'37cb')) NOT BETWEEN ((CAST('0.9261710215954484' AS TEXT))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt0.c0)&(rt0.c2)) COLLATE BINARY) ORDER BY (((x'37cb')) NOT BETWEEN ((CAST('0.9261710215954484' AS TEXT))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)&(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY (((x'37cb')) NOT BETWEEN ((CAST('0.9261710215954484' AS TEXT))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((vt0.c0)&(rt0.c2)) COLLATE BINARY) ORDER BY (((x'37cb')) NOT BETWEEN ((CAST('0.9261710215954484' AS TEXT))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt0.lid))))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((vt1.c1)IS(rt0.c1)))+(GLOB(vt1.c0, rt0.c1))) WHERE (((json_object(vt1.c0, vt1.c0))-(((((vt1.c1)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((((vt1.c1) NOTNULL))IS(((vt1.c1) ISNULL))) DESC  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))-(((((vt1.c1)OR(vt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c1)IS(rt0.c1)))+(GLOB(vt1.c0, rt0.c1))) ORDER BY ((((vt1.c1) NOTNULL))IS(((vt1.c1) ISNULL))) DESC  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((vt1.c1)IS(rt0.c1)))+(GLOB(vt1.c0, rt0.c1))) WHERE (((json_object(vt1.c0, vt1.c0))-(((((vt1.c1)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((((vt1.c1) NOTNULL))IS(((vt1.c1) ISNULL))) DESC  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ());
SELECT SUM(count) FROM (SELECT ((((json_object(vt1.c0, vt1.c0))-(((((vt1.c1)OR(vt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((vt1.c1)IS(rt0.c1)))+(GLOB(vt1.c0, rt0.c1))) ORDER BY ((((vt1.c1) NOTNULL))IS(((vt1.c1) ISNULL))) DESC  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ()));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON ((((vt1.c1)IS(rt0.c1)))+(GLOB(vt1.c0, rt0.c1))) WHERE (((json_object(vt1.c0, vt1.c0))-(((((vt1.c1)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((((vt1.c1) NOTNULL))IS(((vt1.c1) ISNULL))) DESC  NULLS LAST, ((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) IN ());
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (CASE ((NULL) IS FALSE)  WHEN ((((vt0.lid)AND(vt1.c1)))OR(vt0.c0)) THEN ((vt1.c1) IS TRUE) END) ORDER BY ((((((((((((vt1.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)+(vt1.c1)))))OR(0.69819644781838)))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN x'2f42' WHEN vt1.c0 THEN vt1.c1 END))  NULLS LAST, ((((x'')<<(vt1.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('0.830008313571033')))));
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) IS FALSE)  WHEN ((((vt0.lid)AND(vt1.c1)))OR(vt0.c0)) THEN ((vt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt1.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)+(vt1.c1)))))OR(0.69819644781838)))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN x'2f42' WHEN vt1.c0 THEN vt1.c1 END))  NULLS LAST, ((((x'')<<(vt1.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('0.830008313571033'))))));
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (CASE ((NULL) IS FALSE)  WHEN ((((vt0.lid)AND(vt1.c1)))OR(vt0.c0)) THEN ((vt1.c1) IS TRUE) END) ORDER BY ((((((((((((vt1.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)+(vt1.c1)))))OR(0.69819644781838)))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN x'2f42' WHEN vt1.c0 THEN vt1.c1 END))  NULLS LAST, ((((x'')<<(vt1.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('0.830008313571033')))));
SELECT SUM(count) FROM (SELECT ((CASE ((NULL) IS FALSE)  WHEN ((((vt0.lid)AND(vt1.c1)))OR(vt0.c0)) THEN ((vt1.c1) IS TRUE) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((((((((vt1.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)+(vt1.c1)))))OR(0.69819644781838)))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN x'2f42' WHEN vt1.c0 THEN vt1.c1 END))  NULLS LAST, ((((x'')<<(vt1.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('0.830008313571033'))))));
SELECT ALL * FROM vt1, vt0 NOT INDEXED WHERE (CASE ((NULL) IS FALSE)  WHEN ((((vt0.lid)AND(vt1.c1)))OR(vt0.c0)) THEN ((vt1.c1) IS TRUE) END) ORDER BY ((((((((((((vt1.c0)AND(vt0.lid)))AND(vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt0.c0)+(vt1.c1)))))OR(0.69819644781838)))AND(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.lid WHEN vt0.c0 THEN vt1.c0 WHEN vt0.lid THEN x'2f42' WHEN vt1.c0 THEN vt1.c1 END))  NULLS LAST, ((((x'')<<(vt1.c0)))<=((((vt0.c0)) BETWEEN ((vt0.c0)) AND (('0.830008313571033')))));
SELECT * FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)/((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.lid)))))) ORDER BY (+ (((vt0.lid)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)/((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.lid)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (+ (((vt0.lid)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)/((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.lid)))))) ORDER BY (+ (((vt0.lid)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)/((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.lid)))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY (+ (((vt0.lid)<<(rt0.c2)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, vt0 WHERE (((vt0.c0 COLLATE RTRIM)/((((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.lid)))))) ORDER BY (+ (((vt0.lid)<<(rt0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c2) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY TRIM(DISTINCT rt0.c2) COLLATE RTRIM COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2) ORDER BY TRIM(DISTINCT rt0.c2) COLLATE RTRIM COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('0.3143938967594925')LIKE(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((('0.3143938967594925')LIKE(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('0.3143938967594925')LIKE(CAST(rt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((('0.3143938967594925')LIKE(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((('0.3143938967594925')LIKE(CAST(rt0.c1 AS NUMERIC))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)>>(rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)>>(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))>=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))>=((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))>=((((rt0.c0) NOTNULL)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))>=((((rt0.c0) NOTNULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))>=((((rt0.c0) NOTNULL)))));
SELECT * FROM vt0, vt1, rt0 WHERE (((0.27046973170254585) IS TRUE)) ORDER BY ((((rt0.c0)>=(vt1.c1)))*((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((0.27046973170254585) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c0)>=(vt1.c1)))*((+ (NULL)))));
SELECT * FROM vt0, vt1, rt0 WHERE (((0.27046973170254585) IS TRUE)) ORDER BY ((((rt0.c0)>=(vt1.c1)))*((+ (NULL))));
SELECT SUM(count) FROM (SELECT ((((0.27046973170254585) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((rt0.c0)>=(vt1.c1)))*((+ (NULL)))));
SELECT * FROM vt0, vt1, rt0 WHERE (((0.27046973170254585) IS TRUE)) ORDER BY ((((rt0.c0)>=(vt1.c1)))*((+ (NULL))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (UNLIKELY(DISTINCT CAST(vt1.c0 AS REAL))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (UNLIKELY(DISTINCT CAST(vt1.c0 AS REAL))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(vt1.c0 AS REAL))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (UNLIKELY(DISTINCT CAST(vt1.c0 AS REAL))) ORDER BY NULL;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST, CAST(ABS(rt0.c2) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST, CAST(ABS(rt0.c2) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST, CAST(ABS(rt0.c2) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST, CAST(ABS(rt0.c2) AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1))) ISNULL)) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) NOT NULL)  NULLS FIRST, CAST(ABS(rt0.c2) AS NUMERIC) ASC;
SELECT * FROM rt0, vt1, vt0 WHERE (CAST((((rt0.c2, rt0.c1, vt1.c1))<((vt0.c0, x'', rt0.c1))) AS REAL)) ORDER BY ((vt1.c0)IS(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, rt0.c1, vt1.c1))<((vt0.c0, x'', rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((vt1.c0)IS(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST((((rt0.c2, rt0.c1, vt1.c1))<((vt0.c0, x'', rt0.c1))) AS REAL)) ORDER BY ((vt1.c0)IS(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2, rt0.c1, vt1.c1))<((vt0.c0, x'', rt0.c1))) AS REAL)) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((vt1.c0)IS(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, vt0 WHERE (CAST((((rt0.c2, rt0.c1, vt1.c1))<((vt0.c0, x'', rt0.c1))) AS REAL)) ORDER BY ((vt1.c0)IS(CASE WHEN rt0.c2 THEN vt0.lid WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((rt0.c1) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<>((vt0.lid)))) NOT BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid))!=((vt0.lid)))) NOT BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<>((vt0.lid)))) NOT BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.lid))!=((vt0.lid)))) NOT BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.lid))<>((vt0.lid)))) NOT BETWEEN (vt0.lid COLLATE NOCASE) AND (((vt0.c0)/(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS NUMERIC))+(json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.lid AS NUMERIC))+(json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS NUMERIC))+(json_patch(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.lid AS NUMERIC))+(json_patch(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.lid AS NUMERIC))+(json_patch(vt0.c0, vt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN (rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKE(rt0.c2, rt0.c1)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND('-1e500')))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (LIKE(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND('-1e500')))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKE(rt0.c2, rt0.c1)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND('-1e500')))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (LIKE(rt0.c2, rt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND('-1e500')))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (LIKE(rt0.c2, rt0.c1)))) ORDER BY ((((CAST(vt0.c0 AS NUMERIC))AND('-1e500')))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c1)))) DESC;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid COLLATE NOCASE)OR(vt1.c1)))AND((- (vt0.c0))))) ORDER BY 0.5972455741587686;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE NOCASE)OR(vt1.c1)))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.5972455741587686);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid COLLATE NOCASE)OR(vt1.c1)))AND((- (vt0.c0))))) ORDER BY 0.5972455741587686;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid COLLATE NOCASE)OR(vt1.c1)))AND((- (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY 0.5972455741587686);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.lid COLLATE NOCASE)OR(vt1.c1)))AND((- (vt0.c0))))) ORDER BY 0.5972455741587686;
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON TYPEOF((- (vt1.c0))) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON TYPEOF((- (vt1.c0))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON TYPEOF((- (vt1.c0))) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 LEFT OUTER JOIN vt0 ON TYPEOF((- (vt1.c0))));
SELECT ALL * FROM rt0, vt1 LEFT OUTER JOIN vt0 ON TYPEOF((- (vt1.c0))) WHERE (((rt0.c2) NOT NULL) COLLATE BINARY);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt0.lid)))>>((((vt0.c0, vt0.lid, vt0.lid))<((vt1.c0, vt0.lid, vt0.lid))))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt0.lid END AS NUMERIC)) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.lid END)|(vt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt0.lid END AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt0.lid)))>>((((vt0.c0, vt0.lid, vt0.lid))<((vt1.c0, vt0.lid, vt0.lid))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.lid END)|(vt1.c1)) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt0.lid)))>>((((vt0.c0, vt0.lid, vt0.lid))<((vt1.c0, vt0.lid, vt0.lid))))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt0.lid END AS NUMERIC)) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.lid END)|(vt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt0.lid END AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt0.lid)))>>((((vt0.c0, vt0.lid, vt0.lid))<((vt1.c0, vt0.lid, vt0.lid))))) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.lid END)|(vt1.c1)) DESC  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN vt1 ON (((NOT (vt0.lid)))>>((((vt0.c0, vt0.lid, vt0.lid))<((vt1.c0, vt0.lid, vt0.lid))))) WHERE (CAST(CASE vt1.c0  WHEN vt1.c1 THEN vt0.lid END AS NUMERIC)) ORDER BY ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.lid END)|(vt1.c1)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (vt0.lid IN ()) WHEN SQLITE_SOURCE_ID() THEN (vt1.c1 IN (vt1.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY CAST(((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) ISNULL) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (vt0.lid IN ()) WHEN SQLITE_SOURCE_ID() THEN (vt1.c1 IN (vt1.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)) AS INTEGER) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (vt0.lid IN ()) WHEN SQLITE_SOURCE_ID() THEN (vt1.c1 IN (vt1.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY CAST(((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt1.c1) ISNULL) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (vt0.lid IN ()) WHEN SQLITE_SOURCE_ID() THEN (vt1.c1 IN (vt1.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0, vt1 ORDER BY CAST(((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)) AS INTEGER) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN ((vt1.c1) ISNULL) THEN (~ (vt1.c0)) WHEN (vt1.c0 IN ()) THEN (vt0.lid IN ()) WHEN SQLITE_SOURCE_ID() THEN (vt1.c1 IN (vt1.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY CAST(((((vt0.lid)OR(vt0.c0)))OR(vt0.lid)) AS INTEGER) ASC;
SELECT * FROM vt0, vt1 WHERE ((((('0.7809064369940821') BETWEEN (vt0.lid) AND (vt0.c0)))|((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('0.7809064369940821') BETWEEN (vt0.lid) AND (vt0.c0)))|((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((('0.7809064369940821') BETWEEN (vt0.lid) AND (vt0.c0)))|((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((('0.7809064369940821') BETWEEN (vt0.lid) AND (vt0.c0)))|((~ (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((((('0.7809064369940821') BETWEEN (vt0.lid) AND (vt0.c0)))|((~ (vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)==(rt0.c1)))&(rt0.c1))) ORDER BY (~ (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==(rt0.c1)))&(rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((rt0.c2) ISNULL))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)==(rt0.c1)))&(rt0.c1))) ORDER BY (~ (((rt0.c2) ISNULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==(rt0.c1)))&(rt0.c1))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (((rt0.c2) ISNULL))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)==(rt0.c1)))&(rt0.c1))) ORDER BY (~ (((rt0.c2) ISNULL)));
SELECT * FROM vt0 WHERE ((+ ((vt0.lid IN ())))) ORDER BY 0.1487463816384622 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.lid IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.1487463816384622 COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((+ ((vt0.lid IN ())))) ORDER BY 0.1487463816384622 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.lid IN ())))) IS TRUE)  as count FROM vt0 ORDER BY 0.1487463816384622 COLLATE BINARY ASC);
SELECT * FROM vt0 WHERE ((+ ((vt0.lid IN ())))) ORDER BY 0.1487463816384622 COLLATE BINARY ASC;
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c1)OR(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CASE WHEN vt0.lid THEN 0.5192332514233787 ELSE rt0.c0 END)))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c0)) IN ())  NULLS FIRST, CAST(vt0.lid AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CASE WHEN vt0.lid THEN 0.5192332514233787 ELSE rt0.c0 END)))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c0)) IN ())  NULLS FIRST, CAST(vt0.lid AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c1)OR(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CASE WHEN vt0.lid THEN 0.5192332514233787 ELSE rt0.c0 END)))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c0)) IN ())  NULLS FIRST, CAST(vt0.lid AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CASE WHEN vt0.lid THEN 0.5192332514233787 ELSE rt0.c0 END)))AND(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((+ (rt0.c0)) IN ())  NULLS FIRST, CAST(vt0.lid AS TEXT) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((((((rt0.c1)OR(x'')))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(CASE WHEN vt0.lid THEN 0.5192332514233787 ELSE rt0.c0 END)))AND(rt0.c0 COLLATE NOCASE))) ORDER BY ((+ (rt0.c0)) IN ())  NULLS FIRST, CAST(vt0.lid AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('tAS뒚}╯') ISNULL));
SELECT SUM(count) FROM (SELECT (((('tAS뒚}╯') ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('tAS뒚}╯') ISNULL));
SELECT SUM(count) FROM (SELECT (((('tAS뒚}╯') ISNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((('tAS뒚}╯') ISNULL));
SELECT * FROM rt0, vt0 WHERE (CAST(1.721934323E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.721934323E9 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(1.721934323E9 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.721934323E9 AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CAST(1.721934323E9 AS INTEGER));
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)>(vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)>(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)>(vt1.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)>(vt1.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt1.c1)>(vt1.c1)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR('-749505508')))OR(rt0.c1)))OR(rt0.c1)))) AND (((('-1096577483')==(rt0.c1)), CAST(rt0.c0 AS NUMERIC), ((rt0.c2)<<(rt0.c0))))), (((rt0.c2)&(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR('-749505508')))OR(rt0.c1)))OR(rt0.c1)))) AND (((('-1096577483')==(rt0.c1)), CAST(rt0.c0 AS NUMERIC), ((rt0.c2)<<(rt0.c0))))), (((rt0.c2)&(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR('-749505508')))OR(rt0.c1)))OR(rt0.c1)))) AND (((('-1096577483')==(rt0.c1)), CAST(rt0.c0 AS NUMERIC), ((rt0.c2)<<(rt0.c0))))), (((rt0.c2)&(rt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR('-749505508')))OR(rt0.c1)))OR(rt0.c1)))) AND (((('-1096577483')==(rt0.c1)), CAST(rt0.c0 AS NUMERIC), ((rt0.c2)<<(rt0.c0))))), (((rt0.c2)&(rt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) AND ((CAST(rt0.c0 AS NUMERIC))))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((rt0.c2)OR(rt0.c2)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)), (+ (rt0.c1)), ((((((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c1)))OR('-749505508')))OR(rt0.c1)))OR(rt0.c1)))) AND (((('-1096577483')==(rt0.c1)), CAST(rt0.c0 AS NUMERIC), ((rt0.c2)<<(rt0.c0))))), (((rt0.c2)&(rt0.c1)) IN ());
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((0.02700575537976546)AND(rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE RTRIM DESC, (((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, x'', rt0.c2)))) BETWEEN ((('''Z') IS FALSE)) AND (((rt0.c0)<<(-1772492101)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((0.02700575537976546)AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1)) COLLATE RTRIM DESC, (((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, x'', rt0.c2)))) BETWEEN ((('''Z') IS FALSE)) AND (((rt0.c0)<<(-1772492101)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((0.02700575537976546)AND(rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE RTRIM DESC, (((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, x'', rt0.c2)))) BETWEEN ((('''Z') IS FALSE)) AND (((rt0.c0)<<(-1772492101)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((0.02700575537976546)AND(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (- (rt0.c1)) COLLATE RTRIM DESC, (((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, x'', rt0.c2)))) BETWEEN ((('''Z') IS FALSE)) AND (((rt0.c0)<<(-1772492101)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((0.02700575537976546)AND(rt0.c0)))) ORDER BY (- (rt0.c1)) COLLATE RTRIM DESC, (((((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c0, x'', rt0.c2)))) BETWEEN ((('''Z') IS FALSE)) AND (((rt0.c0)<<(-1772492101)))) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (vt1.c1);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ('-1415434267'))) ORDER BY LOWER(DISTINCT (vt1.c1 IN ()))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('-1415434267'))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN ()))  NULLS FIRST, vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ('-1415434267'))) ORDER BY LOWER(DISTINCT (vt1.c1 IN ()))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ('-1415434267'))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN ()))  NULLS FIRST, vt1.c0  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, vt1 WHERE ((NOT ('-1415434267'))) ORDER BY LOWER(DISTINCT (vt1.c1 IN ()))  NULLS FIRST, vt1.c0  NULLS FIRST;
SELECT * FROM vt1, vt0, rt0 WHERE ((CASE WHEN vt0.lid THEN vt1.c1 END IN (CASE WHEN vt0.lid THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.lid THEN vt1.c1 END IN (CASE WHEN vt0.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((CASE WHEN vt0.lid THEN vt1.c1 END IN (CASE WHEN vt0.lid THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.lid THEN vt1.c1 END IN (CASE WHEN vt0.lid THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 NOT INDEXED, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE ((CASE WHEN vt0.lid THEN vt1.c1 END IN (CASE WHEN vt0.lid THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((((vt1.c0) ISNULL))) AND ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))));
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN json(vt1.c1) END) ORDER BY 0.3843631359751445 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN json(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY 0.3843631359751445 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN json(vt1.c1) END) ORDER BY 0.3843631359751445 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)!=(vt1.c1)) THEN json(vt1.c1) END) IS TRUE)  as count FROM vt1 ORDER BY 0.3843631359751445 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN ((vt1.c0) ISNULL) THEN ((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((vt1.c0)<>(vt1.c1)) THEN json(vt1.c1) END) ORDER BY 0.3843631359751445 ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)%(((rt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((vt1.c1)<<(vt1.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)%(((rt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((vt1.c1)<<(vt1.c1))) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)%(((rt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((vt1.c1)<<(vt1.c1))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN CAST(vt1.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)%(((rt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((vt1.c1)<<(vt1.c1))) NOT NULL)  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN rt0.c0 THEN CAST(vt1.c0 AS REAL) END) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c2 END)%(((rt0.c0) NOTNULL))) ASC  NULLS FIRST, ((((vt1.c1)<<(vt1.c1))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM rt0, vt1 WHERE ((+ (x'b61f')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (x'b61f')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (x'b61f')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (x'b61f')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((+ (x'b61f')) COLLATE NOCASE);
SELECT * FROM vt0, rt0, vt1 WHERE (0xffffffff8f127423) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c2))  NULLS LAST, CASE WHEN ((((vt1.c1)AND(NULL)))AND(vt0.lid)) THEN (NOT (vt1.c1)) WHEN (rt0.c2 IN ()) THEN ((vt1.c0) IS TRUE) WHEN ((rt0.c0)>(rt0.c2)) THEN (~ (vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8f127423) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c2))  NULLS LAST, CASE WHEN ((((vt1.c1)AND(NULL)))AND(vt0.lid)) THEN (NOT (vt1.c1)) WHEN (rt0.c2 IN ()) THEN ((vt1.c0) IS TRUE) WHEN ((rt0.c0)>(rt0.c2)) THEN (~ (vt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (0xffffffff8f127423) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c2))  NULLS LAST, CASE WHEN ((((vt1.c1)AND(NULL)))AND(vt0.lid)) THEN (NOT (vt1.c1)) WHEN (rt0.c2 IN ()) THEN ((vt1.c0) IS TRUE) WHEN ((rt0.c0)>(rt0.c2)) THEN (~ (vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0Xffffffff8f127423) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c2))  NULLS LAST, CASE WHEN ((((vt1.c1)AND(NULL)))AND(vt0.lid)) THEN (NOT (vt1.c1)) WHEN (rt0.c2 IN ()) THEN ((vt1.c0) IS TRUE) WHEN ((rt0.c0)>(rt0.c2)) THEN (~ (vt1.c1)) END DESC  NULLS LAST);
SELECT * FROM vt0, rt0, vt1 WHERE (0xffffffff8f127423) ORDER BY CAST(vt1.c0 COLLATE BINARY AS NUMERIC) ASC  NULLS FIRST, ((((((vt0.c0)OR(vt1.c1)))OR(vt0.c0))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0)))) AND (rt0.c2))  NULLS LAST, CASE WHEN ((((vt1.c1)AND(NULL)))AND(vt0.lid)) THEN (NOT (vt1.c1)) WHEN (rt0.c2 IN ()) THEN ((vt1.c0) IS TRUE) WHEN ((rt0.c0)>(rt0.c2)) THEN (~ (vt1.c1)) END DESC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0) IS FALSE) IN (((vt0.lid)|(vt1.c1)))) WHERE (0.7984641647561718);
SELECT SUM(count) FROM (SELECT ((0.7984641647561718) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0) IS FALSE) IN (((vt0.lid)|(vt1.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0) IS FALSE) IN (((vt0.lid)|(vt1.c1)))) WHERE (0.7984641647561718);
SELECT SUM(count) FROM (SELECT ((0.7984641647561718) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0) IS FALSE) IN (((vt0.lid)|(vt1.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0) IS FALSE) IN (((vt0.lid)|(vt1.c1)))) WHERE (0.7984641647561718);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN LOWER(rt0.c1) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(rt0.c1) THEN NULL END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN LOWER(rt0.c1) THEN NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN LOWER(rt0.c1) THEN NULL END) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (CASE WHEN LOWER(rt0.c1) THEN NULL END);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((CAST(vt1.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<>((CAST(vt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((CAST(vt1.c1 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))<>((CAST(vt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))!=((CAST(vt1.c1 AS NUMERIC)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON 482042790 LEFT OUTER JOIN vt0 ON (((((rt0.c1))=((rt0.c1))))>(((vt0.lid)<<(vt0.lid)))) WHERE (CAST(((((rt0.c2)OR(vt1.c0)))OR('0.9251758646864696')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt1.c0)))OR('0.9251758646864696')) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON 482042790 LEFT OUTER JOIN vt0 ON (((((rt0.c1))==((rt0.c1))))>(((vt0.lid)<<(vt0.lid)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON 482042790 LEFT OUTER JOIN vt0 ON (((((rt0.c1))=((rt0.c1))))>(((vt0.lid)<<(vt0.lid)))) WHERE (CAST(((((rt0.c2)OR(vt1.c0)))OR('0.9251758646864696')) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt1.c0)))OR('0.9251758646864696')) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON 482042790 LEFT OUTER JOIN vt0 ON (((((rt0.c1))==((rt0.c1))))>(((vt0.lid)<<(vt0.lid)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON 482042790 LEFT OUTER JOIN vt0 ON (((((rt0.c1))=((rt0.c1))))>(((vt0.lid)<<(vt0.lid)))) WHERE (CAST(((((rt0.c2)OR(vt1.c0)))OR('0.9251758646864696')) AS BLOB));
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.2366517402568662 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.2366517402568662 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.2366517402568662 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0.2366517402568662 COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (0.2366517402568662 COLLATE BINARY);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((CASE WHEN vt0.lid THEN rt0.c2 END)OR(LIKELY(x''))))AND(TRIM(vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.lid THEN rt0.c2 END)OR(LIKELY(x''))))AND(TRIM(vt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((CASE WHEN vt0.lid THEN rt0.c2 END)OR(LIKELY(x''))))AND(TRIM(vt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.lid THEN rt0.c2 END)OR(LIKELY(x''))))AND(TRIM(vt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL * FROM rt0, vt0, vt1 WHERE (((((CASE WHEN vt0.lid THEN rt0.c2 END)OR(LIKELY(x''))))AND(TRIM(vt0.c0, rt0.c0))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((vt1.c0)<<(x'27eac7f3')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(((vt1.c0)<<(x'27eac7f3'))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((vt1.c0)<<(x'27eac7f3')))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)<>(((vt1.c0)<<(x'27eac7f3'))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c0)!=(((vt1.c0)<<(x'27eac7f3')))));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE ((~ (CAST(vt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY UPPER(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))) ASC, MAX(((rt0.c1)%(vt0.c0)), NULLIF(DISTINCT rt0.c2, rt0.c1))  NULLS FIRST, ((((CASE '릔y(ꟸ'  WHEN vt1.c1 THEN rt0.c1 ELSE 0.8785992036755964 END)AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY UPPER(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))) ASC, MAX(((rt0.c1)%(vt0.c0)), NULLIF(DISTINCT rt0.c2, rt0.c1))  NULLS FIRST, ((((CASE '릔y(ꟸ'  WHEN vt1.c1 THEN rt0.c1 ELSE 0.8785992036755964 END)AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY UPPER(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))) ASC, MAX(((rt0.c1)%(vt0.c0)), NULLIF(DISTINCT rt0.c2, rt0.c1))  NULLS FIRST, ((((CASE '릔y(ꟸ'  WHEN vt1.c1 THEN rt0.c1 ELSE 0.8785992036755964 END)AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY UPPER(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))) ASC, MAX(((rt0.c1)%(vt0.c0)), NULLIF(DISTINCT rt0.c2, rt0.c1))  NULLS FIRST, ((((CASE '릔y(ꟸ'  WHEN vt1.c1 THEN rt0.c1 ELSE 0.8785992036755964 END)AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (vt1.c1) ORDER BY UPPER(((rt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.lid))) ASC, MAX(((rt0.c1)%(vt0.c0)), NULLIF(DISTINCT rt0.c2, rt0.c1))  NULLS FIRST, ((((CASE '릔y(ꟸ'  WHEN vt1.c1 THEN rt0.c1 ELSE 0.8785992036755964 END)AND(vt0.c0 COLLATE BINARY)))OR(vt0.c0)) DESC;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2, rt0.c0, vt0.lid, rt0.c0, vt0.lid)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt0.lid ELSE vt1.c0 END, ((vt0.c0) IS TRUE), (((rt0.c2, vt1.c1, 0.3356580600478155))<=((rt0.c0, vt0.lid, vt0.c0))), ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)), CASE rt0.c0  WHEN vt0.lid THEN '0.41463816135415255' END)) AND ((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt0.lid) AND (rt0.c1)), (vt0.c0 IN ()), ((vt0.lid) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0)))) ORDER BY ((rt0.c1)IS(((vt1.c0) NOT BETWEEN (0.91902644435861) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, vt0.lid, rt0.c0, vt0.lid)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt0.lid ELSE vt1.c0 END, ((vt0.c0) IS TRUE), (((rt0.c2, vt1.c1, 0.3356580600478155))<=((rt0.c0, vt0.lid, vt0.c0))), ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)), CASE rt0.c0  WHEN vt0.lid THEN '0.41463816135415255' END)) AND ((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt0.lid) AND (rt0.c1)), (vt0.c0 IN ()), ((vt0.lid) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((rt0.c1)IS(((vt1.c0) NOT BETWEEN (0.91902644435861) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2, rt0.c0, vt0.lid, rt0.c0, vt0.lid)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt0.lid ELSE vt1.c0 END, ((vt0.c0) IS TRUE), (((rt0.c2, vt1.c1, 0.3356580600478155))<=((rt0.c0, vt0.lid, vt0.c0))), ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)), CASE rt0.c0  WHEN vt0.lid THEN '0.41463816135415255' END)) AND ((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt0.lid) AND (rt0.c1)), (vt0.c0 IN ()), ((vt0.lid) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0)))) ORDER BY ((rt0.c1)IS(((vt1.c0) NOT BETWEEN (0.91902644435861) AND (vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c0, vt0.lid, rt0.c0, vt0.lid)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt0.lid ELSE vt1.c0 END, ((vt0.c0) IS TRUE), (((rt0.c2, vt1.c1, 0.3356580600478155))<=((rt0.c0, vt0.lid, vt0.c0))), ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)), CASE rt0.c0  WHEN vt0.lid THEN '0.41463816135415255' END)) AND ((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt0.lid) AND (rt0.c1)), (vt0.c0 IN ()), ((vt0.lid) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0)))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((rt0.c1)IS(((vt1.c0) NOT BETWEEN (0.91902644435861) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE ((((rt0.c2, rt0.c0, vt0.lid, rt0.c0, vt0.lid)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN vt0.lid ELSE vt1.c0 END, ((vt0.c0) IS TRUE), (((rt0.c2, vt1.c1, 0.3356580600478155))<=((rt0.c0, vt0.lid, vt0.c0))), ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c1)), CASE rt0.c0  WHEN vt0.lid THEN '0.41463816135415255' END)) AND ((((rt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt0.lid) AND (rt0.c1)), (vt0.c0 IN ()), ((vt0.lid) BETWEEN (rt0.c0) AND (rt0.c2)), rt0.c0)))) ORDER BY ((rt0.c1)IS(((vt1.c0) NOT BETWEEN (0.91902644435861) AND (vt1.c1))));
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS INTEGER))GLOB(((rt0.c0) IS TRUE)))) ORDER BY (((x'')<=(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))GLOB(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x'')<=(vt1.c0)) IN ()) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS INTEGER))GLOB(((rt0.c0) IS TRUE)))) ORDER BY (((x'')<=(vt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS INTEGER))GLOB(((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((x'')<=(vt1.c0)) IN ()) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(vt1.c0 AS INTEGER))GLOB(((rt0.c0) IS TRUE)))) ORDER BY (((x'')<=(vt1.c0)) IN ()) DESC;
SELECT * FROM vt1 WHERE (((((vt1.c1)<>(vt1.c0)))<<((vt1.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS REAL))+(0xffffffff84a4d96d))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<>(vt1.c0)))<<((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))+(0Xffffffff84a4d96d))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c1)<>(vt1.c0)))<<((vt1.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS REAL))+(0xffffffff84a4d96d))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<>(vt1.c0)))<<((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY ((CAST(vt1.c0 AS REAL))+(0Xffffffff84a4d96d))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c1)<>(vt1.c0)))<<((vt1.c0 IN ())))) ORDER BY ((CAST(vt1.c0 AS REAL))+(0xffffffff84a4d96d))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE NULL  WHEN vt0.lid THEN 0.9495831567949485 WHEN vt1.c1 THEN rt0.c1 WHEN '0.0' THEN rt0.c2 END)/(((vt1.c0)%(rt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt0.lid THEN 0.9495831567949485 WHEN vt1.c1 THEN rt0.c1 WHEN '0.0' THEN rt0.c2 END)/(((vt1.c0)%(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c2))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE NULL  WHEN vt0.lid THEN 0.9495831567949485 WHEN vt1.c1 THEN rt0.c1 WHEN '0.0' THEN rt0.c2 END)/(((vt1.c0)%(rt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE NULL  WHEN vt0.lid THEN 0.9495831567949485 WHEN vt1.c1 THEN rt0.c1 WHEN '0.0' THEN rt0.c2 END)/(((vt1.c0)%(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c2))) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (((CASE NULL  WHEN vt0.lid THEN 0.9495831567949485 WHEN vt1.c1 THEN rt0.c1 WHEN '0.0' THEN rt0.c2 END)/(((vt1.c0)%(rt0.c0))))) ORDER BY ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c2))) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((+ (vt1.c0))) BETWEEN ((+ (vt1.c0))) AND (vt1.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON CAST(-244481162 AS NUMERIC) WHERE ((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.lid ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.lid ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON CAST(-244481162 AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON CAST(-244481162 AS NUMERIC) WHERE ((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.lid ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.lid ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN vt1 ON CAST(-244481162 AS NUMERIC));
SELECT COUNT(*) FROM rt0, vt0 LEFT OUTER JOIN vt1 ON CAST(-244481162 AS NUMERIC) WHERE ((((((NOT (rt0.c0)))AND(((((rt0.c2)AND(rt0.c0)))AND(vt1.c1)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.lid ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid)IS NOT(vt0.c0)))>>(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.lid IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)IS NOT(vt0.c0)))>>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.lid IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid)IS NOT(vt0.c0)))>>(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.lid IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid)IS NOT(vt0.c0)))>>(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.lid IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.lid)IS NOT(vt0.c0)))>>(vt0.c0 COLLATE RTRIM))) ORDER BY ((vt0.lid IN ()) IN ())  NULLS LAST;
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.lid)))<(((-4.5238257E7) BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY (- (((vt0.lid) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.lid)))<(((-4.5238257E7) BETWEEN (vt0.c0) AND (vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.lid) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.lid)))<(((-4.5238257E7) BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY (- (((vt0.lid) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)LIKE(vt0.lid)))<(((-4.5238257E7) BETWEEN (vt0.c0) AND (vt0.lid))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.lid) IS FALSE))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.lid)))<(((-4.5238257E7) BETWEEN (vt0.c0) AND (vt0.lid))))) ORDER BY (- (((vt0.lid) IS FALSE))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c0, rt0.c2), NULL))<((((rt0.c0)+(rt0.c1)), ((((vt0.lid)AND(vt0.lid)))AND(rt0.c0)), rt0.c1)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(vt0.lid AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c0, rt0.c2), NULL))<((((rt0.c0)+(rt0.c1)), ((((vt0.lid)AND(vt0.lid)))AND(rt0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(vt0.lid AS TEXT) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c0, rt0.c2), NULL))<((((rt0.c0)+(rt0.c1)), ((((vt0.lid)AND(vt0.lid)))AND(rt0.c0)), rt0.c1)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(vt0.lid AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c0, rt0.c2), NULL))<((((rt0.c0)+(rt0.c1)), ((((vt0.lid)AND(vt0.lid)))AND(rt0.c0)), rt0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(vt0.lid AS TEXT) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((rt0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c0, rt0.c2), NULL))<((((rt0.c0)+(rt0.c1)), ((((vt0.lid)AND(vt0.lid)))AND(rt0.c0)), rt0.c1)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(vt0.lid AS TEXT) END;
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(0.19403546990668108)))AND((((rt0.c2, rt0.c2, rt0.c2))>((-1929709496, NULL, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c0)!=(rt0.c1)))))OR((('-1')*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(0.19403546990668108)))AND((((rt0.c2, rt0.c2, rt0.c2))>((-1929709496, NULL, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c0)!=(rt0.c1)))))OR((('-1')*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(0.19403546990668108)))AND((((rt0.c2, rt0.c2, rt0.c2))>((-1929709496, NULL, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c0)!=(rt0.c1)))))OR((('-1')*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(0.19403546990668108)))AND((((rt0.c2, rt0.c2, rt0.c2))>((-1929709496, NULL, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c0)!=(rt0.c1)))))OR((('-1')*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((rt0.c1) IS FALSE))AND((+ (rt0.c1)))))AND(0.19403546990668108)))AND((((rt0.c2, rt0.c2, rt0.c2))>((-1929709496, NULL, rt0.c0))))))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)))OR(((rt0.c0)!=(rt0.c1)))))OR((('-1')*(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((- (rt0.c2)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(x'8423'))) NOT NULL)) ORDER BY (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(x'8423'))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(x'8423'))) NOT NULL)) ORDER BY (~ (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)<=(x'8423'))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ (NULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c1)<=(x'8423'))) NOT NULL)) ORDER BY (~ (NULL)) ASC;
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))&(728049940)) WHERE ((('-478813953')=(((vt0.lid)GLOB(rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) WHEN COALESCE(rt0.c0, vt0.c0) THEN ((rt0.c2)|(vt1.c0)) WHEN ABS(DISTINCT rt0.c1) THEN ((vt0.c0) IS TRUE) ELSE (vt0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-478813953')==(((vt0.lid)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))&(728049940)) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) WHEN COALESCE(rt0.c0, vt0.c0) THEN ((rt0.c2)|(vt1.c0)) WHEN ABS(DISTINCT rt0.c1) THEN ((vt0.c0) IS TRUE) ELSE (vt0.c0 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))&(728049940)) WHERE ((('-478813953')=(((vt0.lid)GLOB(rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) WHEN COALESCE(rt0.c0, vt0.c0) THEN ((rt0.c2)|(vt1.c0)) WHEN ABS(DISTINCT rt0.c1) THEN ((vt0.c0) IS TRUE) ELSE (vt0.c0 IN ()) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-478813953')==(((vt0.lid)GLOB(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))&(728049940)) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) WHEN COALESCE(rt0.c0, vt0.c0) THEN ((rt0.c2)|(vt1.c0)) WHEN ABS(DISTINCT rt0.c1) THEN ((vt0.c0) IS TRUE) ELSE (vt0.c0 IN ()) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0 FULL OUTER JOIN vt1 ON ((CAST(rt0.c2 AS REAL))&(728049940)) WHERE ((('-478813953')=(((vt0.lid)GLOB(rt0.c1))))) ORDER BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) WHEN COALESCE(rt0.c0, vt0.c0) THEN ((rt0.c2)|(vt1.c0)) WHEN ABS(DISTINCT rt0.c1) THEN ((vt0.c0) IS TRUE) ELSE (vt0.c0 IN ()) END ASC  NULLS LAST;
SELECT * FROM rt0, vt1 NOT INDEXED WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 NOT INDEXED WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 NOT INDEXED WHERE ((vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(((vt0.c0)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))OR(((vt0.c0)==(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))OR(((vt0.c0)==(vt0.c0)))));
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))=(((NULL)OR(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))=(((NULL)OR(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))=(((NULL)OR(vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))=(((NULL)OR(vt0.lid))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0) NOTNULL))=(((NULL)OR(vt0.lid)))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((('')OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)!=(vt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((('')OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)<>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((('')OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)!=(vt0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((('')OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)<>(vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN vt1 ON (((('')OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0)!=(vt0.c0)))) WHERE (vt0.c0);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1)AND(vt1.c1)))AND('-499971745')))OR(vt1.c1)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1)AND(vt1.c1)))AND('-499971745')))OR(vt1.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1)AND(vt1.c1)))AND('-499971745')))OR(vt1.c1)))OR(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1)AND(vt1.c1)))AND('-499971745')))OR(vt1.c1)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((((vt1.c1)AND(vt1.c1)))AND('-499971745')))OR(vt1.c1)))OR(vt1.c0)) IN ()));
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))LIKE(((((vt1.c0)OR(NULL)))OR('hs')))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))LIKE(((((vt1.c0)OR(NULL)))OR('hs'))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))LIKE(((((vt1.c0)OR(NULL)))OR('hs')))));
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2)))LIKE(((((vt1.c0)OR(NULL)))OR('hs'))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((+ (rt0.c2)))LIKE(((((vt1.c0)OR(NULL)))OR('hs')))));
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.lid  WHEN vt1.c1 THEN '4X iD#' ELSE rt0.c1 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt1.c1 THEN '4X iD#' ELSE rt0.c1 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (NULL))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.lid  WHEN vt1.c1 THEN '4X iD#' ELSE rt0.c1 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.lid  WHEN vt1.c1 THEN '4X iD#' ELSE rt0.c1 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (NULL))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((CASE vt0.lid  WHEN vt1.c1 THEN '4X iD#' ELSE rt0.c1 END) BETWEEN (vt1.c0 COLLATE RTRIM) AND (NULL)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ ((- (rt0.c1)))) WHERE (((MAX(rt0.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((0.6048366131795777 IN (rt0.c2))))) ORDER BY '1891078927' ASC;
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((0.6048366131795777 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ ((- (rt0.c1)))) ORDER BY '1891078927' ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ ((- (rt0.c1)))) WHERE (((MAX(rt0.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((0.6048366131795777 IN (rt0.c2))))) ORDER BY '1891078927' ASC;
SELECT SUM(count) FROM (SELECT ((((MAX(rt0.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((0.6048366131795777 IN (rt0.c2))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ ((- (rt0.c1)))) ORDER BY '1891078927' ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ ((- (rt0.c1)))) WHERE (((MAX(rt0.c0, rt0.c2, rt0.c2, rt0.c2)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((0.6048366131795777 IN (rt0.c2))))) ORDER BY '1891078927' ASC;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), ((x'')LIKE(vt1.c0)), UPPER(DISTINCT rt0.c0), '')) ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c1 AS BLOB), ((x'')LIKE(vt1.c0)), UPPER(DISTINCT rt0.c0), '')) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), ((x'')LIKE(vt1.c0)), UPPER(DISTINCT rt0.c0), '')) ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(rt0.c1 AS BLOB), ((x'')LIKE(vt1.c0)), UPPER(DISTINCT rt0.c0), '')) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CAST(rt0.c1 AS BLOB), ((x'')LIKE(vt1.c0)), UPPER(DISTINCT rt0.c0), '')) ORDER BY rt0.c1  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c1 AS TEXT))) AND ((rt0.c0 COLLATE RTRIM))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((vt0.lid)IS NOT(vt1.c1)) THEN ((rt0.c2)<(rt0.c1)) WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c1 AS NUMERIC) WHEN (- (vt0.lid)) THEN (NULL IN ()) ELSE '-2008056804' END) ORDER BY ((((vt0.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)IS NOT(vt1.c1)) THEN ((rt0.c2)<(rt0.c1)) WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c1 AS NUMERIC) WHEN (- (vt0.lid)) THEN (NULL IN ()) ELSE '-2008056804' END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0) NOT NULL)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((vt0.lid)IS NOT(vt1.c1)) THEN ((rt0.c2)<(rt0.c1)) WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c1 AS NUMERIC) WHEN (- (vt0.lid)) THEN (NULL IN ()) ELSE '-2008056804' END) ORDER BY ((((vt0.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.lid)IS NOT(vt1.c1)) THEN ((rt0.c2)<(rt0.c1)) WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c1 AS NUMERIC) WHEN (- (vt0.lid)) THEN (NULL IN ()) ELSE '-2008056804' END) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY ((((vt0.c0) NOT NULL)) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (CASE WHEN ((vt0.lid)IS NOT(vt1.c1)) THEN ((rt0.c2)<(rt0.c1)) WHEN vt1.c1 COLLATE BINARY THEN CAST(vt1.c1 AS NUMERIC) WHEN (- (vt0.lid)) THEN (NULL IN ()) ELSE '-2008056804' END) ORDER BY ((((vt0.c0) NOT NULL)) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((rt0.c2)IS(NULL)))))OR(CASE '1601942670'  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL), CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((vt1.c1)>=(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c1)))))) ORDER BY CAST(((0.6215942944933368)LIKE(x'')) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL), CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((vt1.c1)>=(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((rt0.c2)IS(NULL)))))OR(CASE '1601942670'  WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY CAST(((0.6215942944933368)LIKE(x'')) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((rt0.c2)IS(NULL)))))OR(CASE '1601942670'  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL), CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((vt1.c1)>=(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c1)))))) ORDER BY CAST(((0.6215942944933368)LIKE(x'')) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL), CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((vt1.c1)>=(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((rt0.c2)IS(NULL)))))OR(CASE '1601942670'  WHEN rt0.c0 THEN rt0.c0 END)) ORDER BY CAST(((0.6215942944933368)LIKE(x'')) AS TEXT) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))AND(((rt0.c2)IS(NULL)))))OR(CASE '1601942670'  WHEN rt0.c0 THEN rt0.c0 END)) WHERE ((((vt1.c1, vt1.c1, vt1.c0)) NOT BETWEEN ((((vt1.c1) ISNULL), CASE rt0.c2  WHEN rt0.c1 THEN x'' END, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) AND ((((vt1.c1)>=(rt0.c1)), CAST(rt0.c2 AS INTEGER), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (vt1.c1)))))) ORDER BY CAST(((0.6215942944933368)LIKE(x'')) AS TEXT) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL ASC  NULLS LAST, IFNULL(DISTINCT ((vt0.lid) NOT NULL), '*' COLLATE BINARY) DESC, (((((vt0.lid))!=((0.8617322549943315))))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, IFNULL(DISTINCT ((vt0.lid) NOT NULL), '*' COLLATE BINARY) DESC, (((((vt0.lid))<>((0.8617322549943315))))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL ASC  NULLS LAST, IFNULL(DISTINCT ((vt0.lid) NOT NULL), '*' COLLATE BINARY) DESC, (((((vt0.lid))!=((0.8617322549943315))))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS LAST, IFNULL(DISTINCT ((vt0.lid) NOT NULL), '*' COLLATE BINARY) DESC, (((((vt0.lid))<>((0.8617322549943315))))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 COLLATE BINARY AS NUMERIC)) ORDER BY NULL ASC  NULLS LAST, IFNULL(DISTINCT ((vt0.lid) NOT NULL), '*' COLLATE BINARY) DESC, (((((vt0.lid))!=((0.8617322549943315))))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((0.10565745648995473, 0.02533302720118258, LTRIM(rt0.c2))) AND ((((rt0.c2)LIKE(rt0.c0)), ((rt0.c2)&(rt0.c1)), ((rt0.c1)GLOB(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((0.10565745648995473, 0.02533302720118258, LTRIM(rt0.c2))) AND ((((rt0.c2)LIKE(rt0.c0)), ((rt0.c2)&(rt0.c1)), ((rt0.c1)GLOB(rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((0.10565745648995473, 0.02533302720118258, LTRIM(rt0.c2))) AND ((((rt0.c2)LIKE(rt0.c0)), ((rt0.c2)&(rt0.c1)), ((rt0.c1)GLOB(rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((0.10565745648995473, 0.02533302720118258, LTRIM(rt0.c2))) AND ((((rt0.c2)LIKE(rt0.c0)), ((rt0.c2)&(rt0.c1)), ((rt0.c1)GLOB(rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS BLOB)) ORDER BY (((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((0.10565745648995473, 0.02533302720118258, LTRIM(rt0.c2))) AND ((((rt0.c2)LIKE(rt0.c0)), ((rt0.c2)&(rt0.c1)), ((rt0.c1)GLOB(rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.lid)) BETWEEN ((((((vt0.lid)OR(rt0.c2)))AND(rt0.c0)))) AND ((TRIM('-1590413464')))) CROSS JOIN rt0 ON vt0.lid WHERE (((rt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.lid)) BETWEEN ((((((vt0.lid)OR(rt0.c2)))AND(rt0.c0)))) AND ((TRIM('-1590413464')))) CROSS JOIN rt0 ON vt0.lid);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.lid)) BETWEEN ((((((vt0.lid)OR(rt0.c2)))AND(rt0.c0)))) AND ((TRIM('-1590413464')))) CROSS JOIN rt0 ON vt0.lid WHERE (((rt0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.lid)) BETWEEN ((((((vt0.lid)OR(rt0.c2)))AND(rt0.c0)))) AND ((TRIM('-1590413464')))) CROSS JOIN rt0 ON vt0.lid);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) ORDER BY TRIM(DISTINCT x'a1ead252', CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT x'a1ead252', CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) ORDER BY TRIM(DISTINCT x'a1ead252', CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT x'a1ead252', CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END));
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE)>((vt1.c0 IN ())))) ORDER BY TRIM(DISTINCT x'a1ead252', CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)*(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)*(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((vt1.c1)*(vt1.c1)) AS REAL));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt0.lid)<=((((vt1.c0))<((x'')))))) ORDER BY vt0.c0 ASC, CASE CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)<=((((vt1.c0))<((x'')))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY vt0.c0 ASC, CASE CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt0.lid)<=((((vt1.c0))<((x'')))))) ORDER BY vt0.c0 ASC, CASE CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.lid)<=((((vt1.c0))<((x'')))))) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY vt0.c0 ASC, CASE CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt1.c0)) END ASC);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((vt0.lid)<=((((vt1.c0))<((x'')))))) ORDER BY vt0.c0 ASC, CASE CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c0 END  WHEN ((vt1.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (NOT (vt1.c0)) END ASC;
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM rt0, vt1, vt0 WHERE (vt1.c1);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c0 AS REAL)))!=(('1538098101' COLLATE BINARY))) WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((((vt1.c1)||(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c0 AS REAL)))<>(('1538098101' COLLATE BINARY))) ORDER BY ((((vt1.c1)||(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c0 AS REAL)))!=(('1538098101' COLLATE BINARY))) WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((((vt1.c1)||(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c0 AS REAL)))<>(('1538098101' COLLATE BINARY))) ORDER BY ((((vt1.c1)||(rt0.c1))) IS FALSE) ASC  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON (((CAST(rt0.c0 AS REAL)))!=(('1538098101' COLLATE BINARY))) WHERE ((+ (((rt0.c1) NOT NULL)))) ORDER BY ((((vt1.c1)||(rt0.c1))) IS FALSE) ASC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (0.13671721199806663);
SELECT SUM(count) FROM (SELECT ((0.13671721199806663) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.13671721199806663);
SELECT SUM(count) FROM (SELECT ((0.13671721199806663) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (0.13671721199806663);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))>=(CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))>=(CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))>=(CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL))>=(CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL))>=(CASE vt1.c0  WHEN '' THEN vt1.c1 ELSE vt1.c0 END)));
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c0);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 END THEN vt1.c1 COLLATE BINARY WHEN ((vt1.c0) ISNULL) THEN x'' WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 END THEN vt1.c1 COLLATE BINARY WHEN ((vt1.c0) ISNULL) THEN x'' WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE CHANGES() END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 END THEN vt1.c1 COLLATE BINARY WHEN ((vt1.c0) ISNULL) THEN x'' WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE CHANGES() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 END THEN vt1.c1 COLLATE BINARY WHEN ((vt1.c0) ISNULL) THEN x'' WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE CHANGES() END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CASE rt0.c2  WHEN rt0.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c1 WHEN vt1.c1 THEN rt0.c2 END THEN vt1.c1 COLLATE BINARY WHEN ((vt1.c0) ISNULL) THEN x'' WHEN vt1.c0 THEN CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END ELSE CHANGES() END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (NULL COLLATE RTRIM)) WHERE (((((rt0.c0)>>(rt0.c0))) NOT BETWEEN ((((rt0.c0))>=((vt0.lid)))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0))) NOT BETWEEN ((((rt0.c0))>=((vt0.lid)))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (NULL COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (NULL COLLATE RTRIM)) WHERE (((((rt0.c0)>>(rt0.c0))) NOT BETWEEN ((((rt0.c0))>=((vt0.lid)))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>>(rt0.c0))) NOT BETWEEN ((((rt0.c0))>=((vt0.lid)))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (NULL COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON ((((rt0.c2) NOTNULL)) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2))) AND (NULL COLLATE RTRIM)) WHERE (((((rt0.c0)>>(rt0.c0))) NOT BETWEEN ((((rt0.c0))>=((vt0.lid)))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')%(rt0.c0)))AND(0xffffffffcfe188f9))) ORDER BY (((('486411287')AND(((0.7836054385622068)OR(vt1.c1)))))OR(rt0.c0));
SELECT SUM(count) FROM (SELECT ((((((x'')%(rt0.c0)))AND(0xffffffffcfe188f9))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((('486411287')AND(((0.7836054385622068)OR(vt1.c1)))))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')%(rt0.c0)))AND(0xffffffffcfe188f9))) ORDER BY (((('486411287')AND(((0.7836054385622068)OR(vt1.c1)))))OR(rt0.c0));
SELECT SUM(count) FROM (SELECT ((((((x'')%(rt0.c0)))AND(0xffffffffcfe188f9))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((('486411287')AND(((0.7836054385622068)OR(vt1.c1)))))OR(rt0.c0)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((x'')%(rt0.c0)))AND(0xffffffffcfe188f9))) ORDER BY (((('486411287')AND(((0.7836054385622068)OR(vt1.c1)))))OR(rt0.c0));
SELECT ALL * FROM rt0, vt0 WHERE (CASE vt0.lid  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE vt0.lid  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.lid  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE vt0.lid  WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c0 END COLLATE BINARY);
SELECT ALL * FROM rt0, vt1 WHERE (LIKE((~ (vt1.c0)), IFNULL(DISTINCT rt0.c0, '352740966'), '㘕'));
SELECT SUM(count) FROM (SELECT ((LIKE((~ (vt1.c0)), IFNULL(DISTINCT rt0.c0, '352740966'), '㘕')) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (LIKE((~ (vt1.c0)), IFNULL(DISTINCT rt0.c0, '352740966'), '㘕'));
SELECT SUM(count) FROM (SELECT ((LIKE((~ (vt1.c0)), IFNULL(DISTINCT rt0.c0, '352740966'), '㘕')) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (LIKE((~ (vt1.c0)), IFNULL(DISTINCT rt0.c0, '352740966'), '㘕'));
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (vt1.c1);
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, NULLIF(DISTINCT '', ((rt0.c1)-(rt0.c0))) ASC  NULLS LAST, ((((x'e119') BETWEEN ('b_	teKpdJ') AND (rt0.c1)))||((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, NULLIF(DISTINCT '', ((rt0.c1)-(rt0.c0))) ASC  NULLS LAST, ((((x'e119') BETWEEN ('b_	teKpdJ') AND (rt0.c1)))||((((rt0.c1))<=((rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, NULLIF(DISTINCT '', ((rt0.c1)-(rt0.c0))) ASC  NULLS LAST, ((((x'e119') BETWEEN ('b_	teKpdJ') AND (rt0.c1)))||((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, NULLIF(DISTINCT '', ((rt0.c1)-(rt0.c0))) ASC  NULLS LAST, ((((x'e119') BETWEEN ('b_	teKpdJ') AND (rt0.c1)))||((((rt0.c1))<=((rt0.c2))))) ASC);
SELECT * FROM rt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY (((((rt0.c0)OR(rt0.c1)))AND(rt0.c0)) IN ())  NULLS LAST, NULLIF(DISTINCT '', ((rt0.c1)-(rt0.c0))) ASC  NULLS LAST, ((((x'e119') BETWEEN ('b_	teKpdJ') AND (rt0.c1)))||((((rt0.c1))<=((rt0.c2))))) ASC;
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c1) IS TRUE))))AND(((NULL)OR(vt1.c0)))))AND(((((0.9838028827105835)OR(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)OR(vt1.c0))))) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c1) IS TRUE))))AND(((NULL)OR(vt1.c0)))))AND(((((0.9838028827105835)OR(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c1) IS TRUE))))AND(((NULL)OR(vt1.c0)))))AND(((((0.9838028827105835)OR(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)OR(vt1.c0))))) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (vt0.c0)))OR(((vt1.c1) IS TRUE))))AND(((NULL)OR(vt1.c0)))))AND(((((0.9838028827105835)OR(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)OR(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((((((((NOT (vt0.c0)))OR(((vt1.c1) IS TRUE))))AND(((NULL)OR(vt1.c0)))))AND(((((0.9838028827105835)OR(vt1.c1)))AND(vt0.c0)))))OR(((vt1.c1)OR(vt1.c0))))) ORDER BY ((NULL) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)%(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)%(rt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE ('Fz' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('Fz' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('Fz' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('Fz' COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('Fz' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((((rt0.c1)AND(vt1.c1)))OR(rt0.c2)) ELSE ((vt0.lid) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((((rt0.c1)AND(vt1.c1)))OR(rt0.c2)) ELSE ((vt0.lid) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((((rt0.c1)AND(vt1.c1)))OR(rt0.c2)) ELSE ((vt0.lid) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((((rt0.c1)AND(vt1.c1)))OR(rt0.c2)) ELSE ((vt0.lid) IS FALSE) END) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (CASE WHEN ((rt0.c0)GLOB(vt0.c0)) THEN ((((rt0.c1)AND(vt1.c1)))OR(rt0.c2)) ELSE ((vt0.lid) IS FALSE) END);
SELECT ALL * FROM vt1, rt0 WHERE (((x'') NOT BETWEEN ('Ma_]') AND (((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ('Ma_]') AND (((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'') NOT BETWEEN ('Ma_]') AND (((rt0.c0)AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN ('Ma_]') AND (((rt0.c0)AND(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((x'') NOT BETWEEN ('Ma_]') AND (((rt0.c0)AND(rt0.c0)))));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CAST(1.730053502E9 AS NUMERIC) AS REAL)) ORDER BY CAST((~ (rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(1.730053502E9 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST((~ (rt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CAST(1.730053502E9 AS NUMERIC) AS REAL)) ORDER BY CAST((~ (rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(1.730053502E9 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY CAST((~ (rt0.c0)) AS NUMERIC));
SELECT ALL * FROM vt0, rt0, vt1 WHERE (CAST(CAST(1.730053502E9 AS NUMERIC) AS REAL)) ORDER BY CAST((~ (rt0.c0)) AS NUMERIC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), CASE rt0.c0  WHEN rt0.c0 THEN 0x5c75abff ELSE rt0.c0 END, ((rt0.c2)&(rt0.c2)))) AND ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)), LOWER(x''), rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), CASE rt0.c0  WHEN rt0.c0 THEN 0x5c75abff ELSE rt0.c0 END, ((rt0.c2)&(rt0.c2)))) AND ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)), LOWER(x''), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), CASE rt0.c0  WHEN rt0.c0 THEN 0x5c75abff ELSE rt0.c0 END, ((rt0.c2)&(rt0.c2)))) AND ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)), LOWER(x''), rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), CASE rt0.c0  WHEN rt0.c0 THEN 0x5c75abff ELSE rt0.c0 END, ((rt0.c2)&(rt0.c2)))) AND ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)), LOWER(x''), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)!=(rt0.c2)), CASE rt0.c0  WHEN rt0.c0 THEN 0x5c75abff ELSE rt0.c0 END, ((rt0.c2)&(rt0.c2)))) AND ((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)), LOWER(x''), rt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.lid)OR(((vt1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid)OR(((vt1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.lid)OR(((vt1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT SUM(count) FROM (SELECT ((((vt0.lid)OR(((vt1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.lid)OR(((vt1.c1) NOT BETWEEN (vt0.lid) AND (vt0.lid)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) ORDER BY CHANGES() DESC  NULLS FIRST, json_extract(STRFTIME(rt0.c2, rt0.c1, vt1.c0), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c0))%((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CHANGES() DESC  NULLS FIRST, json_extract(STRFTIME(rt0.c2, rt0.c1, vt1.c0), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c0))%((+ (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) ORDER BY CHANGES() DESC  NULLS FIRST, json_extract(STRFTIME(rt0.c2, rt0.c1, vt1.c0), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c0))%((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CHANGES() DESC  NULLS FIRST, json_extract(STRFTIME(rt0.c2, rt0.c1, vt1.c0), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c0))%((+ (rt0.c1)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c2 COLLATE NOCASE IN ())) ORDER BY CHANGES() DESC  NULLS FIRST, json_extract(STRFTIME(rt0.c2, rt0.c1, vt1.c0), (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))), ((SQLITE_COMPILEOPTION_GET(rt0.c0))%((+ (rt0.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.lid))==((rt0.c2))) IN ())) ORDER BY ((('ꀮ埓4箭')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((vt0.lid IN (vt0.lid))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid))=((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((('ꀮ埓4箭')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((vt0.lid IN (vt0.lid))))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.lid))==((rt0.c2))) IN ())) ORDER BY ((('ꀮ埓4箭')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((vt0.lid IN (vt0.lid))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.lid))=((rt0.c2))) IN ())) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((('ꀮ埓4箭')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((vt0.lid IN (vt0.lid))))) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((vt0.lid))==((rt0.c2))) IN ())) ORDER BY ((('ꀮ埓4箭')) BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) AND (((vt0.lid IN (vt0.lid))))) ASC;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)&(vt0.lid)))<<(TRIM(rt0.c1, vt0.lid)))) ORDER BY ((rt0.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(vt0.lid)))<<(TRIM(rt0.c1, vt0.lid)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)&(vt0.lid)))<<(TRIM(rt0.c1, vt0.lid)))) ORDER BY ((rt0.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)&(vt0.lid)))<<(TRIM(rt0.c1, vt0.lid)))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((rt0.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((rt0.c1)&(vt0.lid)))<<(TRIM(rt0.c1, vt0.lid)))) ORDER BY ((rt0.c0)LIKE(vt1.c0)) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((+ ((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((+ ((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((+ ((((vt0.lid)) BETWEEN ((vt0.lid)) AND ((vt0.lid))))));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))<<(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))<<(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))<<(CAST(vt1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS REAL))<<(CAST(vt1.c1 AS TEXT)))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS REAL))<<(CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- (((vt0.lid)<<(rt0.c1)))) CROSS JOIN vt1 ON ((((vt0.lid) NOT NULL))-(((rt0.c1)>>(0.5542314575885879)))) WHERE (((((vt0.lid) IS TRUE))!=(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END, rt0.c0, rt0.c0 COLLATE RTRIM))<>((((vt1.c1)&(rt0.c2)), (rt0.c1 IN (vt1.c0)), (NOT (vt1.c0))))) ASC  NULLS FIRST, ((((vt1.c1)<=(0x38abd5c2)))<>(((x'')GLOB(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) IS TRUE))!=(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (((vt0.lid)<<(rt0.c1)))) CROSS JOIN vt1 ON ((((vt0.lid) NOT NULL))-(((rt0.c1)>>(0.5542314575885879)))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END, rt0.c0, rt0.c0 COLLATE RTRIM))<>((((vt1.c1)&(rt0.c2)), (rt0.c1 IN (vt1.c0)), (NOT (vt1.c0))))) ASC  NULLS FIRST, ((((vt1.c1)<=(0x38abd5c2)))!=(((x'')GLOB(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- (((vt0.lid)<<(rt0.c1)))) CROSS JOIN vt1 ON ((((vt0.lid) NOT NULL))-(((rt0.c1)>>(0.5542314575885879)))) WHERE (((((vt0.lid) IS TRUE))!=(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END, rt0.c0, rt0.c0 COLLATE RTRIM))<>((((vt1.c1)&(rt0.c2)), (rt0.c1 IN (vt1.c0)), (NOT (vt1.c0))))) ASC  NULLS FIRST, ((((vt1.c1)<=(0x38abd5c2)))<>(((x'')GLOB(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.lid) IS TRUE))!=(CASE WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (- (((vt0.lid)<<(rt0.c1)))) CROSS JOIN vt1 ON ((((vt0.lid) NOT NULL))-(((rt0.c1)>>(0.5542314575885879)))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END, rt0.c0, rt0.c0 COLLATE RTRIM))<>((((vt1.c1)&(rt0.c2)), (rt0.c1 IN (vt1.c0)), (NOT (vt1.c0))))) ASC  NULLS FIRST, ((((vt1.c1)<=(0x38abd5c2)))!=(((x'')GLOB(rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON (- (((vt0.lid)<<(rt0.c1)))) CROSS JOIN vt1 ON ((((vt0.lid) NOT NULL))-(((rt0.c1)>>(0.5542314575885879)))) WHERE (((((vt0.lid) IS TRUE))!=(CASE WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END, rt0.c0, rt0.c0 COLLATE RTRIM))<>((((vt1.c1)&(rt0.c2)), (rt0.c1 IN (vt1.c0)), (NOT (vt1.c0))))) ASC  NULLS FIRST, ((((vt1.c1)<=(0x38abd5c2)))<>(((x'')GLOB(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((vt1.c0)&(vt1.c1))))) ORDER BY ((CAST('O|y' AS TEXT))AND(CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST('O|y' AS TEXT))AND(CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((vt1.c0)&(vt1.c1))))) ORDER BY ((CAST('O|y' AS TEXT))AND(CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((vt1.c0)&(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST('O|y' AS TEXT))AND(CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((vt1.c0)&(vt1.c1))))) ORDER BY ((CAST('O|y' AS TEXT))AND(CAST(rt0.c0 AS NUMERIC))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt1.c1)), 0.010672376064547962));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NOT (vt1.c1)), 0.010672376064547962)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt1.c1)), 0.010672376064547962));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT (NOT (vt1.c1)), 0.010672376064547962)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (LIKELIHOOD(DISTINCT (NOT (vt1.c1)), 0.010672376064547962));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((((vt1.c1) NOT NULL)))!=((COALESCE(DISTINCT vt1.c0, rt0.c2)))) CROSS JOIN vt1 ON 'Vg' WHERE ((+ (TRIM(DISTINCT vt0.lid, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT vt0.lid, rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((vt1.c1) NOT NULL)))<>((COALESCE(DISTINCT vt1.c0, rt0.c2)))) CROSS JOIN vt1 ON 'Vg');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((((vt1.c1) NOT NULL)))!=((COALESCE(DISTINCT vt1.c0, rt0.c2)))) CROSS JOIN vt1 ON 'Vg' WHERE ((+ (TRIM(DISTINCT vt0.lid, rt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (TRIM(DISTINCT vt0.lid, rt0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (((((vt1.c1) NOT NULL)))<>((COALESCE(DISTINCT vt1.c0, rt0.c2)))) CROSS JOIN vt1 ON 'Vg');
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (((((vt1.c1) NOT NULL)))!=((COALESCE(DISTINCT vt1.c0, rt0.c2)))) CROSS JOIN vt1 ON 'Vg' WHERE ((+ (TRIM(DISTINCT vt0.lid, rt0.c0))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((~ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(vt0.lid))))<=((SQLITE_COMPILEOPTION_GET(rt0.c0), (((rt0.c2))<((rt0.c1))), TRIM(rt0.c0, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((~ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(vt0.lid))))<=((SQLITE_COMPILEOPTION_GET(rt0.c0), (((rt0.c2))<((rt0.c1))), TRIM(rt0.c0, rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((~ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(vt0.lid))))<=((SQLITE_COMPILEOPTION_GET(rt0.c0), (((rt0.c2))<((rt0.c1))), TRIM(rt0.c0, rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((~ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(vt0.lid))))<=((SQLITE_COMPILEOPTION_GET(rt0.c0), (((rt0.c2))<((rt0.c1))), TRIM(rt0.c0, rt0.c2)))) DESC);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2)OR(vt0.c0)))AND(rt0.c1)) COLLATE RTRIM) ORDER BY ((((~ (rt0.c1)), rt0.c2 COLLATE RTRIM, ((((rt0.c2)AND(rt0.c1)))OR(vt0.lid))))<=((SQLITE_COMPILEOPTION_GET(rt0.c0), (((rt0.c2))<((rt0.c1))), TRIM(rt0.c0, rt0.c2)))) DESC;
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(TOTAL_CHANGES() AS BLOB)) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c0)), ((vt1.c0)|(vt1.c0)), ((vt1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) AND ((NULL COLLATE BINARY, rt0.c1, CAST(vt0.lid AS NUMERIC)))) ASC  NULLS FIRST, ((rtreenode(vt1.c0, rt0.c2))*((((NULL)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c0)), ((vt1.c0)|(vt1.c0)), ((vt1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) AND ((NULL COLLATE BINARY, rt0.c1, CAST(vt0.lid AS NUMERIC)))) ASC  NULLS FIRST, ((rtreenode(vt1.c0, rt0.c2))*((((NULL)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(TOTAL_CHANGES() AS BLOB)) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c0)), ((vt1.c0)|(vt1.c0)), ((vt1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) AND ((NULL COLLATE BINARY, rt0.c1, CAST(vt0.lid AS NUMERIC)))) ASC  NULLS FIRST, ((rtreenode(vt1.c0, rt0.c2))*((((NULL)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt0 ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c0)), ((vt1.c0)|(vt1.c0)), ((vt1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) AND ((NULL COLLATE BINARY, rt0.c1, CAST(vt0.lid AS NUMERIC)))) ASC  NULLS FIRST, ((rtreenode(vt1.c0, rt0.c2))*((((NULL)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0 WHERE (CAST(TOTAL_CHANGES() AS BLOB)) ORDER BY (((vt1.c0, rt0.c2, rt0.c0)) BETWEEN ((((((vt1.c0)OR(vt0.lid)))AND(rt0.c0)), ((vt1.c0)|(vt1.c0)), ((vt1.c0) NOT BETWEEN (NULL) AND (rt0.c1)))) AND ((NULL COLLATE BINARY, rt0.c1, CAST(vt0.lid AS NUMERIC)))) ASC  NULLS FIRST, ((rtreenode(vt1.c0, rt0.c2))*((((NULL)) NOT BETWEEN ((vt0.lid)) AND ((vt0.c0))))) DESC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0, rt0.c2, vt1.c1)) BETWEEN ((UNLIKELY(DISTINCT vt1.c0), (((rt0.c1))<((rt0.c0))), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((vt0.lid) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)), ((((rt0.c2)OR(vt0.c0)))OR(vt1.c0))))) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (0.7264754484054747);
SELECT SUM(count) FROM (SELECT ((0.7264754484054747) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0, rt0.c2, vt1.c1)) BETWEEN ((UNLIKELY(DISTINCT vt1.c0), (((rt0.c1))<((rt0.c0))), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((vt0.lid) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)), ((((rt0.c2)OR(vt0.c0)))OR(vt1.c0))))) LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0, rt0.c2, vt1.c1)) BETWEEN ((UNLIKELY(DISTINCT vt1.c0), (((rt0.c1))<((rt0.c0))), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((vt0.lid) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)), ((((rt0.c2)OR(vt0.c0)))OR(vt1.c0))))) LEFT OUTER JOIN vt0 ON rt0.c0 WHERE (0.7264754484054747);
SELECT SUM(count) FROM (SELECT ((0.7264754484054747) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((vt1.c0, rt0.c2, vt1.c1)) BETWEEN ((UNLIKELY(DISTINCT vt1.c0), (((rt0.c1))<((rt0.c0))), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((((vt0.lid) BETWEEN (rt0.c0) AND (vt0.c0)), ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)), ((((rt0.c2)OR(vt0.c0)))OR(vt1.c0))))) LEFT OUTER JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((((((((vt1.c1)OR(vt1.c1)))OR(0.44693560150052003)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS BLOB), (vt1.c0 IN (vt1.c1)), ((vt1.c0)<(vt1.c1)), CAST(vt1.c0 AS BLOB))) AND ((((vt1.c0)/(vt1.c0)), (('') NOT BETWEEN (0.5357521873432799) AND (vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, LTRIM(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((((((((vt1.c1)OR(vt1.c1)))OR(0.44693560150052003)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS BLOB), (vt1.c0 IN (vt1.c1)), ((vt1.c0)<(vt1.c1)), CAST(vt1.c0 AS BLOB))) AND ((((vt1.c0)/(vt1.c0)), (('') NOT BETWEEN (0.5357521873432799) AND (vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, LTRIM(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((((((((vt1.c1)OR(vt1.c1)))OR(0.44693560150052003)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS BLOB), (vt1.c0 IN (vt1.c1)), ((vt1.c0)<(vt1.c1)), CAST(vt1.c0 AS BLOB))) AND ((((vt1.c0)/(vt1.c0)), (('') NOT BETWEEN (0.5357521873432799) AND (vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, LTRIM(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((((((((vt1.c1)OR(vt1.c1)))OR(0.44693560150052003)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS BLOB), (vt1.c0 IN (vt1.c1)), ((vt1.c0)<(vt1.c1)), CAST(vt1.c0 AS BLOB))) AND ((((vt1.c0)/(vt1.c0)), (('') NOT BETWEEN (0.5357521873432799) AND (vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, LTRIM(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1, vt1.c0, vt1.c0, vt1.c1, vt1.c0)) BETWEEN ((((((((((vt1.c1)OR(vt1.c1)))OR(0.44693560150052003)))OR(vt1.c0)))AND(vt1.c1)), CAST(vt1.c1 AS BLOB), (vt1.c0 IN (vt1.c1)), ((vt1.c0)<(vt1.c1)), CAST(vt1.c0 AS BLOB))) AND ((((vt1.c0)/(vt1.c0)), (('') NOT BETWEEN (0.5357521873432799) AND (vt1.c1)), CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c0 END, vt1.c0 COLLATE BINARY, LTRIM(vt1.c1)))));
SELECT * FROM rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt0.lid)OR(rt0.c1)))AND(rt0.c2)))) CROSS JOIN vt0 ON LOWER(DISTINCT rt0.c2) WHERE ((((+ (vt1.c0)))!=(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<>(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt0.lid)OR(rt0.c1)))AND(rt0.c2)))) CROSS JOIN vt0 ON LOWER(DISTINCT rt0.c2));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt0.lid)OR(rt0.c1)))AND(rt0.c2)))) CROSS JOIN vt0 ON LOWER(DISTINCT rt0.c2) WHERE ((((+ (vt1.c0)))!=(UPPER(DISTINCT rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<>(UPPER(DISTINCT rt0.c2)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (+ (((((vt0.lid)OR(rt0.c1)))AND(rt0.c2)))) CROSS JOIN vt0 ON LOWER(DISTINCT rt0.c2));
SELECT COUNT(*) FROM rt0, vt0 WHERE ('ꀮR|t') ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(0.5897118997929022)))OR(vt0.lid)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (('ꀮR|t') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(0.5897118997929022)))OR(vt0.lid)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('ꀮR|t') ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(0.5897118997929022)))OR(vt0.lid)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (('ꀮR|t') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(0.5897118997929022)))OR(vt0.lid)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ('ꀮR|t') ORDER BY ((((((((((rt0.c1)OR(rt0.c1)))AND(0.5897118997929022)))OR(vt0.lid)))OR(rt0.c0))) NOT BETWEEN ((rt0.c0 IN ())) AND (((((rt0.c2)AND(vt0.c0)))AND(rt0.c2)))) DESC;
SELECT * FROM vt0 WHERE ((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN 1535711360 END IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS LAST, UNLIKELY(vt0.lid);
SELECT SUM(count) FROM (SELECT (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN 1535711360 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS LAST, UNLIKELY(vt0.lid));
SELECT * FROM vt0 WHERE ((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN 1535711360 END IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS LAST, UNLIKELY(vt0.lid);
SELECT SUM(count) FROM (SELECT (((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN 1535711360 END IN ())) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS LAST, UNLIKELY(vt0.lid));
SELECT * FROM vt0 WHERE ((CASE vt0.lid  WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN vt0.lid WHEN vt0.lid THEN 1535711360 END IN ())) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS BLOB)  NULLS LAST, UNLIKELY(vt0.lid);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))>(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((x'')) BETWEEN ((0.8627111517098388)) AND ((vt0.c0 COLLATE RTRIM))) INNER JOIN vt0 ON (((((rt0.c2))<=((vt1.c1)))) BETWEEN (((rt0.c1)+(vt0.c0))) AND (x'')) WHERE ((((-98991562)=(vt1.c1)) IN (((rt0.c0)||(vt1.c1))))) ORDER BY CAST(LIKELIHOOD(rt0.c2, 0.6278121376119237) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-98991562)==(vt1.c1)) IN (((rt0.c0)||(vt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((x'')) BETWEEN ((0.8627111517098388)) AND ((vt0.c0 COLLATE RTRIM))) INNER JOIN vt0 ON (((((rt0.c2))<=((vt1.c1)))) BETWEEN (((rt0.c1)+(vt0.c0))) AND (x'')) ORDER BY CAST(LIKELIHOOD(rt0.c2, 0.6278121376119237) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((x'')) BETWEEN ((0.8627111517098388)) AND ((vt0.c0 COLLATE RTRIM))) INNER JOIN vt0 ON (((((rt0.c2))<=((vt1.c1)))) BETWEEN (((rt0.c1)+(vt0.c0))) AND (x'')) WHERE ((((-98991562)=(vt1.c1)) IN (((rt0.c0)||(vt1.c1))))) ORDER BY CAST(LIKELIHOOD(rt0.c2, 0.6278121376119237) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((-98991562)==(vt1.c1)) IN (((rt0.c0)||(vt1.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((x'')) BETWEEN ((0.8627111517098388)) AND ((vt0.c0 COLLATE RTRIM))) INNER JOIN vt0 ON (((((rt0.c2))<=((vt1.c1)))) BETWEEN (((rt0.c1)+(vt0.c0))) AND (x'')) ORDER BY CAST(LIKELIHOOD(rt0.c2, 0.6278121376119237) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON (((x'')) BETWEEN ((0.8627111517098388)) AND ((vt0.c0 COLLATE RTRIM))) INNER JOIN vt0 ON (((((rt0.c2))<=((vt1.c1)))) BETWEEN (((rt0.c1)+(vt0.c0))) AND (x'')) WHERE ((((-98991562)=(vt1.c1)) IN (((rt0.c0)||(vt1.c1))))) ORDER BY CAST(LIKELIHOOD(rt0.c2, 0.6278121376119237) AS BLOB) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (((('-729138757')/(rt0.c2)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.lid)))) WHERE (rt0.c1) ORDER BY ((963463982)%(vt1.c1)) ASC  NULLS FIRST, ((NULL)<((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST, ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (((('-729138757')/(rt0.c2)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.lid)))) ORDER BY ((963463982)%(vt1.c1)) ASC  NULLS FIRST, ((NULL)<((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST, ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (((('-729138757')/(rt0.c2)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.lid)))) WHERE (rt0.c1) ORDER BY ((963463982)%(vt1.c1)) ASC  NULLS FIRST, ((NULL)<((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST, ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (((('-729138757')/(rt0.c2)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.lid)))) ORDER BY ((963463982)%(vt1.c1)) ASC  NULLS FIRST, ((NULL)<((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST, ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON vt0.c0 CROSS JOIN vt1 ON (((('-729138757')/(rt0.c2)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt0.lid)))) WHERE (rt0.c1) ORDER BY ((963463982)%(vt1.c1)) ASC  NULLS FIRST, ((NULL)<((((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))  NULLS LAST, ((((vt1.c0) IS FALSE)) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((LIKELIHOOD(DISTINCT rt0.c1, 0.25789759429521775) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((('0.9180062284091555') NOT BETWEEN (vt1.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT rt0.c1, 0.25789759429521775) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((('0.9180062284091555') NOT BETWEEN (vt1.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((LIKELIHOOD(DISTINCT rt0.c1, 0.25789759429521775) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((('0.9180062284091555') NOT BETWEEN (vt1.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((LIKELIHOOD(DISTINCT rt0.c1, 0.25789759429521775) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((('0.9180062284091555') NOT BETWEEN (vt1.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((LIKELIHOOD(DISTINCT rt0.c1, 0.25789759429521775) IN (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0))))) ORDER BY (((('0.9180062284091555') NOT BETWEEN (vt1.c0) AND (vt1.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))||(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c2)))||(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))||(((rt0.c2)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)GLOB(rt0.c2)))||(((rt0.c2)+(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c2)))||(((rt0.c2)+(rt0.c2)))));
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))/(((vt1.c0) BETWEEN (vt1.c1) AND (x'e5c6deaa')))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))/(((vt1.c0) BETWEEN (vt1.c1) AND (x'e5c6deaa'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))/(((vt1.c0) BETWEEN (vt1.c1) AND (x'e5c6deaa')))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))/(((vt1.c0) BETWEEN (vt1.c1) AND (x'e5c6deaa'))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))/(((vt1.c0) BETWEEN (vt1.c1) AND (x'e5c6deaa')))));
SELECT ALL * FROM vt1, vt0 WHERE ('-1442462187');
SELECT SUM(count) FROM (SELECT (('-1442462187') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ('-1442462187');
SELECT SUM(count) FROM (SELECT (('-1442462187') IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE ('-1442462187');
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))%(COALESCE(vt1.c1, vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))%(COALESCE(vt1.c1, vt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))%(COALESCE(vt1.c1, vt1.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))%(COALESCE(vt1.c1, vt1.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0) IS TRUE) IN ())) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))%(COALESCE(vt1.c1, vt1.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY (((- (rt0.c2)))AND(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c2)))AND(((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY (((- (rt0.c2)))AND(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (((- (rt0.c2)))AND(((rt0.c1) NOT NULL)))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(rt0.c1 AS TEXT)) ORDER BY (((- (rt0.c2)))AND(((rt0.c1) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c1) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))) WHERE ((~ (((vt1.c0)GLOB(rt0.c0))))) ORDER BY 0.6665692456976718 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c1) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))) ORDER BY 0.6665692456976718 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c1) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))) WHERE ((~ (((vt1.c0)GLOB(rt0.c0))))) ORDER BY 0.6665692456976718 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c1) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))) ORDER BY 0.6665692456976718 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON (((vt1.c0)) BETWEEN ((((rt0.c1) ISNULL))) AND ((vt1.c0 COLLATE RTRIM))) WHERE ((~ (((vt1.c0)GLOB(rt0.c0))))) ORDER BY 0.6665692456976718 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (json_patch(TYPEOF(DISTINCT vt1.c0), CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) BETWEEN (' 4{z2읙') AND (vt1.c0)))<=((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(TYPEOF(DISTINCT vt1.c0), CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (' 4{z2읙') AND (vt1.c0)))<=((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_patch(TYPEOF(DISTINCT vt1.c0), CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) BETWEEN (' 4{z2읙') AND (vt1.c0)))<=((vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(TYPEOF(DISTINCT vt1.c0), CAST(vt1.c0 AS BLOB))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) BETWEEN (' 4{z2읙') AND (vt1.c0)))<=((vt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 WHERE (json_patch(TYPEOF(DISTINCT vt1.c0), CAST(vt1.c0 AS BLOB))) ORDER BY ((((vt1.c0) BETWEEN (' 4{z2읙') AND (vt1.c0)))<=((vt1.c1 IN ())));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((vt0.lid IN ()) IN ()) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (((0Xffffffff9419dc84, rt0.c2, 0X71fabb98))!=((rt0.c1, rt0.c1, vt1.c1))) THEN (~ (vt0.lid)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN (((0xffffffff9419dc84, rt0.c2, 0X71fabb98))!=((rt0.c1, rt0.c1, vt1.c1))) THEN (~ (vt0.lid)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((vt0.lid IN ()) IN ()) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((vt0.lid IN ()) IN ()) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (((0Xffffffff9419dc84, rt0.c2, 0X71fabb98))!=((rt0.c1, rt0.c1, vt1.c1))) THEN (~ (vt0.lid)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE NOCASE  WHEN (((0xffffffff9419dc84, rt0.c2, 0X71fabb98))!=((rt0.c1, rt0.c1, vt1.c1))) THEN (~ (vt0.lid)) END) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((vt0.lid IN ()) IN ()) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON vt0.c0 RIGHT OUTER JOIN vt1 ON ((vt0.lid IN ()) IN ()) WHERE (CASE vt1.c1 COLLATE NOCASE  WHEN (((0Xffffffff9419dc84, rt0.c2, 0X71fabb98))!=((rt0.c1, rt0.c1, vt1.c1))) THEN (~ (vt0.lid)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0) NOTNULL), ((NULL)/(0.193137010972799))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0) NOTNULL), ((NULL)/(0.193137010972799)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0) NOTNULL), ((NULL)/(0.193137010972799))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt0.c0) NOTNULL), ((NULL)/(0.193137010972799)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT ((vt0.c0) NOTNULL), ((NULL)/(0.193137010972799))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN 0.7928033087081459 THEN x'' END)AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL))) ORDER BY ((vt0.c0)GLOB((~ (vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN 0.7928033087081459 THEN x'' END)AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)GLOB((~ (vt0.lid))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN 0.7928033087081459 THEN x'' END)AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL))) ORDER BY ((vt0.c0)GLOB((~ (vt0.lid))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN 0.7928033087081459 THEN x'' END)AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((vt0.c0)GLOB((~ (vt0.lid))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((CASE rt0.c2  WHEN 0.7928033087081459 THEN x'' END)AND(TRIM(DISTINCT vt0.c0, vt0.c0))))OR(NULL))) ORDER BY ((vt0.c0)GLOB((~ (vt0.lid))))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN ('AHA') AND (vt0.c0)))IS NOT(((((0Xffffffffcf01eb58)AND(x'bfe0')))OR(0.05402755894274369))))) ORDER BY ((vt1.c1) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN ('AHA') AND (vt0.c0)))IS NOT(((((0xffffffffcf01eb58)AND(x'bfe0')))OR(0.05402755894274369))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1) IS TRUE));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN ('AHA') AND (vt0.c0)))IS NOT(((((0Xffffffffcf01eb58)AND(x'bfe0')))OR(0.05402755894274369))))) ORDER BY ((vt1.c1) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN ('AHA') AND (vt0.c0)))IS NOT(((((0xffffffffcf01eb58)AND(x'bfe0')))OR(0.05402755894274369))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c1) IS TRUE));
SELECT * FROM vt1, vt0 WHERE (((((vt1.c0) BETWEEN ('AHA') AND (vt0.c0)))IS NOT(((((0Xffffffffcf01eb58)AND(x'bfe0')))OR(0.05402755894274369))))) ORDER BY ((vt1.c1) IS TRUE);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (IFNULL(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))IS((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))IS((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (IFNULL(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))IS((rt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((((vt0.c0)LIKE(vt0.c0)))IS((rt0.c0 IN ()))) ASC);
SELECT ALL * FROM rt0, vt1, vt0 WHERE ((- (IFNULL(DISTINCT rt0.c1, rt0.c2)))) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))IS((rt0.c0 IN ()))) ASC;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN '1891313007' THEN json_valid(rt0.c1) ELSE ((vt1.c0)LIKE(rt0.c1)) END WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN '1891313007' THEN json_valid(rt0.c1) ELSE ((vt1.c0)LIKE(rt0.c1)) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN '1891313007' THEN json_valid(rt0.c1) ELSE ((vt1.c0)LIKE(rt0.c1)) END WHERE ((vt1.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN ())) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN '1891313007' THEN json_valid(rt0.c1) ELSE ((vt1.c0)LIKE(rt0.c1)) END);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON CASE WHEN '1891313007' THEN json_valid(rt0.c1) ELSE ((vt1.c0)LIKE(rt0.c1)) END WHERE ((vt1.c0 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (HEX(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE rt0.c0  WHEN x'' THEN vt1.c1 ELSE rt0.c2 END)GLOB(vt0.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN x'' THEN vt1.c1 ELSE rt0.c2 END)GLOB(vt0.lid COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (HEX(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE rt0.c0  WHEN x'' THEN vt1.c1 ELSE rt0.c2 END)GLOB(vt0.lid COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(CAST(rt0.c1 AS TEXT))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY ((CASE rt0.c0  WHEN x'' THEN vt1.c1 ELSE rt0.c2 END)GLOB(vt0.lid COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt0, vt1 WHERE (HEX(CAST(rt0.c1 AS TEXT))) ORDER BY ((CASE rt0.c0  WHEN x'' THEN vt1.c1 ELSE rt0.c2 END)GLOB(vt0.lid COLLATE BINARY));
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt0.lid ELSE vt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt0.lid ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt0.lid ELSE vt1.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN vt0.lid ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN vt1.c1 THEN vt0.lid ELSE vt1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))|((vt1.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))|((vt1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))|((vt1.c0 IN (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ()))|((vt1.c0 IN (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c0 IN ()))|((vt1.c0 IN (rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (- (']s')) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (']s')) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (- (']s')) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY (- (']s')) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (vt1.c0) ORDER BY (- (']s')) ASC;
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((vt1.c0) IS TRUE)) AND ((vt0.lid IN ())))) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (((vt1.c0) IS TRUE)) AND ((vt0.lid IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((vt1.c1 IN ()) IN ()));
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((vt1.c0) IS TRUE)) AND ((vt0.lid IN ())))) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT NULL)) BETWEEN (((vt1.c0) IS TRUE)) AND ((vt0.lid IN ())))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY ((vt1.c1 IN ()) IN ()));
SELECT * FROM vt1, rt0, vt0 WHERE (((((vt1.c0) NOT NULL)) BETWEEN (((vt1.c0) IS TRUE)) AND ((vt0.lid IN ())))) ORDER BY ((vt1.c1 IN ()) IN ());
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((~ (vt1.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rtreenode(vt1.c0, '-983478101'))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rtreenode(vt1.c0, '-983478101')))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((~ (vt1.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rtreenode(vt1.c0, '-983478101'))));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rtreenode(vt1.c0, '-983478101')))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((~ (vt1.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rtreenode(vt1.c0, '-983478101'))));
SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))OR(COALESCE(rt0.c0, rt0.c1, rt0.c2, rt0.c2))))AND(SUBSTR(rt0.c2, rt0.c0)))) ORDER BY ((((+ (rt0.c1))))<(((rt0.c1 IN (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))OR(COALESCE(rt0.c0, rt0.c1, rt0.c2, rt0.c2))))AND(SUBSTR(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((+ (rt0.c1))))<(((rt0.c1 IN (rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))OR(COALESCE(rt0.c0, rt0.c1, rt0.c2, rt0.c2))))AND(SUBSTR(rt0.c2, rt0.c0)))) ORDER BY ((((+ (rt0.c1))))<(((rt0.c1 IN (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))OR(COALESCE(rt0.c0, rt0.c1, rt0.c2, rt0.c2))))AND(SUBSTR(rt0.c2, rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((((+ (rt0.c1))))<(((rt0.c1 IN (rt0.c1))))) ASC);
SELECT * FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))OR(COALESCE(rt0.c0, rt0.c1, rt0.c2, rt0.c2))))AND(SUBSTR(rt0.c2, rt0.c0)))) ORDER BY ((((+ (rt0.c1))))<(((rt0.c1 IN (rt0.c1))))) ASC;
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0Xffffffffbdb34caf COLLATE NOCASE)AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.28821985811059125 END)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.lid WHEN vt1.c1 THEN vt0.lid WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))OR((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0xffffffffbdb34caf COLLATE NOCASE)AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.28821985811059125 END)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.lid WHEN vt1.c1 THEN vt0.lid WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))OR((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0Xffffffffbdb34caf COLLATE NOCASE)AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.28821985811059125 END)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.lid WHEN vt1.c1 THEN vt0.lid WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))OR((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((0xffffffffbdb34caf COLLATE NOCASE)AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.28821985811059125 END)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.lid WHEN vt1.c1 THEN vt0.lid WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))OR((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((((((((0Xffffffffbdb34caf COLLATE NOCASE)AND(((((vt0.c0)AND(vt0.lid)))AND(vt0.c0)))))AND(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE 0.28821985811059125 END)))OR(CASE vt1.c1  WHEN vt0.c0 THEN vt0.lid WHEN vt1.c1 THEN vt0.lid WHEN vt1.c0 THEN x'' ELSE vt0.c0 END)))OR((((vt1.c1)) NOT BETWEEN ((x'')) AND ((vt1.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY ABS(DISTINCT x'e7c3') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT x'e7c3') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY ABS(DISTINCT x'e7c3') DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT x'e7c3') DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) IS TRUE)) ORDER BY ABS(DISTINCT x'e7c3') DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((rt0.c0)AND(-1.415434267E9)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) BETWEEN ((((rt0.c0, 0.8668305134665649, rt0.c2))<>((vt1.c0, rt0.c1, vt0.lid)))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(-1.415434267E9)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) BETWEEN ((((rt0.c0, 0.8668305134665649, rt0.c2))<>((vt1.c0, rt0.c1, vt0.lid)))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((rt0.c0)AND(-1.415434267E9)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) BETWEEN ((((rt0.c0, 0.8668305134665649, rt0.c2))<>((vt1.c0, rt0.c1, vt0.lid)))) AND (((rt0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)AND(-1.415434267E9)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) BETWEEN ((((rt0.c0, 0.8668305134665649, rt0.c2))<>((vt1.c0, rt0.c1, vt0.lid)))) AND (((rt0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, vt1);
SELECT COUNT(*) FROM vt0, rt0, vt1 WHERE (((((((((((rt0.c0)AND(-1.415434267E9)))OR(rt0.c1)))OR(rt0.c1)))AND(vt1.c0))) BETWEEN ((((rt0.c0, 0.8668305134665649, rt0.c2))<>((vt1.c0, rt0.c1, vt0.lid)))) AND (((rt0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ((vt1.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ((vt1.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((vt1.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((+ ((vt1.c1 IN (vt0.c0)))));
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((x'15d7')AND(CAST(vt0.lid AS TEXT))))OR(((rt0.c1)IS(rt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c1))) AND (LIKE(rt0.c2, vt1.c1))) DESC  NULLS FIRST, (- ((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'15d7')AND(CAST(vt0.lid AS TEXT))))OR(((rt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c1))) AND (LIKE(rt0.c2, vt1.c1))) DESC  NULLS FIRST, (- ((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((x'15d7')AND(CAST(vt0.lid AS TEXT))))OR(((rt0.c1)IS(rt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c1))) AND (LIKE(rt0.c2, vt1.c1))) DESC  NULLS FIRST, (- ((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((x'15d7')AND(CAST(vt0.lid AS TEXT))))OR(((rt0.c1)IS(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1, vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c1))) AND (LIKE(rt0.c2, vt1.c1))) DESC  NULLS FIRST, (- ((- (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1, vt0 WHERE (((((x'15d7')AND(CAST(vt0.lid AS TEXT))))OR(((rt0.c1)IS(rt0.c0))))) ORDER BY ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((+ (rt0.c1))) AND (LIKE(rt0.c2, vt1.c1))) DESC  NULLS FIRST, (- ((- (rt0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((0.16777040544052746) NOT NULL) WHERE (((((rt0.c1)IS(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((0.16777040544052746) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((0.16777040544052746) NOT NULL) WHERE (((((rt0.c1)IS(rt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)IS(rt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN vt1 ON ((0.16777040544052746) NOT NULL));
SELECT COUNT(*) FROM vt0, rt0 CROSS JOIN vt1 ON ((0.16777040544052746) NOT NULL) WHERE (((((rt0.c1)IS(rt0.c1))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>('-98321611'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>('-98321611'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>('-98321611'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>('-98321611'))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((LAST_INSERT_ROWID()) ISNULL)) ORDER BY ((((vt0.c0)IS NOT(vt0.c0)))>>('-98321611'))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.8894434219516314))AND(CAST(rt0.c1 AS REAL)))) ORDER BY ((rt0.c0)%((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c1, 0.8894434219516314))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0)%((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.8894434219516314))AND(CAST(rt0.c1 AS REAL)))) ORDER BY ((rt0.c0)%((vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT vt1.c1, 0.8894434219516314))AND(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY ((rt0.c0)%((vt1.c0 IN ()))));
SELECT COUNT(*) FROM vt1, vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt1.c1, 0.8894434219516314))AND(CAST(rt0.c1 AS REAL)))) ORDER BY ((rt0.c0)%((vt1.c0 IN ())));
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT ((vt0.lid)OR(rt0.c2)), (((vt0.lid, vt0.lid, rt0.c1, x'', rt0.c1))<>((rt0.c0, rt0.c2, '-1146152503', rt0.c2, vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.lid)OR(rt0.c2)), (((vt0.lid, vt0.lid, rt0.c1, x'', rt0.c1))!=((rt0.c0, rt0.c2, '-1146152503', rt0.c2, vt0.lid))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT ((vt0.lid)OR(rt0.c2)), (((vt0.lid, vt0.lid, rt0.c1, x'', rt0.c1))<>((rt0.c0, rt0.c2, '-1146152503', rt0.c2, vt0.lid)))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.lid)OR(rt0.c2)), (((vt0.lid, vt0.lid, rt0.c1, x'', rt0.c1))!=((rt0.c0, rt0.c2, '-1146152503', rt0.c2, vt0.lid))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (TRIM(DISTINCT ((vt0.lid)OR(rt0.c2)), (((vt0.lid, vt0.lid, rt0.c1, x'', rt0.c1))<>((rt0.c0, rt0.c2, '-1146152503', rt0.c2, vt0.lid)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((vt0.c0) BETWEEN (vt0.lid) AND (vt0.lid))));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c2);
SELECT * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))=(((((vt1.c0))<>((x'')))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))=(((((vt1.c0))!=((x''))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))=(((((vt1.c0))<>((x'')))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))=(((((vt1.c0))!=((x''))))))) IS TRUE)  as count FROM rt0, vt0, vt1);
SELECT * FROM rt0, vt0, vt1 WHERE ((((((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))=(((((vt1.c0))<>((x'')))))));
SELECT * FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))+(CASE 0.45335485641225703  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))+(CASE 0.45335485641225703  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))+(CASE 0.45335485641225703  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)%(vt1.c0)))+(CASE 0.45335485641225703  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((vt1.c0)%(vt1.c0)))+(CASE 0.45335485641225703  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('673891764')*(vt0.lid))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('673891764')*(vt0.lid))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('673891764')*(vt0.lid))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((('673891764')*(vt0.lid))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE ((((('673891764')*(vt0.lid))) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(x''))) AND (((vt1.c0) BETWEEN (vt0.lid) AND (vt1.c1)))));
SELECT * FROM vt1, vt0, rt0 WHERE (ABS(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c1)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (ABS(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((ABS(rt0.c1)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (ABS(rt0.c1));
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((NULL)LIKE(rt0.c2)))))OR(((rt0.c1) NOTNULL))))AND(((rt0.c2)-(rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((CAST(rt0.c0 AS REAL))*(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c0)))AND(((NULL)LIKE(rt0.c2)))))OR(((rt0.c1) NOTNULL))))AND(((rt0.c2)-(rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS REAL))*(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((NULL)LIKE(rt0.c2)))))OR(((rt0.c1) NOTNULL))))AND(((rt0.c2)-(rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((CAST(rt0.c0 AS REAL))*(((rt0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c0)))AND(((NULL)LIKE(rt0.c2)))))OR(((rt0.c1) NOTNULL))))AND(((rt0.c2)-(rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS REAL))*(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0 WHERE ((((((((((+ (rt0.c0)))AND(((NULL)LIKE(rt0.c2)))))OR(((rt0.c1) NOTNULL))))AND(((rt0.c2)-(rt0.c1)))))OR(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((CAST(rt0.c0 AS REAL))*(((rt0.c1) IS FALSE)));
SELECT * FROM vt1, vt0, rt0 WHERE (((vt0.c0)||('-1433142546')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||('-1433142546'))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((vt0.c0)||('-1433142546')));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||('-1433142546'))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT * FROM vt1, vt0, rt0 WHERE (((vt0.c0)||('-1433142546')));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN vt0.lid THEN ' !sse' END COLLATE BINARY WHERE (((((vt0.c0)>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN vt0.lid THEN ' !sse' END COLLATE BINARY);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN vt0.lid THEN ' !sse' END COLLATE BINARY WHERE (((((vt0.c0)>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON CASE WHEN vt0.lid THEN ' !sse' END COLLATE BINARY);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON CASE WHEN vt0.lid THEN ' !sse' END COLLATE BINARY WHERE (((((vt0.c0)>(vt1.c0))) NOTNULL));
