-- Time: 2024/06/09 03:49:09
-- Database: database57
-- Database version: 3.40.0
-- seed value: 1519570957
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB , c1 REAL , c2 REAL ); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i13 ON t0(((CASE WHEN c2 THEN c0 WHEN c1 THEN c2 WHEN c0 THEN c0 END)OR(((c2) NOTNULL))) COLLATE BINARY DESC,((((((0.4839491230779004)OR(c2)))AND(c2))) NOT NULL) COLLATE NOCASE DESC,(- ((((c0)) BETWEEN ((c0)) AND ((c2))))) ASC); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL), (0.9759843703852076), (x''), (NULL), (x'fbb8'); -- 0ms;
UPDATE OR REPLACE t0 SET (c2)=(NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2=NULL WHERE CASE WHEN ((((t0.c1)AND(t0.c1)))AND(t0.c0)) THEN t0.c2 WHEN (t0.c2 IN ()) THEN CASE 0.4839491230779004  WHEN t0.c1 THEN t0.c2 ELSE t0.c1 END WHEN t0.c0 COLLATE RTRIM THEN (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) ELSE (- (t0.c1)) END; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE t0 SET c2=0Xffffffffed1703da; -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=('''}'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(NULL) WHERE ((('6') NOT NULL) IN (t0.c2)); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, detail=none); -- 0ms;
UPDATE vt0 SET (c0, c0, c0)=(NULL, '-2088796305', 428403103) WHERE (((((((((- (vt0.c0)))OR(((vt0.c0) NOT NULL))))AND(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 END)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((((((vt0.c0)AND(t0.c2)))OR(t0.c2)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c2)))))OR(CAST(t0.c0 AS TEXT))) FROM vt0, t0 WHERE (CASE ((0.1335299116219516)|(x''))  WHEN ((0.3281805112947407) NOT BETWEEN ('1976026957') AND (0.9197167026386021)) THEN (((((((('')AND('0.9759843703852076')))AND(0x4e657492)))AND(0.4839491230779004)))AND(NULL)) WHEN CASE NULL  WHEN 'jiomb?U' THEN '-317258790' END THEN ('-597641550' IN ()) WHEN NULL THEN NULL ELSE CASE x'ba20'  WHEN 944848674 THEN '' END END); -- 0ms;
INSERT OR REPLACE INTO t0(c2) VALUES ('-597641550'), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('m', x'd972', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c2) VALUES (0.2646085251648682, 0.7439391367531254, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(0.04497630634155381) WHERE '905942568'; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 807307221); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('p)c', NULL, 'TK'), (0.6655340946057827, x'a5b7', 2013812612), ('', NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (4.28403103E8), ('428403103'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=905942568,4');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32659'); -- 4ms;
INSERT OR ROLLBACK INTO t0 VALUES ('', '2048568006', '3'''), (NULL, x'', '-750802895'), (0.5118042415139906, 9.44848674E8, '-2088796305'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1) VALUES (x'1550e209', 0.7270418280003154), (0Xffffffff85278ee1, x''), ('-597641550', '942529877'); -- 0ms;
ANALYZE; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-750802895'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x''), (0.10786946895565752), ('P^87zc'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-317258790,12');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0xfffffffffab32689, '428403103'); -- 1ms;
UPDATE OR IGNORE t0 SET c0=NULL; -- 0ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE ON t0 BEGIN DELETE FROM t0 WHERE (NOT (LOWER(t0.c2)));DELETE FROM t0;END; -- 0ms;
ANALYZE main; -- 0ms;
ANALYZE vt0; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT OR ABORT INTO t0(c1, c0) VALUES ('-2061005087', NULL), ('1冐KXF', 9.44848674E8), (NULL, '6D'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 16ms;
INSERT OR FAIL INTO vt0 VALUES (-1320542361); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE t0 SET c1=NULL WHERE ((((t0.c0) IS FALSE)) BETWEEN (t0.c0) AND (t0.c0 COLLATE BINARY)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
UPDATE OR ROLLBACK t0 SET (c0)=('L#') WHERE (((t0.c0)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((t0.c2))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19483'); -- 0ms;
UPDATE OR REPLACE vt0 SET c0='!%UN ' WHERE (- (((vt0.c0) IS TRUE))); -- 1ms;
ANALYZE; -- 0ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 228418136);\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1) VALUES (NULL, '-2088796305'), (0Xc7637a4, NULL), (0.7439391367531254, 0x25ef8305); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
END; -- 0ms;
DROP INDEX "i13"; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (0.9886090712392449), ('2013812612'), ('-88922487'), (NULL), ('1976026957'); -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.499133798688309); -- 4ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c1 TO c69; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 782076233); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x''; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '36576'); -- 0ms;
CREATE INDEX IF NOT EXISTS i32 ON t0((NOT (((c69) BETWEEN (c69) AND (c0)))) DESC,(CASE WHEN c69 THEN c2 ELSE c2 END IN ()) COLLATE BINARY ASC,CAST(NULL AS REAL)) WHERE c2; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.wal_autocheckpoint = -2741603880120299481; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (CASE WHEN CASE WHEN NULL THEN x'' END THEN ((x'6e95')|(NULL)) WHEN CASE WHEN x'01e3fa29' THEN '544564133' WHEN NULL THEN NULL WHEN NULL THEN x'4f04' END THEN (- (0.09639801732062092)) WHEN CAST(0.40041793068368003 AS REAL) THEN ((((0.6927789174055649)AND(x'')))AND(NULL)) END); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((('1657976134')AND(t0.c69)))OR(vt0.c0))))<=((((vt0.c0)-(v0.c0)))))) ORDER BY (((((((t0.c0)OR(t0.c2)))AND(t0.c0)), vt0.c0, vt0.c0))!=(((+ (-870580406)), ((v0.c0)*(v0.c0)), (((vt0.c0))<((0.8194191339783186)))))) DESC  NULLS FIRST, CASE ((((((((t0.c2)OR(t0.c0)))OR('-597641550')))AND(v0.c0)))AND(t0.c2))  WHEN ((t0.c69)&(t0.c69)) THEN HEX(9.44848674E8) WHEN v0.c0 COLLATE BINARY THEN ((t0.c0) IS FALSE) WHEN (~ (vt0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))AND(t0.c69)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((('1657976134')AND(t0.c69)))OR(vt0.c0))))<=((((vt0.c0)-(v0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((((t0.c0)OR(t0.c2)))AND(t0.c0)), vt0.c0, vt0.c0))!=(((+ (-870580406)), ((v0.c0)*(v0.c0)), (((vt0.c0))<((0.8194191339783186)))))) DESC  NULLS FIRST, CASE ((((((((t0.c2)OR(t0.c0)))OR('-597641550')))AND(v0.c0)))AND(t0.c2))  WHEN ((t0.c69)&(t0.c69)) THEN HEX(9.44848674E8) WHEN v0.c0 COLLATE BINARY THEN ((t0.c0) IS FALSE) WHEN (~ (vt0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))AND(t0.c69)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((('1657976134')AND(t0.c69)))OR(vt0.c0))))<=((((vt0.c0)-(v0.c0)))))) ORDER BY (((((((t0.c0)OR(t0.c2)))AND(t0.c0)), vt0.c0, vt0.c0))!=(((+ (-870580406)), ((v0.c0)*(v0.c0)), (((vt0.c0))<((0.8194191339783186)))))) DESC  NULLS FIRST, CASE ((((((((t0.c2)OR(t0.c0)))OR('-597641550')))AND(v0.c0)))AND(t0.c2))  WHEN ((t0.c69)&(t0.c69)) THEN HEX(9.44848674E8) WHEN v0.c0 COLLATE BINARY THEN ((t0.c0) IS FALSE) WHEN (~ (vt0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))AND(t0.c69)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((('1657976134')AND(t0.c69)))OR(vt0.c0))))<=((((vt0.c0)-(v0.c0)))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (((((((t0.c0)OR(t0.c2)))AND(t0.c0)), vt0.c0, vt0.c0))!=(((+ (-870580406)), ((v0.c0)*(v0.c0)), (((vt0.c0))<((0.8194191339783186)))))) DESC  NULLS FIRST, CASE ((((((((t0.c2)OR(t0.c0)))OR('-597641550')))AND(v0.c0)))AND(t0.c2))  WHEN ((t0.c69)&(t0.c69)) THEN HEX(9.44848674E8) WHEN v0.c0 COLLATE BINARY THEN ((t0.c0) IS FALSE) WHEN (~ (vt0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))AND(t0.c69)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((('1657976134')AND(t0.c69)))OR(vt0.c0))))<=((((vt0.c0)-(v0.c0)))))) ORDER BY (((((((t0.c0)OR(t0.c2)))AND(t0.c0)), vt0.c0, vt0.c0))!=(((+ (-870580406)), ((v0.c0)*(v0.c0)), (((vt0.c0))<((0.8194191339783186)))))) DESC  NULLS FIRST, CASE ((((((((t0.c2)OR(t0.c0)))OR('-597641550')))AND(v0.c0)))AND(t0.c2))  WHEN ((t0.c69)&(t0.c69)) THEN HEX(9.44848674E8) WHEN v0.c0 COLLATE BINARY THEN ((t0.c0) IS FALSE) WHEN (~ (vt0.c0)) THEN ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(t0.c2)))AND(t0.c69)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c69) ORDER BY (('-1650563400') BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE, ((t0.c2 COLLATE NOCASE)AND((('0.4839491230779004') BETWEEN (t0.c69) AND (t0.c69))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c69) IS TRUE)  as count FROM t0 ORDER BY (('-1650563400') BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE, ((t0.c2 COLLATE NOCASE)AND((('0.4839491230779004') BETWEEN (t0.c69) AND (t0.c69))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c69) ORDER BY (('-1650563400') BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE, ((t0.c2 COLLATE NOCASE)AND((('0.4839491230779004') BETWEEN (t0.c69) AND (t0.c69))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c69) IS TRUE)  as count FROM t0 ORDER BY (('-1650563400') BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE, ((t0.c2 COLLATE NOCASE)AND((('0.4839491230779004') BETWEEN (t0.c69) AND (t0.c69))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c69) ORDER BY (('-1650563400') BETWEEN (t0.c0) AND (x'')) COLLATE NOCASE, ((t0.c2 COLLATE NOCASE)AND((('0.4839491230779004') BETWEEN (t0.c69) AND (t0.c69))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) ELSE (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0) NOTNULL)  WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) THEN (((vt0.c0))<>((vt0.c0))) ELSE (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c2) NOTNULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((t0.c2) NOTNULL) IN ()));
SELECT * FROM t0 WHERE (((((~ (t0.c0))))>((((t0.c2) NOT BETWEEN (NULL) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c0))))>((((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((~ (t0.c0))))>((((t0.c2) NOT BETWEEN (NULL) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (t0.c0))))>((((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((~ (t0.c0))))>((((t0.c2) NOT BETWEEN (NULL) AND (t0.c2))))));
SELECT ALL * FROM t0, v0, vt0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CASE t0.c69  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (LOWER(DISTINCT 0.1768700079003691))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (CASE t0.c69  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (LOWER(DISTINCT 0.1768700079003691)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CASE t0.c69  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (LOWER(DISTINCT 0.1768700079003691))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (CASE t0.c69  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (LOWER(DISTINCT 0.1768700079003691)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (CASE t0.c69  WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END) AND (LOWER(DISTINCT 0.1768700079003691))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((t0.c2)GLOB(854645809)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)GLOB(854645809)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((t0.c2)GLOB(854645809)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)GLOB(854645809)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN v0);
SELECT ALL * FROM vt0, t0 NATURAL JOIN v0 WHERE (((t0.c2)GLOB(854645809)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)|(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)|(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)|(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)|(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.09639801732062092 END)>(v0.c0 COLLATE NOCASE)) DESC, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE)  NULLS FIRST, ABS(DISTINCT (- ('p)c'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.09639801732062092 END)>(v0.c0 COLLATE NOCASE)) DESC, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE)  NULLS FIRST, ABS(DISTINCT (- ('p)c'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.09639801732062092 END)>(v0.c0 COLLATE NOCASE)) DESC, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE)  NULLS FIRST, ABS(DISTINCT (- ('p)c'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.09639801732062092 END)>(v0.c0 COLLATE NOCASE)) DESC, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE)  NULLS FIRST, ABS(DISTINCT (- ('p)c'))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE)) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE 0.09639801732062092 END)>(v0.c0 COLLATE NOCASE)) DESC, (((v0.c0 IN (v0.c0, v0.c0))) IS FALSE)  NULLS FIRST, ABS(DISTINCT (- ('p)c'))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (json(CAST(t0.c69 AS NUMERIC))) ORDER BY 0.539924355805175 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(CAST(t0.c69 AS NUMERIC))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY 0.539924355805175 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (json(CAST(t0.c69 AS NUMERIC))) ORDER BY 0.539924355805175 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json(CAST(t0.c69 AS NUMERIC))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0 ORDER BY 0.539924355805175 DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (json(CAST(t0.c69 AS NUMERIC))) ORDER BY 0.539924355805175 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (IFNULL(CAST(v0.c0 AS INTEGER), ((t0.c2) BETWEEN (t0.c69) AND (t0.c0)))) ORDER BY ((SUBSTR(0.499133798688309, NULL))OR(((t0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(v0.c0 AS INTEGER), ((t0.c2) BETWEEN (t0.c69) AND (t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((SUBSTR(0.499133798688309, NULL))OR(((t0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (IFNULL(CAST(v0.c0 AS INTEGER), ((t0.c2) BETWEEN (t0.c69) AND (t0.c0)))) ORDER BY ((SUBSTR(0.499133798688309, NULL))OR(((t0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(v0.c0 AS INTEGER), ((t0.c2) BETWEEN (t0.c69) AND (t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((SUBSTR(0.499133798688309, NULL))OR(((t0.c0) ISNULL)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (IFNULL(CAST(v0.c0 AS INTEGER), ((t0.c2) BETWEEN (t0.c69) AND (t0.c0)))) ORDER BY ((SUBSTR(0.499133798688309, NULL))OR(((t0.c0) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INDEXED BY i32 WHERE ((~ (((v0.c0)GLOB(v0.c0))))) ORDER BY (~ (((v0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i32 ORDER BY (~ (((v0.c0) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i32 WHERE ((~ (((v0.c0)GLOB(v0.c0))))) ORDER BY (~ (((v0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 INDEXED BY i32 ORDER BY (~ (((v0.c0) NOTNULL))) DESC);
SELECT COUNT(*) FROM t0 WHERE ((NOT ((('%j') ISNULL)))) ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((t0.c2)!=(0.9648431691171915)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT ((('%j') ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((t0.c2)<>(0.9648431691171915)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE ((NOT ((('%j') ISNULL)))) ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((t0.c2)!=(0.9648431691171915)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT ((('%j') ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((t0.c2)<>(0.9648431691171915)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE ((NOT ((('%j') ISNULL)))) ORDER BY ((((t0.c0)OR(t0.c0))) NOTNULL) DESC  NULLS LAST, CAST(((t0.c2)!=(0.9648431691171915)) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS TEXT)) IS FALSE)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS TEXT)) IS FALSE));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2)))<>(((t0.c69)<<(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2)))<>(((t0.c69)<<(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2)))<>(((t0.c69)<<(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (((~ (t0.c2)))<>(((t0.c69)<<(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (((~ (t0.c2)))<>(((t0.c69)<<(t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(x'' COLLATE RTRIM))) ORDER BY (((v0.c0) IS FALSE) IN (v0.c0, ((v0.c0)LIKE(v0.c0)))), ((CAST(v0.c0 AS NUMERIC))<(((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) IS FALSE) IN (v0.c0, ((v0.c0)LIKE(v0.c0)))), ((CAST(v0.c0 AS NUMERIC))<(((v0.c0)!=(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(x'' COLLATE RTRIM))) ORDER BY (((v0.c0) IS FALSE) IN (v0.c0, ((v0.c0)LIKE(v0.c0)))), ((CAST(v0.c0 AS NUMERIC))<(((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(x'' COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) IS FALSE) IN (v0.c0, ((v0.c0)LIKE(v0.c0)))), ((CAST(v0.c0 AS NUMERIC))<(((v0.c0)!=(v0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))*(x'' COLLATE RTRIM))) ORDER BY (((v0.c0) IS FALSE) IN (v0.c0, ((v0.c0)LIKE(v0.c0)))), ((CAST(v0.c0 AS NUMERIC))<(((v0.c0)!=(v0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((t0.c69 IN (t0.c0))))) ORDER BY (~ (NULL)) ASC, ((((t0.c2))<((t0.c69))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c69 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (NULL)) ASC, ((((t0.c2))<((t0.c69))) IN ()) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((t0.c69 IN (t0.c0))))) ORDER BY (~ (NULL)) ASC, ((((t0.c2))<((t0.c69))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((t0.c69 IN (t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (NULL)) ASC, ((((t0.c2))<((t0.c69))) IN ()) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE ((~ ((t0.c69 IN (t0.c0))))) ORDER BY (~ (NULL)) ASC, ((((t0.c2))<((t0.c69))) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c69) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c69) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69) NOTNULL)) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((t0.c69) NOTNULL));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c0 COLLATE NOCASE IN (t0.c0)));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN (t0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c0 COLLATE NOCASE IN (t0.c0)));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN (t0.c0))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((t0.c0 COLLATE NOCASE IN (t0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(IFNULL(DISTINCT v0.c0, v0.c0), '')) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(IFNULL(DISTINCT v0.c0, v0.c0), '')) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(IFNULL(DISTINCT v0.c0, v0.c0), '')) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array(IFNULL(DISTINCT v0.c0, v0.c0), '')) IS TRUE)  as count FROM v0 ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array(IFNULL(DISTINCT v0.c0, v0.c0), '')) ORDER BY CAST((+ (v0.c0)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN ()))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN ()))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NOT ((vt0.c0 IN ()))) WHERE (x'');
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN (('()')<('2048568006')) ELSE ((v0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN (('()')<('2048568006')) ELSE ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN (('()')<('2048568006')) ELSE ((v0.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN (('()')<('2048568006')) ELSE ((v0.c0)<<(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (x'') AND (v0.c0)) THEN (('()')<('2048568006')) ELSE ((v0.c0)<<(v0.c0)) END);
SELECT * FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC);
SELECT * FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC);
SELECT * FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC;
SELECT * FROM t0, v0 WHERE (((((CAST(v0.c0 AS BLOB))AND((t0.c2 IN ()))))AND(CAST(t0.c69 AS BLOB)))) ORDER BY ((t0.c2 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND((t0.c2 IN ()))))AND(CAST(t0.c69 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c2 COLLATE BINARY) IS TRUE) ASC);
SELECT * FROM t0, v0 WHERE (((((CAST(v0.c0 AS BLOB))AND((t0.c2 IN ()))))AND(CAST(t0.c69 AS BLOB)))) ORDER BY ((t0.c2 COLLATE BINARY) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND((t0.c2 IN ()))))AND(CAST(t0.c69 AS BLOB)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((t0.c2 COLLATE BINARY) IS TRUE) ASC);
SELECT * FROM t0, v0 WHERE (((((CAST(v0.c0 AS BLOB))AND((t0.c2 IN ()))))AND(CAST(t0.c69 AS BLOB)))) ORDER BY ((t0.c2 COLLATE BINARY) IS TRUE) ASC;
SELECT * FROM t0, v0, vt0 WHERE (((NULLIF(DISTINCT t0.c0, ''))GLOB(0.34636917805085243))) ORDER BY ((((t0.c0)-(v0.c0)))-((t0.c69 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c0, ''))GLOB(0.34636917805085243))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0)-(v0.c0)))-((t0.c69 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((NULLIF(DISTINCT t0.c0, ''))GLOB(0.34636917805085243))) ORDER BY ((((t0.c0)-(v0.c0)))-((t0.c69 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t0.c0, ''))GLOB(0.34636917805085243))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0)-(v0.c0)))-((t0.c69 IN ()))) DESC  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((NULLIF(DISTINCT t0.c0, ''))GLOB(0.34636917805085243))) ORDER BY ((((t0.c0)-(v0.c0)))-((t0.c69 IN ()))) DESC  NULLS LAST;
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c2)) BETWEEN ((0xffffffff99860b02)) AND (((((t0.c69))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((0xffffffff99860b02)) AND (((((t0.c69))>=((vt0.c0))))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c2)) BETWEEN ((0xffffffff99860b02)) AND (((((t0.c69))>=((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) BETWEEN ((0xffffffff99860b02)) AND (((((t0.c69))>=((vt0.c0))))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((((t0.c2)) BETWEEN ((0xffffffff99860b02)) AND (((((t0.c69))>=((vt0.c0)))))));
SELECT ALL * FROM vt0 WHERE (((((4.111958173996788E-4)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((4.111958173996788E-4)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((4.111958173996788E-4)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((4.111958173996788E-4)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (((((4.111958173996788E-4)AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY (vt0.c0 IN (vt0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((NOT (t0.c2))) BETWEEN ((t0.c69 IN (t0.c69))) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2))) BETWEEN ((t0.c69 IN (t0.c69))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((NOT (t0.c2))) BETWEEN ((t0.c69 IN (t0.c69))) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c2))) BETWEEN ((t0.c69 IN (t0.c69))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE ((((NOT (t0.c2))) BETWEEN ((t0.c69 IN (t0.c69))) AND (((v0.c0)<<(v0.c0)))));
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)IS NOT(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(v0.c0))) ISNULL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)IS NOT(v0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)IS NOT(v0.c0))) ISNULL)) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE (((((t0.c0)IS NOT(v0.c0))) ISNULL));
SELECT * FROM t0, vt0 CROSS JOIN v0 ON NULL WHERE ('411747072');
SELECT SUM(count) FROM (SELECT (('411747072') IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON NULL);
SELECT * FROM t0, vt0 CROSS JOIN v0 ON NULL WHERE ('411747072');
SELECT SUM(count) FROM (SELECT (('411747072') IS TRUE)  as count FROM t0, vt0 CROSS JOIN v0 ON NULL);
SELECT * FROM t0, vt0 CROSS JOIN v0 ON NULL WHERE ('411747072');
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (UNLIKELY(vt0.c0)) AND ('-1948518078')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (UNLIKELY(vt0.c0)) AND ('-1948518078'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (UNLIKELY(vt0.c0)) AND ('-1948518078')));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (UNLIKELY(vt0.c0)) AND ('-1948518078'))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0, vt0.c0))) BETWEEN (UNLIKELY(vt0.c0)) AND ('-1948518078')));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c2 THEN COALESCE(t0.c0, t0.c0) ELSE LENGTH(t0.c2) END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 THEN COALESCE(t0.c0, t0.c0) ELSE LENGTH(t0.c2) END) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c2 THEN COALESCE(t0.c0, t0.c0) ELSE LENGTH(t0.c2) END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 THEN COALESCE(t0.c0, t0.c0) ELSE LENGTH(t0.c2) END) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c0 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN t0.c2 THEN COALESCE(t0.c0, t0.c0) ELSE LENGTH(t0.c2) END) ORDER BY (CAST(t0.c0 AS REAL) IN ());
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0)/(t0.c69)))AND('-585299228')))AND(((t0.c69)%(t0.c2)))))AND((+ (t0.c2)))))OR(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((- (t0.c2)) AS NUMERIC) ASC, ((t0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)/(t0.c69)))AND('-585299228')))AND(((t0.c69)%(t0.c2)))))AND((+ (t0.c2)))))OR(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((- (t0.c2)) AS NUMERIC) ASC, ((t0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0)/(t0.c69)))AND('-585299228')))AND(((t0.c69)%(t0.c2)))))AND((+ (t0.c2)))))OR(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((- (t0.c2)) AS NUMERIC) ASC, ((t0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c0)/(t0.c69)))AND('-585299228')))AND(((t0.c69)%(t0.c2)))))AND((+ (t0.c2)))))OR(CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((- (t0.c2)) AS NUMERIC) ASC, ((t0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((((((((((t0.c0)/(t0.c69)))AND('-585299228')))AND(((t0.c69)%(t0.c2)))))AND((+ (t0.c2)))))OR(CAST(t0.c0 AS INTEGER)))) ORDER BY CAST((- (t0.c2)) AS NUMERIC) ASC, ((t0.c2 COLLATE RTRIM) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND ('996040358')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) BETWEEN (vt0.c0) AND ('996040358'))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND ('996040358')))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) BETWEEN (vt0.c0) AND ('996040358'))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c0) AND ('996040358')))));
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2)) NOT BETWEEN ((CAST(t0.c69 AS REAL))) AND ((((t0.c2)-(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) NOT BETWEEN ((CAST(t0.c69 AS REAL))) AND ((((t0.c2)-(t0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2)) NOT BETWEEN ((CAST(t0.c69 AS REAL))) AND ((((t0.c2)-(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) NOT BETWEEN ((CAST(t0.c69 AS REAL))) AND ((((t0.c2)-(t0.c0))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((t0.c2)) NOT BETWEEN ((CAST(t0.c69 AS REAL))) AND ((((t0.c2)-(t0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))<<(CAST(0.1335299116219516 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))<<(CAST(0.1335299116219516 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))<<(CAST(0.1335299116219516 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((UNLIKELY(v0.c0))<<(CAST(0.1335299116219516 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((UNLIKELY(v0.c0))<<(CAST(0.1335299116219516 AS REAL))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN (vt0.c0 IN ()) END);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=('0.9886090712392449'))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=('0.9886090712392449'))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=('0.9886090712392449'))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=('0.9886090712392449'))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 ASC);
SELECT ALL * FROM vt0, t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))>=('0.9886090712392449'))) ORDER BY t0.c0 ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (v0.c0 COLLATE NOCASE))  NULLS LAST, CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE 0Xffffffffc96eed71 END COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))>(vt0.c0)), CAST(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (v0.c0 COLLATE NOCASE))  NULLS LAST, CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE 0Xffffffffc96eed71 END COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))>(vt0.c0)), CAST(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (v0.c0 COLLATE NOCASE))  NULLS LAST, CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE 0Xffffffffc96eed71 END COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))>(vt0.c0)), CAST(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (v0.c0 COLLATE NOCASE))  NULLS LAST, CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE 0Xffffffffc96eed71 END COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))>(vt0.c0)), CAST(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((NOT (vt0.c0)))OR(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(CAST(vt0.c0 AS BLOB)))) ORDER BY (- (v0.c0 COLLATE NOCASE))  NULLS LAST, CASE vt0.c0  WHEN v0.c0 THEN NULL WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE 0Xffffffffc96eed71 END COLLATE RTRIM ASC  NULLS LAST, ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))>(vt0.c0)), CAST(((((vt0.c0)OR(vt0.c0)))AND(v0.c0)) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((+ (228418136)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (228418136)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((+ (228418136)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((+ (228418136)) AS BLOB)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST((+ (228418136)) AS BLOB));
SELECT COUNT(*) FROM t0, vt0 WHERE (rtreenode(((t0.c69)%(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) ORDER BY ((((((((((t0.c0)OR(t0.c69)))AND(vt0.c0)))AND(t0.c69)))AND(t0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t0.c0)LIKE('f{[]')))) ASC  NULLS LAST, (((t0.c0))<=((t0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c69)%(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c0)OR(t0.c69)))AND(vt0.c0)))AND(t0.c69)))AND(t0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t0.c0)LIKE('f{[]')))) ASC  NULLS LAST, (((t0.c0))<=((t0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (rtreenode(((t0.c69)%(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) ORDER BY ((((((((((t0.c0)OR(t0.c69)))AND(vt0.c0)))AND(t0.c69)))AND(t0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t0.c0)LIKE('f{[]')))) ASC  NULLS LAST, (((t0.c0))<=((t0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rtreenode(((t0.c69)%(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((t0.c0)OR(t0.c69)))AND(vt0.c0)))AND(t0.c69)))AND(t0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t0.c0)LIKE('f{[]')))) ASC  NULLS LAST, (((t0.c0))<=((t0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (rtreenode(((t0.c69)%(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END)) ORDER BY ((((((((((t0.c0)OR(t0.c69)))AND(vt0.c0)))AND(t0.c69)))AND(t0.c0))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((t0.c0)LIKE('f{[]')))) ASC  NULLS LAST, (((t0.c0))<=((t0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c69)) NOT BETWEEN ((t0.c69 COLLATE BINARY, ((((t0.c2)AND(x'')))OR(t0.c69)), (t0.c0 IN ()))) AND ((DATETIME(t0.c0, t0.c2, NULL), CAST(t0.c2 AS INTEGER), ((t0.c69)<>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c69)) NOT BETWEEN ((t0.c69 COLLATE BINARY, ((((t0.c2)AND(x'')))OR(t0.c69)), (t0.c0 IN ()))) AND ((DATETIME(t0.c0, t0.c2, NULL), CAST(t0.c2 AS INTEGER), ((t0.c69)!=(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c69)) NOT BETWEEN ((t0.c69 COLLATE BINARY, ((((t0.c2)AND(x'')))OR(t0.c69)), (t0.c0 IN ()))) AND ((DATETIME(t0.c0, t0.c2, NULL), CAST(t0.c2 AS INTEGER), ((t0.c69)<>(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, t0.c0, t0.c69)) NOT BETWEEN ((t0.c69 COLLATE BINARY, ((((t0.c2)AND(x'')))OR(t0.c69)), (t0.c0 IN ()))) AND ((DATETIME(t0.c0, t0.c2, NULL), CAST(t0.c2 AS INTEGER), ((t0.c69)!=(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0, t0.c0, t0.c69)) NOT BETWEEN ((t0.c69 COLLATE BINARY, ((((t0.c2)AND(x'')))OR(t0.c69)), (t0.c0 IN ()))) AND ((DATETIME(t0.c0, t0.c2, NULL), CAST(t0.c2 AS INTEGER), ((t0.c69)<>(vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((COALESCE(DISTINCT v0.c0, v0.c0)) NOT BETWEEN (MIN(v0.c0, v0.c0)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c0, v0.c0)) NOT BETWEEN (MIN(v0.c0, v0.c0)) AND ((NULL IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((COALESCE(DISTINCT v0.c0, v0.c0)) NOT BETWEEN (MIN(v0.c0, v0.c0)) AND ((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT v0.c0, v0.c0)) NOT BETWEEN (MIN(v0.c0, v0.c0)) AND ((NULL IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((COALESCE(DISTINCT v0.c0, v0.c0)) NOT BETWEEN (MIN(v0.c0, v0.c0)) AND ((NULL IN ()))));
SELECT * FROM v0, vt0, t0 WHERE ((- (NULLIF(vt0.c0, 0.8153471302363283)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), v0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)) AND (((- (t0.c0)), CASE WHEN t0.c69 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c69 END, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(vt0.c0, 0.8153471302363283)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), v0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)) AND (((- (t0.c0)), CASE WHEN t0.c69 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c69 END, v0.c0)))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE ((- (NULLIF(vt0.c0, 0.8153471302363283)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), v0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)) AND (((- (t0.c0)), CASE WHEN t0.c69 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c69 END, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (NULLIF(vt0.c0, 0.8153471302363283)))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), v0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)) AND (((- (t0.c0)), CASE WHEN t0.c69 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c69 END, v0.c0)))  NULLS FIRST);
SELECT * FROM v0, vt0, t0 WHERE ((- (NULLIF(vt0.c0, 0.8153471302363283)))) ORDER BY (((t0.c0, v0.c0, v0.c0)) BETWEEN (((((t0.c0))==((t0.c0))), v0.c0 COLLATE RTRIM, vt0.c0 COLLATE RTRIM)) AND (((- (t0.c0)), CASE WHEN t0.c69 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c69 END, v0.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-5.85299228E8) ORDER BY (NOT ((((t0.c0, 0.3741812470019831, t0.c69)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c2)))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT t0.c2))) AND ((((t0.c69)<=(t0.c69)))));
SELECT SUM(count) FROM (SELECT ((-5.85299228E8) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (NOT ((((t0.c0, 0.3741812470019831, t0.c69)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c2)))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT t0.c2))) AND ((((t0.c69)<=(t0.c69))))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-5.85299228E8) ORDER BY (NOT ((((t0.c0, 0.3741812470019831, t0.c69)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c2)))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT t0.c2))) AND ((((t0.c69)<=(t0.c69)))));
SELECT SUM(count) FROM (SELECT ((-5.85299228E8) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (NOT ((((t0.c0, 0.3741812470019831, t0.c69)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c2)))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT t0.c2))) AND ((((t0.c69)<=(t0.c69))))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (-5.85299228E8) ORDER BY (NOT ((((t0.c0, 0.3741812470019831, t0.c69)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c2)))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((ABS(DISTINCT t0.c2))) AND ((((t0.c69)<=(t0.c69)))));
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((t0.c2)==(vt0.c0)))AND(((t0.c69)LIKE(t0.c69)))))OR((t0.c2 IN ()))) WHERE (((CASE t0.c0  WHEN 0.11760015748559993 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 WHEN 0X38513f22 THEN t0.c0 ELSE vt0.c0 END)*(CASE WHEN t0.c69 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY (((v0.c0)<(v0.c0)) IN ()), 0.12597973530247197  NULLS LAST, ((((t0.c69) NOTNULL))-(((t0.c2)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN 0.11760015748559993 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 WHEN 0x38513f22 THEN t0.c0 ELSE vt0.c0 END)*(CASE WHEN t0.c69 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((t0.c2)=(vt0.c0)))AND(((t0.c69)LIKE(t0.c69)))))OR((t0.c2 IN ()))) ORDER BY (((v0.c0)<(v0.c0)) IN ()), 0.12597973530247197  NULLS LAST, ((((t0.c69) NOTNULL))-(((t0.c2)*(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((t0.c2)==(vt0.c0)))AND(((t0.c69)LIKE(t0.c69)))))OR((t0.c2 IN ()))) WHERE (((CASE t0.c0  WHEN 0.11760015748559993 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 WHEN 0X38513f22 THEN t0.c0 ELSE vt0.c0 END)*(CASE WHEN t0.c69 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY (((v0.c0)<(v0.c0)) IN ()), 0.12597973530247197  NULLS LAST, ((((t0.c69) NOTNULL))-(((t0.c2)*(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN 0.11760015748559993 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 WHEN 0x38513f22 THEN t0.c0 ELSE vt0.c0 END)*(CASE WHEN t0.c69 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((t0.c2)=(vt0.c0)))AND(((t0.c69)LIKE(t0.c69)))))OR((t0.c2 IN ()))) ORDER BY (((v0.c0)<(v0.c0)) IN ()), 0.12597973530247197  NULLS LAST, ((((t0.c69) NOTNULL))-(((t0.c2)*(vt0.c0)))) ASC);
SELECT ALL * FROM vt0, t0 RIGHT OUTER JOIN v0 ON ((((((t0.c2)==(vt0.c0)))AND(((t0.c69)LIKE(t0.c69)))))OR((t0.c2 IN ()))) WHERE (((CASE t0.c0  WHEN 0.11760015748559993 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 WHEN 0X38513f22 THEN t0.c0 ELSE vt0.c0 END)*(CASE WHEN t0.c69 THEN t0.c0 ELSE vt0.c0 END))) ORDER BY (((v0.c0)<(v0.c0)) IN ()), 0.12597973530247197  NULLS LAST, ((((t0.c69) NOTNULL))-(((t0.c2)*(vt0.c0)))) ASC;
SELECT ALL * FROM v0, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ((x'' IN ())))) ORDER BY 0.6740888321291403;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ((x'' IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.6740888321291403);
SELECT ALL * FROM v0, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ((x'' IN ())))) ORDER BY 0.6740888321291403;
SELECT SUM(count) FROM (SELECT (((CAST(vt0.c0 AS INTEGER) IN ((x'' IN ())))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY 0.6740888321291403);
SELECT ALL * FROM v0, t0, vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN ((x'' IN ())))) ORDER BY 0.6740888321291403;
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(0x3b5e5ea6 AS NUMERIC) END) ORDER BY ((((v0.c0)AND(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(0X3b5e5ea6 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC);
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(0x3b5e5ea6 AS NUMERIC) END) ORDER BY ((((v0.c0)AND(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(0X3b5e5ea6 AS NUMERIC) END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC);
SELECT * FROM v0 WHERE (CASE WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END THEN v0.c0 ELSE CAST(0x3b5e5ea6 AS NUMERIC) END) ORDER BY ((((v0.c0)AND(v0.c0)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((DATETIME(v0.c0, vt0.c0, v0.c0))*(((v0.c0)<>(vt0.c0))))) ORDER BY (('''}') NOT NULL) DESC  NULLS LAST, (((('2048568006')OR(((vt0.c0)|(v0.c0)))))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(v0.c0, vt0.c0, v0.c0))*(((v0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('''}') NOT NULL) DESC  NULLS LAST, (((('2048568006')OR(((vt0.c0)|(v0.c0)))))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((DATETIME(v0.c0, vt0.c0, v0.c0))*(((v0.c0)<>(vt0.c0))))) ORDER BY (('''}') NOT NULL) DESC  NULLS LAST, (((('2048568006')OR(((vt0.c0)|(v0.c0)))))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(v0.c0, vt0.c0, v0.c0))*(((v0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('''}') NOT NULL) DESC  NULLS LAST, (((('2048568006')OR(((vt0.c0)|(v0.c0)))))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((DATETIME(v0.c0, vt0.c0, v0.c0))*(((v0.c0)<>(vt0.c0))))) ORDER BY (('''}') NOT NULL) DESC  NULLS LAST, (((('2048568006')OR(((vt0.c0)|(v0.c0)))))AND(((vt0.c0) IS TRUE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((~ (t0.c2)))+(((vt0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))+(((vt0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((~ (t0.c2)))+(((vt0.c0)IS(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))+(((vt0.c0)IS(v0.c0))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((~ (t0.c2)))+(((vt0.c0)IS(v0.c0)))));
SELECT * FROM vt0, t0, v0 WHERE (((((v0.c0) ISNULL))IS NOT((t0.c69 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))IS NOT((t0.c69 IN (t0.c2))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((v0.c0) ISNULL))IS NOT((t0.c69 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) ISNULL))IS NOT((t0.c69 IN (t0.c2))))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (((((v0.c0) ISNULL))IS NOT((t0.c69 IN (t0.c2)))));
SELECT ALL * FROM v0, vt0 INNER JOIN t0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((0.2347559074601936 IN ()));
SELECT SUM(count) FROM (SELECT (((0.2347559074601936 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM v0, vt0 INNER JOIN t0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((0.2347559074601936 IN ()));
SELECT SUM(count) FROM (SELECT (((0.2347559074601936 IN ())) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM v0, vt0 INNER JOIN t0 ON (((t0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) WHERE ((0.2347559074601936 IN ()));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_array(v0.c0, 0.4322653015688276) ELSE ((v0.c0) NOT BETWEEN (0.20565308169328422) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN json_array(v0.c0, 0.4322653015688276) ELSE ((v0.c0) NOT BETWEEN (0.20565308169328422) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_array(v0.c0, 0.4322653015688276) ELSE ((v0.c0) NOT BETWEEN (0.20565308169328422) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN json_array(v0.c0, 0.4322653015688276) ELSE ((v0.c0) NOT BETWEEN (0.20565308169328422) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 THEN json_array(v0.c0, 0.4322653015688276) ELSE ((v0.c0) NOT BETWEEN (0.20565308169328422) AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c2 END)|((v0.c0 IN (t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN t0.c2 END)|((v0.c0 IN (t0.c69))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c2 END)|((v0.c0 IN (t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN t0.c2 END)|((v0.c0 IN (t0.c69))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN t0.c2 END)|((v0.c0 IN (t0.c69)))));
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((CAST(t0.c2 AS TEXT)) IS TRUE));
SELECT * FROM v0, t0 WHERE (((((((((((((t0.c2)OR('Z')))AND(t0.c69)))AND(t0.c0)))AND(t0.c0)))AND('-1912846144')))OR(((t0.c2) BETWEEN (v0.c0) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR('Z')))AND(t0.c69)))AND(t0.c0)))AND(t0.c0)))AND('-1912846144')))OR(((t0.c2) BETWEEN (v0.c0) AND (t0.c69))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((((((t0.c2)OR('Z')))AND(t0.c69)))AND(t0.c0)))AND(t0.c0)))AND('-1912846144')))OR(((t0.c2) BETWEEN (v0.c0) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR('Z')))AND(t0.c69)))AND(t0.c0)))AND(t0.c0)))AND('-1912846144')))OR(((t0.c2) BETWEEN (v0.c0) AND (t0.c69))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((((((t0.c2)OR('Z')))AND(t0.c69)))AND(t0.c0)))AND(t0.c0)))AND('-1912846144')))OR(((t0.c2) BETWEEN (v0.c0) AND (t0.c69)))));
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))||(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))||(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))||(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))||(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))||(((v0.c0) NOT NULL))));
SELECT ALL * FROM t0 INNER JOIN v0 ON (- (((t0.c69)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY WHERE (((t0.c0)<<(v0.c0))) ORDER BY (((t0.c69 IN ()))||(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(v0.c0))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (- (((t0.c69)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY ORDER BY (((t0.c69 IN ()))||(NULL))  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN v0 ON (- (((t0.c69)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY WHERE (((t0.c0)<<(v0.c0))) ORDER BY (((t0.c69 IN ()))||(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0)<<(v0.c0))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (- (((t0.c69)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY ORDER BY (((t0.c69 IN ()))||(NULL))  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN v0 ON (- (((t0.c69)-(t0.c2)))) LEFT OUTER JOIN vt0 ON ((v0.c0) NOT BETWEEN (t0.c2) AND (vt0.c0)) COLLATE BINARY WHERE (((t0.c0)<<(v0.c0))) ORDER BY (((t0.c69 IN ()))||(NULL))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((- (CASE t0.c69  WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((CAST(t0.c2 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c69  WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CAST(t0.c2 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((- (CASE t0.c69  WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((CAST(t0.c2 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE t0.c69  WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 END))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((CAST(t0.c2 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((- (CASE t0.c69  WHEN t0.c0 THEN vt0.c0 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN t0.c2 END))) ORDER BY ((CAST(t0.c2 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)|(((t0.c69)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)|(((t0.c69)>>(t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)|(((t0.c69)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)|(((t0.c69)>>(t0.c2))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((vt0.c0 COLLATE NOCASE)|(((t0.c69)>>(t0.c2)))));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) WHERE (((((t0.c69)/(vt0.c0)))<<((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c69)/(vt0.c0)))<<((~ (t0.c2))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) WHERE (((((t0.c69)/(vt0.c0)))<<((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c69)/(vt0.c0)))<<((~ (t0.c2))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN t0 ON ((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOTNULL) WHERE (((((t0.c69)/(vt0.c0)))<<((~ (t0.c2)))));
SELECT * FROM vt0, v0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c69 THEN t0.c0 END) NOT NULL)) ORDER BY t0.c2 COLLATE BINARY DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(v0.c0))) AND (UNLIKELY(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c69 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY t0.c2 COLLATE BINARY DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(v0.c0))) AND (UNLIKELY(DISTINCT t0.c2))));
SELECT * FROM vt0, v0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c69 THEN t0.c0 END) NOT NULL)) ORDER BY t0.c2 COLLATE BINARY DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(v0.c0))) AND (UNLIKELY(DISTINCT t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c69 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY t0.c2 COLLATE BINARY DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(v0.c0))) AND (UNLIKELY(DISTINCT t0.c2))));
SELECT * FROM vt0, v0 NATURAL JOIN t0 WHERE (((CASE WHEN t0.c69 THEN t0.c0 END) NOT NULL)) ORDER BY t0.c2 COLLATE BINARY DESC  NULLS LAST, ((t0.c0 COLLATE BINARY) NOT BETWEEN (((((t0.c0)OR(t0.c0)))OR(v0.c0))) AND (UNLIKELY(DISTINCT t0.c2)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(CAST(v0.c0 AS REAL))))OR(((v0.c0)>(v0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)<(((t0.c69)IS(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<(((t0.c69)IS(t0.c69))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)<(((t0.c69)IS(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE NOCASE)<(((t0.c69)IS(t0.c69))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((t0.c0 COLLATE NOCASE)<(((t0.c69)IS(t0.c69)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((((((((t0.c69))!=((t0.c0))))AND(((t0.c0) BETWEEN (t0.c69) AND ('260166407')))))OR(((t0.c0)>(-1872728883)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER)))) ORDER BY CAST(vt0.c0 AS TEXT) DESC  NULLS FIRST, ((((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))AND(NULL)))OR(t0.c69)))AND(t0.c69))) NOT BETWEEN (((((t0.c2)AND(t0.c2)))OR(t0.c0))) AND (RTRIM(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c69))<>((t0.c0))))AND(((t0.c0) BETWEEN (t0.c69) AND ('260166407')))))OR(((t0.c0)>(-1872728883)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 ORDER BY CAST(vt0.c0 AS TEXT) DESC  NULLS FIRST, ((((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))AND(NULL)))OR(t0.c69)))AND(t0.c69))) NOT BETWEEN (((((t0.c2)AND(t0.c2)))OR(t0.c0))) AND (RTRIM(t0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((((((((t0.c69))!=((t0.c0))))AND(((t0.c0) BETWEEN (t0.c69) AND ('260166407')))))OR(((t0.c0)>(-1872728883)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER)))) ORDER BY CAST(vt0.c0 AS TEXT) DESC  NULLS FIRST, ((((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))AND(NULL)))OR(t0.c69)))AND(t0.c69))) NOT BETWEEN (((((t0.c2)AND(t0.c2)))OR(t0.c0))) AND (RTRIM(t0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c69))<>((t0.c0))))AND(((t0.c0) BETWEEN (t0.c69) AND ('260166407')))))OR(((t0.c0)>(-1872728883)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 ORDER BY CAST(vt0.c0 AS TEXT) DESC  NULLS FIRST, ((((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))AND(NULL)))OR(t0.c69)))AND(t0.c69))) NOT BETWEEN (((((t0.c2)AND(t0.c2)))OR(t0.c0))) AND (RTRIM(t0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON vt0.c0 WHERE ((((((((((((t0.c69))!=((t0.c0))))AND(((t0.c0) BETWEEN (t0.c69) AND ('260166407')))))OR(((t0.c0)>(-1872728883)))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(NULL AS INTEGER)))) ORDER BY CAST(vt0.c0 AS TEXT) DESC  NULLS FIRST, ((((((((((((((t0.c2)AND(vt0.c0)))AND(t0.c0)))OR(t0.c2)))AND(NULL)))OR(t0.c69)))AND(t0.c69))) NOT BETWEEN (((((t0.c2)AND(t0.c2)))OR(t0.c0))) AND (RTRIM(t0.c0)))  NULLS LAST;
SELECT ALL * FROM vt0, v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (x'');
SELECT * FROM t0, v0, vt0 WHERE (((t0.c2) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND (((t0.c2)<(t0.c0))))  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND (((t0.c2)<(t0.c0))))  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL) DESC);
SELECT * FROM t0, v0, vt0 WHERE (((t0.c2) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND (((t0.c2)<(t0.c0))))  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND (((t0.c2)<(t0.c0))))  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL) DESC);
SELECT * FROM t0, v0, vt0 WHERE (((t0.c2) BETWEEN (v0.c0) AND (vt0.c0)) COLLATE RTRIM) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))) NOT BETWEEN (((vt0.c0)*(v0.c0))) AND (((t0.c2)<(t0.c0))))  NULLS LAST, ((((vt0.c0) IS FALSE)) ISNULL) DESC;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)!=(vt0.c0)) IN ())) ORDER BY TRIM((v0.c0 IN ()), (('(-])')>=(v0.c0))) DESC  NULLS LAST, (((((x'', v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))>((((0.746334787682087))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM((v0.c0 IN ()), (('(-])')>=(v0.c0))) DESC  NULLS LAST, (((((x'', v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))>((((0.746334787682087))>=((vt0.c0))))));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)!=(vt0.c0)) IN ())) ORDER BY TRIM((v0.c0 IN ()), (('(-])')>=(v0.c0))) DESC  NULLS LAST, (((((x'', v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))>((((0.746334787682087))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)<>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM((v0.c0 IN ()), (('(-])')>=(v0.c0))) DESC  NULLS LAST, (((((x'', v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))>((((0.746334787682087))>=((vt0.c0))))));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0)!=(vt0.c0)) IN ())) ORDER BY TRIM((v0.c0 IN ()), (('(-])')>=(v0.c0))) DESC  NULLS LAST, (((((x'', v0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0))))>((((0.746334787682087))>=((vt0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((v0.c0) ISNULL)))=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) ISNULL)))==((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) ISNULL)))=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) ISNULL)))==((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((v0.c0) ISNULL)))=((((v0.c0) IS FALSE)))));
SELECT ALL * FROM v0, t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c69))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((v0.c0 IN (t0.c2, v0.c0))))) ORDER BY x'' DESC, (((NOT (t0.c0))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c69))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((v0.c0 IN (t0.c2, v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY x'' DESC, (((NOT (t0.c0))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c69))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((v0.c0 IN (t0.c2, v0.c0))))) ORDER BY x'' DESC, (((NOT (t0.c0))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c0)))AND(t0.c69))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((v0.c0 IN (t0.c2, v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY x'' DESC, (((NOT (t0.c0))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0, t0 WHERE (((((((t0.c0)OR(t0.c0)))AND(t0.c69))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND ((v0.c0 IN (t0.c2, v0.c0))))) ORDER BY x'' DESC, (((NOT (t0.c0))) NOT BETWEEN (t0.c2) AND ((t0.c0 IN (v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))&(CAST(t0.c2 AS BLOB))) WHERE ((NOT (TRIM(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(t0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))&(CAST(t0.c2 AS BLOB))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))&(CAST(t0.c2 AS BLOB))) WHERE ((NOT (TRIM(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (TRIM(t0.c2)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))&(CAST(t0.c2 AS BLOB))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(vt0.c0 AS NUMERIC))&(CAST(t0.c2 AS BLOB))) WHERE ((NOT (TRIM(t0.c2))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((0x207563a5) IS FALSE)) ORDER BY CASE ((t0.c69) ISNULL)  WHEN ((t0.c69) IS FALSE) THEN CAST(t0.c69 AS TEXT) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c2)AND(t0.c69)))OR(t0.c2)) THEN ((t0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((-1.912846144E9)) AND ((NULL))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0X207563a5) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((t0.c69) ISNULL)  WHEN ((t0.c69) IS FALSE) THEN CAST(t0.c69 AS TEXT) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c2)AND(t0.c69)))OR(t0.c2)) THEN ((t0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((-1.912846144E9)) AND ((NULL))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((0x207563a5) IS FALSE)) ORDER BY CASE ((t0.c69) ISNULL)  WHEN ((t0.c69) IS FALSE) THEN CAST(t0.c69 AS TEXT) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c2)AND(t0.c69)))OR(t0.c2)) THEN ((t0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((-1.912846144E9)) AND ((NULL))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0X207563a5) IS FALSE)) IS TRUE)  as count FROM v0, t0 ORDER BY CASE ((t0.c69) ISNULL)  WHEN ((t0.c69) IS FALSE) THEN CAST(t0.c69 AS TEXT) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c2)AND(t0.c69)))OR(t0.c2)) THEN ((t0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((-1.912846144E9)) AND ((NULL))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((0x207563a5) IS FALSE)) ORDER BY CASE ((t0.c69) ISNULL)  WHEN ((t0.c69) IS FALSE) THEN CAST(t0.c69 AS TEXT) WHEN CAST(t0.c2 AS TEXT) THEN ((t0.c0) NOT NULL) WHEN ((((t0.c2)AND(t0.c69)))OR(t0.c2)) THEN ((t0.c2) ISNULL) ELSE (((v0.c0)) BETWEEN ((-1.912846144E9)) AND ((NULL))) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL));
SELECT ALL * FROM t0 WHERE ((NOT (t0.c69))) ORDER BY ((t0.c69) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c69))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c69) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c69))) ORDER BY ((t0.c69) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c69))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c69) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c69))) ORDER BY ((t0.c69) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((x'', '-1948518078', t0.c0, vt0.c0, t0.c69)) BETWEEN ((t0.c69, t0.c2, t0.c69, vt0.c0, t0.c2)) AND ((t0.c0, t0.c69, vt0.c0, t0.c2, t0.c2))))-(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c69))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', '-1948518078', t0.c0, vt0.c0, t0.c69)) BETWEEN ((t0.c69, t0.c2, t0.c69, vt0.c0, t0.c2)) AND ((t0.c0, t0.c69, vt0.c0, t0.c2, t0.c2))))-(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c69))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((x'', '-1948518078', t0.c0, vt0.c0, t0.c69)) BETWEEN ((t0.c69, t0.c2, t0.c69, vt0.c0, t0.c2)) AND ((t0.c0, t0.c69, vt0.c0, t0.c2, t0.c2))))-(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c69))))) ORDER BY t0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((x'', '-1948518078', t0.c0, vt0.c0, t0.c69)) BETWEEN ((t0.c69, t0.c2, t0.c69, vt0.c0, t0.c2)) AND ((t0.c0, t0.c69, vt0.c0, t0.c2, t0.c2))))-(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c69))))) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c2  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((x'', '-1948518078', t0.c0, vt0.c0, t0.c69)) BETWEEN ((t0.c69, t0.c2, t0.c69, vt0.c0, t0.c2)) AND ((t0.c0, t0.c69, vt0.c0, t0.c2, t0.c2))))-(((vt0.c0) BETWEEN (vt0.c0) AND (t0.c69))))) ORDER BY t0.c2  NULLS FIRST;
SELECT * FROM vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((x'' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((x'' IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (t0.c0 IN (t0.c69)) COLLATE RTRIM CROSS JOIN t0 ON json_array_length(CAST(t0.c0 AS NUMERIC), ((t0.c2)=(v0.c0))) WHERE ((~ (((t0.c69) IS TRUE)))) ORDER BY ((((v0.c0)OR(v0.c0))) IS TRUE) DESC  NULLS FIRST, 0X3d2c448d  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c69) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (t0.c0 IN (t0.c69)) COLLATE RTRIM CROSS JOIN t0 ON json_array_length(CAST(t0.c0 AS NUMERIC), ((t0.c2)=(v0.c0))) ORDER BY ((((v0.c0)OR(v0.c0))) IS TRUE) DESC  NULLS FIRST, 0x3d2c448d  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON (t0.c0 IN (t0.c69)) COLLATE RTRIM CROSS JOIN t0 ON json_array_length(CAST(t0.c0 AS NUMERIC), ((t0.c2)=(v0.c0))) WHERE ((~ (((t0.c69) IS TRUE)))) ORDER BY ((((v0.c0)OR(v0.c0))) IS TRUE) DESC  NULLS FIRST, 0X3d2c448d  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c69) IS TRUE)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (t0.c0 IN (t0.c69)) COLLATE RTRIM CROSS JOIN t0 ON json_array_length(CAST(t0.c0 AS NUMERIC), ((t0.c2)=(v0.c0))) ORDER BY ((((v0.c0)OR(v0.c0))) IS TRUE) DESC  NULLS FIRST, 0x3d2c448d  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (0xffffffffa24357eb IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN (((v0.c0))==((v0.c0))) THEN (((v0.c0, 0.6104794687387894, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) END) ORDER BY (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))), (((v0.c0) NOT BETWEEN (x'') AND (0.8296560340771553)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0xffffffffa24357eb IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN (((v0.c0))=((v0.c0))) THEN (((v0.c0, 0.6104794687387894, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))), (((v0.c0) NOT BETWEEN (x'') AND (0.8296560340771553)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (0xffffffffa24357eb IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN (((v0.c0))==((v0.c0))) THEN (((v0.c0, 0.6104794687387894, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) END) ORDER BY (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))), (((v0.c0) NOT BETWEEN (x'') AND (0.8296560340771553)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (0xffffffffa24357eb IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN (((v0.c0))=((v0.c0))) THEN (((v0.c0, 0.6104794687387894, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))), (((v0.c0) NOT BETWEEN (x'') AND (0.8296560340771553)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (0xffffffffa24357eb IN (v0.c0)) THEN CAST(v0.c0 AS INTEGER) WHEN (((v0.c0))==((v0.c0))) THEN (((v0.c0, 0.6104794687387894, v0.c0))==((v0.c0, v0.c0, v0.c0))) WHEN v0.c0 THEN ((v0.c0)*(v0.c0)) END) ORDER BY (((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))<>(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))), (((v0.c0) NOT BETWEEN (x'') AND (0.8296560340771553)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c0 END AS NUMERIC));
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)&(vt0.c0)))|((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0)))|((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)&(vt0.c0)))|((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0)))|((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY DESC);
SELECT ALL * FROM vt0 WHERE (CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT)) ORDER BY ((((vt0.c0)&(vt0.c0)))|((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))  NULLS FIRST, vt0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE BINARY DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0) ISNULL), vt0.c0, ((v0.c0)/(vt0.c0))))=((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)&(x'')), 0.29526578668922054))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL), vt0.c0, ((v0.c0)/(vt0.c0))))=((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)&(x'')), 0.29526578668922054)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0) ISNULL), vt0.c0, ((v0.c0)/(vt0.c0))))=((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)&(x'')), 0.29526578668922054))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) ISNULL), vt0.c0, ((v0.c0)/(vt0.c0))))=((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)&(x'')), 0.29526578668922054)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0) ISNULL), vt0.c0, ((v0.c0)/(vt0.c0))))=((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((v0.c0)&(x'')), 0.29526578668922054))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'8c2d4ff3') ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN 0.04497630634155381 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'8c2d4ff3') IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN 0.04497630634155381 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'8c2d4ff3') ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN 0.04497630634155381 ELSE vt0.c0 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'8c2d4ff3') IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN 0.04497630634155381 ELSE vt0.c0 END IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (x'8c2d4ff3') ORDER BY (CASE vt0.c0  WHEN v0.c0 THEN 0.04497630634155381 ELSE vt0.c0 END IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (vt0.c0 IN (((vt0.c0)-(vt0.c0)), CAST(vt0.c0 AS BLOB))) DESC, (('61b')IS NOT(vt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((vt0.c0)-(vt0.c0)), CAST(vt0.c0 AS BLOB))) DESC, (('61b')IS NOT(vt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (vt0.c0 IN (((vt0.c0)-(vt0.c0)), CAST(vt0.c0 AS BLOB))) DESC, (('61b')IS NOT(vt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE RTRIM IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (((vt0.c0)-(vt0.c0)), CAST(vt0.c0 AS BLOB))) DESC, (('61b')IS NOT(vt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE RTRIM IN ())) ORDER BY (vt0.c0 IN (((vt0.c0)-(vt0.c0)), CAST(vt0.c0 AS BLOB))) DESC, (('61b')IS NOT(vt0.c0))  NULLS FIRST, vt0.c0  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('166825866') ORDER BY ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('166825866') IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ('166825866') ORDER BY ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('166825866') IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ('166825866') ORDER BY ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c0 AS TEXT))AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)<=(vt0.c0))))) ORDER BY rtreenode(LOWER(DISTINCT vt0.c0), CASE WHEN 'Shsk' THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS TEXT))AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY rtreenode(LOWER(DISTINCT vt0.c0), CASE WHEN 'Shsk' THEN v0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c0 AS TEXT))AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)<=(vt0.c0))))) ORDER BY rtreenode(LOWER(DISTINCT vt0.c0), CASE WHEN 'Shsk' THEN v0.c0 ELSE vt0.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS TEXT))AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY rtreenode(LOWER(DISTINCT vt0.c0), CASE WHEN 'Shsk' THEN v0.c0 ELSE vt0.c0 END));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((CAST(v0.c0 AS TEXT))AND(v0.c0 COLLATE BINARY)))AND(((vt0.c0)<=(vt0.c0))))) ORDER BY rtreenode(LOWER(DISTINCT vt0.c0), CASE WHEN 'Shsk' THEN v0.c0 ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)))) ORDER BY CAST(((vt0.c0)||('-959362931')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||('-959362931')) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)))) ORDER BY CAST(((vt0.c0)||('-959362931')) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)||('-959362931')) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)GLOB(vt0.c0)), (vt0.c0 IN (vt0.c0, NULL)))) ORDER BY CAST(((vt0.c0)||('-959362931')) AS REAL)  NULLS LAST;
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((+ (t0.c2)))IS NOT(CASE t0.c2  WHEN vt0.c0 THEN x'' END)) WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))>((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT vt0.c0, vt0.c0)))>((v0.c0)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((+ (t0.c2)))IS NOT(CASE t0.c2  WHEN vt0.c0 THEN x'' END)));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((+ (t0.c2)))IS NOT(CASE t0.c2  WHEN vt0.c0 THEN x'' END)) WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))>((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(DISTINCT vt0.c0, vt0.c0)))>((v0.c0)))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((+ (t0.c2)))IS NOT(CASE t0.c2  WHEN vt0.c0 THEN x'' END)));
SELECT * FROM v0, t0 RIGHT OUTER JOIN vt0 ON (((+ (t0.c2)))IS NOT(CASE t0.c2  WHEN vt0.c0 THEN x'' END)) WHERE ((((IFNULL(DISTINCT vt0.c0, vt0.c0)))>((v0.c0))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (((CHANGES()) IS FALSE)) ORDER BY (((v0.c0)/(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY (((v0.c0)/(v0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (((CHANGES()) IS FALSE)) ORDER BY (((v0.c0)/(v0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CHANGES()) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON v0.c0 ORDER BY (((v0.c0)/(v0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON v0.c0 WHERE (((CHANGES()) IS FALSE)) ORDER BY (((v0.c0)/(v0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c69)AND(t0.c2)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c69)AND(t0.c2)))AND(t0.c69))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c69)AND(t0.c2)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((t0.c69)AND(t0.c2)))AND(t0.c69))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c69)AND(t0.c2)))AND(t0.c69)))));
SELECT * FROM vt0, v0, t0 WHERE (t0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (t0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (t0.c2 COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1650563400'))))OR(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c0))))) ORDER BY CASE 0xffffffffb80a2de4  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0))!=(('-1650563400'))))OR(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0Xffffffffb80a2de4  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1650563400'))))OR(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c0))))) ORDER BY CASE 0xffffffffb80a2de4  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END;
SELECT SUM(count) FROM (SELECT (((((((((((((((((vt0.c0))!=(('-1650563400'))))OR(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE 0Xffffffffb80a2de4  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((((((((((((((((vt0.c0))!=(('-1650563400'))))OR(((vt0.c0)/(vt0.c0)))))AND(((vt0.c0) ISNULL))))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)))AND(vt0.c0)))OR((+ (vt0.c0))))) ORDER BY CASE 0xffffffffb80a2de4  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)-(vt0.c0)) END;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69)||(t0.c2)))OR(t0.c2 COLLATE BINARY))) ORDER BY (((('-1311252370') NOTNULL)) NOT NULL) ASC, COALESCE(DISTINCT (+ (vt0.c0)), ((t0.c2)GLOB(t0.c2)), ((t0.c69) NOT BETWEEN (t0.c0) AND ('&}')), ((t0.c0)IS NOT(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)||(t0.c2)))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('-1311252370') NOTNULL)) NOT NULL) ASC, COALESCE(DISTINCT (+ (vt0.c0)), ((t0.c2)GLOB(t0.c2)), ((t0.c69) NOT BETWEEN (t0.c0) AND ('&}')), ((t0.c0)IS NOT(t0.c0))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69)||(t0.c2)))OR(t0.c2 COLLATE BINARY))) ORDER BY (((('-1311252370') NOTNULL)) NOT NULL) ASC, COALESCE(DISTINCT (+ (vt0.c0)), ((t0.c2)GLOB(t0.c2)), ((t0.c69) NOT BETWEEN (t0.c0) AND ('&}')), ((t0.c0)IS NOT(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)||(t0.c2)))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((('-1311252370') NOTNULL)) NOT NULL) ASC, COALESCE(DISTINCT (+ (vt0.c0)), ((t0.c2)GLOB(t0.c2)), ((t0.c69) NOT BETWEEN (t0.c0) AND ('&}')), ((t0.c0)IS NOT(t0.c0))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69)||(t0.c2)))OR(t0.c2 COLLATE BINARY))) ORDER BY (((('-1311252370') NOTNULL)) NOT NULL) ASC, COALESCE(DISTINCT (+ (vt0.c0)), ((t0.c2)GLOB(t0.c2)), ((t0.c69) NOT BETWEEN (t0.c0) AND ('&}')), ((t0.c0)IS NOT(t0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((0.7199383522676469) NOT BETWEEN (t0.c69) AND (v0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.7199383522676469) NOT BETWEEN (t0.c69) AND (v0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((0.7199383522676469) NOT BETWEEN (t0.c69) AND (v0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((0.7199383522676469) NOT BETWEEN (t0.c69) AND (v0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c2) NOTNULL) END) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (CASE ((0.7199383522676469) NOT BETWEEN (t0.c69) AND (v0.c0))  WHEN (t0.c0 IN ()) THEN ((t0.c2) NOTNULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT ('')) IN ())) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT ('')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT ('')) IN ())) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT ('')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NOT ('')) IN ())) ORDER BY ((vt0.c0)||(vt0.c0)) COLLATE RTRIM COLLATE BINARY ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS BLOB));
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>=('zG%QGJ')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>=('zG%QGJ'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>=('zG%QGJ')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>=('zG%QGJ'))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)LIKE(vt0.c0)))GLOB(((vt0.c0)>=('zG%QGJ')))));
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69) NOT NULL))>(((((t0.c0)OR(vt0.c0)))OR(t0.c69))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) NOT NULL))>(((((t0.c0)OR(vt0.c0)))OR(t0.c69))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69) NOT NULL))>(((((t0.c0)OR(vt0.c0)))OR(t0.c69))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) NOT NULL))>(((((t0.c0)OR(vt0.c0)))OR(t0.c69))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c69) NOT NULL))>(((((t0.c0)OR(vt0.c0)))OR(t0.c69))))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69))) NOTNULL)  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, CAST(v0.c0 AS INTEGER), v0.c0)) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)OR(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, CAST(v0.c0 AS INTEGER), v0.c0)) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)OR(x'')))OR(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, CAST(v0.c0 AS INTEGER), v0.c0)) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)OR(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, CAST(v0.c0 AS INTEGER), v0.c0)) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)OR(x'')))OR(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL)) ORDER BY (((v0.c0, x'', v0.c0)) BETWEEN ((v0.c0, CAST(v0.c0 AS INTEGER), v0.c0)) AND ((v0.c0, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((((v0.c0)OR(x'')))OR(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY (((((((vt0.c0)AND('')))OR(vt0.c0))))<>((((vt0.c0) NOTNULL)))), (((((((vt0.c0))>=((vt0.c0))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND('')))OR(vt0.c0))))<>((((vt0.c0) NOTNULL)))), (((((((vt0.c0))>=((vt0.c0))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY (((((((vt0.c0)AND('')))OR(vt0.c0))))<>((((vt0.c0) NOTNULL)))), (((((((vt0.c0))>=((vt0.c0))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND('')))OR(vt0.c0))))<>((((vt0.c0) NOTNULL)))), (((((((vt0.c0))>=((vt0.c0))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (LIKELY(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY (((((((vt0.c0)AND('')))OR(vt0.c0))))<>((((vt0.c0) NOTNULL)))), (((((((vt0.c0))>=((vt0.c0))))AND((+ (vt0.c0)))))OR((vt0.c0 IN ())))  NULLS LAST;
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(t0.c2 AS REAL)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (CAST(t0.c2 AS REAL))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0, v0.c0, 0.8176395565332336))>=((t0.c0, t0.c2, t0.c69))))))OR(t0.c0)))AND(x'' COLLATE BINARY)))OR(t0.c69 COLLATE BINARY))) ORDER BY ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c2) AND ((((vt0.c0, t0.c69, t0.c2)) NOT BETWEEN ((vt0.c0, x'', t0.c69)) AND ((vt0.c0, t0.c69, t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))AND((((v0.c0, v0.c0, 0.8176395565332336))>=((t0.c0, t0.c2, t0.c69))))))OR(t0.c0)))AND(x'' COLLATE BINARY)))OR(t0.c69 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c2) AND ((((vt0.c0, t0.c69, t0.c2)) NOT BETWEEN ((vt0.c0, x'', t0.c69)) AND ((vt0.c0, t0.c69, t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0, v0.c0, 0.8176395565332336))>=((t0.c0, t0.c2, t0.c69))))))OR(t0.c0)))AND(x'' COLLATE BINARY)))OR(t0.c69 COLLATE BINARY))) ORDER BY ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c2) AND ((((vt0.c0, t0.c69, t0.c2)) NOT BETWEEN ((vt0.c0, x'', t0.c69)) AND ((vt0.c0, t0.c69, t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT NULL))AND((((v0.c0, v0.c0, 0.8176395565332336))>=((t0.c0, t0.c2, t0.c69))))))OR(t0.c0)))AND(x'' COLLATE BINARY)))OR(t0.c69 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c2) AND ((((vt0.c0, t0.c69, t0.c2)) NOT BETWEEN ((vt0.c0, x'', t0.c69)) AND ((vt0.c0, t0.c69, t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (((((((((((vt0.c0) NOT NULL))AND((((v0.c0, v0.c0, 0.8176395565332336))>=((t0.c0, t0.c2, t0.c69))))))OR(t0.c0)))AND(x'' COLLATE BINARY)))OR(t0.c69 COLLATE BINARY))) ORDER BY ((((t0.c2)<<(t0.c0))) NOT BETWEEN (t0.c2) AND ((((vt0.c0, t0.c69, t0.c2)) NOT BETWEEN ((vt0.c0, x'', t0.c69)) AND ((vt0.c0, t0.c69, t0.c0))))) DESC;
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((NULL)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE WHERE ((((0.08985800040277758, t0.c69, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c69)AND(t0.c69)))OR(vt0.c0)), (('942529877')LIKE(NULL)), CAST(t0.c2 AS BLOB))) AND ((CASE WHEN t0.c69 THEN t0.c69 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 ELSE t0.c0 END, (~ (t0.c0)), (t0.c0 IN ()), ((t0.c69)||(vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0.08985800040277758, t0.c69, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c69)AND(t0.c69)))OR(vt0.c0)), (('942529877')LIKE(NULL)), CAST(t0.c2 AS BLOB))) AND ((CASE WHEN t0.c69 THEN t0.c69 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 ELSE t0.c0 END, (~ (t0.c0)), (t0.c0 IN ()), ((t0.c69)||(vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((NULL)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((NULL)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE WHERE ((((0.08985800040277758, t0.c69, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c69)AND(t0.c69)))OR(vt0.c0)), (('942529877')LIKE(NULL)), CAST(t0.c2 AS BLOB))) AND ((CASE WHEN t0.c69 THEN t0.c69 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 ELSE t0.c0 END, (~ (t0.c0)), (t0.c0 IN ()), ((t0.c69)||(vt0.c0)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((0.08985800040277758, t0.c69, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c69)AND(t0.c69)))OR(vt0.c0)), (('942529877')LIKE(NULL)), CAST(t0.c2 AS BLOB))) AND ((CASE WHEN t0.c69 THEN t0.c69 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 ELSE t0.c0 END, (~ (t0.c0)), (t0.c0 IN ()), ((t0.c69)||(vt0.c0)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((NULL)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((NULL)AND(t0.c0)))OR(t0.c0)) COLLATE NOCASE WHERE ((((0.08985800040277758, t0.c69, t0.c2, t0.c2, t0.c2)) NOT BETWEEN ((((vt0.c0) IS TRUE), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), ((((t0.c69)AND(t0.c69)))OR(vt0.c0)), (('942529877')LIKE(NULL)), CAST(t0.c2 AS BLOB))) AND ((CASE WHEN t0.c69 THEN t0.c69 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 ELSE t0.c0 END, (~ (t0.c0)), (t0.c0 IN ()), ((t0.c69)||(vt0.c0)), (vt0.c0 IN ())))));
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c2))>((v0.c0)))) BETWEEN (((((x'')AND(t0.c2)))AND(t0.c0))) AND (((v0.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t0.c0 THEN v0.c0 ELSE 0.02237345227562748 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>((v0.c0)))) BETWEEN (((((x'')AND(t0.c2)))AND(t0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY json_type(CASE WHEN t0.c0 THEN v0.c0 ELSE 0.02237345227562748 END)  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c2))>((v0.c0)))) BETWEEN (((((x'')AND(t0.c2)))AND(t0.c0))) AND (((v0.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t0.c0 THEN v0.c0 ELSE 0.02237345227562748 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>((v0.c0)))) BETWEEN (((((x'')AND(t0.c2)))AND(t0.c0))) AND (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY json_type(CASE WHEN t0.c0 THEN v0.c0 ELSE 0.02237345227562748 END)  NULLS LAST);
SELECT ALL * FROM t0, v0, vt0 WHERE ((((((t0.c2))>((v0.c0)))) BETWEEN (((((x'')AND(t0.c2)))AND(t0.c0))) AND (((v0.c0) NOTNULL)))) ORDER BY json_type(CASE WHEN t0.c0 THEN v0.c0 ELSE 0.02237345227562748 END)  NULLS LAST;
SELECT * FROM vt0, t0, v0 WHERE (COALESCE(NULL, ((((v0.c0)OR(NULL)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, ((((v0.c0)OR(NULL)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (COALESCE(NULL, ((((v0.c0)OR(NULL)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(NULL, ((((v0.c0)OR(NULL)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (COALESCE(NULL, ((((v0.c0)OR(NULL)))AND(vt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (v0.c0) AND (((v0.c0)>=(v0.c0))))) ORDER BY ((v0.c0)LIKE(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (v0.c0) AND (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)LIKE(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (v0.c0) AND (((v0.c0)>=(v0.c0))))) ORDER BY ((v0.c0)LIKE(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (v0.c0) AND (((v0.c0)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)LIKE(v0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (v0.c0) AND (((v0.c0)>=(v0.c0))))) ORDER BY ((v0.c0)LIKE(v0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) IS TRUE)) ISNULL));
SELECT * FROM v0, t0 WHERE (((LENGTH(v0.c0)) ISNULL)) ORDER BY ((x'')&(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LENGTH(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, t0 ORDER BY ((x'')&(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((LENGTH(v0.c0)) ISNULL)) ORDER BY ((x'')&(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LENGTH(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, t0 ORDER BY ((x'')&(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM v0, t0 WHERE (((LENGTH(v0.c0)) ISNULL)) ORDER BY ((x'')&(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(((((v0.c0)OR(vt0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(v0.c0)))) DESC  NULLS LAST, ((((t0.c69)>=(t0.c0)))>(CAST(t0.c69 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(((((v0.c0)OR(vt0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(v0.c0)))) DESC  NULLS LAST, ((((t0.c69)>=(t0.c0)))>(CAST(t0.c69 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(((((v0.c0)OR(vt0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(v0.c0)))) DESC  NULLS LAST, ((((t0.c69)>=(t0.c0)))>(CAST(t0.c69 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(((((v0.c0)OR(vt0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(v0.c0)))) DESC  NULLS LAST, ((((t0.c69)>=(t0.c0)))>(CAST(t0.c69 AS BLOB))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((CAST(t0.c0 AS INTEGER))AND(((((v0.c0)OR(vt0.c0)))OR(t0.c2)))))OR(((t0.c0)<<(v0.c0)))) DESC  NULLS LAST, ((((t0.c69)>=(t0.c0)))>(CAST(t0.c69 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((- (json(t0.c0)))) ORDER BY ((0x31370a0) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c0)OR(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (json(t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((0X31370a0) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c0)OR(v0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((- (json(t0.c0)))) ORDER BY ((0x31370a0) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c0)OR(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (json(t0.c0)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((0X31370a0) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c0)OR(v0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE ((- (json(t0.c0)))) ORDER BY ((0x31370a0) BETWEEN (t0.c2 COLLATE RTRIM) AND (((((t0.c0)OR(v0.c0)))OR(vt0.c0))));
SELECT ALL * FROM t0 WHERE ((t0.c69 COLLATE NOCASE IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((t0.c69 COLLATE NOCASE IN ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c69 COLLATE NOCASE IN ((t0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((t0.c69 COLLATE NOCASE IN ((t0.c0 IN ())))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c69 COLLATE NOCASE IN ((t0.c0 IN ()))));
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((((t0.c69 COLLATE BINARY)OR(x'3734')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))AND(((t0.c2)==('1138119056')))))AND(NULL)))AND(((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c0)))))AND(CAST(0.4207503186887537 AS NUMERIC)))) ORDER BY NULL, ((CASE WHEN t0.c69 THEN t0.c0 ELSE t0.c69 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c69)AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c69 COLLATE BINARY)OR(x'3734')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))AND(((t0.c2)=('1138119056')))))AND(NULL)))AND(((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c0)))))AND(CAST(0.4207503186887537 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0 ORDER BY NULL, ((CASE WHEN t0.c69 THEN t0.c0 ELSE t0.c69 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c69)AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((((t0.c69 COLLATE BINARY)OR(x'3734')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))AND(((t0.c2)==('1138119056')))))AND(NULL)))AND(((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c0)))))AND(CAST(0.4207503186887537 AS NUMERIC)))) ORDER BY NULL, ((CASE WHEN t0.c69 THEN t0.c0 ELSE t0.c69 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c69)AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c69 COLLATE BINARY)OR(x'3734')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))AND(((t0.c2)=('1138119056')))))AND(NULL)))AND(((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c0)))))AND(CAST(0.4207503186887537 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0 ORDER BY NULL, ((CASE WHEN t0.c69 THEN t0.c0 ELSE t0.c69 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c69)AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((((((((t0.c69 COLLATE BINARY)OR(x'3734')))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)))AND(((t0.c2)==('1138119056')))))AND(NULL)))AND(((t0.c69) NOT BETWEEN (t0.c69) AND (t0.c0)))))AND(CAST(0.4207503186887537 AS NUMERIC)))) ORDER BY NULL, ((CASE WHEN t0.c69 THEN t0.c0 ELSE t0.c69 END) BETWEEN (v0.c0 COLLATE BINARY) AND (((t0.c69)AND(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 INDEXED BY i32 WHERE ((((((v0.c0)>>(v0.c0))))>=((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>>(v0.c0))))>=((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 INDEXED BY i32);
SELECT ALL * FROM v0 INDEXED BY i32 WHERE ((((((v0.c0)>>(v0.c0))))>=((CAST(v0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)>>(v0.c0))))>=((CAST(v0.c0 AS BLOB))))) IS TRUE)  as count FROM v0 INDEXED BY i32);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((v0.c0)|(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((UNICODE(v0.c0))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((UNICODE(v0.c0))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((v0.c0)|(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((UNICODE(v0.c0))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN (((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((UNICODE(v0.c0))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN (((v0.c0)|(v0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((UNICODE(v0.c0))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))  NULLS LAST;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((-1.6505634E9) IS TRUE)) AND (vt0.c0))) ORDER BY TRIM(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((-1.6505634E9) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((-1.6505634E9) IS TRUE)) AND (vt0.c0))) ORDER BY TRIM(vt0.c0) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((-1.6505634E9) IS TRUE)) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(vt0.c0) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((-1.6505634E9) IS TRUE)) AND (vt0.c0))) ORDER BY TRIM(vt0.c0) DESC;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON QUOTE(((t0.c69) NOTNULL)) INNER JOIN v0 ON CAST(vt0.c0 AS TEXT) WHERE ('636453637');
SELECT SUM(count) FROM (SELECT (('636453637') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON QUOTE(((t0.c69) NOTNULL)) INNER JOIN v0 ON CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON QUOTE(((t0.c69) NOTNULL)) INNER JOIN v0 ON CAST(vt0.c0 AS TEXT) WHERE ('636453637');
SELECT SUM(count) FROM (SELECT (('636453637') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON QUOTE(((t0.c69) NOTNULL)) INNER JOIN v0 ON CAST(vt0.c0 AS TEXT));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON QUOTE(((t0.c69) NOTNULL)) INNER JOIN v0 ON CAST(vt0.c0 AS TEXT) WHERE ('636453637');
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((~ (vt0.c0)))AND(COALESCE('-1572644885', t0.c0))))AND((v0.c0 IN ()))) WHERE ((vt0.c0 IN ())) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((~ (vt0.c0)))AND(COALESCE('-1572644885', t0.c0))))AND((v0.c0 IN ()))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((~ (vt0.c0)))AND(COALESCE('-1572644885', t0.c0))))AND((v0.c0 IN ()))) WHERE ((vt0.c0 IN ())) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((~ (vt0.c0)))AND(COALESCE('-1572644885', t0.c0))))AND((v0.c0 IN ()))) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN t0 ON (((((~ (vt0.c0)))AND(COALESCE('-1572644885', t0.c0))))AND((v0.c0 IN ()))) WHERE ((vt0.c0 IN ())) ORDER BY CAST(t0.c0 AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'')))=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE ((t0.c0 IN ())) ORDER BY 'A'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY 'A'  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c0 IN ())) ORDER BY 'A'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY 'A'  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c0 IN ())) ORDER BY 'A'  NULLS FIRST;
SELECT * FROM vt0 WHERE ('428403103') ORDER BY (((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('428403103') IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('428403103') ORDER BY (((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (('428403103') IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ('428403103') ORDER BY (((NOT (vt0.c0)))OR((vt0.c0 IN (vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('H{[d&?\'))) DESC, ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((vt0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('H{[d&?\'))) DESC, ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((vt0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('H{[d&?\'))) DESC, ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((vt0.c0) IS TRUE) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('H{[d&?\'))) DESC, ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((vt0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (((v0.c0) NOTNULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('H{[d&?\'))) DESC, ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN (NULL) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS LAST, (((vt0.c0) IS TRUE) IN ());
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((t0.c69 COLLATE NOCASE)*(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (IFNULL(((v0.c0)AND(vt0.c0)), (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0)AND(vt0.c0)), (t0.c2 IN ()))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((t0.c69 COLLATE NOCASE)*(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((t0.c69 COLLATE NOCASE)*(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (IFNULL(((v0.c0)AND(vt0.c0)), (t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((v0.c0)AND(vt0.c0)), (t0.c2 IN ()))) IS TRUE)  as count FROM v0, vt0 INNER JOIN t0 ON ((t0.c69 COLLATE NOCASE)*(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0 INNER JOIN t0 ON ((t0.c69 COLLATE NOCASE)*(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c2)))) WHERE (IFNULL(((v0.c0)AND(vt0.c0)), (t0.c2 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9197167026386021, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.049588798656267974, vt0.c0, vt0.c0)))))) ORDER BY ((((+ (vt0.c0))))<((CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9197167026386021, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.049588798656267974, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0))))<((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9197167026386021, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.049588798656267974, vt0.c0, vt0.c0)))))) ORDER BY ((((+ (vt0.c0))))<((CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9197167026386021, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.049588798656267974, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((+ (vt0.c0))))<((CAST(vt0.c0 AS TEXT)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.9197167026386021, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0.049588798656267974, vt0.c0, vt0.c0)))))) ORDER BY ((((+ (vt0.c0))))<((CAST(vt0.c0 AS TEXT))));
SELECT ALL * FROM v0, t0 WHERE (((LIKELY(DISTINCT t0.c0))>=(((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT t0.c0))>=(((((t0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((LIKELY(DISTINCT t0.c0))>=(((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT t0.c0))>=(((((t0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((LIKELY(DISTINCT t0.c0))>=(((((t0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c69)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c69)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c69)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((+ (t0.c69)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (t0.c69)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY (((('') NOT NULL))||(((((t0.c2)OR(0X75c7c74d)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((('') NOT NULL))||(((((t0.c2)OR(0X75c7c74d)))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY (((('') NOT NULL))||(((((t0.c2)OR(0X75c7c74d)))OR(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((('') NOT NULL))||(((((t0.c2)OR(0X75c7c74d)))OR(NULL)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE) ORDER BY (((('') NOT NULL))||(((((t0.c2)OR(0X75c7c74d)))OR(NULL))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(DISTINCT t0.c0, t0.c0) ELSE (((t0.c0))==((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULLIF(DISTINCT t0.c0, t0.c0) ELSE (((t0.c0))=((t0.c2))) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(DISTINCT t0.c0, t0.c0) ELSE (((t0.c0))==((t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN NULLIF(DISTINCT t0.c0, t0.c0) ELSE (((t0.c0))=((t0.c2))) END) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE (CASE WHEN vt0.c0 THEN NULLIF(DISTINCT t0.c0, t0.c0) ELSE (((t0.c0))==((t0.c2))) END);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NOT (((t0.c0)<=(t0.c69))))) ORDER BY (((0.39302508578200324, vt0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((0.5449790970208034, v0.c0, (~ (t0.c0)), COALESCE(t0.c69, vt0.c0, v0.c0, vt0.c0), UPPER(DISTINCT t0.c69))) AND (((((t0.c2))>=((t0.c2))), ((('905942568'))<>((vt0.c0))), ((v0.c0) IS TRUE), TRIM(DISTINCT t0.c2, t0.c69), LIKELY(t0.c69)))) DESC, (NOT (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)<=(t0.c69))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((0.39302508578200324, vt0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((0.5449790970208034, v0.c0, (~ (t0.c0)), COALESCE(t0.c69, vt0.c0, v0.c0, vt0.c0), UPPER(DISTINCT t0.c69))) AND (((((t0.c2))>=((t0.c2))), ((('905942568'))!=((vt0.c0))), ((v0.c0) IS TRUE), TRIM(DISTINCT t0.c2, t0.c69), LIKELY(t0.c69)))) DESC, (NOT (CAST(t0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NOT (((t0.c0)<=(t0.c69))))) ORDER BY (((0.39302508578200324, vt0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((0.5449790970208034, v0.c0, (~ (t0.c0)), COALESCE(t0.c69, vt0.c0, v0.c0, vt0.c0), UPPER(DISTINCT t0.c69))) AND (((((t0.c2))>=((t0.c2))), ((('905942568'))<>((vt0.c0))), ((v0.c0) IS TRUE), TRIM(DISTINCT t0.c2, t0.c69), LIKELY(t0.c69)))) DESC, (NOT (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0)<=(t0.c69))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((0.39302508578200324, vt0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((0.5449790970208034, v0.c0, (~ (t0.c0)), COALESCE(t0.c69, vt0.c0, v0.c0, vt0.c0), UPPER(DISTINCT t0.c69))) AND (((((t0.c2))>=((t0.c2))), ((('905942568'))!=((vt0.c0))), ((v0.c0) IS TRUE), TRIM(DISTINCT t0.c2, t0.c69), LIKELY(t0.c69)))) DESC, (NOT (CAST(t0.c2 AS NUMERIC))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((NOT (((t0.c0)<=(t0.c69))))) ORDER BY (((0.39302508578200324, vt0.c0, t0.c0, t0.c2, t0.c0)) NOT BETWEEN ((0.5449790970208034, v0.c0, (~ (t0.c0)), COALESCE(t0.c69, vt0.c0, v0.c0, vt0.c0), UPPER(DISTINCT t0.c69))) AND (((((t0.c2))>=((t0.c2))), ((('905942568'))<>((vt0.c0))), ((v0.c0) IS TRUE), TRIM(DISTINCT t0.c2, t0.c69), LIKELY(t0.c69)))) DESC, (NOT (CAST(t0.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (0.7544029913255312);
SELECT SUM(count) FROM (SELECT ALL ((0.7544029913255312) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (0.7544029913255312);
SELECT SUM(count) FROM (SELECT ALL ((0.7544029913255312) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (0.7544029913255312);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY x'd484';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY x'd484');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY x'd484';
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY x'd484');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (NULL) ORDER BY x'd484';
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY UNLIKELY(((vt0.c0)>=(v0.c0))), ((vt0.c0)<<(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(((vt0.c0)>=(v0.c0))), ((vt0.c0)<<(TYPEOF(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY UNLIKELY(((vt0.c0)>=(v0.c0))), ((vt0.c0)<<(TYPEOF(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY UNLIKELY(((vt0.c0)>=(v0.c0))), ((vt0.c0)<<(TYPEOF(vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOTNULL)) ORDER BY UNLIKELY(((vt0.c0)>=(v0.c0))), ((vt0.c0)<<(TYPEOF(vt0.c0)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c69 WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(t0.c69 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN x'' THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c69 WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(t0.c69 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c69 WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(t0.c69 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN x'' THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c69 WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(t0.c69 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((CASE t0.c0  WHEN x'' THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN t0.c69 WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)||(t0.c69 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((v0.c0)>>(v0.c0)))GLOB(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>>(v0.c0)))GLOB(x''))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((v0.c0)>>(v0.c0)))GLOB(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>>(v0.c0)))GLOB(x''))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((NOT (CAST(v0.c0 AS NUMERIC)))) ORDER BY ((((v0.c0)>>(v0.c0)))GLOB(x''))  NULLS FIRST;
SELECT ALL * FROM v0, t0, vt0 WHERE (609168483);
SELECT SUM(count) FROM (SELECT ((609168483) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (609168483);
SELECT SUM(count) FROM (SELECT ((609168483) IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE (609168483);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2 IN ()) IN ()));
SELECT * FROM t0, v0, vt0 WHERE (TRIM(((((NULL)OR(t0.c0)))AND(t0.c69)), CAST(vt0.c0 AS INTEGER))) ORDER BY ((UPPER(vt0.c0))OR(0.4025597439926005)) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((NULL)OR(t0.c0)))AND(t0.c69)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((UPPER(vt0.c0))OR(0.4025597439926005)) ASC);
SELECT * FROM t0, v0, vt0 WHERE (TRIM(((((NULL)OR(t0.c0)))AND(t0.c69)), CAST(vt0.c0 AS INTEGER))) ORDER BY ((UPPER(vt0.c0))OR(0.4025597439926005)) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(((((NULL)OR(t0.c0)))AND(t0.c69)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((UPPER(vt0.c0))OR(0.4025597439926005)) ASC);
SELECT * FROM t0, v0, vt0 WHERE (TRIM(((((NULL)OR(t0.c0)))AND(t0.c69)), CAST(vt0.c0 AS INTEGER))) ORDER BY ((UPPER(vt0.c0))OR(0.4025597439926005)) ASC;
SELECT * FROM v0, t0, vt0 WHERE (CAST((t0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CAST((t0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE (CAST((t0.c2 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ('166825866') ORDER BY ((((t0.c0 IN ())))!=((((t0.c2)>=(0Xffffffffb3cceb57))))), CAST((+ (t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('166825866') IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0 IN ())))!=((((t0.c2)>=(0Xffffffffb3cceb57))))), CAST((+ (t0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ('166825866') ORDER BY ((((t0.c0 IN ())))!=((((t0.c2)>=(0Xffffffffb3cceb57))))), CAST((+ (t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('166825866') IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((((t0.c0 IN ())))!=((((t0.c2)>=(0Xffffffffb3cceb57))))), CAST((+ (t0.c0)) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE ('166825866') ORDER BY ((((t0.c0 IN ())))!=((((t0.c2)>=(0Xffffffffb3cceb57))))), CAST((+ (t0.c0)) AS INTEGER) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '525538785' THEN v0.c0 ELSE v0.c0 END)%(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN '525538785' THEN v0.c0 ELSE v0.c0 END)%(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '525538785' THEN v0.c0 ELSE v0.c0 END)%(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN '525538785' THEN v0.c0 ELSE v0.c0 END)%(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN '525538785' THEN v0.c0 ELSE v0.c0 END)%(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN NULL THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL * FROM vt0, v0 NATURAL JOIN t0 WHERE ((x'' IN (NULL COLLATE NOCASE))) ORDER BY ((((vt0.c0)AND(t0.c69)))>>(x'')) ASC, ((((vt0.c0) NOTNULL))<>(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY ((((vt0.c0)AND(t0.c69)))>>(x'')) ASC, ((((vt0.c0) NOTNULL))!=(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN t0 WHERE ((x'' IN (NULL COLLATE NOCASE))) ORDER BY ((((vt0.c0)AND(t0.c69)))>>(x'')) ASC, ((((vt0.c0) NOTNULL))<>(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((x'' IN (NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN t0 ORDER BY ((((vt0.c0)AND(t0.c69)))>>(x'')) ASC, ((((vt0.c0) NOTNULL))!=(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, NULL ASC  NULLS LAST);
SELECT ALL * FROM vt0, v0 NATURAL JOIN t0 WHERE ((x'' IN (NULL COLLATE NOCASE))) ORDER BY ((((vt0.c0)AND(t0.c69)))>>(x'')) ASC, ((((vt0.c0) NOTNULL))<>(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST, NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))OR(v0.c0))) IS FALSE) LEFT OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN ('') AND (((t0.c69)>=(t0.c69)))) WHERE (TYPEOF(DISTINCT STRFTIME(vt0.c0, t0.c2, t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT STRFTIME(vt0.c0, t0.c2, t0.c2))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))OR(v0.c0))) IS FALSE) LEFT OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN ('') AND (((t0.c69)>=(t0.c69)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON ((((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))OR(v0.c0))) IS FALSE) LEFT OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN ('') AND (((t0.c69)>=(t0.c69)))) WHERE (TYPEOF(DISTINCT STRFTIME(vt0.c0, t0.c2, t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT STRFTIME(vt0.c0, t0.c2, t0.c2))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON ((((((((((((((vt0.c0)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)))OR(t0.c0)))OR(t0.c0)))OR(v0.c0))) IS FALSE) LEFT OUTER JOIN vt0 ON ((((vt0.c0)|(vt0.c0))) BETWEEN ('') AND (((t0.c69)>=(t0.c69)))));
SELECT COUNT(*) FROM t0 WHERE (0.7249197111266766) ORDER BY ((t0.c69 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.7249197111266766) IS TRUE)  as count FROM t0 ORDER BY ((t0.c69 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (0.7249197111266766) ORDER BY ((t0.c69 COLLATE NOCASE) ISNULL);
SELECT SUM(count) FROM (SELECT ((0.7249197111266766) IS TRUE)  as count FROM t0 ORDER BY ((t0.c69 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (0.7249197111266766) ORDER BY ((t0.c69 COLLATE NOCASE) ISNULL);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1096028859 IN ()))>>(((t0.c0)-(t0.c2))))) ORDER BY (((((t0.c69 IN ()))AND((+ (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((1096028859 IN ()))>>(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69 IN ()))AND((+ (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1096028859 IN ()))>>(((t0.c0)-(t0.c2))))) ORDER BY (((((t0.c69 IN ()))AND((+ (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((1096028859 IN ()))>>(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69 IN ()))AND((+ (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((1096028859 IN ()))>>(((t0.c0)-(t0.c2))))) ORDER BY (((((t0.c69 IN ()))AND((+ (t0.c0)))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0)))) ASC;
SELECT ALL * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<>(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0)<>(v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)OR(2.60166407E8 COLLATE RTRIM)))AND(((t0.c2)>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(2.60166407E8 COLLATE RTRIM)))AND(((t0.c2)>(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)OR(2.60166407E8 COLLATE RTRIM)))AND(((t0.c2)>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(2.60166407E8 COLLATE RTRIM)))AND(((t0.c2)>(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0)OR(2.60166407E8 COLLATE RTRIM)))AND(((t0.c2)>(t0.c2)))));
SELECT ALL * FROM vt0 WHERE (((2128177888)IS(UPPER(DISTINCT vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((2128177888)IS(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((2128177888)IS(UPPER(DISTINCT vt0.c0)))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((2128177888)IS(UPPER(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((2128177888)IS(UPPER(DISTINCT vt0.c0)))) ORDER BY vt0.c0;
SELECT * FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN json_patch(vt0.c0, t0.c69) THEN (- (v0.c0)) ELSE CAST('-753582557' AS REAL) END WHERE ((((t0.c69))=((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c69))==((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN json_patch(vt0.c0, t0.c69) THEN (- (v0.c0)) ELSE CAST('-753582557' AS REAL) END);
SELECT * FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN json_patch(vt0.c0, t0.c69) THEN (- (v0.c0)) ELSE CAST('-753582557' AS REAL) END WHERE ((((t0.c69))=((t0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c69))==((t0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN json_patch(vt0.c0, t0.c69) THEN (- (v0.c0)) ELSE CAST('-753582557' AS REAL) END);
SELECT * FROM vt0, v0 LEFT OUTER JOIN t0 ON CASE WHEN json_patch(vt0.c0, t0.c69) THEN (- (v0.c0)) ELSE CAST('-753582557' AS REAL) END WHERE ((((t0.c69))=((t0.c0))) COLLATE RTRIM);
SELECT * FROM t0 WHERE (((((t0.c69)IS NOT(t0.c69)))<=(((t0.c69)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)IS NOT(t0.c69)))<=(((t0.c69)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c69)IS NOT(t0.c69)))<=(((t0.c69)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69)IS NOT(t0.c69)))<=(((t0.c69)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c69)IS NOT(t0.c69)))<=(((t0.c69)*(t0.c0)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD((~ (t0.c0)), 0.05480228100250217)) ORDER BY (-959362931 IN (t0.c0, (t0.c69 IN ()))) DESC  NULLS FIRST, 9.05942568E8 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (t0.c0)), 0.05480228100250217)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (-959362931 IN (t0.c0, (t0.c69 IN ()))) DESC  NULLS FIRST, 9.05942568E8 DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD((~ (t0.c0)), 0.05480228100250217)) ORDER BY (-959362931 IN (t0.c0, (t0.c69 IN ()))) DESC  NULLS FIRST, 9.05942568E8 DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((~ (t0.c0)), 0.05480228100250217)) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY (-959362931 IN (t0.c0, (t0.c69 IN ()))) DESC  NULLS FIRST, 9.05942568E8 DESC);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE (LIKELIHOOD((~ (t0.c0)), 0.05480228100250217)) ORDER BY (-959362931 IN (t0.c0, (t0.c69 IN ()))) DESC  NULLS FIRST, 9.05942568E8 DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND ((NOT (t0.c69)))) LEFT OUTER JOIN v0 ON ((((((v0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))) WHERE ('') ORDER BY ((((t0.c69)IS NOT(v0.c0)))<=(v0.c0)) DESC, LIKELIHOOD(DISTINCT 'Z', 0.9053180425352875) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND ((NOT (t0.c69)))) LEFT OUTER JOIN v0 ON ((((((v0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))) ORDER BY ((((t0.c69)IS NOT(v0.c0)))<=(v0.c0)) DESC, LIKELIHOOD(DISTINCT 'Z', 0.9053180425352875) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND ((NOT (t0.c69)))) LEFT OUTER JOIN v0 ON ((((((v0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))) WHERE ('') ORDER BY ((((t0.c69)IS NOT(v0.c0)))<=(v0.c0)) DESC, LIKELIHOOD(DISTINCT 'Z', 0.9053180425352875) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND ((NOT (t0.c69)))) LEFT OUTER JOIN v0 ON ((((((v0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))) ORDER BY ((((t0.c69)IS NOT(v0.c0)))<=(v0.c0)) DESC, LIKELIHOOD(DISTINCT 'Z', 0.9053180425352875) DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY) BETWEEN (UNLIKELY(DISTINCT t0.c0)) AND ((NOT (t0.c69)))) LEFT OUTER JOIN v0 ON ((((((v0.c0) IS FALSE))AND(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))) WHERE ('') ORDER BY ((((t0.c69)IS NOT(v0.c0)))<=(v0.c0)) DESC, LIKELIHOOD(DISTINCT 'Z', 0.9053180425352875) DESC;
SELECT * FROM vt0, t0, v0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0, v0);
SELECT * FROM vt0, t0, v0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))+(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))+(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))+(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))+(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOTNULL))+(CAST(v0.c0 AS INTEGER))));
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((vt0.c0)/(t0.c0))))) ORDER BY (((vt0.c0))>=((NULL))) COLLATE NOCASE ASC  NULLS FIRST, (((t0.c69, t0.c69, t0.c69)) NOT BETWEEN ((((t0.c0)AND(t0.c69)), (((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))), '-1063793081')) AND ((CASE WHEN t0.c69 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END, (vt0.c0 IN ()), '1冐K~x')));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) BETWEEN (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))>=((NULL))) COLLATE NOCASE ASC  NULLS FIRST, (((t0.c69, t0.c69, t0.c69)) NOT BETWEEN ((((t0.c0)AND(t0.c69)), (((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))), '-1063793081')) AND ((CASE WHEN t0.c69 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END, (vt0.c0 IN ()), '1冐K~x'))));
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((vt0.c0)/(t0.c0))))) ORDER BY (((vt0.c0))>=((NULL))) COLLATE NOCASE ASC  NULLS FIRST, (((t0.c69, t0.c69, t0.c69)) NOT BETWEEN ((((t0.c0)AND(t0.c69)), (((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))), '-1063793081')) AND ((CASE WHEN t0.c69 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END, (vt0.c0 IN ()), '1冐K~x')));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS TEXT)) BETWEEN (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((vt0.c0)/(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0))>=((NULL))) COLLATE NOCASE ASC  NULLS FIRST, (((t0.c69, t0.c69, t0.c69)) NOT BETWEEN ((((t0.c0)AND(t0.c69)), (((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))), '-1063793081')) AND ((CASE WHEN t0.c69 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END, (vt0.c0 IN ()), '1冐K~x'))));
SELECT * FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT)) BETWEEN (((NULL) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((vt0.c0)/(t0.c0))))) ORDER BY (((vt0.c0))>=((NULL))) COLLATE NOCASE ASC  NULLS FIRST, (((t0.c69, t0.c69, t0.c69)) NOT BETWEEN ((((t0.c0)AND(t0.c69)), (((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))), '-1063793081')) AND ((CASE WHEN t0.c69 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END, (vt0.c0 IN ()), '1冐K~x')));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((((((((t0.c69)AND(v0.c0)))AND(t0.c0)))OR(t0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY ((t0.c69)<('|e-n\')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c69)AND(v0.c0)))AND(t0.c0)))OR(t0.c2)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c69)<('|e-n\')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((((((((t0.c69)AND(v0.c0)))AND(t0.c0)))OR(t0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY ((t0.c69)<('|e-n\')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((t0.c69)AND(v0.c0)))AND(t0.c0)))OR(t0.c2)))AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c69)<('|e-n\')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CAST(((((((((t0.c69)AND(v0.c0)))AND(t0.c0)))OR(t0.c2)))AND(v0.c0)) AS INTEGER)) ORDER BY ((t0.c69)<('|e-n\')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>>(vt0.c0)) IN ())) ORDER BY (((((t0.c69)) BETWEEN ((vt0.c0)) AND (('-627212422'))))<=((t0.c69 IN ()))) DESC  NULLS LAST, '1093264569'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c69)) BETWEEN ((vt0.c0)) AND (('-627212422'))))<=((t0.c69 IN ()))) DESC  NULLS LAST, '1093264569'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>>(vt0.c0)) IN ())) ORDER BY (((((t0.c69)) BETWEEN ((vt0.c0)) AND (('-627212422'))))<=((t0.c69 IN ()))) DESC  NULLS LAST, '1093264569'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0)>>(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c69)) BETWEEN ((vt0.c0)) AND (('-627212422'))))<=((t0.c69 IN ()))) DESC  NULLS LAST, '1093264569'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0)>>(vt0.c0)) IN ())) ORDER BY (((((t0.c69)) BETWEEN ((vt0.c0)) AND (('-627212422'))))<=((t0.c69 IN ()))) DESC  NULLS LAST, '1093264569'  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL) WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) NOT NULL))))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) NOT NULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL) WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) NOT NULL))))AND(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) NOT NULL))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 END) NOT NULL) WHERE (((((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(((vt0.c0) NOT NULL))))AND(v0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0 IN ()))AND(CAST(v0.c0 AS REAL)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)-(x'b8ca')))))AND(((v0.c0) IS FALSE))))AND(ABS(v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)-(x'b8ca')))))AND(((v0.c0) IS FALSE))))AND(ABS(v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0 IN ()))AND(CAST(v0.c0 AS REAL)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)-(x'b8ca')))))AND(((v0.c0) IS FALSE))))AND(ABS(v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))AND(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)-(x'b8ca')))))AND(((v0.c0) IS FALSE))))AND(ABS(v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c0 IN ()))AND(CAST(v0.c0 AS REAL)))) ORDER BY ((((((((v0.c0 COLLATE BINARY)OR(((v0.c0)-(x'b8ca')))))AND(((v0.c0) IS FALSE))))AND(ABS(v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON '162507465' WHERE (CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN ((v0.c0)>(v0.c0)) WHEN (- (t0.c69)) THEN (t0.c2 IN ()) WHEN ((vt0.c0) IS FALSE) THEN t0.c69 ELSE '0.3741812470019831' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN ((v0.c0)>(v0.c0)) WHEN (- (t0.c69)) THEN (t0.c2 IN ()) WHEN ((vt0.c0) IS FALSE) THEN t0.c69 ELSE '0.3741812470019831' END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON '162507465');
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON '162507465' WHERE (CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN ((v0.c0)>(v0.c0)) WHEN (- (t0.c69)) THEN (t0.c2 IN ()) WHEN ((vt0.c0) IS FALSE) THEN t0.c69 ELSE '0.3741812470019831' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN ((v0.c0)>(v0.c0)) WHEN (- (t0.c69)) THEN (t0.c2 IN ()) WHEN ((vt0.c0) IS FALSE) THEN t0.c69 ELSE '0.3741812470019831' END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN t0 ON '162507465');
SELECT ALL COUNT(*) FROM vt0, v0 RIGHT OUTER JOIN t0 ON '162507465' WHERE (CASE ((((v0.c0)AND(vt0.c0)))OR(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN ((v0.c0)>(v0.c0)) WHEN (- (t0.c69)) THEN (t0.c2 IN ()) WHEN ((vt0.c0) IS FALSE) THEN t0.c69 ELSE '0.3741812470019831' END);
SELECT * FROM vt0 WHERE ((((vt0.c0, 1.026311309E9, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1093264569' END, CAST(vt0.c0 AS TEXT), (('1604981892')>>(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY (- (((vt0.c0)>>(vt0.c0))))  NULLS FIRST, 1.552476528E9  NULLS FIRST, ((NULL)IS NOT(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 1.026311309E9, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1093264569' END, CAST(vt0.c0 AS TEXT), (('1604981892')>>(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>>(vt0.c0))))  NULLS FIRST, 1.552476528E9  NULLS FIRST, ((NULL)IS NOT(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, 1.026311309E9, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1093264569' END, CAST(vt0.c0 AS TEXT), (('1604981892')>>(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY (- (((vt0.c0)>>(vt0.c0))))  NULLS FIRST, 1.552476528E9  NULLS FIRST, ((NULL)IS NOT(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, 1.026311309E9, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1093264569' END, CAST(vt0.c0 AS TEXT), (('1604981892')>>(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)>>(vt0.c0))))  NULLS FIRST, 1.552476528E9  NULLS FIRST, ((NULL)IS NOT(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0, 1.026311309E9, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN '1093264569' END, CAST(vt0.c0 AS TEXT), (('1604981892')>>(vt0.c0)))) AND ((((vt0.c0)>>(vt0.c0)), (~ (vt0.c0)), (vt0.c0 IN (vt0.c0, vt0.c0)))))) ORDER BY (- (((vt0.c0)>>(vt0.c0))))  NULLS FIRST, 1.552476528E9  NULLS FIRST, ((NULL)IS NOT(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((- (v0.c0))) IS TRUE) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((- (v0.c0))) IS TRUE) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((- (v0.c0))) IS TRUE) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((- (v0.c0))) IS TRUE) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) ASC  NULLS FIRST);
SELECT ALL * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((- (v0.c0))) IS TRUE) WHERE (((CAST(t0.c0 AS INTEGER)) IS FALSE)) ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (v0.c0)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0) NOT BETWEEN (x'173a') AND (vt0.c0))))) ORDER BY ((((((vt0.c0) IS TRUE))OR((((vt0.c0))=((vt0.c0))))))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT BETWEEN (x'173a') AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR((((vt0.c0))=((vt0.c0))))))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0) NOT BETWEEN (x'173a') AND (vt0.c0))))) ORDER BY ((((((vt0.c0) IS TRUE))OR((((vt0.c0))=((vt0.c0))))))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) NOT BETWEEN (x'173a') AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0) IS TRUE))OR((((vt0.c0))=((vt0.c0))))))AND(((vt0.c0) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((~ (((v0.c0) NOT BETWEEN (x'173a') AND (vt0.c0))))) ORDER BY ((((((vt0.c0) IS TRUE))OR((((vt0.c0))=((vt0.c0))))))AND(((vt0.c0) ISNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c69)>=(t0.c69)))AND(((t0.c2)LIKE(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c69 END))) ORDER BY t0.c0 DESC, ((('2013812612' IN (t0.c0, t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((((t0.c69)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) DESC, ((t0.c2) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)>=(t0.c69)))AND(((t0.c2)LIKE(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c69 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC, ((('2013812612' IN (t0.c0, t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((((t0.c69)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) DESC, ((t0.c2) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c69)>=(t0.c69)))AND(((t0.c2)LIKE(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c69 END))) ORDER BY t0.c0 DESC, ((('2013812612' IN (t0.c0, t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((((t0.c69)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) DESC, ((t0.c2) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)>=(t0.c69)))AND(((t0.c2)LIKE(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c69 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0 DESC, ((('2013812612' IN (t0.c0, t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((((t0.c69)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) DESC, ((t0.c2) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c69)>=(t0.c69)))AND(((t0.c2)LIKE(t0.c0)))))OR(CASE WHEN t0.c2 THEN t0.c69 END))) ORDER BY t0.c0 DESC, ((('2013812612' IN (t0.c0, t0.c0))) BETWEEN (((t0.c2) NOT BETWEEN (vt0.c0) AND (t0.c2))) AND ((((t0.c69)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) DESC, ((t0.c2) IS FALSE) COLLATE RTRIM;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((0.5099910380596155)IS(t0.c69))) BETWEEN (vt0.c0) AND (((t0.c2)>>(t0.c69)))) WHERE (CAST(json_array(t0.c2, t0.c69) AS NUMERIC)) ORDER BY LTRIM((((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(json_array(t0.c2, t0.c69) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((0.5099910380596155)IS(t0.c69))) BETWEEN (vt0.c0) AND (((t0.c2)>>(t0.c69)))) ORDER BY LTRIM((((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((((0.5099910380596155)IS(t0.c69))) BETWEEN (vt0.c0) AND (((t0.c2)>>(t0.c69)))) WHERE (CAST(json_array(t0.c2, t0.c69) AS NUMERIC)) ORDER BY LTRIM((((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(json_array(t0.c2, t0.c69) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((((0.5099910380596155)IS(t0.c69))) BETWEEN (vt0.c0) AND (((t0.c2)>>(t0.c69)))) ORDER BY LTRIM((((t0.c2)) BETWEEN ((t0.c69)) AND ((t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0Xffffffffd537df2b AS TEXT)) ORDER BY vt0.c0 DESC, 0x6ed0d13  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffd537df2b AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, 0X6ed0d13  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(0Xffffffffd537df2b AS TEXT)) ORDER BY vt0.c0 DESC, 0x6ed0d13  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0Xffffffffd537df2b AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC, 0X6ed0d13  NULLS LAST);
SELECT * FROM t0, v0, vt0 WHERE (((((((t0.c69)OR(t0.c69)))AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) ORDER BY CASE CAST(-1.6505634E9 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN UNICODE(v0.c0) WHEN (((x'')) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) THEN (((('%-!)')OR(vt0.c0)))OR(t0.c2)) WHEN ((t0.c69) IS FALSE) THEN t0.c69 ELSE ((t0.c2) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69)OR(t0.c69)))AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE CAST(-1.6505634E9 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN UNICODE(v0.c0) WHEN (((x'')) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) THEN (((('%-!)')OR(vt0.c0)))OR(t0.c2)) WHEN ((t0.c69) IS FALSE) THEN t0.c69 ELSE ((t0.c2) NOTNULL) END DESC);
SELECT * FROM t0, v0, vt0 WHERE (((((((t0.c69)OR(t0.c69)))AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) ORDER BY CASE CAST(-1.6505634E9 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN UNICODE(v0.c0) WHEN (((x'')) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) THEN (((('%-!)')OR(vt0.c0)))OR(t0.c2)) WHEN ((t0.c69) IS FALSE) THEN t0.c69 ELSE ((t0.c2) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69)OR(t0.c69)))AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE CAST(-1.6505634E9 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN UNICODE(v0.c0) WHEN (((x'')) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) THEN (((('%-!)')OR(vt0.c0)))OR(t0.c2)) WHEN ((t0.c69) IS FALSE) THEN t0.c69 ELSE ((t0.c2) NOTNULL) END DESC);
SELECT * FROM t0, v0, vt0 WHERE (((((((t0.c69)OR(t0.c69)))AND(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE v0.c0 END))) ORDER BY CASE CAST(-1.6505634E9 AS REAL)  WHEN v0.c0 COLLATE NOCASE THEN UNICODE(v0.c0) WHEN (((x'')) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) THEN (((('%-!)')OR(vt0.c0)))OR(t0.c2)) WHEN ((t0.c69) IS FALSE) THEN t0.c69 ELSE ((t0.c2) NOTNULL) END DESC;
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0x50ac36c0 WHEN v0.c0 THEN 0.8324870438883635 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN 0x50ac36c0 WHEN v0.c0 THEN 0.8324870438883635 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0x50ac36c0 WHEN v0.c0 THEN 0.8324870438883635 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN v0.c0 THEN 0x50ac36c0 WHEN v0.c0 THEN 0.8324870438883635 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN 0x50ac36c0 WHEN v0.c0 THEN 0.8324870438883635 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL) ASC);
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL) ASC);
SELECT * FROM t0, v0 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS REAL)) ISNULL) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN (((NOT (v0.c0)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((NOT (v0.c0)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN (((NOT (v0.c0)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((NOT (v0.c0)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((v0.c0 IN ())) BETWEEN (v0.c0 COLLATE BINARY) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN (((NOT (v0.c0)))) AND ((v0.c0 COLLATE BINARY)))  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(x'71ff')))AND(NULL)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))AND(x'71ff')))AND(NULL)))AND(x''))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(x'71ff')))AND(NULL)))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)OR(v0.c0)))AND(x'71ff')))AND(NULL)))AND(x''))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((((((v0.c0)OR(v0.c0)))AND(x'71ff')))AND(NULL)))AND(x'')));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(v0.c0))) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>(v0.c0))) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>(v0.c0))) BETWEEN ((v0.c0 IN (v0.c0, v0.c0))) AND ((~ (v0.c0)))));
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT t0.c2)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c0)))+((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t0.c2)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c0)))+((~ (v0.c0)))));
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT t0.c2)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c0)))+((~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT t0.c2)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c0)))+((~ (v0.c0)))));
SELECT * FROM v0, t0 WHERE (HEX(DISTINCT t0.c2)) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c0)))+((~ (v0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c69) IS TRUE))AND((((t0.c69)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c0 IN ())))) ORDER BY (((t0.c2 IN (t0.c69, t0.c2)))<(CAST(t0.c2 AS INTEGER)))  NULLS LAST, CAST(t0.c69 AS NUMERIC) COLLATE BINARY, t0.c69;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69) IS TRUE))AND((((t0.c69)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN (t0.c69, t0.c2)))<(CAST(t0.c2 AS INTEGER)))  NULLS LAST, CAST(t0.c69 AS NUMERIC) COLLATE BINARY, t0.c69);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c69) IS TRUE))AND((((t0.c69)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c0 IN ())))) ORDER BY (((t0.c2 IN (t0.c69, t0.c2)))<(CAST(t0.c2 AS INTEGER)))  NULLS LAST, CAST(t0.c69 AS NUMERIC) COLLATE BINARY, t0.c69;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c69) IS TRUE))AND((((t0.c69)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN (t0.c69, t0.c2)))<(CAST(t0.c2 AS INTEGER)))  NULLS LAST, CAST(t0.c69 AS NUMERIC) COLLATE BINARY, t0.c69);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c69) IS TRUE))AND((((t0.c69)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))))OR((t0.c0 IN ())))) ORDER BY (((t0.c2 IN (t0.c69, t0.c2)))<(CAST(t0.c2 AS INTEGER)))  NULLS LAST, CAST(t0.c69 AS NUMERIC) COLLATE BINARY, t0.c69;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (UNICODE((('&}')OR(-6.27212422E8))));
SELECT SUM(count) FROM (SELECT ((UNICODE((('&}')OR(-6.27212422E8)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (UNICODE((('&}')OR(-6.27212422E8))));
SELECT SUM(count) FROM (SELECT ((UNICODE((('&}')OR(-6.27212422E8)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (UNICODE((('&}')OR(-6.27212422E8))));
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c2))))<=(-7.17758677E8))) ORDER BY '1657976134' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c2))))<=(-7.17758677E8))) IS TRUE)  as count FROM t0 ORDER BY '1657976134' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c2))))<=(-7.17758677E8))) ORDER BY '1657976134' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c0))>=((t0.c2))))<=(-7.17758677E8))) IS TRUE)  as count FROM t0 ORDER BY '1657976134' DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0))>=((t0.c2))))<=(-7.17758677E8))) ORDER BY '1657976134' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))>=((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c69 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))>=((t0.c0)))))=((CASE WHEN t0.c2 THEN t0.c69 END)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))>=((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c69 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0))>=((t0.c0)))))=((CASE WHEN t0.c2 THEN t0.c69 END)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0, vt0 WHERE (((((((t0.c0))>=((t0.c0)))))==((CASE WHEN t0.c2 THEN t0.c69 END))));
SELECT ALL * FROM vt0, v0, t0 WHERE (((0.33192158857012743) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.33192158857012743) IS TRUE)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((0.33192158857012743) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((0.33192158857012743) IS TRUE)) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL * FROM vt0, v0, t0 WHERE (((0.33192158857012743) IS TRUE));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (0Xfffffffff47e5483))) ORDER BY (- (t0.c69)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0xfffffffff47e5483))) IS TRUE)  as count FROM t0, v0 ORDER BY (- (t0.c69)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (0Xfffffffff47e5483))) ORDER BY (- (t0.c69)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (0xfffffffff47e5483))) IS TRUE)  as count FROM t0, v0 ORDER BY (- (t0.c69)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (0Xfffffffff47e5483))) ORDER BY (- (t0.c69)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM t0 WHERE (((((t0.c69) BETWEEN (t0.c69) AND (t0.c2))) IS TRUE)) ORDER BY HEX(CAST(1552476528 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((t0.c69) BETWEEN (t0.c69) AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY HEX(CAST(1552476528 AS TEXT)));
SELECT * FROM t0 WHERE (((((t0.c69) BETWEEN (t0.c69) AND (t0.c2))) IS TRUE)) ORDER BY HEX(CAST(1552476528 AS TEXT));
SELECT SUM(count) FROM (SELECT ((((((t0.c69) BETWEEN (t0.c69) AND (t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY HEX(CAST(1552476528 AS TEXT)));
SELECT * FROM t0 WHERE (((((t0.c69) BETWEEN (t0.c69) AND (t0.c2))) IS TRUE)) ORDER BY HEX(CAST(1552476528 AS TEXT));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '1315271826' LEFT OUTER JOIN t0 ON ((0x36f55431 COLLATE NOCASE)=(((x'') IS TRUE))) WHERE (((((((((t0.c69)OR(v0.c0)))OR((NOT (NULL)))))AND(((t0.c0) NOT NULL))))AND(((t0.c69) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c69)OR(v0.c0)))OR((NOT (NULL)))))AND(((t0.c0) NOT NULL))))AND(((t0.c69) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '1315271826' LEFT OUTER JOIN t0 ON ((0x36f55431 COLLATE NOCASE)==(((x'') IS TRUE))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '1315271826' LEFT OUTER JOIN t0 ON ((0x36f55431 COLLATE NOCASE)=(((x'') IS TRUE))) WHERE (((((((((t0.c69)OR(v0.c0)))OR((NOT (NULL)))))AND(((t0.c0) NOT NULL))))AND(((t0.c69) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((t0.c69)OR(v0.c0)))OR((NOT (NULL)))))AND(((t0.c0) NOT NULL))))AND(((t0.c69) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON '1315271826' LEFT OUTER JOIN t0 ON ((0x36f55431 COLLATE NOCASE)==(((x'') IS TRUE))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON '1315271826' LEFT OUTER JOIN t0 ON ((0x36f55431 COLLATE NOCASE)=(((x'') IS TRUE))) WHERE (((((((((t0.c69)OR(v0.c0)))OR((NOT (NULL)))))AND(((t0.c0) NOT NULL))))AND(((t0.c69) ISNULL))));
SELECT * FROM v0 WHERE (((0.4729001000343185 COLLATE BINARY) IS TRUE)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT ''), (v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)AND(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.4729001000343185 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT ''), (v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)AND(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((0.4729001000343185 COLLATE BINARY) IS TRUE)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT ''), (v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)AND(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.4729001000343185 COLLATE BINARY) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT ''), (v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)AND(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0 COLLATE RTRIM))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (((0.4729001000343185 COLLATE BINARY) IS TRUE)) ORDER BY (((v0.c0, v0.c0, v0.c0)) BETWEEN ((TRIM(DISTINCT ''), (v0.c0 IN ()), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) AND ((((v0.c0)AND(v0.c0)), ((v0.c0)/(v0.c0)), v0.c0 COLLATE RTRIM))) DESC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (((t0.c0)OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((t0.c0)OR(t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0)OR(t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((t0.c0)OR(t0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM vt0 INDEXED BY i32, v0 WHERE (vt0.c0) ORDER BY (((+ (v0.c0))) BETWEEN ((- (v0.c0))) AND (((vt0.c0)IS(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 ORDER BY (((+ (v0.c0))) BETWEEN ((- (v0.c0))) AND (((vt0.c0)IS(v0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 INDEXED BY i32, v0 WHERE (vt0.c0) ORDER BY (((+ (v0.c0))) BETWEEN ((- (v0.c0))) AND (((vt0.c0)IS(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 ORDER BY (((+ (v0.c0))) BETWEEN ((- (v0.c0))) AND (((vt0.c0)IS(v0.c0)))) ASC);
SELECT * FROM v0, t0, vt0 WHERE ('4%Q&J') ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (('4%Q&J') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS INTEGER));
SELECT * FROM v0, t0, vt0 WHERE ('4%Q&J') ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (('4%Q&J') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS INTEGER));
SELECT * FROM v0, t0, vt0 WHERE ('4%Q&J') ORDER BY CAST(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) AS INTEGER);
SELECT ALL * FROM t0 WHERE (CAST((('544564133')>>(t0.c69)) AS NUMERIC)) ORDER BY ABS((((t0.c69, t0.c0, t0.c2, t0.c2, t0.c2))<((t0.c69, t0.c69, x'', t0.c69, t0.c0)))) ASC, t0.c69  NULLS LAST, (- (CAST(t0.c69 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('544564133')>>(t0.c69)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ABS((((t0.c69, t0.c0, t0.c2, t0.c2, t0.c2))<((t0.c69, t0.c69, x'', t0.c69, t0.c0)))) ASC, t0.c69  NULLS LAST, (- (CAST(t0.c69 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((('544564133')>>(t0.c69)) AS NUMERIC)) ORDER BY ABS((((t0.c69, t0.c0, t0.c2, t0.c2, t0.c2))<((t0.c69, t0.c69, x'', t0.c69, t0.c0)))) ASC, t0.c69  NULLS LAST, (- (CAST(t0.c69 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('544564133')>>(t0.c69)) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY ABS((((t0.c69, t0.c0, t0.c2, t0.c2, t0.c2))<((t0.c69, t0.c69, x'', t0.c69, t0.c0)))) ASC, t0.c69  NULLS LAST, (- (CAST(t0.c69 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST((('544564133')>>(t0.c69)) AS NUMERIC)) ORDER BY ABS((((t0.c69, t0.c0, t0.c2, t0.c2, t0.c2))<((t0.c69, t0.c69, x'', t0.c69, t0.c0)))) ASC, t0.c69  NULLS LAST, (- (CAST(t0.c69 AS BLOB))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((t0.c2 IN ())))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- ((t0.c2 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (x'f33c' IN (vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (x'f33c' IN (vt0.c0)), NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (x'f33c' IN (vt0.c0)), NULL));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (x'f33c' IN (vt0.c0)), NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (TRIM(DISTINCT (x'f33c' IN (vt0.c0)), NULL));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOTNULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0)==(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0)==(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0)=(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((vt0.c0)==(vt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE ((0.9234075562302055 IN ()) COLLATE RTRIM) ORDER BY ((+ (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.9234075562302055 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((0.9234075562302055 IN ()) COLLATE RTRIM) ORDER BY ((+ (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0.9234075562302055 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((0.9234075562302055 IN ()) COLLATE RTRIM) ORDER BY ((+ (v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON STRFTIME(((((((((t0.c69)OR(t0.c2)))AND(v0.c0)))AND(v0.c0)))AND(t0.c0)), t0.c2 COLLATE NOCASE, CASE t0.c2  WHEN v0.c0 THEN x'' ELSE t0.c69 END) WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0)<>(t0.c69)))))) ORDER BY (((((t0.c2 IN ()))OR((t0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN t0.c69 ELSE t0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c69)) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0)<>(t0.c69)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON STRFTIME(((((((((t0.c69)OR(t0.c2)))AND(v0.c0)))AND(v0.c0)))AND(t0.c0)), t0.c2 COLLATE NOCASE, CASE t0.c2  WHEN v0.c0 THEN x'' ELSE t0.c69 END) ORDER BY (((((t0.c2 IN ()))OR((t0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN t0.c69 ELSE t0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON STRFTIME(((((((((t0.c69)OR(t0.c2)))AND(v0.c0)))AND(v0.c0)))AND(t0.c0)), t0.c2 COLLATE NOCASE, CASE t0.c2  WHEN v0.c0 THEN x'' ELSE t0.c69 END) WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0)<>(t0.c69)))))) ORDER BY (((((t0.c2 IN ()))OR((t0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN t0.c69 ELSE t0.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c69)) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0)<>(t0.c69)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON STRFTIME(((((((((t0.c69)OR(t0.c2)))AND(v0.c0)))AND(v0.c0)))AND(t0.c0)), t0.c2 COLLATE NOCASE, CASE t0.c2  WHEN v0.c0 THEN x'' ELSE t0.c69 END) ORDER BY (((((t0.c2 IN ()))OR((t0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN t0.c69 ELSE t0.c2 END)) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON STRFTIME(((((((((t0.c69)OR(t0.c2)))AND(v0.c0)))AND(v0.c0)))AND(t0.c0)), t0.c2 COLLATE NOCASE, CASE t0.c2  WHEN v0.c0 THEN x'' ELSE t0.c69 END) WHERE ((((t0.c69)) NOT BETWEEN ((((t0.c2) NOTNULL))) AND ((((t0.c0)<>(t0.c69)))))) ORDER BY (((((t0.c2 IN ()))OR((t0.c0 IN ()))))AND(CASE v0.c0  WHEN v0.c0 THEN t0.c69 ELSE t0.c2 END)) DESC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ()))<(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))<(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE (((x'5b59')*((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'5b59')*((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((x'5b59')*((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'5b59')*((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((x'5b59')*((+ (v0.c0)))));
SELECT ALL * FROM vt0, v0, t0 WHERE (NULLIF(DISTINCT t0.c2, (~ (t0.c69)))) ORDER BY IFNULL(t0.c2, load_extension(t0.c2, '{}'));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT t0.c2, (~ (t0.c69)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY IFNULL(t0.c2, load_extension(t0.c2, '{}')));
SELECT ALL * FROM vt0, v0, t0 WHERE (NULLIF(DISTINCT t0.c2, (~ (t0.c69)))) ORDER BY IFNULL(t0.c2, load_extension(t0.c2, '{}'));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT t0.c2, (~ (t0.c69)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY IFNULL(t0.c2, load_extension(t0.c2, '{}')));
SELECT ALL * FROM vt0, v0, t0 WHERE (NULLIF(DISTINCT t0.c2, (~ (t0.c69)))) ORDER BY IFNULL(t0.c2, load_extension(t0.c2, '{}'));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c0)IS(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ((((v0.c0)IS(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(x''))) ORDER BY ((((t0.c69) NOT BETWEEN (vt0.c0) AND (t0.c69))) BETWEEN ('') AND (t0.c69)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c69) NOT BETWEEN (vt0.c0) AND (t0.c69))) BETWEEN ('') AND (t0.c69)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(x''))) ORDER BY ((((t0.c69) NOT BETWEEN (vt0.c0) AND (t0.c69))) BETWEEN ('') AND (t0.c69)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c69) NOT BETWEEN (vt0.c0) AND (t0.c69))) BETWEEN ('') AND (t0.c69)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((t0.c0) NOTNULL))AND(((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))AND(x''))) ORDER BY ((((t0.c69) NOT BETWEEN (vt0.c0) AND (t0.c69))) BETWEEN ('') AND (t0.c69)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (- (CASE WHEN '0.499133798688309' THEN t0.c0 WHEN t0.c69 THEN vt0.c0 WHEN 0.5449790970208034 THEN v0.c0 ELSE v0.c0 END)) INNER JOIN vt0 ON t0.c0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- (CASE WHEN '0.499133798688309' THEN t0.c0 WHEN t0.c69 THEN vt0.c0 WHEN 0.5449790970208034 THEN v0.c0 ELSE v0.c0 END)) INNER JOIN vt0 ON t0.c0);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (- (CASE WHEN '0.499133798688309' THEN t0.c0 WHEN t0.c69 THEN vt0.c0 WHEN 0.5449790970208034 THEN v0.c0 ELSE v0.c0 END)) INNER JOIN vt0 ON t0.c0 WHERE (((vt0.c0)OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (- (CASE WHEN '0.499133798688309' THEN t0.c0 WHEN t0.c69 THEN vt0.c0 WHEN 0.5449790970208034 THEN v0.c0 ELSE v0.c0 END)) INNER JOIN vt0 ON t0.c0);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS REAL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((v0.c0) NOT NULL) WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS REAL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((v0.c0) NOT NULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS REAL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((v0.c0) NOT NULL) WHERE (NULL COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS REAL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((v0.c0) NOT NULL));
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS REAL)) NOTNULL) RIGHT OUTER JOIN v0 ON ((v0.c0) NOT NULL) WHERE (NULL COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNICODE(t0.c0) AS INTEGER)) ORDER BY CASE WHEN (((t0.c69, t0.c69, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c69)) AND ((t0.c2, 0.602249955779754, t0.c2))) THEN (t0.c69 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (((t0.c69, t0.c69, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c69)) AND ((t0.c2, 0.602249955779754, t0.c2))) THEN (t0.c69 IN ()) END ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNICODE(t0.c0) AS INTEGER)) ORDER BY CASE WHEN (((t0.c69, t0.c69, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c69)) AND ((t0.c2, 0.602249955779754, t0.c2))) THEN (t0.c69 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(t0.c0) AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (((t0.c69, t0.c69, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c69)) AND ((t0.c2, 0.602249955779754, t0.c2))) THEN (t0.c69 IN ()) END ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(UNICODE(t0.c0) AS INTEGER)) ORDER BY CASE WHEN (((t0.c69, t0.c69, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c69)) AND ((t0.c2, 0.602249955779754, t0.c2))) THEN (t0.c69 IN ()) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY HEX(((vt0.c0)IS NOT(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY HEX(((vt0.c0)IS NOT(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY HEX(((vt0.c0)IS NOT(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY HEX(((vt0.c0)IS NOT(vt0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY HEX(((vt0.c0)IS NOT(vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((json_quote(NULL))!=((('228418136')GLOB(t0.c0))))) ORDER BY (t0.c69 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(NULL))!=((('228418136')GLOB(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c69 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((json_quote(NULL))!=((('228418136')GLOB(t0.c0))))) ORDER BY (t0.c69 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_quote(NULL))!=((('228418136')GLOB(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (t0.c69 IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((json_quote(NULL))!=((('228418136')GLOB(t0.c0))))) ORDER BY (t0.c69 IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((json_extract(v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c0)+(v0.c0))))) ORDER BY (- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((json_extract(v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c0)+(v0.c0))))) ORDER BY (- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((json_extract(v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c0)+(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((json_extract(v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0))>=((v0.c0)))) AND (((v0.c0)+(v0.c0))))) ORDER BY (- (((((v0.c0)OR(v0.c0)))AND(v0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(0Xffffffffedcac177)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(0Xffffffffedcac177)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(0Xffffffffedcac177)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)AND(v0.c0)))AND(0Xffffffffedcac177)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((((vt0.c0)AND(v0.c0)))AND(0Xffffffffedcac177)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)) ORDER BY CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END COLLATE RTRIM COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((- (-502243765))) NOT NULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)<('aq')), (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((('-870580406') IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (-502243765))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)<('aq')), (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((('-870580406') IS TRUE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (-502243765))) NOT NULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)<('aq')), (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((('-870580406') IS TRUE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (-502243765))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)<('aq')), (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((('-870580406') IS TRUE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((- (-502243765))) NOT NULL)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL END)<('aq')), (((NULL)) NOT BETWEEN (((~ (vt0.c0)))) AND (((('-870580406') IS TRUE)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c69  WHEN 0Xffffffffc6b3e3c1 THEN v0.c0 ELSE t0.c0 END)<=((t0.c2 IN (vt0.c0))))) ORDER BY LIKELIHOOD(DISTINCT t0.c0, 0.4949243732101347) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c69  WHEN 0xffffffffc6b3e3c1 THEN v0.c0 ELSE t0.c0 END)<=((t0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELIHOOD(DISTINCT t0.c0, 0.4949243732101347) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c69  WHEN 0Xffffffffc6b3e3c1 THEN v0.c0 ELSE t0.c0 END)<=((t0.c2 IN (vt0.c0))))) ORDER BY LIKELIHOOD(DISTINCT t0.c0, 0.4949243732101347) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c69  WHEN 0xffffffffc6b3e3c1 THEN v0.c0 ELSE t0.c0 END)<=((t0.c2 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY LIKELIHOOD(DISTINCT t0.c0, 0.4949243732101347) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, v0, t0 WHERE (((CASE t0.c69  WHEN 0Xffffffffc6b3e3c1 THEN v0.c0 ELSE t0.c0 END)<=((t0.c2 IN (vt0.c0))))) ORDER BY LIKELIHOOD(DISTINCT t0.c0, 0.4949243732101347) COLLATE BINARY ASC;
SELECT * FROM v0 CROSS JOIN t0 ON COALESCE(DISTINCT 0.9918646363098284, CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) WHERE ((((((t0.c69))<=(('-1060160228'))))||(((t0.c0)*(t0.c2))))) ORDER BY TRIM(DISTINCT t0.c0, t0.c69) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c69))<=(('-1060160228'))))||(((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON COALESCE(DISTINCT 0.9918646363098284, CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) ORDER BY TRIM(DISTINCT t0.c0, t0.c69) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON COALESCE(DISTINCT 0.9918646363098284, CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) WHERE ((((((t0.c69))<=(('-1060160228'))))||(((t0.c0)*(t0.c2))))) ORDER BY TRIM(DISTINCT t0.c0, t0.c69) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c69))<=(('-1060160228'))))||(((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON COALESCE(DISTINCT 0.9918646363098284, CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) ORDER BY TRIM(DISTINCT t0.c0, t0.c69) COLLATE RTRIM DESC  NULLS FIRST);
SELECT * FROM v0 CROSS JOIN t0 ON COALESCE(DISTINCT 0.9918646363098284, CASE WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END) WHERE ((((((t0.c69))<=(('-1060160228'))))||(((t0.c0)*(t0.c2))))) ORDER BY TRIM(DISTINCT t0.c0, t0.c69) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))OR(t0.c2 COLLATE BINARY))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))OR(t0.c2 COLLATE BINARY))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))OR(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))OR(t0.c2 COLLATE BINARY))) ORDER BY (CASE WHEN t0.c0 THEN t0.c0 END IN ());
SELECT * FROM v0, t0 WHERE ((((((NOT (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))AND(t0.c69))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c69 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))AND(t0.c69))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c69 IN (t0.c2)))));
SELECT * FROM v0, t0 WHERE ((((((NOT (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))AND(t0.c69))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c69 IN (t0.c2))));
SELECT SUM(count) FROM (SELECT (((((((NOT (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))AND(t0.c69))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c69 IN (t0.c2)))));
SELECT * FROM v0, t0 WHERE ((((((NOT (v0.c0)))AND(((v0.c0) BETWEEN (v0.c0) AND (t0.c0)))))AND(((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(v0.c0)))AND(t0.c69))))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c69 IN (t0.c2))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((v0.c0) ISNULL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c69)) THEN ((((t0.c2)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY)&(CAST(t0.c0 AS INTEGER))) WHERE (json_valid(t0.c2));
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c2)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c69)) THEN ((((t0.c2)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY)&(CAST(t0.c0 AS INTEGER))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c69)) THEN ((((t0.c2)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY)&(CAST(t0.c0 AS INTEGER))) WHERE (json_valid(t0.c2));
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c2)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE WHEN ((vt0.c0) BETWEEN (t0.c0) AND (t0.c69)) THEN ((((t0.c2)OR(vt0.c0)))AND(v0.c0)) END LEFT OUTER JOIN t0 ON ((t0.c69 COLLATE BINARY)&(CAST(t0.c0 AS INTEGER))));
SELECT * FROM v0, t0, vt0 WHERE (x'') ORDER BY CASE (((x'', t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c69, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c0)))  WHEN ((0.8275340166473508) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CASE (((x'', t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c69, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c0)))  WHEN ((0.8275340166473508) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) ISNULL) END);
SELECT * FROM v0, t0, vt0 WHERE (x'') ORDER BY CASE (((x'', t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c69, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c0)))  WHEN ((0.8275340166473508) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0, vt0 ORDER BY CASE (((x'', t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c69, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c0)))  WHEN ((0.8275340166473508) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) ISNULL) END);
SELECT * FROM v0, t0, vt0 WHERE (x'') ORDER BY CASE (((x'', t0.c2, t0.c2)) NOT BETWEEN ((t0.c2, t0.c69, t0.c2)) AND ((vt0.c0, vt0.c0, t0.c0)))  WHEN ((0.8275340166473508) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN t0.c2 COLLATE NOCASE ELSE ((t0.c2) ISNULL) END;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((((vt0.c0))=((t0.c69))))OR(t0.c69)))OR((((vt0.c0, t0.c69, NULL))!=((vt0.c0, t0.c2, t0.c0))))))OR(t0.c69)))OR(((vt0.c0)AND(t0.c2)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((t0.c69 IN ()))) WHERE (((((CAST(t0.c2 AS INTEGER))OR(((t0.c0)=(t0.c69)))))OR((t0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c69) AND (t0.c2)))>(((t0.c69)<(t0.c69))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS INTEGER))OR(((t0.c0)==(t0.c69)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((((vt0.c0))=((t0.c69))))OR(t0.c69)))OR((((vt0.c0, t0.c69, NULL))<>((vt0.c0, t0.c2, t0.c0))))))OR(t0.c69)))OR(((vt0.c0)AND(t0.c2)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((t0.c69 IN ()))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c69) AND (t0.c2)))>(((t0.c69)<(t0.c69))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((((vt0.c0))=((t0.c69))))OR(t0.c69)))OR((((vt0.c0, t0.c69, NULL))!=((vt0.c0, t0.c2, t0.c0))))))OR(t0.c69)))OR(((vt0.c0)AND(t0.c2)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((t0.c69 IN ()))) WHERE (((((CAST(t0.c2 AS INTEGER))OR(((t0.c0)=(t0.c69)))))OR((t0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c69) AND (t0.c2)))>(((t0.c69)<(t0.c69))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c2 AS INTEGER))OR(((t0.c0)==(t0.c69)))))OR((t0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((((vt0.c0))=((t0.c69))))OR(t0.c69)))OR((((vt0.c0, t0.c69, NULL))<>((vt0.c0, t0.c2, t0.c0))))))OR(t0.c69)))OR(((vt0.c0)AND(t0.c2)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((t0.c69 IN ()))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c69) AND (t0.c2)))>(((t0.c69)<(t0.c69))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((((((((((((((vt0.c0))=((t0.c69))))OR(t0.c69)))OR((((vt0.c0, t0.c69, NULL))!=((vt0.c0, t0.c2, t0.c0))))))OR(t0.c69)))OR(((vt0.c0)AND(t0.c2)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND((t0.c69 IN ()))) WHERE (((((CAST(t0.c2 AS INTEGER))OR(((t0.c0)=(t0.c69)))))OR((t0.c0 IN ())))) ORDER BY ((((vt0.c0) NOT BETWEEN (t0.c69) AND (t0.c2)))>(((t0.c69)<(t0.c69))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c69 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(t0.c69 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c69 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(t0.c69 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(t0.c69 AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c69 IN ())) NOT BETWEEN (CAST(t0.c0 AS INTEGER)) AND (CAST(t0.c69 AS NUMERIC))));
SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c69)OR(t0.c2)) IN ()) DESC, CASE ((t0.c2)OR(t0.c2))  WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((t0.c69)||(0X5aea7433)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c69)OR(t0.c2)) IN ()) DESC, CASE ((t0.c2)OR(t0.c2))  WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((t0.c69)||(0x5aea7433)) END  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c69)OR(t0.c2)) IN ()) DESC, CASE ((t0.c2)OR(t0.c2))  WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((t0.c69)||(0X5aea7433)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c69)OR(t0.c2)) IN ()) DESC, CASE ((t0.c2)OR(t0.c2))  WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((t0.c69)||(0x5aea7433)) END  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE ((NOT (t0.c0)) COLLATE NOCASE) ORDER BY (((t0.c69)OR(t0.c2)) IN ()) DESC, CASE ((t0.c2)OR(t0.c2))  WHEN ((((t0.c0)OR(t0.c2)))AND(t0.c2)) THEN ((t0.c0) BETWEEN (v0.c0) AND (v0.c0)) ELSE ((t0.c69)||(0X5aea7433)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE ('Lb') ORDER BY (NOT (((vt0.c0)==(0.3450311348673022))));
SELECT SUM(count) FROM (SELECT (('Lb') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)=(0.3450311348673022)))));
SELECT * FROM vt0 WHERE ('Lb') ORDER BY (NOT (((vt0.c0)==(0.3450311348673022))));
SELECT SUM(count) FROM (SELECT (('Lb') IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0)=(0.3450311348673022)))));
SELECT * FROM vt0 WHERE ('Lb') ORDER BY (NOT (((vt0.c0)==(0.3450311348673022))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (v0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (v0.c0 IN ()) ASC);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (vt0.c0 COLLATE NOCASE) ORDER BY (v0.c0 IN ()) ASC;
SELECT ALL * FROM t0 INNER JOIN v0 ON ((CASE t0.c69  WHEN t0.c69 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((t0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON (((t0.c0 COLLATE BINARY, (t0.c0 IN (t0.c2)), ((t0.c69)IS NOT(t0.c0))))<>((0.14522356481587773, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c0 AS REAL)))) WHERE (((((vt0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ('61b'))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM ASC, ((v0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ('61b'))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((CASE t0.c69  WHEN t0.c69 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((t0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON (((t0.c0 COLLATE BINARY, (t0.c0 IN (t0.c2)), ((t0.c69)IS NOT(t0.c0))))!=((0.14522356481587773, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c0 AS REAL)))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM ASC, ((v0.c0) IS FALSE));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((CASE t0.c69  WHEN t0.c69 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((t0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON (((t0.c0 COLLATE BINARY, (t0.c0 IN (t0.c2)), ((t0.c69)IS NOT(t0.c0))))<>((0.14522356481587773, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c0 AS REAL)))) WHERE (((((vt0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ('61b'))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM ASC, ((v0.c0) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(t0.c0))) NOT BETWEEN (((t0.c0)GLOB(t0.c0))) AND ('61b'))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((CASE t0.c69  WHEN t0.c69 THEN v0.c0 WHEN v0.c0 THEN t0.c0 WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)LIKE(((t0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON (((t0.c0 COLLATE BINARY, (t0.c0 IN (t0.c2)), ((t0.c69)IS NOT(t0.c0))))!=((0.14522356481587773, ((t0.c2) BETWEEN (t0.c0) AND (t0.c2)), CAST(t0.c0 AS REAL)))) ORDER BY LIKELY(DISTINCT t0.c0) COLLATE RTRIM ASC, ((v0.c0) IS FALSE));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (((((v0.c0)GLOB(v0.c0))))>=((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (((((v0.c0)GLOB(v0.c0))))>=((v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (((((v0.c0)GLOB(v0.c0))))>=((v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (((((v0.c0)GLOB(v0.c0))))>=((v0.c0))) DESC);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS REAL), (((((v0.c0)GLOB(v0.c0))))>=((v0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)OR(v0.c0)))OR(t0.c69)) IN (v0.c0)) LEFT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c0 END)GLOB(CAST(t0.c69 AS REAL))) WHERE (((((((v0.c0)AND(t0.c2)))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST, CAST(PRINTF(vt0.c0, vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c2)))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)OR(v0.c0)))OR(t0.c69)) IN (v0.c0)) LEFT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c0 END)GLOB(CAST(t0.c69 AS REAL))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST, CAST(PRINTF(vt0.c0, vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)OR(v0.c0)))OR(t0.c69)) IN (v0.c0)) LEFT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c0 END)GLOB(CAST(t0.c69 AS REAL))) WHERE (((((((v0.c0)AND(t0.c2)))OR(vt0.c0)))OR((vt0.c0 IN ())))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST, CAST(PRINTF(vt0.c0, vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(t0.c2)))OR(vt0.c0)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON (((((v0.c0)OR(v0.c0)))OR(t0.c69)) IN (v0.c0)) LEFT OUTER JOIN v0 ON ((CASE vt0.c0  WHEN vt0.c0 THEN t0.c2 ELSE t0.c0 END)GLOB(CAST(t0.c69 AS REAL))) ORDER BY ((((v0.c0)<=(v0.c0)))/(((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))) ASC  NULLS LAST, CAST(PRINTF(vt0.c0, vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>('KB>d-<Dg?')))>>(NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (~ (((vt0.c0)=(vt0.c0)))), vt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>('KB>d-<Dg?')))>>(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, (~ (((vt0.c0)==(vt0.c0)))), vt0.c0 COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>('KB>d-<Dg?')))>>(NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (~ (((vt0.c0)=(vt0.c0)))), vt0.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<>('KB>d-<Dg?')))>>(NULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC  NULLS FIRST, (~ (((vt0.c0)==(vt0.c0)))), vt0.c0 COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((((vt0.c0)<>('KB>d-<Dg?')))>>(NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (~ (((vt0.c0)=(vt0.c0)))), vt0.c0 COLLATE RTRIM;
SELECT ALL * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN (0.16553701161629564) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END, ((load_extension(v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) BETWEEN (0.16553701161629564) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END, ((load_extension(v0.c0)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN (0.16553701161629564) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END, ((load_extension(v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) BETWEEN (0.16553701161629564) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END, ((load_extension(v0.c0)) ISNULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0)>=(v0.c0))) BETWEEN (0.16553701161629564) AND (((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END ELSE v0.c0 END, ((load_extension(v0.c0)) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2))<((t0.c69))))/(((t0.c69) IS FALSE)))) ORDER BY CASE (((t0.c69)) NOT BETWEEN ((t0.c0)) AND ((t0.c69)))  WHEN CAST(0.862704611507383 AS REAL) THEN (((t0.c69))<=((t0.c2))) ELSE t0.c69 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))<((t0.c69))))/(((t0.c69) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c69)) NOT BETWEEN ((t0.c0)) AND ((t0.c69)))  WHEN CAST(0.862704611507383 AS REAL) THEN (((t0.c69))<=((t0.c2))) ELSE t0.c69 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2))<((t0.c69))))/(((t0.c69) IS FALSE)))) ORDER BY CASE (((t0.c69)) NOT BETWEEN ((t0.c0)) AND ((t0.c69)))  WHEN CAST(0.862704611507383 AS REAL) THEN (((t0.c69))<=((t0.c2))) ELSE t0.c69 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))<((t0.c69))))/(((t0.c69) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c69)) NOT BETWEEN ((t0.c0)) AND ((t0.c69)))  WHEN CAST(0.862704611507383 AS REAL) THEN (((t0.c69))<=((t0.c2))) ELSE t0.c69 END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2))<((t0.c69))))/(((t0.c69) IS FALSE)))) ORDER BY CASE (((t0.c69)) NOT BETWEEN ((t0.c0)) AND ((t0.c69)))  WHEN CAST(0.862704611507383 AS REAL) THEN (((t0.c69))<=((t0.c2))) ELSE t0.c69 END ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c69)<(t0.c0))) AND ((((vt0.c0, t0.c69, t0.c2)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c69)<(t0.c0))) AND ((((vt0.c0, t0.c69, t0.c2)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, t0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c69)<(t0.c0))) AND ((((vt0.c0, t0.c69, t0.c2)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c69)<(t0.c0))) AND ((((vt0.c0, t0.c69, t0.c2)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, t0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((t0.c69)<(t0.c0))) AND ((((vt0.c0, t0.c69, t0.c2)) BETWEEN ((t0.c2, vt0.c0, t0.c2)) AND ((vt0.c0, t0.c0, vt0.c0))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((t0.c0, v0.c0, NULL)) BETWEEN ((((vt0.c0)>=(1.138119056E9)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)), t0.c2 COLLATE BINARY)) AND ((((((t0.c69)OR(t0.c69)))AND(t0.c0)), NULL, UPPER(t0.c0))))) ORDER BY ((((t0.c2)&(v0.c0)))=((((v0.c0))<=((t0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, v0.c0, NULL)) BETWEEN ((((vt0.c0)>=(1.138119056E9)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)), t0.c2 COLLATE BINARY)) AND ((((((t0.c69)OR(t0.c69)))AND(t0.c0)), NULL, UPPER(t0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c2)&(v0.c0)))=((((v0.c0))<=((t0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((t0.c0, v0.c0, NULL)) BETWEEN ((((vt0.c0)>=(1.138119056E9)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)), t0.c2 COLLATE BINARY)) AND ((((((t0.c69)OR(t0.c69)))AND(t0.c0)), NULL, UPPER(t0.c0))))) ORDER BY ((((t0.c2)&(v0.c0)))=((((v0.c0))<=((t0.c2))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, v0.c0, NULL)) BETWEEN ((((vt0.c0)>=(1.138119056E9)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)), t0.c2 COLLATE BINARY)) AND ((((((t0.c69)OR(t0.c69)))AND(t0.c0)), NULL, UPPER(t0.c0))))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((((t0.c2)&(v0.c0)))=((((v0.c0))<=((t0.c2))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE ((((t0.c0, v0.c0, NULL)) BETWEEN ((((vt0.c0)>=(1.138119056E9)), ((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)), t0.c2 COLLATE BINARY)) AND ((((((t0.c69)OR(t0.c69)))AND(t0.c0)), NULL, UPPER(t0.c0))))) ORDER BY ((((t0.c2)&(v0.c0)))=((((v0.c0))<=((t0.c2))))) ASC  NULLS LAST;
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON HEX(DISTINCT ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) WHERE ((~ (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(v0.c0)))<<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(v0.c0)))<<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(v0.c0)))<<(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(v0.c0)))<<(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(v0.c0)))<<(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM t0 INDEXED BY i32, v0 WHERE (t0.c2 COLLATE NOCASE) ORDER BY (CASE WHEN t0.c0 THEN t0.c69 END IN (((t0.c0)/(t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i32, v0 ORDER BY (CASE WHEN t0.c0 THEN t0.c69 END IN (((t0.c0)/(t0.c69)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INDEXED BY i32, v0 WHERE (t0.c2 COLLATE NOCASE) ORDER BY (CASE WHEN t0.c0 THEN t0.c69 END IN (((t0.c0)/(t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2 COLLATE NOCASE) IS TRUE)  as count FROM t0 INDEXED BY i32, v0 ORDER BY (CASE WHEN t0.c0 THEN t0.c69 END IN (((t0.c0)/(t0.c69)))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.7359571436912532) AND (t0.c2)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0.7359571436912532) AND (t0.c2)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.7359571436912532) AND (t0.c2)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (0.7359571436912532) AND (t0.c2)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT BETWEEN (0.7359571436912532) AND (t0.c2)))<=(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'dc8c') ISNULL)) ISNULL)) ORDER BY ((((t0.c2 COLLATE RTRIM)AND((t0.c2 IN ()))))AND((t0.c2 IN (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'dc8c') ISNULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2 COLLATE RTRIM)AND((t0.c2 IN ()))))AND((t0.c2 IN (t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'dc8c') ISNULL)) ISNULL)) ORDER BY ((((t0.c2 COLLATE RTRIM)AND((t0.c2 IN ()))))AND((t0.c2 IN (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((x'dc8c') ISNULL)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2 COLLATE RTRIM)AND((t0.c2 IN ()))))AND((t0.c2 IN (t0.c2)))) DESC);
SELECT * FROM vt0, v0, t0 WHERE ('Ujh(( _');
SELECT SUM(count) FROM (SELECT (('Ujh(( _') IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ('Ujh(( _');
SELECT SUM(count) FROM (SELECT (('Ujh(( _') IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ('Ujh(( _');
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)+(v0.c0))) ORDER BY (('-#bG') BETWEEN (((v0.c0)!=('6b''5#M'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('-#bG') BETWEEN (((v0.c0)<>('6b''5#M'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)+(v0.c0))) ORDER BY (('-#bG') BETWEEN (((v0.c0)!=('6b''5#M'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (('-#bG') BETWEEN (((v0.c0)<>('6b''5#M'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((v0.c0)+(v0.c0))) ORDER BY (('-#bG') BETWEEN (((v0.c0)!=('6b''5#M'))) AND ((v0.c0 IN ()))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c69 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c69 AS BLOB) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c69 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c69 AS BLOB) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((CAST(t0.c69 AS BLOB) IN ()));
SELECT * FROM t0, v0, vt0 WHERE ('3');
SELECT SUM(count) FROM (SELECT (('3') IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ('3');
SELECT SUM(count) FROM (SELECT (('3') IS TRUE)  as count FROM t0, v0, vt0);
SELECT * FROM t0, v0, vt0 WHERE ('3');
SELECT ALL * FROM v0, t0, vt0 WHERE ('-408900257');
SELECT SUM(count) FROM (SELECT (('-408900257') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('-408900257');
SELECT SUM(count) FROM (SELECT (('-408900257') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('-408900257');
SELECT * FROM t0 WHERE (CAST((((NULL))>((t0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL))>((t0.c0))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((NULL))>((t0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((NULL))>((t0.c0))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((NULL))>((t0.c0))) AS INTEGER));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (((t0.c0)>(t0.c2)) IN (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c0  WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (((t0.c0)>(t0.c2)) IN (t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (((t0.c0)>(t0.c2)) IN (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c0  WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END) NOT NULL)) IS TRUE)  as count FROM vt0, v0 INNER JOIN t0 ON (((t0.c0)>(t0.c2)) IN (t0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0, v0 INNER JOIN t0 ON (((t0.c0)>(t0.c2)) IN (t0.c0 COLLATE NOCASE)) WHERE (((CASE t0.c0  WHEN t0.c69 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN v0.c0 ELSE t0.c0 END) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON ((t0.c0)IS(v0.c0 COLLATE NOCASE)) WHERE ((- (((t0.c0) IS TRUE)))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC, ((((vt0.c0) IS TRUE))-('-1320542361'));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON ((t0.c0)IS(v0.c0 COLLATE NOCASE)) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC, ((((vt0.c0) IS TRUE))-('-1320542361')));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON ((t0.c0)IS(v0.c0 COLLATE NOCASE)) WHERE ((- (((t0.c0) IS TRUE)))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC, ((((vt0.c0) IS TRUE))-('-1320542361'));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON ((t0.c0)IS(v0.c0 COLLATE NOCASE)) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC, ((((vt0.c0) IS TRUE))-('-1320542361')));
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON ((t0.c0)IS(v0.c0 COLLATE NOCASE)) WHERE ((- (((t0.c0) IS TRUE)))) ORDER BY (CAST(t0.c0 AS TEXT) IN ()) ASC, ((((vt0.c0) IS TRUE))-('-1320542361'));
SELECT COUNT(*) FROM t0, vt0 WHERE (((0xffffffffb1d7e06e) NOT BETWEEN (CASE WHEN '-908680762' THEN t0.c69 END) AND ((((t0.c2))>((t0.c0)))))) ORDER BY (('zg%qgj' COLLATE RTRIM)-(t0.c0));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb1d7e06e) NOT BETWEEN (CASE WHEN '-908680762' THEN t0.c69 END) AND ((((t0.c2))>((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('zg%qgj' COLLATE RTRIM)-(t0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((0xffffffffb1d7e06e) NOT BETWEEN (CASE WHEN '-908680762' THEN t0.c69 END) AND ((((t0.c2))>((t0.c0)))))) ORDER BY (('zg%qgj' COLLATE RTRIM)-(t0.c0));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffb1d7e06e) NOT BETWEEN (CASE WHEN '-908680762' THEN t0.c69 END) AND ((((t0.c2))>((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (('zg%qgj' COLLATE RTRIM)-(t0.c0)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((0xffffffffb1d7e06e) NOT BETWEEN (CASE WHEN '-908680762' THEN t0.c69 END) AND ((((t0.c2))>((t0.c0)))))) ORDER BY (('zg%qgj' COLLATE RTRIM)-(t0.c0));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c2)) BETWEEN (((((t0.c69, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((v0.c0, t0.c0, t0.c0))), x'', 0.02237345227562748)) AND ((((v0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)), (t0.c0 IN (v0.c0, t0.c0)), PRINTF(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t0.c2)) BETWEEN (((((t0.c69, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((v0.c0, t0.c0, t0.c0))), x'', 0.02237345227562748)) AND ((((v0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)), (t0.c0 IN (v0.c0, t0.c0)), PRINTF(t0.c2))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c2)) BETWEEN (((((t0.c69, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((v0.c0, t0.c0, t0.c0))), x'', 0.02237345227562748)) AND ((((v0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)), (t0.c0 IN (v0.c0, t0.c0)), PRINTF(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c0, t0.c2)) BETWEEN (((((t0.c69, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((v0.c0, t0.c0, t0.c0))), x'', 0.02237345227562748)) AND ((((v0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)), (t0.c0 IN (v0.c0, t0.c0)), PRINTF(t0.c2))))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((vt0.c0, vt0.c0, t0.c2)) BETWEEN (((((t0.c69, vt0.c0, t0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, t0.c2)) AND ((v0.c0, t0.c0, t0.c0))), x'', 0.02237345227562748)) AND ((((v0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)), (t0.c0 IN (v0.c0, t0.c0)), PRINTF(t0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN 'f{hiᩴ#y' THEN vt0.c0 COLLATE BINARY WHEN CAST(t0.c2 AS TEXT) THEN NULL WHEN (t0.c69 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c69)) END) ORDER BY (((((t0.c69, vt0.c0, vt0.c0))>=((t0.c2, t0.c69, t0.c2))))>>((t0.c69 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'f{hiᩴ#y' THEN vt0.c0 COLLATE BINARY WHEN CAST(t0.c2 AS TEXT) THEN NULL WHEN (t0.c69 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c69)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c69, vt0.c0, vt0.c0))>=((t0.c2, t0.c69, t0.c2))))>>((t0.c69 IN (t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN 'f{hiᩴ#y' THEN vt0.c0 COLLATE BINARY WHEN CAST(t0.c2 AS TEXT) THEN NULL WHEN (t0.c69 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c69)) END) ORDER BY (((((t0.c69, vt0.c0, vt0.c0))>=((t0.c2, t0.c69, t0.c2))))>>((t0.c69 IN (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN 'f{hiᩴ#y' THEN vt0.c0 COLLATE BINARY WHEN CAST(t0.c2 AS TEXT) THEN NULL WHEN (t0.c69 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c69)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c69, vt0.c0, vt0.c0))>=((t0.c2, t0.c69, t0.c2))))>>((t0.c69 IN (t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (CASE WHEN 'f{hiᩴ#y' THEN vt0.c0 COLLATE BINARY WHEN CAST(t0.c2 AS TEXT) THEN NULL WHEN (t0.c69 IN ()) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c69)) END) ORDER BY (((((t0.c69, vt0.c0, vt0.c0))>=((t0.c2, t0.c69, t0.c2))))>>((t0.c69 IN (t0.c0))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(DISTINCT t0.c69, t0.c69))OR((~ (t0.c69)))))AND(((((((((t0.c69)AND(t0.c69)))OR(v0.c0)))AND(v0.c0)))AND(t0.c2)))))OR(CAST('-1572644885' AS TEXT))))AND((t0.c69 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT t0.c69, t0.c69))OR((~ (t0.c69)))))AND(((((((((t0.c69)AND(t0.c69)))OR(v0.c0)))AND(v0.c0)))AND(t0.c2)))))OR(CAST('-1572644885' AS TEXT))))AND((t0.c69 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((x'')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(DISTINCT t0.c69, t0.c69))OR((~ (t0.c69)))))AND(((((((((t0.c69)AND(t0.c69)))OR(v0.c0)))AND(v0.c0)))AND(t0.c2)))))OR(CAST('-1572644885' AS TEXT))))AND((t0.c69 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((x'')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT t0.c69, t0.c69))OR((~ (t0.c69)))))AND(((((((((t0.c69)AND(t0.c69)))OR(v0.c0)))AND(v0.c0)))AND(t0.c2)))))OR(CAST('-1572644885' AS TEXT))))AND((t0.c69 IN ())))) IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((x'')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(DISTINCT t0.c69, t0.c69))OR((~ (t0.c69)))))AND(((((((((t0.c69)AND(t0.c69)))OR(v0.c0)))AND(v0.c0)))AND(t0.c2)))))OR(CAST('-1572644885' AS TEXT))))AND((t0.c69 IN ())))) ORDER BY (((v0.c0)) NOT BETWEEN ((CAST(t0.c0 AS BLOB))) AND ((x'')))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((vt0.c0) IS FALSE) COLLATE NOCASE WHERE ((+ (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c69) IS FALSE))*(LIKELIHOOD(t0.c2, 0.33094211045974065)))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c69))) BETWEEN (NULL) AND ((- (t0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c69)))OR(t0.c69)))AND(t0.c0)))) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) IS FALSE))*(LIKELIHOOD(t0.c2, 0.33094211045974065)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c69))) BETWEEN (NULL) AND ((- (t0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c69)))OR(t0.c69)))AND(t0.c0)))) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c69) IS FALSE))*(LIKELIHOOD(t0.c2, 0.33094211045974065)))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c69))) BETWEEN (NULL) AND ((- (t0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c69)))OR(t0.c69)))AND(t0.c0)))) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) IS FALSE))*(LIKELIHOOD(t0.c2, 0.33094211045974065)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c69))) BETWEEN (NULL) AND ((- (t0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c69)))OR(t0.c69)))AND(t0.c0)))) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c69) IS FALSE))*(LIKELIHOOD(t0.c2, 0.33094211045974065)))) ORDER BY ((((v0.c0) BETWEEN (v0.c0) AND (t0.c69))) BETWEEN (NULL) AND ((- (t0.c0))))  NULLS LAST, ((CASE v0.c0  WHEN t0.c0 THEN v0.c0 ELSE v0.c0 END)<(((((((((t0.c2)OR(t0.c2)))AND(t0.c69)))OR(t0.c69)))AND(t0.c0)))) DESC, CAST(CAST(v0.c0 AS INTEGER) AS BLOB) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (json_array_length(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (json_array_length(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c0, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c69) ISNULL) THEN (t0.c69 IN (t0.c2, t0.c2)) WHEN (((vt0.c0, t0.c69, t0.c69)) NOT BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))) THEN ((t0.c0) NOT BETWEEN (t0.c69) AND (x'')) WHEN (t0.c69 IN (t0.c69, x'')) THEN ((t0.c69)*(x'')) WHEN (((t0.c2))==((t0.c69))) THEN ((t0.c69) IS TRUE) WHEN CASE t0.c2  WHEN -1.93047421E8 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c69 END THEN (((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c69))) ELSE ((t0.c2)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c69) ISNULL) THEN (t0.c69 IN (t0.c2, t0.c2)) WHEN (((vt0.c0, t0.c69, t0.c69)) NOT BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))) THEN ((t0.c0) NOT BETWEEN (t0.c69) AND (x'')) WHEN (t0.c69 IN (t0.c69, x'')) THEN ((t0.c69)*(x'')) WHEN (((t0.c2))=((t0.c69))) THEN ((t0.c69) IS TRUE) WHEN CASE t0.c2  WHEN -1.93047421E8 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c69 END THEN (((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c69))) ELSE ((t0.c2)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c69) ISNULL) THEN (t0.c69 IN (t0.c2, t0.c2)) WHEN (((vt0.c0, t0.c69, t0.c69)) NOT BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))) THEN ((t0.c0) NOT BETWEEN (t0.c69) AND (x'')) WHEN (t0.c69 IN (t0.c69, x'')) THEN ((t0.c69)*(x'')) WHEN (((t0.c2))==((t0.c69))) THEN ((t0.c69) IS TRUE) WHEN CASE t0.c2  WHEN -1.93047421E8 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c69 END THEN (((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c69))) ELSE ((t0.c2)IS(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c69) ISNULL) THEN (t0.c69 IN (t0.c2, t0.c2)) WHEN (((vt0.c0, t0.c69, t0.c69)) NOT BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))) THEN ((t0.c0) NOT BETWEEN (t0.c69) AND (x'')) WHEN (t0.c69 IN (t0.c69, x'')) THEN ((t0.c69)*(x'')) WHEN (((t0.c2))=((t0.c69))) THEN ((t0.c69) IS TRUE) WHEN CASE t0.c2  WHEN -1.93047421E8 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c69 END THEN (((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c69))) ELSE ((t0.c2)IS(vt0.c0)) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((t0.c69) ISNULL) THEN (t0.c69 IN (t0.c2, t0.c2)) WHEN (((vt0.c0, t0.c69, t0.c69)) NOT BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))) THEN ((t0.c0) NOT BETWEEN (t0.c69) AND (x'')) WHEN (t0.c69 IN (t0.c69, x'')) THEN ((t0.c69)*(x'')) WHEN (((t0.c2))==((t0.c69))) THEN ((t0.c69) IS TRUE) WHEN CASE t0.c2  WHEN -1.93047421E8 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c69 END THEN (((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c69))) ELSE ((t0.c2)IS(vt0.c0)) END);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(v0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS BLOB)) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (CAST(v0.c0 AS BLOB));
SELECT ALL * FROM v0, t0, vt0 WHERE ('*\rB');
SELECT SUM(count) FROM (SELECT (('*\rB') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('*\rB');
SELECT SUM(count) FROM (SELECT (('*\rB') IS TRUE)  as count FROM v0, t0, vt0);
SELECT ALL * FROM v0, t0, vt0 WHERE ('*\rB');
SELECT ALL * FROM v0, vt0 WHERE (((x'') NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((x'') NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((x'') NOT BETWEEN ((v0.c0 IN (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LIKELIHOOD(v0.c0, 0.9446155722348137) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(v0.c0, 0.9446155722348137) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LIKELIHOOD(v0.c0, 0.9446155722348137) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(v0.c0, 0.9446155722348137) AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(LIKELIHOOD(v0.c0, 0.9446155722348137) AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ('-891886682') ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL (('-891886682') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM vt0 WHERE ('-891886682') ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL (('-891886682') IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT COUNT(*) FROM vt0 WHERE ('-891886682') ORDER BY CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>>(vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (1.404688914E9 IN ()) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY ((((LOWER(vt0.c0))OR(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((0.031667912417310706) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (vt0.c0)) ASC, 0X17d8ae39 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (1.404688914E9 IN ()) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((LOWER(vt0.c0))OR(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((0.031667912417310706) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (vt0.c0)) ASC, 0x17d8ae39 ASC);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (1.404688914E9 IN ()) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY ((((LOWER(vt0.c0))OR(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((0.031667912417310706) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (vt0.c0)) ASC, 0X17d8ae39 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN (1.404688914E9 IN ()) THEN ((vt0.c0)>=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY ((((LOWER(vt0.c0))OR(vt0.c0)))AND(((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC, ((0.031667912417310706) BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND (vt0.c0)) ASC, 0x17d8ae39 ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(v0.c0)))AND(v0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ABS(((vt0.c0)|(v0.c0))) DESC  NULLS LAST, (('n\r9#NQ^>3')|(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(v0.c0)))AND(v0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(((vt0.c0)|(v0.c0))) DESC  NULLS LAST, (('n\r9#NQ^>3')|(((vt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(v0.c0)))AND(v0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ABS(((vt0.c0)|(v0.c0))) DESC  NULLS LAST, (('n\r9#NQ^>3')|(((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(v0.c0)))AND(v0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(((vt0.c0)|(v0.c0))) DESC  NULLS LAST, (('n\r9#NQ^>3')|(((vt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0)<<(vt0.c0))) NOT BETWEEN (((((vt0.c0)OR(v0.c0)))AND(v0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ABS(((vt0.c0)|(v0.c0))) DESC  NULLS LAST, (('n\r9#NQ^>3')|(((vt0.c0) NOT NULL))) DESC;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) COLLATE NOCASE WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN ((t0.c2 IN (v0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN ((t0.c2 IN (v0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) COLLATE NOCASE WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN ((t0.c2 IN (v0.c0))) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN ((t0.c2 IN (v0.c0))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN t0 ON (((t0.c2)) BETWEEN ((vt0.c0)) AND ((t0.c2))) COLLATE NOCASE WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN ((t0.c2 IN (v0.c0))) AND ((NOT (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (json_valid(((v0.c0) NOT NULL))) ORDER BY (((v0.c0 IN ()))*((('-2088796305')GLOB(v0.c0)))), CAST(((v0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ((json_valid(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))*((('-2088796305')GLOB(v0.c0)))), CAST(((v0.c0) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM v0, vt0 WHERE (json_valid(((v0.c0) NOT NULL))) ORDER BY (((v0.c0 IN ()))*((('-2088796305')GLOB(v0.c0)))), CAST(((v0.c0) IS FALSE) AS BLOB);
SELECT SUM(count) FROM (SELECT ((json_valid(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0 IN ()))*((('-2088796305')GLOB(v0.c0)))), CAST(((v0.c0) IS FALSE) AS BLOB));
SELECT COUNT(*) FROM v0, vt0 WHERE (json_valid(((v0.c0) NOT NULL))) ORDER BY (((v0.c0 IN ()))*((('-2088796305')GLOB(v0.c0)))), CAST(((v0.c0) IS FALSE) AS BLOB);
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c2)<<(-1.278416041E9)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c2)<<(-1.278416041E9)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, v0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c2)<<(-1.278416041E9)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c2)<<(-1.278416041E9)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2))))) IS TRUE)  as count FROM t0, v0 NOT INDEXED NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0, v0 NATURAL JOIN vt0 WHERE (((((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c0)))AND(((t0.c2)<<(-1.278416041E9)))))AND(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c69 COLLATE NOCASE)OR(LTRIM(t0.c69))))AND(((((((((((((x'')AND(vt0.c0)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)))OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c69 COLLATE NOCASE)OR(LTRIM(t0.c69))))AND(((((((((((((x'')AND(vt0.c0)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)))OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c69 COLLATE NOCASE)OR(LTRIM(t0.c69))))AND(((((((((((((x'')AND(vt0.c0)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)))OR(t0.c2)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c69 COLLATE NOCASE)OR(LTRIM(t0.c69))))AND(((((((((((((x'')AND(vt0.c0)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)))OR(t0.c2)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c69 COLLATE NOCASE)OR(LTRIM(t0.c69))))AND(((((((((((((x'')AND(vt0.c0)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)))OR(t0.c2)))OR(vt0.c0)))));
SELECT * FROM vt0, v0, t0 WHERE (((0x7e41dcd9)<=((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0x7e41dcd9)<=((~ (t0.c2))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((0x7e41dcd9)<=((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((0x7e41dcd9)<=((~ (t0.c2))))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE (((0x7e41dcd9)<=((~ (t0.c2)))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c0) NOTNULL))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c2))))))OR(CAST(t0.c2 AS NUMERIC)))) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (((((t0.c2)OR(t0.c69)))AND(t0.c0))) AND ((((t0.c69, v0.c0, vt0.c0)) NOT BETWEEN ((t0.c2, t0.c69, v0.c0)) AND ((t0.c2, t0.c2, vt0.c0))))) ASC  NULLS FIRST, (((+ (t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('2048568006')))OR(v0.c0)))OR(0.17632898696025445)))AND(v0.c0))) AND ((((v0.c0, t0.c69, v0.c0)) BETWEEN ((t0.c69, t0.c0, t0.c0)) AND ((vt0.c0, 0Xfffffffff47e5483, x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c2))))))OR(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((t0.c2 IN ())) NOT BETWEEN (((((t0.c2)OR(t0.c69)))AND(t0.c0))) AND ((((t0.c69, v0.c0, vt0.c0)) NOT BETWEEN ((t0.c2, t0.c69, v0.c0)) AND ((t0.c2, t0.c2, vt0.c0))))) ASC  NULLS FIRST, (((+ (t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('2048568006')))OR(v0.c0)))OR(0.17632898696025445)))AND(v0.c0))) AND ((((v0.c0, t0.c69, v0.c0)) BETWEEN ((t0.c69, t0.c0, t0.c0)) AND ((vt0.c0, 0Xfffffffff47e5483, x''))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c0) NOTNULL))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c2))))))OR(CAST(t0.c2 AS NUMERIC)))) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (((((t0.c2)OR(t0.c69)))AND(t0.c0))) AND ((((t0.c69, v0.c0, vt0.c0)) NOT BETWEEN ((t0.c2, t0.c69, v0.c0)) AND ((t0.c2, t0.c2, vt0.c0))))) ASC  NULLS FIRST, (((+ (t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('2048568006')))OR(v0.c0)))OR(0.17632898696025445)))AND(v0.c0))) AND ((((v0.c0, t0.c69, v0.c0)) BETWEEN ((t0.c69, t0.c0, t0.c0)) AND ((vt0.c0, 0Xfffffffff47e5483, x''))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOTNULL))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c2))))))OR(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (((t0.c2 IN ())) NOT BETWEEN (((((t0.c2)OR(t0.c69)))AND(t0.c0))) AND ((((t0.c69, v0.c0, vt0.c0)) NOT BETWEEN ((t0.c2, t0.c69, v0.c0)) AND ((t0.c2, t0.c2, vt0.c0))))) ASC  NULLS FIRST, (((+ (t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('2048568006')))OR(v0.c0)))OR(0.17632898696025445)))AND(v0.c0))) AND ((((v0.c0, t0.c69, v0.c0)) BETWEEN ((t0.c69, t0.c0, t0.c0)) AND ((vt0.c0, 0Xfffffffff47e5483, x''))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c0) NOTNULL))OR((((t0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c2))))))OR(CAST(t0.c2 AS NUMERIC)))) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (((((t0.c2)OR(t0.c69)))AND(t0.c0))) AND ((((t0.c69, v0.c0, vt0.c0)) NOT BETWEEN ((t0.c2, t0.c69, v0.c0)) AND ((t0.c2, t0.c2, vt0.c0))))) ASC  NULLS FIRST, (((+ (t0.c0))) NOT BETWEEN (((((((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND('2048568006')))OR(v0.c0)))OR(0.17632898696025445)))AND(v0.c0))) AND ((((v0.c0, t0.c69, v0.c0)) BETWEEN ((t0.c69, t0.c0, t0.c0)) AND ((vt0.c0, 0Xfffffffff47e5483, x''))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))LIKE(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ('-851834228' COLLATE NOCASE) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST, ((((((((CAST(vt0.c0 AS INTEGER))AND(v0.c0)))OR(ABS(v0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(load_extension(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-851834228' COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))LIKE(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST, ((((((((CAST(vt0.c0 AS INTEGER))AND(v0.c0)))OR(ABS(v0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(load_extension(v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))LIKE(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) WHERE ('-851834228' COLLATE NOCASE) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST, ((((((((CAST(vt0.c0 AS INTEGER))AND(v0.c0)))OR(ABS(v0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(load_extension(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-851834228' COLLATE NOCASE) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN v0 ON (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))LIKE(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(vt0.c0 AS REAL)))) ASC  NULLS LAST, ((((((((CAST(vt0.c0 AS INTEGER))AND(v0.c0)))OR(ABS(v0.c0))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(load_extension(v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)||(IFNULL(v0.c0, v0.c0)))) ORDER BY HEX(load_extension(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)||(IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY HEX(load_extension(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)||(IFNULL(v0.c0, v0.c0)))) ORDER BY HEX(load_extension(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)||(IFNULL(v0.c0, v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY HEX(load_extension(v0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)||(IFNULL(v0.c0, v0.c0)))) ORDER BY HEX(load_extension(v0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c0)<>(vt0.c0)))IS(((v0.c0) NOT BETWEEN (t0.c69) AND (NULL))))) ORDER BY (((NOT (t0.c69))) IS FALSE) DESC, ((((vt0.c0)%(t0.c2))) NOT BETWEEN ((((t0.c69))>((v0.c0)))) AND (CAST(t0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(vt0.c0)))IS(((v0.c0) NOT BETWEEN (t0.c69) AND (NULL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((NOT (t0.c69))) IS FALSE) DESC, ((((vt0.c0)%(t0.c2))) NOT BETWEEN ((((t0.c69))>((v0.c0)))) AND (CAST(t0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c0)<>(vt0.c0)))IS(((v0.c0) NOT BETWEEN (t0.c69) AND (NULL))))) ORDER BY (((NOT (t0.c69))) IS FALSE) DESC, ((((vt0.c0)%(t0.c2))) NOT BETWEEN ((((t0.c69))>((v0.c0)))) AND (CAST(t0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)!=(vt0.c0)))IS(((v0.c0) NOT BETWEEN (t0.c69) AND (NULL))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((NOT (t0.c69))) IS FALSE) DESC, ((((vt0.c0)%(t0.c2))) NOT BETWEEN ((((t0.c69))>((v0.c0)))) AND (CAST(t0.c0 AS INTEGER))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c0)<>(vt0.c0)))IS(((v0.c0) NOT BETWEEN (t0.c69) AND (NULL))))) ORDER BY (((NOT (t0.c69))) IS FALSE) DESC, ((((vt0.c0)%(t0.c2))) NOT BETWEEN ((((t0.c69))>((v0.c0)))) AND (CAST(t0.c0 AS INTEGER))) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)OR(t0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c69))) ISNULL)) ORDER BY HEX(DISTINCT ((t0.c69) BETWEEN (t0.c2) AND (0.7751979334874954))) DESC  NULLS LAST, (('Q^5㴜ql23檞') ISNULL)  NULLS FIRST, TYPEOF((((t0.c69))>=((t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c69))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT ((t0.c69) BETWEEN (t0.c2) AND (0.7751979334874954))) DESC  NULLS LAST, (('Q^5㴜ql23檞') ISNULL)  NULLS FIRST, TYPEOF((((t0.c69))>=((t0.c69)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c69))) ISNULL)) ORDER BY HEX(DISTINCT ((t0.c69) BETWEEN (t0.c2) AND (0.7751979334874954))) DESC  NULLS LAST, (('Q^5㴜ql23檞') ISNULL)  NULLS FIRST, TYPEOF((((t0.c69))>=((t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c69))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY HEX(DISTINCT ((t0.c69) BETWEEN (t0.c2) AND (0.7751979334874954))) DESC  NULLS LAST, (('Q^5㴜ql23檞') ISNULL)  NULLS FIRST, TYPEOF((((t0.c69))>=((t0.c69)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c69))) ISNULL)) ORDER BY HEX(DISTINCT ((t0.c69) BETWEEN (t0.c2) AND (0.7751979334874954))) DESC  NULLS LAST, (('Q^5㴜ql23檞') ISNULL)  NULLS FIRST, TYPEOF((((t0.c69))>=((t0.c69)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN -7.53582557E8 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN -7.53582557E8 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN -7.53582557E8 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN -7.53582557E8 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE BINARY THEN -7.53582557E8 END);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0xffffffffdd1d0ae4);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffdd1d0ae4) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0xffffffffdd1d0ae4);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffdd1d0ae4) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (0xffffffffdd1d0ae4);
SELECT * FROM t0, v0 WHERE ((0.12904254458899644 IN ())) ORDER BY (((- (t0.c2))) BETWEEN (CASE WHEN v0.c0 THEN t0.c69 ELSE t0.c0 END) AND (((t0.c0)GLOB(t0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.12904254458899644 IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY (((- (t0.c2))) BETWEEN (CASE WHEN v0.c0 THEN t0.c69 ELSE t0.c0 END) AND (((t0.c0)GLOB(t0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((0.12904254458899644 IN ())) ORDER BY (((- (t0.c2))) BETWEEN (CASE WHEN v0.c0 THEN t0.c69 ELSE t0.c0 END) AND (((t0.c0)GLOB(t0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.12904254458899644 IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY (((- (t0.c2))) BETWEEN (CASE WHEN v0.c0 THEN t0.c69 ELSE t0.c0 END) AND (((t0.c0)GLOB(t0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((0.12904254458899644 IN ())) ORDER BY (((- (t0.c2))) BETWEEN (CASE WHEN v0.c0 THEN t0.c69 ELSE t0.c0 END) AND (((t0.c0)GLOB(t0.c2)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(NULL, t0.c69))AND(((t0.c69)||(v0.c0)))))AND(IFNULL(t0.c0, t0.c69))))AND(((v0.c0) NOTNULL))))AND(CHAR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(NULL, t0.c69))AND(((t0.c69)||(v0.c0)))))AND(IFNULL(t0.c0, t0.c69))))AND(((v0.c0) NOTNULL))))AND(CHAR(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(NULL, t0.c69))AND(((t0.c69)||(v0.c0)))))AND(IFNULL(t0.c0, t0.c69))))AND(((v0.c0) NOTNULL))))AND(CHAR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(NULL, t0.c69))AND(((t0.c69)||(v0.c0)))))AND(IFNULL(t0.c0, t0.c69))))AND(((v0.c0) NOTNULL))))AND(CHAR(v0.c0)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((((((NULLIF(NULL, t0.c69))AND(((t0.c69)||(v0.c0)))))AND(IFNULL(t0.c0, t0.c69))))AND(((v0.c0) NOTNULL))))AND(CHAR(v0.c0))));
SELECT * FROM t0, vt0 WHERE ((+ (((((t0.c2)AND(t0.c69)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c2)AND(t0.c69)))AND(t0.c69))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((((t0.c2)AND(t0.c69)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t0.c2)AND(t0.c69)))AND(t0.c69))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (((((t0.c2)AND(t0.c69)))AND(t0.c69)))));
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT * FROM t0, v0 WHERE ((((((t0.c69 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0)IS(t0.c0))))) ORDER BY ((((t0.c69 COLLATE NOCASE)AND(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0)IS(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c69 COLLATE NOCASE)AND(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((((t0.c69 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0)IS(t0.c0))))) ORDER BY ((((t0.c69 COLLATE NOCASE)AND(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0)IS(t0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c69 COLLATE NOCASE)AND(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((((t0.c69 IN ()))AND(CAST(v0.c0 AS INTEGER))))OR(((v0.c0)IS(t0.c0))))) ORDER BY ((((t0.c69 COLLATE NOCASE)AND(CAST(t0.c2 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)|(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)|(v0.c0)) AS REAL));
SELECT ALL * FROM t0 WHERE ((((((t0.c69)) BETWEEN (('1832184335')) AND ((t0.c69))))OR(CASE WHEN t0.c2 THEN t0.c69 WHEN x'' THEN 0.6333690415872691 WHEN t0.c69 THEN '' ELSE t0.c0 END))) ORDER BY (NULL COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c69)) BETWEEN (('1832184335')) AND ((t0.c69))))OR(CASE WHEN t0.c2 THEN t0.c69 WHEN x'' THEN 0.6333690415872691 WHEN t0.c69 THEN '' ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (NULL COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c69)) BETWEEN (('1832184335')) AND ((t0.c69))))OR(CASE WHEN t0.c2 THEN t0.c69 WHEN x'' THEN 0.6333690415872691 WHEN t0.c69 THEN '' ELSE t0.c0 END))) ORDER BY (NULL COLLATE NOCASE IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c69)) BETWEEN (('1832184335')) AND ((t0.c69))))OR(CASE WHEN t0.c2 THEN t0.c69 WHEN x'' THEN 0.6333690415872691 WHEN t0.c69 THEN '' ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (NULL COLLATE NOCASE IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c69)) BETWEEN (('1832184335')) AND ((t0.c69))))OR(CASE WHEN t0.c2 THEN t0.c69 WHEN x'' THEN 0.6333690415872691 WHEN t0.c69 THEN '' ELSE t0.c0 END))) ORDER BY (NULL COLLATE NOCASE IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY (((v0.c0)) BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY (((v0.c0)) BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(v0.c0)))OR(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)AND(v0.c0)))OR(NULL)) COLLATE NOCASE) ORDER BY (((v0.c0)) BETWEEN ((NULL)) AND (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0, v0 WHERE ((((CAST(v0.c0 AS BLOB)))>((1604981892)))) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB)))>((1604981892)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((CAST(v0.c0 AS BLOB)))>((1604981892)))) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS BLOB)))>((1604981892)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) ASC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE ((((CAST(v0.c0 AS BLOB)))>((1604981892)))) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END AS BLOB) ASC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((((STRFTIME(t0.c0, t0.c0, t0.c2, t0.c0, t0.c0, t0.c69, t0.c0))OR(((t0.c69)GLOB(t0.c2)))))AND(CAST(t0.c0 AS BLOB))))AND(NULL)))OR((((0.5093797479530403, 'Rk', t0.c2))>((t0.c0, t0.c0, t0.c2)))))) ORDER BY ((((((((((t0.c2)OR(t0.c69)))AND((t0.c69 IN ()))))AND(0X17c01896)))AND(CAST(t0.c69 AS BLOB))))AND((- (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((STRFTIME(t0.c0, t0.c0, t0.c2, t0.c0, t0.c0, t0.c69, t0.c0))OR(((t0.c69)GLOB(t0.c2)))))AND(CAST(t0.c0 AS BLOB))))AND(NULL)))OR((((0.5093797479530403, 'Rk', t0.c2))>((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c2)OR(t0.c69)))AND((t0.c69 IN ()))))AND(0X17c01896)))AND(CAST(t0.c69 AS BLOB))))AND((- (t0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((((((STRFTIME(t0.c0, t0.c0, t0.c2, t0.c0, t0.c0, t0.c69, t0.c0))OR(((t0.c69)GLOB(t0.c2)))))AND(CAST(t0.c0 AS BLOB))))AND(NULL)))OR((((0.5093797479530403, 'Rk', t0.c2))>((t0.c0, t0.c0, t0.c2)))))) ORDER BY ((((((((((t0.c2)OR(t0.c69)))AND((t0.c69 IN ()))))AND(0X17c01896)))AND(CAST(t0.c69 AS BLOB))))AND((- (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((STRFTIME(t0.c0, t0.c0, t0.c2, t0.c0, t0.c0, t0.c69, t0.c0))OR(((t0.c69)GLOB(t0.c2)))))AND(CAST(t0.c0 AS BLOB))))AND(NULL)))OR((((0.5093797479530403, 'Rk', t0.c2))>((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c2)OR(t0.c69)))AND((t0.c69 IN ()))))AND(0X17c01896)))AND(CAST(t0.c69 AS BLOB))))AND((- (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (~ (((((-609372164)AND(v0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))!=((vt0.c0, v0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((((-609372164)AND(v0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (~ (((((-609372164)AND(v0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))!=((vt0.c0, v0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((((-609372164)AND(v0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((v0.c0)<<(v0.c0))) BETWEEN ((((v0.c0, v0.c0, v0.c0))<>((vt0.c0, v0.c0, vt0.c0)))) AND ((vt0.c0 IN (vt0.c0))))) ORDER BY (~ (((((-609372164)AND(v0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c69) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c69) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c69) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c69) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c69) ORDER BY (NULL IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE ((- ((- (t0.c0))))) ORDER BY ((HEX(t0.c2))<=((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((HEX(t0.c2))<=((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- ((- (t0.c0))))) ORDER BY ((HEX(t0.c2))<=((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((HEX(t0.c2))<=((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((- ((- (t0.c0))))) ORDER BY ((HEX(t0.c2))<=((t0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL))/(((v0.c0) IS TRUE))) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL))/(((v0.c0) IS TRUE))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL))/(((v0.c0) IS TRUE))) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL))/(((v0.c0) IS TRUE))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((CAST(vt0.c0 AS REAL))/(((v0.c0) IS TRUE))) WHERE (vt0.c0) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))||(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT '-1060160228', CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 1.138119056E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '-1060160228', CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 1.138119056E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT '-1060160228', CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 1.138119056E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT '-1060160228', CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 1.138119056E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (IFNULL(DISTINCT '-1060160228', CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 1.138119056E9 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY NULL DESC, ((((t0.c69)>>(t0.c0))) IS FALSE), (t0.c2 IN (t0.c2)) COLLATE BINARY  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL DESC, ((((t0.c69)>>(t0.c0))) IS FALSE), (t0.c2 IN (t0.c2)) COLLATE BINARY  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY NULL DESC, ((((t0.c69)>>(t0.c0))) IS FALSE), (t0.c2 IN (t0.c2)) COLLATE BINARY  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 COLLATE BINARY IN ())) IS TRUE)  as count FROM t0 ORDER BY NULL DESC, ((((t0.c69)>>(t0.c0))) IS FALSE), (t0.c2 IN (t0.c2)) COLLATE BINARY  NULLS FIRST, t0.c0  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((t0.c2 COLLATE BINARY IN ())) ORDER BY NULL DESC, ((((t0.c69)>>(t0.c0))) IS FALSE), (t0.c2 IN (t0.c2)) COLLATE BINARY  NULLS FIRST, t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c2) AND (v0.c0))))>((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69) NOT BETWEEN (t0.c2) AND (v0.c0))))>((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c2) AND (v0.c0))))>((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69) NOT BETWEEN (t0.c2) AND (v0.c0))))>((((t0.c2) BETWEEN (t0.c2) AND (t0.c2)))))) IS TRUE)  as count FROM v0 NOT INDEXED, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c2) AND (v0.c0))))>((((t0.c2) BETWEEN (t0.c2) AND (t0.c2))))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((((t0.c2)>=(t0.c0)))OR(GLOB(v0.c0, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c0)))OR(GLOB(v0.c0, t0.c2)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((t0.c2)>=(t0.c0)))OR(GLOB(v0.c0, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)>=(t0.c0)))OR(GLOB(v0.c0, t0.c2)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((t0.c2)>=(t0.c0)))OR(GLOB(v0.c0, t0.c2))));
SELECT * FROM t0 FULL OUTER JOIN vt0 ON UNICODE(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0))) RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)<(t0.c2)) THEN ((t0.c69) NOTNULL) ELSE CAST(t0.c0 AS TEXT) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON UNICODE(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0))) RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)<(t0.c2)) THEN ((t0.c69) NOTNULL) ELSE CAST(t0.c0 AS TEXT) END);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON UNICODE(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0))) RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)<(t0.c2)) THEN ((t0.c69) NOTNULL) ELSE CAST(t0.c0 AS TEXT) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON UNICODE(((v0.c0) NOT BETWEEN (x'') AND (vt0.c0))) RIGHT OUTER JOIN v0 ON CASE WHEN ((v0.c0)<(t0.c2)) THEN ((t0.c69) NOTNULL) ELSE CAST(t0.c0 AS TEXT) END);
SELECT * FROM v0, t0 WHERE (LIKELIHOOD(CAST(t0.c2 AS TEXT), 0.32392339220084465)) ORDER BY ((((((((((((((v0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c2)))OR(t0.c69)))OR(t0.c0)))OR(t0.c0)))>=((((''))=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(t0.c2 AS TEXT), 0.32392339220084465)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((((((v0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c2)))OR(t0.c69)))OR(t0.c0)))OR(t0.c0)))>=((((''))=((v0.c0))))));
SELECT * FROM v0, t0 WHERE (LIKELIHOOD(CAST(t0.c2 AS TEXT), 0.32392339220084465)) ORDER BY ((((((((((((((v0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c2)))OR(t0.c69)))OR(t0.c0)))OR(t0.c0)))>=((((''))=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CAST(t0.c2 AS TEXT), 0.32392339220084465)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((((((v0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c2)))OR(t0.c69)))OR(t0.c0)))OR(t0.c0)))>=((((''))=((v0.c0))))));
SELECT * FROM v0, t0 WHERE (LIKELIHOOD(CAST(t0.c2 AS TEXT), 0.32392339220084465)) ORDER BY ((((((((((((((v0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c2)))OR(t0.c69)))OR(t0.c0)))OR(t0.c0)))>=((((''))=((v0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0) ISNULL))) AND (((((t0.c0, t0.c0, t0.c69))>=((t0.c69, t0.c2, t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((vt0.c0) ISNULL))) AND (((((t0.c0, t0.c0, t0.c69))>=((t0.c69, t0.c2, t0.c2))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0) ISNULL))) AND (((((t0.c0, t0.c0, t0.c69))>=((t0.c69, t0.c2, t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((vt0.c0) ISNULL))) AND (((((t0.c0, t0.c0, t0.c69))>=((t0.c69, t0.c2, t0.c2))))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) BETWEEN ((((vt0.c0) ISNULL))) AND (((((t0.c0, t0.c0, t0.c69))>=((t0.c69, t0.c2, t0.c2)))))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0))<((0.5237329277846086))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<((0.5237329277846086))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0))<((0.5237329277846086))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<((0.5237329277846086))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0))<((0.5237329277846086))) AS NUMERIC));
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(t0.c2)))OR('w<(gF%')))OR(t0.c69)))OR(t0.c69)) THEN v0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((0.26442839380320227)GLOB(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(t0.c2)))OR(v0.c0)) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN 0.836428062044872 WHEN t0.c69 THEN t0.c69 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN t0.c69 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(t0.c2)))OR('w<(gF%')))OR(t0.c69)))OR(t0.c69)) THEN v0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((0.26442839380320227)GLOB(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(t0.c2)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN 0.836428062044872 WHEN t0.c69 THEN t0.c69 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN t0.c69 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, vt0.c0);
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(t0.c2)))OR('w<(gF%')))OR(t0.c69)))OR(t0.c69)) THEN v0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((0.26442839380320227)GLOB(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(t0.c2)))OR(v0.c0)) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN 0.836428062044872 WHEN t0.c69 THEN t0.c69 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN t0.c69 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt0.c0)AND(t0.c2)))OR('w<(gF%')))OR(t0.c69)))OR(t0.c69)) THEN v0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((0.26442839380320227)GLOB(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(t0.c2)))OR(v0.c0)) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN 0.836428062044872 WHEN t0.c69 THEN t0.c69 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN t0.c69 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, vt0.c0);
SELECT * FROM vt0, t0, v0 WHERE (CASE WHEN ((((((((vt0.c0)AND(t0.c2)))OR('w<(gF%')))OR(t0.c69)))OR(t0.c69)) THEN v0.c0 WHEN vt0.c0 COLLATE BINARY THEN ((0.26442839380320227)GLOB(t0.c0)) WHEN ((((vt0.c0)OR(t0.c0)))AND(v0.c0)) THEN ((((t0.c0)AND(t0.c2)))OR(v0.c0)) END) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN 0.836428062044872 WHEN t0.c69 THEN t0.c69 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT BETWEEN (CASE WHEN t0.c69 THEN v0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS TEXT)))  NULLS LAST, vt0.c0;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (- ((~ (vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (- ((~ (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c2)OR(t0.c0)))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS INTEGER))OR(((t0.c2)OR(t0.c0)))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c0 IN ()) IN ((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c2)OR(t0.c0)))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS INTEGER))OR(((t0.c2)OR(t0.c0)))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((vt0.c0 IN ()) IN ((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((CAST(t0.c0 AS INTEGER))OR(((t0.c2)OR(t0.c0)))))AND(((((t0.c2)OR(vt0.c0)))AND(t0.c0))))) ORDER BY ((vt0.c0 IN ()) IN ((t0.c2 IN ()), ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON json((t0.c69 IN (vt0.c0))) WHERE ((((t0.c2, vt0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((t0.c69)%(t0.c69)), CASE t0.c69  WHEN t0.c2 THEN x'' WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, ((t0.c2) ISNULL), CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 END)) AND ((vt0.c0, 0.5065649315257661, ((t0.c2)||(t0.c2)), t0.c69 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, vt0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((t0.c69)%(t0.c69)), CASE t0.c69  WHEN t0.c2 THEN x'' WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, ((t0.c2) ISNULL), CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 END)) AND ((vt0.c0, 0.5065649315257661, ((t0.c2)||(t0.c2)), t0.c69 COLLATE BINARY, CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON json((t0.c69 IN (vt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON json((t0.c69 IN (vt0.c0))) WHERE ((((t0.c2, vt0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((t0.c69)%(t0.c69)), CASE t0.c69  WHEN t0.c2 THEN x'' WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, ((t0.c2) ISNULL), CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 END)) AND ((vt0.c0, 0.5065649315257661, ((t0.c2)||(t0.c2)), t0.c69 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, vt0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((t0.c69)%(t0.c69)), CASE t0.c69  WHEN t0.c2 THEN x'' WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, ((t0.c2) ISNULL), CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 END)) AND ((vt0.c0, 0.5065649315257661, ((t0.c2)||(t0.c2)), t0.c69 COLLATE BINARY, CAST(t0.c0 AS NUMERIC))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON json((t0.c69 IN (vt0.c0))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON json((t0.c69 IN (vt0.c0))) WHERE ((((t0.c2, vt0.c0, t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID(), ((t0.c69)%(t0.c69)), CASE t0.c69  WHEN t0.c2 THEN x'' WHEN t0.c2 THEN NULL WHEN vt0.c0 THEN vt0.c0 END, ((t0.c2) ISNULL), CASE t0.c0  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c2 END)) AND ((vt0.c0, 0.5065649315257661, ((t0.c2)||(t0.c2)), t0.c69 COLLATE BINARY, CAST(t0.c0 AS NUMERIC)))));
SELECT ALL * FROM t0 WHERE ((((0.6104794687387894))=(((+ (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6104794687387894))==(((+ (NULL)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.6104794687387894))=(((+ (NULL))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.6104794687387894))==(((+ (NULL)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.6104794687387894))=(((+ (NULL))))));
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) LEFT OUTER JOIN vt0 ON t0.c0 WHERE (IFNULL((((t0.c69, t0.c0, t0.c0))>((t0.c69, t0.c0, t0.c2))), (- (t0.c69)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((((t0.c69, t0.c0, t0.c0))>((t0.c69, t0.c0, t0.c2))), (- (t0.c69)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) LEFT OUTER JOIN vt0 ON t0.c0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) LEFT OUTER JOIN vt0 ON t0.c0 WHERE (IFNULL((((t0.c69, t0.c0, t0.c0))>((t0.c69, t0.c0, t0.c2))), (- (t0.c69)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((IFNULL((((t0.c69, t0.c0, t0.c0))>((t0.c69, t0.c0, t0.c2))), (- (t0.c69)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) LEFT OUTER JOIN vt0 ON t0.c0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN v0 ON (((t0.c0)) BETWEEN ((((((((((v0.c0)AND(t0.c2)))AND(t0.c0)))AND(t0.c2)))OR(v0.c0)))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (x''))))) LEFT OUTER JOIN vt0 ON t0.c0 WHERE (IFNULL((((t0.c69, t0.c0, t0.c0))>((t0.c69, t0.c0, t0.c2))), (- (t0.c69)))) ORDER BY NULL  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c0))) ISNULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((+ (t0.c0))) ISNULL));
SELECT * FROM vt0 CROSS JOIN v0 ON (NULL IN ()) CROSS JOIN t0 ON CASE WHEN ((t0.c0) NOTNULL) THEN t0.c69 COLLATE BINARY END WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY JULIANDAY(t0.c2, t0.c0, t0.c69) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NULL IN ()) CROSS JOIN t0 ON CASE WHEN ((t0.c0) NOTNULL) THEN t0.c69 COLLATE BINARY END ORDER BY JULIANDAY(t0.c2, t0.c0, t0.c69) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN v0 ON (NULL IN ()) CROSS JOIN t0 ON CASE WHEN ((t0.c0) NOTNULL) THEN t0.c69 COLLATE BINARY END WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY JULIANDAY(t0.c2, t0.c0, t0.c69) COLLATE RTRIM COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NULL IN ()) CROSS JOIN t0 ON CASE WHEN ((t0.c0) NOTNULL) THEN t0.c69 COLLATE BINARY END ORDER BY JULIANDAY(t0.c2, t0.c0, t0.c69) COLLATE RTRIM COLLATE BINARY);
SELECT * FROM vt0 CROSS JOIN v0 ON (NULL IN ()) CROSS JOIN t0 ON CASE WHEN ((t0.c0) NOTNULL) THEN t0.c69 COLLATE BINARY END WHERE (CAST(t0.c0 COLLATE BINARY AS TEXT)) ORDER BY JULIANDAY(t0.c2, t0.c0, t0.c69) COLLATE RTRIM COLLATE BINARY;
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(CASE t0.c69  WHEN NULL THEN t0.c0 END)) ORDER BY json_remove(UNICODE(t0.c69), CAST(t0.c69 AS NUMERIC))  NULLS LAST, (CAST(t0.c0 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE t0.c69  WHEN NULL THEN t0.c0 END)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY json_remove(UNICODE(t0.c69), CAST(t0.c69 AS NUMERIC))  NULLS LAST, (CAST(t0.c0 AS BLOB) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(CASE t0.c69  WHEN NULL THEN t0.c0 END)) ORDER BY json_remove(UNICODE(t0.c69), CAST(t0.c69 AS NUMERIC))  NULLS LAST, (CAST(t0.c0 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CASE t0.c69  WHEN NULL THEN t0.c0 END)) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY json_remove(UNICODE(t0.c69), CAST(t0.c69 AS NUMERIC))  NULLS LAST, (CAST(t0.c0 AS BLOB) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST((((t0.c69))<((v0.c0))) AS INTEGER) WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST((((t0.c69))<((v0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST((((t0.c69))<((v0.c0))) AS INTEGER) WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST((((t0.c69))<((v0.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0, v0 RIGHT OUTER JOIN vt0 ON CAST((((t0.c69))<((v0.c0))) AS INTEGER) WHERE (CAST(((vt0.c0)-(vt0.c0)) AS REAL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON '' COLLATE NOCASE COLLATE NOCASE WHERE ((((json_array_length(v0.c0)))<(((((NULL, vt0.c0, vt0.c0))!=((v0.c0, v0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((json_array_length(v0.c0)))<(((((NULL, vt0.c0, vt0.c0))<>((v0.c0, v0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON '' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON '' COLLATE NOCASE COLLATE NOCASE WHERE ((((json_array_length(v0.c0)))<(((((NULL, vt0.c0, vt0.c0))!=((v0.c0, v0.c0, vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((json_array_length(v0.c0)))<(((((NULL, vt0.c0, vt0.c0))<>((v0.c0, v0.c0, vt0.c0))))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON '' COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON '' COLLATE NOCASE COLLATE NOCASE WHERE ((((json_array_length(v0.c0)))<(((((NULL, vt0.c0, vt0.c0))!=((v0.c0, v0.c0, vt0.c0)))))));
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (v0.c0))) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE (((((vt0.c0) NOTNULL)) NOT BETWEEN ((~ (v0.c0))) AND (v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS INTEGER) LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN ((t0.c0)IS(x'07ad')) WHEN ((NULL)<<(t0.c2)) THEN ((t0.c2) IS TRUE) WHEN 'w<(gf%' THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c69)))AND(t0.c69)) END WHERE ((((vt0.c0 IN ()))<(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(t0.c2))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS INTEGER) LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN ((t0.c0)IS(x'07ad')) WHEN ((NULL)<<(t0.c2)) THEN ((t0.c2) IS TRUE) WHEN 'w<(gf%' THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c69)))AND(t0.c69)) END);
SELECT ALL * FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS INTEGER) LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN ((t0.c0)IS(x'07ad')) WHEN ((NULL)<<(t0.c2)) THEN ((t0.c2) IS TRUE) WHEN 'w<(gf%' THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c69)))AND(t0.c69)) END WHERE ((((vt0.c0 IN ()))<(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))<(t0.c2))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS INTEGER) LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN ((t0.c0)IS(x'07ad')) WHEN ((NULL)<<(t0.c2)) THEN ((t0.c2) IS TRUE) WHEN 'w<(gf%' THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c69)))AND(t0.c69)) END);
SELECT ALL * FROM v0 INNER JOIN vt0 ON CAST(((v0.c0)IS NOT(t0.c0)) AS INTEGER) LEFT OUTER JOIN t0 ON CASE WHEN ((v0.c0) NOT NULL) THEN ((t0.c0)IS(x'07ad')) WHEN ((NULL)<<(t0.c2)) THEN ((t0.c2) IS TRUE) WHEN 'w<(gf%' THEN CASE vt0.c0  WHEN t0.c0 THEN v0.c0 END ELSE ((((((((v0.c0)AND(t0.c0)))OR(v0.c0)))OR(t0.c69)))AND(t0.c69)) END WHERE ((((vt0.c0 IN ()))<(t0.c2)));
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))) ORDER BY CASE x''  WHEN TYPEOF(DISTINCT vt0.c0) THEN CHAR(vt0.c0, vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN TYPEOF(DISTINCT vt0.c0) THEN CHAR(vt0.c0, vt0.c0, vt0.c0) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))) ORDER BY CASE x''  WHEN TYPEOF(DISTINCT vt0.c0) THEN CHAR(vt0.c0, vt0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE x''  WHEN TYPEOF(DISTINCT vt0.c0) THEN CHAR(vt0.c0, vt0.c0, vt0.c0) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)AND((vt0.c0 IN ())))) ORDER BY CASE x''  WHEN TYPEOF(DISTINCT vt0.c0) THEN CHAR(vt0.c0, vt0.c0, vt0.c0) END;
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0)/(t0.c0)))) INNER JOIN t0 ON (((t0.c69)) NOT BETWEEN (((((t0.c69))>=((vt0.c0))))) AND ((((t0.c0)<=(v0.c0))))) WHERE (((CASE WHEN t0.c69 THEN t0.c2 WHEN x'' THEN t0.c69 WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c69 THEN t0.c2 WHEN x'' THEN t0.c69 WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0)/(t0.c0)))) INNER JOIN t0 ON (((t0.c69)) NOT BETWEEN (((((t0.c69))>=((vt0.c0))))) AND ((((t0.c0)<=(v0.c0))))));
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0)/(t0.c0)))) INNER JOIN t0 ON (((t0.c69)) NOT BETWEEN (((((t0.c69))>=((vt0.c0))))) AND ((((t0.c0)<=(v0.c0))))) WHERE (((CASE WHEN t0.c69 THEN t0.c2 WHEN x'' THEN t0.c69 WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c69 THEN t0.c2 WHEN x'' THEN t0.c69 WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(v0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0)/(t0.c0)))) INNER JOIN t0 ON (((t0.c69)) NOT BETWEEN (((((t0.c69))>=((vt0.c0))))) AND ((((t0.c0)<=(v0.c0))))));
SELECT * FROM vt0 CROSS JOIN v0 ON (NOT (((v0.c0)/(t0.c0)))) INNER JOIN t0 ON (((t0.c69)) NOT BETWEEN (((((t0.c69))>=((vt0.c0))))) AND ((((t0.c0)<=(v0.c0))))) WHERE (((CASE WHEN t0.c69 THEN t0.c2 WHEN x'' THEN t0.c69 WHEN vt0.c0 THEN vt0.c0 END)|(((((vt0.c0)OR(v0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0 COLLATE RTRIM, LTRIM(v0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))==(((vt0.c0 IN ()), ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, LTRIM(v0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))=(((vt0.c0 IN ()), ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0 COLLATE RTRIM, LTRIM(v0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))==(((vt0.c0 IN ()), ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, LTRIM(v0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))=(((vt0.c0 IN ()), ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((vt0.c0 COLLATE RTRIM, LTRIM(v0.c0), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))))==(((vt0.c0 IN ()), ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)))OR(vt0.c0)), vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN t0 ON 0.3957215506539783 RIGHT OUTER JOIN vt0 ON LENGTH(CASE t0.c69  WHEN t0.c0 THEN vt0.c0 END) WHERE (CASE (NULL IN ())  WHEN HEX(t0.c69) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NULL IN ())  WHEN HEX(t0.c69) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON 0.3957215506539783 RIGHT OUTER JOIN vt0 ON LENGTH(CASE t0.c69  WHEN t0.c0 THEN vt0.c0 END));
SELECT ALL * FROM v0 INNER JOIN t0 ON 0.3957215506539783 RIGHT OUTER JOIN vt0 ON LENGTH(CASE t0.c69  WHEN t0.c0 THEN vt0.c0 END) WHERE (CASE (NULL IN ())  WHEN HEX(t0.c69) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NULL IN ())  WHEN HEX(t0.c69) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM v0 INNER JOIN t0 ON 0.3957215506539783 RIGHT OUTER JOIN vt0 ON LENGTH(CASE t0.c69  WHEN t0.c0 THEN vt0.c0 END));
SELECT ALL * FROM v0 INNER JOIN t0 ON 0.3957215506539783 RIGHT OUTER JOIN vt0 ON LENGTH(CASE t0.c69  WHEN t0.c0 THEN vt0.c0 END) WHERE (CASE (NULL IN ())  WHEN HEX(t0.c69) THEN CASE WHEN t0.c0 THEN vt0.c0 END ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE t0.c2 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((0.5826350296209429))!=((x'8b64'))), vt0.c0)) ORDER BY (((((vt0.c0) NOTNULL)))>((((vt0.c0)IS NOT(vt0.c0))))) ASC, x'8485' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((0.5826350296209429))<>((x'8b64'))), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))>((((vt0.c0)IS NOT(vt0.c0))))) ASC, x'8485' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((0.5826350296209429))!=((x'8b64'))), vt0.c0)) ORDER BY (((((vt0.c0) NOTNULL)))>((((vt0.c0)IS NOT(vt0.c0))))) ASC, x'8485' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (((0.5826350296209429))<>((x'8b64'))), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0) NOTNULL)))>((((vt0.c0)IS NOT(vt0.c0))))) ASC, x'8485' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT (((0.5826350296209429))!=((x'8b64'))), vt0.c0)) ORDER BY (((((vt0.c0) NOTNULL)))>((((vt0.c0)IS NOT(vt0.c0))))) ASC, x'8485' ASC  NULLS LAST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))<<(-1.31125237E9)) WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))<<(-1.31125237E9)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))<<(-1.31125237E9)) WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))<<(-1.31125237E9)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((((v0.c0)AND(v0.c0)))OR(vt0.c0)))<<(-1.31125237E9)) WHERE ((- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((~ (JULIANDAY(v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (JULIANDAY(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (JULIANDAY(v0.c0, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (JULIANDAY(v0.c0, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (JULIANDAY(v0.c0, v0.c0, v0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((('()')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((('()')OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((('()')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((('()')OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((('()')OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CAST((vt0.c0 IN ()) AS BLOB) ASC;
SELECT * FROM t0, vt0, v0 WHERE ((+ (((vt0.c0)|(t0.c2))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(t0.c2))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE ((+ (((vt0.c0)|(t0.c2))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(t0.c2))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM t0, vt0, v0 WHERE ((+ (((vt0.c0)|(t0.c2))))) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c69) AND (v0.c0)))>>((t0.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((~ (t0.c2)) IN ())  NULLS FIRST, CASE WHEN x'' THEN t0.c69 ELSE t0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c2)) IN ())  NULLS FIRST, CASE WHEN x'' THEN t0.c69 ELSE t0.c0 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((~ (t0.c2)) IN ())  NULLS FIRST, CASE WHEN x'' THEN t0.c69 ELSE t0.c0 END COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((~ (t0.c2)) IN ())  NULLS FIRST, CASE WHEN x'' THEN t0.c69 ELSE t0.c0 END COLLATE NOCASE DESC);
SELECT COUNT(*) FROM t0 WHERE ((t0.c2 IN ())) ORDER BY ((~ (t0.c2)) IN ())  NULLS FIRST, CASE WHEN x'' THEN t0.c69 ELSE t0.c0 END COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffea1ec88f)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (x'') AND (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0Xffffffffea1ec88f)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (x'') AND (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffea1ec88f)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (x'') AND (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0Xffffffffea1ec88f)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (x'') AND (((vt0.c0) NOTNULL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffea1ec88f)OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY (((((vt0.c0))>((vt0.c0)))) BETWEEN (x'') AND (((vt0.c0) NOTNULL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) IN ())) ORDER BY CASE t0.c2  WHEN t0.c69 THEN t0.c69 ELSE x'8a00cf81' END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN t0.c69 THEN t0.c69 ELSE x'8a00cf81' END COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) IN ())) ORDER BY CASE t0.c2  WHEN t0.c69 THEN t0.c69 ELSE x'8a00cf81' END COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) IN ())) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN t0.c69 THEN t0.c69 ELSE x'8a00cf81' END COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2)) NOT BETWEEN ((t0.c69)) AND ((t0.c69))) IN ())) ORDER BY CASE t0.c2  WHEN t0.c69 THEN t0.c69 ELSE x'8a00cf81' END COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c2)%(v0.c0)))OR(t0.c0 COLLATE BINARY)))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)%(v0.c0)))OR(t0.c0 COLLATE BINARY)))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c2)%(v0.c0)))OR(t0.c0 COLLATE BINARY)))AND(CAST(NULL AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)%(v0.c0)))OR(t0.c0 COLLATE BINARY)))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, v0);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((((((t0.c2)%(v0.c0)))OR(t0.c0 COLLATE BINARY)))AND(CAST(NULL AS NUMERIC))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (0X4350799e) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0x4350799e) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (0X4350799e) ORDER BY ((vt0.c0) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((0x4350799e) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY ((vt0.c0) NOTNULL));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (0X4350799e) ORDER BY ((vt0.c0) NOTNULL);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0)) BETWEEN ((vt0.c0)) AND (((- (t0.c0)))))) ORDER BY ((v0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((vt0.c0)) AND (((- (t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((v0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0)) BETWEEN ((vt0.c0)) AND (((- (t0.c0)))))) ORDER BY ((v0.c0) ISNULL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((vt0.c0)) AND (((- (t0.c0)))))) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((v0.c0) ISNULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((v0.c0)) BETWEEN ((vt0.c0)) AND (((- (t0.c0)))))) ORDER BY ((v0.c0) ISNULL) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>>(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>>(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))>>(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>>(vt0.c0))) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<=(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<=(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<=(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)<=(t0.c0))) NOT NULL));
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (((v0.c0)<<(v0.c0)))));
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) IS FALSE)) ORDER BY (NOT (TYPEOF(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (TYPEOF(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) IS FALSE)) ORDER BY (NOT (TYPEOF(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (TYPEOF(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)IS(vt0.c0))) IS FALSE)) ORDER BY (NOT (TYPEOF(DISTINCT vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))<>((v0.c0 COLLATE RTRIM)))) ORDER BY ((CAST(v0.c0 AS BLOB)) NOTNULL), (v0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0))))<>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB)) NOTNULL), (v0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))<>((v0.c0 COLLATE RTRIM)))) ORDER BY ((CAST(v0.c0 AS BLOB)) NOTNULL), (v0.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0))))<>((v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS BLOB)) NOTNULL), (v0.c0 IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0))))<>((v0.c0 COLLATE RTRIM)))) ORDER BY ((CAST(v0.c0 AS BLOB)) NOTNULL), (v0.c0 IN ())  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((~ (((v0.c0) IS TRUE))));
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((((v0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0))) AS BLOB) FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (NULL) AND (t0.c2)))||(((t0.c69)||(t0.c2)))) WHERE (((((((t0.c69)=('\%Nq')))AND((((vt0.c0, v0.c0, t0.c2))<=((t0.c0, v0.c0, t0.c69))))))OR(((vt0.c0) NOT BETWEEN (0.7096455095355527) AND (v0.c0))))) ORDER BY (((((((('')AND(((x'') NOT BETWEEN (363275508) AND (v0.c0)))))OR(((t0.c69)-(t0.c2)))))AND(((v0.c0)GLOB(t0.c2)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)) DESC, (- (((t0.c2) BETWEEN (vt0.c0) AND (2.013812612E9)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)=('\%Nq')))AND((((vt0.c0, v0.c0, t0.c2))<=((t0.c0, v0.c0, t0.c69))))))OR(((vt0.c0) NOT BETWEEN (0.7096455095355527) AND (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((((v0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0))) AS BLOB) FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (NULL) AND (t0.c2)))||(((t0.c69)||(t0.c2)))) ORDER BY (((((((('')AND(((x'') NOT BETWEEN (363275508) AND (v0.c0)))))OR(((t0.c69)-(t0.c2)))))AND(((v0.c0)GLOB(t0.c2)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)) DESC, (- (((t0.c2) BETWEEN (vt0.c0) AND (2.013812612E9)))) DESC);
SELECT ALL * FROM v0 INNER JOIN t0 ON CAST((((v0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0))) AS BLOB) FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (NULL) AND (t0.c2)))||(((t0.c69)||(t0.c2)))) WHERE (((((((t0.c69)=('\%Nq')))AND((((vt0.c0, v0.c0, t0.c2))<=((t0.c0, v0.c0, t0.c69))))))OR(((vt0.c0) NOT BETWEEN (0.7096455095355527) AND (v0.c0))))) ORDER BY (((((((('')AND(((x'') NOT BETWEEN (363275508) AND (v0.c0)))))OR(((t0.c69)-(t0.c2)))))AND(((v0.c0)GLOB(t0.c2)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)) DESC, (- (((t0.c2) BETWEEN (vt0.c0) AND (2.013812612E9)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)=('\%Nq')))AND((((vt0.c0, v0.c0, t0.c2))<=((t0.c0, v0.c0, t0.c69))))))OR(((vt0.c0) NOT BETWEEN (0.7096455095355527) AND (v0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CAST((((v0.c0)) BETWEEN ((t0.c2)) AND ((vt0.c0))) AS BLOB) FULL OUTER JOIN vt0 ON ((((t0.c0) BETWEEN (NULL) AND (t0.c2)))||(((t0.c69)||(t0.c2)))) ORDER BY (((((((('')AND(((x'') NOT BETWEEN (363275508) AND (v0.c0)))))OR(((t0.c69)-(t0.c2)))))AND(((v0.c0)GLOB(t0.c2)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c2 END)) DESC, (- (((t0.c2) BETWEEN (vt0.c0) AND (2.013812612E9)))) DESC);
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((- (t0.c69))) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c69 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS INTEGER))/(((v0.c0)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))/(((v0.c0)||(t0.c2))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((- (t0.c69))) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c69 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((- (t0.c69))) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c69 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS INTEGER))/(((v0.c0)||(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))/(((v0.c0)||(t0.c2))))) IS TRUE)  as count FROM v0, t0 FULL OUTER JOIN vt0 ON (((- (t0.c69))) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c69 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, t0 FULL OUTER JOIN vt0 ON (((- (t0.c69))) BETWEEN (CAST(NULL AS INTEGER)) AND (t0.c69 COLLATE RTRIM)) WHERE (((CAST(v0.c0 AS INTEGER))/(((v0.c0)||(t0.c2)))));
SELECT ALL * FROM t0, v0, vt0 WHERE ('-1308871548');
SELECT SUM(count) FROM (SELECT ALL (('-1308871548') IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE ('-1308871548');
SELECT SUM(count) FROM (SELECT ALL (('-1308871548') IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL * FROM t0, v0, vt0 WHERE ('-1308871548');
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)>>('467825267'))) AND ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)>>('467825267'))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)>>('467825267'))) AND ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)>>('467825267'))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL)) BETWEEN (((vt0.c0)>>('467825267'))) AND ((vt0.c0 IN ())))) ORDER BY (((((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt0.c0)))AND('')))OR(vt0.c0)))AND(vt0.c0)))))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER)  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((t0.c0) IS FALSE), CAST(t0.c69 AS NUMERIC), ((((t0.c69)OR(t0.c2)))AND(t0.c69))))<=(((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c69, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))), ((t0.c69)IS NOT(t0.c69)))))) ORDER BY (((NOT (t0.c0))) BETWEEN (json_extract(t0.c69, t0.c0)) AND (CAST(t0.c69 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) IS FALSE), CAST(t0.c69 AS NUMERIC), ((((t0.c69)OR(t0.c2)))AND(t0.c69))))<=(((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c69, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))), ((t0.c69)IS NOT(t0.c69)))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0))) BETWEEN (json_extract(t0.c69, t0.c0)) AND (CAST(t0.c69 AS BLOB))) DESC);
SELECT * FROM t0 WHERE ((((((t0.c0) IS FALSE), CAST(t0.c69 AS NUMERIC), ((((t0.c69)OR(t0.c2)))AND(t0.c69))))<=(((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c69, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))), ((t0.c69)IS NOT(t0.c69)))))) ORDER BY (((NOT (t0.c0))) BETWEEN (json_extract(t0.c69, t0.c0)) AND (CAST(t0.c69 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) IS FALSE), CAST(t0.c69 AS NUMERIC), ((((t0.c69)OR(t0.c2)))AND(t0.c69))))<=(((((t0.c0, t0.c0, t0.c2)) BETWEEN ((t0.c0, t0.c69, t0.c69)) AND ((t0.c0, t0.c69, t0.c2))), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((x''))), ((t0.c69)IS NOT(t0.c69)))))) IS TRUE)  as count FROM t0 ORDER BY (((NOT (t0.c0))) BETWEEN (json_extract(t0.c69, t0.c0)) AND (CAST(t0.c69 AS BLOB))) DESC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c69)))IS NOT(t0.c69))) ORDER BY ((((x'') ISNULL))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c69)))IS NOT(t0.c69))) IS TRUE)  as count FROM t0 ORDER BY ((((x'') ISNULL))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c69)))IS NOT(t0.c69))) ORDER BY ((((x'') ISNULL))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)*(t0.c69)))IS NOT(t0.c69))) IS TRUE)  as count FROM t0 ORDER BY ((((x'') ISNULL))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)));
SELECT ALL * FROM t0 WHERE (((((t0.c0)*(t0.c69)))IS NOT(t0.c69))) ORDER BY ((((x'') ISNULL))>=(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END));
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, x'd22c'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, x'd22c')) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, x'd22c'));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, x'd22c')) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE RTRIM, x'd22c'));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((-6.27212422E8 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)LIKE(v0.c0))) AND ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-6.27212422E8 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)LIKE(v0.c0))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((-6.27212422E8 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)LIKE(v0.c0))) AND ((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((-6.27212422E8 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)LIKE(v0.c0))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((-6.27212422E8 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)LIKE(v0.c0))) AND ((t0.c2 IN ()))));
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((t0.c0)*(CAST(t0.c69 AS BLOB))) CROSS JOIN t0 ON ((((t0.c0)+(t0.c2))) IS FALSE) WHERE (((- (0.4025597439926005)) IN ())) ORDER BY NULLIF(DISTINCT CAST(x'' AS REAL), t0.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ((((- (0.4025597439926005)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((t0.c0)*(CAST(t0.c69 AS BLOB))) CROSS JOIN t0 ON ((((t0.c0)+(t0.c2))) IS FALSE) ORDER BY NULLIF(DISTINCT CAST(x'' AS REAL), t0.c0 COLLATE BINARY) ASC);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON ((t0.c0)*(CAST(t0.c69 AS BLOB))) CROSS JOIN t0 ON ((((t0.c0)+(t0.c2))) IS FALSE) WHERE (((- (0.4025597439926005)) IN ())) ORDER BY NULLIF(DISTINCT CAST(x'' AS REAL), t0.c0 COLLATE BINARY) ASC;
SELECT SUM(count) FROM (SELECT ((((- (0.4025597439926005)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((t0.c0)*(CAST(t0.c69 AS BLOB))) CROSS JOIN t0 ON ((((t0.c0)+(t0.c2))) IS FALSE) ORDER BY NULLIF(DISTINCT CAST(x'' AS REAL), t0.c0 COLLATE BINARY) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((('209074084')<('td0+D')));
SELECT SUM(count) FROM (SELECT (((('209074084')<('td0+D'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((('209074084')<('td0+D')));
SELECT SUM(count) FROM (SELECT (((('209074084')<('td0+D'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((('209074084')<('td0+D')));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)>=(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)>=(v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (vt0.c0)) COLLATE RTRIM) ORDER BY (((v0.c0 IN ())) NOT BETWEEN ((+ (vt0.c0))) AND (((v0.c0)>=(v0.c0))));
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ()))%(((vt0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))%(((vt0.c0)>>(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ()))%(((vt0.c0)>>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ()))%(((vt0.c0)>>(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c2 IN ()))%(((vt0.c0)>>(t0.c0)))));
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((t0.c2) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2) NOTNULL)) IS FALSE));
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((t0.c2) NOTNULL)) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2) NOTNULL)) IS FALSE));
SELECT * FROM t0, vt0 WHERE (CAST(t0.c0 AS INTEGER)) ORDER BY ((((t0.c2) NOTNULL)) IS FALSE);
SELECT * FROM v0, t0, vt0 WHERE ((x'3d60' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'3d60' IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((x'3d60' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'3d60' IN ())) IS TRUE)  as count FROM v0, t0, vt0);
SELECT * FROM v0, t0, vt0 WHERE ((x'3d60' IN ()));
SELECT * FROM t0, v0 INDEXED BY i32 WHERE (((CAST(t0.c0 AS INTEGER))IS NOT(CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN 'now' ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))IS NOT(CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN 'now' ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0 INDEXED BY i32);
SELECT * FROM t0, v0 INDEXED BY i32 WHERE (((CAST(t0.c0 AS INTEGER))IS NOT(CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN 'now' ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))IS NOT(CASE WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN v0.c0 WHEN t0.c0 THEN t0.c2 WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN 'now' ELSE t0.c0 END))) IS TRUE)  as count FROM t0, v0 INDEXED BY i32);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1761880593');
SELECT SUM(count) FROM (SELECT ALL (('-1761880593') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1761880593');
SELECT SUM(count) FROM (SELECT ALL (('-1761880593') IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ('-1761880593');
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 FULL OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))LIKE(((t0.c2)|(t0.c69)))) WHERE (CASE WHEN v0.c0 THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 FULL OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))LIKE(((t0.c2)|(t0.c69)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 FULL OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))LIKE(((t0.c2)|(t0.c69)))) WHERE (CASE WHEN v0.c0 THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON vt0.c0 FULL OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))LIKE(((t0.c2)|(t0.c69)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON vt0.c0 FULL OUTER JOIN v0 ON ((((v0.c0)>(v0.c0)))LIKE(((t0.c2)|(t0.c69)))) WHERE (CASE WHEN v0.c0 THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c2 WHEN vt0.c0 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0 WHERE ((((((x'') BETWEEN (t0.c2) AND (t0.c0)), ((t0.c69)>>(x'')), ((t0.c69) IS TRUE)))>((t0.c69, ((t0.c2) ISNULL), TRIM(t0.c69, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (t0.c2) AND (t0.c0)), ((t0.c69)>>(x'')), ((t0.c69) IS TRUE)))>((t0.c69, ((t0.c2) ISNULL), TRIM(t0.c69, t0.c2))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0 WHERE ((((((x'') BETWEEN (t0.c2) AND (t0.c0)), ((t0.c69)>>(x'')), ((t0.c69) IS TRUE)))>((t0.c69, ((t0.c2) ISNULL), TRIM(t0.c69, t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((x'') BETWEEN (t0.c2) AND (t0.c0)), ((t0.c69)>>(x'')), ((t0.c69) IS TRUE)))>((t0.c69, ((t0.c2) ISNULL), TRIM(t0.c69, t0.c2))))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0 NOT INDEXED, v0 WHERE ((((((x'') BETWEEN (t0.c2) AND (t0.c0)), ((t0.c69)>>(x'')), ((t0.c69) IS TRUE)))>((t0.c69, ((t0.c2) ISNULL), TRIM(t0.c69, t0.c2)))));
SELECT ALL * FROM vt0, t0 CROSS JOIN v0 ON ((((-8.70580406E8)AND(t0.c69)))AND(((((v0.c0)AND(vt0.c0)))OR(t0.c2)))) WHERE ((((((((((t0.c0 IN (vt0.c0, t0.c2)))AND(((t0.c0)GLOB(t0.c2)))))AND(UPPER(t0.c0))))AND('O2櫠!''ৢv')))AND(((v0.c0)&(t0.c2))))) ORDER BY ((((vt0.c0)GLOB(NULL)))LIKE(((((t0.c0)AND(t0.c69)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (vt0.c0, t0.c2)))AND(((t0.c0)GLOB(t0.c2)))))AND(UPPER(t0.c0))))AND('O2櫠!''ৢv')))AND(((v0.c0)&(t0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON ((((-8.70580406E8)AND(t0.c69)))AND(((((v0.c0)AND(vt0.c0)))OR(t0.c2)))) ORDER BY ((((vt0.c0)GLOB(NULL)))LIKE(((((t0.c0)AND(t0.c69)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 CROSS JOIN v0 ON ((((-8.70580406E8)AND(t0.c69)))AND(((((v0.c0)AND(vt0.c0)))OR(t0.c2)))) WHERE ((((((((((t0.c0 IN (vt0.c0, t0.c2)))AND(((t0.c0)GLOB(t0.c2)))))AND(UPPER(t0.c0))))AND('O2櫠!''ৢv')))AND(((v0.c0)&(t0.c2))))) ORDER BY ((((vt0.c0)GLOB(NULL)))LIKE(((((t0.c0)AND(t0.c69)))AND(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0 IN (vt0.c0, t0.c2)))AND(((t0.c0)GLOB(t0.c2)))))AND(UPPER(t0.c0))))AND('O2櫠!''ৢv')))AND(((v0.c0)&(t0.c2))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN v0 ON ((((-8.70580406E8)AND(t0.c69)))AND(((((v0.c0)AND(vt0.c0)))OR(t0.c2)))) ORDER BY ((((vt0.c0)GLOB(NULL)))LIKE(((((t0.c0)AND(t0.c69)))AND(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 CROSS JOIN v0 ON ((((-8.70580406E8)AND(t0.c69)))AND(((((v0.c0)AND(vt0.c0)))OR(t0.c2)))) WHERE ((((((((((t0.c0 IN (vt0.c0, t0.c2)))AND(((t0.c0)GLOB(t0.c2)))))AND(UPPER(t0.c0))))AND('O2櫠!''ৢv')))AND(((v0.c0)&(t0.c2))))) ORDER BY ((((vt0.c0)GLOB(NULL)))LIKE(((((t0.c0)AND(t0.c69)))AND(t0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c0);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(CASE WHEN t0.c69 THEN -838060097 END, 0.27729808973685677) WHERE ((((((t0.c0))!=((x'2c76'))))OR((t0.c69 IN ())))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((x'2c76'))))OR((t0.c69 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(CASE WHEN t0.c69 THEN -838060097 END, 0.27729808973685677) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(CASE WHEN t0.c69 THEN -838060097 END, 0.27729808973685677) WHERE ((((((t0.c0))!=((x'2c76'))))OR((t0.c69 IN ())))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))!=((x'2c76'))))OR((t0.c69 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(CASE WHEN t0.c69 THEN -838060097 END, 0.27729808973685677) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS LAST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON LIKELIHOOD(CASE WHEN t0.c69 THEN -838060097 END, 0.27729808973685677) WHERE ((((((t0.c0))!=((x'2c76'))))OR((t0.c69 IN ())))) ORDER BY CAST((t0.c0 IN ()) AS REAL) DESC  NULLS LAST;
SELECT * FROM t0 CROSS JOIN vt0 ON (('202861268') BETWEEN (((vt0.c0) NOT NULL)) AND (t0.c69)) FULL OUTER JOIN v0 ON (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, t0.c69, vt0.c0))) WHERE (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) THEN '476684638' END, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (('202861268') BETWEEN (((vt0.c0) NOT NULL)) AND (t0.c69)) FULL OUTER JOIN v0 ON (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, t0.c69, vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) THEN '476684638' END, NULL  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON (('202861268') BETWEEN (((vt0.c0) NOT NULL)) AND (t0.c69)) FULL OUTER JOIN v0 ON (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, t0.c69, vt0.c0))) WHERE (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) THEN '476684638' END, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (('202861268') BETWEEN (((vt0.c0) NOT NULL)) AND (t0.c69)) FULL OUTER JOIN v0 ON (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, t0.c69, vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) THEN '476684638' END, NULL  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN vt0 ON (('202861268') BETWEEN (((vt0.c0) NOT NULL)) AND (t0.c69)) FULL OUTER JOIN v0 ON (+ (COALESCE(DISTINCT vt0.c0, vt0.c0, t0.c69, vt0.c0))) WHERE (((((vt0.c0)OR(vt0.c0)))OR(t0.c0)) COLLATE BINARY) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) THEN '476684638' END, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i32, v0 NATURAL JOIN t0 WHERE (((t0.c69)GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69)GLOB(NULL))) IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i32, v0 NATURAL JOIN t0 WHERE (((t0.c69)GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c69)GLOB(NULL))) IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL)) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) ISNULL)) ISNULL));
SELECT * FROM v0, t0, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY x'124c', ((t0.c2 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'124c', ((t0.c2 COLLATE RTRIM) IS TRUE));
SELECT * FROM v0, t0, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY x'124c', ((t0.c2 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ((NULL COLLATE NOCASE) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY x'124c', ((t0.c2 COLLATE RTRIM) IS TRUE));
SELECT * FROM v0, t0, vt0 WHERE (NULL COLLATE NOCASE) ORDER BY x'124c', ((t0.c2 COLLATE RTRIM) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)*(v0.c0)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ('-520397435', v0.c0)))))AND(((x'c4da')/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)*(v0.c0)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ('-520397435', v0.c0)))))AND(((x'c4da')/(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)*(v0.c0)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ('-520397435', v0.c0)))))AND(((x'c4da')/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)*(v0.c0)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ('-520397435', v0.c0)))))AND(((x'c4da')/(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)*(v0.c0)))AND(((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((vt0.c0 IN ('-520397435', v0.c0)))))AND(((x'c4da')/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END THEN (((t0.c2, t0.c0, t0.c0))=((t0.c2, t0.c69, t0.c69))) END) ORDER BY (((v0.c0, t0.c69, t0.c69))=((t0.c2, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST, CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t0.c0))  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END THEN (((t0.c2, t0.c0, t0.c0))=((t0.c2, t0.c69, t0.c69))) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((v0.c0, t0.c69, t0.c69))==((t0.c2, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST, CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END THEN (((t0.c2, t0.c0, t0.c0))=((t0.c2, t0.c69, t0.c69))) END) ORDER BY (((v0.c0, t0.c69, t0.c69))=((t0.c2, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST, CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)/(t0.c0))  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END THEN (((t0.c2, t0.c0, t0.c0))=((t0.c2, t0.c69, t0.c69))) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((v0.c0, t0.c69, t0.c69))==((t0.c2, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST, CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (CASE ((t0.c0)/(t0.c0))  WHEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c2 END THEN (((t0.c2, t0.c0, t0.c0))=((t0.c2, t0.c69, t0.c69))) END) ORDER BY (((v0.c0, t0.c69, t0.c69))=((t0.c2, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST, CAST(CAST(t0.c2 AS REAL) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)-(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)-(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(((v0.c0)||(x'')) AS NUMERIC)) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c69) AND (t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)||(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT (((t0.c0) BETWEEN (t0.c69) AND (t0.c69)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(((v0.c0)||(x'')) AS NUMERIC)) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c69) AND (t0.c69)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)||(x'')) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, t0 ORDER BY (NOT (((t0.c0) BETWEEN (t0.c69) AND (t0.c69)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (CAST(((v0.c0)||(x'')) AS NUMERIC)) ORDER BY (NOT (((t0.c0) BETWEEN (t0.c69) AND (t0.c69)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 INDEXED BY i32 WHERE (((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c2 COLLATE BINARY))) ORDER BY (NOT (CASE t0.c69  WHEN t0.c2 THEN t0.c0 ELSE 0.9683865608853048 END)) DESC, (((- (t0.c0))) BETWEEN (((t0.c69) NOTNULL)) AND (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i32 ORDER BY (NOT (CASE t0.c69  WHEN t0.c2 THEN t0.c0 ELSE 0.9683865608853048 END)) DESC, (((- (t0.c0))) BETWEEN (((t0.c69) NOTNULL)) AND (''))  NULLS LAST);
SELECT ALL * FROM t0 INDEXED BY i32 WHERE (((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c2 COLLATE BINARY))) ORDER BY (NOT (CASE t0.c69  WHEN t0.c2 THEN t0.c0 ELSE 0.9683865608853048 END)) DESC, (((- (t0.c0))) BETWEEN (((t0.c69) NOTNULL)) AND (''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE NOCASE) BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 INDEXED BY i32 ORDER BY (NOT (CASE t0.c69  WHEN t0.c2 THEN t0.c0 ELSE 0.9683865608853048 END)) DESC, (((- (t0.c0))) BETWEEN (((t0.c69) NOTNULL)) AND (''))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c69)%(t0.c69))  WHEN ((1556134027)IS(t0.c69)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c69)) ELSE (~ (t0.c0)) END) ORDER BY (((((t0.c69))==((t0.c69))))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c69)%(t0.c69))  WHEN ((1556134027)IS(t0.c69)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c69)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69))==((t0.c69))))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c69)%(t0.c69))  WHEN ((1556134027)IS(t0.c69)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c69)) ELSE (~ (t0.c0)) END) ORDER BY (((((t0.c69))==((t0.c69))))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c69)%(t0.c69))  WHEN ((1556134027)IS(t0.c69)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c69)) ELSE (~ (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69))==((t0.c69))))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c69)%(t0.c69))  WHEN ((1556134027)IS(t0.c69)) THEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c69)) ELSE (~ (t0.c0)) END) ORDER BY (((((t0.c69))==((t0.c69))))||(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL)) IS TRUE)) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(v0.c0) AS REAL), ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(TRIM(v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(v0.c0) AS REAL), ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(TRIM(v0.c0, v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL)) IS TRUE)) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(v0.c0) AS REAL), ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(TRIM(v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY CAST(SQLITE_COMPILEOPTION_USED(v0.c0) AS REAL), ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(TRIM(v0.c0, v0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL)) IS TRUE)) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(v0.c0) AS REAL), ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)GLOB(TRIM(v0.c0, v0.c0)))  NULLS LAST;
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)AND(t0.c0)))OR(t0.c69)) IN ())) ORDER BY ((t0.c69 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t0.c69)) AND (((vt0.c0)<(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(t0.c0)))OR(t0.c69)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((t0.c69 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t0.c69)) AND (((vt0.c0)<(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)AND(t0.c0)))OR(t0.c69)) IN ())) ORDER BY ((t0.c69 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t0.c69)) AND (((vt0.c0)<(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(t0.c0)))OR(t0.c69)) IN ())) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY ((t0.c69 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t0.c69)) AND (((vt0.c0)<(t0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((((vt0.c0)AND(t0.c0)))OR(t0.c69)) IN ())) ORDER BY ((t0.c69 COLLATE NOCASE) BETWEEN (TYPEOF(DISTINCT t0.c69)) AND (((vt0.c0)<(t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (0.835407160470256) AND (vt0.c0))) AND ((((0.45816127427823783)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (0.835407160470256) AND (vt0.c0))) AND ((((0.45816127427823783)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (0.835407160470256) AND (vt0.c0))) AND ((((0.45816127427823783)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (0.835407160470256) AND (vt0.c0))) AND ((((0.45816127427823783)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) BETWEEN (0.835407160470256) AND (vt0.c0))) AND ((((0.45816127427823783)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((t0.c69)OR((vt0.c0 IN ()))))AND(TRIM(t0.c2))) WHERE ((((((v0.c0)LIKE(t0.c2))))<((TYPEOF(t0.c2))))) ORDER BY (((((((t0.c0))>((v0.c0))))OR(((((t0.c2)AND(vt0.c0)))OR(v0.c0)))))OR('544564133')) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)LIKE(t0.c2))))<((TYPEOF(t0.c2))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((t0.c69)OR((vt0.c0 IN ()))))AND(TRIM(t0.c2))) ORDER BY (((((((t0.c0))>((v0.c0))))OR(((((t0.c2)AND(vt0.c0)))OR(v0.c0)))))OR('544564133')) DESC);
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((t0.c69)OR((vt0.c0 IN ()))))AND(TRIM(t0.c2))) WHERE ((((((v0.c0)LIKE(t0.c2))))<((TYPEOF(t0.c2))))) ORDER BY (((((((t0.c0))>((v0.c0))))OR(((((t0.c2)AND(vt0.c0)))OR(v0.c0)))))OR('544564133')) DESC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)LIKE(t0.c2))))<((TYPEOF(t0.c2))))) IS TRUE)  as count FROM v0, vt0 CROSS JOIN t0 ON ((((t0.c69)OR((vt0.c0 IN ()))))AND(TRIM(t0.c2))) ORDER BY (((((((t0.c0))>((v0.c0))))OR(((((t0.c2)AND(vt0.c0)))OR(v0.c0)))))OR('544564133')) DESC);
SELECT ALL * FROM v0, vt0 CROSS JOIN t0 ON ((((t0.c69)OR((vt0.c0 IN ()))))AND(TRIM(t0.c2))) WHERE ((((((v0.c0)LIKE(t0.c2))))<((TYPEOF(t0.c2))))) ORDER BY (((((((t0.c0))>((v0.c0))))OR(((((t0.c2)AND(vt0.c0)))OR(v0.c0)))))OR('544564133')) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c69)*(t0.c69)))=((NOT (t0.c2))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69)*(t0.c69)))==((NOT (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY NULL COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c69)*(t0.c69)))=((NOT (t0.c2))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c69)*(t0.c69)))==((NOT (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY NULL COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c69)*(t0.c69)))=((NOT (t0.c2))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE (((~ (v0.c0)) IN (CAST(vt0.c0 AS INTEGER), TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN (CAST(vt0.c0 AS INTEGER), TYPEOF(NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((~ (v0.c0)) IN (CAST(vt0.c0 AS INTEGER), TYPEOF(NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN (CAST(vt0.c0 AS INTEGER), TYPEOF(NULL)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((~ (v0.c0)) IN (CAST(vt0.c0 AS INTEGER), TYPEOF(NULL))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c0, x'', x'09d4')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c69)))))>=((((('{')) BETWEEN ((t0.c2)) AND ((t0.c0)))))) WHERE (CASE CAST(t0.c2 AS REAL)  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) WHEN (((t0.c69, t0.c0, t0.c2)) BETWEEN ((v0.c0, t0.c2, t0.c69)) AND ((t0.c0, v0.c0, t0.c69))) THEN CAST(t0.c69 AS NUMERIC) WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(0x35e391fb AS TEXT) ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c2 AS REAL)  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) WHEN (((t0.c69, t0.c0, t0.c2)) BETWEEN ((v0.c0, t0.c2, t0.c69)) AND ((t0.c0, v0.c0, t0.c69))) THEN CAST(t0.c69 AS NUMERIC) WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(0X35e391fb AS TEXT) ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c0, x'', x'09d4')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c69)))))>=((((('{')) BETWEEN ((t0.c2)) AND ((t0.c0)))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c0, x'', x'09d4')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c69)))))>=((((('{')) BETWEEN ((t0.c2)) AND ((t0.c0)))))) WHERE (CASE CAST(t0.c2 AS REAL)  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) WHEN (((t0.c69, t0.c0, t0.c2)) BETWEEN ((v0.c0, t0.c2, t0.c69)) AND ((t0.c0, v0.c0, t0.c69))) THEN CAST(t0.c69 AS NUMERIC) WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(0x35e391fb AS TEXT) ELSE CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(t0.c2 AS REAL)  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) WHEN (((t0.c69, t0.c0, t0.c2)) BETWEEN ((v0.c0, t0.c2, t0.c69)) AND ((t0.c0, v0.c0, t0.c69))) THEN CAST(t0.c69 AS NUMERIC) WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(0X35e391fb AS TEXT) ELSE CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c0, x'', x'09d4')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c69)))))>=((((('{')) BETWEEN ((t0.c2)) AND ((t0.c0)))))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON ((((((t0.c0, x'', x'09d4')) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c69)))))>=((((('{')) BETWEEN ((t0.c2)) AND ((t0.c0)))))) WHERE (CASE CAST(t0.c2 AS REAL)  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (t0.c0) AND (v0.c0)) WHEN (((t0.c69, t0.c0, t0.c2)) BETWEEN ((v0.c0, t0.c2, t0.c69)) AND ((t0.c0, v0.c0, t0.c69))) THEN CAST(t0.c69 AS NUMERIC) WHEN ((v0.c0)GLOB(v0.c0)) THEN CAST(0x35e391fb AS TEXT) ELSE CAST(t0.c0 AS TEXT) END);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (('-908680762')%(((v0.c0)GLOB(v0.c0)))) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON (('-908680762')%(((v0.c0)GLOB(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (('-908680762')%(((v0.c0)GLOB(v0.c0)))) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69))))) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t0 ON (('-908680762')%(((v0.c0)GLOB(v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN t0 ON (('-908680762')%(((v0.c0)GLOB(v0.c0)))) WHERE (((((vt0.c0) ISNULL)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (t0.c2))) AND (((t0.c0) NOT BETWEEN (t0.c69) AND (t0.c69)))));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS REAL)) ORDER BY CASE WHEN NULL THEN ((v0.c0)*(v0.c0)) ELSE v0.c0 END ASC, ((v0.c0 COLLATE NOCASE)+(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN NULL THEN ((v0.c0)*(v0.c0)) ELSE v0.c0 END ASC, ((v0.c0 COLLATE NOCASE)+(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS REAL)) ORDER BY CASE WHEN NULL THEN ((v0.c0)*(v0.c0)) ELSE v0.c0 END ASC, ((v0.c0 COLLATE NOCASE)+(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN NULL THEN ((v0.c0)*(v0.c0)) ELSE v0.c0 END ASC, ((v0.c0 COLLATE NOCASE)+(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS TEXT) AS REAL)) ORDER BY CASE WHEN NULL THEN ((v0.c0)*(v0.c0)) ELSE v0.c0 END ASC, ((v0.c0 COLLATE NOCASE)+(CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY CAST(UNICODE(vt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNICODE(vt0.c0) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY CAST(UNICODE(vt0.c0) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(UNICODE(vt0.c0) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (vt0.c0) ORDER BY CAST(UNICODE(vt0.c0) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('-367081329') ORDER BY ((((t0.c0)OR(x'')))IS NOT((((t0.c0))=((t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (('-367081329') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c0)OR(x'')))IS NOT((((t0.c0))==((t0.c2))))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('-367081329') ORDER BY ((((t0.c0)OR(x'')))IS NOT((((t0.c0))=((t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (('-367081329') IS TRUE)  as count FROM v0, vt0, t0 ORDER BY ((((t0.c0)OR(x'')))IS NOT((((t0.c0))==((t0.c2))))));
SELECT ALL COUNT(*) FROM v0, vt0, t0 WHERE ('-367081329') ORDER BY ((((t0.c0)OR(x'')))IS NOT((((t0.c0))=((t0.c2)))));
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c69)IS(v0.c0)))IS(json_extract(vt0.c0, t0.c69))) WHERE (((((v0.c0)+(vt0.c0))) BETWEEN (((((((((t0.c69)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c69))) AND (CASE t0.c0  WHEN t0.c2 THEN '%1' END))) ORDER BY CASE WHEN t0.c69 THEN t0.c0 END COLLATE RTRIM, ((((t0.c2)<<(v0.c0)))<<(v0.c0)), ((t0.c0)OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)+(vt0.c0))) BETWEEN (((((((((t0.c69)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c69))) AND (CASE t0.c0  WHEN t0.c2 THEN '%1' END))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c69)IS(v0.c0)))IS(json_extract(vt0.c0, t0.c69))) ORDER BY CASE WHEN t0.c69 THEN t0.c0 END COLLATE RTRIM, ((((t0.c2)<<(v0.c0)))<<(v0.c0)), ((t0.c0)OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c69)IS(v0.c0)))IS(json_extract(vt0.c0, t0.c69))) WHERE (((((v0.c0)+(vt0.c0))) BETWEEN (((((((((t0.c69)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c69))) AND (CASE t0.c0  WHEN t0.c2 THEN '%1' END))) ORDER BY CASE WHEN t0.c69 THEN t0.c0 END COLLATE RTRIM, ((((t0.c2)<<(v0.c0)))<<(v0.c0)), ((t0.c0)OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)+(vt0.c0))) BETWEEN (((((((((t0.c69)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c69))) AND (CASE t0.c0  WHEN t0.c2 THEN '%1' END))) IS TRUE)  as count FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c69)IS(v0.c0)))IS(json_extract(vt0.c0, t0.c69))) ORDER BY CASE WHEN t0.c69 THEN t0.c0 END COLLATE RTRIM, ((((t0.c2)<<(v0.c0)))<<(v0.c0)), ((t0.c0)OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM t0, v0 RIGHT OUTER JOIN vt0 ON ((((t0.c69)IS(v0.c0)))IS(json_extract(vt0.c0, t0.c69))) WHERE (((((v0.c0)+(vt0.c0))) BETWEEN (((((((((t0.c69)AND(t0.c0)))AND(t0.c0)))OR(x'')))AND(t0.c69))) AND (CASE t0.c0  WHEN t0.c2 THEN '%1' END))) ORDER BY CASE WHEN t0.c69 THEN t0.c0 END COLLATE RTRIM, ((((t0.c2)<<(v0.c0)))<<(v0.c0)), ((t0.c0)OR(vt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0 COLLATE NOCASE, CASE t0.c2  WHEN t0.c69 THEN t0.c0 ELSE t0.c0 END, CASE WHEN v0.c0 THEN t0.c2 END))<=((CAST(v0.c0 AS BLOB), x'', ((((v0.c0)OR(t0.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE, CASE t0.c2  WHEN t0.c69 THEN t0.c0 ELSE t0.c0 END, CASE WHEN v0.c0 THEN t0.c2 END))<=((CAST(v0.c0 AS BLOB), x'', ((((v0.c0)OR(t0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0 COLLATE NOCASE, CASE t0.c2  WHEN t0.c69 THEN t0.c0 ELSE t0.c0 END, CASE WHEN v0.c0 THEN t0.c2 END))<=((CAST(v0.c0 AS BLOB), x'', ((((v0.c0)OR(t0.c2)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 COLLATE NOCASE, CASE t0.c2  WHEN t0.c69 THEN t0.c0 ELSE t0.c0 END, CASE WHEN v0.c0 THEN t0.c2 END))<=((CAST(v0.c0 AS BLOB), x'', ((((v0.c0)OR(t0.c2)))AND(v0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c0 COLLATE NOCASE, CASE t0.c2  WHEN t0.c69 THEN t0.c0 ELSE t0.c0 END, CASE WHEN v0.c0 THEN t0.c2 END))<=((CAST(v0.c0 AS BLOB), x'', ((((v0.c0)OR(t0.c2)))AND(v0.c0))))));
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c0 IN (vt0.c0, vt0.c0))  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0)OR(vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END);
SELECT * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c0)GLOB('KB>d-<Dg?')) THEN CAST(v0.c0 AS REAL) ELSE (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN ())  WHEN ((v0.c0)GLOB('KB>d-<Dg?')) THEN CAST(v0.c0 AS REAL) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c0)GLOB('KB>d-<Dg?')) THEN CAST(v0.c0 AS REAL) ELSE (- (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (v0.c0 IN ())  WHEN ((v0.c0)GLOB('KB>d-<Dg?')) THEN CAST(v0.c0 AS REAL) ELSE (- (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (v0.c0 IN ())  WHEN ((v0.c0)GLOB('KB>d-<Dg?')) THEN CAST(v0.c0 AS REAL) ELSE (- (v0.c0)) END);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)>(t0.c69)))%(CAST(t0.c2 AS TEXT)))) ORDER BY ((((NULL) IS FALSE))>(json_insert(t0.c69, NULL, t0.c69))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c69)))%(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((NULL) IS FALSE))>(json_insert(t0.c69, NULL, t0.c69))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)>(t0.c69)))%(CAST(t0.c2 AS TEXT)))) ORDER BY ((((NULL) IS FALSE))>(json_insert(t0.c69, NULL, t0.c69))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c69)))%(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((NULL) IS FALSE))>(json_insert(t0.c69, NULL, t0.c69))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (((((t0.c0)>(t0.c69)))%(CAST(t0.c2 AS TEXT)))) ORDER BY ((((NULL) IS FALSE))>(json_insert(t0.c69, NULL, t0.c69))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((t0.c69))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((t0.c69)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((t0.c69))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((t0.c69)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT * FROM vt0, v0, t0 WHERE ((((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((t0.c69))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (NULL) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (0.6824810357199678))) ORDER BY CAST(CASE WHEN t0.c69 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.6824810357199678))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN t0.c69 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (0.6824810357199678))) ORDER BY CAST(CASE WHEN t0.c69 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((- (0.6824810357199678))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN t0.c69 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END AS REAL) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (0.6824810357199678))) ORDER BY CAST(CASE WHEN t0.c69 THEN x'' WHEN t0.c2 THEN t0.c0 WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END AS REAL) ASC;
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c0) NOTNULL)) NOT NULL));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((NULL COLLATE NOCASE)>(((NULL)/(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)>(((NULL)/(t0.c69))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((NULL COLLATE NOCASE)>(((NULL)/(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE NOCASE)>(((NULL)/(t0.c69))))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((NULL COLLATE NOCASE)>(((NULL)/(t0.c69)))));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN highlight(t0.c2, t0.c69, t0.c0, t0.c2) THEN CASE WHEN '-1389374514' THEN t0.c0 ELSE t0.c2 END ELSE t0.c2 END) ORDER BY (((((t0.c69)AND(t0.c0)))AND(t0.c0)) IN ()), ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c69) AND (((((t0.c2)AND(t0.c0)))AND(x'')))) ASC  NULLS FIRST, (('-1233539137')IS NOT((t0.c2 IN (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c2))  WHEN highlight(t0.c2, t0.c69, t0.c0, t0.c2) THEN CASE WHEN '-1389374514' THEN t0.c0 ELSE t0.c2 END ELSE t0.c2 END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69)AND(t0.c0)))AND(t0.c0)) IN ()), ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c69) AND (((((t0.c2)AND(t0.c0)))AND(x'')))) ASC  NULLS FIRST, (('-1233539137')IS NOT((t0.c2 IN (t0.c2)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN highlight(t0.c2, t0.c69, t0.c0, t0.c2) THEN CASE WHEN '-1389374514' THEN t0.c0 ELSE t0.c2 END ELSE t0.c2 END) ORDER BY (((((t0.c69)AND(t0.c0)))AND(t0.c0)) IN ()), ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c69) AND (((((t0.c2)AND(t0.c0)))AND(x'')))) ASC  NULLS FIRST, (('-1233539137')IS NOT((t0.c2 IN (t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (NOT (t0.c2))  WHEN highlight(t0.c2, t0.c69, t0.c0, t0.c2) THEN CASE WHEN '-1389374514' THEN t0.c0 ELSE t0.c2 END ELSE t0.c2 END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69)AND(t0.c0)))AND(t0.c0)) IN ()), ((((((t0.c0)OR(t0.c0)))OR(t0.c0))) NOT BETWEEN (t0.c69) AND (((((t0.c2)AND(t0.c0)))AND(x'')))) ASC  NULLS FIRST, (('-1233539137')IS NOT((t0.c2 IN (t0.c2)))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY (~ (t0.c2)) COLLATE RTRIM;
SELECT * FROM v0, t0, vt0 WHERE (((UPPER(DISTINCT v0.c0))||(TRIM(vt0.c0)))) ORDER BY (((((((((v0.c0 IN ()))AND(((((t0.c2)AND(vt0.c0)))OR(t0.c0)))))AND(t0.c69 COLLATE RTRIM)))AND((((t0.c0, vt0.c0, vt0.c0))<>((t0.c0, t0.c69, t0.c69))))))OR((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT v0.c0))||(TRIM(vt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((((((v0.c0 IN ()))AND(((((t0.c2)AND(vt0.c0)))OR(t0.c0)))))AND(t0.c69 COLLATE RTRIM)))AND((((t0.c0, vt0.c0, vt0.c0))!=((t0.c0, t0.c69, t0.c69))))))OR((+ (t0.c0)))));
SELECT * FROM v0, t0, vt0 WHERE (((UPPER(DISTINCT v0.c0))||(TRIM(vt0.c0)))) ORDER BY (((((((((v0.c0 IN ()))AND(((((t0.c2)AND(vt0.c0)))OR(t0.c0)))))AND(t0.c69 COLLATE RTRIM)))AND((((t0.c0, vt0.c0, vt0.c0))<>((t0.c0, t0.c69, t0.c69))))))OR((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT v0.c0))||(TRIM(vt0.c0)))) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY (((((((((v0.c0 IN ()))AND(((((t0.c2)AND(vt0.c0)))OR(t0.c0)))))AND(t0.c69 COLLATE RTRIM)))AND((((t0.c0, vt0.c0, vt0.c0))!=((t0.c0, t0.c69, t0.c69))))))OR((+ (t0.c0)))));
SELECT * FROM v0, t0, vt0 WHERE (((UPPER(DISTINCT v0.c0))||(TRIM(vt0.c0)))) ORDER BY (((((((((v0.c0 IN ()))AND(((((t0.c2)AND(vt0.c0)))OR(t0.c0)))))AND(t0.c69 COLLATE RTRIM)))AND((((t0.c0, vt0.c0, vt0.c0))<>((t0.c0, t0.c69, t0.c69))))))OR((+ (t0.c0))));
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))IS(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))IS(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))IS(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))IS(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((~ (v0.c0)))IS(v0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LTRIM((t0.c0 IN ())) WHERE ((((t0.c2, t0.c69, t0.c2)) NOT BETWEEN (((vt0.c0 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c69)-(t0.c2)))) AND ((UNLIKELY(DISTINCT vt0.c0), ((t0.c69)%(t0.c2)), (((t0.c2))!=((t0.c69)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c69, t0.c2)) NOT BETWEEN (((vt0.c0 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c69)-(t0.c2)))) AND ((UNLIKELY(DISTINCT vt0.c0), ((t0.c69)%(t0.c2)), (((t0.c2))<>((t0.c69))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LTRIM((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LTRIM((t0.c0 IN ())) WHERE ((((t0.c2, t0.c69, t0.c2)) NOT BETWEEN (((vt0.c0 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c69)-(t0.c2)))) AND ((UNLIKELY(DISTINCT vt0.c0), ((t0.c69)%(t0.c2)), (((t0.c2))!=((t0.c69)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c69, t0.c2)) NOT BETWEEN (((vt0.c0 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c69)-(t0.c2)))) AND ((UNLIKELY(DISTINCT vt0.c0), ((t0.c69)%(t0.c2)), (((t0.c2))<>((t0.c69))))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON LTRIM((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON LTRIM((t0.c0 IN ())) WHERE ((((t0.c2, t0.c69, t0.c2)) NOT BETWEEN (((vt0.c0 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (vt0.c0)), ((t0.c69)-(t0.c2)))) AND ((UNLIKELY(DISTINCT vt0.c0), ((t0.c69)%(t0.c2)), (((t0.c2))!=((t0.c69)))))));
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (0.8324870438883635);
SELECT SUM(count) FROM (SELECT ((0.8324870438883635) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (0.8324870438883635);
SELECT SUM(count) FROM (SELECT ((0.8324870438883635) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE (0.8324870438883635);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 IN ()))OR((~ (v0.c0)))) WHERE ((NOT (json_valid(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_valid(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0 IN ()))OR((~ (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 IN ()))OR((~ (v0.c0)))) WHERE ((NOT (json_valid(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_valid(v0.c0)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0 IN ()))OR((~ (v0.c0)))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 IN ()))OR((~ (v0.c0)))) WHERE ((NOT (json_valid(v0.c0))));
SELECT ALL * FROM t0 WHERE ((~ (IFNULL(DISTINCT t0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (IFNULL(DISTINCT t0.c2, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (IFNULL(DISTINCT t0.c2, t0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (IFNULL(DISTINCT t0.c2, t0.c0)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (IFNULL(DISTINCT t0.c2, t0.c0))));
SELECT ALL * FROM v0, vt0, t0 WHERE ((((~ (t0.c0)))&(((4.28403103E8)>('61b')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))&(((4.28403103E8)>('61b'))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((~ (t0.c0)))&(((4.28403103E8)>('61b')))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))&(((4.28403103E8)>('61b'))))) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE ((((~ (t0.c0)))&(((4.28403103E8)>('61b')))));
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (json_array_length(v0.c0, v0.c0) IN ('TRUE', LIKELY(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (json_array_length(v0.c0, v0.c0) IN ('TRUE', LIKELY(v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (json_array_length(v0.c0, v0.c0) IN ('TRUE', LIKELY(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)/(v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY (json_array_length(v0.c0, v0.c0) IN ('TRUE', LIKELY(v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE ((((v0.c0)/(v0.c0)) IN ())) ORDER BY (json_array_length(v0.c0, v0.c0) IN ('TRUE', LIKELY(v0.c0))) ASC;
SELECT * FROM t0, vt0 WHERE (((((t0.c0)>(t0.c2))) ISNULL)) ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (t0.c2)))) AND ((CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (t0.c2)))) AND ((CAST(t0.c0 AS REAL)))));
SELECT * FROM t0, vt0 WHERE (((((t0.c0)>(t0.c2))) ISNULL)) ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (t0.c2)))) AND ((CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c2))) ISNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (t0.c2)))) AND ((CAST(t0.c0 AS REAL)))));
SELECT * FROM t0, vt0 WHERE (((((t0.c0)>(t0.c2))) ISNULL)) ORDER BY (((vt0.c0)) NOT BETWEEN (((NOT (t0.c2)))) AND ((CAST(t0.c0 AS REAL))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c2 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c2 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(t0.c2 AS TEXT) COLLATE RTRIM);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN (+ (t0.c0)) WHEN CAST(t0.c69 AS BLOB) THEN ((t0.c0)|(vt0.c0)) WHEN (+ (t0.c69)) THEN t0.c69 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END THEN (+ (t0.c0)) WHEN ((t0.c2)AND(t0.c2)) THEN ((((t0.c0)AND(t0.c2)))AND(t0.c69)) END ASC  NULLS LAST, 0xffffffffdc04ebb6 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN (+ (t0.c0)) WHEN CAST(t0.c69 AS BLOB) THEN ((t0.c0)|(vt0.c0)) WHEN (+ (t0.c69)) THEN t0.c69 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END THEN (+ (t0.c0)) WHEN ((t0.c2)AND(t0.c2)) THEN ((((t0.c0)AND(t0.c2)))AND(t0.c69)) END ASC  NULLS LAST, 0xffffffffdc04ebb6 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN (+ (t0.c0)) WHEN CAST(t0.c69 AS BLOB) THEN ((t0.c0)|(vt0.c0)) WHEN (+ (t0.c69)) THEN t0.c69 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END THEN (+ (t0.c0)) WHEN ((t0.c2)AND(t0.c2)) THEN ((((t0.c0)AND(t0.c2)))AND(t0.c69)) END ASC  NULLS LAST, 0xffffffffdc04ebb6 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN (+ (t0.c0)) WHEN CAST(t0.c69 AS BLOB) THEN ((t0.c0)|(vt0.c0)) WHEN (+ (t0.c69)) THEN t0.c69 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END THEN (+ (t0.c0)) WHEN ((t0.c2)AND(t0.c2)) THEN ((((t0.c0)AND(t0.c2)))AND(t0.c69)) END ASC  NULLS LAST, 0xffffffffdc04ebb6 DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN (+ (t0.c0)) WHEN CAST(t0.c69 AS BLOB) THEN ((t0.c0)|(vt0.c0)) WHEN (+ (t0.c69)) THEN t0.c69 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c2 THEN NULL WHEN t0.c0 THEN t0.c2 ELSE vt0.c0 END THEN (+ (t0.c0)) WHEN ((t0.c2)AND(t0.c2)) THEN ((((t0.c0)AND(t0.c2)))AND(t0.c69)) END ASC  NULLS LAST, 0xffffffffdc04ebb6 DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((-2001227661) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((-2001227661) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((-2001227661) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((-2001227661) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY ((-2001227661) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 INDEXED BY i32 WHERE (((((((t0.c2)<=(t0.c2)))OR(CASE t0.c2  WHEN t0.c69 THEN t0.c69 END)))OR(json_type(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<=(t0.c2)))OR(CASE t0.c2  WHEN t0.c69 THEN t0.c69 END)))OR(json_type(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i32);
SELECT ALL COUNT(*) FROM t0 INDEXED BY i32 WHERE (((((((t0.c2)<=(t0.c2)))OR(CASE t0.c2  WHEN t0.c69 THEN t0.c69 END)))OR(json_type(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<=(t0.c2)))OR(CASE t0.c2  WHEN t0.c69 THEN t0.c69 END)))OR(json_type(t0.c2)))) IS TRUE)  as count FROM t0 INDEXED BY i32);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ORDER BY TRIM(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))>=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ORDER BY TRIM(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE NOCASE))>=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM vt0, v0 ORDER BY TRIM(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0 COLLATE NOCASE))>=((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))) ORDER BY TRIM(((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0))) DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UPPER(((vt0.c0)IS NOT(t0.c69))) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((t0.c2)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((t0.c2)+(x''))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UPPER(((vt0.c0)IS NOT(t0.c69))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UPPER(((vt0.c0)IS NOT(t0.c69))) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((t0.c2)+(x'')))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((t0.c2)+(x''))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON UPPER(((vt0.c0)IS NOT(t0.c69))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON UPPER(((vt0.c0)IS NOT(t0.c69))) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((t0.c2)+(x'')))));
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c69 AS NUMERIC))+(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c69 AS NUMERIC))+(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER) DESC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c69 AS NUMERIC))+(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c69 AS NUMERIC))+(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER) DESC);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c69 AS NUMERIC))+(CAST(vt0.c0 AS INTEGER)))) ORDER BY CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS INTEGER) DESC;
SELECT * FROM v0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2)IS NOT(vt0.c0)) THEN CASE WHEN t0.c69 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN '-305479305' ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN (t0.c0 IN ()) WHEN (~ (x'')) THEN (t0.c0 IN (t0.c2, t0.c2)) WHEN ((((t0.c69)AND(t0.c0)))OR(v0.c0)) THEN UNLIKELY(DISTINCT 0X1d85234b) WHEN t0.c0 THEN ((((t0.c69)AND(v0.c0)))AND(t0.c0)) ELSE t0.c2 COLLATE RTRIM END WHERE ('5X');
SELECT SUM(count) FROM (SELECT (('5X') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2)IS NOT(vt0.c0)) THEN CASE WHEN t0.c69 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN '-305479305' ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN (t0.c0 IN ()) WHEN (~ (x'')) THEN (t0.c0 IN (t0.c2, t0.c2)) WHEN ((((t0.c69)AND(t0.c0)))OR(v0.c0)) THEN UNLIKELY(DISTINCT 0x1d85234b) WHEN t0.c0 THEN ((((t0.c69)AND(v0.c0)))AND(t0.c0)) ELSE t0.c2 COLLATE RTRIM END);
SELECT * FROM v0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2)IS NOT(vt0.c0)) THEN CASE WHEN t0.c69 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN '-305479305' ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN (t0.c0 IN ()) WHEN (~ (x'')) THEN (t0.c0 IN (t0.c2, t0.c2)) WHEN ((((t0.c69)AND(t0.c0)))OR(v0.c0)) THEN UNLIKELY(DISTINCT 0X1d85234b) WHEN t0.c0 THEN ((((t0.c69)AND(v0.c0)))AND(t0.c0)) ELSE t0.c2 COLLATE RTRIM END WHERE ('5X');
SELECT SUM(count) FROM (SELECT (('5X') IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CAST(t0.c2 AS NUMERIC)) NOT NULL) RIGHT OUTER JOIN t0 ON CASE WHEN ((t0.c2)IS NOT(vt0.c0)) THEN CASE WHEN t0.c69 THEN t0.c0 WHEN t0.c2 THEN vt0.c0 WHEN t0.c2 THEN '-305479305' ELSE v0.c0 END WHEN CAST(v0.c0 AS BLOB) THEN (t0.c0 IN ()) WHEN (~ (x'')) THEN (t0.c0 IN (t0.c2, t0.c2)) WHEN ((((t0.c69)AND(t0.c0)))OR(v0.c0)) THEN UNLIKELY(DISTINCT 0x1d85234b) WHEN t0.c0 THEN ((((t0.c69)AND(v0.c0)))AND(t0.c0)) ELSE t0.c2 COLLATE RTRIM END);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)GLOB(t0.c2)) IN ())) ORDER BY ((((v0.c0) BETWEEN (t0.c0) AND (t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((v0.c0) BETWEEN (t0.c0) AND (t0.c69))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)GLOB(t0.c2)) IN ())) ORDER BY ((((v0.c0) BETWEEN (t0.c0) AND (t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0, vt0 ORDER BY ((((v0.c0) BETWEEN (t0.c0) AND (t0.c69))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM v0, t0, vt0 WHERE ((((v0.c0)GLOB(t0.c2)) IN ())) ORDER BY ((((v0.c0) BETWEEN (t0.c0) AND (t0.c69))) NOT NULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((0.21411423011255115))>=((t0.c69))) THEN t0.c2 COLLATE BINARY WHEN ((((((((t0.c2)AND(t0.c69)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)>>(t0.c69)) WHEN CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END THEN t0.c0 WHEN json_array(t0.c2, t0.c69, t0.c69, t0.c69) THEN t0.c2 WHEN ((t0.c69) NOTNULL) THEN t0.c2 ELSE ((t0.c2)>>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.21411423011255115))>=((t0.c69))) THEN t0.c2 COLLATE BINARY WHEN ((((((((t0.c2)AND(t0.c69)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)>>(t0.c69)) WHEN CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END THEN t0.c0 WHEN json_array(t0.c2, t0.c69, t0.c69, t0.c69) THEN t0.c2 WHEN ((t0.c69) NOTNULL) THEN t0.c2 ELSE ((t0.c2)>>(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (((0.21411423011255115))>=((t0.c69))) THEN t0.c2 COLLATE BINARY WHEN ((((((((t0.c2)AND(t0.c69)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)>>(t0.c69)) WHEN CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END THEN t0.c0 WHEN json_array(t0.c2, t0.c69, t0.c69, t0.c69) THEN t0.c2 WHEN ((t0.c69) NOTNULL) THEN t0.c2 ELSE ((t0.c2)>>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((0.21411423011255115))>=((t0.c69))) THEN t0.c2 COLLATE BINARY WHEN ((((((((t0.c2)AND(t0.c69)))OR(t0.c2)))OR(t0.c0)))OR(t0.c0)) THEN ((t0.c0)>>(t0.c69)) WHEN CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c0 END THEN t0.c0 WHEN json_array(t0.c2, t0.c69, t0.c69, t0.c69) THEN t0.c2 WHEN ((t0.c69) NOTNULL) THEN t0.c2 ELSE ((t0.c2)>>(t0.c2)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE BINARY COLLATE NOCASE WHERE (((((t0.c69) BETWEEN (x'') AND (t0.c0))) IS FALSE)) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) BETWEEN (x'') AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE BINARY COLLATE NOCASE ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE BINARY COLLATE NOCASE WHERE (((((t0.c69) BETWEEN (x'') AND (t0.c0))) IS FALSE)) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c69) BETWEEN (x'') AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE BINARY COLLATE NOCASE ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON x'' COLLATE BINARY COLLATE NOCASE WHERE (((((t0.c69) BETWEEN (x'') AND (t0.c0))) IS FALSE)) ORDER BY (((vt0.c0 IN ())) IS FALSE) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (NULL);
SELECT * FROM t0 WHERE (((((t0.c2)OR(t0.c69))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c69))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)OR(t0.c69))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(t0.c69))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2)OR(t0.c69))) NOT NULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM vt0, v0 WHERE (((((((((vt0.c0)AND((+ (vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((('-1277144283')/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND((+ (vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((('-1277144283')/(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((vt0.c0)AND((+ (vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((('-1277144283')/(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND((+ (vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((('-1277144283')/(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((((vt0.c0)AND((+ (vt0.c0)))))OR(CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((('-1277144283')/(v0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<>((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<>((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0))<>((t0.c0)))) IS FALSE));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))IS NOT(vt0.c0 COLLATE RTRIM)) WHERE ((((COALESCE(t0.c2, vt0.c0)))>(((((t0.c2))<=((t0.c69))))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) IN (x'', t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((COALESCE(t0.c2, vt0.c0)))>(((((t0.c2))<=((t0.c69))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))IS NOT(vt0.c0 COLLATE RTRIM)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) IN (x'', t0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))IS NOT(vt0.c0 COLLATE RTRIM)) WHERE ((((COALESCE(t0.c2, vt0.c0)))>(((((t0.c2))<=((t0.c69))))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) IN (x'', t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((COALESCE(t0.c2, vt0.c0)))>(((((t0.c2))<=((t0.c69))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))IS NOT(vt0.c0 COLLATE RTRIM)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) IN (x'', t0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c2)))IS NOT(vt0.c0 COLLATE RTRIM)) WHERE ((((COALESCE(t0.c2, vt0.c0)))>(((((t0.c2))<=((t0.c69))))))) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c69)) IN (x'', t0.c2))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0 IN ())))<>((JULIANDAY(x'878f', t0.c2, t0.c69)))) ASC, (json_insert(t0.c2, 0.9304480317493192, t0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN ())))!=((JULIANDAY(x'878f', t0.c2, t0.c69)))) ASC, (json_insert(t0.c2, 0.9304480317493192, t0.c2) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0 IN ())))<>((JULIANDAY(x'878f', t0.c2, t0.c69)))) ASC, (json_insert(t0.c2, 0.9304480317493192, t0.c2) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN ())))!=((JULIANDAY(x'878f', t0.c2, t0.c69)))) ASC, (json_insert(t0.c2, 0.9304480317493192, t0.c2) IN ())  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0 IN ())))<>((JULIANDAY(x'878f', t0.c2, t0.c69)))) ASC, (json_insert(t0.c2, 0.9304480317493192, t0.c2) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ((t0.c2 IN (t0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c2 IN (t0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN (t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 NOT INDEXED ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((t0.c2 IN (t0.c2)) COLLATE BINARY) ORDER BY NULL ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '-1694855457' THEN vt0.c0 END)IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-1694855457' THEN vt0.c0 END)IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '-1694855457' THEN vt0.c0 END)IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN '-1694855457' THEN vt0.c0 END)IS NOT(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN '-1694855457' THEN vt0.c0 END)IS NOT(vt0.c0 COLLATE NOCASE))) ORDER BY ((((vt0.c0))<=((vt0.c0))) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c69)<=(x''))  WHEN ((((((((vt0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN 'aq' COLLATE NOCASE ELSE TYPEOF(x'') END) ORDER BY ((((((((((((((x'e5a0')OR(vt0.c0)))AND(t0.c69)))OR(t0.c0)))OR(t0.c0)))AND(t0.c69)))OR(t0.c0))) NOTNULL) ASC, ((((t0.c0) IS TRUE)) IS FALSE) DESC, ((CAST(t0.c69 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c69)<=(x''))  WHEN ((((((((vt0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN 'aq' COLLATE NOCASE ELSE TYPEOF(x'') END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((((x'e5a0')OR(vt0.c0)))AND(t0.c69)))OR(t0.c0)))OR(t0.c0)))AND(t0.c69)))OR(t0.c0))) NOTNULL) ASC, ((((t0.c0) IS TRUE)) IS FALSE) DESC, ((CAST(t0.c69 AS NUMERIC)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c69)<=(x''))  WHEN ((((((((vt0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN 'aq' COLLATE NOCASE ELSE TYPEOF(x'') END) ORDER BY ((((((((((((((x'e5a0')OR(vt0.c0)))AND(t0.c69)))OR(t0.c0)))OR(t0.c0)))AND(t0.c69)))OR(t0.c0))) NOTNULL) ASC, ((((t0.c0) IS TRUE)) IS FALSE) DESC, ((CAST(t0.c69 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c69)<=(x''))  WHEN ((((((((vt0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN 'aq' COLLATE NOCASE ELSE TYPEOF(x'') END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((((x'e5a0')OR(vt0.c0)))AND(t0.c69)))OR(t0.c0)))OR(t0.c0)))AND(t0.c69)))OR(t0.c0))) NOTNULL) ASC, ((((t0.c0) IS TRUE)) IS FALSE) DESC, ((CAST(t0.c69 AS NUMERIC)) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c69)<=(x''))  WHEN ((((((((vt0.c0)OR(t0.c69)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) THEN 'aq' COLLATE NOCASE ELSE TYPEOF(x'') END) ORDER BY ((((((((((((((x'e5a0')OR(vt0.c0)))AND(t0.c69)))OR(t0.c0)))OR(t0.c0)))AND(t0.c69)))OR(t0.c0))) NOTNULL) ASC, ((((t0.c0) IS TRUE)) IS FALSE) DESC, ((CAST(t0.c69 AS NUMERIC)) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ('廙l\UYF+/');
SELECT SUM(count) FROM (SELECT ALL (('廙l\UYF+/') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('廙l\UYF+/');
SELECT SUM(count) FROM (SELECT ALL (('廙l\UYF+/') IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ('廙l\UYF+/');
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))IS NOT(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))IS NOT(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS NOT(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((- (v0.c0)))IS NOT(v0.c0)));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((((t0.c69)%(t0.c69)))OR((t0.c69 IN ()))))AND(((t0.c69) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c69)%(t0.c69)))OR((t0.c69 IN ()))))AND(((t0.c69) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((((t0.c69)%(t0.c69)))OR((t0.c69 IN ()))))AND(((t0.c69) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c69)%(t0.c69)))OR((t0.c69 IN ()))))AND(((t0.c69) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(v0.c0))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((((((t0.c69)%(t0.c69)))OR((t0.c69 IN ()))))AND(((t0.c69) ISNULL))))OR(t0.c0 COLLATE RTRIM)))AND(v0.c0)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c2)))-((((t0.c69))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))-((((t0.c69))>=((v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c2)))-((((t0.c69))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))-((((t0.c69))>=((v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((NOT (t0.c2)))-((((t0.c69))>=((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(((v0.c0) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ABS(((v0.c0) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(((v0.c0) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ABS(((v0.c0) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ABS(((v0.c0) IS FALSE))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN v0 ON ((t0.c0 COLLATE RTRIM) ISNULL) FULL OUTER JOIN vt0 ON json_array_length(v0.c0) WHERE (((((t0.c69, t0.c69, t0.c69))>((vt0.c0, t0.c69, vt0.c0))) IN ())) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69, t0.c69, t0.c69))>((vt0.c0, t0.c69, vt0.c0))) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c0 COLLATE RTRIM) ISNULL) FULL OUTER JOIN vt0 ON json_array_length(v0.c0) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN v0 ON ((t0.c0 COLLATE RTRIM) ISNULL) FULL OUTER JOIN vt0 ON json_array_length(v0.c0) WHERE (((((t0.c69, t0.c69, t0.c69))>((vt0.c0, t0.c69, vt0.c0))) IN ())) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69, t0.c69, t0.c69))>((vt0.c0, t0.c69, vt0.c0))) IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c0 COLLATE RTRIM) ISNULL) FULL OUTER JOIN vt0 ON json_array_length(v0.c0) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM t0 NOT INDEXED INNER JOIN v0 ON ((t0.c0 COLLATE RTRIM) ISNULL) FULL OUTER JOIN vt0 ON json_array_length(v0.c0) WHERE (((((t0.c69, t0.c69, t0.c69))>((vt0.c0, t0.c69, vt0.c0))) IN ())) ORDER BY (~ (t0.c0 COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON NULL WHERE ((((NOT (t0.c69))) IS FALSE)) ORDER BY ((((((v0.c0)<<(v0.c0)))OR(v0.c0)))AND((v0.c0 IN (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c69))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON NULL ORDER BY ((((((v0.c0)<<(v0.c0)))OR(v0.c0)))AND((v0.c0 IN (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON NULL WHERE ((((NOT (t0.c69))) IS FALSE)) ORDER BY ((((((v0.c0)<<(v0.c0)))OR(v0.c0)))AND((v0.c0 IN (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c69))) IS FALSE)) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN v0 ON NULL ORDER BY ((((((v0.c0)<<(v0.c0)))OR(v0.c0)))AND((v0.c0 IN (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 LEFT OUTER JOIN v0 ON NULL WHERE ((((NOT (t0.c69))) IS FALSE)) ORDER BY ((((((v0.c0)<<(v0.c0)))OR(v0.c0)))AND((v0.c0 IN (t0.c2))))  NULLS LAST;
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((+ (t0.c69)))IS NOT(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c69)))IS NOT(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((+ (t0.c69)))IS NOT(CAST(t0.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c69)))IS NOT(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE ((((+ (t0.c69)))IS NOT(CAST(t0.c2 AS INTEGER))));
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (t0.c69)))>=('?Q' COLLATE NOCASE)) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE (v0.c0 IN (v0.c0, t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE (v0.c0 IN (v0.c0, t0.c2)) END) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (t0.c69)))>=('?Q' COLLATE NOCASE)));
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (t0.c69)))>=('?Q' COLLATE NOCASE)) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE (v0.c0 IN (v0.c0, t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE (v0.c0 IN (v0.c0, t0.c2)) END) IS TRUE)  as count FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (t0.c69)))>=('?Q' COLLATE NOCASE)));
SELECT * FROM t0, v0 LEFT OUTER JOIN vt0 ON (((NOT (t0.c69)))>=('?Q' COLLATE NOCASE)) WHERE (CASE WHEN (+ (t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE (v0.c0 IN (v0.c0, t0.c2)) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN CASE -1657501541  WHEN t0.c69 THEN vt0.c0 END ELSE (((vt0.c0))>((vt0.c0))) END) ORDER BY -7.17758677E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN CASE -1657501541  WHEN t0.c69 THEN vt0.c0 END ELSE (((vt0.c0))>((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY -7.17758677E8 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN CASE -1657501541  WHEN t0.c69 THEN vt0.c0 END ELSE (((vt0.c0))>((vt0.c0))) END) ORDER BY -7.17758677E8 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN CASE -1657501541  WHEN t0.c69 THEN vt0.c0 END ELSE (((vt0.c0))>((vt0.c0))) END) IS TRUE)  as count FROM t0, vt0 ORDER BY -7.17758677E8 DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c69) BETWEEN (t0.c2) AND (t0.c2)) THEN CASE -1657501541  WHEN t0.c69 THEN vt0.c0 END ELSE (((vt0.c0))>((vt0.c0))) END) ORDER BY -7.17758677E8 DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c69)) BETWEEN (((t0.c2 IN ()))) AND ((CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c2 END)))) ORDER BY t0.c69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c69)) BETWEEN (((t0.c2 IN ()))) AND ((CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c2 END)))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c69  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c69)) BETWEEN (((t0.c2 IN ()))) AND ((CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c2 END)))) ORDER BY t0.c69  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c69)) BETWEEN (((t0.c2 IN ()))) AND ((CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c2 END)))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c69  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c69)) BETWEEN (((t0.c2 IN ()))) AND ((CASE WHEN t0.c69 THEN t0.c69 ELSE t0.c2 END)))) ORDER BY t0.c69  NULLS FIRST;
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END) IS TRUE)  as count FROM t0, v0, vt0 ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC  NULLS FIRST);
SELECT ALL * FROM t0, v0, vt0 WHERE (CASE WHEN t0.c0 COLLATE NOCASE THEN CASE t0.c2  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END END) ORDER BY CASE WHEN (NOT (vt0.c0)) THEN CAST(vt0.c0 AS REAL) END DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (-9.61289279E8);
SELECT SUM(count) FROM (SELECT ((-9.61289279E8) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-9.61289279E8);
SELECT SUM(count) FROM (SELECT ((-9.61289279E8) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (-9.61289279E8);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (+ ((((t0.c0))!=((t0.c0))))) WHERE (CASE WHEN ((t0.c69) IS TRUE) THEN ((t0.c0) BETWEEN (t0.c69) AND (t0.c0)) END) ORDER BY NULL COLLATE RTRIM  NULLS FIRST, (- (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c69) IS TRUE) THEN ((t0.c0) BETWEEN (t0.c69) AND (t0.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ ((((t0.c0))<>((t0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST, (- (t0.c2)) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (+ ((((t0.c0))!=((t0.c0))))) WHERE (CASE WHEN ((t0.c69) IS TRUE) THEN ((t0.c0) BETWEEN (t0.c69) AND (t0.c0)) END) ORDER BY NULL COLLATE RTRIM  NULLS FIRST, (- (t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c69) IS TRUE) THEN ((t0.c0) BETWEEN (t0.c69) AND (t0.c0)) END) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (+ ((((t0.c0))<>((t0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST, (- (t0.c2)) ASC);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (+ ((((t0.c0))!=((t0.c0))))) WHERE (CASE WHEN ((t0.c69) IS TRUE) THEN ((t0.c0) BETWEEN (t0.c69) AND (t0.c0)) END) ORDER BY NULL COLLATE RTRIM  NULLS FIRST, (- (t0.c2)) ASC;
SELECT ALL * FROM t0 WHERE (((((TRIM(DISTINCT t0.c2))OR(((-2103903015)%(t0.c2)))))OR(((t0.c2)-(t0.c69))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT t0.c2))OR(((-2103903015)%(t0.c2)))))OR(((t0.c2)-(t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((TRIM(DISTINCT t0.c2))OR(((-2103903015)%(t0.c2)))))OR(((t0.c2)-(t0.c69))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(DISTINCT t0.c2))OR(((-2103903015)%(t0.c2)))))OR(((t0.c2)-(t0.c69))))) IS TRUE)  as count FROM t0 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((TRIM(DISTINCT t0.c2))OR(((-2103903015)%(t0.c2)))))OR(((t0.c2)-(t0.c69))))) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((x'', v0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c69, t0.c69, v0.c0))))/(((t0.c69) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((x'', v0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c69, t0.c69, v0.c0))))/(((t0.c69) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((x'', v0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c69, t0.c69, v0.c0))))/(((t0.c69) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((((x'', v0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c69, t0.c69, v0.c0))))/(((t0.c69) NOT NULL)))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL COUNT(*) FROM t0, vt0, v0 WHERE ((((((x'', v0.c0, vt0.c0)) BETWEEN ((t0.c0, t0.c0, v0.c0)) AND ((t0.c69, t0.c69, v0.c0))))/(((t0.c69) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c0) AND (t0.c69))))>=((((t0.c69)>=(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c69) NOT BETWEEN (t0.c0) AND (t0.c69))))>=((((t0.c69)>=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c0) AND (t0.c69))))>=((((t0.c69)>=(t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((t0.c69) NOT BETWEEN (t0.c0) AND (t0.c69))))>=((((t0.c69)>=(t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c69) NOT BETWEEN (t0.c0) AND (t0.c69))))>=((((t0.c69)>=(t0.c2))))));
SELECT ALL * FROM t0 WHERE (((TRIM(t0.c0))!=(((((t0.c0)AND(t0.c0)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0))!=(((((t0.c0)AND(t0.c0)))AND(t0.c69))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TRIM(t0.c0))!=(((((t0.c0)AND(t0.c0)))AND(t0.c69)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(t0.c0))!=(((((t0.c0)AND(t0.c0)))AND(t0.c69))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TRIM(t0.c0))!=(((((t0.c0)AND(t0.c0)))AND(t0.c69)))));
SELECT * FROM v0, t0 WHERE (((((t0.c2)>(v0.c0))) BETWEEN ((- (t0.c2))) AND (((((t0.c69)AND(t0.c69)))AND(t0.c2))))) ORDER BY LIKE(((v0.c0)IS NOT(t0.c2)), (NOT (t0.c2)), '-');
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(v0.c0))) BETWEEN ((- (t0.c2))) AND (((((t0.c69)AND(t0.c69)))AND(t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKE(((v0.c0)IS NOT(t0.c2)), (NOT (t0.c2)), '-'));
SELECT * FROM v0, t0 WHERE (((((t0.c2)>(v0.c0))) BETWEEN ((- (t0.c2))) AND (((((t0.c69)AND(t0.c69)))AND(t0.c2))))) ORDER BY LIKE(((v0.c0)IS NOT(t0.c2)), (NOT (t0.c2)), '-');
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(v0.c0))) BETWEEN ((- (t0.c2))) AND (((((t0.c69)AND(t0.c69)))AND(t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKE(((v0.c0)IS NOT(t0.c2)), (NOT (t0.c2)), '-'));
SELECT * FROM v0, t0 WHERE (((((t0.c2)>(v0.c0))) BETWEEN ((- (t0.c2))) AND (((((t0.c69)AND(t0.c69)))AND(t0.c2))))) ORDER BY LIKE(((v0.c0)IS NOT(t0.c2)), (NOT (t0.c2)), '-');
SELECT COUNT(*) FROM vt0 WHERE (GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) ORDER BY vt0.c0, ((((0X50ac36c0)LIKE(vt0.c0))) NOTNULL), (((x'' IN (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((0X50ac36c0)LIKE(vt0.c0))) NOTNULL), (((x'' IN (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) ORDER BY vt0.c0, ((((0X50ac36c0)LIKE(vt0.c0))) NOTNULL), (((x'' IN (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((((0X50ac36c0)LIKE(vt0.c0))) NOTNULL), (((x'' IN (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (GLOB(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), ((vt0.c0) NOTNULL))) ORDER BY vt0.c0, ((((0X50ac36c0)LIKE(vt0.c0))) NOTNULL), (((x'' IN (vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((vt0.c0 COLLATE BINARY))));
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON t0.c69 WHERE ((((('1600745292') NOT BETWEEN ('1353463488') AND (t0.c0)))>=(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY (((((t0.c2))<((NULL))))>=(((t0.c0)OR(t0.c69)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1600745292') NOT BETWEEN ('1353463488') AND (t0.c0)))>=(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON t0.c69 ORDER BY (((((t0.c2))<((NULL))))>=(((t0.c0)OR(t0.c69)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON t0.c69 WHERE ((((('1600745292') NOT BETWEEN ('1353463488') AND (t0.c0)))>=(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY (((((t0.c2))<((NULL))))>=(((t0.c0)OR(t0.c69)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('1600745292') NOT BETWEEN ('1353463488') AND (t0.c0)))>=(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, t0 RIGHT OUTER JOIN vt0 ON t0.c69 ORDER BY (((((t0.c2))<((NULL))))>=(((t0.c0)OR(t0.c69)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 RIGHT OUTER JOIN vt0 ON t0.c69 WHERE ((((('1600745292') NOT BETWEEN ('1353463488') AND (t0.c0)))>=(CASE t0.c2  WHEN t0.c2 THEN vt0.c0 END))) ORDER BY (((((t0.c2))<((NULL))))>=(((t0.c0)OR(t0.c69)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON -270066161 WHERE (((t0.c2)||((NOT ('_~'))))) ORDER BY ((NULL) BETWEEN (0Xffffffff9707673d) AND (t0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)||((NOT ('_~'))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON -270066161 ORDER BY ((NULL) BETWEEN (0xffffffff9707673d) AND (t0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON -270066161 WHERE (((t0.c2)||((NOT ('_~'))))) ORDER BY ((NULL) BETWEEN (0Xffffffff9707673d) AND (t0.c2)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)||((NOT ('_~'))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON -270066161 ORDER BY ((NULL) BETWEEN (0xffffffff9707673d) AND (t0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON -270066161 WHERE (((t0.c2)||((NOT ('_~'))))) ORDER BY ((NULL) BETWEEN (0Xffffffff9707673d) AND (t0.c2)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))OR(CASE t0.c69  WHEN '' THEN v0.c0 ELSE t0.c69 END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c69)), SUBSTR(vt0.c0, v0.c0), CAST(t0.c2 AS BLOB)))<=((x'', CAST(vt0.c0 AS REAL), (NOT (t0.c69)), SQLITE_COMPILEOPTION_GET(t0.c2), (t0.c69 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((v0.c0))))OR(CASE t0.c69  WHEN '' THEN v0.c0 ELSE t0.c69 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c69)), SUBSTR(vt0.c0, v0.c0), CAST(t0.c2 AS BLOB)))<=((x'', CAST(vt0.c0 AS REAL), (NOT (t0.c69)), SQLITE_COMPILEOPTION_GET(t0.c2), (t0.c69 IN ())))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))OR(CASE t0.c69  WHEN '' THEN v0.c0 ELSE t0.c69 END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c69)), SUBSTR(vt0.c0, v0.c0), CAST(t0.c2 AS BLOB)))<=((x'', CAST(vt0.c0 AS REAL), (NOT (t0.c69)), SQLITE_COMPILEOPTION_GET(t0.c2), (t0.c69 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((v0.c0))))OR(CASE t0.c69  WHEN '' THEN v0.c0 ELSE t0.c69 END))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY (((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c69)), SUBSTR(vt0.c0, v0.c0), CAST(t0.c2 AS BLOB)))<=((x'', CAST(vt0.c0 AS REAL), (NOT (t0.c69)), SQLITE_COMPILEOPTION_GET(t0.c2), (t0.c69 IN ())))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((((vt0.c0))<=((v0.c0))))OR(CASE t0.c69  WHEN '' THEN v0.c0 ELSE t0.c69 END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC), ((t0.c0) NOT NULL), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c69)), SUBSTR(vt0.c0, v0.c0), CAST(t0.c2 AS BLOB)))<=((x'', CAST(vt0.c0 AS REAL), (NOT (t0.c69)), SQLITE_COMPILEOPTION_GET(t0.c2), (t0.c69 IN ()))));
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN x'' ELSE -1.22227041E8 END  WHEN DATE(0.3868888468078111, t0.c69, v0.c0, t0.c0, NULL) THEN '-63996650' ELSE (t0.c0 IN ()) END CROSS JOIN vt0 ON NULLIF(DISTINCT CASE vt0.c0  WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END, TYPEOF(vt0.c0)) WHERE (CASE WHEN (('t')%(v0.c0)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c69 ELSE t0.c0 END WHEN ((v0.c0) IS TRUE) THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c2 THEN vt0.c0 END THEN NULL WHEN ((((t0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (t0.c2) AND (v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c69)&(vt0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('t')%(v0.c0)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c69 ELSE t0.c0 END WHEN ((v0.c0) IS TRUE) THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c2 THEN vt0.c0 END THEN NULL WHEN ((((t0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (t0.c2) AND (v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c69)&(vt0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN x'' ELSE -1.22227041E8 END  WHEN DATE(0.3868888468078111, t0.c69, v0.c0, t0.c0, NULL) THEN '-63996650' ELSE (t0.c0 IN ()) END CROSS JOIN vt0 ON NULLIF(DISTINCT CASE vt0.c0  WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END, TYPEOF(vt0.c0)));
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN x'' ELSE -1.22227041E8 END  WHEN DATE(0.3868888468078111, t0.c69, v0.c0, t0.c0, NULL) THEN '-63996650' ELSE (t0.c0 IN ()) END CROSS JOIN vt0 ON NULLIF(DISTINCT CASE vt0.c0  WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END, TYPEOF(vt0.c0)) WHERE (CASE WHEN (('t')%(v0.c0)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c69 ELSE t0.c0 END WHEN ((v0.c0) IS TRUE) THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c2 THEN vt0.c0 END THEN NULL WHEN ((((t0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (t0.c2) AND (v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c69)&(vt0.c0)) ELSE t0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('t')%(v0.c0)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c69 ELSE t0.c0 END WHEN ((v0.c0) IS TRUE) THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c2 THEN vt0.c0 END THEN NULL WHEN ((((t0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (t0.c2) AND (v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c69)&(vt0.c0)) ELSE t0.c0 END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN x'' ELSE -1.22227041E8 END  WHEN DATE(0.3868888468078111, t0.c69, v0.c0, t0.c0, NULL) THEN '-63996650' ELSE (t0.c0 IN ()) END CROSS JOIN vt0 ON NULLIF(DISTINCT CASE vt0.c0  WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END, TYPEOF(vt0.c0)));
SELECT * FROM t0 INNER JOIN v0 ON CASE CASE WHEN vt0.c0 THEN x'' ELSE -1.22227041E8 END  WHEN DATE(0.3868888468078111, t0.c69, v0.c0, t0.c0, NULL) THEN '-63996650' ELSE (t0.c0 IN ()) END CROSS JOIN vt0 ON NULLIF(DISTINCT CASE vt0.c0  WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END, TYPEOF(vt0.c0)) WHERE (CASE WHEN (('t')%(v0.c0)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c69 ELSE t0.c0 END WHEN ((v0.c0) IS TRUE) THEN ((t0.c0) ISNULL) WHEN CASE WHEN t0.c2 THEN vt0.c0 END THEN NULL WHEN ((((t0.c0)AND(v0.c0)))OR(v0.c0)) THEN ((vt0.c0) BETWEEN (t0.c2) AND (v0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN ((t0.c69)&(vt0.c0)) ELSE t0.c0 END);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((0.08821416373658997)OR(((vt0.c0)<<(t0.c69))))) ORDER BY ((((t0.c69)<<(t0.c0)))IS((- (t0.c0)))) DESC, (NOT (0.20327375340669485)) DESC  NULLS LAST, CAST((v0.c0 IN ()) AS TEXT), ((t0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((0.08821416373658997)OR(((vt0.c0)<<(t0.c69))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c69)<<(t0.c0)))IS((- (t0.c0)))) DESC, (NOT (0.20327375340669485)) DESC  NULLS LAST, CAST((v0.c0 IN ()) AS TEXT), ((t0.c0) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((0.08821416373658997)OR(((vt0.c0)<<(t0.c69))))) ORDER BY ((((t0.c69)<<(t0.c0)))IS((- (t0.c0)))) DESC, (NOT (0.20327375340669485)) DESC  NULLS LAST, CAST((v0.c0 IN ()) AS TEXT), ((t0.c0) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((0.08821416373658997)OR(((vt0.c0)<<(t0.c69))))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((((t0.c69)<<(t0.c0)))IS((- (t0.c0)))) DESC, (NOT (0.20327375340669485)) DESC  NULLS LAST, CAST((v0.c0 IN ()) AS TEXT), ((t0.c0) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (((0.08821416373658997)OR(((vt0.c0)<<(t0.c69))))) ORDER BY ((((t0.c69)<<(t0.c0)))IS((- (t0.c0)))) DESC, (NOT (0.20327375340669485)) DESC  NULLS LAST, CAST((v0.c0 IN ()) AS TEXT), ((t0.c0) IS FALSE) ASC;
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ()))%(((t0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ()))%(((t0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))%(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE ((((vt0.c0 IN ()))%(((t0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, ((-1322203776) NOT BETWEEN (t0.c69) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, ((-1322203776) NOT BETWEEN (t0.c69) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, ((-1322203776) NOT BETWEEN (t0.c69) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2) NOTNULL))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, ((-1322203776) NOT BETWEEN (t0.c69) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c2) NOTNULL))OR(CAST(t0.c0 AS TEXT))))OR(CAST(t0.c0 AS NUMERIC)))) ORDER BY (((((t0.c69)) BETWEEN ((t0.c0)) AND ((t0.c0)))) IS FALSE) ASC, ((-1322203776) NOT BETWEEN (t0.c69) AND (t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (x'4e08');
SELECT SUM(count) FROM (SELECT ((x'4e08') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'4e08');
SELECT SUM(count) FROM (SELECT ((x'4e08') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'4e08');
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CAST(v0.c0 AS REAL)) AND (((((v0.c0)AND(v0.c0)))OR(x''))))) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CAST(v0.c0 AS REAL)) AND (((((v0.c0)AND(v0.c0)))OR(x''))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CAST(v0.c0 AS REAL)) AND (((((v0.c0)AND(v0.c0)))OR(x''))))) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CAST(v0.c0 AS REAL)) AND (((((v0.c0)AND(v0.c0)))OR(x''))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BETWEEN (CAST(v0.c0 AS REAL)) AND (((((v0.c0)AND(v0.c0)))OR(x''))))) ORDER BY (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c2)<<(-8.8922487E7)))OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND(((t0.c69) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<<(-8.8922487E7)))OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND(((t0.c69) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c2)<<(-8.8922487E7)))OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND(((t0.c69) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)<<(-8.8922487E7)))OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND(((t0.c69) IS FALSE)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT ALL COUNT(*) FROM vt0, v0, t0 WHERE (((((((t0.c2)<<(-8.8922487E7)))OR(((((t0.c2)OR(vt0.c0)))AND(t0.c2)))))AND(((t0.c69) IS FALSE))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))<(((v0.c0) ISNULL)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))AND(((v0.c0)<(v0.c0)))), (NOT ((v0.c0 IN (v0.c0))))  NULLS LAST, (- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))<(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))AND(((v0.c0)<(v0.c0)))), (NOT ((v0.c0 IN (v0.c0))))  NULLS LAST, (- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))<(((v0.c0) ISNULL)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))AND(((v0.c0)<(v0.c0)))), (NOT ((v0.c0 IN (v0.c0))))  NULLS LAST, (- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))<(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))AND(((v0.c0)<(v0.c0)))), (NOT ((v0.c0 IN (v0.c0))))  NULLS LAST, (- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))<(((v0.c0) ISNULL)))) ORDER BY ((((CAST(v0.c0 AS NUMERIC))OR(((v0.c0) NOTNULL))))AND(((v0.c0)<(v0.c0)))), (NOT ((v0.c0 IN (v0.c0))))  NULLS LAST, (- (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (t0.c2 IN ()) WHERE ((((- (t0.c0))) NOT BETWEEN ((~ (t0.c69))) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0 COLLATE RTRIM))=((CASE WHEN t0.c0 THEN v0.c0 WHEN '271199887' THEN t0.c2 WHEN v0.c0 THEN t0.c0 ELSE 0.5240361979336149 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN ((~ (t0.c69))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (t0.c2 IN ()) ORDER BY (((v0.c0 COLLATE RTRIM))==((CASE WHEN t0.c0 THEN v0.c0 WHEN '271199887' THEN t0.c2 WHEN v0.c0 THEN t0.c0 ELSE 0.5240361979336149 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (t0.c2 IN ()) WHERE ((((- (t0.c0))) NOT BETWEEN ((~ (t0.c69))) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0 COLLATE RTRIM))=((CASE WHEN t0.c0 THEN v0.c0 WHEN '271199887' THEN t0.c2 WHEN v0.c0 THEN t0.c0 ELSE 0.5240361979336149 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c0))) NOT BETWEEN ((~ (t0.c69))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (t0.c2 IN ()) ORDER BY (((v0.c0 COLLATE RTRIM))==((CASE WHEN t0.c0 THEN v0.c0 WHEN '271199887' THEN t0.c2 WHEN v0.c0 THEN t0.c0 ELSE 0.5240361979336149 END))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (t0.c2 IN ()) WHERE ((((- (t0.c0))) NOT BETWEEN ((~ (t0.c69))) AND ((v0.c0 IN ())))) ORDER BY (((v0.c0 COLLATE RTRIM))=((CASE WHEN t0.c0 THEN v0.c0 WHEN '271199887' THEN t0.c2 WHEN v0.c0 THEN t0.c0 ELSE 0.5240361979336149 END))) DESC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((t0.c0))<=((v0.c0))))OR(t0.c0)) CROSS JOIN t0 ON v0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((t0.c0))<=((v0.c0))))OR(t0.c0)) CROSS JOIN t0 ON v0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((t0.c0))<=((v0.c0))))OR(t0.c0)) CROSS JOIN t0 ON v0.c0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((t0.c0))<=((v0.c0))))OR(t0.c0)) CROSS JOIN t0 ON v0.c0);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((((t0.c0))<=((v0.c0))))OR(t0.c0)) CROSS JOIN t0 ON v0.c0 WHERE (t0.c0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((vt0.c0)OR(t0.c0)))AND(0.9809915552915921)))OR(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c69 END)))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(t0.c0)))AND(0.9809915552915921)))OR(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c69 END)))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((vt0.c0)OR(t0.c0)))AND(0.9809915552915921)))OR(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c69 END)))OR(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)OR(t0.c0)))AND(0.9809915552915921)))OR(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c69 END)))OR(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0, v0);
SELECT ALL * FROM t0, vt0, v0 WHERE (((((((((vt0.c0)OR(t0.c0)))AND(0.9809915552915921)))OR(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c69 END)))OR(t0.c2 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE ((((((NULL) IS FALSE), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)>>(vt0.c0))))<((((NULL)!=(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NULL IN ()) DESC, ((((vt0.c0)>=(vt0.c0)))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL) IS FALSE), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)>>(vt0.c0))))<((((NULL)!=(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) DESC, ((((vt0.c0)>=(vt0.c0)))>(((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NULL) IS FALSE), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)>>(vt0.c0))))<((((NULL)!=(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NULL IN ()) DESC, ((((vt0.c0)>=(vt0.c0)))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL) IS FALSE), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)>>(vt0.c0))))<((((NULL)!=(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NULL IN ()) DESC, ((((vt0.c0)>=(vt0.c0)))>(((vt0.c0)&(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((NULL) IS FALSE), (((vt0.c0))<=((vt0.c0))), ((vt0.c0)>>(vt0.c0))))<((((NULL)!=(vt0.c0)), ((vt0.c0)+(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (NULL IN ()) DESC, ((((vt0.c0)>=(vt0.c0)))>(((vt0.c0)&(vt0.c0))))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END)) AND ((HEX(DISTINCT vt0.c0)))) INNER JOIN t0 ON ((0Xffffffffc6b3e3c1)<<(NULL)) WHERE ((~ (((v0.c0) NOT BETWEEN (x'') AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (x'') AND (t0.c69))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END)) AND ((HEX(DISTINCT vt0.c0)))) INNER JOIN t0 ON ((0xffffffffc6b3e3c1)<<(NULL)));
SELECT * FROM vt0 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END)) AND ((HEX(DISTINCT vt0.c0)))) INNER JOIN t0 ON ((0Xffffffffc6b3e3c1)<<(NULL)) WHERE ((~ (((v0.c0) NOT BETWEEN (x'') AND (t0.c69)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) NOT BETWEEN (x'') AND (t0.c69))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END)) AND ((HEX(DISTINCT vt0.c0)))) INNER JOIN t0 ON ((0xffffffffc6b3e3c1)<<(NULL)));
SELECT * FROM vt0 INNER JOIN v0 ON (((vt0.c0)) NOT BETWEEN ((CASE WHEN v0.c0 THEN t0.c69 WHEN v0.c0 THEN t0.c0 WHEN t0.c69 THEN vt0.c0 END)) AND ((HEX(DISTINCT vt0.c0)))) INNER JOIN t0 ON ((0Xffffffffc6b3e3c1)<<(NULL)) WHERE ((~ (((v0.c0) NOT BETWEEN (x'') AND (t0.c69)))));
SELECT * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((v0.c0)>(vt0.c0))))=((((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, 0.8048874308439765  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0)>(vt0.c0))))==((((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, 0.8048874308439765  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((v0.c0)>(vt0.c0))))=((((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, 0.8048874308439765  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((v0.c0)>(vt0.c0))))==((((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, 0.8048874308439765  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS REAL)) ORDER BY (((((v0.c0)>(vt0.c0))))=((((vt0.c0)IS(vt0.c0)))))  NULLS FIRST, 0.8048874308439765  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOTNULL) COLLATE NOCASE);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0)>(v0.c0)))));
SELECT * FROM t0 WHERE (CASE WHEN ((((((((0.24509833320858232)AND(t0.c69)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c69) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((0.24509833320858232)AND(t0.c69)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c69) AND (NULL)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((0.24509833320858232)AND(t0.c69)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c69) AND (NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((0.24509833320858232)AND(t0.c69)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c69) AND (NULL)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE WHEN ((((((((0.24509833320858232)AND(t0.c69)))OR(t0.c2)))OR(t0.c69)))AND(t0.c0)) THEN ((t0.c0) BETWEEN (t0.c69) AND (NULL)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY x'78b9'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY x'78b9'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY x'78b9'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY x'78b9'  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY x'78b9'  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE ((((((((('}FIp')AND(t0.c0)))OR('1冐kxf')))OR(TRIM(0.7346808755417703))))OR((t0.c69 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('}FIp')AND(t0.c0)))OR('1冐kxf')))OR(TRIM(0.7346808755417703))))OR((t0.c69 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((('}FIp')AND(t0.c0)))OR('1冐kxf')))OR(TRIM(0.7346808755417703))))OR((t0.c69 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('}FIp')AND(t0.c0)))OR('1冐kxf')))OR(TRIM(0.7346808755417703))))OR((t0.c69 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((((((('}FIp')AND(t0.c0)))OR('1冐kxf')))OR(TRIM(0.7346808755417703))))OR((t0.c69 IN ()))));
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN '-1456161462' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)IS(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))==(((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN '-1456161462' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)IS(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))==(((+ (v0.c0))))));
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN '-1456161462' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)IS(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))==(((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN '-1456161462' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)IS(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))==(((+ (v0.c0))))));
SELECT ALL * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN '-1456161462' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)IS(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) ORDER BY ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))==(((+ (v0.c0)))));
SELECT * FROM t0, v0 WHERE ((((- (t0.c69))) BETWEEN (((t0.c2)<=(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c69)))))) ORDER BY HEX(((t0.c69)/(t0.c69))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c69)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c69))) BETWEEN (((t0.c2)<=(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c69)))))) IS TRUE)  as count FROM t0, v0 ORDER BY HEX(((t0.c69)/(t0.c69))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c69)) COLLATE BINARY ASC);
SELECT * FROM t0, v0 WHERE ((((- (t0.c69))) BETWEEN (((t0.c2)<=(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c69)))))) ORDER BY HEX(((t0.c69)/(t0.c69))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c69)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c69))) BETWEEN (((t0.c2)<=(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c69)))))) IS TRUE)  as count FROM t0, v0 ORDER BY HEX(((t0.c69)/(t0.c69))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c69)) COLLATE BINARY ASC);
SELECT * FROM t0, v0 WHERE ((((- (t0.c69))) BETWEEN (((t0.c2)<=(v0.c0))) AND ((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c69)))))) ORDER BY HEX(((t0.c69)/(t0.c69))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c69)) COLLATE BINARY ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0, NULL, vt0.c0))>=((x'', NULL, vt0.c0))))AND(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR('2013812612')))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR('1775669834')))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0, NULL, vt0.c0))>=((x'', NULL, vt0.c0))))AND(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR('2013812612')))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR('1775669834')))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0, NULL, vt0.c0))>=((x'', NULL, vt0.c0))))AND(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR('2013812612')))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR('1775669834')))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((vt0.c0, NULL, vt0.c0))>=((x'', NULL, vt0.c0))))AND(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR('2013812612')))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR('1775669834')))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((((((((vt0.c0, NULL, vt0.c0))>=((x'', NULL, vt0.c0))))AND(((vt0.c0)<(vt0.c0)))))OR((vt0.c0 IN (vt0.c0, vt0.c0)))))OR('2013812612')))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR('1775669834')))OR(vt0.c0)))))OR((((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY CASE WHEN vt0.c0 THEN CAST(vt0.c0 AS REAL) ELSE vt0.c0 END  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c69 AS TEXT) AS NUMERIC)) ORDER BY t0.c2 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c69 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c69 AS TEXT) AS NUMERIC)) ORDER BY t0.c2 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c69 AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c69 AS TEXT) AS NUMERIC)) ORDER BY t0.c2 COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ROUND((~ (NULL)), ((((v0.c0)AND(t0.c69)))OR(t0.c2))) CROSS JOIN vt0 ON NULL WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ROUND((~ (NULL)), ((((v0.c0)AND(t0.c69)))OR(t0.c2))) CROSS JOIN vt0 ON NULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ROUND((~ (NULL)), ((((v0.c0)AND(t0.c69)))OR(t0.c2))) CROSS JOIN vt0 ON NULL WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON ROUND((~ (NULL)), ((((v0.c0)AND(t0.c69)))OR(t0.c2))) CROSS JOIN vt0 ON NULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON ROUND((~ (NULL)), ((((v0.c0)AND(t0.c69)))OR(t0.c2))) CROSS JOIN vt0 ON NULL WHERE (((CAST(v0.c0 AS BLOB)) NOT NULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, t0 ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (NULL) ORDER BY ABS(DISTINCT t0.c0) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (0.08612512579529263);
SELECT SUM(count) FROM (SELECT ALL ((0.08612512579529263) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.08612512579529263);
SELECT SUM(count) FROM (SELECT ALL ((0.08612512579529263) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.08612512579529263);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((-8.70580406E8) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((-8.70580406E8) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((-8.70580406E8) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((-8.70580406E8) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((-8.70580406E8) BETWEEN (t0.c0 COLLATE BINARY) AND (((t0.c2) NOT NULL))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)), (((t0.c2))!=((t0.c2))), ((t0.c69)|(0X74e81780))))>((((((v0.c0)AND(t0.c0)))AND(vt0.c0)), (((vt0.c0))==((v0.c0))), ((((995318831)AND(t0.c69)))OR(v0.c0))))) RIGHT OUTER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((- (t0.c69)))))AND((~ (t0.c2)))))OR((((vt0.c0, vt0.c0, NULL))==((t0.c69, v0.c0, v0.c0))))))AND(v0.c0)) WHERE (t0.c2) ORDER BY (((((vt0.c0)OR(t0.c69)))AND(t0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)), (((t0.c2))!=((t0.c2))), ((t0.c69)|(0x74e81780))))>((((((v0.c0)AND(t0.c0)))AND(vt0.c0)), (((vt0.c0))==((v0.c0))), ((((995318831)AND(t0.c69)))OR(v0.c0))))) RIGHT OUTER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((- (t0.c69)))))AND((~ (t0.c2)))))OR((((vt0.c0, vt0.c0, NULL))==((t0.c69, v0.c0, v0.c0))))))AND(v0.c0)) ORDER BY (((((vt0.c0)OR(t0.c69)))AND(t0.c2)) IN ())  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)), (((t0.c2))!=((t0.c2))), ((t0.c69)|(0X74e81780))))>((((((v0.c0)AND(t0.c0)))AND(vt0.c0)), (((vt0.c0))==((v0.c0))), ((((995318831)AND(t0.c69)))OR(v0.c0))))) RIGHT OUTER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((- (t0.c69)))))AND((~ (t0.c2)))))OR((((vt0.c0, vt0.c0, NULL))==((t0.c69, v0.c0, v0.c0))))))AND(v0.c0)) WHERE (t0.c2) ORDER BY (((((vt0.c0)OR(t0.c69)))AND(t0.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((t0.c0)OR(t0.c2)), (((t0.c2))!=((t0.c2))), ((t0.c69)|(0x74e81780))))>((((((v0.c0)AND(t0.c0)))AND(vt0.c0)), (((vt0.c0))==((v0.c0))), ((((995318831)AND(t0.c69)))OR(v0.c0))))) RIGHT OUTER JOIN t0 ON ((((((((vt0.c0 COLLATE NOCASE)AND((- (t0.c69)))))AND((~ (t0.c2)))))OR((((vt0.c0, vt0.c0, NULL))==((t0.c69, v0.c0, v0.c0))))))AND(v0.c0)) ORDER BY (((((vt0.c0)OR(t0.c69)))AND(t0.c2)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))LIKE((NOT (NULL))))) ORDER BY (0x5c88e970 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))LIKE((NOT (NULL))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (0X5c88e970 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))LIKE((NOT (NULL))))) ORDER BY (0x5c88e970 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER))LIKE((NOT (NULL))))) IS TRUE)  as count FROM t0, vt0, v0 ORDER BY (0X5c88e970 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0, vt0, v0 WHERE (((CAST(v0.c0 AS INTEGER))LIKE((NOT (NULL))))) ORDER BY (0x5c88e970 COLLATE NOCASE IN ());
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((TRIM(0.8275340166473508, vt0.c0)) BETWEEN (TRIM(vt0.c0, v0.c0)) AND (((vt0.c0)>(v0.c0)))) WHERE ((((vt0.c0 IN ()))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY UNLIKELY((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, x'', v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((TRIM(0.8275340166473508, vt0.c0)) BETWEEN (TRIM(vt0.c0, v0.c0)) AND (((vt0.c0)>(v0.c0)))) ORDER BY UNLIKELY((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, x'', v0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((TRIM(0.8275340166473508, vt0.c0)) BETWEEN (TRIM(vt0.c0, v0.c0)) AND (((vt0.c0)>(v0.c0)))) WHERE ((((vt0.c0 IN ()))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY UNLIKELY((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, x'', v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((TRIM(0.8275340166473508, vt0.c0)) BETWEEN (TRIM(vt0.c0, v0.c0)) AND (((vt0.c0)>(v0.c0)))) ORDER BY UNLIKELY((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, x'', v0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((TRIM(0.8275340166473508, vt0.c0)) BETWEEN (TRIM(vt0.c0, v0.c0)) AND (((vt0.c0)>(v0.c0)))) WHERE ((((vt0.c0 IN ()))||(((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))) ORDER BY UNLIKELY((((vt0.c0, vt0.c0, x'')) BETWEEN ((vt0.c0, x'', v0.c0)) AND ((v0.c0, v0.c0, vt0.c0))));
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c0)|(v0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(v0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c0)|(v0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)|(v0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(v0.c0))) IS TRUE)  as count FROM v0, t0, vt0);
SELECT COUNT(*) FROM v0, t0, vt0 WHERE (((((((t0.c0)|(v0.c0)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(v0.c0)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON UPPER((NOT (v0.c0))) WHERE (0.01252104555424538) ORDER BY (('-1805582310') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.01252104555424538) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON UPPER((NOT (v0.c0))) ORDER BY (('-1805582310') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON UPPER((NOT (v0.c0))) WHERE (0.01252104555424538) ORDER BY (('-1805582310') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.01252104555424538) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON UPPER((NOT (v0.c0))) ORDER BY (('-1805582310') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON UPPER((NOT (v0.c0))) WHERE (0.01252104555424538) ORDER BY (('-1805582310') NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS TRUE))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)/(v0.c0)))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)/(v0.c0)))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)/(v0.c0)))))AND(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)/(v0.c0)))))AND(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON v0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON v0.c0 WHERE (((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(((v0.c0)/(v0.c0)))))AND(CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN (CASE WHEN t0.c69 THEN '693320032' ELSE v0.c0 END) AND (((t0.c69) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((((((vt0.c0))>((t0.c69))))OR((((vt0.c0)) BETWEEN ((t0.c69)) AND ((t0.c69))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((t0.c69))))OR((((vt0.c0)) BETWEEN ((t0.c69)) AND ((t0.c69)))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((((vt0.c0)=(vt0.c0))) BETWEEN (CASE WHEN t0.c69 THEN '693320032' ELSE v0.c0 END) AND (((t0.c69) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN (CASE WHEN t0.c69 THEN '693320032' ELSE v0.c0 END) AND (((t0.c69) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((((((vt0.c0))>((t0.c69))))OR((((vt0.c0)) BETWEEN ((t0.c69)) AND ((t0.c69))))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>((t0.c69))))OR((((vt0.c0)) BETWEEN ((t0.c69)) AND ((t0.c69)))))) IS TRUE)  as count FROM v0, t0 CROSS JOIN vt0 ON ((((vt0.c0)=(vt0.c0))) BETWEEN (CASE WHEN t0.c69 THEN '693320032' ELSE v0.c0 END) AND (((t0.c69) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM v0, t0 CROSS JOIN vt0 ON ((((vt0.c0)==(vt0.c0))) BETWEEN (CASE WHEN t0.c69 THEN '693320032' ELSE v0.c0 END) AND (((t0.c69) BETWEEN (t0.c0) AND (t0.c0)))) WHERE ((((((vt0.c0))>((t0.c69))))OR((((vt0.c0)) BETWEEN ((t0.c69)) AND ((t0.c69))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- ((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- ((~ (vt0.c0)))));
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((~ (((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((~ (((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, t0 WHERE ((~ (((((((((t0.c69)OR(t0.c2)))AND(t0.c0)))AND(t0.c0)))OR(v0.c0))))) ORDER BY NULL ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))-(vt0.c0))) ORDER BY ((((t0.c2) IS TRUE))GLOB((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((t0.c2) IS TRUE))GLOB((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))-(vt0.c0))) ORDER BY ((((t0.c2) IS TRUE))GLOB((NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))-(vt0.c0))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((((t0.c2) IS TRUE))GLOB((NOT (t0.c2)))));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c0)))-(vt0.c0))) ORDER BY ((((t0.c2) IS TRUE))GLOB((NOT (t0.c2))));
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((t0.c69 IN ()))|(t0.c69 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c69 IN ()))|(t0.c69 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((t0.c69 IN ()))|(t0.c69 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c69 IN ()))|(t0.c69 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT ALL COUNT(*) FROM t0, v0 NOT INDEXED, vt0 WHERE ((((t0.c69 IN ()))|(t0.c69 COLLATE RTRIM)));
SELECT * FROM t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (0.5894383685114859 IN ()) THEN ((t0.c0)>(t0.c0)) END) ORDER BY t0.c69  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2 COLLATE RTRIM  WHEN (0.5894383685114859 IN ()) THEN ((t0.c0)>(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c69  NULLS LAST);
SELECT * FROM t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (0.5894383685114859 IN ()) THEN ((t0.c0)>(t0.c0)) END) ORDER BY t0.c69  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c2 COLLATE RTRIM  WHEN (0.5894383685114859 IN ()) THEN ((t0.c0)>(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY t0.c69  NULLS LAST);
SELECT * FROM t0 WHERE (CASE t0.c2 COLLATE RTRIM  WHEN (0.5894383685114859 IN ()) THEN ((t0.c0)>(t0.c0)) END) ORDER BY t0.c69  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c69 WHEN t0.c0 THEN t0.c0 WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END))) ORDER BY MIN(t0.c0 COLLATE BINARY, (((t0.c69, t0.c2, '')) BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c0, t0.c2))))  NULLS LAST, (((((t0.c69)&(0.22539958885583833)), NULL, TRIM(t0.c69)))>((t0.c0, ((t0.c0)+(t0.c2)), (((t0.c69))>=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c69 WHEN t0.c0 THEN t0.c0 WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY MIN(t0.c0 COLLATE BINARY, (((t0.c69, t0.c2, '')) BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c0, t0.c2))))  NULLS LAST, (((((t0.c69)&(0.22539958885583833)), NULL, TRIM(t0.c69)))>((t0.c0, ((t0.c0)+(t0.c2)), (((t0.c69))>=((t0.c2)))))));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c69 WHEN t0.c0 THEN t0.c0 WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END))) ORDER BY MIN(t0.c0 COLLATE BINARY, (((t0.c69, t0.c2, '')) BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c0, t0.c2))))  NULLS LAST, (((((t0.c69)&(0.22539958885583833)), NULL, TRIM(t0.c69)))>((t0.c0, ((t0.c0)+(t0.c2)), (((t0.c69))>=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c69 WHEN t0.c0 THEN t0.c0 WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY MIN(t0.c0 COLLATE BINARY, (((t0.c69, t0.c2, '')) BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c0, t0.c2))))  NULLS LAST, (((((t0.c69)&(0.22539958885583833)), NULL, TRIM(t0.c69)))>((t0.c0, ((t0.c0)+(t0.c2)), (((t0.c69))>=((t0.c2)))))));
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN ())) NOT BETWEEN (IFNULL(t0.c0, t0.c0)) AND (CASE WHEN t0.c0 THEN t0.c69 WHEN t0.c0 THEN t0.c0 WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END))) ORDER BY MIN(t0.c0 COLLATE BINARY, (((t0.c69, t0.c2, '')) BETWEEN ((t0.c69, t0.c2, t0.c69)) AND ((t0.c0, t0.c0, t0.c2))))  NULLS LAST, (((((t0.c69)&(0.22539958885583833)), NULL, TRIM(t0.c69)))>((t0.c0, ((t0.c0)+(t0.c2)), (((t0.c69))>=((t0.c2))))));
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((0.3450311348673022)>(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.3450311348673022)>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((0.3450311348673022)>(t0.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((0.3450311348673022)>(t0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, t0);
SELECT COUNT(*) FROM vt0, v0, t0 WHERE (((0.3450311348673022)>(t0.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((NOT (v0.c0)))<<('+\vKMFH')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))<<('+\vKMFH'))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((NOT (v0.c0)))<<('+\vKMFH')));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))<<('+\vKMFH'))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((NOT (v0.c0)))<<('+\vKMFH')));
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(CAST(v0.c0 AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND(CAST(v0.c0 AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(CAST(v0.c0 AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS REAL))AND(CAST(v0.c0 AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(CAST(v0.c0 AS TEXT))))AND(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (((((t0.c2)/(t0.c2)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)/(t0.c2)))+(t0.c0))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (((((t0.c2)/(t0.c2)))+(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)/(t0.c2)))+(t0.c0))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 NOT INDEXED WHERE (((((t0.c2)/(t0.c2)))+(t0.c0)));
SELECT ALL * FROM v0 WHERE (json_remove(((v0.c0)&(v0.c0)), v0.c0, '[]', ((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((v0.c0)&(v0.c0)), v0.c0, '[]', ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_remove(((v0.c0)&(v0.c0)), v0.c0, '[]', ((v0.c0)OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove(((v0.c0)&(v0.c0)), v0.c0, '[]', ((v0.c0)OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_remove(((v0.c0)&(v0.c0)), v0.c0, '[]', ((v0.c0)OR(v0.c0))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((COALESCE(DISTINCT t0.c69, v0.c0) IN ())) ORDER BY (((vt0.c0) NOT NULL) IN (((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))) ASC, ((((((((((t0.c0)AND(x'')))AND(vt0.c0)))OR(t0.c69)))OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(DISTINCT t0.c69, v0.c0) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY (((vt0.c0) NOT NULL) IN (((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))) ASC, ((((((((((t0.c0)AND(x'')))AND(vt0.c0)))OR(t0.c69)))OR(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((COALESCE(DISTINCT t0.c69, v0.c0) IN ())) ORDER BY (((vt0.c0) NOT NULL) IN (((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))) ASC, ((((((((((t0.c0)AND(x'')))AND(vt0.c0)))OR(t0.c69)))OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((COALESCE(DISTINCT t0.c69, v0.c0) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, v0, vt0 ORDER BY (((vt0.c0) NOT NULL) IN (((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))) ASC, ((((((((((t0.c0)AND(x'')))AND(vt0.c0)))OR(t0.c69)))OR(vt0.c0))) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((COALESCE(DISTINCT t0.c69, v0.c0) IN ())) ORDER BY (((vt0.c0) NOT NULL) IN (((vt0.c0) BETWEEN (t0.c2) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c0) AND (v0.c0)))) ASC, ((((((((((t0.c0)AND(x'')))AND(vt0.c0)))OR(t0.c69)))OR(vt0.c0))) NOT NULL)  NULLS LAST;
SELECT ALL * FROM t0, v0 NATURAL JOIN vt0 WHERE (((((v0.c0)!=(t0.c69)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)!=(t0.c69)))>(t0.c0))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, v0 NATURAL JOIN vt0 WHERE (((((v0.c0)!=(t0.c69)))>(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)!=(t0.c69)))>(t0.c0))) IS TRUE)  as count FROM t0, v0 NATURAL JOIN vt0);
SELECT ALL * FROM t0, v0 NATURAL JOIN vt0 WHERE (((((v0.c0)!=(t0.c69)))>(t0.c0)));
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (+ ('')) THEN ((v0.c0)-(vt0.c0)) ELSE ((v0.c0)==(vt0.c0)) END WHERE (UPPER(CAST(vt0.c0 AS NUMERIC))) ORDER BY (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), LIKELY(v0.c0))) AND ((IFNULL(v0.c0, v0.c0), (+ (v0.c0)), vt0.c0 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (+ ('')) THEN ((v0.c0)-(vt0.c0)) ELSE ((v0.c0)==(vt0.c0)) END ORDER BY (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), LIKELY(v0.c0))) AND ((IFNULL(v0.c0, v0.c0), (+ (v0.c0)), vt0.c0 COLLATE NOCASE))) DESC);
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (+ ('')) THEN ((v0.c0)-(vt0.c0)) ELSE ((v0.c0)==(vt0.c0)) END WHERE (UPPER(CAST(vt0.c0 AS NUMERIC))) ORDER BY (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), LIKELY(v0.c0))) AND ((IFNULL(v0.c0, v0.c0), (+ (v0.c0)), vt0.c0 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(CAST(vt0.c0 AS NUMERIC))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CASE WHEN (+ ('')) THEN ((v0.c0)-(vt0.c0)) ELSE ((v0.c0)==(vt0.c0)) END ORDER BY (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), LIKELY(v0.c0))) AND ((IFNULL(v0.c0, v0.c0), (+ (v0.c0)), vt0.c0 COLLATE NOCASE))) DESC);
SELECT * FROM vt0 INNER JOIN v0 ON CASE WHEN (+ ('')) THEN ((v0.c0)-(vt0.c0)) ELSE ((v0.c0)==(vt0.c0)) END WHERE (UPPER(CAST(vt0.c0 AS NUMERIC))) ORDER BY (((vt0.c0, v0.c0, v0.c0)) BETWEEN (((vt0.c0 IN ()), ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)), LIKELY(v0.c0))) AND ((IFNULL(v0.c0, v0.c0), (+ (v0.c0)), vt0.c0 COLLATE NOCASE))) DESC;
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0, t0);
SELECT ALL * FROM v0, vt0, t0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c2)&(t0.c2)))%(((t0.c69) ISNULL)))) ORDER BY ((t0.c0)IS NOT(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)&(t0.c2)))%(((t0.c69) ISNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((t0.c0)IS NOT(t0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c2)&(t0.c2)))%(((t0.c69) ISNULL)))) ORDER BY ((t0.c0)IS NOT(t0.c2)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)&(t0.c2)))%(((t0.c69) ISNULL)))) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY ((t0.c0)IS NOT(t0.c2)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0, v0 WHERE (((((t0.c2)&(t0.c2)))%(((t0.c69) ISNULL)))) ORDER BY ((t0.c0)IS NOT(t0.c2)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND('1766523384')))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY TRIM(((((((((v0.c0)AND(x'4cdb9990')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND('1766523384')))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(((((((((v0.c0)AND(x'4cdb9990')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND('1766523384')))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY TRIM(((((((((v0.c0)AND(x'4cdb9990')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND('1766523384')))AND(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(((((((((v0.c0)AND(x'4cdb9990')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND('1766523384')))AND(((v0.c0)GLOB(v0.c0))))) ORDER BY TRIM(((((((((v0.c0)AND(x'4cdb9990')))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c69) BETWEEN (vt0.c0) AND (t0.c69)) ELSE (- (t0.c0)) END, (~ (HEX(DISTINCT t0.c0))), (~ (CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN ((t0.c69) BETWEEN (vt0.c0) AND (t0.c69)) ELSE (- (t0.c0)) END, (~ (HEX(DISTINCT t0.c0))), (~ (CAST(t0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c69) BETWEEN (vt0.c0) AND (t0.c69)) ELSE (- (t0.c0)) END, (~ (HEX(DISTINCT t0.c0))), (~ (CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN vt0.c0 THEN ((t0.c69) BETWEEN (vt0.c0) AND (t0.c69)) ELSE (- (t0.c0)) END, (~ (HEX(DISTINCT t0.c0))), (~ (CAST(t0.c0 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (t0.c2) ORDER BY CASE WHEN vt0.c0 THEN ((t0.c69) BETWEEN (vt0.c0) AND (t0.c69)) ELSE (- (t0.c0)) END, (~ (HEX(DISTINCT t0.c0))), (~ (CAST(t0.c0 AS REAL))) DESC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE CHANGES()  WHEN INSTR(x'', t0.c0) THEN TYPEOF(DISTINCT t0.c2) WHEN ((((t0.c2)AND(t0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((t0.c2)IS NOT(t0.c2)) ELSE t0.c69 END) ORDER BY (~ (((t0.c2)&(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CHANGES()  WHEN INSTR(x'', t0.c0) THEN TYPEOF(DISTINCT t0.c2) WHEN ((((t0.c2)AND(t0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((t0.c2)IS NOT(t0.c2)) ELSE t0.c69 END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)&(t0.c0))))  NULLS LAST);
SELECT * FROM t0 WHERE (CASE CHANGES()  WHEN INSTR(x'', t0.c0) THEN TYPEOF(DISTINCT t0.c2) WHEN ((((t0.c2)AND(t0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((t0.c2)IS NOT(t0.c2)) ELSE t0.c69 END) ORDER BY (~ (((t0.c2)&(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CHANGES()  WHEN INSTR(x'', t0.c0) THEN TYPEOF(DISTINCT t0.c2) WHEN ((((t0.c2)AND(t0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((t0.c2)IS NOT(t0.c2)) ELSE t0.c69 END) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c2)&(t0.c0))))  NULLS LAST);
SELECT * FROM t0 WHERE (CASE CHANGES()  WHEN INSTR(x'', t0.c0) THEN TYPEOF(DISTINCT t0.c2) WHEN ((((t0.c2)AND(t0.c0)))AND(t0.c2)) THEN CAST(t0.c0 AS TEXT) WHEN SQLITE_COMPILEOPTION_GET(t0.c0) THEN ((t0.c2)IS NOT(t0.c2)) ELSE t0.c69 END) ORDER BY (~ (((t0.c2)&(t0.c0))))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE ((((((~ (v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((~ (v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((~ (v0.c0)))OR(v0.c0)))AND(v0.c0 COLLATE RTRIM)));
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (IFNULL(t0.c69, t0.c69)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (IFNULL(t0.c69, t0.c69)) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (IFNULL(t0.c69, t0.c69)) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (IFNULL(t0.c69, t0.c69)) AND (t0.c2))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN (IFNULL(t0.c69, t0.c69)) AND (t0.c2)));
SELECT * FROM v0, t0 WHERE ((((((t0.c0)/(t0.c2)), (((t0.c0))!=((t0.c2))), UNLIKELY(v0.c0)))<(((((t0.c2, t0.c0, t0.c2, v0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c69, t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c69, t0.c2, t0.c2, v0.c0))), v0.c0, CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)/(t0.c2)), (((t0.c0))<>((t0.c2))), UNLIKELY(v0.c0)))<(((((t0.c2, t0.c0, t0.c2, v0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c69, t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c69, t0.c2, t0.c2, v0.c0))), v0.c0, CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c0)/(t0.c2)), (((t0.c0))!=((t0.c2))), UNLIKELY(v0.c0)))<(((((t0.c2, t0.c0, t0.c2, v0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c69, t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c69, t0.c2, t0.c2, v0.c0))), v0.c0, CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)/(t0.c2)), (((t0.c0))<>((t0.c2))), UNLIKELY(v0.c0)))<(((((t0.c2, t0.c0, t0.c2, v0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c69, t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c69, t0.c2, t0.c2, v0.c0))), v0.c0, CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((((((t0.c0)/(t0.c2)), (((t0.c0))!=((t0.c2))), UNLIKELY(v0.c0)))<(((((t0.c2, t0.c0, t0.c2, v0.c0, t0.c2)) BETWEEN ((t0.c2, t0.c69, t0.c2, v0.c0, t0.c2)) AND ((v0.c0, t0.c69, t0.c2, t0.c2, v0.c0))), v0.c0, CAST(t0.c0 AS REAL)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i32 CROSS JOIN v0 ON ((((((((((vt0.c0)>(t0.c69)))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c69))))))AND((t0.c2 IN ()))))OR(((v0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((((t0.c0)OR(((0.47733285611283527) NOT BETWEEN (vt0.c0) AND (t0.c2)))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c69 END)) WHERE (((((('', vt0.c0, vt0.c0)) BETWEEN ((t0.c69, t0.c2, vt0.c0)) AND ((t0.c69, v0.c0, x''))))>>(((t0.c0) BETWEEN (t0.c69) AND (t0.c69))))) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c69 THEN vt0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)||(0.08821416373658997))) AND (((t0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('', vt0.c0, vt0.c0)) BETWEEN ((t0.c69, t0.c2, vt0.c0)) AND ((t0.c69, v0.c0, x''))))>>(((t0.c0) BETWEEN (t0.c69) AND (t0.c69))))) IS TRUE)  as count FROM vt0 INDEXED BY i32 CROSS JOIN v0 ON ((((((((((vt0.c0)>(t0.c69)))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c69))))))AND((t0.c2 IN ()))))OR(((v0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((((t0.c0)OR(((0.47733285611283527) NOT BETWEEN (vt0.c0) AND (t0.c2)))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c69 END)) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c69 THEN vt0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)||(0.08821416373658997))) AND (((t0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i32 CROSS JOIN v0 ON ((((((((((vt0.c0)>(t0.c69)))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c69))))))AND((t0.c2 IN ()))))OR(((v0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((((t0.c0)OR(((0.47733285611283527) NOT BETWEEN (vt0.c0) AND (t0.c2)))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c69 END)) WHERE (((((('', vt0.c0, vt0.c0)) BETWEEN ((t0.c69, t0.c2, vt0.c0)) AND ((t0.c69, v0.c0, x''))))>>(((t0.c0) BETWEEN (t0.c69) AND (t0.c69))))) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c69 THEN vt0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)||(0.08821416373658997))) AND (((t0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((('', vt0.c0, vt0.c0)) BETWEEN ((t0.c69, t0.c2, vt0.c0)) AND ((t0.c69, v0.c0, x''))))>>(((t0.c0) BETWEEN (t0.c69) AND (t0.c69))))) IS TRUE)  as count FROM vt0 INDEXED BY i32 CROSS JOIN v0 ON ((((((((((vt0.c0)>(t0.c69)))AND((((v0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c69))))))AND((t0.c2 IN ()))))OR(((v0.c0) NOTNULL))))OR(t0.c0 COLLATE BINARY)) FULL OUTER JOIN t0 ON ((((t0.c0)OR(((0.47733285611283527) NOT BETWEEN (vt0.c0) AND (t0.c2)))))AND(CASE t0.c2  WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c69 END)) ORDER BY ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 WHEN t0.c69 THEN vt0.c0 WHEN t0.c0 THEN t0.c69 ELSE t0.c2 END) NOT BETWEEN (((vt0.c0)||(0.08821416373658997))) AND (((t0.c0) BETWEEN (v0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 INDEXED BY i32, v0 WHERE ('1636033542') ORDER BY ((LIKELIHOOD(DISTINCT '', 0.36739636937435616)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1636033542') IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 ORDER BY ((LIKELIHOOD(DISTINCT '', 0.36739636937435616)) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 INDEXED BY i32, v0 WHERE ('1636033542') ORDER BY ((LIKELIHOOD(DISTINCT '', 0.36739636937435616)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1636033542') IS TRUE)  as count FROM vt0 INDEXED BY i32, v0 ORDER BY ((LIKELIHOOD(DISTINCT '', 0.36739636937435616)) NOTNULL) DESC);
SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'8bd39591' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), 0.851582046144159, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'8bd39591' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), 0.851582046144159, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'8bd39591' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), 0.851582046144159, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'8bd39591' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), 0.851582046144159, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((CASE WHEN v0.c0 THEN v0.c0 WHEN x'8bd39591' THEN v0.c0 WHEN v0.c0 THEN v0.c0 END, ((v0.c0)%(v0.c0)), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), 0.851582046144159, ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))))));
SELECT * FROM t0 WHERE (CAST(((t0.c69) BETWEEN (t0.c69) AND (t0.c69)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c69) BETWEEN (t0.c69) AND (t0.c69)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c69) BETWEEN (t0.c69) AND (t0.c69)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c69) BETWEEN (t0.c69) AND (t0.c69)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c69) BETWEEN (t0.c69) AND (t0.c69)) AS INTEGER));
SELECT ALL * FROM t0 WHERE ((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c69 COLLATE BINARY, RTRIM(t0.c0), t0.c0 COLLATE BINARY)) AND ((t0.c0, (~ (NULL)), ((t0.c2)>(t0.c2)))))) ORDER BY LENGTH(CAST(t0.c2 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c69 COLLATE BINARY, RTRIM(t0.c0), t0.c0 COLLATE BINARY)) AND ((t0.c0, (~ (NULL)), ((t0.c2)>(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY LENGTH(CAST(t0.c2 AS INTEGER)) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c69 COLLATE BINARY, RTRIM(t0.c0), t0.c0 COLLATE BINARY)) AND ((t0.c0, (~ (NULL)), ((t0.c2)>(t0.c2)))))) ORDER BY LENGTH(CAST(t0.c2 AS INTEGER)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c69 COLLATE BINARY, RTRIM(t0.c0), t0.c0 COLLATE BINARY)) AND ((t0.c0, (~ (NULL)), ((t0.c2)>(t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY LENGTH(CAST(t0.c2 AS INTEGER)) DESC);
SELECT ALL * FROM t0 WHERE ((((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c69 COLLATE BINARY, RTRIM(t0.c0), t0.c0 COLLATE BINARY)) AND ((t0.c0, (~ (NULL)), ((t0.c2)>(t0.c2)))))) ORDER BY LENGTH(CAST(t0.c2 AS INTEGER)) DESC;
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER))-(((vt0.c0)&(t0.c2))))) ORDER BY ((x'')=(((x'5a8c') NOTNULL))), (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 END))<(((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))-(((vt0.c0)&(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'')=(((x'5a8c') NOTNULL))), (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 END))<(((+ (t0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER))-(((vt0.c0)&(t0.c2))))) ORDER BY ((x'')=(((x'5a8c') NOTNULL))), (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 END))<(((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER))-(((vt0.c0)&(t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((x'')=(((x'5a8c') NOTNULL))), (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 END))<(((+ (t0.c0))))));
SELECT ALL * FROM vt0, t0 WHERE (((CAST(t0.c0 AS INTEGER))-(((vt0.c0)&(t0.c2))))) ORDER BY ((x'')=(((x'5a8c') NOTNULL))), (((CASE t0.c2  WHEN vt0.c0 THEN t0.c0 END))<(((+ (t0.c0)))));
SELECT * FROM v0, vt0, t0 WHERE (((((t0.c69) ISNULL))LIKE(((0xffffffffd9dc9b09) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((((t0.c2, v0.c0, t0.c2))>=((vt0.c0, x'', '-88922487'))))%(CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END)) DESC, (json_type(t0.c2) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69) ISNULL))LIKE(((0Xffffffffd9dc9b09) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((t0.c2, v0.c0, t0.c2))>=((vt0.c0, x'', '-88922487'))))%(CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END)) DESC, (json_type(t0.c2) IN ()));
SELECT * FROM v0, vt0, t0 WHERE (((((t0.c69) ISNULL))LIKE(((0xffffffffd9dc9b09) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((((t0.c2, v0.c0, t0.c2))>=((vt0.c0, x'', '-88922487'))))%(CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END)) DESC, (json_type(t0.c2) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c69) ISNULL))LIKE(((0Xffffffffd9dc9b09) BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, t0 ORDER BY (((((t0.c2, v0.c0, t0.c2))>=((vt0.c0, x'', '-88922487'))))%(CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END)) DESC, (json_type(t0.c2) IN ()));
SELECT * FROM v0, vt0, t0 WHERE (((((t0.c69) ISNULL))LIKE(((0xffffffffd9dc9b09) BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY (((((t0.c2, v0.c0, t0.c2))>=((vt0.c0, x'', '-88922487'))))%(CASE NULL  WHEN t0.c2 THEN t0.c0 ELSE v0.c0 END)) DESC, (json_type(t0.c2) IN ());
SELECT * FROM t0, vt0 INNER JOIN v0 ON (+ (((t0.c69) NOT BETWEEN (v0.c0) AND (t0.c2)))) WHERE ((((((t0.c69)) BETWEEN ((v0.c0)) AND ((t0.c0))))>(((t0.c69)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69)) BETWEEN ((v0.c0)) AND ((t0.c0))))>(((t0.c69)<(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON (+ (((t0.c69) NOT BETWEEN (v0.c0) AND (t0.c2)))));
SELECT * FROM t0, vt0 INNER JOIN v0 ON (+ (((t0.c69) NOT BETWEEN (v0.c0) AND (t0.c2)))) WHERE ((((((t0.c69)) BETWEEN ((v0.c0)) AND ((t0.c0))))>(((t0.c69)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c69)) BETWEEN ((v0.c0)) AND ((t0.c0))))>(((t0.c69)<(vt0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN v0 ON (+ (((t0.c69) NOT BETWEEN (v0.c0) AND (t0.c2)))));
SELECT * FROM t0, vt0 INNER JOIN v0 ON (+ (((t0.c69) NOT BETWEEN (v0.c0) AND (t0.c2)))) WHERE ((((((t0.c69)) BETWEEN ((v0.c0)) AND ((t0.c0))))>(((t0.c69)<(vt0.c0)))));
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.08758727997135607))!=((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((0.08758727997135607))!=((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.08758727997135607))!=((v0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((0.08758727997135607))!=((v0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0, v0, vt0);
SELECT COUNT(*) FROM t0, v0, vt0 WHERE ((((0.08758727997135607))!=((v0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(ABS(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(ABS(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))||(ABS(DISTINCT v0.c0))));
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN ((x'395a') NOTNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN 'i]xIYP' THEN t0.c69 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END THEN (t0.c2 IN ()) END) ORDER BY 0.1965331362750199, ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c2 COLLATE NOCASE)))AND(((t0.c69) BETWEEN (t0.c69) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN ((x'395a') NOTNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN 'i]xIYP' THEN t0.c69 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0.1965331362750199, ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c2 COLLATE NOCASE)))AND(((t0.c69) BETWEEN (t0.c69) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN ((x'395a') NOTNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN 'i]xIYP' THEN t0.c69 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END THEN (t0.c2 IN ()) END) ORDER BY 0.1965331362750199, ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c2 COLLATE NOCASE)))AND(((t0.c69) BETWEEN (t0.c69) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN ((x'395a') NOTNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN 'i]xIYP' THEN t0.c69 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END THEN (t0.c2 IN ()) END) IS TRUE)  as count FROM vt0, t0, v0 ORDER BY 0.1965331362750199, ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c2 COLLATE NOCASE)))AND(((t0.c69) BETWEEN (t0.c69) AND (v0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, t0, v0 WHERE (CASE WHEN t0.c2 COLLATE BINARY THEN ((t0.c2) NOT NULL) WHEN ((x'395a') NOTNULL) THEN CAST(t0.c2 AS NUMERIC) WHEN CASE t0.c2  WHEN t0.c0 THEN v0.c0 WHEN 'i]xIYP' THEN t0.c69 WHEN v0.c0 THEN t0.c2 ELSE v0.c0 END THEN (t0.c2 IN ()) END) ORDER BY 0.1965331362750199, ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0)))AND(t0.c2 COLLATE NOCASE)))AND(((t0.c69) BETWEEN (t0.c69) AND (v0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (CASE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (v0.c0 IN ()) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (v0.c0 IN ()) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (v0.c0 IN ()) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (v0.c0 IN ()) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE COALESCE(v0.c0, v0.c0, v0.c0, v0.c0)  WHEN (v0.c0 IN ()) THEN ((v0.c0)IS NOT(v0.c0)) ELSE ((v0.c0)+(v0.c0)) END);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON t0.c69 CROSS JOIN vt0 ON CAST(((t0.c69)%(t0.c2)) AS BLOB) WHERE ((((- (-1338394824)))LIKE(NULL))) ORDER BY (- (x'ff206e65')) ASC;
SELECT SUM(count) FROM (SELECT (((((- (-1338394824)))LIKE(NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c69 CROSS JOIN vt0 ON CAST(((t0.c69)%(t0.c2)) AS BLOB) ORDER BY (- (x'ff206e65')) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON t0.c69 CROSS JOIN vt0 ON CAST(((t0.c69)%(t0.c2)) AS BLOB) WHERE ((((- (-1338394824)))LIKE(NULL))) ORDER BY (- (x'ff206e65')) ASC;
SELECT SUM(count) FROM (SELECT (((((- (-1338394824)))LIKE(NULL))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON t0.c69 CROSS JOIN vt0 ON CAST(((t0.c69)%(t0.c2)) AS BLOB) ORDER BY (- (x'ff206e65')) ASC);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON t0.c69 CROSS JOIN vt0 ON CAST(((t0.c69)%(t0.c2)) AS BLOB) WHERE ((((- (-1338394824)))LIKE(NULL))) ORDER BY (- (x'ff206e65')) ASC;
SELECT * FROM v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((~ (v0.c0))) IS TRUE));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((x''))) LEFT OUTER JOIN vt0 ON (((v0.c0)AND(v0.c0)) IN ()) WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL)) ORDER BY t0.c69 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((x''))) LEFT OUTER JOIN vt0 ON (((v0.c0)AND(v0.c0)) IN ()) ORDER BY t0.c69 ASC  NULLS FIRST);
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((x''))) LEFT OUTER JOIN vt0 ON (((v0.c0)AND(v0.c0)) IN ()) WHERE (((CAST(t0.c0 AS INTEGER)) NOT NULL)) ORDER BY t0.c69 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((vt0.c0)) NOT BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((x''))) LEFT OUTER JOIN vt0 ON (((v0.c0)AND(v0.c0)) IN ()) ORDER BY t0.c69 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) BETWEEN ((+ (vt0.c0))) AND (t0.c69)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c0))) BETWEEN ((+ (vt0.c0))) AND (t0.c69))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) BETWEEN ((+ (vt0.c0))) AND (t0.c69)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c0))) BETWEEN ((+ (vt0.c0))) AND (t0.c69))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c0 IN (t0.c0))) BETWEEN ((+ (vt0.c0))) AND (t0.c69)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((x'')+(vt0.c0)))/(vt0.c0)), (((vt0.c0) ISNULL) IN ())  NULLS LAST, STRFTIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'764b', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (0.9648431691171915 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')+(vt0.c0)))/(vt0.c0)), (((vt0.c0) ISNULL) IN ())  NULLS LAST, STRFTIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'764b', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (0.9648431691171915 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((x'')+(vt0.c0)))/(vt0.c0)), (((vt0.c0) ISNULL) IN ())  NULLS LAST, STRFTIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'764b', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (0.9648431691171915 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')+(vt0.c0)))/(vt0.c0)), (((vt0.c0) ISNULL) IN ())  NULLS LAST, STRFTIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'764b', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (0.9648431691171915 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((x'')+(vt0.c0)))/(vt0.c0)), (((vt0.c0) ISNULL) IN ())  NULLS LAST, STRFTIME((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), x'764b', ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), (0.9648431691171915 IN ()), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c69) AND (t0.c69)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c69) AND (t0.c69)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c69) AND (t0.c69)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c69) AND (t0.c69)) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c69) AND (t0.c69)) AS BLOB));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c69) NOTNULL) COLLATE NOCASE COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((t0.c2)%(vt0.c0)) COLLATE NOCASE WHERE (CAST(json_array_length(t0.c2) AS BLOB)) ORDER BY ((((((t0.c69) BETWEEN (v0.c0) AND (vt0.c0)))AND(x'' COLLATE NOCASE)))AND(((vt0.c0)-(t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json_array_length(t0.c2) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c69) NOTNULL) COLLATE NOCASE COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((t0.c2)%(vt0.c0)) COLLATE NOCASE ORDER BY ((((((t0.c69) BETWEEN (v0.c0) AND (vt0.c0)))AND(x'' COLLATE NOCASE)))AND(((vt0.c0)-(t0.c69)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c69) NOTNULL) COLLATE NOCASE COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((t0.c2)%(vt0.c0)) COLLATE NOCASE WHERE (CAST(json_array_length(t0.c2) AS BLOB)) ORDER BY ((((((t0.c69) BETWEEN (v0.c0) AND (vt0.c0)))AND(x'' COLLATE NOCASE)))AND(((vt0.c0)-(t0.c69)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(json_array_length(t0.c2) AS BLOB)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c69) NOTNULL) COLLATE NOCASE COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((t0.c2)%(vt0.c0)) COLLATE NOCASE ORDER BY ((((((t0.c69) BETWEEN (v0.c0) AND (vt0.c0)))AND(x'' COLLATE NOCASE)))AND(((vt0.c0)-(t0.c69)))) DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((t0.c69) NOTNULL) COLLATE NOCASE COLLATE RTRIM LEFT OUTER JOIN vt0 ON ((t0.c2)%(vt0.c0)) COLLATE NOCASE WHERE (CAST(json_array_length(t0.c2) AS BLOB)) ORDER BY ((((((t0.c69) BETWEEN (v0.c0) AND (vt0.c0)))AND(x'' COLLATE NOCASE)))AND(((vt0.c0)-(t0.c69)))) DESC;
SELECT * FROM t0 WHERE (((((((t0.c69)<=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(((x'') NOT NULL)))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)<=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(((x'') NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((((((t0.c69)<=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(((x'') NOT NULL)))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c69)<=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(((x'') NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC);
SELECT * FROM t0 WHERE (((((((t0.c69)<=(t0.c2)))OR(CAST(t0.c0 AS NUMERIC))))OR(((x'') NOT NULL)))) ORDER BY ((((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT NULL) ASC;
SELECT * FROM t0, v0 WHERE ((((t0.c69) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69) NOT NULL) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c69) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c69) NOT NULL) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((t0.c69) NOT NULL) IN ()));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)AND('.'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)AND('.'))) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)AND('.'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)AND('.'))) AND (((vt0.c0)LIKE(vt0.c0)))));
SELECT * FROM v0 INNER JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (((v0.c0)AND('.'))) AND (((vt0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0)>=(vt0.c0)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0 WHERE (ABS(((v0.c0)-(x''))));
SELECT SUM(count) FROM (SELECT ((ABS(((v0.c0)-(x'')))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (ABS(((v0.c0)-(x''))));
SELECT SUM(count) FROM (SELECT ((ABS(((v0.c0)-(x'')))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (ABS(((v0.c0)-(x''))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c69 AS BLOB)) BETWEEN (((((t0.c69)OR(v0.c0)))OR(t0.c0))) AND (DATE(NULL, vt0.c0, vt0.c0))) RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOT NULL)) IS TRUE) WHERE (((((t0.c2)>(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c69 AS BLOB)) BETWEEN (((((t0.c69)OR(v0.c0)))OR(t0.c0))) AND (DATE(NULL, vt0.c0, vt0.c0))) RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT * FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c69 AS BLOB)) BETWEEN (((((t0.c69)OR(v0.c0)))OR(t0.c0))) AND (DATE(NULL, vt0.c0, vt0.c0))) RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOT NULL)) IS TRUE) WHERE (((((t0.c2)>(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((CAST(t0.c69 AS BLOB)) BETWEEN (((((t0.c69)OR(v0.c0)))OR(t0.c0))) AND (DATE(NULL, vt0.c0, vt0.c0))) RIGHT OUTER JOIN v0 ON ((((vt0.c0) NOT NULL)) IS TRUE));
SELECT COUNT(*) FROM v0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (LAST_INSERT_ROWID());
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, 0Xffffffffd537df2b))=((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, 0xffffffffd537df2b))=((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, 0Xffffffffd537df2b))=((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, 0xffffffffd537df2b))=((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c0, vt0.c0, 0Xffffffffd537df2b))=((v0.c0, v0.c0, v0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) AND (vt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN 0.6775004833974295 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN -309941250 THEN vt0.c0 WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)*(vt0.c0))  WHEN 0.6775004833974295 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN -309941250 THEN vt0.c0 WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN 0.6775004833974295 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN -309941250 THEN vt0.c0 WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)*(vt0.c0))  WHEN 0.6775004833974295 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN -309941250 THEN vt0.c0 WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)*(vt0.c0))  WHEN 0.6775004833974295 THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN -309941250 THEN vt0.c0 WHEN (((vt0.c0))=((vt0.c0))) THEN vt0.c0 COLLATE RTRIM END);
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))) WHERE (json_remove((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (- (0.26442839380320227)), vt0.c0, '}x.\nc')) ORDER BY ((0.3323477585297231)<=(((((v0.c0)OR(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (- (0.26442839380320227)), vt0.c0, '}x.\nc')) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ()))<>((vt0.c0 IN (vt0.c0)))) ORDER BY ((0.3323477585297231)<=(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))) WHERE (json_remove((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (- (0.26442839380320227)), vt0.c0, '}x.\nc')) ORDER BY ((0.3323477585297231)<=(((((v0.c0)OR(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_remove((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (- (0.26442839380320227)), vt0.c0, '}x.\nc')) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ()))<>((vt0.c0 IN (vt0.c0)))) ORDER BY ((0.3323477585297231)<=(((((v0.c0)OR(v0.c0)))AND(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN v0 ON (((v0.c0 IN ()))!=((vt0.c0 IN (vt0.c0)))) WHERE (json_remove((((v0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0))), (- (0.26442839380320227)), vt0.c0, '}x.\nc')) ORDER BY ((0.3323477585297231)<=(((((v0.c0)OR(v0.c0)))AND(vt0.c0))));
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE ((v0.c0)OR(v0.c0)) END ASC, ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)==(v0.c0)))))AND(((v0.c0)>=('')))))OR(CHAR(v0.c0, v0.c0, v0.c0))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((v0.c0))<((v0.c0)))))==((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(v0.c0)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE ((v0.c0)OR(v0.c0)) END ASC, ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)==(v0.c0)))))AND(((v0.c0)>=('')))))OR(CHAR(v0.c0, v0.c0, v0.c0))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((v0.c0))<((v0.c0)))))=((v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE ((v0.c0)OR(v0.c0)) END ASC, ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)==(v0.c0)))))AND(((v0.c0)>=('')))))OR(CHAR(v0.c0, v0.c0, v0.c0))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((v0.c0))<((v0.c0)))))==((v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(v0.c0)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE ((v0.c0)OR(v0.c0)) END ASC, ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)==(v0.c0)))))AND(((v0.c0)>=('')))))OR(CHAR(v0.c0, v0.c0, v0.c0))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((v0.c0))<((v0.c0)))))=((v0.c0))) ASC);
SELECT ALL * FROM v0 WHERE (LIKELY(v0.c0)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0)GLOB(v0.c0)) ELSE ((v0.c0)OR(v0.c0)) END ASC, ((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(((v0.c0)==(v0.c0)))))AND(((v0.c0)>=('')))))OR(CHAR(v0.c0, v0.c0, v0.c0))))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))  NULLS LAST, ((((((v0.c0))<((v0.c0)))))==((v0.c0))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((t0.c0)OR(t0.c69)))OR(t0.c2)) AS BLOB) LEFT OUTER JOIN t0 ON ((((t0.c69))>=((x''))) IN ()) WHERE (((v0.c0 COLLATE BINARY)|(((v0.c0) IS FALSE)))) ORDER BY ((((((v0.c0)OR(t0.c69)))OR(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)|(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((t0.c0)OR(t0.c69)))OR(t0.c2)) AS BLOB) LEFT OUTER JOIN t0 ON ((((t0.c69))>=((x''))) IN ()) ORDER BY ((((((v0.c0)OR(t0.c69)))OR(vt0.c0))) NOTNULL) DESC);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST(((((t0.c0)OR(t0.c69)))OR(t0.c2)) AS BLOB) LEFT OUTER JOIN t0 ON ((((t0.c69))>=((x''))) IN ()) WHERE (((v0.c0 COLLATE BINARY)|(((v0.c0) IS FALSE)))) ORDER BY ((((((v0.c0)OR(t0.c69)))OR(vt0.c0))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)|(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST(((((t0.c0)OR(t0.c69)))OR(t0.c2)) AS BLOB) LEFT OUTER JOIN t0 ON ((((t0.c69))>=((x''))) IN ()) ORDER BY ((((((v0.c0)OR(t0.c69)))OR(vt0.c0))) NOTNULL) DESC);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('-2075125132') AND (t0.c69)) ELSE ((t0.c0)=(0.1757095152373227)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('-2075125132') AND (t0.c69)) ELSE ((t0.c0)=(0.1757095152373227)) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('-2075125132') AND (t0.c69)) ELSE ((t0.c0)=(0.1757095152373227)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('-2075125132') AND (t0.c69)) ELSE ((t0.c0)=(0.1757095152373227)) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (CASE WHEN CASE WHEN t0.c69 THEN t0.c2 ELSE t0.c0 END THEN ((t0.c0) NOT BETWEEN ('-2075125132') AND (t0.c69)) ELSE ((t0.c0)=(0.1757095152373227)) END);
