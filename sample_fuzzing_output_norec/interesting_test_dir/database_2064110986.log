-- Time: 2024/06/10 06:39:52
-- Database: database86
-- Database version: 3.40.0
-- seed value: 2064110986
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1, content=''); -- 35ms;
VACUUM main; -- 14ms;
PRAGMA soft_heap_limit; -- 4ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 25ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA temp.cache_size = 7203594542198733371; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1, matchinfo=fts3); -- 33ms;
REINDEX; -- 15ms;
INSERT OR REPLACE INTO rt0 VALUES (NULL, x'', x'', '9BwZ', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0, c3) VALUES (NULL, NULL, x'', 0.0831460142671322), (x'0567', x'', 0.5280544682377478, x''), (0.304708427747691, x'', x'6bb6', '62'); -- 14ms;
UPDATE OR IGNORE rt0 SET (c0)=(x''); -- 17ms;
COMMIT; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 23ms;
END TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 33ms;
REINDEX; -- 12ms;
UPDATE OR IGNORE rt0 SET (c2)=(0.5280544682377478); -- 11ms;
UPDATE OR REPLACE rt0 SET (c4)=('0.304708427747691'); -- 10ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c3)=(949788542, 949788542); -- 11ms;
DROP TABLE IF EXISTS rt0; -- 12ms;
END; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA mmap_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO vt1(c1) VALUES ('949788542'), (NULL), (NULL); -- 11ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt1; -- 0ms;
UPDATE OR IGNORE vt1 SET c1=x''; -- 12ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB ); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES ('hP'), (x''), (''), (0.5824034659695857), (x''); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOTNULL) AS BLOB)) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0.4466674572539827 END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((vt0.c1)AND(vt0.c1)))))  NULLS LAST, vt0.c1 DESC, (CAST(vt0.c1 AS TEXT) IN (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0.4466674572539827 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((vt0.c1)AND(vt0.c1)))))  NULLS LAST, vt0.c1 DESC, (CAST(vt0.c1 AS TEXT) IN (CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0.4466674572539827 END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((vt0.c1)AND(vt0.c1)))))  NULLS LAST, vt0.c1 DESC, (CAST(vt0.c1 AS TEXT) IN (CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0.4466674572539827 END))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((vt0.c1)AND(vt0.c1)))))  NULLS LAST, vt0.c1 DESC, (CAST(vt0.c1 AS TEXT) IN (CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)-(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE 0.4466674572539827 END))) ORDER BY (((vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL)))) AND ((((vt0.c1)AND(vt0.c1)))))  NULLS LAST, vt0.c1 DESC, (CAST(vt0.c1 AS TEXT) IN (CAST(vt0.c0 AS REAL))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c1, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c1, vt0.c1, vt0.c0, vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((x'', vt0.c1, vt0.c1, vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (0.7161906834331551) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((0.7161906834331551) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((t0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (0.7161906834331551) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((0.7161906834331551) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((t0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (0.7161906834331551) ORDER BY (((CAST(vt0.c1 AS BLOB)))<=((t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'310e' END) BETWEEN (NULL) AND (((vt0.c0)*(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'310e' END) BETWEEN (NULL) AND (((vt0.c0)*(NULL))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'310e' END) BETWEEN (NULL) AND (((vt0.c0)*(NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'310e' END) BETWEEN (NULL) AND (((vt0.c0)*(NULL))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE x'310e' END) BETWEEN (NULL) AND (((vt0.c0)*(NULL)))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0)OR(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((t0.c0)OR(ABS(DISTINCT t0.c0))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(t0.c0 COLLATE BINARY)))AND(((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (((x'')OR(vt0.c0))) AND ((~ (vt1.c1))))) ORDER BY (((vt1.c0, vt0.c1, x'bd16', vt1.c1, vt1.c1)) BETWEEN ((CAST(t0.c0 AS TEXT), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1) NOT NULL), ((NULL)+(vt0.c0)), vt1.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN '' THEN vt1.c1 WHEN 9.49788542E8 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN (((x'')OR(vt0.c0))) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt1.c0, vt0.c1, x'bd16', vt1.c1, vt1.c1)) BETWEEN ((CAST(t0.c0 AS TEXT), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1) NOT NULL), ((NULL)+(vt0.c0)), vt1.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN '' THEN vt1.c1 WHEN 9.49788542E8 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (((x'')OR(vt0.c0))) AND ((~ (vt1.c1))))) ORDER BY (((vt1.c0, vt0.c1, x'bd16', vt1.c1, vt1.c1)) BETWEEN ((CAST(t0.c0 AS TEXT), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1) NOT NULL), ((NULL)+(vt0.c0)), vt1.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN '' THEN vt1.c1 WHEN 9.49788542E8 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE RTRIM) BETWEEN (((x'')OR(vt0.c0))) AND ((~ (vt1.c1))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt1.c0, vt0.c1, x'bd16', vt1.c1, vt1.c1)) BETWEEN ((CAST(t0.c0 AS TEXT), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1) NOT NULL), ((NULL)+(vt0.c0)), vt1.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN '' THEN vt1.c1 WHEN 9.49788542E8 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((vt1.c1 COLLATE RTRIM) BETWEEN (((x'')OR(vt0.c0))) AND ((~ (vt1.c1))))) ORDER BY (((vt1.c0, vt0.c1, x'bd16', vt1.c1, vt1.c1)) BETWEEN ((CAST(t0.c0 AS TEXT), ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), ((vt1.c1) NOT NULL), ((NULL)+(vt0.c0)), vt1.c0 COLLATE NOCASE)) AND ((CASE vt0.c1  WHEN '' THEN vt1.c1 WHEN 9.49788542E8 THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 END, ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)), CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)))));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((t0.c0) NOTNULL))) WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)))) ORDER BY ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))))))AND((t0.c0 IN ()))))OR((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((t0.c0) NOTNULL))) ORDER BY ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))))))AND((t0.c0 IN ()))))OR((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((t0.c0) NOTNULL))) WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)))) ORDER BY ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))))))AND((t0.c0 IN ()))))OR((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOTNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((t0.c0) NOTNULL))) ORDER BY ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))))))AND((t0.c0 IN ()))))OR((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN t0 ON ((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(vt0.c0))) BETWEEN ((((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0)))) AND (((t0.c0) NOTNULL))) WHERE (((((t0.c0) NOTNULL)) NOT BETWEEN (HEX(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)))) ORDER BY ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR((- (vt0.c0)))))AND((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c0))))))AND((t0.c0 IN ()))))OR((~ (vt0.c0)))) ASC  NULLS LAST, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) NOT NULL);
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (((- (vt0.c1)))+(CAST(vt0.c1 AS TEXT))) WHERE ((((json_array_length(vt0.c1)))<=((0X389c9f7e)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X389c9f7e)))OR(CAST(vt0.c0 AS TEXT))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((json_array_length(vt0.c1)))<=((0x389c9f7e)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (((- (vt0.c1)))+(CAST(vt0.c1 AS TEXT))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X389c9f7e)))OR(CAST(vt0.c0 AS TEXT))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (((- (vt0.c1)))+(CAST(vt0.c1 AS TEXT))) WHERE ((((json_array_length(vt0.c1)))<=((0X389c9f7e)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X389c9f7e)))OR(CAST(vt0.c0 AS TEXT))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT (((((json_array_length(vt0.c1)))<=((0x389c9f7e)))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON (((- (vt0.c1)))+(CAST(vt0.c1 AS TEXT))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X389c9f7e)))OR(CAST(vt0.c0 AS TEXT))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY ASC);
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON (((- (vt0.c1)))+(CAST(vt0.c1 AS TEXT))) WHERE ((((json_array_length(vt0.c1)))<=((0X389c9f7e)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (0X389c9f7e)))OR(CAST(vt0.c0 AS TEXT))), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE BINARY ASC;
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(t0.c0 AS TEXT)  NULLS FIRST, (((((((((vt1.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt1.c1)||(vt0.c0)))))OR((((0.11607933225567069, vt1.c0, vt0.c0))>((vt0.c0, vt1.c1, vt0.c1))))))AND((t0.c0 IN (vt1.c1, vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(t0.c0 AS TEXT)  NULLS FIRST, (((((((((vt1.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt1.c1)||(vt0.c0)))))OR((((0.11607933225567069, vt1.c0, vt0.c0))>((vt0.c0, vt1.c1, vt0.c1))))))AND((t0.c0 IN (vt1.c1, vt1.c1)))) ASC);
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(t0.c0 AS TEXT)  NULLS FIRST, (((((((((vt1.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt1.c1)||(vt0.c0)))))OR((((0.11607933225567069, vt1.c0, vt0.c0))>((vt0.c0, vt1.c1, vt0.c1))))))AND((t0.c0 IN (vt1.c1, vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt1.c1)OR(vt0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) END) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(t0.c0 AS TEXT)  NULLS FIRST, (((((((((vt1.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt1.c1)||(vt0.c0)))))OR((((0.11607933225567069, vt1.c0, vt0.c0))>((vt0.c0, vt1.c1, vt0.c1))))))AND((t0.c0 IN (vt1.c1, vt1.c1)))) ASC);
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN ((((vt1.c1)OR(vt0.c1)))OR(t0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))) END) ORDER BY (((vt0.c1 IN (vt0.c0))) BETWEEN (NULL) AND (CAST(t0.c0 AS BLOB))) ASC  NULLS FIRST, CAST(t0.c0 AS TEXT)  NULLS FIRST, (((((((((vt1.c0 IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(((vt1.c1)||(vt0.c0)))))OR((((0.11607933225567069, vt1.c0, vt0.c0))>((vt0.c0, vt1.c1, vt0.c1))))))AND((t0.c0 IN (vt1.c1, vt1.c1)))) ASC;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY (vt1.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY (vt1.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) ISNULL)) ORDER BY (vt1.c1 IN ());
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(CAST(vt1.c0 AS REAL))) WHERE (9.49788542E8);
SELECT SUM(count) FROM (SELECT ((9.49788542E8) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(CAST(vt1.c0 AS REAL))) WHERE (9.49788542E8);
SELECT SUM(count) FROM (SELECT ((9.49788542E8) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(CAST(vt1.c0 AS REAL))));
SELECT ALL COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(CAST(vt1.c0 AS REAL))) WHERE (9.49788542E8);
SELECT * FROM vt1 WHERE (0.04190121425618554);
SELECT SUM(count) FROM (SELECT ALL ((0.04190121425618554) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.04190121425618554);
SELECT SUM(count) FROM (SELECT ALL ((0.04190121425618554) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0.04190121425618554);
SELECT ALL * FROM vt0, t0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, 9.49788542E8)) AND ((vt0.c0, vt0.c0, t0.c0, vt0.c0, 0.7093539989441893))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c0, vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, 9.49788542E8)) AND ((vt0.c0, vt0.c0, t0.c0, vt0.c0, 0.7093539989441893)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, 9.49788542E8)) AND ((vt0.c0, vt0.c0, t0.c0, vt0.c0, 0.7093539989441893))))));
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c1, vt0.c0, vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, 9.49788542E8)) AND ((vt0.c0, vt0.c0, t0.c0, vt0.c0, 0.7093539989441893)))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- ((((vt0.c1, vt0.c0, vt0.c0, t0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0, vt0.c0, 9.49788542E8)) AND ((vt0.c0, vt0.c0, t0.c0, vt0.c0, 0.7093539989441893))))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CHANGES() FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((((vt0.c0, vt1.c1, vt0.c1)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0)==(vt1.c0)), NULL COLLATE BINARY)) AND (((~ (vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))*((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c1, vt0.c1)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0)=(vt1.c0)), NULL COLLATE BINARY)) AND (((~ (vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CHANGES() FULL OUTER JOIN vt0 ON vt0.c1 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))*((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CHANGES() FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((((vt0.c0, vt1.c1, vt0.c1)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0)==(vt1.c0)), NULL COLLATE BINARY)) AND (((~ (vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))*((vt1.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt1.c1, vt0.c1)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0)=(vt1.c0)), NULL COLLATE BINARY)) AND (((~ (vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CHANGES() FULL OUTER JOIN vt0 ON vt0.c1 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))*((vt1.c0 IN ()))) ASC);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt1 ON CHANGES() FULL OUTER JOIN vt0 ON vt0.c1 WHERE ((((vt0.c0, vt1.c1, vt0.c1)) NOT BETWEEN (((+ (t0.c0)), ((t0.c0)==(vt1.c0)), NULL COLLATE BINARY)) AND (((~ (vt0.c0)), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))AND(NULL)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))*((vt1.c0 IN ()))) ASC;
SELECT * FROM vt1, t0 WHERE (((json(vt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((json(vt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((json(vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY INNER JOIN t0 ON (((((((0.4471667220164294)AND(vt0.c1)))OR(vt0.c1))))<=((((((NULL)AND(vt1.c1)))OR(t0.c0))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY INNER JOIN t0 ON (((((((0.4471667220164294)AND(vt0.c1)))OR(vt0.c1))))<=((((((NULL)AND(vt1.c1)))OR(t0.c0))))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY INNER JOIN t0 ON (((((((0.4471667220164294)AND(vt0.c1)))OR(vt0.c1))))<=((((((NULL)AND(vt1.c1)))OR(t0.c0))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((t0.c0)GLOB(vt1.c0)) COLLATE BINARY INNER JOIN t0 ON (((((((0.4471667220164294)AND(vt0.c1)))OR(vt0.c1))))<=((((((NULL)AND(vt1.c1)))OR(t0.c0))))));
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (ABS(t0.c0)) AND (((((NULL)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (ABS(t0.c0)) AND (((((NULL)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (ABS(t0.c0)) AND (((((NULL)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0) NOT BETWEEN (ABS(t0.c0)) AND (((((NULL)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT BETWEEN (ABS(t0.c0)) AND (((((NULL)AND(t0.c0)))OR(t0.c0)))));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((x'' IN (vt1.c0, t0.c0)))OR(((('949788542', vt1.c1, vt1.c1))<=((vt0.c0, '-1354301732', vt0.c1))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (vt1.c0, t0.c0)))OR(((('949788542', vt1.c1, vt1.c1))<=((vt0.c0, '-1354301732', vt0.c1))))))OR(NULL))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((x'' IN (vt1.c0, t0.c0)))OR(((('949788542', vt1.c1, vt1.c1))<=((vt0.c0, '-1354301732', vt0.c1))))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (vt1.c0, t0.c0)))OR(((('949788542', vt1.c1, vt1.c1))<=((vt0.c0, '-1354301732', vt0.c1))))))OR(NULL))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((((x'' IN (vt1.c0, t0.c0)))OR(((('949788542', vt1.c1, vt1.c1))<=((vt0.c0, '-1354301732', vt0.c1))))))OR(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN '-|' ELSE vt0.c0 END THEN x'' COLLATE NOCASE ELSE (vt0.c0 IN ()) END) ORDER BY TRIM((NOT (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN '-|' ELSE vt0.c0 END THEN x'' COLLATE NOCASE ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NOT (vt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN '-|' ELSE vt0.c0 END THEN x'' COLLATE NOCASE ELSE (vt0.c0 IN ()) END) ORDER BY TRIM((NOT (vt0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN '-|' ELSE vt0.c0 END THEN x'' COLLATE NOCASE ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY TRIM((NOT (vt0.c1))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN '-|' ELSE vt0.c0 END THEN x'' COLLATE NOCASE ELSE (vt0.c0 IN ()) END) ORDER BY TRIM((NOT (vt0.c1))) ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE ((x'' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((x'' IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((x'' IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((x'' IN ()) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))=((t0.c0, t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (HEX(DISTINCT (((t0.c0, t0.c0, t0.c0))==((t0.c0, t0.c0, t0.c0)))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((((vt0.c1))==((vt1.c0)))))) ORDER BY CASE ((((x'')AND(vt1.c1)))OR(vt1.c0))  WHEN ((vt1.c0)|(vt0.c0)) THEN (vt0.c1 IN (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE ((((x'')AND(vt1.c1)))OR(vt1.c0))  WHEN ((vt1.c0)|(vt0.c0)) THEN (vt0.c1 IN (x'')) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((((vt0.c1))==((vt1.c0)))))) ORDER BY CASE ((((x'')AND(vt1.c1)))OR(vt1.c0))  WHEN ((vt1.c0)|(vt0.c0)) THEN (vt0.c1 IN (x'')) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt0.c1))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE ((((x'')AND(vt1.c1)))OR(vt1.c0))  WHEN ((vt1.c0)|(vt0.c0)) THEN (vt0.c1 IN (x'')) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((NOT ((((vt0.c1))==((vt1.c0)))))) ORDER BY CASE ((((x'')AND(vt1.c1)))OR(vt1.c0))  WHEN ((vt1.c0)|(vt0.c0)) THEN (vt0.c1 IN (x'')) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON TRIM((vt0.c0 IN (vt1.c0, vt1.c1))) RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END WHERE ((((NOT (vt0.c1)))LIKE(CASE WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))LIKE(CASE WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON TRIM((vt0.c0 IN (vt1.c0, vt1.c1))) RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON TRIM((vt0.c0 IN (vt1.c0, vt1.c1))) RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END WHERE ((((NOT (vt0.c1)))LIKE(CASE WHEN t0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))LIKE(CASE WHEN t0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON TRIM((vt0.c0 IN (vt1.c0, vt1.c1))) RIGHT OUTER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE RTRIM THEN ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) END);
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL)))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(NULL))) NOTNULL) DESC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'7b77' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(NULL))) NOTNULL) DESC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'7b77' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL)))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(NULL))) NOTNULL) DESC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'7b77' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0 IN (vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(NULL))) NOTNULL) DESC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'7b77' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)));
SELECT * FROM vt1 WHERE ((((((vt1.c0 IN (vt1.c0)))OR(vt1.c0)))AND(((vt1.c0) ISNULL)))) ORDER BY ((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))OR(NULL))) NOTNULL) DESC, ((CAST(vt1.c0 AS REAL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END) AND (CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN x'7b77' WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END));
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((-1.354301732E9)AND(vt1.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((-1.354301732E9)AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((-1.354301732E9)AND(vt1.c1)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((-1.354301732E9)AND(vt1.c1)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((vt1.c1)AND(vt1.c1)))OR(vt1.c0))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END) AND (((((-1.354301732E9)AND(vt1.c1)))OR(vt1.c0)))));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((load_extension(vt0.c1, vt1.c0))AND(x''))) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c1, vt1.c0))AND(x''))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((load_extension(vt0.c1, vt1.c0))AND(x''))) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((load_extension(vt0.c1, vt1.c0))AND(x''))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((load_extension(vt0.c1, vt1.c0))AND(x''))) ORDER BY ((((vt1.c0)+(vt1.c0))) NOT NULL);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)IS NOT(vt1.c1)) AS REAL)) ORDER BY 0.18910191761561757 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS NOT(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY 0.18910191761561757 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)IS NOT(vt1.c1)) AS REAL)) ORDER BY 0.18910191761561757 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS NOT(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY 0.18910191761561757 ASC);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c1)IS NOT(vt1.c1)) AS REAL)) ORDER BY 0.18910191761561757 ASC;
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0 IN ())) NOT BETWEEN ('W' COLLATE BINARY) AND (HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN ('W' COLLATE BINARY) AND (HEX(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0 IN ())) NOT BETWEEN ('W' COLLATE BINARY) AND (HEX(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) NOT BETWEEN ('W' COLLATE BINARY) AND (HEX(vt1.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE ((((t0.c0 IN ())) NOT BETWEEN ('W' COLLATE BINARY) AND (HEX(vt1.c0))));
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)AND(vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS BLOB));
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1) NOTNULL)))) ORDER BY (NOT (((vt0.c1)>>(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)+(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c1)>>(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1) NOTNULL)))) ORDER BY (NOT (((vt0.c1)>>(vt1.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)+(((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt0.c1)>>(vt1.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (((vt1.c1 COLLATE BINARY)+(((vt1.c1) NOTNULL)))) ORDER BY (NOT (((vt0.c1)>>(vt1.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((- (vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((- (vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON (((- (vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOT NULL)) IS FALSE));
SELECT * FROM t0, vt0 WHERE ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))=((((0Xe41f144)<<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))=((((0Xe41f144)<<(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))=((((0Xe41f144)<<(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))=((((0Xe41f144)<<(vt0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0))))=((((0Xe41f144)<<(vt0.c0))))));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)+(t0.c0))) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON (- ('*7Lb^K-\' COLLATE BINARY)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)+(t0.c0))) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON (- ('*7Lb^K-\' COLLATE BINARY)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)+(t0.c0))) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON (- ('*7Lb^K-\' COLLATE BINARY)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt1.c0)+(t0.c0))) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON (- ('*7Lb^K-\' COLLATE BINARY)));
SELECT ALL * FROM vt1 INNER JOIN t0 ON ((((vt1.c0)+(t0.c0))) BETWEEN ((vt1.c1 IN ())) AND (((vt1.c0) NOTNULL))) LEFT OUTER JOIN vt0 ON (- ('*7Lb^K-\' COLLATE BINARY)) WHERE (CAST(((vt1.c0) NOTNULL) AS REAL));
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c1  WHEN '1992969210' THEN vt1.c0 END) IS FALSE)) ORDER BY vt1.c1 DESC  NULLS FIRST, (COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, t0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN '1992969210' THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c1 DESC  NULLS FIRST, (COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, t0.c0) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c1  WHEN '1992969210' THEN vt1.c0 END) IS FALSE)) ORDER BY vt1.c1 DESC  NULLS FIRST, (COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, t0.c0) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c1  WHEN '1992969210' THEN vt1.c0 END) IS FALSE)) IS TRUE)  as count FROM t0, vt1 ORDER BY vt1.c1 DESC  NULLS FIRST, (COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, t0.c0) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((CASE vt1.c1  WHEN '1992969210' THEN vt1.c0 END) IS FALSE)) ORDER BY vt1.c1 DESC  NULLS FIRST, (COALESCE(DISTINCT vt1.c1, vt1.c0, vt1.c1, t0.c0) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(t0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)OR(t0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(t0.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)OR(t0.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((- (((((vt1.c0)OR(t0.c0)))OR(vt1.c1)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0)<<(x''))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN json_array(vt1.c1, vt1.c1) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<<(x''))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN json_array(vt1.c1, vt1.c1) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0)<<(x''))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN json_array(vt1.c1, vt1.c1) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c0)<<(x''))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN json_array(vt1.c1, vt1.c1) ELSE CAST(vt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((t0.c0)<<(x''))  WHEN (((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))) THEN json_array(vt1.c1, vt1.c1) ELSE CAST(vt1.c0 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt1.c0))>=(((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 END IN (vt0.c0, (((0x76ca4bfa))>((vt0.c0))))) WHERE (CASE WHEN NULL THEN NULL END) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c1)))  NULLS LAST, '225702623' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN NULL END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt1.c0))>=(((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 END IN (vt0.c0, (((0X76ca4bfa))>((vt0.c0))))) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c1)))  NULLS LAST, '225702623' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt1.c0))>=(((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 END IN (vt0.c0, (((0x76ca4bfa))>((vt0.c0))))) WHERE (CASE WHEN NULL THEN NULL END) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c1)))  NULLS LAST, '225702623' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN NULL END) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((LIKE(vt0.c1, vt1.c0))>=(((vt1.c0) IS TRUE))) FULL OUTER JOIN vt1 ON (CASE vt0.c1  WHEN vt1.c0 THEN vt1.c1 END IN (vt0.c0, (((0X76ca4bfa))>((vt0.c0))))) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((vt1.c1)))  NULLS LAST, '225702623' DESC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json(t0.c0) COLLATE NOCASE INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND ((((vt0.c0, vt0.c0, NULL, vt1.c1, x'56ab'))>((vt1.c0, vt0.c0, vt1.c1, '', vt0.c0))))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON json(t0.c0) COLLATE NOCASE INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND ((((vt0.c0, vt0.c0, NULL, vt1.c1, x'56ab'))>((vt1.c0, vt0.c0, vt1.c1, '', vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json(t0.c0) COLLATE NOCASE INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND ((((vt0.c0, vt0.c0, NULL, vt1.c1, x'56ab'))>((vt1.c0, vt0.c0, vt1.c1, '', vt0.c0))))) WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON json(t0.c0) COLLATE NOCASE INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND ((((vt0.c0, vt0.c0, NULL, vt1.c1, x'56ab'))>((vt1.c0, vt0.c0, vt1.c1, '', vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON json(t0.c0) COLLATE NOCASE INNER JOIN vt1 ON ((CAST(t0.c0 AS TEXT)) NOT BETWEEN ((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) AND ((((vt0.c0, vt0.c0, NULL, vt1.c1, x'56ab'))>((vt1.c0, vt0.c0, vt1.c1, '', vt0.c0))))) WHERE ((vt0.c0 IN ()));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt1.c0))<>((vt0.c0))))>(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1 DESC  NULLS LAST, ((x'77fb')<(((NULL)>(vt1.c1)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt0.c0))))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt0.c1 DESC  NULLS LAST, ((x'77fb')<(((NULL)>(vt1.c1)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt1.c0))<>((vt0.c0))))>(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1 DESC  NULLS LAST, ((x'77fb')<(((NULL)>(vt1.c1)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))!=((vt0.c0))))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY vt0.c1 DESC  NULLS LAST, ((x'77fb')<(((NULL)>(vt1.c1)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((((vt1.c0))<>((vt0.c0))))>(vt0.c1 COLLATE NOCASE))) ORDER BY vt0.c1 DESC  NULLS LAST, ((x'77fb')<(((NULL)>(vt1.c1)))) ASC, (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE NOCASE  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC)) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((((vt0.c1)AND(vt0.c0)))OR(t0.c0)), '28739711')) AND ((CAST(x'' AS BLOB), (vt0.c0 IN ()), ((vt0.c1)>=(vt0.c0))))), CAST(vt1.c1 AS REAL), (((~ (vt1.c1)))IS((((vt0.c1))<=((0.5156539740974867))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (((vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((((vt0.c1)AND(vt0.c0)))OR(t0.c0)), '28739711')) AND ((CAST(x'' AS BLOB), (vt0.c0 IN ()), ((vt0.c1)>=(vt0.c0))))), CAST(vt1.c1 AS REAL), (((~ (vt1.c1)))IS((((vt0.c1))<=((0.5156539740974867))))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC)) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((((vt0.c1)AND(vt0.c0)))OR(t0.c0)), '28739711')) AND ((CAST(x'' AS BLOB), (vt0.c0 IN ()), ((vt0.c1)>=(vt0.c0))))), CAST(vt1.c1 AS REAL), (((~ (vt1.c1)))IS((((vt0.c1))<=((0.5156539740974867))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY (((vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((((vt0.c1)AND(vt0.c0)))OR(t0.c0)), '28739711')) AND ((CAST(x'' AS BLOB), (vt0.c0 IN ()), ((vt0.c1)>=(vt0.c0))))), CAST(vt1.c1 AS REAL), (((~ (vt1.c1)))IS((((vt0.c1))<=((0.5156539740974867))))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0, vt1 WHERE (CAST(((vt0.c1)AND(vt0.c1)) AS NUMERIC)) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN (((((vt1.c0))=((vt1.c0))), ((((vt0.c1)AND(vt0.c0)))OR(t0.c0)), '28739711')) AND ((CAST(x'' AS BLOB), (vt0.c0 IN ()), ((vt0.c1)>=(vt0.c0))))), CAST(vt1.c1 AS REAL), (((~ (vt1.c1)))IS((((vt0.c1))<=((0.5156539740974867))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (((CASE WHEN 'CI s<f\]' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)>=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'CI s<f\]' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)>=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ()));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN 'CI s<f\]' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)>=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'CI s<f\]' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)>=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ()));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN 'CI s<f\]' THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)>=(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1))))) ORDER BY (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END IN ());
SELECT * FROM t0 WHERE ((((('|e.' IN (t0.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY JULIANDAY(t0.c0, ((((NULL)OR(t0.c0)))AND(t0.c0)), ((t0.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, TRIM(t0.c0, t0.c0), ((t0.c0) ISNULL), json(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('|e.' IN (t0.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(t0.c0, ((((NULL)OR(t0.c0)))AND(t0.c0)), ((t0.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, TRIM(t0.c0, t0.c0), ((t0.c0) ISNULL), json(t0.c0)) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((('|e.' IN (t0.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) ORDER BY JULIANDAY(t0.c0, ((((NULL)OR(t0.c0)))AND(t0.c0)), ((t0.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, TRIM(t0.c0, t0.c0), ((t0.c0) ISNULL), json(t0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('|e.' IN (t0.c0))))>=((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))) IS TRUE)  as count FROM t0 ORDER BY JULIANDAY(t0.c0, ((((NULL)OR(t0.c0)))AND(t0.c0)), ((t0.c0)>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN t0.c0 END, TRIM(t0.c0, t0.c0), ((t0.c0) ISNULL), json(t0.c0)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)+(x'5ab6'))) NOTNULL)) ORDER BY (((x'' COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1) ISNULL)))=((CAST(225702623 AS NUMERIC), CAST(vt0.c1 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)+(x'5ab6'))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((x'' COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1) ISNULL)))==((CAST(225702623 AS NUMERIC), CAST(vt0.c1 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)+(x'5ab6'))) NOTNULL)) ORDER BY (((x'' COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1) ISNULL)))=((CAST(225702623 AS NUMERIC), CAST(vt0.c1 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)+(x'5ab6'))) NOTNULL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((x'' COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1) ISNULL)))==((CAST(225702623 AS NUMERIC), CAST(vt0.c1 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (((((vt1.c1)+(x'5ab6'))) NOTNULL)) ORDER BY (((x'' COLLATE BINARY, ((vt0.c0) NOTNULL), ((vt1.c1) ISNULL)))=((CAST(225702623 AS NUMERIC), CAST(vt0.c1 AS BLOB), (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE ((t0.c0 IN ())) ORDER BY ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(TYPEOF(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(TYPEOF(DISTINCT vt1.c0))) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((t0.c0 IN ())) ORDER BY ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(TYPEOF(DISTINCT vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(TYPEOF(DISTINCT vt1.c0))) ASC);
SELECT ALL * FROM t0, vt1 WHERE ((t0.c0 IN ())) ORDER BY ((((((((vt1.c0)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(TYPEOF(DISTINCT vt1.c0))) ASC;
SELECT * FROM vt0, t0 WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN ())))) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST, ((NULL)IS NOT(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST, ((NULL)IS NOT(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN ())))) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST, ((NULL)IS NOT(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST, ((NULL)IS NOT(t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((((t0.c0)>(vt0.c0))) BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((vt0.c1 IN ())))) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM  NULLS LAST, ((NULL)IS NOT(t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((((0.18039730312748692)AND(vt1.c1)))OR(vt1.c1))) AND (((t0.c0)>>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) BETWEEN (((((0.18039730312748692)AND(vt1.c1)))OR(vt1.c1))) AND (((t0.c0)>>(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((((0.18039730312748692)AND(vt1.c1)))OR(vt1.c1))) AND (((t0.c0)>>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 COLLATE BINARY) BETWEEN (((((0.18039730312748692)AND(vt1.c1)))OR(vt1.c1))) AND (((t0.c0)>>(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((t0.c0 COLLATE BINARY) BETWEEN (((((0.18039730312748692)AND(vt1.c1)))OR(vt1.c1))) AND (((t0.c0)>>(vt1.c1)))));
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c1 COLLATE BINARY)=(CAST(vt1.c1 AS INTEGER)))) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)=(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c1 COLLATE BINARY)=(CAST(vt1.c1 AS INTEGER)))) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE BINARY)=(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt0.c1 IN ()) IN ())  NULLS FIRST);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c1 COLLATE BINARY)=(CAST(vt1.c1 AS INTEGER)))) ORDER BY ((vt0.c1 IN ()) IN ())  NULLS FIRST;
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE ((~ (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE ((~ (CAST(vt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt1.c1 AS REAL)))) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM);
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON ((vt0.c0)>(vt1.c0)) COLLATE RTRIM WHERE ((~ (CAST(vt1.c1 AS REAL))));
SELECT * FROM vt1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1 IN ())) NOT BETWEEN (((x'') NOT NULL)) AND (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)));
SELECT COUNT(*) FROM vt1, t0 WHERE (((0.7894318157425789) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7894318157425789) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((0.7894318157425789) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7894318157425789) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((0.7894318157425789) BETWEEN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt1.c0)IS NOT(t0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, 0.304708427747691, vt0.c0))))))AND((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt0.c0, x''))<>((vt0.c0, 0.304708427747691, vt0.c0))))))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, 0.304708427747691, vt0.c0))))))AND((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt0.c0, x''))<>((vt0.c0, 0.304708427747691, vt0.c0))))))AND((- (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt0.c0, x''))!=((vt0.c0, 0.304708427747691, vt0.c0))))))AND((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (~ (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN ((('-1354301732')-(vt1.c1))) AND (((vt1.c1)<<(vt0.c0)))) WHERE (t0.c0) ORDER BY CASE CAST(vt1.c1 AS REAL)  WHEN ((((vt1.c1)OR(x'')))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CAST(vt1.c1 AS TEXT) WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END THEN ((vt1.c0)>=(vt0.c1)) ELSE vt1.c0 COLLATE BINARY END DESC  NULLS LAST, (NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))), ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN ((('-1354301732')-(vt1.c1))) AND (((vt1.c1)<<(vt0.c0)))) ORDER BY CASE CAST(vt1.c1 AS REAL)  WHEN ((((vt1.c1)OR(x'')))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CAST(vt1.c1 AS TEXT) WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END THEN ((vt1.c0)>=(vt0.c1)) ELSE vt1.c0 COLLATE BINARY END DESC  NULLS LAST, (NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))), ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN ((('-1354301732')-(vt1.c1))) AND (((vt1.c1)<<(vt0.c0)))) WHERE (t0.c0) ORDER BY CASE CAST(vt1.c1 AS REAL)  WHEN ((((vt1.c1)OR(x'')))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CAST(vt1.c1 AS TEXT) WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END THEN ((vt1.c0)>=(vt0.c1)) ELSE vt1.c0 COLLATE BINARY END DESC  NULLS LAST, (NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))), ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN ((('-1354301732')-(vt1.c1))) AND (((vt1.c1)<<(vt0.c0)))) ORDER BY CASE CAST(vt1.c1 AS REAL)  WHEN ((((vt1.c1)OR(x'')))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CAST(vt1.c1 AS TEXT) WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END THEN ((vt1.c0)>=(vt0.c1)) ELSE vt1.c0 COLLATE BINARY END DESC  NULLS LAST, (NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))), ((vt0.c0) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((t0.c0)AND(t0.c0)))AND(vt0.c0))) BETWEEN ((('-1354301732')-(vt1.c1))) AND (((vt1.c1)<<(vt0.c0)))) WHERE (t0.c0) ORDER BY CASE CAST(vt1.c1 AS REAL)  WHEN ((((vt1.c1)OR(x'')))AND(vt1.c0)) THEN (vt1.c0 IN ()) WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE t0.c0 END THEN CAST(vt1.c1 AS TEXT) WHEN CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END THEN ((vt1.c0)>=(vt0.c1)) ELSE vt1.c0 COLLATE BINARY END DESC  NULLS LAST, (NOT (((((t0.c0)OR(vt1.c0)))AND(vt0.c0)))), ((vt0.c0) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)+(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)+(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)+(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)+(t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c0)+(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) NOTNULL) WHERE (((405809922) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((vt1.c1) IS FALSE)))) ORDER BY LIKELIHOOD(DISTINCT ((0.19308650381928516) NOT NULL), 0.30116018074015516) ASC  NULLS FIRST, CASE vt1.c1  WHEN (vt1.c1 IN (t0.c0)) THEN (vt1.c0 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN ('7' IN (t0.c0)) WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((405809922) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) NOTNULL) ORDER BY LIKELIHOOD(DISTINCT ((0.19308650381928516) NOT NULL), 0.30116018074015516) ASC  NULLS FIRST, CASE vt1.c1  WHEN (vt1.c1 IN (t0.c0)) THEN (vt1.c0 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN ('7' IN (t0.c0)) WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 END DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) NOTNULL) WHERE (((405809922) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((vt1.c1) IS FALSE)))) ORDER BY LIKELIHOOD(DISTINCT ((0.19308650381928516) NOT NULL), 0.30116018074015516) ASC  NULLS FIRST, CASE vt1.c1  WHEN (vt1.c1 IN (t0.c0)) THEN (vt1.c0 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN ('7' IN (t0.c0)) WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((405809922) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) NOTNULL) ORDER BY LIKELIHOOD(DISTINCT ((0.19308650381928516) NOT NULL), 0.30116018074015516) ASC  NULLS FIRST, CASE vt1.c1  WHEN (vt1.c1 IN (t0.c0)) THEN (vt1.c0 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN ('7' IN (t0.c0)) WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 END DESC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON ((((((((((t0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0)))OR(vt1.c0))) NOTNULL) WHERE (((405809922) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((vt1.c1) IS FALSE)))) ORDER BY LIKELIHOOD(DISTINCT ((0.19308650381928516) NOT NULL), 0.30116018074015516) ASC  NULLS FIRST, CASE vt1.c1  WHEN (vt1.c1 IN (t0.c0)) THEN (vt1.c0 IN ()) WHEN CAST(vt1.c0 AS TEXT) THEN ('7' IN (t0.c0)) WHEN ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)) THEN t0.c0 END DESC;
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(CAST(x'' AS TEXT))))AND(t0.c0)))OR((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(CAST(x'' AS TEXT))))AND(t0.c0)))OR((NOT (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(CAST(x'' AS TEXT))))AND(t0.c0)))OR((NOT (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(CAST(x'' AS TEXT))))AND(t0.c0)))OR((NOT (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((~ (t0.c0))) NOT BETWEEN (((t0.c0)OR(t0.c0))) AND (((t0.c0) IS FALSE)))) ORDER BY ((((((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)OR(CAST(t0.c0 AS TEXT))))OR(CAST(x'' AS TEXT))))AND(t0.c0)))OR((NOT (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (LIKELY(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ORDER BY t0.c0  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT(x''));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT(x'')));
SELECT ALL * FROM t0, vt1 WHERE (LIKELY(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ORDER BY t0.c0  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT(x''));
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT(x'')));
SELECT ALL * FROM t0, vt1 WHERE (LIKELY(((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)))) ORDER BY t0.c0  NULLS FIRST, ((((t0.c0) NOTNULL))IS NOT(x''));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)AND(vt1.c1)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((+ (vt1.c1)))%(UPPER(DISTINCT vt0.c0))) WHERE ((- (CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END))) ORDER BY ((((((((CAST('Y7*Y' AS TEXT))OR(((vt1.c0)LIKE(t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)AND(vt1.c1)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((+ (vt1.c1)))%(UPPER(DISTINCT vt0.c0))) ORDER BY ((((((((CAST('Y7*Y' AS TEXT))OR(((vt1.c0)LIKE(t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)<(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)AND(vt1.c1)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((+ (vt1.c1)))%(UPPER(DISTINCT vt0.c0))) WHERE ((- (CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END))) ORDER BY ((((((((CAST('Y7*Y' AS TEXT))OR(((vt1.c0)LIKE(t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)<(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)AND(vt1.c1)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((+ (vt1.c1)))%(UPPER(DISTINCT vt0.c0))) ORDER BY ((((((((CAST('Y7*Y' AS TEXT))OR(((vt1.c0)LIKE(t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)<(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((t0.c0)AND(vt1.c1)) COLLATE NOCASE FULL OUTER JOIN vt0 ON (((+ (vt1.c1)))%(UPPER(DISTINCT vt0.c0))) WHERE ((- (CASE t0.c0  WHEN vt1.c0 THEN t0.c0 END))) ORDER BY ((((((((CAST('Y7*Y' AS TEXT))OR(((vt1.c0)LIKE(t0.c0)))))AND((vt1.c1 IN (vt0.c1)))))AND(vt0.c0 COLLATE RTRIM)))OR(((t0.c0)<(vt1.c1))));
SELECT ALL * FROM vt0 WHERE (((json_valid(vt0.c1))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(vt0.c1))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((json_valid(vt0.c1))OR(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(vt0.c1))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((json_valid(vt0.c1))OR(x'')));
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1))=((''))) COLLATE BINARY) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))=((''))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1))=((''))) COLLATE BINARY) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1))=((''))) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, vt1 WHERE ((((vt0.c1))=((''))) COLLATE BINARY) ORDER BY (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))) WHERE ((((json_extract(vt1.c0, vt1.c1), ((vt1.c0)GLOB(vt1.c1)), NULL COLLATE BINARY))<>(('1840056106', ((t0.c0) NOTNULL), '-1354301732')))) ORDER BY vt1.c0, (((vt1.c1)) NOT BETWEEN ((NULL)) AND (((((t0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(vt1.c0, vt1.c1), ((vt1.c0)GLOB(vt1.c1)), NULL COLLATE BINARY))<>(('1840056106', ((t0.c0) NOTNULL), '-1354301732')))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY vt1.c0, (((vt1.c1)) NOT BETWEEN ((NULL)) AND (((((t0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) ASC  NULLS FIRST);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))) WHERE ((((json_extract(vt1.c0, vt1.c1), ((vt1.c0)GLOB(vt1.c1)), NULL COLLATE BINARY))<>(('1840056106', ((t0.c0) NOTNULL), '-1354301732')))) ORDER BY vt1.c0, (((vt1.c1)) NOT BETWEEN ((NULL)) AND (((((t0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(vt1.c0, vt1.c1), ((vt1.c0)GLOB(vt1.c1)), NULL COLLATE BINARY))<>(('1840056106', ((t0.c0) NOTNULL), '-1354301732')))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt1.c0))))) ORDER BY vt1.c0, (((vt1.c1)) NOT BETWEEN ((NULL)) AND (((((t0.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((x''))<>((vt0.c0))))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((vt0.c0)/(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x''))!=((vt0.c0))))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0)/(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((x''))<>((vt0.c0))))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((vt0.c0)/(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((x''))!=((vt0.c0))))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((vt0.c0)/(vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE ((((((x''))<>((vt0.c0))))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0))))) ORDER BY ((vt0.c0)/(vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS BLOB))%('62'));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON vt0.c1 ORDER BY ((CAST(t0.c0 AS BLOB))%('62')));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS BLOB))%('62'));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON vt0.c1 ORDER BY ((CAST(t0.c0 AS BLOB))%('62')));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON vt0.c1 WHERE (t0.c0) ORDER BY ((CAST(t0.c0 AS BLOB))%('62'));
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY 'tT5r5~87' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY 'tT5r5~87' DESC  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY 'tT5r5~87' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY 'tT5r5~87' DESC  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY 'tT5r5~87' DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((vt0.c1 COLLATE NOCASE IN (vt1.c0 COLLATE RTRIM)));
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))>(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))>(((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))>(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (((((vt0.c0) NOT NULL))>(((vt0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c1) IS TRUE))AND(vt0.c1 COLLATE BINARY)))OR((vt0.c1 IN ()))))AND((t0.c0 IN ()))))AND(((-1055619305) IS TRUE))) WHERE ((((vt0.c0)) BETWEEN ((((t0.c0)&(vt1.c1)))) AND (((+ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c0)&(vt1.c1)))) AND (((+ (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c1) IS TRUE))AND(vt0.c1 COLLATE BINARY)))OR((vt0.c1 IN ()))))AND((t0.c0 IN ()))))AND(((-1055619305) IS TRUE))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c1) IS TRUE))AND(vt0.c1 COLLATE BINARY)))OR((vt0.c1 IN ()))))AND((t0.c0 IN ()))))AND(((-1055619305) IS TRUE))) WHERE ((((vt0.c0)) BETWEEN ((((t0.c0)&(vt1.c1)))) AND (((+ (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((t0.c0)&(vt1.c1)))) AND (((+ (vt1.c1)))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(vt0.c0 COLLATE RTRIM AS BLOB) RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c1) IS TRUE))AND(vt0.c1 COLLATE BINARY)))OR((vt0.c1 IN ()))))AND((t0.c0 IN ()))))AND(((-1055619305) IS TRUE))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c0)))-(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY (((t0.c0 IN ()))||(((t0.c0)<=(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(t0.c0)))-(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 IN ()))||(((t0.c0)<=(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c0)))-(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY (((t0.c0 IN ()))||(((t0.c0)<=(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(t0.c0)))-(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 IN ()))||(((t0.c0)<=(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c0)))-(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END))) ORDER BY (((t0.c0 IN ()))||(((t0.c0)<=(vt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE x'' END AS BLOB) WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE x'' END AS BLOB) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE x'' END AS BLOB) WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB)) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE x'' END AS BLOB) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON CAST(CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c1 ELSE x'' END AS BLOB) WHERE (CAST(((((((((vt1.c1)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB)) ORDER BY vt0.c0 COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN (((- (t0.c0)))) AND ((UPPER(vt0.c0))))) ORDER BY (((vt1.c0 IN (vt1.c0, t0.c0))) NOT BETWEEN (((((vt1.c1)OR(x'8709')))OR(vt0.c0))) AND (((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((- (t0.c0)))) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c0 IN (vt1.c0, t0.c0))) NOT BETWEEN (((((vt1.c1)OR(x'8709')))OR(vt0.c0))) AND (((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN (((- (t0.c0)))) AND ((UPPER(vt0.c0))))) ORDER BY (((vt1.c0 IN (vt1.c0, t0.c0))) NOT BETWEEN (((((vt1.c1)OR(x'8709')))OR(vt0.c0))) AND (((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((- (t0.c0)))) AND ((UPPER(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY (((vt1.c0 IN (vt1.c0, t0.c0))) NOT BETWEEN (((((vt1.c1)OR(x'8709')))OR(vt0.c0))) AND (((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((((vt0.c1)) BETWEEN (((- (t0.c0)))) AND ((UPPER(vt0.c0))))) ORDER BY (((vt1.c0 IN (vt1.c0, t0.c0))) NOT BETWEEN (((((vt1.c1)OR(x'8709')))OR(vt0.c0))) AND (((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt1 WHERE (((CASE WHEN NULL THEN vt1.c1 END) BETWEEN (((vt1.c1)==(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)), vt1.c1, x''))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END, ((x'')%(vt1.c1)), ((vt1.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN vt1.c1 END) BETWEEN (((vt1.c1)==(vt1.c1))) AND ((((vt1.c1))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)), vt1.c1, x''))<>((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END, ((x'')%(vt1.c1)), ((vt1.c0) NOTNULL)))) DESC);
SELECT * FROM vt1 WHERE (((CASE WHEN NULL THEN vt1.c1 END) BETWEEN (((vt1.c1)==(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)), vt1.c1, x''))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END, ((x'')%(vt1.c1)), ((vt1.c0) NOTNULL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN NULL THEN vt1.c1 END) BETWEEN (((vt1.c1)==(vt1.c1))) AND ((((vt1.c1))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)), vt1.c1, x''))<>((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END, ((x'')%(vt1.c1)), ((vt1.c0) NOTNULL)))) DESC);
SELECT * FROM vt1 WHERE (((CASE WHEN NULL THEN vt1.c1 END) BETWEEN (((vt1.c1)==(vt1.c1))) AND ((((vt1.c1))!=((vt1.c1)))))) ORDER BY (((((((((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)), vt1.c1, x''))!=((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END, ((x'')%(vt1.c1)), ((vt1.c0) NOTNULL)))) DESC;
SELECT ALL * FROM t0, vt1, vt0 WHERE ((+ (CASE t0.c0  WHEN '1309797478' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN '' WHEN t0.c0 THEN vt0.c1 WHEN 1309797478 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c0  WHEN '1309797478' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN '' WHEN t0.c0 THEN vt0.c1 WHEN 1309797478 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((+ (CASE t0.c0  WHEN '1309797478' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN '' WHEN t0.c0 THEN vt0.c1 WHEN 1309797478 THEN t0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c0  WHEN '1309797478' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN '' WHEN t0.c0 THEN vt0.c1 WHEN 1309797478 THEN t0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE ((+ (CASE t0.c0  WHEN '1309797478' THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt1.c1 WHEN vt1.c0 THEN '' WHEN t0.c0 THEN vt0.c1 WHEN 1309797478 THEN t0.c0 ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON LIKELY(0.8848991249922793) WHERE (((NULLIF(vt1.c0, vt0.c0))>=(((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt1.c0, vt0.c0))>=(((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON LIKELY(0.8848991249922793));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON LIKELY(0.8848991249922793) WHERE (((NULLIF(vt1.c0, vt0.c0))>=(((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt1.c0, vt0.c0))>=(((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0))))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON LIKELY(0.8848991249922793));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON LIKELY(0.8848991249922793) WHERE (((NULLIF(vt1.c0, vt0.c0))>=(((vt1.c1) BETWEEN (vt1.c1) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0, t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0, t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0 IN (t0.c0, t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))OR(((((t0.c0)AND(t0.c0)))OR(t0.c0)))));
SELECT * FROM t0, vt1, vt0 WHERE (((((((((vt1.c0)AND(NULL)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(2.8739711E7)))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELY(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(NULL)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(2.8739711E7)))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELY(DISTINCT vt1.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((vt1.c0)AND(NULL)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(2.8739711E7)))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELY(DISTINCT vt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(NULL)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(2.8739711E7)))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELY(DISTINCT vt1.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 NOT INDEXED);
SELECT * FROM t0, vt1, vt0 WHERE (((((((((vt1.c0)AND(NULL)))AND(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(2.8739711E7)))))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(LIKELY(DISTINCT vt1.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=(CAST(t0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (HEX((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((t0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (HEX((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((HEX((t0.c0 IN ()))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (HEX((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((json_remove(vt0.c0, 0.17539884755078305))AND(((vt1.c1)-(vt0.c1)))))AND((- (NULL))))) ORDER BY json_type((+ (0.9426369393863155))) DESC  NULLS FIRST, (NOT (((((vt1.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((json_remove(vt0.c0, 0.17539884755078305))AND(((vt1.c1)-(vt0.c1)))))AND((- (NULL))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY json_type((+ (0.9426369393863155))) DESC  NULLS FIRST, (NOT (((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((json_remove(vt0.c0, 0.17539884755078305))AND(((vt1.c1)-(vt0.c1)))))AND((- (NULL))))) ORDER BY json_type((+ (0.9426369393863155))) DESC  NULLS FIRST, (NOT (((((vt1.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((json_remove(vt0.c0, 0.17539884755078305))AND(((vt1.c1)-(vt0.c1)))))AND((- (NULL))))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY json_type((+ (0.9426369393863155))) DESC  NULLS FIRST, (NOT (((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((json_remove(vt0.c0, 0.17539884755078305))AND(((vt1.c1)-(vt0.c1)))))AND((- (NULL))))) ORDER BY json_type((+ (0.9426369393863155))) DESC  NULLS FIRST, (NOT (((((vt1.c1)OR(vt0.c0)))OR(vt0.c1))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1 IN ()))OR(vt1.c1)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(vt1.c1)))AND(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1 IN ()))OR(vt1.c1)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1 IN ()))OR(vt1.c1)))AND(CAST(vt1.c1 AS INTEGER)))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c1 IN ()))OR(vt1.c1)))AND(CAST(vt1.c1 AS INTEGER))));
SELECT * FROM vt0 CROSS JOIN vt1 ON (((0.10983146339900929, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c1)), ((((vt1.c1)OR(x'5d1f')))AND(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('Lnho'))), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))>((((NULL) BETWEEN (vt1.c0) AND (vt1.c1)), ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN 0.9611375319445236 THEN vt0.c1 WHEN '' THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, 1.99296921E9, json_extract(vt0.c0, t0.c0)))) CROSS JOIN t0 ON CASE WHEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (('-571104365') IS TRUE) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((0.10983146339900929, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c1)), ((((vt1.c1)OR(x'5d1f')))AND(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('Lnho'))), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))>((((NULL) BETWEEN (vt1.c0) AND (vt1.c1)), ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN 0.9611375319445236 THEN vt0.c1 WHEN '' THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, 1.99296921E9, json_extract(vt0.c0, t0.c0)))) CROSS JOIN t0 ON CASE WHEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (('-571104365') IS TRUE) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((0.10983146339900929, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c1)), ((((vt1.c1)OR(x'5d1f')))AND(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('Lnho'))), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))>((((NULL) BETWEEN (vt1.c0) AND (vt1.c1)), ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN 0.9611375319445236 THEN vt0.c1 WHEN '' THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, 1.99296921E9, json_extract(vt0.c0, t0.c0)))) CROSS JOIN t0 ON CASE WHEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (('-571104365') IS TRUE) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (((0.10983146339900929, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c1)), ((((vt1.c1)OR(x'5d1f')))AND(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('Lnho'))), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))>((((NULL) BETWEEN (vt1.c0) AND (vt1.c1)), ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN 0.9611375319445236 THEN vt0.c1 WHEN '' THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, 1.99296921E9, json_extract(vt0.c0, t0.c0)))) CROSS JOIN t0 ON CASE WHEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (('-571104365') IS TRUE) END);
SELECT * FROM vt0 CROSS JOIN vt1 ON (((0.10983146339900929, ((((((((t0.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c1)))AND(vt1.c1)), ((((vt1.c1)OR(x'5d1f')))AND(vt0.c1)), (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('Lnho'))), ((t0.c0) BETWEEN (vt0.c1) AND (t0.c0))))>((((NULL) BETWEEN (vt1.c0) AND (vt1.c1)), ((((((((((((t0.c0)OR(vt0.c1)))AND(t0.c0)))AND(vt0.c1)))AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)), CASE WHEN 0.9611375319445236 THEN vt0.c1 WHEN '' THEN t0.c0 WHEN vt1.c0 THEN t0.c0 END, 1.99296921E9, json_extract(vt0.c0, t0.c0)))) CROSS JOIN t0 ON CASE WHEN ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) THEN CAST(vt0.c1 AS NUMERIC) ELSE (('-571104365') IS TRUE) END WHERE (NULL);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE NOCASE)!=(SQLITE_COMPILEOPTION_USED(vt1.c0))) WHERE (t0.c0) ORDER BY ((((((t0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((t0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE NOCASE)<>(SQLITE_COMPILEOPTION_USED(vt1.c0))) ORDER BY ((((((t0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((t0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE NOCASE)!=(SQLITE_COMPILEOPTION_USED(vt1.c0))) WHERE (t0.c0) ORDER BY ((((((t0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((t0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE NOCASE)<>(SQLITE_COMPILEOPTION_USED(vt1.c0))) ORDER BY ((((((t0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((t0.c0) NOTNULL)))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN t0 ON ((vt1.c0 COLLATE NOCASE)!=(SQLITE_COMPILEOPTION_USED(vt1.c0))) WHERE (t0.c0) ORDER BY ((((((t0.c0)OR(vt1.c1)))AND(vt1.c0)))OR(((t0.c0) NOTNULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN NULL WHEN x'd1b6' THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('GY'))) THEN CASE WHEN vt0.c1 THEN t0.c0 END END WHERE ((+ ((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((NULL)<(vt0.c0)))|(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1))>=((vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN NULL WHEN x'd1b6' THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('GY'))) THEN CASE WHEN vt0.c1 THEN t0.c0 END END ORDER BY ((((NULL)<(vt0.c0)))|(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN NULL WHEN x'd1b6' THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('GY'))) THEN CASE WHEN vt0.c1 THEN t0.c0 END END WHERE ((+ ((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((NULL)<(vt0.c0)))|(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1))>=((vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN NULL WHEN x'd1b6' THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('GY'))) THEN CASE WHEN vt0.c1 THEN t0.c0 END END ORDER BY ((((NULL)<(vt0.c0)))|(t0.c0 COLLATE BINARY))  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON CASE WHEN ((vt0.c1)AND(vt0.c1)) THEN NULL WHEN x'd1b6' THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND (('GY'))) THEN CASE WHEN vt0.c1 THEN t0.c0 END END WHERE ((+ ((((vt0.c1))>=((vt0.c1)))))) ORDER BY ((((NULL)<(vt0.c0)))|(t0.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((x'')OR((((vt1.c0))>=((vt0.c0))))))AND((NOT (vt0.c0))))) ORDER BY CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')OR((((vt1.c0))>=((vt0.c0))))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0 ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((x'')OR((((vt1.c0))>=((vt0.c0))))))AND((NOT (vt0.c0))))) ORDER BY CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((x'')OR((((vt1.c0))>=((vt0.c0))))))AND((NOT (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0 ASC);
SELECT ALL * FROM t0, vt1, vt0 WHERE (((((x'')OR((((vt1.c0))>=((vt0.c0))))))AND((NOT (vt0.c0))))) ORDER BY CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END COLLATE BINARY DESC  NULLS FIRST, vt0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c1))<((x'')))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c1))<((x'')))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c1))<((x'')))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c1))<((x'')))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN ((((vt0.c1))<((x'')))) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((vt0.c0) IS FALSE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_array_length((- (vt0.c0)), (- (t0.c0)))) ORDER BY ((((t0.c0)<=(vt0.c1)))<(CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)), (- (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)<=(vt0.c1)))<(CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_array_length((- (vt0.c0)), (- (t0.c0)))) ORDER BY ((((t0.c0)<=(vt0.c1)))<(CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT SUM(count) FROM (SELECT ((json_array_length((- (vt0.c0)), (- (t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c0)<=(vt0.c1)))<(CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (json_array_length((- (vt0.c0)), (- (t0.c0)))) ORDER BY ((((t0.c0)<=(vt0.c1)))<(CASE WHEN vt0.c0 THEN vt0.c1 END)) ASC;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(''));
SELECT SUM(count) FROM (SELECT ((RTRIM('')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(''));
SELECT SUM(count) FROM (SELECT ((RTRIM('')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (RTRIM(''));
SELECT * FROM vt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (t0.c0)) IN ())) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((+ (t0.c0)) IN ()));
SELECT * FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE FULL OUTER JOIN vt1 ON GLOB((((vt1.c0, vt1.c1, 0.5145037138109998))>=((vt0.c1, vt0.c1, 'CI s<f\]'))), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END) WHERE ((((vt1.c1)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE FULL OUTER JOIN vt1 ON GLOB((((vt1.c0, vt1.c1, 0.5145037138109998))>=((vt0.c1, vt0.c1, 'CI s<f\]'))), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END));
SELECT * FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE FULL OUTER JOIN vt1 ON GLOB((((vt1.c0, vt1.c1, 0.5145037138109998))>=((vt0.c1, vt0.c1, 'CI s<f\]'))), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END) WHERE ((((vt1.c1)%(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)%(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CASE t0.c0  WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END COLLATE NOCASE FULL OUTER JOIN vt1 ON GLOB((((vt1.c0, vt1.c1, 0.5145037138109998))>=((vt0.c1, vt0.c1, 'CI s<f\]'))), CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN t0.c0 END));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(load_extension('28739711'))), ((json_type(t0.c0))<(((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(load_extension('28739711'))), ((json_type(t0.c0))<(((t0.c0) ISNULL))) ASC);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE NOCASE) IS TRUE)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(load_extension('28739711'))), ((json_type(t0.c0))<(((t0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)LIKE(load_extension('28739711'))), ((json_type(t0.c0))<(((t0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((0xffffffff9197b1c5)) AND ((((((vt1.c1)OR(vt1.c0)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((0Xffffffff9197b1c5)) AND ((((((vt1.c1)OR(vt1.c0)))OR(NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((0xffffffff9197b1c5)) AND ((((((vt1.c1)OR(vt1.c0)))OR(NULL))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((0Xffffffff9197b1c5)) AND ((((((vt1.c1)OR(vt1.c0)))OR(NULL)))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((0xffffffff9197b1c5)) AND ((((((vt1.c1)OR(vt1.c0)))OR(NULL))))));
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS NUMERIC))&(CAST(vt0.c1 AS REAL)))) ORDER BY ((((vt1.c0)*(vt0.c1)))IS((((vt1.c1))==((x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))&(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)*(vt0.c1)))IS((((vt1.c1))=((x''))))) DESC);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS NUMERIC))&(CAST(vt0.c1 AS REAL)))) ORDER BY ((((vt1.c0)*(vt0.c1)))IS((((vt1.c1))==((x''))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS NUMERIC))&(CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((vt1.c0)*(vt0.c1)))IS((((vt1.c1))=((x''))))) DESC);
SELECT * FROM vt1, vt0 WHERE (((CAST(vt1.c0 AS NUMERIC))&(CAST(vt0.c1 AS REAL)))) ORDER BY ((((vt1.c0)*(vt0.c1)))IS((((vt1.c1))==((x''))))) DESC;
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))-(CAST(vt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))-(CAST(vt0.c1 AS BLOB))) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))-(CAST(vt0.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))-(CAST(vt0.c1 AS BLOB))) ASC);
SELECT * FROM vt0 NOT INDEXED, vt1 WHERE (vt1.c0) ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))-(CAST(vt0.c1 AS BLOB))) ASC;
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN '239202628' THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '239202628' THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN '239202628' THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN '239202628' THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (CASE WHEN '239202628' THEN CASE vt0.c1  WHEN vt0.c1 THEN vt1.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 END END);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (NULL) ORDER BY (((LIKELIHOOD(vt1.c1, 0.08005224457390192)))<=((x''))) ASC  NULLS LAST, CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c1)) END ASC, CASE ((t0.c0) NOT NULL)  WHEN CASE vt1.c0  WHEN NULL THEN t0.c0 END THEN vt1.c1 WHEN ((((t0.c0)OR(vt1.c0)))OR('0.17539884755078305')) THEN ((vt1.c1)>(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)) ELSE (((0.08585728512761037))<((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (((LIKELIHOOD(vt1.c1, 0.08005224457390192)))<=((x''))) ASC  NULLS LAST, CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c1)) END ASC, CASE ((t0.c0) NOT NULL)  WHEN CASE vt1.c0  WHEN NULL THEN t0.c0 END THEN vt1.c1 WHEN ((((t0.c0)OR(vt1.c0)))OR('0.17539884755078305')) THEN ((vt1.c1)>(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)) ELSE (((0.08585728512761037))<((t0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (NULL) ORDER BY (((LIKELIHOOD(vt1.c1, 0.08005224457390192)))<=((x''))) ASC  NULLS LAST, CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c1)) END ASC, CASE ((t0.c0) NOT NULL)  WHEN CASE vt1.c0  WHEN NULL THEN t0.c0 END THEN vt1.c1 WHEN ((((t0.c0)OR(vt1.c0)))OR('0.17539884755078305')) THEN ((vt1.c1)>(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)) ELSE (((0.08585728512761037))<((t0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (((LIKELIHOOD(vt1.c1, 0.08005224457390192)))<=((x''))) ASC  NULLS LAST, CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c1)) END ASC, CASE ((t0.c0) NOT NULL)  WHEN CASE vt1.c0  WHEN NULL THEN t0.c0 END THEN vt1.c1 WHEN ((((t0.c0)OR(vt1.c0)))OR('0.17539884755078305')) THEN ((vt1.c1)>(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)) ELSE (((0.08585728512761037))<((t0.c0))) END  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, vt1 WHERE (NULL) ORDER BY (((LIKELIHOOD(vt1.c1, 0.08005224457390192)))<=((x''))) ASC  NULLS LAST, CASE WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN (- (vt1.c1)) END ASC, CASE ((t0.c0) NOT NULL)  WHEN CASE vt1.c0  WHEN NULL THEN t0.c0 END THEN vt1.c1 WHEN ((((t0.c0)OR(vt1.c0)))OR('0.17539884755078305')) THEN ((vt1.c1)>(vt1.c1)) WHEN (+ (vt1.c0)) THEN ((((((((vt1.c0)OR(vt1.c1)))OR(t0.c0)))AND(t0.c0)))AND(vt1.c0)) ELSE (((0.08585728512761037))<((t0.c0))) END  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (x'c12b') ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1))  NULLS FIRST, ((((((vt0.c0)AND('420651249')))OR(vt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'c12b') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1))  NULLS FIRST, ((((((vt0.c0)AND('420651249')))OR(vt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (x'c12b') ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1))  NULLS FIRST, ((((((vt0.c0)AND('420651249')))OR(vt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((x'c12b') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1))  NULLS FIRST, ((((((vt0.c0)AND('420651249')))OR(vt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL * FROM t0, vt0 WHERE (x'c12b') ORDER BY ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(t0.c0)))OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND (vt0.c1))  NULLS FIRST, ((((((vt0.c0)AND('420651249')))OR(vt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((((vt0.c0)OR(t0.c0)))OR(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (((((((405809922)OR(t0.c0)))OR(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((405809922)OR(t0.c0)))OR(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((405809922)OR(t0.c0)))OR(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((405809922)OR(t0.c0)))OR(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM t0 WHERE (((((((405809922)OR(t0.c0)))OR(t0.c0)))<<(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY t0.c0 ASC;
SELECT ALL * FROM vt0 WHERE (CASE HEX(vt0.c0)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('veZq*')) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE HEX(vt0.c0)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('veZq*')) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE HEX(vt0.c0)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('veZq*')) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE HEX(vt0.c0)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('veZq*')) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE HEX(vt0.c0)  WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END THEN ((vt0.c0) IS FALSE) WHEN ((vt0.c1) NOT NULL) THEN ((vt0.c1)+(vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND ('veZq*')) THEN vt0.c0 END);
SELECT * FROM vt1, t0, vt0 WHERE (CAST(((((vt1.c1)OR(t0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)OR(t0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (CAST(((((vt1.c1)OR(t0.c0)))AND(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c1)OR(t0.c0)))AND(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (CAST(((((vt1.c1)OR(t0.c0)))AND(vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c0)AND(vt0.c1))) NOTNULL)) ORDER BY (0.8518364408644025 IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (0.8518364408644025 IN ()));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c0)AND(vt0.c1))) NOTNULL)) ORDER BY (0.8518364408644025 IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (0.8518364408644025 IN ()));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (((((t0.c0)AND(vt0.c1))) NOTNULL)) ORDER BY (0.8518364408644025 IN ());
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((vt1.c0) ISNULL) IN (((vt1.c0) NOT BETWEEN ('676237271') AND (vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((NOT (vt0.c0)), ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)), ((vt1.c1)<(vt1.c1)))) AND (((- (0x284e8fd7)), (vt1.c0 IN ()), ((vt0.c0)<<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN (((vt1.c0) NOT BETWEEN ('676237271') AND (vt0.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((NOT (vt0.c0)), ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)), ((vt1.c1)<(vt1.c1)))) AND (((- (0X284e8fd7)), (vt1.c0 IN ()), ((vt0.c0)<<(vt1.c1))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((vt1.c0) ISNULL) IN (((vt1.c0) NOT BETWEEN ('676237271') AND (vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((NOT (vt0.c0)), ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)), ((vt1.c1)<(vt1.c1)))) AND (((- (0x284e8fd7)), (vt1.c0 IN ()), ((vt0.c0)<<(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) ISNULL) IN (((vt1.c0) NOT BETWEEN ('676237271') AND (vt0.c1))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON x'' ORDER BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((NOT (vt0.c0)), ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)), ((vt1.c1)<(vt1.c1)))) AND (((- (0X284e8fd7)), (vt1.c0 IN ()), ((vt0.c0)<<(vt1.c1))))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON x'' WHERE ((((vt1.c0) ISNULL) IN (((vt1.c0) NOT BETWEEN ('676237271') AND (vt0.c1))))) ORDER BY (((vt0.c0, vt1.c1, vt1.c1)) BETWEEN (((NOT (vt0.c0)), ((vt0.c1) BETWEEN (NULL) AND (vt0.c1)), ((vt1.c1)<(vt1.c1)))) AND (((- (0x284e8fd7)), (vt1.c0 IN ()), ((vt0.c0)<<(vt1.c1)))));
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c1)<<(vt0.c1)), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c1)<<(vt0.c1)), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c1)<<(vt0.c1)), ((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c1)<<(vt0.c1)), ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c1)<<(vt0.c1)), ((vt0.c0) ISNULL)));
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN (t0.c0 IN (vt1.c1)) THEN (+ (vt1.c1)) END WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN (t0.c0 IN (vt1.c1)) THEN (+ (vt1.c1)) END);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN (t0.c0 IN (vt1.c1)) THEN (+ (vt1.c1)) END WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN (t0.c0 IN (vt1.c1)) THEN (+ (vt1.c1)) END);
SELECT COUNT(*) FROM t0, vt1 LEFT OUTER JOIN vt0 ON CASE WHEN (t0.c0 IN (vt1.c1)) THEN (+ (vt1.c1)) END WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (-616798847);
SELECT SUM(count) FROM (SELECT ((-616798847) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (-616798847);
SELECT SUM(count) FROM (SELECT ((-616798847) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (-616798847);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt1.c0) ORDER BY (((t0.c0)*(NULL)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (((t0.c0)*(NULL)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt1.c0) ORDER BY (((t0.c0)*(NULL)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0 NOT INDEXED RIGHT OUTER JOIN vt1 ON vt1.c0 ORDER BY (((t0.c0)*(NULL)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON vt1.c0 WHERE (vt1.c0) ORDER BY (((t0.c0)*(NULL)) IN ())  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)%(t0.c0)))<=((~ (t0.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, (+ (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)%(t0.c0)))<=((~ (t0.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, (+ (x''))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)%(t0.c0)))<=((~ (t0.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, (+ (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)%(t0.c0)))<=((~ (t0.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, (+ (x''))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((((t0.c0)%(t0.c0)))<=((~ (t0.c0)))) DESC  NULLS FIRST, x''  NULLS FIRST, (+ (x''))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'eb3f'))))>>(json_object(vt1.c1, vt1.c1)))) ORDER BY t0.c0 ASC  NULLS LAST, ((((((1.840056106E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((vt1.c1)IS NOT(t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'eb3f'))))>>(json_object(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0 ASC  NULLS LAST, ((((((1.840056106E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((vt1.c1)IS NOT(t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'eb3f'))))>>(json_object(vt1.c1, vt1.c1)))) ORDER BY t0.c0 ASC  NULLS LAST, ((((((1.840056106E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((vt1.c1)IS NOT(t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) BETWEEN ((t0.c0)) AND ((x'eb3f'))))>>(json_object(vt1.c1, vt1.c1)))) IS TRUE)  as count FROM t0, vt1 ORDER BY t0.c0 ASC  NULLS LAST, ((((((1.840056106E9)OR(t0.c0)))AND(t0.c0))) BETWEEN (((vt1.c1)IS NOT(t0.c0))) AND (((t0.c0)<(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (LIKELY(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (LIKELY(vt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((LIKELY(vt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL * FROM vt0, vt1, t0 WHERE (LIKELY(vt0.c1 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))!=((t0.c0))) COLLATE BINARY) ORDER BY (((t0.c0)>>(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0))<>((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>>(t0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))!=((t0.c0))) COLLATE BINARY) ORDER BY (((t0.c0)>>(t0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0))<>((t0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>>(t0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0))!=((t0.c0))) COLLATE BINARY) ORDER BY (((t0.c0)>>(t0.c0)) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON NULL WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)OR((+ ('-511578512')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)OR((+ ('-511578512'))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON NULL WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)OR((+ ('-511578512')))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 END)OR((+ ('-511578512'))))) IS TRUE)  as count FROM vt1, t0 INNER JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM vt1, t0 INNER JOIN vt0 ON NULL WHERE (((CASE WHEN t0.c0 THEN t0.c0 END)OR((+ ('-511578512')))));
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (+ (0.41393910124952416)) WHERE (((TRIM(vt1.c0)) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)<=(vt0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0)) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (+ (0.41393910124952416)) ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (+ (0.41393910124952416)) WHERE (((TRIM(vt1.c0)) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)<=(vt0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(vt1.c0)) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (+ (0.41393910124952416)) ORDER BY vt0.c1);
SELECT ALL COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (+ (0.41393910124952416)) WHERE (((TRIM(vt1.c0)) BETWEEN (TYPEOF(vt1.c1)) AND (((vt1.c1)<=(vt0.c0))))) ORDER BY vt0.c1;
SELECT COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (- (t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'xb )d뮡' END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'xb )d뮡' END) NOTNULL) ASC);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (- (t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'xb )d뮡' END) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t0.c0)))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'xb )d뮡' END) NOTNULL) ASC);
SELECT COUNT(*) FROM t0 WHERE (LIKELY(DISTINCT (- (t0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE 'xb )d뮡' END) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('' AS BLOB)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)/(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)/(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('' AS BLOB)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)/(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('' AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)/(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CAST('' AS BLOB)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)/(t0.c0 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST((((t0.c0))==((vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0))=((vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST((((t0.c0))==((vt0.c1))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0))=((vt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (CAST((((t0.c0))==((vt0.c1))) AS NUMERIC));
SELECT COUNT(*) FROM vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY (vt1.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY (vt1.c1 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()));
SELECT COUNT(*) FROM vt1 WHERE ((~ (LAST_INSERT_ROWID()))) ORDER BY (vt1.c1 IN ());
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)AND(vt0.c0)), 0.8115719961529488);
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)AND(vt0.c0)), 0.8115719961529488));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)AND(vt0.c0)), 0.8115719961529488);
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)AND(vt0.c0)), 0.8115719961529488));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((NULL) NOT BETWEEN (vt0.c1) AND (vt1.c0))))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1)AND(vt0.c0)), 0.8115719961529488);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((4.20651249E8) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) ORDER BY LIKELY(((((vt1.c1)OR(vt1.c0)))OR(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((4.20651249E8) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELY(((((vt1.c1)OR(vt1.c0)))OR(x''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((4.20651249E8) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) ORDER BY LIKELY(((((vt1.c1)OR(vt1.c0)))OR(x''))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((4.20651249E8) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY LIKELY(((((vt1.c1)OR(vt1.c0)))OR(x''))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((((((4.20651249E8) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(((vt0.c1) IS FALSE)))) ORDER BY LIKELY(((((vt1.c1)OR(vt1.c0)))OR(x''))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), vt0.c0, ((vt0.c1)|(vt0.c1)), (((vt0.c1))>((vt0.c1)))))>=((((((vt0.c0)AND(NULL)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0) ISNULL), ((0.2924727226266659) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), vt0.c0, ((vt0.c1)|(vt0.c1)), (((vt0.c1))>((vt0.c1)))))>=((((((vt0.c0)AND(NULL)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0) ISNULL), ((0.2924727226266659) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), vt0.c0, ((vt0.c1)|(vt0.c1)), (((vt0.c1))>((vt0.c1)))))>=((((((vt0.c0)AND(NULL)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0) ISNULL), ((0.2924727226266659) ISNULL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), vt0.c0, ((vt0.c1)|(vt0.c1)), (((vt0.c1))>((vt0.c1)))))>=((((((vt0.c0)AND(NULL)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0) ISNULL), ((0.2924727226266659) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c0 AS BLOB), ((vt0.c0) ISNULL), vt0.c0, ((vt0.c1)|(vt0.c1)), (((vt0.c1))>((vt0.c1)))))>=((((((vt0.c0)AND(NULL)))OR(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)), vt0.c0 COLLATE RTRIM, ((vt0.c0) ISNULL), ((0.2924727226266659) ISNULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0)|(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'8bf2' END)));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(((vt1.c0)|(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'8bf2' END))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0)|(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'8bf2' END)));
SELECT SUM(count) FROM (SELECT (((((((~ (vt1.c0)))OR(((vt1.c0)|(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'8bf2' END))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((((~ (vt1.c0)))OR(((vt1.c0)|(vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'8bf2' END)));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (+ ((((vt1.c1))<>((t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((vt1.c1))!=((t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (+ ((((vt1.c1))<>((t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ ((((vt1.c1))!=((t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL) ORDER BY (+ ((((vt1.c1))<>((t0.c0))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((vt0.c0)/(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '<k2>sX' WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(x'')))OR(vt0.c0))) AND ((('')==(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '<k2>sX' WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(x'')))OR(vt0.c0))) AND ((('')==(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((vt0.c0)/(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '<k2>sX' WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(x'')))OR(vt0.c0))) AND ((('')==(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '<k2>sX' WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(x'')))OR(vt0.c0))) AND ((('')==(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) BETWEEN (vt0.c1) AND (((vt0.c0)/(vt0.c0))))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '<k2>sX' WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((((vt0.c0)OR(x'')))OR(vt0.c0))) AND ((('')==(vt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)=('-1677613967')) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((((t0.c0))>=((t0.c0)))) NOT BETWEEN (-1369130079) AND (((((']齾')OR(t0.c0)))OR('174883737')))) ASC, 0.761560760521784 DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)==('-1677613967')) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))>=((t0.c0)))) NOT BETWEEN (-1369130079) AND (((((']齾')OR(t0.c0)))OR('174883737')))) ASC, 0.761560760521784 DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)=('-1677613967')) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((((t0.c0))>=((t0.c0)))) NOT BETWEEN (-1369130079) AND (((((']齾')OR(t0.c0)))OR('174883737')))) ASC, 0.761560760521784 DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c0)==('-1677613967')) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))>=((t0.c0)))) NOT BETWEEN (-1369130079) AND (((((']齾')OR(t0.c0)))OR('174883737')))) ASC, 0.761560760521784 DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)=('-1677613967')) THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) ELSE CASE WHEN t0.c0 THEN t0.c0 END END) ORDER BY (((((t0.c0))>=((t0.c0)))) NOT BETWEEN (-1369130079) AND (((((']齾')OR(t0.c0)))OR('174883737')))) ASC, 0.761560760521784 DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (0.7093539989441893) ORDER BY ((json_remove(vt0.c1, t0.c0))%(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.7093539989441893) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_remove(vt0.c1, t0.c0))%(((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (0.7093539989441893) ORDER BY ((json_remove(vt0.c1, t0.c0))%(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.7093539989441893) IS TRUE)  as count FROM t0, vt0 ORDER BY ((json_remove(vt0.c1, t0.c0))%(((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (0.7093539989441893) ORDER BY ((json_remove(vt0.c1, t0.c0))%(((((vt0.c0)AND(vt0.c1)))OR(t0.c0))));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((- (((vt1.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((- (((vt1.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)%(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((- (((vt1.c0)%(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (('808353628') BETWEEN (vt1.c0) AND (vt1.c1)) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6409062563132163) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('808353628') BETWEEN (vt1.c0) AND (vt1.c1)) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6409062563132163) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (('808353628') BETWEEN (vt1.c0) AND (vt1.c1)) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6409062563132163) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (('808353628') BETWEEN (vt1.c0) AND (vt1.c1)) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6409062563132163) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN (('808353628') BETWEEN (vt1.c0) AND (vt1.c1)) THEN LIKELIHOOD(DISTINCT vt1.c0, 0.6409062563132163) WHEN vt0.c1 COLLATE NOCASE THEN ((vt0.c1) NOT NULL) WHEN ((vt0.c0)=(vt0.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE ((((vt1.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (- (t0.c0)) END) ORDER BY (~ ('7z')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (~ ('7z')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (- (t0.c0)) END) ORDER BY (~ ('7z')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (- (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (~ ('7z')) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN (- (t0.c0)) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE (- (t0.c0)) END) ORDER BY (~ ('7z')) DESC  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c1)&(vt1.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c1)&(vt1.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c1)&(vt1.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c1)&(vt1.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)) IN (((((((((vt1.c1)AND(vt1.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))))) ORDER BY CASE WHEN vt0.c0 COLLATE BINARY THEN ((vt1.c1)&(vt1.c0)) ELSE vt0.c1 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1697269816265755);
SELECT SUM(count) FROM (SELECT ALL ((0.1697269816265755) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1697269816265755);
SELECT SUM(count) FROM (SELECT ALL ((0.1697269816265755) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE (0.1697269816265755);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<>(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((vt1.c0)<>(vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NULL IN (vt0.c1)) WHERE (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=(((((vt0.c1)) BETWEEN ((t0.c0)) AND ((NULL))))))) ORDER BY ((((x'a5fa') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(((((vt0.c1)) BETWEEN ((t0.c0)) AND ((NULL))))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (NULL IN (vt0.c1)) ORDER BY ((((x'a5fa') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NULL IN (vt0.c1)) WHERE (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=(((((vt0.c1)) BETWEEN ((t0.c0)) AND ((NULL))))))) ORDER BY ((((x'a5fa') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))==(((((vt0.c1)) BETWEEN ((t0.c0)) AND ((NULL))))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (NULL IN (vt0.c1)) ORDER BY ((((x'a5fa') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (NULL IN (vt0.c1)) WHERE (((((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))=(((((vt0.c1)) BETWEEN ((t0.c0)) AND ((NULL))))))) ORDER BY ((((x'a5fa') BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, t0 WHERE ('9bwz');
SELECT SUM(count) FROM (SELECT (('9bwz') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ('9bwz');
SELECT SUM(count) FROM (SELECT (('9bwz') IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ('9bwz');
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0))==((t0.c0, vt1.c1, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt0.c0))=((t0.c0, vt1.c1, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0))==((t0.c0, vt1.c1, vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, vt0.c0))=((t0.c0, vt1.c1, vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt1.c0, vt0.c0, vt0.c0))==((t0.c0, vt1.c1, vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN vt1.c1 THEN ((vt1.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN MIN(t0.c0, t0.c0) WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS BLOB) ELSE ((vt0.c0)AND(0.9426369393863155)) END) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN ((vt1.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN MIN(t0.c0, t0.c0) WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS BLOB) ELSE ((vt0.c0)AND(0.9426369393863155)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN vt1.c1 THEN ((vt1.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN MIN(t0.c0, t0.c0) WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS BLOB) ELSE ((vt0.c0)AND(0.9426369393863155)) END) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c1 THEN ((vt1.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN MIN(t0.c0, t0.c0) WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS BLOB) ELSE ((vt0.c0)AND(0.9426369393863155)) END) IS TRUE)  as count FROM vt0, t0 NATURAL JOIN vt1 ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN vt1 WHERE (CASE WHEN vt1.c1 THEN ((vt1.c1)*(vt0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN MIN(t0.c0, t0.c0) WHEN CAST(vt0.c1 AS INTEGER) THEN CAST(vt0.c1 AS BLOB) ELSE ((vt0.c0)AND(0.9426369393863155)) END) ORDER BY ((vt0.c1) ISNULL) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE WHEN (- (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE WHEN (- (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (- (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (CASE WHEN (- (vt1.c0)) THEN CAST(vt0.c0 AS REAL) END);
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c1))<=((CAST(vt1.c1 AS NUMERIC))))) ORDER BY ((((vt1.c1)!=(vt1.c1))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0))) AND (CASE WHEN vt1.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))<=((CAST(vt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c1)<>(vt1.c1))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0))) AND (CASE WHEN vt1.c0 THEN t0.c0 END)));
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c1))<=((CAST(vt1.c1 AS NUMERIC))))) ORDER BY ((((vt1.c1)!=(vt1.c1))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0))) AND (CASE WHEN vt1.c0 THEN t0.c0 END));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1))<=((CAST(vt1.c1 AS NUMERIC))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((((vt1.c1)<>(vt1.c1))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0))) AND (CASE WHEN vt1.c0 THEN t0.c0 END)));
SELECT ALL * FROM vt1, t0 WHERE ((((vt1.c1))<=((CAST(vt1.c1 AS NUMERIC))))) ORDER BY ((((vt1.c1)!=(vt1.c1))) BETWEEN (((((((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))OR(t0.c0))) AND (CASE WHEN vt1.c0 THEN t0.c0 END));
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (('949788542')>(t0.c0)) THEN ((t0.c0)*(t0.c0)) END) ORDER BY ((NULL) IS FALSE) COLLATE RTRIM, t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (('949788542')>(t0.c0)) THEN ((t0.c0)*(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((NULL) IS FALSE) COLLATE RTRIM, t0.c0);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (('949788542')>(t0.c0)) THEN ((t0.c0)*(t0.c0)) END) ORDER BY ((NULL) IS FALSE) COLLATE RTRIM, t0.c0;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (('949788542')>(t0.c0)) THEN ((t0.c0)*(t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY ((NULL) IS FALSE) COLLATE RTRIM, t0.c0);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (('949788542')>(t0.c0)) THEN ((t0.c0)*(t0.c0)) END) ORDER BY ((NULL) IS FALSE) COLLATE RTRIM, t0.c0;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED, vt0 WHERE ((~ (((vt0.c1)<<(vt0.c1)))));
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) LEFT OUTER JOIN t0 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) LEFT OUTER JOIN t0 ON NULL);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) LEFT OUTER JOIN t0 ON NULL WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) LEFT OUTER JOIN t0 ON NULL);
SELECT COUNT(*) FROM vt1 INNER JOIN vt0 ON (+ ((((t0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))) LEFT OUTER JOIN t0 ON NULL WHERE (NULL);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND ('-1185684777'))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND ('-1185684777'))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND ('-1185684777'))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND ('-1185684777'))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND ('-1185684777'))) AND (((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt1, t0 WHERE (((((vt1.c0 IN ())))>((((x'aa6f') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>((((x'aa6f') NOT NULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0 IN ())))>((((x'aa6f') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ())))>((((x'aa6f') NOT NULL))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (((((vt1.c0 IN ())))>((((x'aa6f') NOT NULL)))));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (IFNULL(vt1.c0, vt0.c0)) AND (((t0.c0)||('-129335064')))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (IFNULL(vt1.c0, vt0.c0)) AND (((t0.c0)||('-129335064'))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (IFNULL(vt1.c0, vt0.c0)) AND (((t0.c0)||('-129335064')))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c0))) BETWEEN (IFNULL(vt1.c0, vt0.c0)) AND (((t0.c0)||('-129335064'))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((t0.c0 IN (t0.c0))) BETWEEN (IFNULL(vt1.c0, vt0.c0)) AND (((t0.c0)||('-129335064')))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON x'42f4' CROSS JOIN t0 ON ABS(DISTINCT ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON x'42f4' CROSS JOIN t0 ON ABS(DISTINCT ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON x'42f4' CROSS JOIN t0 ON ABS(DISTINCT ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON x'42f4' CROSS JOIN t0 ON ABS(DISTINCT ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt1 ON x'42f4' CROSS JOIN t0 ON ABS(DISTINCT ((vt1.c1) BETWEEN (t0.c0) AND (t0.c0))) WHERE ((+ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1)))+(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))+(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1)))+(((vt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1)))+(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((NOT (vt0.c1)))+(((vt0.c1) ISNULL))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt1.c0)) IN ())) ORDER BY ((((vt0.c0)<(t0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)<(t0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt1.c0)) IN ())) ORDER BY ((((vt0.c0)<(t0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt0.c0)<(t0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) ISNULL))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt1.c0)) IN ())) ORDER BY ((((vt0.c0)<(t0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((0.9973439689396809)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((0.9973439689396809)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((0.9973439689396809)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY (((0.9973439689396809)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY (((0.9973439689396809)) BETWEEN ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))) AND ((((((vt1.c0)OR(vt1.c0)))AND(vt1.c1))))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) IS FALSE)) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(t0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) IS FALSE)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(t0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) IS FALSE)) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(t0.c0)) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) IS FALSE)) IS TRUE)  as count FROM vt1, t0 ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(t0.c0)) AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END) IS FALSE)) ORDER BY CAST(((((vt1.c1)OR(vt1.c1)))OR(t0.c0)) AS BLOB) DESC;
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((vt1.c0))=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))==((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((vt1.c0))=((vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0))==((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CAST((((vt1.c0))=((vt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((((vt1.c1) NOTNULL)) NOT BETWEEN (JULIANDAY(vt0.c1, vt1.c0, vt1.c1)) AND (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL)) NOT BETWEEN (JULIANDAY(vt0.c1, vt1.c0, vt1.c1)) AND (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((((vt1.c1) NOTNULL)) NOT BETWEEN (JULIANDAY(vt0.c1, vt1.c0, vt1.c1)) AND (CAST(NULL AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOTNULL)) NOT BETWEEN (JULIANDAY(vt0.c1, vt1.c0, vt1.c1)) AND (CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE NOCASE WHERE (((((vt1.c1) NOTNULL)) NOT BETWEEN (JULIANDAY(vt0.c1, vt1.c0, vt1.c1)) AND (CAST(NULL AS INTEGER))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c0)) DESC, ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(((vt1.c0)<(NULL)))))AND((((vt0.c1, vt0.c1, vt0.c0))>((t0.c0, x'', vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0 ORDER BY ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c0)) DESC, ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(((vt1.c0)<(NULL)))))AND((((vt0.c1, vt0.c1, vt0.c0))>((t0.c0, x'', vt1.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c0)) DESC, ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(((vt1.c0)<(NULL)))))AND((((vt0.c1, vt0.c1, vt0.c0))>((t0.c0, x'', vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt1 NOT INDEXED, t0, vt0 ORDER BY ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c0)) DESC, ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(((vt1.c0)<(NULL)))))AND((((vt0.c1, vt0.c1, vt0.c0))>((t0.c0, x'', vt1.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE RTRIM) ORDER BY ((((((vt1.c1)AND(vt0.c0)))AND(vt0.c0)))LIKE(vt1.c0)) DESC, ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND(((vt1.c0)<(NULL)))))AND((((vt0.c1, vt0.c1, vt0.c0))>((t0.c0, x'', vt1.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))  WHEN ABS(vt1.c0) THEN '1992969210' ELSE (vt0.c0 IN (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))  WHEN ABS(vt1.c0) THEN '1992969210' ELSE (vt0.c0 IN (vt1.c0)) END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))  WHEN ABS(vt1.c0) THEN '1992969210' ELSE (vt0.c0 IN (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))  WHEN ABS(vt1.c0) THEN '1992969210' ELSE (vt0.c0 IN (vt1.c0)) END);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY CASE ((((vt0.c1)AND(vt0.c0)))AND(vt1.c1))  WHEN ABS(vt1.c0) THEN '1992969210' ELSE (vt0.c0 IN (vt1.c0)) END;
SELECT ALL * FROM t0 WHERE ((((CAST(x'10d2' AS NUMERIC)))>=((COALESCE(t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(x'10d2' AS NUMERIC)))>=((COALESCE(t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CAST(x'10d2' AS NUMERIC)))>=((COALESCE(t0.c0, t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((CAST(x'10d2' AS NUMERIC)))>=((COALESCE(t0.c0, t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((CAST(x'10d2' AS NUMERIC)))>=((COALESCE(t0.c0, t0.c0)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((NULL, t0.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c0))) IN ()));
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((((((-1.7976931348623157E308)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(((vt1.c1)|(vt1.c0)))))OR(((t0.c0)!=(t0.c0))))) ORDER BY ((((((((((t0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(t0.c0)))AND(vt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((-1.7976931348623157E308)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(((vt1.c1)|(vt1.c0)))))OR(((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON vt1.c0 ORDER BY ((((((((((t0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(t0.c0)))AND(vt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((((((-1.7976931348623157E308)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(((vt1.c1)|(vt1.c0)))))OR(((t0.c0)!=(t0.c0))))) ORDER BY ((((((((((t0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(t0.c0)))AND(vt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((((((-1.7976931348623157E308)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(((vt1.c1)|(vt1.c0)))))OR(((t0.c0)<>(t0.c0))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON vt1.c0 ORDER BY ((((((((((t0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(t0.c0)))AND(vt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt1.c0 WHERE ((((((((-1.7976931348623157E308)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))))AND(((vt1.c1)|(vt1.c0)))))OR(((t0.c0)!=(t0.c0))))) ORDER BY ((((((((((t0.c0)AND(vt0.c1)))AND(vt1.c0)))OR(t0.c0)))AND(vt0.c1))) ISNULL) ASC;
SELECT * FROM vt1 CROSS JOIN vt0 ON ((LOWER(vt1.c1))+((vt0.c1 IN (vt0.c0)))) WHERE (NULLIF(DISTINCT NULL, ((vt0.c0) ISNULL))) ORDER BY ((((vt1.c1)LIKE(vt0.c1)))==(((vt1.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((LOWER(vt1.c1))+((vt0.c1 IN (vt0.c0)))) ORDER BY ((((vt1.c1)LIKE(vt0.c1)))==(((vt1.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((LOWER(vt1.c1))+((vt0.c1 IN (vt0.c0)))) WHERE (NULLIF(DISTINCT NULL, ((vt0.c0) ISNULL))) ORDER BY ((((vt1.c1)LIKE(vt0.c1)))==(((vt1.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT NULL, ((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON ((LOWER(vt1.c1))+((vt0.c1 IN (vt0.c0)))) ORDER BY ((((vt1.c1)LIKE(vt0.c1)))==(((vt1.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST);
SELECT * FROM vt1 CROSS JOIN vt0 ON ((LOWER(vt1.c1))+((vt0.c1 IN (vt0.c0)))) WHERE (NULLIF(DISTINCT NULL, ((vt0.c0) ISNULL))) ORDER BY ((((vt1.c1)LIKE(vt0.c1)))==(((vt1.c1)IS NOT(vt1.c1)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))<>(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))!=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))<>(((+ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))!=(((+ (vt0.c0)))))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB));
SELECT ALL * FROM vt1 CROSS JOIN vt0 ON CAST(CAST(vt0.c0 AS BLOB) AS BLOB) WHERE ((((CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 END))<>(((+ (vt0.c0))))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST((- (vt0.c1)) AS REAL)) ORDER BY (((~ (vt1.c0)))||(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((~ (vt1.c0)))||(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST((- (vt0.c1)) AS REAL)) ORDER BY (((~ (vt1.c0)))||(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((~ (vt1.c0)))||(CAST(vt0.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE (CAST((- (vt0.c1)) AS REAL)) ORDER BY (((~ (vt1.c0)))||(CAST(vt0.c0 AS NUMERIC))) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) NOTNULL)))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) ORDER BY CASE WHEN JULIANDAY(t0.c0, NULL, vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE LIKELIHOOD(vt0.c1, 0.7027309792329985) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN JULIANDAY(t0.c0, NULL, vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE LIKELIHOOD(vt0.c1, 0.7027309792329985) END);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) ORDER BY CASE WHEN JULIANDAY(t0.c0, NULL, vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE LIKELIHOOD(vt0.c1, 0.7027309792329985) END;
SELECT SUM(count) FROM (SELECT ((TYPEOF(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN JULIANDAY(t0.c0, NULL, vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE LIKELIHOOD(vt0.c1, 0.7027309792329985) END);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) ORDER BY CASE WHEN JULIANDAY(t0.c0, NULL, vt0.c0) THEN ((vt0.c0) IS TRUE) ELSE LIKELIHOOD(vt0.c1, 0.7027309792329985) END;
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1 IN ())))<((CAST('-1753326549' AS REAL))))) ORDER BY ((CAST(vt1.c1 AS TEXT))|((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN ())))<((CAST('-1753326549' AS REAL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c1 AS TEXT))|((vt0.c0 IN ()))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1 IN ())))<((CAST('-1753326549' AS REAL))))) ORDER BY ((CAST(vt1.c1 AS TEXT))|((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1 IN ())))<((CAST('-1753326549' AS REAL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((CAST(vt1.c1 AS TEXT))|((vt0.c0 IN ()))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt1.c1 IN ())))<((CAST('-1753326549' AS REAL))))) ORDER BY ((CAST(vt1.c1 AS TEXT))|((vt0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((((vt1.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(((t0.c0)>(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0, ((('a%'))==((((vt1.c0)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(((t0.c0)>(vt1.c0)))) ORDER BY vt1.c0, ((('a%'))=((((vt1.c0)>(vt1.c1))))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((((vt1.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(((t0.c0)>(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0, ((('a%'))==((((vt1.c0)>(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((vt1.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(((t0.c0)>(vt1.c0)))) ORDER BY vt1.c0, ((('a%'))=((((vt1.c0)>(vt1.c1))))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((((vt1.c1) IS FALSE))OR(vt1.c0 COLLATE BINARY)))AND(((t0.c0)>(vt1.c0)))) WHERE (t0.c0) ORDER BY vt1.c0, ((('a%'))==((((vt1.c0)>(vt1.c1)))));
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c0)<>(vt1.c0)) THEN ABS(vt0.c0) END WHERE ((((vt1.c0)) NOT BETWEEN (('-1055619305')) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('-1055619305')) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c0)<>(vt1.c0)) THEN ABS(vt0.c0) END);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c0)<>(vt1.c0)) THEN ABS(vt0.c0) END WHERE ((((vt1.c0)) NOT BETWEEN (('-1055619305')) AND ((vt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (('-1055619305')) AND ((vt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c0)<>(vt1.c0)) THEN ABS(vt0.c0) END);
SELECT ALL * FROM vt1, vt0 LEFT OUTER JOIN t0 ON CASE NULL  WHEN ((t0.c0)<>(vt1.c0)) THEN ABS(vt0.c0) END WHERE ((((vt1.c0)) NOT BETWEEN (('-1055619305')) AND ((vt1.c0 COLLATE RTRIM))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)||(vt0.c1))) IS TRUE) WHERE ((- (json_quote(vt0.c1)))) ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL END IN (CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (json_quote(vt0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0)||(vt0.c1))) IS TRUE) ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL END IN (CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)||(vt0.c1))) IS TRUE) WHERE ((- (json_quote(vt0.c1)))) ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL END IN (CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (json_quote(vt0.c1)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((t0.c0)||(vt0.c1))) IS TRUE) ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL END IN (CAST(vt0.c1 AS NUMERIC))) ASC);
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((t0.c0)||(vt0.c1))) IS TRUE) WHERE ((- (json_quote(vt0.c1)))) ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (CASE NULL  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN NULL END IN (CAST(vt0.c1 AS NUMERIC))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((t0.c0 IN ()))OR(json_array_length(t0.c0, t0.c0))))OR((NOT (vt1.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt1.c0) BETWEEN (x'') AND (t0.c0)))) INNER JOIN vt1 ON t0.c0 COLLATE BINARY WHERE (LIKELY(DISTINCT ((vt1.c1)IS(vt0.c0)))) ORDER BY (((t0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c1)=(vt0.c1)), (t0.c0 IN ()), ((vt0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((((((vt1.c0)OR('721487279')))AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)), CASE vt1.c1  WHEN t0.c0 THEN 0.5152568663847363 ELSE vt0.c0 END, ((vt1.c1) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt1.c1)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((t0.c0 IN ()))OR(json_array_length(t0.c0, t0.c0))))OR((NOT (vt1.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt1.c0) BETWEEN (x'') AND (t0.c0)))) INNER JOIN vt1 ON t0.c0 COLLATE BINARY ORDER BY (((t0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c1)==(vt0.c1)), (t0.c0 IN ()), ((vt0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((((((vt1.c0)OR('721487279')))AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)), CASE vt1.c1  WHEN t0.c0 THEN 0.5152568663847363 ELSE vt0.c0 END, ((vt1.c1) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((((((t0.c0 IN ()))OR(json_array_length(t0.c0, t0.c0))))OR((NOT (vt1.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt1.c0) BETWEEN (x'') AND (t0.c0)))) INNER JOIN vt1 ON t0.c0 COLLATE BINARY WHERE (LIKELY(DISTINCT ((vt1.c1)IS(vt0.c0)))) ORDER BY (((t0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c1)=(vt0.c1)), (t0.c0 IN ()), ((vt0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((((((vt1.c0)OR('721487279')))AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)), CASE vt1.c1  WHEN t0.c0 THEN 0.5152568663847363 ELSE vt0.c0 END, ((vt1.c1) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((vt1.c1)IS(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((((((((t0.c0 IN ()))OR(json_array_length(t0.c0, t0.c0))))OR((NOT (vt1.c1)))))OR(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)))OR(((vt1.c0) BETWEEN (x'') AND (t0.c0)))) INNER JOIN vt1 ON t0.c0 COLLATE BINARY ORDER BY (((t0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c1)) NOT BETWEEN ((((((t0.c0)OR(t0.c0)))OR(vt1.c0)), ((vt1.c0) ISNULL), ((vt1.c1)==(vt0.c1)), (t0.c0 IN ()), ((vt0.c0) ISNULL))) AND ((((vt0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)), ((((((((vt1.c0)OR('721487279')))AND(t0.c0)))OR(vt1.c0)))AND(t0.c0)), CASE vt1.c1  WHEN t0.c0 THEN 0.5152568663847363 ELSE vt0.c0 END, ((vt1.c1) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c0 END))));
SELECT * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, 0.5242761638293582, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))))|(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, 0.5242761638293582, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))))|(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, 0.5242761638293582, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))))|(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((((t0.c0, 0.5242761638293582, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))))|(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0, 0.5242761638293582, vt1.c0)) NOT BETWEEN ((t0.c0, t0.c0, vt1.c0)) AND ((t0.c0, vt1.c0, vt1.c0))))|(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))||(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))||(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))||(((vt0.c0)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c1)))||(((vt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1)))||(((vt0.c0)IS NOT(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND ((((vt1.c1))<((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND ((((vt1.c1))<((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND ((((vt1.c1))<((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND ((((vt1.c1))<((vt1.c1)))))) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND ((((vt1.c1))<((vt1.c1))))));
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (vt1.c0)));
SELECT SUM(count) FROM (SELECT (((- (vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE ((- (vt1.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)LIKE(0.4382355577803356)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)LIKE(0.4382355577803356))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)LIKE(0.4382355577803356)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)LIKE(0.4382355577803356))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) NOT BETWEEN (t0.c0 COLLATE RTRIM) AND (((t0.c0)LIKE(0.4382355577803356)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((0Xffffffffe06b55c1) NOT NULL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '28739711' END)))) ORDER BY PRINTF(((vt0.c0)||(0.18694990323364902))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((0Xffffffffe06b55c1) NOT NULL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '28739711' END)))) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(((vt0.c0)||(0.18694990323364902))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((0Xffffffffe06b55c1) NOT NULL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '28739711' END)))) ORDER BY PRINTF(((vt0.c0)||(0.18694990323364902))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((0Xffffffffe06b55c1) NOT NULL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '28739711' END)))) IS TRUE)  as count FROM vt0 ORDER BY PRINTF(((vt0.c0)||(0.18694990323364902))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) BETWEEN ((((0Xffffffffe06b55c1) NOT NULL))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE '28739711' END)))) ORDER BY PRINTF(((vt0.c0)||(0.18694990323364902))) ASC  NULLS FIRST, ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)IS NOT(vt0.c0))))<((vt0.c1))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)IS NOT(vt0.c0))))<((vt0.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)IS NOT(vt0.c0))))<((vt0.c1))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)IS NOT(vt0.c0))))<((vt0.c1))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((((vt0.c0)IS NOT(vt0.c0))))<((vt0.c1))) WHERE (vt0.c1);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ())) ORDER BY (~ (vt1.c1)), (JULIANDAY(vt1.c0, vt1.c1, vt1.c1) IN (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(0.6501286023850894)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)), (JULIANDAY(vt1.c0, vt1.c1, vt1.c1) IN (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(0.6501286023850894)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ())) ORDER BY (~ (vt1.c1)), (JULIANDAY(vt1.c0, vt1.c1, vt1.c1) IN (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(0.6501286023850894)))OR(vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (~ (vt1.c1)), (JULIANDAY(vt1.c0, vt1.c1, vt1.c1) IN (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(0.6501286023850894)))OR(vt1.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((CAST(vt1.c0 AS REAL) IN ())) ORDER BY (~ (vt1.c1)), (JULIANDAY(vt1.c0, vt1.c1, vt1.c1) IN (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))OR(0.6501286023850894)))OR(vt1.c0))))  NULLS FIRST;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1))<((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1))<((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1))<((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((vt0.c1))<((((((vt0.c0)OR(vt1.c1)))AND(vt1.c0))))));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((t0.c0) NOT NULL))!=('*-ܪ H7' COLLATE BINARY)) WHERE (((((((t0.c0)!=(vt1.c1)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<>(vt1.c1)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0) NOT NULL))!=('*-ܪ H7' COLLATE BINARY)));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((t0.c0) NOT NULL))!=('*-ܪ H7' COLLATE BINARY)) WHERE (((((((t0.c0)!=(vt1.c1)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)<>(vt1.c1)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((vt1.c0 IN ())))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0) NOT NULL))!=('*-ܪ H7' COLLATE BINARY)));
SELECT * FROM t0 CROSS JOIN vt1 ON ((((t0.c0) NOT NULL))!=('*-ܪ H7' COLLATE BINARY)) WHERE (((((((t0.c0)!=(vt1.c1)))OR(((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)))))AND((vt1.c0 IN ()))));
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0Xffffffffc6ac03ce WHERE (((0.32088238203639086) BETWEEN (((vt1.c0)*(vt1.c1))) AND (NULLIF(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (NULLIF(vt1.c0, vt1.c0) IN ('225702623'));
SELECT SUM(count) FROM (SELECT ((((0.32088238203639086) BETWEEN (((vt1.c0)*(vt1.c1))) AND (NULLIF(DISTINCT vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 RIGHT OUTER JOIN vt0 ON 0xffffffffc6ac03ce ORDER BY (NULLIF(vt1.c0, vt1.c0) IN ('225702623')));
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0Xffffffffc6ac03ce WHERE (((0.32088238203639086) BETWEEN (((vt1.c0)*(vt1.c1))) AND (NULLIF(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (NULLIF(vt1.c0, vt1.c0) IN ('225702623'));
SELECT SUM(count) FROM (SELECT ((((0.32088238203639086) BETWEEN (((vt1.c0)*(vt1.c1))) AND (NULLIF(DISTINCT vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED, t0 RIGHT OUTER JOIN vt0 ON 0xffffffffc6ac03ce ORDER BY (NULLIF(vt1.c0, vt1.c0) IN ('225702623')));
SELECT * FROM vt1, t0 RIGHT OUTER JOIN vt0 ON 0Xffffffffc6ac03ce WHERE (((0.32088238203639086) BETWEEN (((vt1.c0)*(vt1.c1))) AND (NULLIF(DISTINCT vt0.c1, vt0.c0)))) ORDER BY (NULLIF(vt1.c0, vt1.c0) IN ('225702623'));
SELECT * FROM vt0, vt1, t0 WHERE (174883737);
SELECT SUM(count) FROM (SELECT ALL ((174883737) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (174883737);
SELECT SUM(count) FROM (SELECT ALL ((174883737) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (174883737);
SELECT * FROM t0 WHERE ((+ (x''))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE ((+ (x''))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT * FROM t0 WHERE ((+ (x''))) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) AS TEXT));
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c1))>=((vt0.c1))))AND(LTRIM(vt0.c1, vt1.c1))))AND(vt0.c0)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((CAST(vt1.c1 AS TEXT))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR(((vt0.c0)LIKE(vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c1))>=((vt0.c1))))AND(LTRIM(vt0.c1, vt1.c1))))AND(vt0.c0)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c1 AS TEXT))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR(((vt0.c0)LIKE(vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c1))>=((vt0.c1))))AND(LTRIM(vt0.c1, vt1.c1))))AND(vt0.c0)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((CAST(vt1.c1 AS TEXT))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR(((vt0.c0)LIKE(vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((vt1.c1))>=((vt0.c1))))AND(LTRIM(vt0.c1, vt1.c1))))AND(vt0.c0)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((CAST(vt1.c1 AS TEXT))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR(((vt0.c0)LIKE(vt1.c1)))) DESC  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((((((((((vt1.c1))>=((vt0.c1))))AND(LTRIM(vt0.c1, vt1.c1))))AND(vt0.c0)))OR(((vt1.c0)LIKE(vt1.c1)))))OR(vt0.c1 COLLATE BINARY))) ORDER BY ((((CAST(vt1.c1 AS TEXT))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c1 ELSE vt1.c1 END)))OR(((vt0.c0)LIKE(vt1.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE ('1667330922' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('1667330922' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('1667330922' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (('1667330922' COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ('1667330922' COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1))) ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)&(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '' ASC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)&(vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(vt0.c1))) ORDER BY '' ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((x'')|(vt0.c1)), (('k\nt''uwꑱDz')-(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (0.585295878412948)))) AND ((((vt0.c1)*(vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT))))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((x'')|(vt0.c1)), (('k\nt''uwꑱDz')-(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (0.585295878412948)))) AND ((((vt0.c1)*(vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((x'')|(vt0.c1)), (('k\nt''uwꑱDz')-(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (0.585295878412948)))) AND ((((vt0.c1)*(vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT))))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((x'')|(vt0.c1)), (('k\nt''uwꑱDz')-(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (0.585295878412948)))) AND ((((vt0.c1)*(vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)>(vt0.c1))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, vt0.c0, vt0.c1)) BETWEEN ((((x'')|(vt0.c1)), (('k\nt''uwꑱDz')-(vt0.c1)), ((vt0.c1) BETWEEN (vt0.c1) AND (0.585295878412948)))) AND ((((vt0.c1)*(vt0.c0)), (NOT (vt0.c0)), CAST(vt0.c1 AS TEXT))))) ORDER BY ((((vt0.c1)>(vt0.c1))) NOT NULL);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (x'40a0') ORDER BY (((+ (t0.c0)))/((NOT (vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(LIKELY(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((x'40a0') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((+ (t0.c0)))/((NOT (vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(LIKELY(vt1.c1))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (x'40a0') ORDER BY (((+ (t0.c0)))/((NOT (vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(LIKELY(vt1.c1)));
SELECT SUM(count) FROM (SELECT ((x'40a0') IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((+ (t0.c0)))/((NOT (vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(LIKELY(vt1.c1))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (x'40a0') ORDER BY (((+ (t0.c0)))/((NOT (vt0.c0)))) DESC  NULLS FIRST, ((((t0.c0)OR(vt0.c1)))OR(vt1.c1)) COLLATE BINARY COLLATE BINARY DESC, (((((vt0.c0 IN ()))AND((- (vt0.c0)))))OR(LIKELY(vt1.c1)));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON json_extract(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, CAST(-129335064 AS BLOB), vt0.c1, (((t0.c0, t0.c0, vt1.c1))>((vt1.c0, t0.c0, t0.c0))), ((((x'')OR(vt0.c0)))OR(t0.c0)), ((vt1.c0)+(vt1.c1))) WHERE (CASE (+ (vt0.c1))  WHEN COALESCE(vt1.c0, t0.c0) THEN ((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c1))  WHEN COALESCE(vt1.c0, t0.c0) THEN ((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON json_extract(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, CAST(-129335064 AS BLOB), vt0.c1, (((t0.c0, t0.c0, vt1.c1))>((vt1.c0, t0.c0, t0.c0))), ((((x'')OR(vt0.c0)))OR(t0.c0)), ((vt1.c0)+(vt1.c1))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON json_extract(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, CAST(-129335064 AS BLOB), vt0.c1, (((t0.c0, t0.c0, vt1.c1))>((vt1.c0, t0.c0, t0.c0))), ((((x'')OR(vt0.c0)))OR(t0.c0)), ((vt1.c0)+(vt1.c1))) WHERE (CASE (+ (vt0.c1))  WHEN COALESCE(vt1.c0, t0.c0) THEN ((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c1))  WHEN COALESCE(vt1.c0, t0.c0) THEN ((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)) ELSE vt0.c1 COLLATE RTRIM END) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON json_extract(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, CAST(-129335064 AS BLOB), vt0.c1, (((t0.c0, t0.c0, vt1.c1))>((vt1.c0, t0.c0, t0.c0))), ((((x'')OR(vt0.c0)))OR(t0.c0)), ((vt1.c0)+(vt1.c1))));
SELECT COUNT(*) FROM t0, vt0 FULL OUTER JOIN vt1 ON json_extract(CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END, CAST(-129335064 AS BLOB), vt0.c1, (((t0.c0, t0.c0, vt1.c1))>((vt1.c0, t0.c0, t0.c0))), ((((x'')OR(vt0.c0)))OR(t0.c0)), ((vt1.c0)+(vt1.c1))) WHERE (CASE (+ (vt0.c1))  WHEN COALESCE(vt1.c0, t0.c0) THEN ((((((((vt0.c1)AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt1.c0)) ELSE vt0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('*7lb^k-\' COLLATE NOCASE) ORDER BY (~ (ABS(DISTINCT vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('*7lb^k-\' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (ABS(DISTINCT vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('*7lb^k-\' COLLATE NOCASE) ORDER BY (~ (ABS(DISTINCT vt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('*7lb^k-\' COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1 ORDER BY (~ (ABS(DISTINCT vt1.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ('*7lb^k-\' COLLATE NOCASE) ORDER BY (~ (ABS(DISTINCT vt1.c1)))  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST, ((json_object(vt0.c1, t0.c0))IS((NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST, ((json_object(vt0.c1, t0.c0))IS((NOT (vt0.c1)))) ASC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST, ((json_object(vt0.c1, t0.c0))IS((NOT (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST, ((json_object(vt0.c1, t0.c0))IS((NOT (vt0.c1)))) ASC);
SELECT * FROM t0, vt0 WHERE (((vt0.c0) ISNULL) COLLATE NOCASE) ORDER BY ((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)) COLLATE BINARY  NULLS FIRST, ((json_object(vt0.c1, t0.c0))IS((NOT (vt0.c1)))) ASC;
SELECT COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ())) NOT NULL) WHERE (CASE ((vt1.c0)>=(vt0.c0))  WHEN -1354301732 THEN ((((0X44dc61b)AND(vt1.c0)))OR('뮡')) END) ORDER BY ((CAST(x'' AS REAL))IS NOT(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)>=(vt0.c0))  WHEN -1354301732 THEN ((((0x44dc61b)AND(vt1.c0)))OR('뮡')) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ())) NOT NULL) ORDER BY ((CAST(x'' AS REAL))IS NOT(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ())) NOT NULL) WHERE (CASE ((vt1.c0)>=(vt0.c0))  WHEN -1354301732 THEN ((((0X44dc61b)AND(vt1.c0)))OR('뮡')) END) ORDER BY ((CAST(x'' AS REAL))IS NOT(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)>=(vt0.c0))  WHEN -1354301732 THEN ((((0x44dc61b)AND(vt1.c0)))OR('뮡')) END) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ())) NOT NULL) ORDER BY ((CAST(x'' AS REAL))IS NOT(x''))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((vt0.c0 IN ())) NOT NULL) WHERE (CASE ((vt1.c0)>=(vt0.c0))  WHEN -1354301732 THEN ((((0X44dc61b)AND(vt1.c0)))OR('뮡')) END) ORDER BY ((CAST(x'' AS REAL))IS NOT(x''))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (CAST('0.11607933225567069' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.11607933225567069' AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST('0.11607933225567069' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST('0.11607933225567069' AS TEXT)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CAST('0.11607933225567069' AS TEXT));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c0 IN ()))IS(((((vt0.c1)AND(vt1.c1)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS(((((vt0.c1)AND(vt1.c1)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c0 IN ()))IS(((((vt0.c1)AND(vt1.c1)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ()))IS(((((vt0.c1)AND(vt1.c1)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((t0.c0 IN ()))IS(((((vt0.c1)AND(vt1.c1)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN (~ (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN (~ (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN (~ (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN (~ (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c1)) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN (~ (vt1.c1)) WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c1 WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END THEN vt1.c0 COLLATE NOCASE ELSE (NOT (vt1.c1)) END);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE ('-129335064') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (('-129335064') IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE ('-129335064') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (('-129335064') IS TRUE)  as count FROM t0, vt0 NATURAL JOIN vt1 ORDER BY vt0.c0);
SELECT ALL * FROM t0, vt0 NATURAL JOIN vt1 WHERE ('-129335064') ORDER BY vt0.c0;
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (UNLIKELY((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (((vt1.c1)>=(vt1.c1)) IN ('-1655707060')) ASC, ((((vt0.c0 IN ())))<((((vt1.c0)/(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c1)>=(vt1.c1)) IN ('-1655707060')) ASC, ((((vt0.c0 IN ())))<((((vt1.c0)/(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (UNLIKELY((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (((vt1.c1)>=(vt1.c1)) IN ('-1655707060')) ASC, ((((vt0.c0 IN ())))<((((vt1.c0)/(vt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt1.c1)>=(vt1.c1)) IN ('-1655707060')) ASC, ((((vt0.c0 IN ())))<((((vt1.c0)/(vt1.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (UNLIKELY((((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) ORDER BY (((vt1.c1)>=(vt1.c1)) IN ('-1655707060')) ASC, ((((vt0.c0 IN ())))<((((vt1.c0)/(vt1.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c1)) NOTNULL)) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST, ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST, ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c1)) NOTNULL)) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST, ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT vt0.c1)) NOTNULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST, ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((ABS(DISTINCT vt0.c1)) NOTNULL)) ORDER BY (+ (((t0.c0) ISNULL)))  NULLS LAST, ((CAST(NULL AS REAL)) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)||(vt1.c1)) IN ()) WHERE (CASE HEX(vt1.c0)  WHEN vt1.c0 COLLATE BINARY THEN json_object(vt1.c0, vt1.c0) WHEN ((vt0.c0)>(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-696563187)) THEN -1753326549 ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(vt1.c0)  WHEN vt1.c0 COLLATE BINARY THEN json_object(vt1.c0, vt1.c0) WHEN ((vt0.c0)>(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-696563187)) THEN -1753326549 ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)||(vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)||(vt1.c1)) IN ()) WHERE (CASE HEX(vt1.c0)  WHEN vt1.c0 COLLATE BINARY THEN json_object(vt1.c0, vt1.c0) WHEN ((vt0.c0)>(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-696563187)) THEN -1753326549 ELSE NULL COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE HEX(vt1.c0)  WHEN vt1.c0 COLLATE BINARY THEN json_object(vt1.c0, vt1.c0) WHEN ((vt0.c0)>(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-696563187)) THEN -1753326549 ELSE NULL COLLATE BINARY END) IS TRUE)  as count FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)||(vt1.c1)) IN ()));
SELECT COUNT(*) FROM vt1, t0 RIGHT OUTER JOIN vt0 ON (((vt0.c0)||(vt1.c1)) IN ()) WHERE (CASE HEX(vt1.c0)  WHEN vt1.c0 COLLATE BINARY THEN json_object(vt1.c0, vt1.c0) WHEN ((vt0.c0)>(t0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (-696563187)) THEN -1753326549 ELSE NULL COLLATE BINARY END);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(x'dd7f')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)OR(x'dd7f')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(x'dd7f')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((vt0.c1)OR(x'dd7f')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((((((((vt0.c1)OR(x'dd7f')))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)%(t0.c0)))) AND (((+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1)%(t0.c0)))) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)%(t0.c0)))) AND (((+ (vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((((vt0.c1)%(t0.c0)))) AND (((+ (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c1)) BETWEEN ((((vt0.c1)%(t0.c0)))) AND (((+ (vt1.c0))))));
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((t0.c0))>=((t0.c0)))))<((TRIM(vt1.c1)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL)) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 END IN ())  NULLS LAST, (((0xffffffffaf221d62, ((vt1.c1) NOT BETWEEN ('-32409173') AND (vt0.c1)), t0.c0 COLLATE BINARY))=((vt0.c1, CAST(vt0.c0 AS TEXT), ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((t0.c0))>=((t0.c0)))))<((TRIM(vt1.c1)))) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 END IN ())  NULLS LAST, (((0xffffffffaf221d62, ((vt1.c1) NOT BETWEEN ('-32409173') AND (vt0.c1)), t0.c0 COLLATE BINARY))=((vt0.c1, CAST(vt0.c0 AS TEXT), ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1))))) DESC);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((t0.c0))>=((t0.c0)))))<((TRIM(vt1.c1)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL)) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 END IN ())  NULLS LAST, (((0xffffffffaf221d62, ((vt1.c1) NOT BETWEEN ('-32409173') AND (vt0.c1)), t0.c0 COLLATE BINARY))=((vt0.c1, CAST(vt0.c0 AS TEXT), ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS INTEGER)) NOTNULL)) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((t0.c0))>=((t0.c0)))))<((TRIM(vt1.c1)))) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 END IN ())  NULLS LAST, (((0xffffffffaf221d62, ((vt1.c1) NOT BETWEEN ('-32409173') AND (vt0.c1)), t0.c0 COLLATE BINARY))=((vt0.c1, CAST(vt0.c0 AS TEXT), ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1))))) DESC);
SELECT ALL * FROM vt1, t0 FULL OUTER JOIN vt0 ON ((((((t0.c0))>=((t0.c0)))))<((TRIM(vt1.c1)))) WHERE (((CAST(t0.c0 AS INTEGER)) NOTNULL)) ORDER BY (CASE WHEN vt1.c1 THEN vt1.c1 END IN ())  NULLS LAST, (((0xffffffffaf221d62, ((vt1.c1) NOT BETWEEN ('-32409173') AND (vt0.c1)), t0.c0 COLLATE BINARY))=((vt0.c1, CAST(vt0.c0 AS TEXT), ((vt1.c1) BETWEEN (t0.c0) AND (vt1.c1))))) DESC;
SELECT * FROM t0 WHERE (t0.c0) ORDER BY TRIM(DISTINCT ((t0.c0) IS TRUE), 0.7866251469347036) DESC, ((((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)|(t0.c0)), ((t0.c0)|(t0.c0))))<=((((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT ((t0.c0) IS TRUE), 0.7866251469347036) DESC, ((((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)|(t0.c0)), ((t0.c0)|(t0.c0))))<=((((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY TRIM(DISTINCT ((t0.c0) IS TRUE), 0.7866251469347036) DESC, ((((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)|(t0.c0)), ((t0.c0)|(t0.c0))))<=((((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY TRIM(DISTINCT ((t0.c0) IS TRUE), 0.7866251469347036) DESC, ((((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)|(t0.c0)), ((t0.c0)|(t0.c0))))<=((((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY TRIM(DISTINCT ((t0.c0) IS TRUE), 0.7866251469347036) DESC, ((((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))), ((t0.c0)|(t0.c0)), ((t0.c0)|(t0.c0))))<=((((t0.c0) NOTNULL), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), t0.c0))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c1))) IS TRUE)) ORDER BY ((t0.c0)>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>=(CAST(t0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c1))) IS TRUE)) ORDER BY ((t0.c0)>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>=(CAST(t0.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)>=(vt0.c1))) IS TRUE)) ORDER BY ((t0.c0)>=(CAST(t0.c0 AS NUMERIC))) ASC;
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (NULL);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON HEX(((vt0.c0) NOTNULL)) CROSS JOIN vt0 ON json_insert(QUOTE(vt1.c1), CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END, ((vt0.c0)&(t0.c0))) WHERE ((vt1.c0 IN (NULL, CAST(0.03741738431458552 AS INTEGER)))) ORDER BY ((((((((t0.c0)AND(x'6e38')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))))OR(((vt0.c1)%(vt1.c1)))))AND(((vt1.c0)<>(x'5507'))))  NULLS LAST, TIME((vt1.c1 IN ()), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))), CAST(vt1.c1 AS INTEGER), CAST(vt0.c0 AS REAL)) ASC, CAST(((((t0.c0)AND(t0.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (NULL, CAST(0.03741738431458552 AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON HEX(((vt0.c0) NOTNULL)) CROSS JOIN vt0 ON json_insert(QUOTE(vt1.c1), CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END, ((vt0.c0)&(t0.c0))) ORDER BY ((((((((t0.c0)AND(x'6e38')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))))OR(((vt0.c1)%(vt1.c1)))))AND(((vt1.c0)<>(x'5507'))))  NULLS LAST, TIME((vt1.c1 IN ()), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))), CAST(vt1.c1 AS INTEGER), CAST(vt0.c0 AS REAL)) ASC, CAST(((((t0.c0)AND(t0.c0)))OR(vt1.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON HEX(((vt0.c0) NOTNULL)) CROSS JOIN vt0 ON json_insert(QUOTE(vt1.c1), CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END, ((vt0.c0)&(t0.c0))) WHERE ((vt1.c0 IN (NULL, CAST(0.03741738431458552 AS INTEGER)))) ORDER BY ((((((((t0.c0)AND(x'6e38')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))))OR(((vt0.c1)%(vt1.c1)))))AND(((vt1.c0)<>(x'5507'))))  NULLS LAST, TIME((vt1.c1 IN ()), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))), CAST(vt1.c1 AS INTEGER), CAST(vt0.c0 AS REAL)) ASC, CAST(((((t0.c0)AND(t0.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((vt1.c0 IN (NULL, CAST(0.03741738431458552 AS INTEGER)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON HEX(((vt0.c0) NOTNULL)) CROSS JOIN vt0 ON json_insert(QUOTE(vt1.c1), CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END, ((vt0.c0)&(t0.c0))) ORDER BY ((((((((t0.c0)AND(x'6e38')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))))OR(((vt0.c1)%(vt1.c1)))))AND(((vt1.c0)<>(x'5507'))))  NULLS LAST, TIME((vt1.c1 IN ()), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))), CAST(vt1.c1 AS INTEGER), CAST(vt0.c0 AS REAL)) ASC, CAST(((((t0.c0)AND(t0.c0)))OR(vt1.c1)) AS INTEGER) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON HEX(((vt0.c0) NOTNULL)) CROSS JOIN vt0 ON json_insert(QUOTE(vt1.c1), CASE vt1.c0  WHEN vt1.c1 THEN vt0.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt0.c1 END, ((vt0.c0)&(t0.c0))) WHERE ((vt1.c0 IN (NULL, CAST(0.03741738431458552 AS INTEGER)))) ORDER BY ((((((((t0.c0)AND(x'6e38')))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))))OR(((vt0.c1)%(vt1.c1)))))AND(((vt1.c0)<>(x'5507'))))  NULLS LAST, TIME((vt1.c1 IN ()), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt0.c1))), CAST(vt1.c1 AS INTEGER), CAST(vt0.c0 AS REAL)) ASC, CAST(((((t0.c0)AND(t0.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((~ (((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c1)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((t0.c0)))) IS TRUE) WHERE (LOWER(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((t0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((t0.c0)))) IS TRUE) WHERE (LOWER(DISTINCT (+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((t0.c0)))) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((t0.c0)))) IS TRUE) WHERE (LOWER(DISTINCT (+ (vt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS INTEGER) WHEN ((vt1.c1)!=(vt1.c0)) THEN ((vt1.c1) ISNULL) WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c1, vt1.c1) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN (+ (vt1.c0)) THEN vt1.c0 ELSE ((vt1.c1)GLOB(vt1.c1)) END) ORDER BY (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS INTEGER) WHEN ((vt1.c1)!=(vt1.c0)) THEN ((vt1.c1) ISNULL) WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c1, vt1.c1) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN (+ (vt1.c0)) THEN vt1.c0 ELSE ((vt1.c1)GLOB(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS INTEGER) WHEN ((vt1.c1)!=(vt1.c0)) THEN ((vt1.c1) ISNULL) WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c1, vt1.c1) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN (+ (vt1.c0)) THEN vt1.c0 ELSE ((vt1.c1)GLOB(vt1.c1)) END) ORDER BY (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS INTEGER) WHEN ((vt1.c1)!=(vt1.c0)) THEN ((vt1.c1) ISNULL) WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c1, vt1.c1) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN (+ (vt1.c0)) THEN vt1.c0 ELSE ((vt1.c1)GLOB(vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY (NOT (vt1.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN CAST(vt1.c1 AS INTEGER) WHEN ((vt1.c1)!=(vt1.c0)) THEN ((vt1.c1) ISNULL) WHEN vt1.c0 THEN TRIM(DISTINCT vt1.c1, vt1.c1) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN (+ (vt1.c0)) THEN vt1.c0 ELSE ((vt1.c1)GLOB(vt1.c1)) END) ORDER BY (NOT (vt1.c0 COLLATE NOCASE)) ASC;
SELECT * FROM vt1, vt0 WHERE ('W!ezN' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('W!ezN' COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('W!ezN' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (('W!ezN' COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ('W!ezN' COLLATE RTRIM);
SELECT * FROM vt1, t0 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN 0.7866251469347036 WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY, (((((('{q)')OR(vt1.c1)))OR(vt1.c0)))OR(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN 0.7866251469347036 WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY, (((((('{q)')OR(vt1.c1)))OR(vt1.c0)))OR(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN 0.7866251469347036 WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY, (((((('{q)')OR(vt1.c1)))OR(vt1.c0)))OR(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN 0.7866251469347036 WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY, (((((('{q)')OR(vt1.c1)))OR(vt1.c0)))OR(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((- ((NOT (vt1.c0))))) ORDER BY CASE vt1.c0  WHEN t0.c0 THEN vt1.c1 WHEN t0.c0 THEN 0.7866251469347036 WHEN vt1.c1 THEN t0.c0 ELSE vt1.c0 END COLLATE BINARY, (((((('{q)')OR(vt1.c1)))OR(vt1.c0)))OR(CASE WHEN vt1.c1 THEN t0.c0 WHEN vt1.c1 THEN t0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=((('{}') BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))>=((('{}') BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=((('{}') BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT NULL))>=((('{}') BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) NOT NULL))>=((('{}') BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT * FROM vt0, vt1 WHERE (CAST(0.05571097880867493 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(0.05571097880867493 AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(0.05571097880867493 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(0.05571097880867493 AS NUMERIC)) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CAST(0.05571097880867493 AS NUMERIC));
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE (CASE WHEN (((x'')) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) THEN vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1) IS FALSE));
SELECT * FROM vt1, t0 WHERE ((((((t0.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c1))))&(t0.c0 COLLATE NOCASE))) ORDER BY LIKELIHOOD((vt1.c1 IN ()), 0.6807316927941088), IFNULL(DISTINCT ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c1))))&(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY LIKELIHOOD((vt1.c1 IN ()), 0.6807316927941088), IFNULL(DISTINCT ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((((t0.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c1))))&(t0.c0 COLLATE NOCASE))) ORDER BY LIKELIHOOD((vt1.c1 IN ()), 0.6807316927941088), IFNULL(DISTINCT ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c1))))&(t0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, t0 ORDER BY LIKELIHOOD((vt1.c1 IN ()), 0.6807316927941088), IFNULL(DISTINCT ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE ((((((t0.c0, vt1.c0, t0.c0))<((vt1.c0, t0.c0, vt1.c1))))&(t0.c0 COLLATE NOCASE))) ORDER BY LIKELIHOOD((vt1.c1 IN ()), 0.6807316927941088), IFNULL(DISTINCT ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c0)), CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END COLLATE NOCASE) ORDER BY CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT * FROM vt1, t0, vt0 WHERE (LOWER(((vt0.c1)%(vt1.c0)))) ORDER BY ((((((((((t0.c0) IS FALSE))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((((vt0.c1)AND('')))AND(vt0.c0)))))OR(((t0.c0)==(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c1)%(vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((t0.c0) IS FALSE))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((((vt0.c1)AND('')))AND(vt0.c0)))))OR(((t0.c0)==(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT * FROM vt1, t0, vt0 WHERE (LOWER(((vt0.c1)%(vt1.c0)))) ORDER BY ((((((((((t0.c0) IS FALSE))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((((vt0.c1)AND('')))AND(vt0.c0)))))OR(((t0.c0)==(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c1)%(vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((((((((((t0.c0) IS FALSE))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((((vt0.c1)AND('')))AND(vt0.c0)))))OR(((t0.c0)==(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC);
SELECT * FROM vt1, t0, vt0 WHERE (LOWER(((vt0.c1)%(vt1.c0)))) ORDER BY ((((((((((t0.c0) IS FALSE))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))AND(((((vt0.c1)AND('')))AND(vt0.c0)))))OR(((t0.c0)==(vt1.c0)))))OR(((vt1.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ASC;
SELECT * FROM vt0, vt1, t0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)||(((vt0.c0)GLOB(vt1.c1))))) ORDER BY x'db650a90' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)||(((vt0.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY x'db650a90' DESC);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)||(((vt0.c0)GLOB(vt1.c1))))) ORDER BY x'db650a90' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)||(((vt0.c0)GLOB(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY x'db650a90' DESC);
SELECT * FROM vt0, vt1, t0 WHERE (((CASE vt1.c0  WHEN vt0.c1 THEN x'' WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)||(((vt0.c0)GLOB(vt1.c1))))) ORDER BY x'db650a90' DESC;
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (+ (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (+ (t0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (+ (t0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY (+ (t0.c0 COLLATE BINARY)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c0 IN ()) COLLATE BINARY) ORDER BY (+ (t0.c0 COLLATE BINARY)) DESC;
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0)IS NOT((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0)IS NOT((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0)IS NOT((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((t0.c0)IS NOT((~ (vt1.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)>(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)>(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0)>(CAST(t0.c0 AS TEXT))));
SELECT * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN 0.378240495954003 ELSE '-1080459368' END) ORDER BY ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(((vt1.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN 0.378240495954003 ELSE '-1080459368' END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(((vt1.c1) NOTNULL)))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN 0.378240495954003 ELSE '-1080459368' END) ORDER BY ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(((vt1.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt1.c0)) THEN 0.378240495954003 ELSE '-1080459368' END) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(((vt1.c1) NOTNULL)))  NULLS LAST);
SELECT * FROM vt1 WHERE (CASE WHEN (NOT (vt1.c0)) THEN 0.378240495954003 ELSE '-1080459368' END) ORDER BY ((((((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))AND(CASE WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)))AND(((vt1.c1) NOTNULL)))  NULLS LAST;
SELECT * FROM t0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN LIKELY('D\rh9') END) ORDER BY ((((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c1, vt1.c0, x'6aae')))))<((t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN LIKELY('D\rh9') END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c1, vt1.c0, x'6aae')))))<((t0.c0))) ASC);
SELECT * FROM t0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN LIKELY('D\rh9') END) ORDER BY ((((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c1, vt1.c0, x'6aae')))))<((t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE NOCASE THEN LIKELY('D\rh9') END) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c1, vt1.c0, x'6aae')))))<((t0.c0))) ASC);
SELECT * FROM t0, vt1 WHERE (CASE WHEN vt1.c0 COLLATE NOCASE THEN LIKELY('D\rh9') END) ORDER BY ((((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, vt1.c0, t0.c0)) AND ((vt1.c1, vt1.c0, x'6aae')))))<((t0.c0))) ASC;
SELECT ALL * FROM vt1 WHERE (0.294005067936301) ORDER BY ((((((vt1.c1)>>(vt1.c0)))AND(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)|(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((0.294005067936301) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)>>(vt1.c0)))AND(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)|(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (0.294005067936301) ORDER BY ((((((vt1.c1)>>(vt1.c0)))AND(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)|(vt1.c1))));
SELECT SUM(count) FROM (SELECT ((0.294005067936301) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)>>(vt1.c0)))AND(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)|(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE (0.294005067936301) ORDER BY ((((((vt1.c1)>>(vt1.c0)))AND(LIKELY(DISTINCT vt1.c0))))OR(((vt1.c0)|(vt1.c1))));
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c0))) ISNULL));
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt1.c0) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((vt1.c1) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)>>('1667330922'));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>>('1667330922')));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((vt1.c1) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)>>('1667330922'));
SELECT SUM(count) FROM (SELECT ((((vt1.c1) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>>('1667330922')));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (((vt1.c1) IS FALSE)) ORDER BY ((vt0.c0 COLLATE NOCASE)>>('1667330922'));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c0 IN ())))>((t0.c0 COLLATE NOCASE))) WHERE ((((((((((((((((x'8b16')OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0))))>((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((x'8b16')OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0))))>((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0 IN ())))>((t0.c0 COLLATE NOCASE))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c0 IN ())))>((t0.c0 COLLATE NOCASE))) WHERE ((((((((((((((((x'8b16')OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0))))>((t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((x'8b16')OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0))))>((t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c0 IN ())))>((t0.c0 COLLATE NOCASE))));
SELECT ALL * FROM t0 CROSS JOIN vt1 ON ((((t0.c0 IN ())))>((t0.c0 COLLATE NOCASE))) WHERE ((((((((((((((((x'8b16')OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)))AND(t0.c0))))>((t0.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c1 AS NUMERIC) END) ORDER BY 'DH㇯斁AE' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY 'DH㇯斁AE' DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c1 AS NUMERIC) END) ORDER BY 'DH㇯斁AE' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1 ORDER BY 'DH㇯斁AE' DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN CAST(vt1.c1 AS NUMERIC) END) ORDER BY 'DH㇯斁AE' DESC  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE ((((0.6576810321247278))=((CAST(vt0.c1 AS REAL))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (json_type(vt0.c1)) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1)>(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((0.6576810321247278))=((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (json_type(vt0.c1)) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1)>(vt0.c0)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE ((((0.6576810321247278))=((CAST(vt0.c1 AS REAL))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (json_type(vt0.c1)) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1)>(vt0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL (((((0.6576810321247278))=((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (json_type(vt0.c1)) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1)>(vt0.c0)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE ((((0.6576810321247278))=((CAST(vt0.c1 AS REAL))))) ORDER BY ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) BETWEEN (json_type(vt0.c1)) AND (vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1)>(vt0.c0)) AS TEXT);
SELECT * FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)IS('1973866957'))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt1.c1, t0.c0, vt0.c0))>=((vt1.c0, 0.03294756362527862, vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c1 IN (vt0.c1)) WHEN (- (t0.c0)) THEN NULL ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS('1973866957'))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt1.c1, t0.c0, vt0.c0))>=((vt1.c0, 0.03294756362527862, vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c1 IN (vt0.c1)) WHEN (- (t0.c0)) THEN NULL ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)IS('1973866957'))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt1.c1, t0.c0, vt0.c0))>=((vt1.c0, 0.03294756362527862, vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c1 IN (vt0.c1)) WHEN (- (t0.c0)) THEN NULL ELSE ((t0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)IS('1973866957'))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt1.c1, t0.c0, vt0.c0))>=((vt1.c0, 0.03294756362527862, vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c1 IN (vt0.c1)) WHEN (- (t0.c0)) THEN NULL ELSE ((t0.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE (CASE ((vt1.c0)IS('1973866957'))  WHEN CAST(vt1.c1 AS INTEGER) THEN (((vt1.c1, t0.c0, vt0.c0))>=((vt1.c0, 0.03294756362527862, vt1.c0))) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c1 IN (vt0.c1)) WHEN (- (t0.c0)) THEN NULL ELSE ((t0.c0) IS FALSE) END);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 IN ()) IN ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 IN ()) IN ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 IN ()) IN ((NOT (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 IN ()) IN ((NOT (vt1.c0))))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1 IN ()) IN ((NOT (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((vt1.c1)|(vt1.c1)))<<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)|(vt1.c1)))<<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((vt1.c1)|(vt1.c1)))<<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)|(vt1.c1)))<<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((vt1.c1)|(vt1.c1)))<<(((((vt1.c0)OR(vt1.c1)))AND(vt1.c0))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((rtreenode(vt0.c1, vt1.c0))GLOB(((vt1.c1)/(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(vt0.c1, vt1.c0))GLOB(((vt1.c1)/(vt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((rtreenode(vt0.c1, vt1.c0))GLOB(((vt1.c1)/(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((rtreenode(vt0.c1, vt1.c0))GLOB(((vt1.c1)/(vt1.c1))))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON CAST(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((rtreenode(vt0.c1, vt1.c0))GLOB(((vt1.c1)/(vt1.c1)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c1) ORDER BY (+ ((((vt0.c1, t0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ ((((vt0.c1, t0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c1) ORDER BY (+ ((((vt0.c1, t0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (+ ((((vt0.c1, t0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC);
SELECT ALL * FROM vt1, vt0, t0 WHERE (vt1.c1) ORDER BY (+ ((((vt0.c1, t0.c0, vt1.c1)) NOT BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))))) ASC;
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((((((((((((((('!H,1駶/gM')AND(vt1.c1)))OR(vt0.c1)))OR(vt1.c1)))AND('_6')))AND(vt1.c0)))AND(vt1.c1)))AND(x'd8b2' COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE (((vt0.c1)<>(((((vt0.c1)OR(vt1.c0)))OR(t0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (~ ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<>(((((vt0.c1)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((((((((((((((('!H,1駶/gM')AND(vt1.c1)))OR(vt0.c1)))OR(vt1.c1)))AND('_6')))AND(vt1.c0)))AND(vt1.c1)))AND(x'd8b2' COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (~ ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((((((((((((((('!H,1駶/gM')AND(vt1.c1)))OR(vt0.c1)))OR(vt1.c1)))AND('_6')))AND(vt1.c0)))AND(vt1.c1)))AND(x'd8b2' COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE (((vt0.c1)<>(((((vt0.c1)OR(vt1.c0)))OR(t0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (~ ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<>(((((vt0.c1)OR(vt1.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((((((((((((((('!H,1駶/gM')AND(vt1.c1)))OR(vt0.c1)))OR(vt1.c1)))AND('_6')))AND(vt1.c0)))AND(vt1.c1)))AND(x'd8b2' COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (~ ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))));
SELECT ALL * FROM t0, vt0 INNER JOIN vt1 ON (((((((((((((((('!H,1駶/gM')AND(vt1.c1)))OR(vt0.c1)))OR(vt1.c1)))AND('_6')))AND(vt1.c0)))AND(vt1.c1)))AND(x'd8b2' COLLATE NOCASE)))AND(((vt1.c1) BETWEEN (t0.c0) AND (vt1.c0)))) WHERE (((vt0.c1)<>(((((vt0.c1)OR(vt1.c0)))OR(t0.c0))))) ORDER BY CAST(vt0.c0 AS BLOB) COLLATE RTRIM, (~ ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))));
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL)) ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL)) ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1 WHERE (((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) ISNULL)) ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (t0.c0)) THEN LOWER(DISTINCT t0.c0) ELSE ((vt1.c1) NOT BETWEEN (t0.c0) AND (vt1.c1)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)<(vt0.c1)) THEN (((vt0.c1))>=((t0.c0))) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<(vt0.c1)) THEN (((vt0.c1))>=((t0.c0))) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)<(vt0.c1)) THEN (((vt0.c1))>=((t0.c0))) ELSE (vt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)<(vt0.c1)) THEN (((vt0.c1))>=((t0.c0))) ELSE (vt0.c1 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE WHEN ((t0.c0)<(vt0.c1)) THEN (((vt0.c1))>=((t0.c0))) ELSE (vt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(json_extract(t0.c0, vt1.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c0)<<(t0.c0))))) ASC, ((vt0.c0 COLLATE RTRIM)||((- (vt1.c1)))), (((((((((((((vt0.c1 IN ()))OR(vt1.c1)))OR(t0.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR((NOT (vt1.c1)))))AND((((('')AND(vt0.c1)))AND(t0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(json_extract(t0.c0, vt1.c1)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c0)<<(t0.c0))))) ASC, ((vt0.c0 COLLATE RTRIM)||((- (vt1.c1)))), (((((((((((((vt0.c1 IN ()))OR(vt1.c1)))OR(t0.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR((NOT (vt1.c1)))))AND((((('')AND(vt0.c1)))AND(t0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(json_extract(t0.c0, vt1.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c0)<<(t0.c0))))) ASC, ((vt0.c0 COLLATE RTRIM)||((- (vt1.c1)))), (((((((((((((vt0.c1 IN ()))OR(vt1.c1)))OR(t0.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR((NOT (vt1.c1)))))AND((((('')AND(vt0.c1)))AND(t0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(json_extract(t0.c0, vt1.c1)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c0)<<(t0.c0))))) ASC, ((vt0.c0 COLLATE RTRIM)||((- (vt1.c1)))), (((((((((((((vt0.c1 IN ()))OR(vt1.c1)))OR(t0.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR((NOT (vt1.c1)))))AND((((('')AND(vt0.c1)))AND(t0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)OR(t0.c0 COLLATE BINARY)))OR(json_extract(t0.c0, vt1.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((NOT (vt1.c1)))) AND ((((vt1.c0)<<(t0.c0))))) ASC, ((vt0.c0 COLLATE RTRIM)||((- (vt1.c1)))), (((((((((((((vt0.c1 IN ()))OR(vt1.c1)))OR(t0.c0)))AND((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c1))))))OR((NOT (vt1.c1)))))AND((((('')AND(vt0.c1)))AND(t0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0))))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(NULL)))OR(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))AND(((vt1.c0) IS TRUE))))OR(((vt1.c1)!=(vt1.c0)))))OR(LIKE(t0.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))AND(((vt1.c0) IS TRUE))))OR(((vt1.c1)<>(vt1.c0)))))OR(LIKE(t0.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))AND(((vt1.c0) IS TRUE))))OR(((vt1.c1)!=(vt1.c0)))))OR(LIKE(t0.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))AND(((vt1.c0) IS TRUE))))OR(((vt1.c1)<>(vt1.c0)))))OR(LIKE(t0.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN t0 ON (((((((((NULL IN ()))AND(((vt1.c0) IS TRUE))))OR(((vt1.c1)!=(vt1.c0)))))OR(LIKE(t0.c0, vt1.c0))))OR(((vt1.c0) NOTNULL))) WHERE (vt1.c0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CASE WHEN t0.c0 THEN 512609674 ELSE vt1.c0 END)*((((t0.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN 512609674 ELSE vt1.c0 END)*((((t0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CASE WHEN t0.c0 THEN 512609674 ELSE vt1.c0 END)*((((t0.c0))>((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN 512609674 ELSE vt1.c0 END)*((((t0.c0))>((vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((CASE WHEN t0.c0 THEN 512609674 ELSE vt1.c0 END)*((((t0.c0))>((vt1.c0))))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((t0.c0) IS FALSE) COLLATE NOCASE);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((((((((t0.c0)AND(0.9426369393863155)))OR(vt0.c1)))AND(0.4988032208059996)))OR(vt0.c0))))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)AND(0.9426369393863155)))OR(vt0.c1)))AND(0.4988032208059996)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((((((((t0.c0)AND(0.9426369393863155)))OR(vt0.c1)))AND(0.4988032208059996)))OR(vt0.c0))))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c0)AND(0.9426369393863155)))OR(vt0.c1)))AND(0.4988032208059996)))OR(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((NOT (((((((((t0.c0)AND(0.9426369393863155)))OR(vt0.c1)))AND(0.4988032208059996)))OR(vt0.c0))))) ORDER BY ((((vt1.c0) BETWEEN (t0.c0) AND (vt0.c1))) NOT BETWEEN ((vt0.c0 IN ())) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt1.c0 END)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=(((((0.18910191761561757))<=((vt1.c1))))))) ORDER BY ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((0Xffffffffd5cbb6be, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((((0.18910191761561757))<=((vt1.c1))))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((0xffffffffd5cbb6be, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=(((((0.18910191761561757))<=((vt1.c1))))))) ORDER BY ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((0Xffffffffd5cbb6be, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>=(((((0.18910191761561757))<=((vt1.c1))))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((0xffffffffd5cbb6be, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c0))>=(((((0.18910191761561757))<=((vt1.c1))))))) ORDER BY ((((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((0Xffffffffd5cbb6be, vt1.c0, vt1.c1)) AND ((vt1.c0, vt1.c0, vt1.c0))) IN ())  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY ((((vt0.c0)AND(((vt0.c0) IS TRUE))))AND(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, 239202628  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)AND(((vt0.c0) IS TRUE))))AND(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, 239202628  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY ((((vt0.c0)AND(((vt0.c0) IS TRUE))))AND(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, 239202628  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c0)AND(((vt0.c0) IS TRUE))))AND(t0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, 239202628  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((NOT (t0.c0)))OR(((vt1.c1)LIKE('-129335064')))))AND(((t0.c0)>(1.99296921E9))))) ORDER BY 'w' DESC, ((CASE t0.c0  WHEN '1667330922' THEN t0.c0 ELSE vt1.c0 END)IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))OR(((vt1.c1)LIKE('-129335064')))))AND(((t0.c0)>(1.99296921E9))))) IS TRUE)  as count FROM vt1, t0 ORDER BY 'w' DESC, ((CASE t0.c0  WHEN '1667330922' THEN t0.c0 ELSE vt1.c0 END)IS NOT(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((NOT (t0.c0)))OR(((vt1.c1)LIKE('-129335064')))))AND(((t0.c0)>(1.99296921E9))))) ORDER BY 'w' DESC, ((CASE t0.c0  WHEN '1667330922' THEN t0.c0 ELSE vt1.c0 END)IS NOT(NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))OR(((vt1.c1)LIKE('-129335064')))))AND(((t0.c0)>(1.99296921E9))))) IS TRUE)  as count FROM vt1, t0 ORDER BY 'w' DESC, ((CASE t0.c0  WHEN '1667330922' THEN t0.c0 ELSE vt1.c0 END)IS NOT(NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((((((NOT (t0.c0)))OR(((vt1.c1)LIKE('-129335064')))))AND(((t0.c0)>(1.99296921E9))))) ORDER BY 'w' DESC, ((CASE t0.c0  WHEN '1667330922' THEN t0.c0 ELSE vt1.c0 END)IS NOT(NULL))  NULLS LAST;
SELECT * FROM vt1, vt0 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE (((vt1.c1) NOT NULL) COLLATE RTRIM);
SELECT * FROM t0 WHERE ((+ (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0)>(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0)>(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (((t0.c0)>(t0.c0)))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (vt1.c1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((vt0.c0)+(vt0.c1)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)), ((vt0.c1) NOT NULL))) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)+(vt0.c1)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)), ((vt0.c1) NOT NULL))) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((vt0.c0)+(vt0.c1)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)), ((vt0.c1) NOT NULL))) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt0.c0)+(vt0.c1)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)), ((vt0.c1) NOT NULL))) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1 WHERE (CAST(((vt0.c1) BETWEEN (vt1.c1) AND (vt0.c1)) AS REAL)) ORDER BY (((vt0.c0)+(vt0.c1)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c1)), ((vt0.c1) NOT NULL))) ASC  NULLS LAST, vt1.c0 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE));
SELECT * FROM vt0, t0, vt1 WHERE ((((+ (NULL))) IS TRUE)) ORDER BY ((json_quote(vt1.c0)) IS FALSE), CASE ((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (+ ('{q)')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((json_quote(vt1.c0)) IS FALSE), CASE ((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (+ ('{q)')) END DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((+ (NULL))) IS TRUE)) ORDER BY ((json_quote(vt1.c0)) IS FALSE), CASE ((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (+ ('{q)')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (NULL))) IS TRUE)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY ((json_quote(vt1.c0)) IS FALSE), CASE ((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (+ ('{q)')) END DESC);
SELECT * FROM vt0, t0, vt1 WHERE ((((+ (NULL))) IS TRUE)) ORDER BY ((json_quote(vt1.c0)) IS FALSE), CASE ((((((((((((vt1.c1)AND(vt0.c1)))OR(vt1.c1)))OR(t0.c0)))OR(vt1.c1)))AND(vt1.c0)))AND(t0.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) THEN (+ ('{q)')) END DESC;
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c0) ORDER BY LOWER(DISTINCT (vt1.c1 IN ())) ASC, (((vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c1 AS TEXT), CAST(vt1.c1 AS NUMERIC), ((t0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN ())) ASC, (((vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c1 AS TEXT), CAST(vt1.c1 AS NUMERIC), ((t0.c0) IS FALSE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c0) ORDER BY LOWER(DISTINCT (vt1.c1 IN ())) ASC, (((vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c1 AS TEXT), CAST(vt1.c1 AS NUMERIC), ((t0.c0) IS FALSE))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LOWER(DISTINCT (vt1.c1 IN ())) ASC, (((vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c1 AS TEXT), CAST(vt1.c1 AS NUMERIC), ((t0.c0) IS FALSE))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (vt0.c0) ORDER BY LOWER(DISTINCT (vt1.c1 IN ())) ASC, (((vt0.c1, vt0.c1, t0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt1.c1) IS FALSE), ((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)))) AND ((CAST(vt1.c1 AS TEXT), CAST(vt1.c1 AS NUMERIC), ((t0.c0) IS FALSE))))  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (((load_extension(t0.c0)) NOT NULL)) ORDER BY 0.7477100341332862;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.7477100341332862);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((load_extension(t0.c0)) NOT NULL)) ORDER BY 0.7477100341332862;
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(t0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.7477100341332862);
SELECT ALL * FROM vt0, t0, vt1 WHERE (((load_extension(t0.c0)) NOT NULL)) ORDER BY 0.7477100341332862;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULLIF((vt0.c1 IN ()), LIKELIHOOD(vt1.c1, 0.7481047877573335))) ORDER BY ((ABS(DISTINCT vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((vt0.c1 IN ()), LIKELIHOOD(vt1.c1, 0.7481047877573335))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((ABS(DISTINCT vt0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULLIF((vt0.c1 IN ()), LIKELIHOOD(vt1.c1, 0.7481047877573335))) ORDER BY ((ABS(DISTINCT vt0.c0)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((vt0.c1 IN ()), LIKELIHOOD(vt1.c1, 0.7481047877573335))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((ABS(DISTINCT vt0.c0)) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (NULLIF((vt0.c1 IN ()), LIKELIHOOD(vt1.c1, 0.7481047877573335))) ORDER BY ((ABS(DISTINCT vt0.c0)) IS TRUE)  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (CAST(t0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)) WHERE (vt1.c1) ORDER BY ((((CASE t0.c0  WHEN vt0.c0 THEN NULL END)OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CAST(t0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)) ORDER BY ((((CASE t0.c0  WHEN vt0.c0 THEN NULL END)OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (CAST(t0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)) WHERE (vt1.c1) ORDER BY ((((CASE t0.c0  WHEN vt0.c0 THEN NULL END)OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (CAST(t0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)) ORDER BY ((((CASE t0.c0  WHEN vt0.c0 THEN NULL END)OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (CAST(t0.c0 AS TEXT) IN ()) RIGHT OUTER JOIN vt1 ON (NOT (CASE WHEN vt1.c1 THEN vt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN vt0.c0 END)) WHERE (vt1.c1) ORDER BY ((((CASE t0.c0  WHEN vt0.c0 THEN NULL END)OR(CASE WHEN vt1.c0 THEN vt1.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))OR(((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((((vt1.c1)AND(vt1.c0)))AND('#E')))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS BLOB) IN (((((vt1.c1)AND(vt1.c0)))AND('#E'))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((((vt1.c1)AND(vt1.c0)))AND('#E')))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS BLOB) IN (((((vt1.c1)AND(vt1.c0)))AND('#E'))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((CAST(vt1.c0 AS BLOB) IN (((((vt1.c1)AND(vt1.c0)))AND('#E')))));
SELECT * FROM t0, vt0 WHERE (((((0.4548541208757667)>(vt0.c1)))>=(((vt0.c0)>>('ye䯴UW\r')))));
SELECT SUM(count) FROM (SELECT ((((((0.4548541208757667)>(vt0.c1)))>=(((vt0.c0)>>('ye䯴UW\r'))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((0.4548541208757667)>(vt0.c1)))>=(((vt0.c0)>>('ye䯴UW\r')))));
SELECT SUM(count) FROM (SELECT ((((((0.4548541208757667)>(vt0.c1)))>=(((vt0.c0)>>('ye䯴UW\r'))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((0.4548541208757667)>(vt0.c1)))>=(((vt0.c0)>>('ye䯴UW\r')))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(highlight(vt1.c1, vt0.c1, t0.c0, vt1.c1)))) ORDER BY (((((((((+ ('R?gEYg')))OR(json_valid(t0.c0))))AND((0Xffffffffee33a96f IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(vt1.c1 COLLATE NOCASE)), UNLIKELY(LOWER(t0.c0))  NULLS FIRST, CASE CAST(vt1.c0 AS NUMERIC)  WHEN (vt0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END  NULLS LAST, (((((0.27301823209115494)!=(vt0.c1)), (vt0.c1 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END, vt1.c0, '340809519'))>=((vt1.c1 COLLATE RTRIM, t0.c0, CAST('405809922' AS TEXT), ((vt0.c1)|(t0.c0)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))IS NOT(highlight(vt1.c1, vt0.c1, t0.c0, vt1.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((+ ('R?gEYg')))OR(json_valid(t0.c0))))AND((0xffffffffee33a96f IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(vt1.c1 COLLATE NOCASE)), UNLIKELY(LOWER(t0.c0))  NULLS FIRST, CASE CAST(vt1.c0 AS NUMERIC)  WHEN (vt0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END  NULLS LAST, (((((0.27301823209115494)<>(vt0.c1)), (vt0.c1 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END, vt1.c0, '340809519'))>=((vt1.c1 COLLATE RTRIM, t0.c0, CAST('405809922' AS TEXT), ((vt0.c1)|(t0.c0)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(highlight(vt1.c1, vt0.c1, t0.c0, vt1.c1)))) ORDER BY (((((((((+ ('R?gEYg')))OR(json_valid(t0.c0))))AND((0Xffffffffee33a96f IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(vt1.c1 COLLATE NOCASE)), UNLIKELY(LOWER(t0.c0))  NULLS FIRST, CASE CAST(vt1.c0 AS NUMERIC)  WHEN (vt0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END  NULLS LAST, (((((0.27301823209115494)!=(vt0.c1)), (vt0.c1 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END, vt1.c0, '340809519'))>=((vt1.c1 COLLATE RTRIM, t0.c0, CAST('405809922' AS TEXT), ((vt0.c1)|(t0.c0)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))IS NOT(highlight(vt1.c1, vt0.c1, t0.c0, vt1.c1)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((((((+ ('R?gEYg')))OR(json_valid(t0.c0))))AND((0xffffffffee33a96f IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(vt1.c1 COLLATE NOCASE)), UNLIKELY(LOWER(t0.c0))  NULLS FIRST, CASE CAST(vt1.c0 AS NUMERIC)  WHEN (vt0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END  NULLS LAST, (((((0.27301823209115494)<>(vt0.c1)), (vt0.c1 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END, vt1.c0, '340809519'))>=((vt1.c1 COLLATE RTRIM, t0.c0, CAST('405809922' AS TEXT), ((vt0.c1)|(t0.c0)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))))) DESC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(highlight(vt1.c1, vt0.c1, t0.c0, vt1.c1)))) ORDER BY (((((((((+ ('R?gEYg')))OR(json_valid(t0.c0))))AND((0Xffffffffee33a96f IN ()))))OR(vt0.c0 COLLATE RTRIM)))OR(vt1.c1 COLLATE NOCASE)), UNLIKELY(LOWER(t0.c0))  NULLS FIRST, CASE CAST(vt1.c0 AS NUMERIC)  WHEN (vt0.c0 IN ()) THEN ((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) END  NULLS LAST, (((((0.27301823209115494)!=(vt0.c1)), (vt0.c1 IN ()), CASE WHEN vt1.c0 THEN t0.c0 ELSE vt0.c1 END, vt1.c0, '340809519'))>=((vt1.c1 COLLATE RTRIM, t0.c0, CAST('405809922' AS TEXT), ((vt0.c1)|(t0.c0)), ((t0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0))))) DESC;
SELECT * FROM t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((t0.c0)) AND ((vt1.c1))) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE x''  WHEN ((vt0.c1)-(vt1.c1)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((((((('-708069698')OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((vt0.c1)-(vt1.c1)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((((((('-708069698')OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE x''  WHEN ((vt0.c1)-(vt1.c1)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((((((('-708069698')OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE x''  WHEN ((vt0.c1)-(vt1.c1)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN vt0 ORDER BY (((((((((('-708069698')OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))) ISNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN vt0 WHERE (CASE x''  WHEN ((vt0.c1)-(vt1.c1)) THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)) END) ORDER BY (((((((((('-708069698')OR(vt0.c1)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0))) ISNULL) DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.18415462491427392));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.18415462491427392)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.18415462491427392));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.18415462491427392)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT (t0.c0 IN ()), 0.18415462491427392));
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt0.c1  WHEN x'' THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN x'' THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt0.c1  WHEN x'' THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN x'' THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(CASE vt0.c1  WHEN x'' THEN vt0.c1 END AS INTEGER));
SELECT ALL * FROM t0 WHERE (((((t0.c0)GLOB(NULL)))<((~ (0.7337217281951037)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(NULL)))<((~ (0.7337217281951037))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)GLOB(NULL)))<((~ (0.7337217281951037)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)GLOB(NULL)))<((~ (0.7337217281951037))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)GLOB(NULL)))<((~ (0.7337217281951037)))));
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL * FROM vt1, vt0, t0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt1.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) IS FALSE)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))%(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))%(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) IS FALSE)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))%(vt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) IS FALSE)) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))%(vt1.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt1.c1)))) IS FALSE)) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)))%(vt1.c0)) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c1) NOT NULL)) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT NULL)) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c1) NOT NULL)) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1) NOT NULL)) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS REAL))));
SELECT * FROM vt1 WHERE (((((vt1.c0)GLOB(vt1.c0))) NOTNULL)) ORDER BY ((((vt1.c1) NOT NULL)) BETWEEN (vt1.c1) AND (CAST(vt1.c0 AS REAL)));
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((((t0.c0))>=((0.21630905334734263))))<>((t0.c0 IN ()))) ASC  NULLS FIRST, ((t0.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))>=((0.21630905334734263))))<>((t0.c0 IN ()))) ASC  NULLS FIRST, ((t0.c0 COLLATE BINARY) IS FALSE) ASC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((((t0.c0))>=((0.21630905334734263))))<>((t0.c0 IN ()))) ASC  NULLS FIRST, ((t0.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))>=((0.21630905334734263))))<>((t0.c0 IN ()))) ASC  NULLS FIRST, ((t0.c0 COLLATE BINARY) IS FALSE) ASC);
SELECT * FROM t0 WHERE (CASE WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)) ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END) ORDER BY (((((t0.c0))>=((0.21630905334734263))))<>((t0.c0 IN ()))) ASC  NULLS FIRST, ((t0.c0 COLLATE BINARY) IS FALSE) ASC;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((((((vt1.c1)OR(vt0.c0)))OR(vt0.c1)))) AND ((vt1.c0))));
SELECT ALL * FROM vt1, t0 WHERE ((+ (-1e500))) ORDER BY LIKE(((vt1.c0) IS FALSE), t0.c0, 'ᳲ') ASC;
SELECT SUM(count) FROM (SELECT (((+ (-1e500))) IS TRUE)  as count FROM vt1, t0 ORDER BY LIKE(((vt1.c0) IS FALSE), t0.c0, 'ᳲ') ASC);
SELECT ALL * FROM vt1, t0 WHERE ((+ (-1e500))) ORDER BY LIKE(((vt1.c0) IS FALSE), t0.c0, 'ᳲ') ASC;
SELECT SUM(count) FROM (SELECT (((+ (-1e500))) IS TRUE)  as count FROM vt1, t0 ORDER BY LIKE(((vt1.c0) IS FALSE), t0.c0, 'ᳲ') ASC);
SELECT ALL * FROM vt1, t0 WHERE ((+ (-1e500))) ORDER BY LIKE(((vt1.c0) IS FALSE), t0.c0, 'ᳲ') ASC;
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((~ (NULL)))OR(TYPEOF(DISTINCT vt1.c0))))OR((NULL IN ()))) DESC, vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((((~ (NULL)))OR(TYPEOF(DISTINCT vt1.c0))))OR((NULL IN ()))) DESC, vt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((~ (NULL)))OR(TYPEOF(DISTINCT vt1.c0))))OR((NULL IN ()))) DESC, vt1.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1 ORDER BY (((((~ (NULL)))OR(TYPEOF(DISTINCT vt1.c0))))OR((NULL IN ()))) DESC, vt1.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((NOT (CAST(vt1.c0 AS INTEGER)))) ORDER BY (((((~ (NULL)))OR(TYPEOF(DISTINCT vt1.c0))))OR((NULL IN ()))) DESC, vt1.c1 ASC  NULLS LAST;
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), (((t0.c0))>((vt1.c0))), NULL, (vt1.c0 IN ()), ((((t0.c0)AND(NULL)))AND(vt1.c1)))) AND ((((((vt1.c1)AND('949788542')))OR('0.4471667220164294')), NULL COLLATE RTRIM, (vt0.c0 IN ()), (NOT (t0.c0)), ((vt0.c0)<(vt0.c0))))) CROSS JOIN t0 ON CAST(((vt0.c0) BETWEEN (x'4620') AND (vt0.c1)) AS NUMERIC) WHERE ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ORDER BY ((((t0.c0)<(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), (((t0.c0))>((vt1.c0))), NULL, (vt1.c0 IN ()), ((((t0.c0)AND(NULL)))AND(vt1.c1)))) AND ((((((vt1.c1)AND('949788542')))OR('0.4471667220164294')), NULL COLLATE RTRIM, (vt0.c0 IN ()), (NOT (t0.c0)), ((vt0.c0)<(vt0.c0))))) CROSS JOIN t0 ON CAST(((vt0.c0) BETWEEN (x'4620') AND (vt0.c1)) AS NUMERIC) ORDER BY ((((t0.c0)<(vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), (((t0.c0))>((vt1.c0))), NULL, (vt1.c0 IN ()), ((((t0.c0)AND(NULL)))AND(vt1.c1)))) AND ((((((vt1.c1)AND('949788542')))OR('0.4471667220164294')), NULL COLLATE RTRIM, (vt0.c0 IN ()), (NOT (t0.c0)), ((vt0.c0)<(vt0.c0))))) CROSS JOIN t0 ON CAST(((vt0.c0) BETWEEN (x'4620') AND (vt0.c1)) AS NUMERIC) WHERE ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ORDER BY ((((t0.c0)<(vt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (((vt1.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), (((t0.c0))>((vt1.c0))), NULL, (vt1.c0 IN ()), ((((t0.c0)AND(NULL)))AND(vt1.c1)))) AND ((((((vt1.c1)AND('949788542')))OR('0.4471667220164294')), NULL COLLATE RTRIM, (vt0.c0 IN ()), (NOT (t0.c0)), ((vt0.c0)<(vt0.c0))))) CROSS JOIN t0 ON CAST(((vt0.c0) BETWEEN (x'4620') AND (vt0.c1)) AS NUMERIC) ORDER BY ((((t0.c0)<(vt0.c0))) IS TRUE));
SELECT * FROM vt0 INNER JOIN vt1 ON (((vt1.c1, vt0.c0, vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN (((t0.c0 IN (t0.c0)), (((t0.c0))>((vt1.c0))), NULL, (vt1.c0 IN ()), ((((t0.c0)AND(NULL)))AND(vt1.c1)))) AND ((((((vt1.c1)AND('949788542')))OR('0.4471667220164294')), NULL COLLATE RTRIM, (vt0.c0 IN ()), (NOT (t0.c0)), ((vt0.c0)<(vt0.c0))))) CROSS JOIN t0 ON CAST(((vt0.c0) BETWEEN (x'4620') AND (vt0.c1)) AS NUMERIC) WHERE ((((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) ORDER BY ((((t0.c0)<(vt0.c0))) IS TRUE);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c1)=(x'05d4')) AS REAL) WHERE ('mdv-H') ORDER BY '' DESC, ((vt0.c1 IN ()) IN ()), DATE((((x'8c12'))<=((t0.c0))), (((t0.c0))>((t0.c0))), (NULL IN (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('mdv-H') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c1)==(x'05d4')) AS REAL) ORDER BY '' DESC, ((vt0.c1 IN ()) IN ()), DATE((((x'8c12'))<=((t0.c0))), (((t0.c0))>((t0.c0))), (NULL IN (t0.c0)))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c1)=(x'05d4')) AS REAL) WHERE ('mdv-H') ORDER BY '' DESC, ((vt0.c1 IN ()) IN ()), DATE((((x'8c12'))<=((t0.c0))), (((t0.c0))>((t0.c0))), (NULL IN (t0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('mdv-H') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c1)==(x'05d4')) AS REAL) ORDER BY '' DESC, ((vt0.c1 IN ()) IN ()), DATE((((x'8c12'))<=((t0.c0))), (((t0.c0))>((t0.c0))), (NULL IN (t0.c0)))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON CAST(((vt0.c1)=(x'05d4')) AS REAL) WHERE ('mdv-H') ORDER BY '' DESC, ((vt0.c1 IN ()) IN ()), DATE((((x'8c12'))<=((t0.c0))), (((t0.c0))>((t0.c0))), (NULL IN (t0.c0)))  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE ((((vt1.c1 IN ()))IS(LOWER(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))IS(LOWER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c1 IN ()))IS(LOWER(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))IS(LOWER(DISTINCT t0.c0)))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((vt1.c1 IN ()))IS(LOWER(DISTINCT t0.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c0))))GLOB(((vt1.c1)-(vt1.c1)))) WHERE (((((t0.c0) NOT BETWEEN ('1769104459') AND (vt0.c0)))>(((((vt1.c0)OR(-1.65570706E9)))OR(t0.c0))))) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN ('1769104459') AND (vt0.c0)))>(((((vt1.c0)OR(-1.65570706E9)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c0))))GLOB(((vt1.c1)-(vt1.c1)))) ORDER BY ((vt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c0))))GLOB(((vt1.c1)-(vt1.c1)))) WHERE (((((t0.c0) NOT BETWEEN ('1769104459') AND (vt0.c0)))>(((((vt1.c0)OR(-1.65570706E9)))OR(t0.c0))))) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN ('1769104459') AND (vt0.c0)))>(((((vt1.c0)OR(-1.65570706E9)))OR(t0.c0))))) IS TRUE)  as count FROM vt0, t0 INNER JOIN vt1 ON (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c0))))GLOB(((vt1.c1)-(vt1.c1)))) ORDER BY ((vt0.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM vt0, t0 INNER JOIN vt1 ON (((((t0.c0, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt1.c1)) AND ((t0.c0, t0.c0, vt1.c0))))GLOB(((vt1.c1)-(vt1.c1)))) WHERE (((((t0.c0) NOT BETWEEN ('1769104459') AND (vt0.c0)))>(((((vt1.c0)OR(-1.65570706E9)))OR(t0.c0))))) ORDER BY ((vt0.c1 IN ()) IN ());
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 CROSS JOIN t0 ON NULL WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN ((vt1.c1)<=(vt0.c1)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END ELSE (-496357143 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN ((vt1.c1)<=(vt0.c1)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END ELSE (-496357143 IN ()) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 CROSS JOIN t0 ON NULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 CROSS JOIN t0 ON NULL WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN ((vt1.c1)<=(vt0.c1)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END ELSE (-496357143 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN ((vt1.c1)<=(vt0.c1)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END ELSE (-496357143 IN ()) END) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON vt0.c0 CROSS JOIN t0 ON NULL);
SELECT * FROM vt0 CROSS JOIN vt1 ON vt0.c0 CROSS JOIN t0 ON NULL WHERE (CASE WHEN (NOT (vt0.c0)) THEN ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))AND(vt1.c0)) WHEN vt0.c1 THEN vt0.c1 WHEN ((vt1.c1)<=(vt0.c1)) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 END ELSE (-496357143 IN ()) END);
SELECT * FROM vt0, t0, vt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((vt1.c1)AND(t0.c0))) AND ((+ (t0.c0))))) ORDER BY CASE (~ (NULL))  WHEN TRIM(t0.c0) THEN CASE WHEN vt0.c1 THEN vt1.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((vt1.c1)AND(t0.c0))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE (~ (NULL))  WHEN TRIM(t0.c0) THEN CASE WHEN vt0.c1 THEN vt1.c1 END END ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((vt1.c1)AND(t0.c0))) AND ((+ (t0.c0))))) ORDER BY CASE (~ (NULL))  WHEN TRIM(t0.c0) THEN CASE WHEN vt0.c1 THEN vt1.c1 END END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) BETWEEN (((vt1.c1)AND(t0.c0))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY CASE (~ (NULL))  WHEN TRIM(t0.c0) THEN CASE WHEN vt0.c1 THEN vt1.c1 END END ASC  NULLS LAST);
SELECT * FROM vt0, t0, vt1 WHERE (((((vt0.c0) IS TRUE)) BETWEEN (((vt1.c1)AND(t0.c0))) AND ((+ (t0.c0))))) ORDER BY CASE (~ (NULL))  WHEN TRIM(t0.c0) THEN CASE WHEN vt0.c1 THEN vt1.c1 END END ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN t0.c0 END)IS NOT(((vt1.c0)>>(t0.c0)))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN t0.c0 END)IS NOT(((vt1.c0)>>(t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN t0.c0 END)IS NOT(((vt1.c0)>>(t0.c0)))) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN t0.c0 END)IS NOT(((vt1.c0)>>(t0.c0)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '' RIGHT OUTER JOIN vt1 ON ((CASE WHEN vt0.c1 THEN t0.c0 END)IS NOT(((vt1.c0)>>(t0.c0)))) WHERE (vt0.c1);
SELECT ALL * FROM t0, vt1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM t0, vt1 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS INTEGER) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (CAST(t0.c0 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY((vt0.c1 IN (0.697794401842716, vt0.c0)))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((vt0.c1 IN (0.697794401842716, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY((vt0.c1 IN (0.697794401842716, vt0.c0)))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((vt0.c1 IN (0.697794401842716, vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (UNLIKELY((vt0.c1 IN (0.697794401842716, vt0.c0)))) ORDER BY CAST(t0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c1)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c1)) THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c1)) THEN vt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c1)) THEN vt1.c0 END) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (CASE WHEN ((((vt1.c0)AND(t0.c0)))AND(vt1.c1)) THEN vt1.c0 END);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((vt1.c0 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))))AND(0.6608060289502298)))AND(CASE WHEN vt0.c1 THEN 102962605 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((UNLIKELY(vt0.c1)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))) AND (((vt1.c1) IS TRUE)))  NULLS FIRST, ((((t0.c0 COLLATE RTRIM)OR(0Xfffffffffcbd8c06)))AND(0.11607933225567069)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))))AND(0.6608060289502298)))AND(CASE WHEN vt0.c1 THEN 102962605 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((UNLIKELY(vt0.c1)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))) AND (((vt1.c1) IS TRUE)))  NULLS FIRST, ((((t0.c0 COLLATE RTRIM)OR(0xfffffffffcbd8c06)))AND(0.11607933225567069)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((vt1.c0 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))))AND(0.6608060289502298)))AND(CASE WHEN vt0.c1 THEN 102962605 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((UNLIKELY(vt0.c1)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))) AND (((vt1.c1) IS TRUE)))  NULLS FIRST, ((((t0.c0 COLLATE RTRIM)OR(0Xfffffffffcbd8c06)))AND(0.11607933225567069)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((vt1.c0 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))))AND(0.6608060289502298)))AND(CASE WHEN vt0.c1 THEN 102962605 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0)))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY ((UNLIKELY(vt0.c1)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))) AND (((vt1.c1) IS TRUE)))  NULLS FIRST, ((((t0.c0 COLLATE RTRIM)OR(0xfffffffffcbd8c06)))AND(0.11607933225567069)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((((((((vt1.c0 IN ()))OR(((((((((((((vt0.c1)AND(vt1.c0)))AND(t0.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))))AND(0.6608060289502298)))AND(CASE WHEN vt0.c1 THEN 102962605 WHEN t0.c0 THEN vt0.c1 WHEN x'' THEN vt1.c1 ELSE vt1.c1 END)))AND(SQLITE_COMPILEOPTION_USED(vt0.c0)))) ORDER BY ((UNLIKELY(vt0.c1)) BETWEEN (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1))) AND (((vt1.c1) IS TRUE)))  NULLS FIRST, ((((t0.c0 COLLATE RTRIM)OR(0Xfffffffffcbd8c06)))AND(0.11607933225567069)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) INNER JOIN vt0 ON CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB) WHERE (((((((vt1.c1) NOTNULL))OR(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))OR(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) INNER JOIN vt0 ON CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) INNER JOIN vt0 ON CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB) WHERE (((((((vt1.c1) NOTNULL))OR(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(t0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c1) NOTNULL))OR(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) INNER JOIN vt0 ON CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt1 ON (NOT (CASE t0.c0  WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) INNER JOIN vt0 ON CAST((vt1.c0 IN (vt1.c1, vt1.c0)) AS BLOB) WHERE (((((((vt1.c1) NOTNULL))OR(CASE WHEN vt1.c1 THEN vt0.c0 ELSE vt0.c1 END)))OR(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((x'50bc')AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1))) AND (((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((x'50bc')AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1))) AND (((((t0.c0)OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((x'50bc')AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1))) AND (((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((x'50bc')AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1))) AND (((((t0.c0)OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c0)AND(t0.c0)))AND(vt1.c0))) NOT BETWEEN (((((((((x'50bc')AND(vt1.c1)))AND(vt1.c1)))OR(t0.c0)))AND(vt1.c1))) AND (((((t0.c0)OR(vt1.c1)))OR(vt1.c1)))));
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c1) ORDER BY 0.19938133899558552;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.19938133899558552);
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c1) ORDER BY 0.19938133899558552;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY 0.19938133899558552);
SELECT * FROM vt0, t0, vt1 WHERE (vt1.c1) ORDER BY 0.19938133899558552;
SELECT COUNT(*) FROM vt0 WHERE (((0.3321620382537125) ISNULL)) ORDER BY vt0.c0, ((0x75a6d1cd COLLATE BINARY) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.3321620382537125) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((0X75a6d1cd COLLATE BINARY) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((0.3321620382537125) ISNULL)) ORDER BY vt0.c0, ((0x75a6d1cd COLLATE BINARY) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((0.3321620382537125) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, ((0X75a6d1cd COLLATE BINARY) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((0.3321620382537125) ISNULL)) ORDER BY vt0.c0, ((0x75a6d1cd COLLATE BINARY) BETWEEN (vt0.c1 COLLATE RTRIM) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND ('512609674')))) ORDER BY ((vt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND ('512609674')))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((vt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND ('512609674')))) ORDER BY ((vt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND ('512609674')))) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((vt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (UNLIKELY(DISTINCT ((vt1.c1) BETWEEN (vt1.c0) AND ('512609674')))) ORDER BY ((vt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((((((((LIKELIHOOD(vt0.c1, 0.47627938913707435))OR((((t0.c0, vt0.c1, x'', t0.c0, vt0.c1))=((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0))))AND((NOT (t0.c0)))))AND(((vt0.c1)<<(vt0.c1)))))OR((vt0.c1 IN ()))))OR(CAST(NULL AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((LIKELIHOOD(vt0.c1, 0.47627938913707435))OR((((t0.c0, vt0.c1, x'', t0.c0, vt0.c1))==((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0))))AND((NOT (t0.c0)))))AND(((vt0.c1)<<(vt0.c1)))))OR((vt0.c1 IN ()))))OR(CAST(NULL AS REAL))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((((((((LIKELIHOOD(vt0.c1, 0.47627938913707435))OR((((t0.c0, vt0.c1, x'', t0.c0, vt0.c1))=((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0))))AND((NOT (t0.c0)))))AND(((vt0.c1)<<(vt0.c1)))))OR((vt0.c1 IN ()))))OR(CAST(NULL AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((((LIKELIHOOD(vt0.c1, 0.47627938913707435))OR((((t0.c0, vt0.c1, x'', t0.c0, vt0.c1))==((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0))))AND((NOT (t0.c0)))))AND(((vt0.c1)<<(vt0.c1)))))OR((vt0.c1 IN ()))))OR(CAST(NULL AS REAL))) DESC);
SELECT ALL * FROM t0, vt0 WHERE (x'') ORDER BY ((((((((((((LIKELIHOOD(vt0.c1, 0.47627938913707435))OR((((t0.c0, vt0.c1, x'', t0.c0, vt0.c1))=((vt0.c0, t0.c0, vt0.c0, vt0.c0, vt0.c0))))))AND(COALESCE(vt0.c0, vt0.c0))))AND((NOT (t0.c0)))))AND(((vt0.c1)<<(vt0.c1)))))OR((vt0.c1 IN ()))))OR(CAST(NULL AS REAL))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt0.c0) ORDER BY ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) ISNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (TIME((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, HEX(vt0.c1), (('1548641412') ISNULL))) ORDER BY CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0x1912a0f1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) NOT NULL) END, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((TIME((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, HEX(vt0.c1), (('1548641412') ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0x1912a0f1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) NOT NULL) END, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c1 IN ()) END ASC);
SELECT * FROM vt0 WHERE (TIME((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, HEX(vt0.c1), (('1548641412') ISNULL))) ORDER BY CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0x1912a0f1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) NOT NULL) END, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c1 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ((TIME((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, HEX(vt0.c1), (('1548641412') ISNULL))) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0x1912a0f1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) NOT NULL) END, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c1 IN ()) END ASC);
SELECT * FROM vt0 WHERE (TIME((vt0.c0 IN ()), CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, HEX(vt0.c1), (('1548641412') ISNULL))) ORDER BY CASE vt0.c0  WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (0x1912a0f1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((vt0.c1) NOT NULL) END, CASE WHEN (((vt0.c0))>=((vt0.c1))) THEN (vt0.c1 IN (vt0.c0)) WHEN (- (vt0.c0)) THEN ((x'') BETWEEN (vt0.c1) AND (vt0.c1)) WHEN ((vt0.c1)>(vt0.c0)) THEN (vt0.c1 IN ()) END ASC;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(LTRIM(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(LTRIM(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(LTRIM(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(LTRIM(vt1.c1)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0 COLLATE RTRIM)AND(CAST(vt0.c0 AS NUMERIC))))AND(LTRIM(vt1.c1))));
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST(CAST(vt0.c1 AS NUMERIC) AS INTEGER));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'8d40') NOT NULL) WHERE ((INSTR(vt0.c0, t0.c0) IN ())) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE, ((vt0.c1)+(CASE t0.c0  WHEN vt0.c1 THEN 'K⬂m' END));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((x'8d40') NOT NULL) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE, ((vt0.c1)+(CASE t0.c0  WHEN vt0.c1 THEN 'K⬂m' END)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'8d40') NOT NULL) WHERE ((INSTR(vt0.c0, t0.c0) IN ())) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE, ((vt0.c1)+(CASE t0.c0  WHEN vt0.c1 THEN 'K⬂m' END));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((x'8d40') NOT NULL) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE, ((vt0.c1)+(CASE t0.c0  WHEN vt0.c1 THEN 'K⬂m' END)));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((x'8d40') NOT NULL) WHERE ((INSTR(vt0.c0, t0.c0) IN ())) ORDER BY CAST(t0.c0 AS NUMERIC) COLLATE RTRIM COLLATE NOCASE, ((vt0.c1)+(CASE t0.c0  WHEN vt0.c1 THEN 'K⬂m' END));
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(NULL))) NOT NULL)) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND ('ᣗ)W*fU>mラ'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(NULL))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND ('ᣗ)W*fU>mラ')))));
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(NULL))) NOT NULL)) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND ('ᣗ)W*fU>mラ'))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(NULL))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND ('ᣗ)W*fU>mラ')))));
SELECT * FROM vt1 WHERE (((((vt1.c1)AND(NULL))) NOT NULL)) ORDER BY (+ (((vt1.c1) BETWEEN (vt1.c1) AND ('ᣗ)W*fU>mラ'))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((LIKELIHOOD(vt0.c1, 0.5339540990614183)) NOTNULL)) ORDER BY -511578512  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c1, 0.5339540990614183)) NOTNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY -511578512  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((LIKELIHOOD(vt0.c1, 0.5339540990614183)) NOTNULL)) ORDER BY -511578512  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(vt0.c1, 0.5339540990614183)) NOTNULL)) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY -511578512  NULLS FIRST);
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)=(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)==(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)=(vt1.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)==(vt1.c1))) NOT NULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE (((((t0.c0)=(vt1.c1))) NOT NULL));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))&(x'365f')) CROSS JOIN vt0 ON ((json_quote(t0.c0)) NOT NULL) WHERE ((((HEX(DISTINCT vt1.c0)))>=((((t0.c0) NOTNULL))))) ORDER BY -994197046, ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))LIKE((- (vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt1.c0)))>=((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))&(x'365f')) CROSS JOIN vt0 ON ((json_quote(t0.c0)) NOT NULL) ORDER BY -994197046, ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))LIKE((- (vt1.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))&(x'365f')) CROSS JOIN vt0 ON ((json_quote(t0.c0)) NOT NULL) WHERE ((((HEX(DISTINCT vt1.c0)))>=((((t0.c0) NOTNULL))))) ORDER BY -994197046, ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))LIKE((- (vt1.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((HEX(DISTINCT vt1.c0)))>=((((t0.c0) NOTNULL))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))&(x'365f')) CROSS JOIN vt0 ON ((json_quote(t0.c0)) NOT NULL) ORDER BY -994197046, ((((t0.c0) NOT BETWEEN (vt1.c1) AND (vt0.c1)))LIKE((- (vt1.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) IS FALSE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(t0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)) ORDER BY 'Lnho' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) IS FALSE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(t0.c0)))) ORDER BY 'Lnho' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) IS FALSE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(t0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)) ORDER BY 'Lnho' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) IS FALSE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(t0.c0)))) ORDER BY 'Lnho' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t0 ON ((((vt0.c1) IS FALSE)) NOT BETWEEN ((vt0.c0 IN ())) AND (((((((((vt0.c1)AND(vt1.c1)))AND(t0.c0)))OR(vt1.c1)))AND(t0.c0)))) WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c1)) AS REAL)) ORDER BY 'Lnho' DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (LIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(vt1.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (LIKELY(vt1.c1))));
SELECT SUM(count) FROM (SELECT (((NOT (LIKELY(vt1.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON vt0.c1 WHERE ((NOT (LIKELY(vt1.c1))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (((x'') IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)<((((vt1.c0, t0.c0, vt0.c1))<((t0.c0, vt1.c0, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)<((((vt1.c0, t0.c0, vt0.c1))<((t0.c0, vt1.c0, vt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((x'') IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)<((((vt1.c0, t0.c0, vt0.c1))<((t0.c0, vt1.c0, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)<((((vt1.c0, t0.c0, vt0.c1))<((t0.c0, vt1.c0, vt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((x'') IS FALSE)) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c1 END)<((((vt1.c0, t0.c0, vt0.c1))<((t0.c0, vt1.c0, vt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('XPon2') ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'e3d6' THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (-2121816408)) DESC;
SELECT SUM(count) FROM (SELECT (('XPon2') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'e3d6' THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (-2121816408)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('XPon2') ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'e3d6' THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (-2121816408)) DESC;
SELECT SUM(count) FROM (SELECT (('XPon2') IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'e3d6' THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (-2121816408)) DESC);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE ('XPon2') ORDER BY ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt1.c1 THEN vt1.c1 WHEN x'e3d6' THEN vt1.c0 END) NOT BETWEEN (((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))) AND (-2121816408)) DESC;
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL * FROM vt1, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0, t0 WHERE (HEX(vt0.c1) COLLATE RTRIM) ORDER BY x'3e39';
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY x'3e39');
SELECT ALL * FROM vt0, t0 WHERE (HEX(vt0.c1) COLLATE RTRIM) ORDER BY x'3e39';
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY x'3e39');
SELECT ALL * FROM vt0, t0 WHERE (HEX(vt0.c1) COLLATE RTRIM) ORDER BY x'3e39';
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0)));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0));
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0)));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))AND((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))))) ORDER BY ((t0.c0) NOT BETWEEN ((t0.c0 IN ())) AND (t0.c0));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE)>(((vt1.c1)IS NOT(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>(((vt1.c1)IS NOT(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE)>(((vt1.c1)IS NOT(NULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE)>(((vt1.c1)IS NOT(NULL))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)) AS TEXT)) ORDER BY ((vt1.c0 COLLATE NOCASE)>(((vt1.c1)IS NOT(NULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE (((t0.c0))>((vt1.c0)))  WHEN x'e8a9' COLLATE RTRIM THEN CASE '420651249'  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c1 END ELSE ((vt0.c1) ISNULL) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, ((vt1.c0)*(vt1.c0)), '-1655707060')) AND ((CASE WHEN vt0.c0 THEN vt1.c0 END, LIKE(vt0.c1, vt0.c0, 'U'), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0))>((vt1.c0)))  WHEN x'e8a9' COLLATE RTRIM THEN CASE '420651249'  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c1 END ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, ((vt1.c0)*(vt1.c0)), '-1655707060')) AND ((CASE WHEN vt0.c0 THEN vt1.c0 END, LIKE(vt0.c1, vt0.c0, 'U'), NULL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE (((t0.c0))>((vt1.c0)))  WHEN x'e8a9' COLLATE RTRIM THEN CASE '420651249'  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c1 END ELSE ((vt0.c1) ISNULL) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, ((vt1.c0)*(vt1.c0)), '-1655707060')) AND ((CASE WHEN vt0.c0 THEN vt1.c0 END, LIKE(vt0.c1, vt0.c0, 'U'), NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((t0.c0))>((vt1.c0)))  WHEN x'e8a9' COLLATE RTRIM THEN CASE '420651249'  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c1 END ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, ((vt1.c0)*(vt1.c0)), '-1655707060')) AND ((CASE WHEN vt0.c0 THEN vt1.c0 END, LIKE(vt0.c1, vt0.c0, 'U'), NULL))));
SELECT ALL * FROM vt1, vt0, t0 WHERE (CASE (((t0.c0))>((vt1.c0)))  WHEN x'e8a9' COLLATE RTRIM THEN CASE '420651249'  WHEN t0.c0 THEN vt0.c0 ELSE vt1.c1 END ELSE ((vt0.c1) ISNULL) END) ORDER BY (((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((vt1.c1, ((vt1.c0)*(vt1.c0)), '-1655707060')) AND ((CASE WHEN vt0.c0 THEN vt1.c0 END, LIKE(vt0.c1, vt0.c0, 'U'), NULL)));
SELECT ALL * FROM vt1, t0 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1, t0 ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 WHERE ((- (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) ORDER BY ((t0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)) COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ABS(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)) WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)) ORDER BY (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)) WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)) ORDER BY (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))IS NOT(CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END)) WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS REAL)) ORDER BY (((vt0.c0 IN ()))&(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt0.c1 AS REAL)))>=((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS REAL)))>=((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt0.c1 AS REAL)))>=((CAST(t0.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS REAL)))>=((CAST(t0.c0 AS REAL))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE ((((CAST(vt0.c1 AS REAL)))>=((CAST(t0.c0 AS REAL)))));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)-(vt1.c1))) BETWEEN ((vt1.c1 IN ())) AND (((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c1))) BETWEEN ((vt1.c1 IN ())) AND (((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)-(vt1.c1))) BETWEEN ((vt1.c1 IN ())) AND (((t0.c0)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c1))) BETWEEN ((vt1.c1 IN ())) AND (((t0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (((((vt1.c0)-(vt1.c1))) BETWEEN ((vt1.c1 IN ())) AND (((t0.c0)%(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((~ (NULL)))))) ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((~ (NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((~ (NULL)))))) ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((~ (NULL)))))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((((vt0.c0)) NOT BETWEEN (((vt0.c1 IN (vt0.c0)))) AND (((~ (NULL)))))) ORDER BY (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS FIRST, ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND ((+ (vt0.c1))))  NULLS LAST;
SELECT * FROM t0 NATURAL JOIN vt1 WHERE ((~ ('(&_䈽&')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('(&_䈽&'))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE ((~ ('(&_䈽&')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('(&_䈽&'))) IS TRUE)  as count FROM t0 NATURAL JOIN vt1);
SELECT * FROM t0 NATURAL JOIN vt1 WHERE ((~ ('(&_䈽&')));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) IN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)));
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 END))>((((vt1.c1)+(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c1 END))>((((vt1.c1)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 END))>((((vt1.c1)+(vt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt1.c1 THEN vt1.c1 END))>((((vt1.c1)+(vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((((CASE WHEN vt1.c1 THEN vt1.c1 END))>((((vt1.c1)+(vt1.c0))))));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((ROUND(x'', vt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(x'', vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((ROUND(x'', vt1.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(x'', vt1.c0)) NOT NULL)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((ROUND(x'', vt1.c0)) NOT NULL));
SELECT ALL * FROM vt0, vt1 WHERE ((0.201902811248292 IN ()));
SELECT SUM(count) FROM (SELECT (((0.201902811248292 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((0.201902811248292 IN ()));
SELECT SUM(count) FROM (SELECT (((0.201902811248292 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE ((0.201902811248292 IN ()));
SELECT * FROM t0, vt1, vt0 WHERE (COALESCE(vt1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0)=(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0)==(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE));
SELECT * FROM t0, vt1, vt0 WHERE (COALESCE(vt1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0)=(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0)==(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE));
SELECT * FROM t0, vt1, vt0 WHERE (COALESCE(vt1.c0 COLLATE NOCASE, CASE vt0.c0  WHEN vt1.c1 THEN vt1.c0 ELSE vt0.c1 END, ((vt0.c0)=(vt0.c1)), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY ((CAST(t0.c0 AS INTEGER)) IS TRUE);
SELECT * FROM vt1, t0 WHERE (DATETIME(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((t0.c0)IS NOT(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((t0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (DATETIME(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((t0.c0)IS NOT(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((t0.c0)IS NOT(t0.c0)))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (DATETIME(((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)), (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((t0.c0)IS NOT(t0.c0))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((x'')) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((x'')) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) ISNULL) IN ()));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) BETWEEN ((x'')) AND ((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY (((vt0.c0) ISNULL) IN ());
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((+ (0.5156539740974867)));
SELECT SUM(count) FROM (SELECT (((+ (0.5156539740974867))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((+ (0.5156539740974867)));
SELECT SUM(count) FROM (SELECT (((+ (0.5156539740974867))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED WHERE ((+ (0.5156539740974867)));
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN json(vt1.c0) THEN ((vt1.c1)/(vt1.c1)) ELSE ((vt1.c0)GLOB(0.7499488186718972)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(vt1.c0) THEN ((vt1.c1)/(vt1.c1)) ELSE ((vt1.c0)GLOB(0.7499488186718972)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 WHERE (CASE WHEN json(vt1.c0) THEN ((vt1.c1)/(vt1.c1)) ELSE ((vt1.c0)GLOB(0.7499488186718972)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN json(vt1.c0) THEN ((vt1.c1)/(vt1.c1)) ELSE ((vt1.c0)GLOB(0.7499488186718972)) END) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c1, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c1))) IN ('0.304708427747691')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1, vt1.c1, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c1))) IN ('0.304708427747691'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c1, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c1))) IN ('0.304708427747691')));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1, vt1.c1, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c1))) IN ('0.304708427747691'))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1, vt1.c1, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c1))) IN ('0.304708427747691')));
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- ((NOT (vt1.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (x'633a');
SELECT SUM(count) FROM (SELECT ((x'633a') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'633a');
SELECT SUM(count) FROM (SELECT ((x'633a') IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (x'633a');
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt1.c0) IS TRUE)))  NULLS FIRST, UNLIKELY((NOT (vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt1.c0) IS TRUE)))  NULLS FIRST, UNLIKELY((NOT (vt1.c1))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt1.c0) IS TRUE)))  NULLS FIRST, UNLIKELY((NOT (vt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt1.c0) IS TRUE)))  NULLS FIRST, UNLIKELY((NOT (vt1.c1))) DESC);
SELECT COUNT(*) FROM vt1, vt0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))OR(((vt1.c0) IS TRUE)))  NULLS FIRST, UNLIKELY((NOT (vt1.c1))) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (0xffffffffc0937ff4) AND (vt0.c1)) THEN (((vt0.c0))<((vt0.c1))) WHEN ((vt0.c0)%(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ('512609674' IN ()) THEN x'' ELSE (((0.18694990323364902)) NOT BETWEEN ((0.5092057253986361)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (0Xffffffffc0937ff4) AND (vt0.c1)) THEN (((vt0.c0))<((vt0.c1))) WHEN ((vt0.c0)%(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ('512609674' IN ()) THEN x'' ELSE (((0.18694990323364902)) NOT BETWEEN ((0.5092057253986361)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (0xffffffffc0937ff4) AND (vt0.c1)) THEN (((vt0.c0))<((vt0.c1))) WHEN ((vt0.c0)%(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ('512609674' IN ()) THEN x'' ELSE (((0.18694990323364902)) NOT BETWEEN ((0.5092057253986361)) AND ((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (0Xffffffffc0937ff4) AND (vt0.c1)) THEN (((vt0.c0))<((vt0.c1))) WHEN ((vt0.c0)%(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ('512609674' IN ()) THEN x'' ELSE (((0.18694990323364902)) NOT BETWEEN ((0.5092057253986361)) AND ((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (0xffffffffc0937ff4) AND (vt0.c1)) THEN (((vt0.c0))<((vt0.c1))) WHEN ((vt0.c0)%(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) WHEN ('512609674' IN ()) THEN x'' ELSE (((0.18694990323364902)) NOT BETWEEN ((0.5092057253986361)) AND ((vt0.c1))) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c0 IN (t0.c0)))OR((~ (vt0.c0)))))AND(RTRIM(t0.c0))))OR((+ (t0.c0)))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN (t0.c0)))OR((~ (vt0.c0)))))AND(RTRIM(t0.c0))))OR((+ (t0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c0 IN (t0.c0)))OR((~ (vt0.c0)))))AND(RTRIM(t0.c0))))OR((+ (t0.c0)))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c0 IN (t0.c0)))OR((~ (vt0.c0)))))AND(RTRIM(t0.c0))))OR((+ (t0.c0)))))AND(vt0.c1))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((((((t0.c0 IN (t0.c0)))OR((~ (vt0.c0)))))AND(RTRIM(t0.c0))))OR((+ (t0.c0)))))AND(vt0.c1)));
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TOTAL_CHANGES()))) ORDER BY load_extension(vt0.c1, t0.c0) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY load_extension(vt0.c1, t0.c0) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TOTAL_CHANGES()))) ORDER BY load_extension(vt0.c1, t0.c0) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY load_extension(vt0.c1, t0.c0) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL * FROM vt1, vt0, t0 WHERE (((vt0.c0) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (TOTAL_CHANGES()))) ORDER BY load_extension(vt0.c1, t0.c0) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC, (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC, (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC, (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC, (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT ((t0.c0 IN ())))) ORDER BY (((t0.c0)>=(t0.c0)) IN ()) DESC, (((((t0.c0 IN ()))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE '' END)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, t0 NOT INDEXED, vt0 WHERE ((((vt1.c1)GLOB(vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'0fa8' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY 1372222571  NULLS LAST, (~ (((vt1.c1)+(t0.c0)))), (((vt1.c0)) BETWEEN (((((t0.c0))<=((t0.c0))))) AND (((((0.727898125677898, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0, vt1.c1, vt1.c1)) AND (('1173081346', 0.9825594223353737, vt1.c0, t0.c0, vt1.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)GLOB(vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'0fa8' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 1372222571  NULLS LAST, (~ (((vt1.c1)+(t0.c0)))), (((vt1.c0)) BETWEEN (((((t0.c0))<=((t0.c0))))) AND (((((0.727898125677898, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0, vt1.c1, vt1.c1)) AND (('1173081346', 0.9825594223353737, vt1.c0, t0.c0, vt1.c1))))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0 NOT INDEXED, vt0 WHERE ((((vt1.c1)GLOB(vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'0fa8' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) ORDER BY 1372222571  NULLS LAST, (~ (((vt1.c1)+(t0.c0)))), (((vt1.c0)) BETWEEN (((((t0.c0))<=((t0.c0))))) AND (((((0.727898125677898, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0, vt1.c1, vt1.c1)) AND (('1173081346', 0.9825594223353737, vt1.c0, t0.c0, vt1.c1))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)GLOB(vt0.c0)) IN (CASE vt1.c0  WHEN vt1.c0 THEN x'0fa8' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY 1372222571  NULLS LAST, (~ (((vt1.c1)+(t0.c0)))), (((vt1.c0)) BETWEEN (((((t0.c0))<=((t0.c0))))) AND (((((0.727898125677898, vt0.c0, vt1.c0, vt0.c1, vt1.c0)) BETWEEN ((vt0.c0, t0.c0, vt0.c0, vt1.c1, vt1.c1)) AND (('1173081346', 0.9825594223353737, vt1.c0, t0.c0, vt1.c1))))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY LIKE(((vt0.c0) NOTNULL), ((vt0.c1)OR(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LIKE(((vt0.c0) NOTNULL), ((vt0.c1)OR(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY LIKE(((vt0.c0) NOTNULL), ((vt0.c1)OR(vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY LIKE(((vt0.c0) NOTNULL), ((vt0.c1)OR(vt1.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) AS NUMERIC)) ORDER BY LIKE(((vt0.c0) NOTNULL), ((vt0.c1)OR(vt1.c0)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS TEXT) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((CAST(vt1.c0 AS TEXT) IN ()));
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.32088238203639086 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.32088238203639086 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.32088238203639086 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.32088238203639086 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE (0.32088238203639086 COLLATE RTRIM);
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt0.c1)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt0.c1)<<(vt0.c1))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) AND (((vt0.c1)<<(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE NOCASE))) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c1 END))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY (((~ (vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY (((~ (vt0.c1))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c1))) ISNULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY (((~ (vt0.c1))) ISNULL)  NULLS LAST;
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON (NOT (((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) WHERE (NULL);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) ORDER BY 0.2105893814980564;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.2105893814980564);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) ORDER BY 0.2105893814980564;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.2105893814980564);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c0)AND(vt0.c0)))OR(vt0.c0))) NOTNULL)) ORDER BY 0.2105893814980564;
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, CAST(((vt1.c1)||(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, CAST(((vt1.c1)||(vt1.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, CAST(((vt1.c1)||(vt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, CAST(((vt1.c1)||(vt1.c0)) AS REAL)  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (vt0.c1) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (CAST(vt1.c0 AS BLOB)))  NULLS LAST, CAST(((vt1.c1)||(vt1.c0)) AS REAL)  NULLS LAST;
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON ((CASE '-1354301732'  WHEN t0.c0 THEN vt0.c0 END)<=((NOT (vt0.c0)))) WHERE (load_extension(((((NULL)AND(vt1.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((NULL)AND(vt1.c0)))AND(t0.c0)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((CASE '-1354301732'  WHEN t0.c0 THEN vt0.c0 END)<=((NOT (vt0.c0)))));
SELECT ALL * FROM vt1, t0 CROSS JOIN vt0 ON ((CASE '-1354301732'  WHEN t0.c0 THEN vt0.c0 END)<=((NOT (vt0.c0)))) WHERE (load_extension(((((NULL)AND(vt1.c0)))AND(t0.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension(((((NULL)AND(vt1.c0)))AND(t0.c0)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON ((CASE '-1354301732'  WHEN t0.c0 THEN vt0.c0 END)<=((NOT (vt0.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (CAST(CASE WHEN vt1.c0 THEN vt1.c0 END AS INTEGER));
SELECT COUNT(*) FROM vt0 WHERE ((+ (NULLIF(vt0.c0, 0.9049168157230085))));
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(vt0.c0, 0.9049168157230085)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (NULLIF(vt0.c0, 0.9049168157230085))));
SELECT SUM(count) FROM (SELECT (((+ (NULLIF(vt0.c0, 0.9049168157230085)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (NULLIF(vt0.c0, 0.9049168157230085))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((0.18694990323364902)<=(vt1.c0))  WHEN json_type('') THEN ((vt1.c0)<>(vt1.c1)) WHEN ((72205851) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) END) ORDER BY CASE WHEN 2.25702623E8 THEN '-784804235' WHEN '949788542' THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c1)==(vt1.c0)) ELSE x'' END;
SELECT SUM(count) FROM (SELECT ((CASE ((0.18694990323364902)<=(vt1.c0))  WHEN json_type('') THEN ((vt1.c0)!=(vt1.c1)) WHEN ((72205851) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN 2.25702623E8 THEN '-784804235' WHEN '949788542' THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c1)==(vt1.c0)) ELSE x'' END);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE ((0.18694990323364902)<=(vt1.c0))  WHEN json_type('') THEN ((vt1.c0)<>(vt1.c1)) WHEN ((72205851) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) END) ORDER BY CASE WHEN 2.25702623E8 THEN '-784804235' WHEN '949788542' THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c1)==(vt1.c0)) ELSE x'' END;
SELECT SUM(count) FROM (SELECT ((CASE ((0.18694990323364902)<=(vt1.c0))  WHEN json_type('') THEN ((vt1.c0)!=(vt1.c1)) WHEN ((72205851) BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 COLLATE RTRIM WHEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) THEN ((((vt1.c1)AND(vt1.c1)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN 2.25702623E8 THEN '-784804235' WHEN '949788542' THEN ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)))OR(vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END THEN ((vt1.c1)==(vt1.c0)) ELSE x'' END);
SELECT COUNT(*) FROM vt1, vt0, t0 NOT INDEXED WHERE (((UPPER(vt1.c0)) ISNULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('-1185684777'))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('-1185684777'))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, t0 NOT INDEXED WHERE (((UPPER(vt1.c0)) ISNULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('-1185684777'))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt1.c0)) ISNULL)) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('-1185684777'))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0, t0 NOT INDEXED WHERE (((UPPER(vt1.c0)) ISNULL)) ORDER BY (((vt0.c1)) BETWEEN ((vt0.c0)) AND (('-1185684777'))) COLLATE RTRIM;
SELECT COUNT(*) FROM t0, vt0 WHERE ((('1397369734') NOT NULL)) ORDER BY (NOT (vt0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1397369734') NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((('1397369734') NOT NULL)) ORDER BY (NOT (vt0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c0) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1397369734') NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (NOT (vt0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c0) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((('1397369734') NOT NULL)) ORDER BY (NOT (vt0.c1 COLLATE NOCASE))  NULLS LAST, ((t0.c0) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (LIKE(vt0.c1, vt0.c1, '0')) ORDER BY 0.12746469177239328 DESC, ((vt0.c1) NOTNULL), CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c1, vt0.c1, '0')) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.12746469177239328 DESC, ((vt0.c1) NOTNULL), CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (LIKE(vt0.c1, vt0.c1, '0')) ORDER BY 0.12746469177239328 DESC, ((vt0.c1) NOTNULL), CAST(NULL AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(vt0.c1, vt0.c1, '0')) IS TRUE)  as count FROM vt0, t0 ORDER BY 0.12746469177239328 DESC, ((vt0.c1) NOTNULL), CAST(NULL AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (LIKE(vt0.c1, vt0.c1, '0')) ORDER BY 0.12746469177239328 DESC, ((vt0.c1) NOTNULL), CAST(NULL AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))&(0x1db9e81f))) ORDER BY (((vt1.c1 IN ()))<<(CAST(vt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))&(0X1db9e81f))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ()))<<(CAST(vt1.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))&(0x1db9e81f))) ORDER BY (((vt1.c1 IN ()))<<(CAST(vt1.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt1.c0)))&(0X1db9e81f))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1 IN ()))<<(CAST(vt1.c1 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((- (vt1.c0)))&(0x1db9e81f))) ORDER BY (((vt1.c1 IN ()))<<(CAST(vt1.c1 AS REAL))) DESC;
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOT NULL))<(((vt1.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))<(((vt1.c0)||(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOT NULL))<(((vt1.c0)||(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL))<(((vt1.c0)||(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (((((t0.c0) NOT NULL))<(((vt1.c0)||(t0.c0)))));
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('NJhc*휽'))  WHEN t0.c0 THEN (~ (vt1.c0)) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE ((~ (vt0.c1)) COLLATE NOCASE) ORDER BY 'CSob0T' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('NJhc*휽'))  WHEN t0.c0 THEN (~ (vt1.c0)) ELSE CAST(vt1.c1 AS NUMERIC) END ORDER BY 'CSob0T' DESC);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('NJhc*휽'))  WHEN t0.c0 THEN (~ (vt1.c0)) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE ((~ (vt0.c1)) COLLATE NOCASE) ORDER BY 'CSob0T' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('NJhc*휽'))  WHEN t0.c0 THEN (~ (vt1.c0)) ELSE CAST(vt1.c1 AS NUMERIC) END ORDER BY 'CSob0T' DESC);
SELECT * FROM vt1, vt0 CROSS JOIN t0 ON CASE ((vt0.c1) NOT BETWEEN (vt1.c0) AND ('NJhc*휽'))  WHEN t0.c0 THEN (~ (vt1.c0)) ELSE CAST(vt1.c1 AS NUMERIC) END WHERE ((~ (vt0.c1)) COLLATE NOCASE) ORDER BY 'CSob0T' DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.015454720334809324) ORDER BY ((((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('0.19308650381928516')))OR(vt0.c1)))IS NOT(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.015454720334809324) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('0.19308650381928516')))OR(vt0.c1)))IS NOT(t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.015454720334809324) ORDER BY ((((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('0.19308650381928516')))OR(vt0.c1)))IS NOT(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.015454720334809324) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('0.19308650381928516')))OR(vt0.c1)))IS NOT(t0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (0.015454720334809324) ORDER BY ((((((((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))AND('0.19308650381928516')))OR(vt0.c1)))IS NOT(t0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((vt1.c0) IS FALSE))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF(DISTINCT ((vt1.c0) IS FALSE)));
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))+(CAST(-616798847 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))+(CAST(-616798847 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))+(CAST(-616798847 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))+(CAST(-616798847 AS NUMERIC)))) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (((((vt0.c1) ISNULL))+(CAST(-616798847 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<(vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<(vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))<(vt0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)||((vt1.c1 IN ()))) WHERE (vt1.c0) ORDER BY (((NULL) BETWEEN (vt1.c1) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)||((vt1.c1 IN ()))) ORDER BY (((NULL) BETWEEN (vt1.c1) AND (t0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)||((vt1.c1 IN ()))) WHERE (vt1.c0) ORDER BY (((NULL) BETWEEN (vt1.c1) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)||((vt1.c1 IN ()))) ORDER BY (((NULL) BETWEEN (vt1.c1) AND (t0.c0)) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON ((t0.c0 COLLATE BINARY)||((vt1.c1 IN ()))) WHERE (vt1.c0) ORDER BY (((NULL) BETWEEN (vt1.c1) AND (t0.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL))*(CAST(vt0.c0 AS TEXT))) WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) NOTNULL))))AND((('') NOT NULL)))) ORDER BY ((((vt0.c0) IS TRUE))&(((vt1.c1)>=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((vt0.c0) NOTNULL))))AND((('') NOT NULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL))*(CAST(vt0.c0 AS TEXT))) ORDER BY ((((vt0.c0) IS TRUE))&(((vt1.c1)>=(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL))*(CAST(vt0.c0 AS TEXT))) WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) NOTNULL))))AND((('') NOT NULL)))) ORDER BY ((((vt0.c0) IS TRUE))&(((vt1.c1)>=(vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))OR(((vt0.c0) NOTNULL))))AND((('') NOT NULL)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL))*(CAST(vt0.c0 AS TEXT))) ORDER BY ((((vt0.c0) IS TRUE))&(((vt1.c1)>=(vt1.c0)))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c0) NOTNULL))*(CAST(vt0.c0 AS TEXT))) WHERE ((((((vt0.c1 IN ()))OR(((vt0.c0) NOTNULL))))AND((('') NOT NULL)))) ORDER BY ((((vt0.c0) IS TRUE))&(((vt1.c1)>=(vt1.c0)))) DESC;
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (highlight((('1If(2')>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END, x'', (((vt0.c0))<((t0.c0))))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((('1If(2')>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END, x'', (((vt0.c0))<((t0.c0))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c0) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (highlight((('1If(2')>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END, x'', (((vt0.c0))<((t0.c0))))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight((('1If(2')>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END, x'', (((vt0.c0))<((t0.c0))))) IS TRUE)  as count FROM vt1, t0 NATURAL JOIN vt0 ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c0) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t0 NATURAL JOIN vt0 WHERE (highlight((('1If(2')>(t0.c0)), CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END, x'', (((vt0.c0))<((t0.c0))))) ORDER BY COALESCE(DISTINCT vt0.c0, vt0.c0) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((('')OR(NULL)))OR(((vt0.c1)=(vt1.c0))))) ORDER BY ((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) IN (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((('')OR(NULL)))OR(((vt0.c1)=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) IN (((vt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((('')OR(NULL)))OR(((vt0.c1)=(vt1.c0))))) ORDER BY ((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) IN (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((('')OR(NULL)))OR(((vt0.c1)=(vt1.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) IN (((vt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((('')OR(NULL)))OR(((vt0.c1)=(vt1.c0))))) ORDER BY ((((NULL)) NOT BETWEEN ((vt1.c1)) AND ((t0.c0))) IN (((vt0.c1) NOT NULL)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (('-1887222486') ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('-1887222486') ISNULL) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (('-1887222486') ISNULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (('-1887222486') ISNULL) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY (('-1887222486') ISNULL) COLLATE RTRIM;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)IS(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)IS(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END)IS(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END)IS(CAST(vt0.c1 AS TEXT))));
SELECT * FROM vt1 WHERE (0X73ad056) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))<<(0.4471667220164294 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x73ad056) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))<<(0.4471667220164294 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0X73ad056) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))<<(0.4471667220164294 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0x73ad056) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))<<(0.4471667220164294 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT * FROM vt1 WHERE (0X73ad056) ORDER BY ((((((vt1.c1)AND(vt1.c0)))AND(vt1.c1)))<<(0.4471667220164294 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))+(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))+(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))+(vt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL))+(vt1.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (((((vt1.c0) ISNULL))+(vt1.c0)));
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'');
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(DISTINCT ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), 'xe{}	q'));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), 'xe{}	q')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(DISTINCT ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), 'xe{}	q'));
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), 'xe{}	q')) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (IFNULL(DISTINCT ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)), 'xe{}	q'));
SELECT * FROM vt0 WHERE ((((-1535069858) BETWEEN (vt0.c1) AND (vt0.c0)) IN (vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR((('dLY㾬lirk')LIKE(vt0.c0)))))OR((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-1535069858) BETWEEN (vt0.c1) AND (vt0.c0)) IN (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)OR((('dLY㾬lirk')LIKE(vt0.c0)))))OR((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((-1535069858) BETWEEN (vt0.c1) AND (vt0.c0)) IN (vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR((('dLY㾬lirk')LIKE(vt0.c0)))))OR((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((-1535069858) BETWEEN (vt0.c1) AND (vt0.c0)) IN (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE BINARY)OR((('dLY㾬lirk')LIKE(vt0.c0)))))OR((~ (vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((-1535069858) BETWEEN (vt0.c1) AND (vt0.c0)) IN (vt0.c1 COLLATE RTRIM))) ORDER BY ((((vt0.c1 COLLATE BINARY)OR((('dLY㾬lirk')LIKE(vt0.c0)))))OR((~ (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0)==('0.761560760521784')) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=('0.761560760521784')) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0)==('0.761560760521784')) IN ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)=('0.761560760521784')) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0)==('0.761560760521784')) IN ((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)|(0.04190121425618554)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(0.04190121425618554))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)|(0.04190121425618554)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)|(0.04190121425618554))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0)|(0.04190121425618554)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, t0, vt0 WHERE (((x'') NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CAST(vt1.c0 AS TEXT))AND((vt0.c1 IN (vt0.c0)))))AND(vt1.c0 COLLATE BINARY)))AND(CASE 0.08565608744806696  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS INTEGER))))AND(NULLIF(DISTINCT -1041165239, vt0.c1))))OR(((vt1.c1)<<(0.111475331874066))))) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN NULL END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(vt1.c0 AS TEXT))AND((vt0.c1 IN (vt0.c0)))))AND(vt1.c0 COLLATE BINARY)))AND(CASE 0.08565608744806696  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS INTEGER))))AND(NULLIF(DISTINCT -1041165239, vt0.c1))))OR(((vt1.c1)<<(0.111475331874066))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN NULL END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CAST(vt1.c0 AS TEXT))AND((vt0.c1 IN (vt0.c0)))))AND(vt1.c0 COLLATE BINARY)))AND(CASE 0.08565608744806696  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS INTEGER))))AND(NULLIF(DISTINCT -1041165239, vt0.c1))))OR(((vt1.c1)<<(0.111475331874066))))) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN NULL END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(vt1.c0 AS TEXT))AND((vt0.c1 IN (vt0.c0)))))AND(vt1.c0 COLLATE BINARY)))AND(CASE 0.08565608744806696  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS INTEGER))))AND(NULLIF(DISTINCT -1041165239, vt0.c1))))OR(((vt1.c1)<<(0.111475331874066))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN NULL END END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((((((CAST(vt1.c0 AS TEXT))AND((vt0.c1 IN (vt0.c0)))))AND(vt1.c0 COLLATE BINARY)))AND(CASE 0.08565608744806696  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS INTEGER))))AND(NULLIF(DISTINCT -1041165239, vt0.c1))))OR(((vt1.c1)<<(0.111475331874066))))) ORDER BY CASE WHEN (vt1.c1 IN ()) THEN ((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)) ELSE CASE WHEN vt0.c0 THEN NULL END END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1) BETWEEN (vt1.c0 COLLATE RTRIM) AND (json_object(vt0.c0, x'')))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.c0 COLLATE RTRIM) AND (json_object(vt0.c0, x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1) BETWEEN (vt1.c0 COLLATE RTRIM) AND (json_object(vt0.c0, x'')))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((((vt1.c1) BETWEEN (vt1.c0 COLLATE RTRIM) AND (json_object(vt0.c0, x'')))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (((vt1.c1) BETWEEN (vt1.c0 COLLATE RTRIM) AND (json_object(vt0.c0, x'')))) ORDER BY (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt1.c1)))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((UNICODE('& '))OR(CAST(0.3018963157509196 AS REAL))))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)<(NULL)) THEN CASE WHEN vt1.c1 THEN vt1.c1 END WHEN (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((-479271938, vt1.c1, vt1.c1))) THEN LOWER(vt1.c0) WHEN (+ (vt1.c0)) THEN ((vt1.c1)|(vt1.c0)) WHEN CAST(vt1.c1 AS BLOB) THEN (((vt1.c0))=((vt1.c1))) WHEN UNLIKELY(DISTINCT vt1.c1) THEN LIKELIHOOD(vt1.c1, 0.6610750906058691) ELSE (~ (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((UNICODE('& '))OR(CAST(0.3018963157509196 AS REAL))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE WHEN ((vt1.c0)<(NULL)) THEN CASE WHEN vt1.c1 THEN vt1.c1 END WHEN (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((-479271938, vt1.c1, vt1.c1))) THEN LOWER(vt1.c0) WHEN (+ (vt1.c0)) THEN ((vt1.c1)|(vt1.c0)) WHEN CAST(vt1.c1 AS BLOB) THEN (((vt1.c0))==((vt1.c1))) WHEN UNLIKELY(DISTINCT vt1.c1) THEN LIKELIHOOD(vt1.c1, 0.6610750906058691) ELSE (~ (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((UNICODE('& '))OR(CAST(0.3018963157509196 AS REAL))))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)<(NULL)) THEN CASE WHEN vt1.c1 THEN vt1.c1 END WHEN (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((-479271938, vt1.c1, vt1.c1))) THEN LOWER(vt1.c0) WHEN (+ (vt1.c0)) THEN ((vt1.c1)|(vt1.c0)) WHEN CAST(vt1.c1 AS BLOB) THEN (((vt1.c0))=((vt1.c1))) WHEN UNLIKELY(DISTINCT vt1.c1) THEN LIKELIHOOD(vt1.c1, 0.6610750906058691) ELSE (~ (vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ((((((UNICODE('& '))OR(CAST(0.3018963157509196 AS REAL))))OR((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY CASE WHEN ((vt1.c0)<(NULL)) THEN CASE WHEN vt1.c1 THEN vt1.c1 END WHEN (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((-479271938, vt1.c1, vt1.c1))) THEN LOWER(vt1.c0) WHEN (+ (vt1.c0)) THEN ((vt1.c1)|(vt1.c0)) WHEN CAST(vt1.c1 AS BLOB) THEN (((vt1.c0))==((vt1.c1))) WHEN UNLIKELY(DISTINCT vt1.c1) THEN LIKELIHOOD(vt1.c1, 0.6610750906058691) ELSE (~ (vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((UNICODE('& '))OR(CAST(0.3018963157509196 AS REAL))))OR((vt1.c0 IN ())))) ORDER BY CASE WHEN ((vt1.c0)<(NULL)) THEN CASE WHEN vt1.c1 THEN vt1.c1 END WHEN (((vt1.c0, vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((-479271938, vt1.c1, vt1.c1))) THEN LOWER(vt1.c0) WHEN (+ (vt1.c0)) THEN ((vt1.c1)|(vt1.c0)) WHEN CAST(vt1.c1 AS BLOB) THEN (((vt1.c0))=((vt1.c1))) WHEN UNLIKELY(DISTINCT vt1.c1) THEN LIKELIHOOD(vt1.c1, 0.6610750906058691) ELSE (~ (vt1.c1)) END;
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ()))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY NULL ASC, (CASE vt1.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN NULL ELSE x'' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL ASC, (CASE vt1.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN NULL ELSE x'' END IN ()) DESC);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ()))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY NULL ASC, (CASE vt1.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN NULL ELSE x'' END IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY NULL ASC, (CASE vt1.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN NULL ELSE x'' END IN ()) DESC);
SELECT * FROM vt1, t0, vt0 WHERE ((((vt0.c0 IN ()))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt1.c1)))))) ORDER BY NULL ASC, (CASE vt1.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN NULL WHEN vt1.c0 THEN NULL ELSE x'' END IN ()) DESC;
SELECT * FROM t0, vt1, vt0 WHERE (CAST(((t0.c0)AND(0X2b0105af)) AS REAL)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)AND(0x2b0105af)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(((t0.c0)AND(0X2b0105af)) AS REAL)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)AND(0x2b0105af)) AS REAL)) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (CAST(((t0.c0)AND(0X2b0105af)) AS REAL)) ORDER BY CASE WHEN ((t0.c0) ISNULL) THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) ELSE (vt0.c0 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN json_insert(vt0.c0, vt0.c1, '698367091') WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN (('￿?') IS TRUE) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN json_insert(vt0.c0, vt0.c1, '698367091') WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN (('￿?') IS TRUE) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN json_insert(vt0.c0, vt0.c1, '698367091') WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN (('￿?') IS TRUE) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN json_insert(vt0.c0, vt0.c1, '698367091') WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN (('￿?') IS TRUE) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN json_insert(vt0.c0, vt0.c1, '698367091') WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)) WHEN (('￿?') IS TRUE) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0))))) ORDER BY ((vt0.c1)||(((vt0.c0) BETWEEN (x'cc33') AND (vt1.c1))))  NULLS FIRST, (~ ((((vt1.c1))>=((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)||(((vt0.c0) BETWEEN (x'cc33') AND (vt1.c1))))  NULLS FIRST, (~ ((((vt1.c1))>=((vt1.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0))))) ORDER BY ((vt0.c1)||(((vt0.c0) BETWEEN (x'cc33') AND (vt1.c1))))  NULLS FIRST, (~ ((((vt1.c1))>=((vt1.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0))))) IS TRUE)  as count FROM vt0, vt1 ORDER BY ((vt0.c1)||(((vt0.c0) BETWEEN (x'cc33') AND (vt1.c1))))  NULLS FIRST, (~ ((((vt1.c1))>=((vt1.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) AND ((UNLIKELY(DISTINCT vt1.c0))))) ORDER BY ((vt0.c1)||(((vt0.c0) BETWEEN (x'cc33') AND (vt1.c1))))  NULLS FIRST, (~ ((((vt1.c1))>=((vt1.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS TEXT)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS NOT(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS TEXT)) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)IS NOT(vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0, vt1 WHERE (CAST(((vt1.c1)IS NOT(vt0.c1)) AS TEXT)) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 COLLATE NOCASE END);
SELECT * FROM t0 WHERE ((+ ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))));
SELECT SUM(count) FROM (SELECT (((+ ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ ((((t0.c0, t0.c0, t0.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((t0.c0, t0.c0, t0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL))<<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))<<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL))<<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS REAL))<<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS REAL))<<(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS REAL)) ORDER BY (((((vt1.c0)>=(vt1.c1))))<((json_valid(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)>=(vt1.c1))))<((json_valid(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS REAL)) ORDER BY (((((vt1.c0)>=(vt1.c1))))<((json_valid(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) IS FALSE) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)>=(vt1.c1))))<((json_valid(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) IS FALSE) AS REAL)) ORDER BY (((((vt1.c0)>=(vt1.c1))))<((json_valid(vt1.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -331879831 THEN ((vt0.c0)<=(t0.c0)) END) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -331879831 THEN ((vt0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -331879831 THEN ((vt0.c0)<=(t0.c0)) END) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN -331879831 THEN ((vt0.c0)<=(t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN -331879831 THEN ((vt0.c0)<=(t0.c0)) END) ORDER BY HEX(DISTINCT vt0.c1 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL)) ORDER BY json_array_length(((NULL)!=(t0.c0)), ((t0.c0)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array_length(((NULL)<>(t0.c0)), ((t0.c0)||(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL)) ORDER BY json_array_length(((NULL)!=(t0.c0)), ((t0.c0)||(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM t0, vt0 ORDER BY json_array_length(((NULL)<>(t0.c0)), ((t0.c0)||(vt0.c0))));
SELECT ALL * FROM t0, vt0 WHERE (((CAST(t0.c0 AS BLOB)) NOT NULL)) ORDER BY json_array_length(((NULL)!=(t0.c0)), ((t0.c0)||(vt0.c0)));
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)AND(vt1.c1))))<=(('-1888010324')))) ORDER BY CAST(((((vt1.c1)AND(vt0.c1)))OR(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(vt1.c1))))<=(('-1888010324')))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((vt1.c1)AND(vt0.c1)))OR(t0.c0)) AS INTEGER));
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)AND(vt1.c1))))<=(('-1888010324')))) ORDER BY CAST(((((vt1.c1)AND(vt0.c1)))OR(t0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(vt1.c1))))<=(('-1888010324')))) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY CAST(((((vt1.c1)AND(vt0.c1)))OR(t0.c0)) AS INTEGER));
SELECT * FROM vt1, vt0, t0 WHERE ((((((t0.c0)AND(vt1.c1))))<=(('-1888010324')))) ORDER BY CAST(((((vt1.c1)AND(vt0.c1)))OR(t0.c0)) AS INTEGER);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CHAR(((vt0.c1)/(vt1.c0))) WHERE (((((vt1.c0)||(vt1.c1)))%(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c1)))%(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CHAR(((vt0.c1)/(vt1.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CHAR(((vt0.c1)/(vt1.c0))) WHERE (((((vt1.c0)||(vt1.c1)))%(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)||(vt1.c1)))%(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON CHAR(((vt0.c1)/(vt1.c0))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON CHAR(((vt0.c1)/(vt1.c0))) WHERE (((((vt1.c0)||(vt1.c1)))%(((vt0.c0) IS TRUE))));
SELECT ALL * FROM vt0, t0 WHERE (CASE (0Xffffffffffad4331 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ')95\A' END);
SELECT SUM(count) FROM (SELECT ((CASE (0xffffffffffad4331 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ')95\A' END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE (0Xffffffffffad4331 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ')95\A' END);
SELECT SUM(count) FROM (SELECT ((CASE (0xffffffffffad4331 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ')95\A' END) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE (0Xffffffffffad4331 IN ())  WHEN SQLITE_COMPILEOPTION_USED(t0.c0) THEN ')95\A' END);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0)%(vt0.c1)))LIKE((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(vt0.c1)))LIKE((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0)%(vt0.c1)))LIKE((~ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)%(vt0.c1)))LIKE((~ (vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((t0.c0)%(vt0.c1)))LIKE((~ (vt0.c0)))));
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)/(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)/(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)/(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)/(t0.c0)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c0)) BETWEEN (((t0.c0 IN (t0.c0)))) AND ((((t0.c0)/(t0.c0))))));
SELECT ALL * FROM t0, vt0, vt1 WHERE ('￿?') ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)+(vt0.c0)) WHEN x'b9bc' THEN ((vt1.c0) IS TRUE) WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((0.3875448970708596) IS FALSE) WHEN ABS(DISTINCT t0.c0) THEN vt1.c0 WHEN NULLIF(vt1.c1, vt0.c1) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('￿?') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)+(vt0.c0)) WHEN x'b9bc' THEN ((vt1.c0) IS TRUE) WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((0.3875448970708596) IS FALSE) WHEN ABS(DISTINCT t0.c0) THEN vt1.c0 WHEN NULLIF(vt1.c1, vt0.c1) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ('￿?') ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)+(vt0.c0)) WHEN x'b9bc' THEN ((vt1.c0) IS TRUE) WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((0.3875448970708596) IS FALSE) WHEN ABS(DISTINCT t0.c0) THEN vt1.c0 WHEN NULLIF(vt1.c1, vt0.c1) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('￿?') IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)+(vt0.c0)) WHEN x'b9bc' THEN ((vt1.c0) IS TRUE) WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((0.3875448970708596) IS FALSE) WHEN ABS(DISTINCT t0.c0) THEN vt1.c0 WHEN NULLIF(vt1.c1, vt0.c1) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC  NULLS LAST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ('￿?') ORDER BY CASE WHEN ((t0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) THEN ((vt0.c0)+(vt0.c0)) WHEN x'b9bc' THEN ((vt1.c0) IS TRUE) WHEN (((vt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN ((0.3875448970708596) IS FALSE) WHEN ABS(DISTINCT t0.c0) THEN vt1.c0 WHEN NULLIF(vt1.c1, vt0.c1) THEN ((vt1.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0, vt0.c0, NULL)) NOT BETWEEN ((((vt0.c1) NOTNULL), ((0xffffffffaabfa2cb) BETWEEN (vt1.c0) AND (vt0.c0)), ((t0.c0) NOT NULL))) AND ((CAST(t0.c0 AS INTEGER), ((vt1.c1)<=(vt1.c0)), ((vt1.c1)&(vt0.c0))))) INNER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END)) WHERE (((((vt1.c0)AND(t0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0, vt0.c0, NULL)) NOT BETWEEN ((((vt0.c1) NOTNULL), ((0Xffffffffaabfa2cb) BETWEEN (vt1.c0) AND (vt0.c0)), ((t0.c0) NOT NULL))) AND ((CAST(t0.c0 AS INTEGER), ((vt1.c1)<=(vt1.c0)), ((vt1.c1)&(vt0.c0))))) INNER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0, vt0.c0, NULL)) NOT BETWEEN ((((vt0.c1) NOTNULL), ((0xffffffffaabfa2cb) BETWEEN (vt1.c0) AND (vt0.c0)), ((t0.c0) NOT NULL))) AND ((CAST(t0.c0 AS INTEGER), ((vt1.c1)<=(vt1.c0)), ((vt1.c1)&(vt0.c0))))) INNER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END)) WHERE (((((vt1.c0)AND(t0.c0)))AND(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(t0.c0)))AND(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((vt1.c0, vt0.c0, NULL)) NOT BETWEEN ((((vt0.c1) NOTNULL), ((0Xffffffffaabfa2cb) BETWEEN (vt1.c0) AND (vt0.c0)), ((t0.c0) NOT NULL))) AND ((CAST(t0.c0 AS INTEGER), ((vt1.c1)<=(vt1.c0)), ((vt1.c1)&(vt0.c0))))) INNER JOIN vt1 ON (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE t0.c0  WHEN vt0.c1 THEN t0.c0 END)));
SELECT * FROM vt1, vt0, t0 WHERE (CASE LIKE(x'', vt0.c1)  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN x'' THEN t0.c0 COLLATE RTRIM WHEN (('&')*(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE ((vt0.c1) IS FALSE) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))<>((vt1.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LIKE(x'', vt0.c1)  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN x'' THEN t0.c0 COLLATE RTRIM WHEN (('&')*(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=((vt1.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(vt0.c1)) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CASE LIKE(x'', vt0.c1)  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN x'' THEN t0.c0 COLLATE RTRIM WHEN (('&')*(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE ((vt0.c1) IS FALSE) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))<>((vt1.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(vt0.c1)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE LIKE(x'', vt0.c1)  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN x'' THEN t0.c0 COLLATE RTRIM WHEN (('&')*(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))!=((vt1.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(vt0.c1)) ASC  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CASE LIKE(x'', vt0.c1)  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN vt1.c1 COLLATE BINARY WHEN x'' THEN t0.c0 COLLATE RTRIM WHEN (('&')*(vt0.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c1 END ELSE ((vt0.c1) IS FALSE) END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))))<>((vt1.c0 IN ()))) DESC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))>>(vt0.c1)) ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (json_object((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '-239664546')) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, (((t0.c0 IN ()))||('-463922050'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '-239664546')) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, (((t0.c0 IN ()))||('-463922050'))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (json_object((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '-239664546')) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, (((t0.c0 IN ()))||('-463922050'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_object((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))), '-239664546')) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) BETWEEN ((NOT (t0.c0))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))) ASC, (((t0.c0 IN ()))||('-463922050'))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN 'k\nt''uwꑱDz' ELSE vt1.c0 END) AND (((vt1.c0)%(vt1.c1))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN 'k\nt''uwꑱDz' ELSE vt1.c0 END) AND (((vt1.c0)%(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN 'k\nt''uwꑱDz' ELSE vt1.c0 END) AND (((vt1.c0)%(vt1.c1))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN 'k\nt''uwꑱDz' ELSE vt1.c0 END) AND (((vt1.c0)%(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)IS NOT(vt1.c0))) BETWEEN (CASE WHEN vt1.c1 THEN 'k\nt''uwꑱDz' ELSE vt1.c0 END) AND (((vt1.c0)%(vt1.c1))))) ORDER BY vt1.c1 DESC  NULLS LAST;
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (((((t0.c0)OR('?gccCkls')))AND(vt0.c0)))) WHERE ((+ ((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (((((t0.c0)OR('?gccCkls')))AND(vt0.c0)))));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (((((t0.c0)OR('?gccCkls')))AND(vt0.c0)))) WHERE ((+ ((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((+ ((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1)))))) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (((((t0.c0)OR('?gccCkls')))AND(vt0.c0)))));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON ((((t0.c0) NOT NULL)) BETWEEN (((((((((vt0.c1)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1)))AND(vt1.c1))) AND (((((t0.c0)OR('?gccCkls')))AND(vt0.c0)))) WHERE ((+ ((((vt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (DATE(vt1.c0, vt1.c0, ('-2104630018' IN ('0.9611375319445236'))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, vt1.c0, ('-2104630018' IN ('0.9611375319445236')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (DATE(vt1.c0, vt1.c0, ('-2104630018' IN ('0.9611375319445236'))));
SELECT SUM(count) FROM (SELECT ((DATE(vt1.c0, vt1.c0, ('-2104630018' IN ('0.9611375319445236')))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (DATE(vt1.c0, vt1.c0, ('-2104630018' IN ('0.9611375319445236'))));
SELECT ALL COUNT(*) FROM vt0 WHERE (-2.104630018E9);
SELECT SUM(count) FROM (SELECT ((-2.104630018E9) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-2.104630018E9);
SELECT SUM(count) FROM (SELECT ((-2.104630018E9) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-2.104630018E9);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))OR(((((vt0.c0)AND(vt0.c0)))AND(0.5901141667975548))))) ORDER BY (~ ((vt0.c1 IN (t0.c0, 'U	', vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))OR(((((vt0.c0)AND(vt0.c0)))AND(0.5901141667975548))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ ((vt0.c1 IN (t0.c0, 'U	', vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))OR(((((vt0.c0)AND(vt0.c0)))AND(0.5901141667975548))))) ORDER BY (~ ((vt0.c1 IN (t0.c0, 'U	', vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))OR(((((vt0.c0)AND(vt0.c0)))AND(0.5901141667975548))))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (~ ((vt0.c1 IN (t0.c0, 'U	', vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, t0, vt1 WHERE ((((((vt0.c0 IN ()))AND(t0.c0 COLLATE BINARY)))OR(((((vt0.c0)AND(vt0.c0)))AND(0.5901141667975548))))) ORDER BY (~ ((vt0.c1 IN (t0.c0, 'U	', vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CAST(NULLIF(t0.c0, vt0.c1) AS NUMERIC) LEFT OUTER JOIN vt0 ON (('lᳲ') IS FALSE) WHERE (LOWER((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (vt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(NULLIF(t0.c0, vt0.c1) AS NUMERIC) LEFT OUTER JOIN vt0 ON (('lᳲ') IS FALSE));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt1 ON CAST(NULLIF(t0.c0, vt0.c1) AS NUMERIC) LEFT OUTER JOIN vt0 ON (('lᳲ') IS FALSE) WHERE (LOWER((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((~ (vt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON CAST(NULLIF(t0.c0, vt0.c1) AS NUMERIC) LEFT OUTER JOIN vt0 ON (('lᳲ') IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((vt0.c1)AND(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((vt0.c1)AND(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)AND(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC);
SELECT * FROM vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY ((((vt0.c1)AND(vt0.c0)))<=(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) IS FALSE)) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) IS FALSE)) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM vt1 ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) IS TRUE)) IS FALSE)) ORDER BY CAST(NULL AS NUMERIC) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=((t0.c0 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL))GLOB((((t0.c0, '', t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)>=((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL))GLOB((((t0.c0, '', t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=((t0.c0 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL))GLOB((((t0.c0, '', t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)>=((t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c0 AS REAL))GLOB((((t0.c0, '', t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c0 COLLATE NOCASE)>=((t0.c0 IN ())))) ORDER BY ((CAST(t0.c0 AS REAL))GLOB((((t0.c0, '', t0.c0))<=((t0.c0, t0.c0, t0.c0))))) ASC;
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ('?Jl\nP');
SELECT SUM(count) FROM (SELECT (('?Jl\nP') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ('?Jl\nP');
SELECT SUM(count) FROM (SELECT (('?Jl\nP') IS TRUE)  as count FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt0, vt1 FULL OUTER JOIN t0 ON ((((((((((NULL)AND(t0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))) WHERE ('?Jl\nP');
SELECT * FROM t0 WHERE (LOWER(t0.c0) COLLATE BINARY) ORDER BY ((((((x'')AND(t0.c0)))AND(x'')))<=(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((((x'')AND(t0.c0)))AND(x'')))<=(((t0.c0) ISNULL))));
SELECT * FROM t0 WHERE (LOWER(t0.c0) COLLATE BINARY) ORDER BY ((((((x'')AND(t0.c0)))AND(x'')))<=(((t0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ((LOWER(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY ((((((x'')AND(t0.c0)))AND(x'')))<=(((t0.c0) ISNULL))));
SELECT * FROM t0 WHERE (LOWER(t0.c0) COLLATE BINARY) ORDER BY ((((((x'')AND(t0.c0)))AND(x'')))<=(((t0.c0) ISNULL)));
SELECT * FROM vt1, vt0, t0 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) IS TRUE) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt1.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c1 IN (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) IS TRUE) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c1 IN (vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) IS TRUE) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt1.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c1 IN (vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) IS TRUE) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt1, vt0, t0 NOT INDEXED ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c1 IN (vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, vt0, t0 WHERE (CASE WHEN (((vt1.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt1.c0) IS TRUE) ELSE ((((vt0.c1)OR(vt1.c1)))AND(vt1.c0)) END) ORDER BY ((vt0.c0 COLLATE RTRIM) BETWEEN (t0.c0 COLLATE BINARY) AND ((vt0.c1 IN (vt1.c1))))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((vt0.c1 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (~ (vt0.c0)) END WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (~ (vt0.c0)) END WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (~ (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN vt0 ON CASE WHEN ((vt0.c0)-(vt0.c1)) THEN CAST(vt0.c0 AS BLOB) ELSE (~ (vt0.c0)) END WHERE ((((vt0.c0 IN ())) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) AND (CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)-(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)) FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS TEXT) WHERE (CAST(((t0.c0)-(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)-(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)-(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)) FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS TEXT));
SELECT ALL * FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)-(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)) FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS TEXT) WHERE (CAST(((t0.c0)-(t0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0)-(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON (((vt1.c0)-(vt0.c0)) IN (CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c1 END)) FULL OUTER JOIN vt0 ON CAST((vt0.c1 IN ()) AS TEXT));
SELECT * FROM vt0, vt1, t0 WHERE ((+ (((((vt0.c1)AND(t0.c0)))AND(vt1.c1))))) ORDER BY (+ ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)AND(t0.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ ((~ (vt1.c0)))) ASC);
SELECT * FROM vt0, vt1, t0 WHERE ((+ (((((vt0.c1)AND(t0.c0)))AND(vt1.c1))))) ORDER BY (+ ((~ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((vt0.c1)AND(t0.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (+ ((~ (vt1.c0)))) ASC);
SELECT * FROM vt0, vt1, t0 WHERE ((+ (((((vt0.c1)AND(t0.c0)))AND(vt1.c1))))) ORDER BY (+ ((~ (vt1.c0)))) ASC;
SELECT * FROM t0 WHERE ((((- (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))>(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c0)))>(((t0.c0)IS NOT(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((- (t0.c0)))>(((t0.c0)IS NOT(t0.c0)))));
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c0)) NOT BETWEEN (((((vt0.c1))>((x''))))) AND ((vt0.c1)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((((vt0.c1))>((x''))))) AND ((vt0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c0)) NOT BETWEEN (((((vt0.c1))>((x''))))) AND ((vt0.c1)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) NOT BETWEEN (((((vt0.c1))>((x''))))) AND ((vt0.c1)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY x'' ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((t0.c0)) NOT BETWEEN (((((vt0.c1))>((x''))))) AND ((vt0.c1)))) ORDER BY x'' ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>(((('-529757964') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>(((('-529757964') NOTNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>(((('-529757964') NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>(((('-529757964') NOTNULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0)))))>(((('-529757964') NOTNULL)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c0))) AND (((vt0.c0)AND(NULL)))) WHERE ((((((vt0.c0, vt0.c1, t0.c0))!=((vt0.c1, vt0.c0, vt0.c1)))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, t0.c0))!=((vt0.c1, vt0.c0, vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c0))) AND (((vt0.c0)AND(NULL)))) ORDER BY vt0.c1 ASC  NULLS FIRST, x'' ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c0))) AND (((vt0.c0)AND(NULL)))) WHERE ((((((vt0.c0, vt0.c1, t0.c0))!=((vt0.c1, vt0.c0, vt0.c1)))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c1, t0.c0))!=((vt0.c1, vt0.c0, vt0.c1)))) ISNULL)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c0))) AND (((vt0.c0)AND(NULL)))) ORDER BY vt0.c1 ASC  NULLS FIRST, x'' ASC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON ((t0.c0) NOT BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(t0.c0))) AND (((vt0.c0)AND(NULL)))) WHERE ((((((vt0.c0, vt0.c1, t0.c0))!=((vt0.c1, vt0.c0, vt0.c1)))) ISNULL)) ORDER BY vt0.c1 ASC  NULLS FIRST, x'' ASC;
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c0)AND((((t0.c0, t0.c0, t0.c0))<=((t0.c0, t0.c0, t0.c0))))))AND(((t0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((x'' IN ()))) AND (((t0.c0 IN ())))) WHERE ((~ ((NOT (vt0.c0))))) ORDER BY IFNULL(DISTINCT (+ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((x'' IN ()))) AND (((t0.c0 IN ())))) ORDER BY IFNULL(DISTINCT (+ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((x'' IN ()))) AND (((t0.c0 IN ())))) WHERE ((~ ((NOT (vt0.c0))))) ORDER BY IFNULL(DISTINCT (+ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((NOT (vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((x'' IN ()))) AND (((t0.c0 IN ())))) ORDER BY IFNULL(DISTINCT (+ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((x'' IN ()))) AND (((t0.c0 IN ())))) WHERE ((~ ((NOT (vt0.c0))))) ORDER BY IFNULL(DISTINCT (+ (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)<>(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((t0.c0)<>(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (vt1.c0, vt0.c1)))%(((((-1129655976)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c0, vt0.c1)))%(((((-1129655976)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (vt1.c0, vt0.c1)))%(((((-1129655976)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt1.c0, vt0.c1)))%(((((-1129655976)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE ((((vt0.c0 IN (vt1.c0, vt0.c1)))%(((((-1129655976)AND(vt0.c0)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY 0.06864254242144396 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.06864254242144396 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY 0.06864254242144396 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, t0 ORDER BY 0.06864254242144396 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE ((- (vt1.c0 COLLATE RTRIM))) ORDER BY 0.06864254242144396 ASC  NULLS LAST;
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM) ORDER BY (~ (((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE '-191907989' END)IS(((((vt0.c0)OR(vt1.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE '-191907989' END)IS(((((vt0.c0)OR(vt1.c1)))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM) ORDER BY (~ (((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE '-191907989' END)IS(((((vt0.c0)OR(vt1.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt1 ORDER BY (~ (((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE '-191907989' END)IS(((((vt0.c0)OR(vt1.c1)))OR(vt0.c1))))  NULLS FIRST);
SELECT * FROM vt0, vt1 WHERE (NULL COLLATE RTRIM) ORDER BY (~ (((((((((vt0.c0)OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))) ASC  NULLS LAST, ((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 ELSE '-191907989' END)IS(((((vt0.c0)OR(vt1.c1)))OR(vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((vt1.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END ELSE CAST(vt1.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS TEXT)  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END ELSE CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END ELSE CAST(vt1.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c1 AS TEXT)  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END ELSE CAST(vt1.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE CAST(vt1.c1 AS TEXT)  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE NULL END ELSE CAST(vt1.c1 AS NUMERIC) END);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(0.2105893814980564)))AND(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0)%(vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(0.2105893814980564)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0))) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(0.2105893814980564)))AND(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0)%(vt0.c0))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(0.2105893814980564)))AND(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)%(vt0.c0))) ISNULL)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(0.2105893814980564)))AND(vt0.c1))) ISNULL)) ORDER BY ((((vt0.c0)%(vt0.c0))) ISNULL)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1145071114' END) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (NULL) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1145071114' END) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1145071114' END) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (NULL) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1145071114' END) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0) NOT BETWEEN (NULL) AND (vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN '-1145071114' END) AND ((+ (vt0.c1)))));
SELECT * FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt1, vt0);
SELECT * FROM vt1, vt0 WHERE ((- ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((NULL) NOT BETWEEN (((((NULL)AND(t0.c0)))AND(vt1.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))), (((vt1.c0 IN (vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((((NULL)AND(t0.c0)))AND(vt1.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))), (((vt1.c0 IN (vt0.c0))) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((NULL) NOT BETWEEN (((((NULL)AND(t0.c0)))AND(vt1.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))), (((vt1.c0 IN (vt0.c0))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (((((NULL)AND(t0.c0)))AND(vt1.c0))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))), (((vt1.c0 IN (vt0.c0))) ISNULL) DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((NULL) NOT BETWEEN (((((NULL)AND(t0.c0)))AND(vt1.c0))) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))), (((vt1.c0 IN (vt0.c0))) ISNULL) DESC;
SELECT ALL * FROM vt0, vt1 WHERE (((x'') BETWEEN (((vt1.c1) ISNULL)) AND (vt0.c1))) ORDER BY (((~ (vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((vt1.c1) ISNULL)) AND (vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((x'') BETWEEN (((vt1.c1) ISNULL)) AND (vt0.c1))) ORDER BY (((~ (vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN (((vt1.c1) ISNULL)) AND (vt0.c1))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((~ (vt1.c0))) ISNULL) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (((x'') BETWEEN (((vt1.c1) ISNULL)) AND (vt0.c1))) ORDER BY (((~ (vt1.c0))) ISNULL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (load_extension(CAST(x'' AS TEXT), CAST(t0.c0 AS NUMERIC))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(x'' AS TEXT), CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY ''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (load_extension(CAST(x'' AS TEXT), CAST(t0.c0 AS NUMERIC))) ORDER BY ''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(x'' AS TEXT), CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0 ORDER BY ''  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((t0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((t0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((t0.c0))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((t0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)<=(vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND ((((t0.c0))<((vt0.c1))))));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(((t0.c0)+(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)+(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(((t0.c0)+(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)+(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT COUNT(*) FROM vt1, t0 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(((t0.c0)+(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, -2.121816408E9, vt0.c0))!=((t0.c0, 0Xae69b60, vt0.c1)))) NOT BETWEEN (x'') AND (((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, -2.121816408E9, vt0.c0))!=((t0.c0, 0Xae69b60, vt0.c1)))) NOT BETWEEN (x'') AND (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, -2.121816408E9, vt0.c0))!=((t0.c0, 0Xae69b60, vt0.c1)))) NOT BETWEEN (x'') AND (((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, -2.121816408E9, vt0.c0))!=((t0.c0, 0Xae69b60, vt0.c1)))) NOT BETWEEN (x'') AND (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1, -2.121816408E9, vt0.c0))!=((t0.c0, 0Xae69b60, vt0.c1)))) NOT BETWEEN (x'') AND (((vt0.c1)>>(vt0.c1)))));
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN ((x'') BETWEEN (vt0.c1) AND ('')) THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) END) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((x'') BETWEEN (vt0.c1) AND ('')) THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN ((x'') BETWEEN (vt0.c1) AND ('')) THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) END) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN ((x'') BETWEEN (vt0.c1) AND ('')) THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (CASE vt1.c0  WHEN ((x'') BETWEEN (vt0.c1) AND ('')) THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS BLOB) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)IS NOT(vt1.c0)) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)) END) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0)<>(vt0.c1))))) ORDER BY ((((x'')AND(vt0.c0)))GLOB((+ (vt0.c1)))) DESC  NULLS LAST, ((vt0.c0)>>(vt0.c1)) COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(vt0.c0)))GLOB((+ (vt0.c1)))) DESC  NULLS LAST, ((vt0.c0)>>(vt0.c1)) COLLATE BINARY COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0)<>(vt0.c1))))) ORDER BY ((((x'')AND(vt0.c0)))GLOB((+ (vt0.c1)))) DESC  NULLS LAST, ((vt0.c0)>>(vt0.c1)) COLLATE BINARY COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'')AND(vt0.c0)))GLOB((+ (vt0.c1)))) DESC  NULLS LAST, ((vt0.c0)>>(vt0.c1)) COLLATE BINARY COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))IS(((vt0.c0)<>(vt0.c1))))) ORDER BY ((((x'')AND(vt0.c0)))GLOB((+ (vt0.c1)))) DESC  NULLS LAST, ((vt0.c0)>>(vt0.c1)) COLLATE BINARY COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)<(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)<(t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)<(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((vt0.c0)<(t0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c1)) AND ((t0.c0, vt1.c1, vt1.c1))) IN ()) FULL OUTER JOIN vt0 ON -581620770 WHERE ((vt0.c0 IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c1)) AND ((t0.c0, vt1.c1, vt1.c1))) IN ()) FULL OUTER JOIN vt0 ON -581620770);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c1)) AND ((t0.c0, vt1.c1, vt1.c1))) IN ()) FULL OUTER JOIN vt0 ON -581620770 WHERE ((vt0.c0 IN (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c1)) AND ((t0.c0, vt1.c1, vt1.c1))) IN ()) FULL OUTER JOIN vt0 ON -581620770);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON ((((vt0.c1, vt0.c1, vt1.c1)) BETWEEN ((vt1.c0, vt0.c1, vt1.c1)) AND ((t0.c0, vt1.c1, vt1.c1))) IN ()) FULL OUTER JOIN vt0 ON -581620770 WHERE ((vt0.c0 IN (vt1.c0 COLLATE RTRIM)));
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1))))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE (((((vt0.c1)<=(vt0.c0)))LIKE(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c1)))));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL))) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((('-441499827')OR(vt0.c0 COLLATE NOCASE)))OR(CAST(t0.c0 AS BLOB)))) ORDER BY ((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)IS NOT(vt0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-441499827')OR(vt0.c0 COLLATE NOCASE)))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL))) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)IS NOT(vt0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL))) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((('-441499827')OR(vt0.c0 COLLATE NOCASE)))OR(CAST(t0.c0 AS BLOB)))) ORDER BY ((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)IS NOT(vt0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((('-441499827')OR(vt0.c0 COLLATE NOCASE)))OR(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL))) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) ORDER BY ((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)IS NOT(vt0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0)AND(NULL))) BETWEEN ((NOT (t0.c0))) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) WHERE ((((('-441499827')OR(vt0.c0 COLLATE NOCASE)))OR(CAST(t0.c0 AS BLOB)))) ORDER BY ((((vt0.c1 COLLATE BINARY)AND(((vt0.c1)IS NOT(vt0.c0)))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (json_object((NOT (t0.c0)), CASE t0.c0  WHEN x'' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN 'B/S*' END));
SELECT SUM(count) FROM (SELECT ((json_object((NOT (t0.c0)), CASE t0.c0  WHEN x'' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN 'B/S*' END)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_object((NOT (t0.c0)), CASE t0.c0  WHEN x'' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN 'B/S*' END));
SELECT SUM(count) FROM (SELECT ((json_object((NOT (t0.c0)), CASE t0.c0  WHEN x'' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN t0.c0 THEN 'B/S*' END)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)<>(((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)<>(((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)!=(((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0 WHERE (((t0.c0)<>(((((((((t0.c0)AND(t0.c0)))OR(NULL)))OR(t0.c0)))AND(t0.c0))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c1)*(vt0.c1)))))) ORDER BY ((((vt0.c1) IS TRUE)) BETWEEN ((('1781241166') NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c1)*(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) BETWEEN ((('1781241166') NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c1)*(vt0.c1)))))) ORDER BY ((((vt0.c1) IS TRUE)) BETWEEN ((('1781241166') NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c1)*(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) BETWEEN ((('1781241166') NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>(vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND ((((vt0.c1)*(vt0.c1)))))) ORDER BY ((((vt0.c1) IS TRUE)) BETWEEN ((('1781241166') NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) ASC, (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((((vt0.c0)>(vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c1, 0.5584817915461638) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(DISTINCT vt1.c1, 0.5584817915461638) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c1, 0.5584817915461638) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(DISTINCT vt1.c1, 0.5584817915461638) IN ())) IS TRUE)  as count FROM t0 NOT INDEXED, vt0, vt1 ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((LIKELIHOOD(DISTINCT vt1.c1, 0.5584817915461638) IN ())) ORDER BY ((vt0.c0 COLLATE BINARY) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))<>(((+ (vt0.c1)))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c1) IN ()) ASC  NULLS LAST, CASE WHEN (NULL IN (9.49788542E8)) THEN ((vt0.c1)%(vt0.c1)) ELSE CHAR('&A,_1>2') END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))!=(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c1) IN ()) ASC  NULLS LAST, CASE WHEN (NULL IN (9.49788542E8)) THEN ((vt0.c1)%(vt0.c1)) ELSE CHAR('&A,_1>2') END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))<>(((+ (vt0.c1)))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c1) IN ()) ASC  NULLS LAST, CASE WHEN (NULL IN (9.49788542E8)) THEN ((vt0.c1)%(vt0.c1)) ELSE CHAR('&A,_1>2') END;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ())))!=(((+ (vt0.c1)))))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c1) IN ()) ASC  NULLS LAST, CASE WHEN (NULL IN (9.49788542E8)) THEN ((vt0.c1)%(vt0.c1)) ELSE CHAR('&A,_1>2') END);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ())))<>(((+ (vt0.c1)))))) ORDER BY (((vt0.c0 IN (vt0.c0))) NOT BETWEEN (((vt0.c0) IS FALSE)) AND (((vt0.c0)|(vt0.c0))))  NULLS FIRST, (LOWER(vt0.c1) IN ()) ASC  NULLS LAST, CASE WHEN (NULL IN (9.49788542E8)) THEN ((vt0.c1)%(vt0.c1)) ELSE CHAR('&A,_1>2') END;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))AND(NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)IS(vt1.c0)))AND(NULL))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)IS(vt1.c0)))AND(NULL)));
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((~ (((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS INTEGER))) AND (((NOT (vt1.c1)))))) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST(CAST('-298604177' AS BLOB) AS INTEGER) INNER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)LIKE((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) WHERE ((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(t0.c0)) IN ())) ORDER BY TIME((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), (+ (0.7163948237802105)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), t0.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((t0.c0) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST(CAST('-298604177' AS BLOB) AS INTEGER) INNER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)LIKE((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ORDER BY TIME((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), (+ (0.7163948237802105)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), t0.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((t0.c0) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST(CAST('-298604177' AS BLOB) AS INTEGER) INNER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)LIKE((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) WHERE ((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(t0.c0)) IN ())) ORDER BY TIME((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), (+ (0.7163948237802105)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), t0.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((t0.c0) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST(CAST('-298604177' AS BLOB) AS INTEGER) INNER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)LIKE((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) ORDER BY TIME((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), (+ (0.7163948237802105)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), t0.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((t0.c0) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST(CAST('-298604177' AS BLOB) AS INTEGER) INNER JOIN vt0 ON ((vt0.c1 COLLATE BINARY)LIKE((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((NULL, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c0))))) WHERE ((((((((((vt1.c1)AND(vt0.c0)))AND(vt1.c1)))AND(vt1.c0)))AND(t0.c0)) IN ())) ORDER BY TIME((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c1))), (+ (0.7163948237802105)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), t0.c0 COLLATE BINARY, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((t0.c0) NOT NULL), CASE WHEN vt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((vt1.c0)AND(vt0.c0)))AND(vt1.c1)) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c1 COLLATE NOCASE END) ORDER BY ABS(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 ORDER BY ABS(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c1 COLLATE NOCASE END) ORDER BY ABS(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt1 ORDER BY ABS(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt1.c1 COLLATE NOCASE END) ORDER BY ABS(((((vt1.c1)AND(vt1.c0)))OR(vt1.c1)));
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c1))>((vt1.c0))) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c1))>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c1))>((vt1.c0))) END) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c1))>((vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CASE WHEN ((vt1.c0)<(vt1.c0)) THEN (((vt1.c1))>((vt1.c0))) END) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN vt1 ON ((((((vt1.c1)OR(vt0.c1)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))<=(('FR1''s')))) AND ((('1999111618') IS TRUE))) WHERE (((vt0.c0)==(((vt0.c1)GLOB(vt0.c0))))) ORDER BY vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt1.c1) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN vt1 ON ((((((vt1.c1)OR(vt0.c1)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))<=(('FR1''s')))) AND ((('1999111618') IS TRUE))) ORDER BY vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt1.c1) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN vt1 ON ((((((vt1.c1)OR(vt0.c1)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))<=(('FR1''s')))) AND ((('1999111618') IS TRUE))) WHERE (((vt0.c0)==(((vt0.c1)GLOB(vt0.c0))))) ORDER BY vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt1.c1) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)=(((vt0.c1)GLOB(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN ((((vt0.c1)||(vt1.c0)))) AND (((- (t0.c0))))) LEFT OUTER JOIN vt1 ON ((((((vt1.c1)OR(vt0.c1)))AND(t0.c0))) NOT BETWEEN ((((t0.c0))<=(('FR1''s')))) AND ((('1999111618') IS TRUE))) ORDER BY vt0.c1 COLLATE RTRIM, LOWER(DISTINCT vt1.c1) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c0) ISNULL)))) ORDER BY (((((0Xffffffffd67b4a0d)AND(t0.c0)))AND(vt0.c0)) IN ((+ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END)), '-463922050', CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c1))<>((t0.c0))) THEN SQLITE_VERSION() ELSE ((vt0.c1)<(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((0xffffffffd67b4a0d)AND(t0.c0)))AND(vt0.c0)) IN ((+ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END)), '-463922050', CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c1))!=((t0.c0))) THEN SQLITE_VERSION() ELSE ((vt0.c1)<(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c0) ISNULL)))) ORDER BY (((((0Xffffffffd67b4a0d)AND(t0.c0)))AND(vt0.c0)) IN ((+ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END)), '-463922050', CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c1))<>((t0.c0))) THEN SQLITE_VERSION() ELSE ((vt0.c1)<(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((0xffffffffd67b4a0d)AND(t0.c0)))AND(vt0.c0)) IN ((+ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END)), '-463922050', CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c1))!=((t0.c0))) THEN SQLITE_VERSION() ELSE ((vt0.c1)<(t0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (((t0.c0) ISNULL)))) ORDER BY (((((0Xffffffffd67b4a0d)AND(t0.c0)))AND(vt0.c0)) IN ((+ (vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 END)), '-463922050', CASE WHEN (NOT (vt0.c1)) THEN vt0.c0 WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 END THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c1))<>((t0.c0))) THEN SQLITE_VERSION() ELSE ((vt0.c1)<(t0.c0)) END;
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((- (vt0.c0)) AS REAL));
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((vt1.c0)!=(vt1.c1))  WHEN 'Pꌐ' THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) ELSE ((((((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)!=(vt1.c1))  WHEN 'Pꌐ' THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) ELSE ((((((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((vt1.c0)!=(vt1.c1))  WHEN 'Pꌐ' THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) ELSE ((((((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)!=(vt1.c1))  WHEN 'Pꌐ' THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) ELSE ((((((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (CASE ((vt1.c0)!=(vt1.c1))  WHEN 'Pꌐ' THEN (((t0.c0, vt1.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt1.c1)) AND ((vt1.c0, vt1.c1, vt1.c0))) ELSE ((((((((((((t0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) END);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (vt0.c0)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.2604481762156191))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.2604481762156191)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (vt0.c0)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.2604481762156191))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.2604481762156191)))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON NULL);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON NULL WHERE ((((~ (vt0.c0)))+(LIKELIHOOD(DISTINCT vt1.c0, 0.2604481762156191))));
SELECT ALL * FROM t0, vt1 WHERE (NULLIF(CAST(t0.c0 AS NUMERIC), LTRIM(vt1.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(t0.c0 AS NUMERIC), LTRIM(vt1.c0, t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (NULLIF(CAST(t0.c0 AS NUMERIC), LTRIM(vt1.c0, t0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(CAST(t0.c0 AS NUMERIC), LTRIM(vt1.c0, t0.c0))) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (NULLIF(CAST(t0.c0 AS NUMERIC), LTRIM(vt1.c0, t0.c0)));
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.5242761638293582 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((x'')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.5242761638293582);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.5242761638293582 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((x''))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((x'')))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON 0.5242761638293582);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON 0.5242761638293582 WHERE ((((vt0.c1)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((x''))));
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY CAST((((t0.c0, '949788542', vt1.c1)) NOT BETWEEN ((x'b020', vt1.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) ASC, ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt0.c0)-(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST((((t0.c0, '949788542', vt1.c1)) NOT BETWEEN ((x'b020', vt1.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) ASC, ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt0.c0)-(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY CAST((((t0.c0, '949788542', vt1.c1)) NOT BETWEEN ((x'b020', vt1.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) ASC, ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt0.c0)-(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1, t0, vt0 ORDER BY CAST((((t0.c0, '949788542', vt1.c1)) NOT BETWEEN ((x'b020', vt1.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) ASC, ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt0.c0)-(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1, t0, vt0 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))))) ORDER BY CAST((((t0.c0, '949788542', vt1.c1)) NOT BETWEEN ((x'b020', vt1.c0, t0.c0)) AND ((vt0.c0, vt0.c0, vt1.c0))) AS BLOB) ASC, ((((CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)AND(((vt0.c1)-(vt1.c0)))))OR(((vt0.c0)-(vt0.c1))))  NULLS FIRST;
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0 COLLATE BINARY, ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c1) IS FALSE), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))), CAST(vt1.c0 AS NUMERIC)))=(((+ (vt1.c1)), (- (t0.c0)), ((((vt1.c1)OR(vt1.c0)))OR(t0.c0)), 0.13408349640928507 COLLATE BINARY, '')))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt1.c1, vt1.c0, t0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((NULL)IS NOT(vt1.c1)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), t0.c0, ((vt1.c0)*(vt1.c1))))) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY, ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c1) IS FALSE), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))), CAST(vt1.c0 AS NUMERIC)))=(((+ (vt1.c1)), (- (t0.c0)), ((((vt1.c1)OR(vt1.c0)))OR(t0.c0)), 0.13408349640928507 COLLATE BINARY, '')))) IS TRUE)  as count FROM vt1, t0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt1.c1, vt1.c0, t0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((NULL)IS NOT(vt1.c1)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), t0.c0, ((vt1.c0)*(vt1.c1))))) DESC, vt1.c0 ASC);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0 COLLATE BINARY, ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c1) IS FALSE), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))), CAST(vt1.c0 AS NUMERIC)))=(((+ (vt1.c1)), (- (t0.c0)), ((((vt1.c1)OR(vt1.c0)))OR(t0.c0)), 0.13408349640928507 COLLATE BINARY, '')))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt1.c1, vt1.c0, t0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((NULL)IS NOT(vt1.c1)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), t0.c0, ((vt1.c0)*(vt1.c1))))) DESC, vt1.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 COLLATE BINARY, ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c1) IS FALSE), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))), CAST(vt1.c0 AS NUMERIC)))=(((+ (vt1.c1)), (- (t0.c0)), ((((vt1.c1)OR(vt1.c0)))OR(t0.c0)), 0.13408349640928507 COLLATE BINARY, '')))) IS TRUE)  as count FROM vt1, t0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt1.c1, vt1.c0, t0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((NULL)IS NOT(vt1.c1)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), t0.c0, ((vt1.c0)*(vt1.c1))))) DESC, vt1.c0 ASC);
SELECT ALL * FROM vt1, t0 WHERE ((((t0.c0 COLLATE BINARY, ((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c1) IS FALSE), (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((t0.c0))), CAST(vt1.c0 AS NUMERIC)))=(((+ (vt1.c1)), (- (t0.c0)), ((((vt1.c1)OR(vt1.c0)))OR(t0.c0)), 0.13408349640928507 COLLATE BINARY, '')))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS LAST, (((vt1.c1, vt1.c0, t0.c0)) BETWEEN ((((t0.c0) NOT NULL), ((NULL)IS NOT(vt1.c1)), (vt1.c0 IN ()))) AND (((vt1.c0 IN ()), t0.c0, ((vt1.c0)*(vt1.c1))))) DESC, vt1.c0 ASC;
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(t0.c0)))<(((((((((((((vt1.c1)AND(0.761560760521784)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)))) WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(t0.c0)))<(((((((((((((vt1.c1)AND(0.761560760521784)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(t0.c0)))<(((((((((((((vt1.c1)AND(0.761560760521784)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)))) WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(t0.c0)))<(((((((((((((vt1.c1)AND(0.761560760521784)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0)<>(t0.c0)))<(((((((((((((vt1.c1)AND(0.761560760521784)))AND(vt1.c1)))AND(vt0.c0)))OR(vt1.c1)))AND(vt0.c1)))OR(vt1.c1)))) WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)) AS NUMERIC));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TRIM(vt1.c1))||((vt0.c1 IN ()))) WHERE (((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((TRIM(vt1.c1))||((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TRIM(vt1.c1))||((vt0.c1 IN ()))) WHERE (((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON ((TRIM(vt1.c1))||((vt0.c1 IN ()))));
SELECT ALL * FROM vt1 INNER JOIN vt0 ON ((TRIM(vt1.c1))||((vt0.c1 IN ()))) WHERE (((CASE vt0.c0  WHEN vt1.c1 THEN vt0.c1 END) NOT NULL));
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1)<>(t0.c0)) AS TEXT)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<>(t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1)<>(t0.c0)) AS TEXT)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<>(t0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(vt0.c0 AS TEXT) ASC);
SELECT ALL * FROM vt0, t0 WHERE (CAST(((vt0.c1)<>(t0.c0)) AS TEXT)) ORDER BY CAST(vt0.c0 AS TEXT) ASC;
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (((vt0.c1)<(vt1.c1))) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOT BETWEEN (((vt0.c1)<(vt1.c1))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (((vt0.c1)<(vt1.c1))) AND ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOT BETWEEN (((vt0.c1)<(vt1.c1))) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0);
SELECT * FROM vt0, vt1, t0 WHERE (((((t0.c0) ISNULL)) NOT BETWEEN (((vt0.c1)<(vt1.c1))) AND ((+ (t0.c0)))));
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1667330922 ELSE vt0.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.8668961555621667 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN '-1080459368' WHEN 0xffffffffe2739a25 THEN vt1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1667330922 ELSE vt0.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.8668961555621667 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN '-1080459368' WHEN 0Xffffffffe2739a25 THEN vt1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1667330922 ELSE vt0.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.8668961555621667 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN '-1080459368' WHEN 0xffffffffe2739a25 THEN vt1.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1667330922 ELSE vt0.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.8668961555621667 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN '-1080459368' WHEN 0Xffffffffe2739a25 THEN vt1.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, vt1);
SELECT * FROM vt0, vt1 WHERE ((CASE vt1.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 1667330922 ELSE vt0.c1 END IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN 0.8668961555621667 WHEN vt1.c1 THEN vt1.c0 WHEN vt0.c1 THEN '-1080459368' WHEN 0xffffffffe2739a25 THEN vt1.c1 ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 COLLATE NOCASE IN (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((vt1.c1 COLLATE NOCASE IN (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 COLLATE NOCASE IN (vt1.c1)));
SELECT SUM(count) FROM (SELECT (((vt1.c1 COLLATE NOCASE IN (vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 COLLATE NOCASE IN (vt1.c1)));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)GLOB(t0.c0)) IN ())) ORDER BY (((((((((+ (t0.c0)))OR((NOT (t0.c0)))))OR(0.9828159406770549)))OR(json_array_length(t0.c0, t0.c0))))OR(CAST(t0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((((((+ (t0.c0)))OR((NOT (t0.c0)))))OR(0.9828159406770549)))OR(json_array_length(t0.c0, t0.c0))))OR(CAST(t0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)GLOB(t0.c0)) IN ())) ORDER BY (((((((((+ (t0.c0)))OR((NOT (t0.c0)))))OR(0.9828159406770549)))OR(json_array_length(t0.c0, t0.c0))))OR(CAST(t0.c0 AS REAL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (((((((((+ (t0.c0)))OR((NOT (t0.c0)))))OR(0.9828159406770549)))OR(json_array_length(t0.c0, t0.c0))))OR(CAST(t0.c0 AS REAL))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((LIKELY(DISTINCT vt0.c1)))!=((((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0))))) WHERE (CAST('s/SK' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('s/SK' AS INTEGER)) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((LIKELY(DISTINCT vt0.c1)))<>((((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((LIKELY(DISTINCT vt0.c1)))!=((((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0))))) WHERE (CAST('s/SK' AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST('s/SK' AS INTEGER)) IS TRUE)  as count FROM t0, vt0 INNER JOIN vt1 ON (((LIKELY(DISTINCT vt0.c1)))<>((((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0))))));
SELECT COUNT(*) FROM t0, vt0 INNER JOIN vt1 ON (((LIKELY(DISTINCT vt0.c1)))!=((((vt1.c1) BETWEEN (vt0.c0) AND (t0.c0))))) WHERE (CAST('s/SK' AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE BINARY))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((((t0.c0))==(('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((((t0.c0))==((''))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE BINARY))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((((t0.c0))==(('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((((t0.c0))==((''))))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))GLOB(t0.c0 COLLATE BINARY))) ORDER BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0))) BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((((t0.c0))==(('')))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((((vt0.c1))<=((vt0.c1))) AS INTEGER)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)>>(vt1.c1)))OR(CAST(t0.c0 AS REAL))) WHERE (((NULL) BETWEEN (x'0bdd') AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (x'0bdd') AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)>>(vt1.c1)))OR(CAST(t0.c0 AS REAL))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)>>(vt1.c1)))OR(CAST(t0.c0 AS REAL))) WHERE (((NULL) BETWEEN (x'0bdd') AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (x'0bdd') AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)>>(vt1.c1)))OR(CAST(t0.c0 AS REAL))));
SELECT * FROM t0 RIGHT OUTER JOIN vt1 ON ((((vt1.c1)>>(vt1.c1)))OR(CAST(t0.c0 AS REAL))) WHERE (((NULL) BETWEEN (x'0bdd') AND (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC), ((vt0.c1)GLOB(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC), ((vt0.c1)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC), ((vt0.c1)GLOB(vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC), ((vt0.c1)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), ((vt0.c1) NOTNULL), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))>=((vt0.c0 COLLATE BINARY, CAST(vt0.c1 AS NUMERIC), ((vt0.c1)GLOB(vt0.c1))))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((vt0.c1)%(vt0.c0))) NOT BETWEEN (NULL) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)%(vt0.c0))) NOT BETWEEN (NULL) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ORDER BY vt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((vt0.c1)%(vt0.c0))) NOT BETWEEN (NULL) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)%(vt0.c0))) NOT BETWEEN (NULL) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) ORDER BY vt0.c1);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) WHERE (((((vt0.c1)%(vt0.c0))) NOT BETWEEN (NULL) AND (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY vt0.c1;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CAST(0.9524598104403141 AS BLOB)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CAST(0.9524598104403141 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CAST(0.9524598104403141 AS BLOB)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CAST(0.9524598104403141 AS BLOB)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1))) BETWEEN ((vt0.c0 IN ())) AND (CAST(0.9524598104403141 AS BLOB)))) ORDER BY (((vt0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((vt0.c0)));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (('' IN ())) ORDER BY (((vt0.c1)) BETWEEN ((-172813401)) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((-172813401)) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (('' IN ())) ORDER BY (((vt0.c1)) BETWEEN ((-172813401)) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((('' IN ())) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((vt0.c1)) BETWEEN ((-172813401)) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (('' IN ())) ORDER BY (((vt0.c1)) BETWEEN ((-172813401)) AND ((CAST(vt0.c1 AS NUMERIC)))) ASC;
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c1)))) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))))>(((NOT (vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>=((COALESCE(DISTINCT 'pIJkx5<*e', vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c1)))) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))))>(((NOT (vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>=((COALESCE(DISTINCT 'pIJkx5<*e', vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c1)))) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))))>(((NOT (vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>=((COALESCE(DISTINCT 'pIJkx5<*e', vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c1)))) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt1 NOT INDEXED NATURAL JOIN vt0 ORDER BY (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))))>(((NOT (vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>=((COALESCE(DISTINCT 'pIJkx5<*e', vt0.c1)))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 NATURAL JOIN vt0 WHERE ((((((vt0.c1, vt0.c0, vt1.c1)) NOT BETWEEN ((vt1.c1, vt1.c1, vt0.c0)) AND ((vt0.c1, vt1.c0, vt1.c1)))) NOT BETWEEN (((vt0.c0)-(vt1.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY (((((((vt0.c0)OR(vt1.c0)))OR(vt0.c1))))>(((NOT (vt0.c0))))) ASC  NULLS FIRST, ((((vt0.c1 IN ())))>=((COALESCE(DISTINCT 'pIJkx5<*e', vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY CASE WHEN ((t0.c0)%(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -7.08069698E8, t0.c0))) WHEN ((((((((t0.c0)AND(x'')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.3228087263749744)-(t0.c0)) WHEN t0.c0 THEN LOWER('405809922') WHEN NULL THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)IS NOT(t0.c0)) END, CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)-(t0.c0)) IN (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)%(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -7.08069698E8, t0.c0))) WHEN ((((((((t0.c0)AND(x'')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.3228087263749744)-(t0.c0)) WHEN t0.c0 THEN LOWER('405809922') WHEN NULL THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)IS NOT(t0.c0)) END, CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY CASE WHEN ((t0.c0)%(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -7.08069698E8, t0.c0))) WHEN ((((((((t0.c0)AND(x'')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.3228087263749744)-(t0.c0)) WHEN t0.c0 THEN LOWER('405809922') WHEN NULL THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)IS NOT(t0.c0)) END, CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)-(t0.c0)) IN (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0)%(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -7.08069698E8, t0.c0))) WHEN ((((((((t0.c0)AND(x'')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.3228087263749744)-(t0.c0)) WHEN t0.c0 THEN LOWER('405809922') WHEN NULL THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)IS NOT(t0.c0)) END, CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)-(t0.c0)) IN (((t0.c0) NOT NULL)))) ORDER BY CASE WHEN ((t0.c0)%(t0.c0)) THEN (((t0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((t0.c0, -7.08069698E8, t0.c0))) WHEN ((((((((t0.c0)AND(x'')))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)) THEN ((0.3228087263749744)-(t0.c0)) WHEN t0.c0 THEN LOWER('405809922') WHEN NULL THEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) WHEN CAST(t0.c0 AS INTEGER) THEN ((t0.c0)IS NOT(t0.c0)) END, CASE WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)) THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END END;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(json(vt0.c1)))) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)!=(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(json(vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(json(vt0.c1)))) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)!=(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(json(vt0.c1)))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0 ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((((((t0.c0)<>(vt0.c1)))OR(((vt0.c1) IS TRUE))))AND(json(vt0.c1)))) ORDER BY ((t0.c0 COLLATE RTRIM)IS NOT(CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY (((t0.c0, vt1.c0, '1309797478')) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(t0.c0)), vt0.c0, ((((((((vt0.c1)OR('%鹇x')))AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))) AND ((NULL, vt1.c1, CAST(t0.c0 AS INTEGER)))) ASC, (NOT (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1))))  NULLS FIRST, t0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c0, vt1.c0, '1309797478')) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(t0.c0)), vt0.c0, ((((((((vt0.c1)OR('%鹇x')))AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))) AND ((NULL, vt1.c1, CAST(t0.c0 AS INTEGER)))) ASC, (NOT (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1))))  NULLS FIRST, t0.c0 COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY (((t0.c0, vt1.c0, '1309797478')) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(t0.c0)), vt0.c0, ((((((((vt0.c1)OR('%鹇x')))AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))) AND ((NULL, vt1.c1, CAST(t0.c0 AS INTEGER)))) ASC, (NOT (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1))))  NULLS FIRST, t0.c0 COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS REAL)) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((t0.c0, vt1.c0, '1309797478')) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(t0.c0)), vt0.c0, ((((((((vt0.c1)OR('%鹇x')))AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))) AND ((NULL, vt1.c1, CAST(t0.c0 AS INTEGER)))) ASC, (NOT (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1))))  NULLS FIRST, t0.c0 COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (CAST(((((NULL)AND(vt0.c1)))OR(vt0.c1)) AS REAL)) ORDER BY (((t0.c0, vt1.c0, '1309797478')) NOT BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(t0.c0)), vt0.c0, ((((((((vt0.c1)OR('%鹇x')))AND(vt0.c1)))OR(vt1.c1)))OR(vt1.c1)))) AND ((NULL, vt1.c1, CAST(t0.c0 AS INTEGER)))) ASC, (NOT (((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c1))))  NULLS FIRST, t0.c0 COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY NULLIF(COALESCE(vt0.c1, vt0.c0), LOWER(DISTINCT vt0.c1))  NULLS FIRST, (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(COALESCE(vt0.c1, vt0.c0), LOWER(DISTINCT vt0.c1))  NULLS FIRST, (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY NULLIF(COALESCE(vt0.c1, vt0.c0), LOWER(DISTINCT vt0.c1))  NULLS FIRST, (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(COALESCE(vt0.c1, vt0.c0), LOWER(DISTINCT vt0.c1))  NULLS FIRST, (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY NULLIF(COALESCE(vt0.c1, vt0.c0), LOWER(DISTINCT vt0.c1))  NULLS FIRST, (((vt0.c1 IN ())) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND (ABS(vt0.c0)));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(5.12609674E8)))OR(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(5.12609674E8)))OR(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(5.12609674E8)))OR(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND(5.12609674E8)))OR(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)AND(5.12609674E8)))OR(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (LAST_INSERT_ROWID() IN (vt1.c0)) INNER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) ISNULL) END WHERE ((((vt1.c0, vt0.c0, 0.12746469177239328, t0.c0, vt0.c1)) BETWEEN (((((t0.c0))<=((t0.c0))), vt0.c1 COLLATE BINARY, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)), vt1.c1)) AND ((0Xffffffffaf46fedc COLLATE BINARY, COALESCE(t0.c0, vt1.c0), (vt1.c0 IN ()), ((vt1.c0)GLOB(vt0.c1)), (- (vt0.c0)))))) ORDER BY '' DESC  NULLS FIRST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, 0.12746469177239328, t0.c0, vt0.c1)) BETWEEN (((((t0.c0))<=((t0.c0))), vt0.c1 COLLATE BINARY, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)), vt1.c1)) AND ((0xffffffffaf46fedc COLLATE BINARY, COALESCE(t0.c0, vt1.c0), (vt1.c0 IN ()), ((vt1.c0)GLOB(vt0.c1)), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (LAST_INSERT_ROWID() IN (vt1.c0)) INNER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) ISNULL) END ORDER BY '' DESC  NULLS FIRST, t0.c0 DESC);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (LAST_INSERT_ROWID() IN (vt1.c0)) INNER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) ISNULL) END WHERE ((((vt1.c0, vt0.c0, 0.12746469177239328, t0.c0, vt0.c1)) BETWEEN (((((t0.c0))<=((t0.c0))), vt0.c1 COLLATE BINARY, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)), vt1.c1)) AND ((0Xffffffffaf46fedc COLLATE BINARY, COALESCE(t0.c0, vt1.c0), (vt1.c0 IN ()), ((vt1.c0)GLOB(vt0.c1)), (- (vt0.c0)))))) ORDER BY '' DESC  NULLS FIRST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt0.c0, 0.12746469177239328, t0.c0, vt0.c1)) BETWEEN (((((t0.c0))<=((t0.c0))), vt0.c1 COLLATE BINARY, ((vt1.c1) NOT BETWEEN (vt1.c0) AND (t0.c0)), ((((vt0.c1)AND(vt0.c1)))AND(vt1.c0)), vt1.c1)) AND ((0xffffffffaf46fedc COLLATE BINARY, COALESCE(t0.c0, vt1.c0), (vt1.c0 IN ()), ((vt1.c0)GLOB(vt0.c1)), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (LAST_INSERT_ROWID() IN (vt1.c0)) INNER JOIN vt1 ON CASE WHEN vt1.c1 COLLATE NOCASE THEN ((vt1.c1) ISNULL) END ORDER BY '' DESC  NULLS FIRST, t0.c0 DESC);
SELECT * FROM vt0 WHERE ((((vt0.c1)==(0xffffffffb80f287f)) IN ())) ORDER BY NULL, LIKE(vt0.c1, vt0.c0, '#') COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)==(0Xffffffffb80f287f)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL, LIKE(vt0.c1, vt0.c0, '#') COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1)==(0xffffffffb80f287f)) IN ())) ORDER BY NULL, LIKE(vt0.c1, vt0.c0, '#') COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)==(0Xffffffffb80f287f)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL, LIKE(vt0.c1, vt0.c0, '#') COLLATE RTRIM DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((vt0.c1)==(0xffffffffb80f287f)) IN ())) ORDER BY NULL, LIKE(vt0.c1, vt0.c0, '#') COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(x'') THEN ((vt1.c0) BETWEEN (vt1.c1) AND (NULL)) END) ORDER BY (((vt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, (((((vt1.c0) IS TRUE)))=((vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(x'') THEN ((vt1.c0) BETWEEN (vt1.c1) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, (((((vt1.c0) IS TRUE)))=((vt0.c0))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(x'') THEN ((vt1.c0) BETWEEN (vt1.c1) AND (NULL)) END) ORDER BY (((vt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, (((((vt1.c0) IS TRUE)))=((vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(x'') THEN ((vt1.c0) BETWEEN (vt1.c1) AND (NULL)) END) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((vt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, (((((vt1.c0) IS TRUE)))=((vt0.c0))) ASC);
SELECT ALL * FROM vt0, vt1 WHERE (CASE WHEN TRIM(x'') THEN ((vt1.c0) BETWEEN (vt1.c1) AND (NULL)) END) ORDER BY (((vt1.c0) ISNULL) IN ()) ASC  NULLS FIRST, (((((vt1.c0) IS TRUE)))=((vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)+(t0.c0)))-(0.9184836924884411))) ORDER BY ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(t0.c0)))-(0.9184836924884411))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)+(t0.c0)))-(0.9184836924884411))) ORDER BY ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)+(t0.c0)))-(0.9184836924884411))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)+(t0.c0)))-(0.9184836924884411))) ORDER BY ((((t0.c0)OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((t0.c0 IN ()) AS BLOB));
SELECT * FROM vt1, t0 CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END IN (vt0.c1 COLLATE BINARY)) WHERE (((((((((((((((vt0.c0)<(t0.c0)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))))OR(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt1.c0 IN ('-191907989', vt1.c0)))))OR((vt1.c0 IN ()))))OR((- (vt0.c0)))))AND(((vt1.c1)*(t0.c0))))) ORDER BY ((t0.c0)<(((1.82885216E8)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)<(t0.c0)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))))OR(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt1.c0 IN ('-191907989', vt1.c0)))))OR((vt1.c0 IN ()))))OR((- (vt0.c0)))))AND(((vt1.c1)*(t0.c0))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END IN (vt0.c1 COLLATE BINARY)) ORDER BY ((t0.c0)<(((1.82885216E8)>>(vt0.c1)))));
SELECT * FROM vt1, t0 CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END IN (vt0.c1 COLLATE BINARY)) WHERE (((((((((((((((vt0.c0)<(t0.c0)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))))OR(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt1.c0 IN ('-191907989', vt1.c0)))))OR((vt1.c0 IN ()))))OR((- (vt0.c0)))))AND(((vt1.c1)*(t0.c0))))) ORDER BY ((t0.c0)<(((1.82885216E8)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c0)<(t0.c0)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))))OR(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt1.c0 IN ('-191907989', vt1.c0)))))OR((vt1.c0 IN ()))))OR((- (vt0.c0)))))AND(((vt1.c1)*(t0.c0))))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END IN (vt0.c1 COLLATE BINARY)) ORDER BY ((t0.c0)<(((1.82885216E8)>>(vt0.c1)))));
SELECT * FROM vt1, t0 CROSS JOIN vt0 ON (CASE WHEN t0.c0 THEN vt1.c1 ELSE t0.c0 END IN (vt0.c1 COLLATE BINARY)) WHERE (((((((((((((((vt0.c0)<(t0.c0)))AND(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))))OR(((vt1.c1) BETWEEN (t0.c0) AND (t0.c0)))))AND((vt1.c0 IN ('-191907989', vt1.c0)))))OR((vt1.c0 IN ()))))OR((- (vt0.c0)))))AND(((vt1.c1)*(t0.c0))))) ORDER BY ((t0.c0)<(((1.82885216E8)>>(vt0.c1))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('0.9828159406770549')))LIKE(((NULL) BETWEEN (0.9426369393863155) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND('0.9828159406770549')))LIKE(((NULL) BETWEEN (0.9426369393863155) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('0.9828159406770549')))LIKE(((NULL) BETWEEN (0.9426369393863155) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)AND(t0.c0)))AND('0.9828159406770549')))LIKE(((NULL) BETWEEN (0.9426369393863155) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c0)AND(t0.c0)))AND('0.9828159406770549')))LIKE(((NULL) BETWEEN (0.9426369393863155) AND (t0.c0)))));
SELECT * FROM t0, vt1, vt0 WHERE (CASE (- (vt1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (((('1386809761')AND(x'')))OR(vt1.c1)) END) ORDER BY CAST((+ ('')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (((('1386809761')AND(x'')))OR(vt1.c1)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((+ ('')) AS NUMERIC));
SELECT * FROM t0, vt1, vt0 WHERE (CASE (- (vt1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (((('1386809761')AND(x'')))OR(vt1.c1)) END) ORDER BY CAST((+ ('')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (vt1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (((('1386809761')AND(x'')))OR(vt1.c1)) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY CAST((+ ('')) AS NUMERIC));
SELECT * FROM t0, vt1, vt0 WHERE (CASE (- (vt1.c0))  WHEN ((vt0.c1) IS TRUE) THEN (((('1386809761')AND(x'')))OR(vt1.c1)) END) ORDER BY CAST((+ ('')) AS NUMERIC);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c1)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c1)IS(vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt1.c1)IS(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((vt1.c1)IS(vt1.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((CAST(vt1.c1 AS NUMERIC)))>=(((t0.c0 IN ())))) LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND(vt1.c1)))AND(STRFTIME(vt0.c0, vt1.c1, vt0.c0))) WHERE (TRIM(((vt1.c1)IS NOT(vt1.c1)), json_quote(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt1.c1)IS NOT(vt1.c1)), json_quote(vt1.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((CAST(vt1.c1 AS NUMERIC)))>=(((t0.c0 IN ())))) LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND(vt1.c1)))AND(STRFTIME(vt0.c0, vt1.c1, vt0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((CAST(vt1.c1 AS NUMERIC)))>=(((t0.c0 IN ())))) LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND(vt1.c1)))AND(STRFTIME(vt0.c0, vt1.c1, vt0.c0))) WHERE (TRIM(((vt1.c1)IS NOT(vt1.c1)), json_quote(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt1.c1)IS NOT(vt1.c1)), json_quote(vt1.c0))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON (((CAST(vt1.c1 AS NUMERIC)))>=(((t0.c0 IN ())))) LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND(vt1.c1)))AND(STRFTIME(vt0.c0, vt1.c1, vt0.c0))));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON (((CAST(vt1.c1 AS NUMERIC)))>=(((t0.c0 IN ())))) LEFT OUTER JOIN vt0 ON ((((vt1.c0)AND(vt1.c1)))AND(STRFTIME(vt0.c0, vt1.c1, vt0.c0))) WHERE (TRIM(((vt1.c1)IS NOT(vt1.c1)), json_quote(vt1.c0)));
SELECT * FROM vt0 NOT INDEXED WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt0.c0, vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c1) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT vt0.c0, vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (CAST(TRIM(DISTINCT vt0.c0, vt0.c1) AS BLOB));
SELECT ALL * FROM vt0 WHERE (((TYPEOF('%n(/辬	iZF'))>>((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF('%n(/辬	iZF'))>>((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TYPEOF('%n(/辬	iZF'))>>((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF('%n(/辬	iZF'))>>((- (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TYPEOF('%n(/辬	iZF'))>>((- (vt0.c1)))));
SELECT * FROM vt1 WHERE ((('753672003') NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('753672003') NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('753672003') NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((('753672003') NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((('753672003') NOT BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) IS TRUE))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('猩eYp0-I');
SELECT SUM(count) FROM (SELECT (('猩eYp0-I') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('猩eYp0-I');
SELECT SUM(count) FROM (SELECT (('猩eYp0-I') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ('猩eYp0-I');
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULLIF((+ (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END)) ORDER BY (((vt0.c0 IN ())) ISNULL)  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS BLOB))))OR(((((t0.c0)OR(t0.c0)))OR(t0.c0))))) ORDER BY (((((t0.c0, t0.c0, t0.c0))>((t0.c0, t0.c0, t0.c0)))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(DISTINCT (((t0.c0))>((t0.c0)))) WHERE (LIKELY(((vt1.c0) NOTNULL))) ORDER BY ((vt1.c1)<=(((vt1.c0)OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ABS(DISTINCT (((t0.c0))>((t0.c0)))) ORDER BY ((vt1.c1)<=(((vt1.c0)OR(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(DISTINCT (((t0.c0))>((t0.c0)))) WHERE (LIKELY(((vt1.c0) NOTNULL))) ORDER BY ((vt1.c1)<=(((vt1.c0)OR(t0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON ABS(DISTINCT (((t0.c0))>((t0.c0)))) ORDER BY ((vt1.c1)<=(((vt1.c0)OR(t0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 CROSS JOIN t0 ON ABS(DISTINCT (((t0.c0))>((t0.c0)))) WHERE (LIKELY(((vt1.c0) NOTNULL))) ORDER BY ((vt1.c1)<=(((vt1.c0)OR(t0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ ('808353628')) IN ())) ORDER BY (((NULL)) BETWEEN (('')) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ ('808353628')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN (('')) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ ('808353628')) IN ())) ORDER BY (((NULL)) BETWEEN (('')) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ ('808353628')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((NULL)) BETWEEN (('')) AND ((vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ ('808353628')) IN ())) ORDER BY (((NULL)) BETWEEN (('')) AND ((vt0.c1))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (0.4790802839787208);
SELECT SUM(count) FROM (SELECT ((0.4790802839787208) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.4790802839787208);
SELECT SUM(count) FROM (SELECT ((0.4790802839787208) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.4790802839787208);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY vt1.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c1 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY vt1.c1 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY vt1.c1 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (vt0.c0) ORDER BY vt1.c1 COLLATE BINARY  NULLS LAST;
SELECT * FROM t0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))<=((((vt0.c0, vt1.c0, vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt1.c1, vt0.c1, t0.c0, vt0.c0)) AND ((vt1.c0, 0.9791168702242486, vt0.c1, vt1.c0, vt0.c0)))))) ORDER BY ((((vt1.c0) IS TRUE)) IS FALSE)  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))<=((((vt0.c0, vt1.c0, vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt1.c1, vt0.c1, t0.c0, vt0.c0)) AND ((vt1.c0, 0.9791168702242486, vt0.c1, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) IS TRUE)) IS FALSE)  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))<=((((vt0.c0, vt1.c0, vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt1.c1, vt0.c1, t0.c0, vt0.c0)) AND ((vt1.c0, 0.9791168702242486, vt0.c1, vt1.c0, vt0.c0)))))) ORDER BY ((((vt1.c0) IS TRUE)) IS FALSE)  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c0 AS BLOB))<=((((vt0.c0, vt1.c0, vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt1.c1, vt0.c1, t0.c0, vt0.c0)) AND ((vt1.c0, 0.9791168702242486, vt0.c1, vt1.c0, vt0.c0)))))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((((vt1.c0) IS TRUE)) IS FALSE)  NULLS FIRST, vt0.c1  NULLS FIRST);
SELECT * FROM t0, vt1, vt0 WHERE (((CAST(vt1.c0 AS BLOB))<=((((vt0.c0, vt1.c0, vt1.c1, vt0.c0, t0.c0)) NOT BETWEEN ((vt0.c1, vt1.c1, vt0.c1, t0.c0, vt0.c0)) AND ((vt1.c0, 0.9791168702242486, vt0.c1, vt1.c0, vt0.c0)))))) ORDER BY ((((vt1.c0) IS TRUE)) IS FALSE)  NULLS FIRST, vt0.c1  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)%(vt1.c0)))*(vt1.c0))) ORDER BY (((vt1.c0 IN ())) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt1.c1));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)%(vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt1.c1)));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)%(vt1.c0)))*(vt1.c0))) ORDER BY (((vt1.c0 IN ())) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt1.c1));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)%(vt1.c0)))*(vt1.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1 ORDER BY (((vt1.c0 IN ())) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt1.c1)));
SELECT ALL * FROM vt0 NATURAL JOIN vt1 WHERE (((((vt1.c1)%(vt1.c0)))*(vt1.c0))) ORDER BY (((vt1.c0 IN ())) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (vt1.c1));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN t0 ON ((GLOB(vt0.c0, '癛旵Q21')) BETWEEN (vt0.c0) AND (' ﳅ]?㝞ጟBW#')) WHERE (CAST(ABS(vt1.c0) AS NUMERIC)) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, ((vt0.c1)!=(vt0.c1)), TRIM(vt0.c0, vt0.c1))) AND ((((vt1.c1)&(vt1.c1)), vt1.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN t0 ON ((GLOB(vt0.c0, '癛旵Q21')) BETWEEN (vt0.c0) AND (' ﳅ]?㝞ጟBW#')) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, ((vt0.c1)!=(vt0.c1)), TRIM(vt0.c0, vt0.c1))) AND ((((vt1.c1)&(vt1.c1)), vt1.c0, x''))) DESC);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN t0 ON ((GLOB(vt0.c0, '癛旵Q21')) BETWEEN (vt0.c0) AND (' ﳅ]?㝞ጟBW#')) WHERE (CAST(ABS(vt1.c0) AS NUMERIC)) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, ((vt0.c1)!=(vt0.c1)), TRIM(vt0.c0, vt0.c1))) AND ((((vt1.c1)&(vt1.c1)), vt1.c0, x''))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(ABS(vt1.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN vt0 ON t0.c0 CROSS JOIN t0 ON ((GLOB(vt0.c0, '癛旵Q21')) BETWEEN (vt0.c0) AND (' ﳅ]?㝞ጟBW#')) ORDER BY (((vt1.c1, vt0.c0, t0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt1.c1 ELSE vt1.c1 END, ((vt0.c1)!=(vt0.c1)), TRIM(vt0.c0, vt0.c1))) AND ((((vt1.c1)&(vt1.c1)), vt1.c0, x''))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((- (vt1.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(1.781241166E9 AS NUMERIC) LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)<=(vt0.c1)) AS NUMERIC) WHERE ((NULL COLLATE BINARY IN ())) ORDER BY json_array(((vt1.c1) BETWEEN (vt1.c1) AND ('-1372004376')), CAST(vt1.c0 AS INTEGER)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CAST(1.781241166E9 AS NUMERIC) LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)<=(vt0.c1)) AS NUMERIC) ORDER BY json_array(((vt1.c1) BETWEEN (vt1.c1) AND ('-1372004376')), CAST(vt1.c0 AS INTEGER)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(1.781241166E9 AS NUMERIC) LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)<=(vt0.c1)) AS NUMERIC) WHERE ((NULL COLLATE BINARY IN ())) ORDER BY json_array(((vt1.c1) BETWEEN (vt1.c1) AND ('-1372004376')), CAST(vt1.c0 AS INTEGER)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NULL COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON CAST(1.781241166E9 AS NUMERIC) LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)<=(vt0.c1)) AS NUMERIC) ORDER BY json_array(((vt1.c1) BETWEEN (vt1.c1) AND ('-1372004376')), CAST(vt1.c0 AS INTEGER)) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON CAST(1.781241166E9 AS NUMERIC) LEFT OUTER JOIN vt0 ON CAST(((vt1.c0)<=(vt0.c1)) AS NUMERIC) WHERE ((NULL COLLATE BINARY IN ())) ORDER BY json_array(((vt1.c1) BETWEEN (vt1.c1) AND ('-1372004376')), CAST(vt1.c0 AS INTEGER)) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((vt1.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE ((- (((vt1.c1) ISNULL))));
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN 0.9973439689396809 END)&(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN 0.9973439689396809 END)&(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN 0.9973439689396809 END)&(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN 0.9973439689396809 END)&(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((CASE WHEN vt1.c1 THEN 0.9973439689396809 END)&(((((((((vt1.c1)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ()))*('<k2>sX')));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))*('<k2>sX'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ()))*('<k2>sX')));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN ()))*('<k2>sX'))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1 IN ()))*('<k2>sX')));
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE WHEN ((0X3472c24f)/(x'')) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0X3472c24f)/(x'')) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE WHEN ((0X3472c24f)/(x'')) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((0X3472c24f)/(x'')) THEN CAST(vt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT ALL * FROM t0, vt0, vt1 WHERE (CASE WHEN ((0X3472c24f)/(x'')) THEN CAST(vt0.c0 AS NUMERIC) END);
SELECT * FROM vt0 WHERE ((((CAST(vt0.c1 AS BLOB)))==((CAST(vt0.c1 AS REAL))))) ORDER BY GLOB(CAST(vt0.c0 AS BLOB), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, x'';
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS BLOB)))==((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY GLOB(CAST(vt0.c0 AS BLOB), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, x'');
SELECT * FROM vt0 WHERE ((((CAST(vt0.c1 AS BLOB)))==((CAST(vt0.c1 AS REAL))))) ORDER BY GLOB(CAST(vt0.c0 AS BLOB), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, x'';
SELECT SUM(count) FROM (SELECT (((((CAST(vt0.c1 AS BLOB)))==((CAST(vt0.c1 AS REAL))))) IS TRUE)  as count FROM vt0 ORDER BY GLOB(CAST(vt0.c0 AS BLOB), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, x'');
SELECT * FROM vt0 WHERE ((((CAST(vt0.c1 AS BLOB)))==((CAST(vt0.c1 AS REAL))))) ORDER BY GLOB(CAST(vt0.c0 AS BLOB), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) DESC, (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN ()) ASC, x'';
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)||(vt0.c1))) BETWEEN (json_object(t0.c0, vt0.c1, t0.c0, vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt0.c1))) BETWEEN (json_object(t0.c0, vt0.c1, t0.c0, vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)||(vt0.c1))) BETWEEN (json_object(t0.c0, vt0.c1, t0.c0, vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)||(vt0.c1))) BETWEEN (json_object(t0.c0, vt0.c1, t0.c0, vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)||(vt0.c1))) BETWEEN (json_object(t0.c0, vt0.c1, t0.c0, vt0.c0)) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(t0.c0 COLLATE NOCASE AS INTEGER) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT NULL)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT NULL));
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (0.6938723869856299);
SELECT SUM(count) FROM (SELECT ALL ((0.6938723869856299) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (0.6938723869856299);
SELECT SUM(count) FROM (SELECT ALL ((0.6938723869856299) IS TRUE)  as count FROM vt1 NATURAL JOIN t0);
SELECT * FROM vt1 NATURAL JOIN t0 WHERE (0.6938723869856299);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())) ORDER BY (- (((vt1.c0)>(t0.c0))))  NULLS FIRST, (((vt1.c1, x'', ''))<((vt1.c1, vt1.c1, vt0.c1))) COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (- (((vt1.c0)>(t0.c0))))  NULLS FIRST, (((vt1.c1, x'', ''))<((vt1.c1, vt1.c1, vt0.c1))) COLLATE BINARY COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())) ORDER BY (- (((vt1.c0)>(t0.c0))))  NULLS FIRST, (((vt1.c1, x'', ''))<((vt1.c1, vt1.c1, vt0.c1))) COLLATE BINARY COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM vt1, vt0, t0 ORDER BY (- (((vt1.c0)>(t0.c0))))  NULLS FIRST, (((vt1.c1, x'', ''))<((vt1.c1, vt1.c1, vt0.c1))) COLLATE BINARY COLLATE BINARY DESC);
SELECT COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt0.c0))) IN ())) ORDER BY (- (((vt1.c0)>(t0.c0))))  NULLS FIRST, (((vt1.c1, x'', ''))<((vt1.c1, vt1.c1, vt0.c1))) COLLATE BINARY COLLATE BINARY DESC;
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(t0.c0) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(LOWER(t0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LOWER(t0.c0) AS TEXT)) IS TRUE)  as count FROM vt0, t0, vt1);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(LOWER(t0.c0) AS TEXT));
