-- Time: 2024/06/09 20:20:44
-- Database: database5
-- Database version: 3.40.0
-- seed value: 2404518205
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 2ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 2ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0X22771598); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'b59c'), ('578229656'), (578229656); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9031474674644516); -- 0ms;
ANALYZE vt0; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT vt0 SET c0='j<G' WHERE CAST(((vt0.c0) NOT BETWEEN ('578229656') AND (vt0.c0)) AS NUMERIC); -- 0ms;
PRAGMA main.cache_spill = -111913585576888914; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX  vt0; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=(0Xffffffffe68a5e30) WHERE CAST(vt0.c0 AS NUMERIC); -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (0X22771598); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.9031474674644516); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 TEXT ); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL rt0 SET c1='' WHERE HEX(DISTINCT ((((rt0.c1)AND(rt0.c3)))AND(NULL))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'') WHERE 0.49324557884866627; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((vt0.c0) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((- (vt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=x''; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('帰	tF<'); -- 0ms;
DROP TABLE vt0; -- 0ms;
REINDEX; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA main.locking_mode; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c0, c2) VALUES (0.49324557884866627, '-427139536', ''); -- 1ms;
ANALYZE; -- 1ms;
UPDATE OR FAIL rt0 SET c2='凒%Qd&Q.4', c1='肑^1QEK555', c0=x''; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''); -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB , c1 TEXT , c2 REAL CHECK ( (((~ (c1))) BETWEEN (((c0) IS TRUE)) AND (((c0)>=(c0))))) NOT NULL ON CONFLICT FAIL UNIQUE ); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('HOy^B!!') WHERE (('0.9031474674644516') BETWEEN ((((t0.c1))>=((t0.c2)))) AND (x'')); -- 0ms;
UPDATE rt0 SET c0=x'' WHERE ''; -- 0ms;
INSERT OR IGNORE INTO t0(c0, c1, c2) VALUES ('', '-1446387698', NULL), (0.2525603499201966, 0.7444559925937878, x'7677'), (x'', '-1446387698', x''); -- 0ms;
ANALYZE; -- 5ms;
PRAGMA legacy_file_format = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE rt0 SET c2=NULL WHERE (- (TYPEOF(rt0.c0))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c40 INT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('-1215207521'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (x'f149', '''sVKDNI'), (NULL, NULL), (0.8559142356087329, NULL); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c0)=(5.78229656E8, 0.9031474674644516) WHERE SUBSTR(rt0.c2, rt0.c0) COLLATE BINARY; -- 0ms;
PRAGMA temp.threads = 9106391319066465735; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c0) VALUES ('4t', 'rC쯿5AOUvW', ''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=243344912 unordered'); -- 0ms;
CREATE UNIQUE INDEX i81 ON t0(((((c0)AND(c0)))>>(HEX('-2036339864'))) COLLATE RTRIM,0xffffffffe7b97127,((UPPER(c1))>>('-2036339864'))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (NULL); -- 0ms;
COMMIT; -- 2ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES ('-2036339864', ''); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED, c2 UNINDEXED); -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0.9685000201536721); -- 0ms;
REINDEX NOCASE; -- 0ms;
DROP INDEX "i81"; -- 2ms;
END TRANSACTION; -- 0ms;
PRAGMA main.threads; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1616674671'); -- 2ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))>((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))>((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))>((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB))>((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c0 AS BLOB))>((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<(CAST(rt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))<(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT NULL))<(CAST(rt0.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (LIKELY(t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (LIKELY(t0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (LIKELY(t0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END)) AND (((+ (rt0.c2)))))) ORDER BY ((t0.c0 IN ()) IN (((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END)) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0 IN ()) IN (((rt0.c0)|(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END)) AND (((+ (rt0.c2)))))) ORDER BY ((t0.c0 IN ()) IN (((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END)) AND (((+ (rt0.c2)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c0 IN ()) IN (((rt0.c0)|(rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3)) NOT BETWEEN ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN rt0.c3 THEN rt0.c3 END)) AND (((+ (rt0.c2)))))) ORDER BY ((t0.c0 IN ()) IN (((rt0.c0)|(rt0.c2))))  NULLS LAST;
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))LIKE('-1178943203'))) ORDER BY (((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END, UNLIKELY(rt0.c1), (rt0.c3 IN (rt0.c0)))) AND ((((rt0.c0)!=(rt0.c2)), (rt0.c0 IN (rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c0))<((0.07539204108903974))), CASE WHEN 0xe812610 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))LIKE('-1178943203'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END, UNLIKELY(rt0.c1), (rt0.c3 IN (rt0.c0)))) AND ((((rt0.c0)<>(rt0.c2)), (rt0.c0 IN (rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c0))<((0.07539204108903974))), CASE WHEN 0xe812610 THEN rt0.c2 END))) ASC);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))LIKE('-1178943203'))) ORDER BY (((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END, UNLIKELY(rt0.c1), (rt0.c3 IN (rt0.c0)))) AND ((((rt0.c0)!=(rt0.c2)), (rt0.c0 IN (rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c0))<((0.07539204108903974))), CASE WHEN 0xe812610 THEN rt0.c2 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c1)))LIKE('-1178943203'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END, UNLIKELY(rt0.c1), (rt0.c3 IN (rt0.c0)))) AND ((((rt0.c0)<>(rt0.c2)), (rt0.c0 IN (rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c0))<((0.07539204108903974))), CASE WHEN 0xe812610 THEN rt0.c2 END))) ASC);
SELECT * FROM rt0 WHERE ((((~ (rt0.c1)))LIKE('-1178943203'))) ORDER BY (((rt0.c2, rt0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c3 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 END, UNLIKELY(rt0.c1), (rt0.c3 IN (rt0.c0)))) AND ((((rt0.c0)!=(rt0.c2)), (rt0.c0 IN (rt0.c3)), CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END, (((rt0.c0))<((0.07539204108903974))), CASE WHEN 0xe812610 THEN rt0.c2 END))) ASC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT * FROM t0 CROSS JOIN rt0 ON (((((~ (t0.c1)))OR(CASE 'L->''#5\wz'  WHEN t0.c1 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 END)))AND((((t0.c2))!=((t0.c1))))) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY TRIM(DISTINCT ((rt0.c0)&(t0.c1))) DESC  NULLS FIRST, rt0.c1 DESC, rt0.c3 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((~ (t0.c1)))OR(CASE 'L->''#5\wz'  WHEN t0.c1 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 END)))AND((((t0.c2))!=((t0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c0)&(t0.c1))) DESC  NULLS FIRST, rt0.c1 DESC, rt0.c3 COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN rt0 ON (((((~ (t0.c1)))OR(CASE 'L->''#5\wz'  WHEN t0.c1 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 END)))AND((((t0.c2))!=((t0.c1))))) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY TRIM(DISTINCT ((rt0.c0)&(t0.c1))) DESC  NULLS FIRST, rt0.c1 DESC, rt0.c3 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 IN ()) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (((((~ (t0.c1)))OR(CASE 'L->''#5\wz'  WHEN t0.c1 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 END)))AND((((t0.c2))!=((t0.c1))))) ORDER BY TRIM(DISTINCT ((rt0.c0)&(t0.c1))) DESC  NULLS FIRST, rt0.c1 DESC, rt0.c3 COLLATE RTRIM);
SELECT * FROM t0 CROSS JOIN rt0 ON (((((~ (t0.c1)))OR(CASE 'L->''#5\wz'  WHEN t0.c1 THEN rt0.c0 WHEN t0.c1 THEN t0.c0 WHEN rt0.c0 THEN t0.c1 END)))AND((((t0.c2))!=((t0.c1))))) WHERE (((rt0.c2 IN ()) IN ())) ORDER BY TRIM(DISTINCT ((rt0.c0)&(t0.c1))) DESC  NULLS FIRST, rt0.c1 DESC, rt0.c3 COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)AND((((rt0.c3))>((rt0.c3))))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)AND((((rt0.c3))>((rt0.c3))))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)AND((((rt0.c3))>((rt0.c3))))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)AND((((rt0.c3))>((rt0.c3))))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1 COLLATE RTRIM)AND((((rt0.c3))>((rt0.c3))))))AND((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))));
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(-1.215207521E9 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(-1.215207521E9 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(-1.215207521E9 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(-1.215207521E9 AS TEXT) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(-1.215207521E9 AS TEXT) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((('<%H4')LIKE(rt0.c3)))AND((((rt0.c0))<=((rt0.c0))))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((('<%H4')LIKE(rt0.c3)))AND((((rt0.c0))<=((rt0.c0))))))OR(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((('<%H4')LIKE(rt0.c3)))AND((((rt0.c0))<=((rt0.c0))))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((((((('<%H4')LIKE(rt0.c3)))AND((((rt0.c0))<=((rt0.c0))))))OR(rt0.c2))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((('<%H4')LIKE(rt0.c3)))AND((((rt0.c0))<=((rt0.c0))))))OR(rt0.c2)));
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)||(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)||(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)||(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)||(rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1)))  WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) THEN ((rt0.c0)||(rt0.c2)) END);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)<=(t0.c0)) AS INTEGER)) ORDER BY (IFNULL(t0.c2, t0.c1) IN ((- (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)<=(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (IFNULL(t0.c2, t0.c1) IN ((- (t0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)<=(t0.c0)) AS INTEGER)) ORDER BY (IFNULL(t0.c2, t0.c1) IN ((- (t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)<=(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY (IFNULL(t0.c2, t0.c1) IN ((- (t0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c2)<=(t0.c0)) AS INTEGER)) ORDER BY (IFNULL(t0.c2, t0.c1) IN ((- (t0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(UPPER(rt0.c2) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c1 END)))AND((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c1 END)))AND((NULL IN ()))) DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c1 END)))AND((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c2)OR(t0.c1)))OR(t0.c0)))AND(CASE WHEN t0.c0 THEN t0.c1 END)))AND((NULL IN ()))) DESC);
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL) ORDER BY ((0x350ae7f) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((0X350ae7f) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL) ORDER BY ((0x350ae7f) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((0X350ae7f) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0 WHERE (NULL) ORDER BY ((0x350ae7f) NOTNULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY NULL DESC, '-626406214' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC, '-626406214' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY NULL DESC, '-626406214' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY NULL DESC, '-626406214' ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END COLLATE BINARY) ORDER BY NULL DESC, '-626406214' ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY TOTAL_CHANGES(), (+ ((- (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY TOTAL_CHANGES(), (+ ((- (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY TOTAL_CHANGES(), (+ ((- (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY TOTAL_CHANGES(), (+ ((- (rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (rt0.c0) ORDER BY TOTAL_CHANGES(), (+ ((- (rt0.c3)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE ('1808211549') ORDER BY ((NULLIF(DISTINCT t0.c2, t0.c0)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1808211549') IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(DISTINCT t0.c2, t0.c0)) IS TRUE) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('1808211549') ORDER BY ((NULLIF(DISTINCT t0.c2, t0.c0)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1808211549') IS TRUE)  as count FROM t0 ORDER BY ((NULLIF(DISTINCT t0.c2, t0.c0)) IS TRUE) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ('1808211549') ORDER BY ((NULLIF(DISTINCT t0.c2, t0.c0)) IS TRUE) DESC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((((rt0.c3 IN (t0.c0)), ((rt0.c2)=(t0.c0)), LIKE(t0.c0, rt0.c3, '-')))>=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (t0.c0) AND (((rt0.c1)<<(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN (t0.c0)), ((rt0.c2)=(t0.c0)), LIKE(t0.c0, rt0.c3, '-')))>=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (t0.c0) AND (((rt0.c1)<<(t0.c1)))) DESC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c3 IN (t0.c0)), ((rt0.c2)=(t0.c0)), LIKE(t0.c0, rt0.c3, '-')))>=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (t0.c0) AND (((rt0.c1)<<(t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3 IN (t0.c0)), ((rt0.c2)=(t0.c0)), LIKE(t0.c0, rt0.c3, '-')))>=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (t0.c0) AND (((rt0.c1)<<(t0.c1)))) DESC);
SELECT * FROM rt0, t0 WHERE (((((rt0.c3 IN (t0.c0)), ((rt0.c2)=(t0.c0)), LIKE(t0.c0, rt0.c3, '-')))>=((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)), rt0.c2)))) ORDER BY ((((rt0.c0) ISNULL)) BETWEEN (t0.c0) AND (((rt0.c1)<<(t0.c1)))) DESC;
SELECT * FROM rt0, t0 WHERE ((((x''))!=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((x''))!=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))!=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((x''))!=((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c1 END AS NUMERIC) WHERE (((((rt0.c3)-(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)-(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c1 END AS NUMERIC));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c1 END AS NUMERIC) WHERE (((((rt0.c3)-(t0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)-(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c1 END AS NUMERIC));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON CAST(CASE WHEN rt0.c3 THEN t0.c0 ELSE t0.c1 END AS NUMERIC) WHERE (((((rt0.c3)-(t0.c0))) NOT NULL));
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 END END) ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c3 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c3 AS REAL))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 END END) ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c3 AS REAL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 END END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c3 AS REAL))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS BLOB) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 END END) ORDER BY (((t0.c1)) NOT BETWEEN ((CAST(rt0.c0 AS NUMERIC))) AND ((CAST(rt0.c3 AS REAL))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c1 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 IN (x''))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c1 IN (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 IN (x''))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (TRIM(t0.c0 COLLATE RTRIM)) ORDER BY (t0.c1 IN (x''))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t0.c1 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (CAST(t0.c1 AS TEXT))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0, t0.c0, t0.c1))>=((rt0.c2, rt0.c1, rt0.c3))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c1))>=((rt0.c2, rt0.c1, rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0, t0.c0, t0.c1))>=((rt0.c2, rt0.c1, rt0.c3))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c1))>=((rt0.c2, rt0.c1, rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CAST((((t0.c0, t0.c0, t0.c1))>=((rt0.c2, rt0.c1, rt0.c3))) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))%(CAST(t0.c0 AS BLOB)))) ORDER BY CASE t0.c2  WHEN 155696227 THEN ((t0.c2) NOT NULL) END ASC, (+ (t0.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT))%(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN 155696227 THEN ((t0.c2) NOT NULL) END ASC, (+ (t0.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))%(CAST(t0.c0 AS BLOB)))) ORDER BY CASE t0.c2  WHEN 155696227 THEN ((t0.c2) NOT NULL) END ASC, (+ (t0.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS TEXT))%(CAST(t0.c0 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c2  WHEN 155696227 THEN ((t0.c2) NOT NULL) END ASC, (+ (t0.c2)) COLLATE BINARY DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS TEXT))%(CAST(t0.c0 AS BLOB)))) ORDER BY CASE t0.c2  WHEN 155696227 THEN ((t0.c2) NOT NULL) END ASC, (+ (t0.c2)) COLLATE BINARY DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)*(rt0.c3)))AND((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c2, t0.c2, rt0.c1))))) WHERE (CASE ((t0.c1) NOT NULL)  WHEN (((t0.c0))>=((rt0.c2))) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (((t0.c0))>=((rt0.c3))) WHEN ((t0.c2)%(rt0.c3)) THEN ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) NOT NULL)  WHEN (((t0.c0))>=((rt0.c2))) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (((t0.c0))>=((rt0.c3))) WHEN ((t0.c2)%(rt0.c3)) THEN ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)*(rt0.c3)))AND((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c2, t0.c2, rt0.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)*(rt0.c3)))AND((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c2, t0.c2, rt0.c1))))) WHERE (CASE ((t0.c1) NOT NULL)  WHEN (((t0.c0))>=((rt0.c2))) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (((t0.c0))>=((rt0.c3))) WHEN ((t0.c2)%(rt0.c3)) THEN ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) NOT NULL)  WHEN (((t0.c0))>=((rt0.c2))) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (((t0.c0))>=((rt0.c3))) WHEN ((t0.c2)%(rt0.c3)) THEN ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) ELSE CAST(rt0.c2 AS BLOB) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)*(rt0.c3)))AND((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c2, t0.c2, rt0.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)*(rt0.c3)))AND((((rt0.c2, rt0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c2, t0.c2, rt0.c1))))) WHERE (CASE ((t0.c1) NOT NULL)  WHEN (((t0.c0))>=((rt0.c2))) THEN ((rt0.c1)%(t0.c1)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (((t0.c0))>=((rt0.c3))) WHEN ((t0.c2)%(rt0.c3)) THEN ((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) ELSE CAST(rt0.c2 AS BLOB) END);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)IS(t0.c1)))) AND ((((t0.c2)>=(t0.c0)))))) ORDER BY (+ (((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c2)IS(t0.c1)))) AND ((((t0.c2)>=(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((x'') IS FALSE))) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)IS(t0.c1)))) AND ((((t0.c2)>=(t0.c0)))))) ORDER BY (+ (((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((((t0.c2)IS(t0.c1)))) AND ((((t0.c2)>=(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (+ (((x'') IS FALSE))) ASC);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((((t0.c2)IS(t0.c1)))) AND ((((t0.c2)>=(t0.c0)))))) ORDER BY (+ (((x'') IS FALSE))) ASC;
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)), x'be2c')) WHERE (0.3750777686996395) ORDER BY ((((rt0.c2)<<(t0.c2)))<(t0.c2));
SELECT SUM(count) FROM (SELECT ((0.3750777686996395) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)), x'be2c')) ORDER BY ((((rt0.c2)<<(t0.c2)))<(t0.c2)));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)), x'be2c')) WHERE (0.3750777686996395) ORDER BY ((((rt0.c2)<<(t0.c2)))<(t0.c2));
SELECT SUM(count) FROM (SELECT ((0.3750777686996395) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)), x'be2c')) ORDER BY ((((rt0.c2)<<(t0.c2)))<(t0.c2)));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)<(rt0.c0)) IN (((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1)), x'be2c')) WHERE (0.3750777686996395) ORDER BY ((((rt0.c2)<<(t0.c2)))<(t0.c2));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (t0.c2 IN ()) THEN (t0.c1 IN ()) WHEN (t0.c1 IN ()) THEN CAST(rt0.c3 AS NUMERIC) WHEN (t0.c1 IN (x'')) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(t0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) ORDER BY NULL COLLATE BINARY  NULLS FIRST, (NULL COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN (t0.c2 IN ()) THEN (t0.c1 IN ()) WHEN (t0.c1 IN ()) THEN CAST(rt0.c3 AS NUMERIC) WHEN (t0.c1 IN (x'')) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(t0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL COLLATE BINARY  NULLS FIRST, (NULL COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (t0.c2 IN ()) THEN (t0.c1 IN ()) WHEN (t0.c1 IN ()) THEN CAST(rt0.c3 AS NUMERIC) WHEN (t0.c1 IN (x'')) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(t0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) ORDER BY NULL COLLATE BINARY  NULLS FIRST, (NULL COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN ())  WHEN (t0.c2 IN ()) THEN (t0.c1 IN ()) WHEN (t0.c1 IN ()) THEN CAST(rt0.c3 AS NUMERIC) WHEN (t0.c1 IN (x'')) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(t0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL COLLATE BINARY  NULLS FIRST, (NULL COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE (rt0.c0 IN ())  WHEN (t0.c2 IN ()) THEN (t0.c1 IN ()) WHEN (t0.c1 IN ()) THEN CAST(rt0.c3 AS NUMERIC) WHEN (t0.c1 IN (x'')) THEN ((((((((rt0.c1)AND(rt0.c2)))AND(t0.c1)))AND(rt0.c1)))OR(t0.c2)) ELSE CAST(rt0.c1 AS NUMERIC) END) ORDER BY NULL COLLATE BINARY  NULLS FIRST, (NULL COLLATE NOCASE IN ());
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS INTEGER)) IS TRUE)  NULLS LAST, ((((((rt0.c0)IS(rt0.c1)))OR((~ (-1455180373)))))OR((rt0.c0 IN (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS INTEGER)) IS TRUE)  NULLS LAST, ((((((rt0.c0)IS(rt0.c1)))OR((~ (-1455180373)))))OR((rt0.c0 IN (rt0.c3)))) ASC);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS INTEGER)) IS TRUE)  NULLS LAST, ((((((rt0.c0)IS(rt0.c1)))OR((~ (-1455180373)))))OR((rt0.c0 IN (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS INTEGER)) IS TRUE)  NULLS LAST, ((((((rt0.c0)IS(rt0.c1)))OR((~ (-1455180373)))))OR((rt0.c0 IN (rt0.c3)))) ASC);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (t0.c2) ORDER BY ((CAST(t0.c2 AS INTEGER)) IS TRUE)  NULLS LAST, ((((((rt0.c0)IS(rt0.c1)))OR((~ (-1455180373)))))OR((rt0.c0 IN (rt0.c3)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE NOCASE) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0)<<(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0)<<(rt0.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE NOCASE) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0)<<(rt0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0)<<(rt0.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c2)) COLLATE NOCASE) ORDER BY CASE ((t0.c0)GLOB(t0.c0))  WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 END THEN ((rt0.c0)<<(rt0.c2)) END DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c3)>=(0.575626618186822)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)>=(0.575626618186822))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c3)>=(0.575626618186822)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c3)>=(0.575626618186822))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c3)>=(0.575626618186822)))));
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY TYPEOF(t0.c0) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST, ((CAST(t0.c2 AS REAL))|(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY TYPEOF(t0.c0) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST, ((CAST(t0.c2 AS REAL))|(t0.c2))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY TYPEOF(t0.c0) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST, ((CAST(t0.c2 AS REAL))|(t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 NOT INDEXED ORDER BY TYPEOF(t0.c0) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST, ((CAST(t0.c2 AS REAL))|(t0.c2))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c1) ORDER BY TYPEOF(t0.c0) COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, (t0.c1 COLLATE NOCASE IN ()) ASC  NULLS FIRST, ((CAST(t0.c2 AS REAL))|(t0.c2))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(json_type(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(json_type(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(json_type(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(json_type(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)>=(json_type(rt0.c0))));
SELECT ALL * FROM rt0, t0 WHERE (((((json_type(x''))OR(CAST(t0.c2 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS LAST, ((((rt0.c1)/(t0.c0))) ISNULL) DESC  NULLS FIRST, (- (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((json_type(x''))OR(CAST(t0.c2 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS LAST, ((((rt0.c1)/(t0.c0))) ISNULL) DESC  NULLS FIRST, (- (rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0, t0 WHERE (((((json_type(x''))OR(CAST(t0.c2 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS LAST, ((((rt0.c1)/(t0.c0))) ISNULL) DESC  NULLS FIRST, (- (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((((((json_type(x''))OR(CAST(t0.c2 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS LAST, ((((rt0.c1)/(t0.c0))) ISNULL) DESC  NULLS FIRST, (- (rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0, t0 WHERE (((((json_type(x''))OR(CAST(t0.c2 AS BLOB))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY (((rt0.c1 IN ())) NOTNULL)  NULLS LAST, ((((rt0.c1)/(t0.c0))) ISNULL) DESC  NULLS FIRST, (- (rt0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM rt0, t0 WHERE (TYPEOF(NULL)) ORDER BY ((((((t0.c1)GLOB(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)))OR((('%n')+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c1)GLOB(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)))OR((('%n')+(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (TYPEOF(NULL)) ORDER BY ((((((t0.c1)GLOB(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)))OR((('%n')+(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c1)GLOB(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)))OR((('%n')+(rt0.c0)))) ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE (TYPEOF(NULL)) ORDER BY ((((((t0.c1)GLOB(rt0.c1)))AND(CASE rt0.c2  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END)))OR((('%n')+(rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'aa3c')) BETWEEN ((((((t0.c1)AND(NULL)))OR(t0.c1)))) AND ((((t0.c0)IS NOT('WU*'))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'aa3c')) BETWEEN ((((((t0.c1)AND(NULL)))OR(t0.c1)))) AND ((((t0.c0)IS NOT('WU*')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'aa3c')) BETWEEN ((((((t0.c1)AND(NULL)))OR(t0.c1)))) AND ((((t0.c0)IS NOT('WU*'))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'aa3c')) BETWEEN ((((((t0.c1)AND(NULL)))OR(t0.c1)))) AND ((((t0.c0)IS NOT('WU*')))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((x'aa3c')) BETWEEN ((((((t0.c1)AND(NULL)))OR(t0.c1)))) AND ((((t0.c0)IS NOT('WU*'))))));
SELECT * FROM rt0, t0 WHERE ((rt0.c3 IN (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((rt0.c3 IN (rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN (rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((rt0.c3 IN (rt0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t0 WHERE ((((t0.c1 IN ()))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))OR((- (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c1 IN ()))OR((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ()))OR((- (rt0.c3))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c1 IN ()))OR((- (rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0)GLOB((t0.c1 IN ())))) ORDER BY t0.c1 ASC  NULLS LAST, 0x1;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1 ASC  NULLS LAST, 0X1);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0)GLOB((t0.c1 IN ())))) ORDER BY t0.c1 ASC  NULLS LAST, 0x1;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)GLOB((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c1 ASC  NULLS LAST, 0X1);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0)GLOB((t0.c1 IN ())))) ORDER BY t0.c1 ASC  NULLS LAST, 0x1;
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c2)>=(t0.c1)), ((t0.c1)OR(t0.c0)), 0.8559142356087329)) AND ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), 0.8483544611532058))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c2)>=(t0.c1)), ((t0.c1)OR(t0.c0)), 0.8559142356087329)) AND ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), 0.8483544611532058)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c2)>=(t0.c1)), ((t0.c1)OR(t0.c0)), 0.8559142356087329)) AND ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), 0.8483544611532058))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c2)>=(t0.c1)), ((t0.c1)OR(t0.c0)), 0.8559142356087329)) AND ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), 0.8483544611532058)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1, t0.c0, t0.c1)) NOT BETWEEN ((((t0.c2)>=(t0.c1)), ((t0.c1)OR(t0.c0)), 0.8559142356087329)) AND ((((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)), (~ (t0.c1)), 0.8483544611532058))));
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((rt0.c3 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((rt0.c1)/(t0.c2)) THEN rt0.c1 ELSE CAST(rt0.c3 AS BLOB) END) ORDER BY (((- (t0.c0))) BETWEEN (((((((((((((t0.c1)AND(t0.c2)))OR(x'')))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))) AND (CASE rt0.c0  WHEN rt0.c3 THEN 0.7444559925937878 ELSE rt0.c1 END)), (((((rt0.c1))<((t0.c2))))<>(((rt0.c3)|(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((rt0.c1)/(t0.c2)) THEN rt0.c1 ELSE CAST(rt0.c3 AS BLOB) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) BETWEEN (((((((((((((t0.c1)AND(t0.c2)))OR(x'')))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))) AND (CASE rt0.c0  WHEN rt0.c3 THEN 0.7444559925937878 ELSE rt0.c1 END)), (((((rt0.c1))<((t0.c2))))<>(((rt0.c3)|(t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((rt0.c1)/(t0.c2)) THEN rt0.c1 ELSE CAST(rt0.c3 AS BLOB) END) ORDER BY (((- (t0.c0))) BETWEEN (((((((((((((t0.c1)AND(t0.c2)))OR(x'')))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))) AND (CASE rt0.c0  WHEN rt0.c3 THEN 0.7444559925937878 ELSE rt0.c1 END)), (((((rt0.c1))<((t0.c2))))<>(((rt0.c3)|(t0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE t0.c0 COLLATE NOCASE  WHEN ((rt0.c1)/(t0.c2)) THEN rt0.c1 ELSE CAST(rt0.c3 AS BLOB) END) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) BETWEEN (((((((((((((t0.c1)AND(t0.c2)))OR(x'')))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))) AND (CASE rt0.c0  WHEN rt0.c3 THEN 0.7444559925937878 ELSE rt0.c1 END)), (((((rt0.c1))<((t0.c2))))<>(((rt0.c3)|(t0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE t0.c0 COLLATE NOCASE  WHEN ((rt0.c1)/(t0.c2)) THEN rt0.c1 ELSE CAST(rt0.c3 AS BLOB) END) ORDER BY (((- (t0.c0))) BETWEEN (((((((((((((t0.c1)AND(t0.c2)))OR(x'')))AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3))) AND (CASE rt0.c0  WHEN rt0.c3 THEN 0.7444559925937878 ELSE rt0.c1 END)), (((((rt0.c1))<((t0.c2))))<>(((rt0.c3)|(t0.c2)))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c1)GLOB(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY json_valid(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c2)) THEN ((t0.c1)GLOB(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY json_valid(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))));
SELECT * FROM t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c1)GLOB(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY json_valid(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c2)) THEN ((t0.c1)GLOB(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) IS TRUE)  as count FROM t0 ORDER BY json_valid(((t0.c1) BETWEEN (t0.c1) AND (t0.c0))));
SELECT * FROM t0 WHERE (CASE WHEN (+ (t0.c2)) THEN ((t0.c1)GLOB(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END) ORDER BY json_valid(((t0.c1) BETWEEN (t0.c1) AND (t0.c0)));
SELECT COUNT(*) FROM t0 WHERE ('1188736483');
SELECT SUM(count) FROM (SELECT ALL (('1188736483') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('1188736483');
SELECT SUM(count) FROM (SELECT ALL (('1188736483') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ('1188736483');
SELECT * FROM t0 WHERE (((json_valid(t0.c1)) NOT NULL)) ORDER BY (- ((~ (0.45073878301129355))));
SELECT SUM(count) FROM (SELECT ((((json_valid(t0.c1)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (- ((~ (0.45073878301129355)))));
SELECT * FROM t0 WHERE (((json_valid(t0.c1)) NOT NULL)) ORDER BY (- ((~ (0.45073878301129355))));
SELECT SUM(count) FROM (SELECT ((((json_valid(t0.c1)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (- ((~ (0.45073878301129355)))));
SELECT * FROM t0 WHERE (((json_valid(t0.c1)) NOT NULL)) ORDER BY (- ((~ (0.45073878301129355))));
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c1 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c2)OR(x'')))OR(t0.c2)))OR(t0.c1)))AND(t0.c0))))) ORDER BY (NOT (((t0.c1)>=(t0.c1)))) ASC  NULLS LAST, ((CASE WHEN t0.c2 THEN t0.c1 WHEN '495026340' THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c2)OR(x'')))OR(t0.c2)))OR(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c1)>=(t0.c1)))) ASC  NULLS LAST, ((CASE WHEN t0.c2 THEN t0.c1 WHEN '495026340' THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c2)OR(x'')))OR(t0.c2)))OR(t0.c1)))AND(t0.c0))))) ORDER BY (NOT (((t0.c1)>=(t0.c1)))) ASC  NULLS LAST, ((CASE WHEN t0.c2 THEN t0.c1 WHEN '495026340' THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((((((((t0.c2)OR(x'')))OR(t0.c2)))OR(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (((t0.c1)>=(t0.c1)))) ASC  NULLS LAST, ((CASE WHEN t0.c2 THEN t0.c1 WHEN '495026340' THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((((((((t0.c2)OR(x'')))OR(t0.c2)))OR(t0.c1)))AND(t0.c0))))) ORDER BY (NOT (((t0.c1)>=(t0.c1)))) ASC  NULLS LAST, ((CASE WHEN t0.c2 THEN t0.c1 WHEN '495026340' THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t0.c0 WHEN x'' THEN t0.c2 END) BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)OR((+ (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END))) ORDER BY ((((rt0.c0) NOT NULL))<<((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR((+ (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) NOT NULL))<<((NOT (rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)OR((+ (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END))) ORDER BY ((((rt0.c0) NOT NULL))<<((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)OR((+ (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) NOT NULL))<<((NOT (rt0.c0)))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)OR((+ (t0.c2)))))AND(CASE WHEN t0.c0 THEN t0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN t0.c1 THEN t0.c1 END))) ORDER BY ((((rt0.c0) NOT NULL))<<((NOT (rt0.c0))));
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY CASE WHEN rt0.c3 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c3 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY CASE WHEN rt0.c3 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c3 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY) ORDER BY CASE WHEN rt0.c3 THEN t0.c0 END COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((LAST_INSERT_ROWID())OR(((((t0.c1)OR(t0.c1)))OR(t0.c2)))))AND(t0.c2 COLLATE BINARY))) ORDER BY CAST(t0.c0 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LAST_INSERT_ROWID())OR(((((t0.c1)OR(t0.c1)))OR(t0.c2)))))AND(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((LAST_INSERT_ROWID())OR(((((t0.c1)OR(t0.c1)))OR(t0.c2)))))AND(t0.c2 COLLATE BINARY))) ORDER BY CAST(t0.c0 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((LAST_INSERT_ROWID())OR(((((t0.c1)OR(t0.c1)))OR(t0.c2)))))AND(t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c0 COLLATE BINARY AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((((LAST_INSERT_ROWID())OR(((((t0.c1)OR(t0.c1)))OR(t0.c2)))))AND(t0.c2 COLLATE BINARY))) ORDER BY CAST(t0.c0 COLLATE BINARY AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c1, rt0.c3, rt0.c1)) BETWEEN (((NULL IN ()), ((t0.c1)>=(rt0.c1)), ((((rt0.c1)AND(t0.c2)))AND(rt0.c0)))) AND (((t0.c2 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c0, t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, rt0.c3, rt0.c1)) BETWEEN (((NULL IN ()), ((t0.c1)>=(rt0.c1)), ((((rt0.c1)AND(t0.c2)))AND(rt0.c0)))) AND (((t0.c2 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c0, t0.c2))))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c1, rt0.c3, rt0.c1)) BETWEEN (((NULL IN ()), ((t0.c1)>=(rt0.c1)), ((((rt0.c1)AND(t0.c2)))AND(rt0.c0)))) AND (((t0.c2 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c0, t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, rt0.c3, rt0.c1)) BETWEEN (((NULL IN ()), ((t0.c1)>=(rt0.c1)), ((((rt0.c1)AND(t0.c2)))AND(rt0.c0)))) AND (((t0.c2 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c0, t0.c2))))))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c1, rt0.c3, rt0.c1)) BETWEEN (((NULL IN ()), ((t0.c1)>=(rt0.c1)), ((((rt0.c1)AND(t0.c2)))AND(rt0.c0)))) AND (((t0.c2 IN ()), CAST(t0.c2 AS NUMERIC), (((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((x'', rt0.c2, rt0.c1)) AND ((t0.c0, rt0.c0, t0.c2)))))));
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (rt0.c3)) AS TEXT));
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (rt0.c3) AND (0.4141308403949433))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (rt0.c3) AND (0.4141308403949433))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (rt0.c3) AND (0.4141308403949433))) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) BETWEEN (rt0.c3) AND (0.4141308403949433))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2);
SELECT * FROM rt0 WHERE ((((rt0.c3 IN ())) BETWEEN (rt0.c3) AND (0.4141308403949433))) ORDER BY rt0.c2;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (+ ((+ (0.28321178795822954))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((+ (0.28321178795822954))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (+ ((+ (0.28321178795822954))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT NULL)) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((+ (0.28321178795822954))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOT NULL)) BETWEEN ((~ (rt0.c3))) AND (((((rt0.c2)AND(rt0.c3)))AND(rt0.c3))))) ORDER BY (+ ((+ (0.28321178795822954))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (COALESCE(((((((((rt0.c3)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((((((rt0.c3)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c0) NOT NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (COALESCE(((((((((rt0.c3)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(((((((((rt0.c3)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c0) NOT NULL))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (COALESCE(((((((((rt0.c3)OR(t0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)), ((rt0.c0) NOT NULL)));
SELECT ALL * FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) ORDER BY ((rt0.c2) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN NULL END) AND (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN NULL END) AND (((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) ORDER BY ((rt0.c2) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN NULL END) AND (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN NULL END) AND (((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((((((x'') NOT BETWEEN (rt0.c3) AND (rt0.c2)))OR(rt0.c2)))AND(rt0.c1))) ORDER BY ((rt0.c2) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN NULL END) AND (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1)))<(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c1)))<(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1)))<(rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt0.c1)))<(rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3)IS(rt0.c1)))<(rt0.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c2 IN ())))<=((((rt0.c3) NOT NULL))))) ORDER BY CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE (((t0.c2, t0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))<=((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE (((t0.c2, t0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c2 IN ())))<=((((rt0.c3) NOT NULL))))) ORDER BY CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE (((t0.c2, t0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))) END;
SELECT SUM(count) FROM (SELECT ((((((t0.c2 IN ())))<=((((rt0.c3) NOT NULL))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE (((t0.c2, t0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))) END);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((t0.c2 IN ())))<=((((rt0.c3) NOT NULL))))) ORDER BY CASE WHEN ((rt0.c2) IS FALSE) THEN rt0.c1 COLLATE RTRIM ELSE (((t0.c2, t0.c1, rt0.c0)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c0)) AND ((t0.c0, rt0.c1, rt0.c1))) END;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-285383638');
SELECT SUM(count) FROM (SELECT ALL (('-285383638') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-285383638');
SELECT SUM(count) FROM (SELECT ALL (('-285383638') IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ('-285383638');
SELECT * FROM t0 NOT INDEXED WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT * FROM t0 NOT INDEXED WHERE (t0.c1);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((NOT (rt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, t0 WHERE (((json_insert(t0.c2, t0.c0, rt0.c1)) NOT NULL)) ORDER BY ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) ASC  NULLS FIRST, x'', t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(t0.c2, t0.c0, rt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) ASC  NULLS FIRST, x'', t0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((json_insert(t0.c2, t0.c0, rt0.c1)) NOT NULL)) ORDER BY ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) ASC  NULLS FIRST, x'', t0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_insert(t0.c2, t0.c0, rt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) ASC  NULLS FIRST, x'', t0.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((json_insert(t0.c2, t0.c0, rt0.c1)) NOT NULL)) ORDER BY ((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) ASC  NULLS FIRST, x'', t0.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((json_insert(rt0.c3, 0.7848525634286817, t0.c2) IN ())) ORDER BY ((0.570831446936884) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_insert(rt0.c3, 0.7848525634286817, t0.c2) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.570831446936884) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((json_insert(rt0.c3, 0.7848525634286817, t0.c2) IN ())) ORDER BY ((0.570831446936884) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((json_insert(rt0.c3, 0.7848525634286817, t0.c2) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((0.570831446936884) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((json_insert(rt0.c3, 0.7848525634286817, t0.c2) IN ())) ORDER BY ((0.570831446936884) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ (rt0.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN rt0 ON rt0.c3 WHERE ((((~ (t0.c0)))&(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))&(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c3);
SELECT * FROM t0 INNER JOIN rt0 ON rt0.c3 WHERE ((((~ (t0.c0)))&(((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0)))&(((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON rt0.c3);
SELECT * FROM t0 INNER JOIN rt0 ON rt0.c3 WHERE ((((~ (t0.c0)))&(((rt0.c0)>=(rt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((0.4079293250598557)&(TRIM(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4079293250598557)&(TRIM(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((0.4079293250598557)&(TRIM(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((0.4079293250598557)&(TRIM(DISTINCT t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((0.4079293250598557)&(TRIM(DISTINCT t0.c2))));
SELECT ALL COUNT(*) FROM t0 WHERE (578229656) ORDER BY TYPEOF(t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((578229656) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (578229656) ORDER BY TYPEOF(t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((578229656) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(t0.c0));
SELECT ALL COUNT(*) FROM t0 WHERE (578229656) ORDER BY TYPEOF(t0.c0);
SELECT ALL * FROM rt0 WHERE (((NULL)IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)IS(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS(rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((NULL)IS(rt0.c1)));
SELECT ALL * FROM t0 WHERE (((645684793) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((645684793) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((645684793) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((645684793) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((645684793) IS TRUE));
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (x'');
SELECT ALL * FROM t0 WHERE ((((((NULL)-('-1616674671'))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((NULL)-('-1616674671'))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL)-('-1616674671'))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))));
SELECT SUM(count) FROM (SELECT (((((((NULL)-('-1616674671'))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NULL)-('-1616674671'))))>((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN (t0.c0)) IN ())) ORDER BY ((NULL COLLATE BINARY) BETWEEN (((t0.c2)*(t0.c0))) AND (((t0.c2)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (t0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULL COLLATE BINARY) BETWEEN (((t0.c2)*(t0.c0))) AND (((t0.c2)LIKE(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN (t0.c0)) IN ())) ORDER BY ((NULL COLLATE BINARY) BETWEEN (((t0.c2)*(t0.c0))) AND (((t0.c2)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 IN (t0.c0)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY ((NULL COLLATE BINARY) BETWEEN (((t0.c2)*(t0.c0))) AND (((t0.c2)LIKE(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((rt0.c1 IN (t0.c0)) IN ())) ORDER BY ((NULL COLLATE BINARY) BETWEEN (((t0.c2)*(t0.c0))) AND (((t0.c2)LIKE(rt0.c2)))) DESC;
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))==((rt0.c2))) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN CAST('-221086647' AS TEXT) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END ELSE rt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN CAST('-221086647' AS TEXT) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END ELSE rt0.c1 END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))==((rt0.c2))) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN CAST('-221086647' AS TEXT) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END ELSE rt0.c1 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))=((rt0.c2))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c2  WHEN CAST('-221086647' AS TEXT) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END ELSE rt0.c1 END  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))==((rt0.c2))) COLLATE BINARY) ORDER BY CASE rt0.c2  WHEN CAST('-221086647' AS TEXT) THEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END ELSE rt0.c1 END  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)*(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)*(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)*(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT NULL)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)*(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((t0.c2) BETWEEN (t0.c0) AND (t0.c1))) AND (((t0.c2)*(t0.c1)))));
SELECT * FROM rt0, t0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((NULL) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((NULL) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((x'' IN (rt0.c1, rt0.c3))))<=((rt0.c1))), (('(?')||(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'' IN (rt0.c1, rt0.c3))))<=((rt0.c1))), (('(?')||(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((x'' IN (rt0.c1, rt0.c3))))<=((rt0.c1))), (('(?')||(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (((rt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((x'' IN (rt0.c1, rt0.c3))))<=((rt0.c1))), (('(?')||(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((rt0.c0 COLLATE BINARY IN ())) ORDER BY ((((x'' IN (rt0.c1, rt0.c3))))<=((rt0.c1))), (('(?')||(((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')>>((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((x'df02', rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((rt0.c2)=(rt0.c2)) WHEN '' THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END THEN -751065894 ELSE ((rt0.c3) IS FALSE) END DESC, ((((rt0.c3 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c3)) DESC, CAST(LOWER(rt0.c2) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((x'df02', rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((rt0.c2)=(rt0.c2)) WHEN '' THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END THEN -751065894 ELSE ((rt0.c3) IS FALSE) END DESC, ((((rt0.c3 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c3)) DESC, CAST(LOWER(rt0.c2) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')>>((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((x'df02', rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((rt0.c2)=(rt0.c2)) WHEN '' THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END THEN -751065894 ELSE ((rt0.c3) IS FALSE) END DESC, ((((rt0.c3 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c3)) DESC, CAST(LOWER(rt0.c2) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'')>>((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((x'df02', rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((rt0.c2)=(rt0.c2)) WHEN '' THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END THEN -751065894 ELSE ((rt0.c3) IS FALSE) END DESC, ((((rt0.c3 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c3)) DESC, CAST(LOWER(rt0.c2) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((x'')>>((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((x'df02', rt0.c1, rt0.c3)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)||(rt0.c0)) THEN ((rt0.c2)=(rt0.c2)) WHEN '' THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 END THEN -751065894 ELSE ((rt0.c3) IS FALSE) END DESC, ((((rt0.c3 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c3)) DESC, CAST(LOWER(rt0.c2) AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN rt0.c3 WHEN CAST(rt0.c1 AS INTEGER) THEN ((NULL)<=(rt0.c1)) WHEN x'' THEN ((rt0.c1) ISNULL) WHEN ((rt0.c3)<=(x'')) THEN x'' END) ORDER BY ((UPPER(DISTINCT rt0.c1))-(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS TRUE) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN rt0.c3 WHEN CAST(rt0.c1 AS INTEGER) THEN ((NULL)<=(rt0.c1)) WHEN x'' THEN ((rt0.c1) ISNULL) WHEN ((rt0.c3)<=(x'')) THEN x'' END) IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(DISTINCT rt0.c1))-(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN rt0.c3 WHEN CAST(rt0.c1 AS INTEGER) THEN ((NULL)<=(rt0.c1)) WHEN x'' THEN ((rt0.c1) ISNULL) WHEN ((rt0.c3)<=(x'')) THEN x'' END) ORDER BY ((UPPER(DISTINCT rt0.c1))-(rt0.c2));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS TRUE) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN rt0.c3 WHEN CAST(rt0.c1 AS INTEGER) THEN ((NULL)<=(rt0.c1)) WHEN x'' THEN ((rt0.c1) ISNULL) WHEN ((rt0.c3)<=(x'')) THEN x'' END) IS TRUE)  as count FROM rt0 ORDER BY ((UPPER(DISTINCT rt0.c1))-(rt0.c2)));
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN (rt0.c1 IN ()) WHEN rt0.c3 THEN rt0.c3 WHEN CAST(rt0.c1 AS INTEGER) THEN ((NULL)<=(rt0.c1)) WHEN x'' THEN ((rt0.c1) ISNULL) WHEN ((rt0.c3)<=(x'')) THEN x'' END) ORDER BY ((UPPER(DISTINCT rt0.c1))-(rt0.c2));
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c1)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c1)LIKE(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c1)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2))) NOT BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c1)LIKE(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((NOT (t0.c2))) NOT BETWEEN (((t0.c0)IS NOT(t0.c0))) AND (((t0.c1)LIKE(t0.c1)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE WHEN ((0.8917596752220959) NOT NULL) THEN CAST(rt0.c1 AS INTEGER) END WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE WHEN ((0.8917596752220959) NOT NULL) THEN CAST(rt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE WHEN ((0.8917596752220959) NOT NULL) THEN CAST(rt0.c1 AS INTEGER) END WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CASE WHEN ((0.8917596752220959) NOT NULL) THEN CAST(rt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt0 CROSS JOIN t0 ON CASE WHEN ((0.8917596752220959) NOT NULL) THEN CAST(rt0.c1 AS INTEGER) END WHERE ((((rt0.c2)) NOT BETWEEN (((rt0.c1 IN (t0.c0)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt0.c0))) ORDER BY ((((rt0.c3)>>(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>>(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt0.c0))) ORDER BY ((((rt0.c3)>>(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT (NOT (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)>>(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (IFNULL(DISTINCT (NOT (rt0.c1)), SQLITE_COMPILEOPTION_GET(rt0.c0))) ORDER BY ((((rt0.c3)>>(x''))) BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT * FROM t0, rt0 WHERE (((t0.c1)LIKE(((t0.c1)<(rt0.c2))))) ORDER BY (((((((rt0.c1)OR(rt0.c0)))AND(t0.c2))))<>(((NOT (rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)LIKE(((t0.c1)<(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c1)OR(rt0.c0)))AND(t0.c2))))<>(((NOT (rt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((t0.c1)LIKE(((t0.c1)<(rt0.c2))))) ORDER BY (((((((rt0.c1)OR(rt0.c0)))AND(t0.c2))))<>(((NOT (rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)LIKE(((t0.c1)<(rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c1)OR(rt0.c0)))AND(t0.c2))))<>(((NOT (rt0.c0))))) ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((t0.c1)LIKE(((t0.c1)<(rt0.c2))))) ORDER BY (((((((rt0.c1)OR(rt0.c0)))AND(t0.c2))))<>(((NOT (rt0.c0))))) ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((t0.c2)IS NOT(t0.c1))) AND (((t0.c0)*(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((t0.c2)IS NOT(t0.c1))) AND (((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((t0.c2)IS NOT(t0.c1))) AND (((t0.c0)*(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((t0.c2)IS NOT(t0.c1))) AND (((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN (((t0.c2)IS NOT(t0.c1))) AND (((t0.c0)*(t0.c2)))));
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT NULL)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))) AND (((t0.c2)<=(t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((NULL)%(((((t0.c0)OR(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((t0.c0)OR(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL)%(((((t0.c0)OR(t0.c1)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)%(((((t0.c0)OR(t0.c1)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((NULL)%(((((t0.c0)OR(t0.c1)))AND(t0.c0)))));
SELECT * FROM t0 WHERE ((- ((t0.c2 IN (t0.c1, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c2 IN (t0.c1, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- ((t0.c2 IN (t0.c1, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c2 IN (t0.c1, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- ((t0.c2 IN (t0.c1, t0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((NULL) IS TRUE)) ISNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((NULL) IS TRUE)) ISNULL));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON LIKE(((t0.c1) IS FALSE), (t0.c1 IN ()), 'D') WHERE (CAST(((rt0.c0)<(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<(rt0.c2)) AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LIKE(((t0.c1) IS FALSE), (t0.c1 IN ()), 'D'));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON LIKE(((t0.c1) IS FALSE), (t0.c1 IN ()), 'D') WHERE (CAST(((rt0.c0)<(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)<(rt0.c2)) AS REAL)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON LIKE(((t0.c1) IS FALSE), (t0.c1 IN ()), 'D'));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON LIKE(((t0.c1) IS FALSE), (t0.c1 IN ()), 'D') WHERE (CAST(((rt0.c0)<(rt0.c2)) AS REAL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(CAST(t0.c2 AS REAL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(CAST(t0.c2 AS REAL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(CAST(t0.c2 AS REAL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(CAST(t0.c2 AS REAL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((((rt0.c2)OR(((t0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(LENGTH(rt0.c2))))AND(CAST(t0.c2 AS REAL))))AND(((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))))) ORDER BY (((rt0.c0 IN ())) NOTNULL) DESC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((QUOTE(rt0.c1))/((+ (rt0.c1)))) WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (0x3f196437) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c3)) THEN ((t0.c2) NOT NULL) ELSE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) NOT BETWEEN (0X3f196437) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((QUOTE(rt0.c1))/((+ (rt0.c1)))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c3)) THEN ((t0.c2) NOT NULL) ELSE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((QUOTE(rt0.c1))/((+ (rt0.c1)))) WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (0x3f196437) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c3)) THEN ((t0.c2) NOT NULL) ELSE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(NULL AS TEXT)) NOT BETWEEN (0X3f196437) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((QUOTE(rt0.c1))/((+ (rt0.c1)))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c3)) THEN ((t0.c2) NOT NULL) ELSE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) END  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((QUOTE(rt0.c1))/((+ (rt0.c1)))) WHERE (((CAST(NULL AS TEXT)) NOT BETWEEN (0x3f196437) AND (rt0.c0 COLLATE NOCASE))) ORDER BY CASE WHEN (rt0.c0 IN (rt0.c3)) THEN ((t0.c2) NOT NULL) ELSE ((((((((rt0.c3)AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) END  NULLS FIRST;
SELECT * FROM t0 WHERE (0.22562413969939266) ORDER BY ((((t0.c0)<(t0.c2))) BETWEEN (((t0.c0) IS FALSE)) AND (x'')) DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL ((0.22562413969939266) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<(t0.c2))) BETWEEN (((t0.c0) IS FALSE)) AND (x'')) DESC, NULL);
SELECT * FROM t0 WHERE (0.22562413969939266) ORDER BY ((((t0.c0)<(t0.c2))) BETWEEN (((t0.c0) IS FALSE)) AND (x'')) DESC, NULL;
SELECT SUM(count) FROM (SELECT ALL ((0.22562413969939266) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)<(t0.c2))) BETWEEN (((t0.c0) IS FALSE)) AND (x'')) DESC, NULL);
SELECT * FROM t0 WHERE (0.22562413969939266) ORDER BY ((((t0.c0)<(t0.c2))) BETWEEN (((t0.c0) IS FALSE)) AND (x'')) DESC, NULL;
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') ISNULL)) ORDER BY LTRIM(((rt0.c3)&(rt0.c3)), ((0.3353858790703723) NOT NULL)) ASC, (CAST(rt0.c0 AS BLOB) IN ()) ASC, CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c3)&(rt0.c3)), ((0.3353858790703723) NOT NULL)) ASC, (CAST(rt0.c0 AS BLOB) IN ()) ASC, CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') ISNULL)) ORDER BY LTRIM(((rt0.c3)&(rt0.c3)), ((0.3353858790703723) NOT NULL)) ASC, (CAST(rt0.c0 AS BLOB) IN ()) ASC, CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((('') ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY LTRIM(((rt0.c3)&(rt0.c3)), ((0.3353858790703723) NOT NULL)) ASC, (CAST(rt0.c0 AS BLOB) IN ()) ASC, CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((('') ISNULL)) ORDER BY LTRIM(((rt0.c3)&(rt0.c3)), ((0.3353858790703723) NOT NULL)) ASC, (CAST(rt0.c0 AS BLOB) IN ()) ASC, CAST(((rt0.c2)*(rt0.c0)) AS NUMERIC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)%(t0.c1)) IN ((t0.c2 IN ()))) WHERE (CAST((- (rt0.c2)) AS INTEGER)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)%(t0.c1)) IN ((t0.c2 IN ()))) ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)%(t0.c1)) IN ((t0.c2 IN ()))) WHERE (CAST((- (rt0.c2)) AS INTEGER)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c2)) AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)%(t0.c1)) IN ((t0.c2 IN ()))) ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON (((rt0.c2)%(t0.c1)) IN ((t0.c2 IN ()))) WHERE (CAST((- (rt0.c2)) AS INTEGER)) ORDER BY NULL DESC;
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE WHEN '\nm\r0' THEN t0.c0 WHEN t0.c1 THEN 0x1 WHEN 0.48901476464012694 THEN '}Ej' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN '\nm\r0' THEN t0.c0 WHEN t0.c1 THEN 0X1 WHEN 0.48901476464012694 THEN '}Ej' END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE WHEN '\nm\r0' THEN t0.c0 WHEN t0.c1 THEN 0x1 WHEN 0.48901476464012694 THEN '}Ej' END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN '\nm\r0' THEN t0.c0 WHEN t0.c1 THEN 0X1 WHEN 0.48901476464012694 THEN '}Ej' END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (CASE WHEN '\nm\r0' THEN t0.c0 WHEN t0.c1 THEN 0x1 WHEN 0.48901476464012694 THEN '}Ej' END)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((NOT (CAST(rt0.c1 AS TEXT))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c1) NOT BETWEEN (NULL) AND (NULL)))AND(((t0.c1) NOT NULL))))OR(t0.c2 COLLATE BINARY)))OR((t0.c2 IN ()))))AND(((t0.c1)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1) NOT BETWEEN (NULL) AND (NULL)))AND(((t0.c1) NOT NULL))))OR(t0.c2 COLLATE BINARY)))OR((t0.c2 IN ()))))AND(((t0.c1)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c1) NOT BETWEEN (NULL) AND (NULL)))AND(((t0.c1) NOT NULL))))OR(t0.c2 COLLATE BINARY)))OR((t0.c2 IN ()))))AND(((t0.c1)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c1) NOT BETWEEN (NULL) AND (NULL)))AND(((t0.c1) NOT NULL))))OR(t0.c2 COLLATE BINARY)))OR((t0.c2 IN ()))))AND(((t0.c1)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((t0.c1) NOT BETWEEN (NULL) AND (NULL)))AND(((t0.c1) NOT NULL))))OR(t0.c2 COLLATE BINARY)))OR((t0.c2 IN ()))))AND(((t0.c1)-(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))|(((t0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))|(((t0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))|(((t0.c2)>>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))|(((t0.c2)>>(rt0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((rt0.c0 IN ()))|(((t0.c2)>>(rt0.c2)))));
SELECT ALL * FROM t0 WHERE (((t0.c1)GLOB((('\nm\r0') BETWEEN (t0.c1) AND (0.7026804493206117))))) ORDER BY ((((t0.c0)AND(t0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((t0.c1)GLOB((('\nm\r0') BETWEEN (t0.c1) AND (0.7026804493206117))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0))) NOT NULL));
SELECT ALL * FROM t0 WHERE (((t0.c1)GLOB((('\nm\r0') BETWEEN (t0.c1) AND (0.7026804493206117))))) ORDER BY ((((t0.c0)AND(t0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((t0.c1)GLOB((('\nm\r0') BETWEEN (t0.c1) AND (0.7026804493206117))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c0))) NOT NULL));
SELECT ALL * FROM t0 WHERE (((t0.c1)GLOB((('\nm\r0') BETWEEN (t0.c1) AND (0.7026804493206117))))) ORDER BY ((((t0.c0)AND(t0.c0))) NOT NULL);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE t0.c0  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c3 THEN -2029768310 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c3 THEN -2029768310 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE t0.c0  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c3 THEN -2029768310 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE t0.c0  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c3 THEN -2029768310 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE t0.c0  WHEN rt0.c1 THEN t0.c1 WHEN rt0.c3 THEN -2029768310 WHEN rt0.c2 THEN rt0.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((((((((- (rt0.c3)))AND(rt0.c1)))OR((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN NULL END)))OR((- (rt0.c0))))) ORDER BY LIKELY(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c3)))AND(rt0.c1)))OR((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN NULL END)))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY LIKELY(NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((((((((- (rt0.c3)))AND(rt0.c1)))OR((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN NULL END)))OR((- (rt0.c0))))) ORDER BY LIKELY(NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c3)))AND(rt0.c1)))OR((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN NULL END)))OR((- (rt0.c0))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY LIKELY(NULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((((((((- (rt0.c3)))AND(rt0.c1)))OR((((t0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN NULL END)))OR((- (rt0.c0))))) ORDER BY LIKELY(NULL)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))&(HEX(DISTINCT rt0.c1)))) ORDER BY ((rt0.c1)IS(((rt0.c3) NOT BETWEEN ('1W') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS(((rt0.c3) NOT BETWEEN ('1W') AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))&(HEX(DISTINCT rt0.c1)))) ORDER BY ((rt0.c1)IS(((rt0.c3) NOT BETWEEN ('1W') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))&(HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)IS(((rt0.c3) NOT BETWEEN ('1W') AND (rt0.c3)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))&(HEX(DISTINCT rt0.c1)))) ORDER BY ((rt0.c1)IS(((rt0.c3) NOT BETWEEN ('1W') AND (rt0.c3)))) ASC  NULLS LAST;
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) AND (rt0.c0))) ORDER BY CAST(((t0.c0)-(t0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0)-(t0.c1)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) AND (rt0.c0))) ORDER BY CAST(((t0.c0)-(t0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) AND (rt0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(((t0.c0)-(t0.c1)) AS BLOB)  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2))) AND (rt0.c0))) ORDER BY CAST(((t0.c0)-(t0.c1)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (t0.c1, t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (t0.c1, t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (t0.c1, t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN (t0.c1, t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN (t0.c1, t0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c1)==(t0.c2)))AND((((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c0))))))AND((NOT (t0.c1))))  NULLS LAST, ((CASE WHEN t0.c1 THEN t0.c0 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)==(t0.c2)))AND((((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c0))))))AND((NOT (t0.c1))))  NULLS LAST, ((CASE WHEN t0.c1 THEN t0.c0 END) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c1)==(t0.c2)))AND((((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c0))))))AND((NOT (t0.c1))))  NULLS LAST, ((CASE WHEN t0.c1 THEN t0.c0 END) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)==(t0.c2)))AND((((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c0))))))AND((NOT (t0.c1))))  NULLS LAST, ((CASE WHEN t0.c1 THEN t0.c0 END) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE ((t0.c1 COLLATE NOCASE IN ())) ORDER BY ((((((t0.c1)==(t0.c2)))AND((((t0.c2, t0.c2, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c1)) AND ((t0.c0, t0.c2, t0.c0))))))AND((NOT (t0.c1))))  NULLS LAST, ((CASE WHEN t0.c1 THEN t0.c0 END) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(rt0.c1 COLLATE BINARY)) ORDER BY ((CASE rt0.c2  WHEN 'WU*' THEN rt0.c3 ELSE rt0.c2 END)+(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN 'WU*' THEN rt0.c3 ELSE rt0.c2 END)+(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(rt0.c1 COLLATE BINARY)) ORDER BY ((CASE rt0.c2  WHEN 'WU*' THEN rt0.c3 ELSE rt0.c2 END)+(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c2  WHEN 'WU*' THEN rt0.c3 ELSE rt0.c2 END)+(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (UNLIKELY(rt0.c1 COLLATE BINARY)) ORDER BY ((CASE rt0.c2  WHEN 'WU*' THEN rt0.c3 ELSE rt0.c2 END)+(rt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((((((((t0.c0, rt0.c2, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(CASE WHEN x'' THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c1 END)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c2 WHEN '-1764490976' THEN rt0.c0 ELSE t0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, rt0.c2, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(CASE WHEN x'' THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c1 END)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c2 WHEN '-1764490976' THEN rt0.c0 ELSE t0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((((((((t0.c0, rt0.c2, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(CASE WHEN x'' THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c1 END)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c2 WHEN '-1764490976' THEN rt0.c0 ELSE t0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY rt0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0, rt0.c2, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(CASE WHEN x'' THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c1 END)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c2 WHEN '-1764490976' THEN rt0.c0 ELSE t0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 ASC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((((((((((t0.c0, rt0.c2, x'')) NOT BETWEEN ((rt0.c2, rt0.c0, t0.c2)) AND ((rt0.c0, rt0.c2, rt0.c2))))AND(CASE WHEN x'' THEN t0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE t0.c1 END)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c1 THEN t0.c2 WHEN NULL THEN t0.c2 WHEN '-1764490976' THEN rt0.c0 ELSE t0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3))))) ORDER BY rt0.c2 ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c3))<=((rt0.c0))) AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN UNLIKELY(DISTINCT rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN CAST(rt0.c2 AS REAL) THEN CASE t0.c1  WHEN '' THEN t0.c2 END END, (((((rt0.c2) NOTNULL)))<=((((((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))<=((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c3 THEN UNLIKELY(DISTINCT rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN CAST(rt0.c2 AS REAL) THEN CASE t0.c1  WHEN '' THEN t0.c2 END END, (((((rt0.c2) NOTNULL)))<=((((((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c3))<=((rt0.c0))) AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN UNLIKELY(DISTINCT rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN CAST(rt0.c2 AS REAL) THEN CASE t0.c1  WHEN '' THEN t0.c2 END END, (((((rt0.c2) NOTNULL)))<=((((((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3))<=((rt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE WHEN rt0.c3 THEN UNLIKELY(DISTINCT rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN CAST(rt0.c2 AS REAL) THEN CASE t0.c1  WHEN '' THEN t0.c2 END END, (((((rt0.c2) NOTNULL)))<=((((((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST((((rt0.c3))<=((rt0.c0))) AS BLOB)) ORDER BY CASE WHEN rt0.c3 THEN UNLIKELY(DISTINCT rt0.c1) WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN t0.c1 THEN rt0.c0 ELSE rt0.c0 END WHEN CAST(rt0.c2 AS REAL) THEN CASE t0.c1  WHEN '' THEN t0.c2 END END, (((((rt0.c2) NOTNULL)))<=((((((((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))));
SELECT ALL * FROM t0, rt0 WHERE ((~ ((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ ((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((~ ((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((~ ((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((0X362b47a3)AND(t0.c1)) WHEN CAST(t0.c1 AS NUMERIC) THEN '585496579' WHEN (t0.c2 IN (t0.c2, t0.c0)) THEN LENGTH(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((0X362b47a3)AND(t0.c1)) WHEN CAST(t0.c1 AS NUMERIC) THEN '585496579' WHEN (t0.c2 IN (t0.c2, t0.c0)) THEN LENGTH(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((0X362b47a3)AND(t0.c1)) WHEN CAST(t0.c1 AS NUMERIC) THEN '585496579' WHEN (t0.c2 IN (t0.c2, t0.c0)) THEN LENGTH(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((0X362b47a3)AND(t0.c1)) WHEN CAST(t0.c1 AS NUMERIC) THEN '585496579' WHEN (t0.c2 IN (t0.c2, t0.c0)) THEN LENGTH(t0.c0) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) THEN ((0X362b47a3)AND(t0.c1)) WHEN CAST(t0.c1 AS NUMERIC) THEN '585496579' WHEN (t0.c2 IN (t0.c2, t0.c0)) THEN LENGTH(t0.c0) END);
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c2);
SELECT * FROM rt0 WHERE (CASE WHEN RTRIM(rt0.c1) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((rt0.c0)>=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN RTRIM(rt0.c1) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((rt0.c0)>=(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN RTRIM(rt0.c1) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((rt0.c0)>=(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN RTRIM(rt0.c1) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((rt0.c0)>=(rt0.c3)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN RTRIM(rt0.c1) THEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)) ELSE ((rt0.c0)>=(rt0.c3)) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c3)AND(0xffffffffdf147a99)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)AND(0Xffffffffdf147a99))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c3)AND(0xffffffffdf147a99)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3)AND(0Xffffffffdf147a99))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c3)AND(0xffffffffdf147a99)))));
SELECT * FROM rt0 WHERE (json_patch((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c2)GLOB(rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c2)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE (json_patch((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c2)GLOB(rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c2)GLOB(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0 WHERE (json_patch((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))), ((rt0.c2)GLOB(rt0.c0)))) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT CAST(t0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(t0.c2 AS TEXT))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT CAST(t0.c2 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT CAST(t0.c2 AS TEXT))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TRIM(DISTINCT CAST(t0.c2 AS TEXT)));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN t0.c1 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c1) WHEN ((t0.c1) ISNULL) THEN ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))AND(t0.c1)))OR(t0.c0)) WHEN (((rt0.c2))>=((0.3486495489085072))) THEN ((((rt0.c1)AND(NULL)))AND(1.188736483E9)) END) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN ('P^' COLLATE RTRIM) AND (((rt0.c0)>>(t0.c2)))) ASC  NULLS FIRST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN (((NOT (t0.c0)), (((rt0.c2))<=((rt0.c2))), ((t0.c0)>>(rt0.c2)))) AND (('db', rt0.c1 COLLATE RTRIM, CAST(t0.c1 AS BLOB)))), (((~ (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c1) WHEN ((t0.c1) ISNULL) THEN ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))AND(t0.c1)))OR(t0.c0)) WHEN (((rt0.c2))>=((0.3486495489085072))) THEN ((((rt0.c1)AND(NULL)))AND(1.188736483E9)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN ('P^' COLLATE RTRIM) AND (((rt0.c0)>>(t0.c2)))) ASC  NULLS FIRST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN (((NOT (t0.c0)), (((rt0.c2))<=((rt0.c2))), ((t0.c0)>>(rt0.c2)))) AND (('db', rt0.c1 COLLATE RTRIM, CAST(t0.c1 AS BLOB)))), (((~ (rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN t0.c1 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c1) WHEN ((t0.c1) ISNULL) THEN ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))AND(t0.c1)))OR(t0.c0)) WHEN (((rt0.c2))>=((0.3486495489085072))) THEN ((((rt0.c1)AND(NULL)))AND(1.188736483E9)) END) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN ('P^' COLLATE RTRIM) AND (((rt0.c0)>>(t0.c2)))) ASC  NULLS FIRST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN (((NOT (t0.c0)), (((rt0.c2))<=((rt0.c2))), ((t0.c0)>>(rt0.c2)))) AND (('db', rt0.c1 COLLATE RTRIM, CAST(t0.c1 AS BLOB)))), (((~ (rt0.c0))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c1) WHEN ((t0.c1) ISNULL) THEN ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))AND(t0.c1)))OR(t0.c0)) WHEN (((rt0.c2))>=((0.3486495489085072))) THEN ((((rt0.c1)AND(NULL)))AND(1.188736483E9)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN ('P^' COLLATE RTRIM) AND (((rt0.c0)>>(t0.c2)))) ASC  NULLS FIRST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN (((NOT (t0.c0)), (((rt0.c2))<=((rt0.c2))), ((t0.c0)>>(rt0.c2)))) AND (('db', rt0.c1 COLLATE RTRIM, CAST(t0.c1 AS BLOB)))), (((~ (rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN t0.c1 COLLATE RTRIM THEN TYPEOF(DISTINCT rt0.c1) WHEN ((t0.c1) ISNULL) THEN ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c1)))AND(t0.c1)))OR(t0.c0)) WHEN (((rt0.c2))>=((0.3486495489085072))) THEN ((((rt0.c1)AND(NULL)))AND(1.188736483E9)) END) ORDER BY ((CAST(t0.c2 AS INTEGER)) NOT BETWEEN ('P^' COLLATE RTRIM) AND (((rt0.c0)>>(t0.c2)))) ASC  NULLS FIRST, (((t0.c1, t0.c2, rt0.c1)) BETWEEN (((NOT (t0.c0)), (((rt0.c2))<=((rt0.c2))), ((t0.c0)>>(rt0.c2)))) AND (('db', rt0.c1 COLLATE RTRIM, CAST(t0.c1 AS BLOB)))), (((~ (rt0.c0))) IS TRUE);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((TRIM(rt0.c1))+(((rt0.c0) BETWEEN (t0.c2) AND (x'52c7')))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c1))+(((rt0.c0) BETWEEN (t0.c2) AND (x'52c7'))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((TRIM(rt0.c1))+(((rt0.c0) BETWEEN (t0.c2) AND (x'52c7')))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c1))+(((rt0.c0) BETWEEN (t0.c2) AND (x'52c7'))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((TRIM(rt0.c1))+(((rt0.c0) BETWEEN (t0.c2) AND (x'52c7')))));
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c3)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c3)IS(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c3)IS(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((rt0.c3)IS(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (HEX(DISTINCT ((rt0.c3)IS(rt0.c3))));
SELECT * FROM t0 WHERE ((t0.c1 IN ('d(!90Me4*')));
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ('d(!90Me4*'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c1 IN ('d(!90Me4*')));
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ('d(!90Me4*'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((t0.c1 IN ('d(!90Me4*')));
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((rt0.c2)%(rt0.c0)))OR((NOT (NULL)))))OR((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)%(rt0.c0)))OR((NOT (NULL)))))OR((rt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((rt0.c2)%(rt0.c0)))OR((NOT (NULL)))))OR((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c0)|(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)%(rt0.c0)))OR((NOT (NULL)))))OR((rt0.c0 IN ()))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS FALSE))OR(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c1)))))OR(((rt0.c0)|(rt0.c2))))) ORDER BY ((((((rt0.c2)%(rt0.c0)))OR((NOT (NULL)))))OR((rt0.c0 IN ()))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL);
SELECT * FROM rt0, t0 WHERE (((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (((((t0.c0) BETWEEN (rt0.c3) AND (t0.c0))) IS FALSE));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0xffffffffb0f361c0) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0xffffffffb0f361c0) AND ((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0xffffffffb0f361c0) AND ((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)IS NOT(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0xffffffffb0f361c0) AND ((NOT (rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS REAL)) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c1)IS NOT(rt0.c0))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN (0xffffffffb0f361c0) AND ((NOT (rt0.c3))));
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN t0.c0 END) IS FALSE)) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.8559142356087329)))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN t0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.8559142356087329)))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN t0.c0 END) IS FALSE)) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.8559142356087329)))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN t0.c0 END) IS FALSE)) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.8559142356087329)))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN rt0.c2 THEN rt0.c1 WHEN NULL THEN t0.c0 END) IS FALSE)) ORDER BY (((t0.c0)) BETWEEN ((((rt0.c0) BETWEEN (rt0.c1) AND (0.8559142356087329)))) AND (((t0.c1 IN ())))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1 IN (t0.c2)))>=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2)))>=((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1 IN (t0.c2)))>=((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2)))>=((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c1 IN (t0.c2)))>=((NOT (rt0.c1)))));
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((json_object(rt0.c3, rt0.c3))<<((NOT (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((json_object(rt0.c3, rt0.c3))<<((NOT (rt0.c3))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((json_object(rt0.c3, rt0.c3))<<((NOT (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((json_object(rt0.c3, rt0.c3))<<((NOT (rt0.c3))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c0) NOT NULL)) IS FALSE)) ORDER BY ((json_object(rt0.c3, rt0.c3))<<((NOT (rt0.c3))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c2))))>=(((rt0.c0 IN ()))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c2))))>=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c2))))>=(((rt0.c0 IN ()))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, rt0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c2))))>=(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, rt0.c2 DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1)<=(rt0.c2))))>=(((rt0.c0 IN ()))))) ORDER BY CAST(((rt0.c1) IS TRUE) AS NUMERIC) ASC, rt0.c2 DESC;
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c0, t0.c2, t0.c1))>=((t0.c0, t0.c1, '991829262')))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((((t0.c0, t0.c2, t0.c1))>=((t0.c0, t0.c1, '991829262'))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c0, t0.c2, t0.c1))>=((t0.c0, t0.c1, '991829262')))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE((((t0.c0, t0.c2, t0.c1))>=((t0.c0, t0.c1, '991829262'))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (QUOTE((((t0.c0, t0.c2, t0.c1))>=((t0.c0, t0.c1, '991829262')))));
SELECT ALL * FROM t0 WHERE ('-2087337466');
SELECT SUM(count) FROM (SELECT ALL (('-2087337466') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('-2087337466');
SELECT SUM(count) FROM (SELECT ALL (('-2087337466') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ('-2087337466');
SELECT ALL * FROM rt0, t0 WHERE (((((0x71cf4f74)OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((((rt0.c1))=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X71cf4f74)OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((((rt0.c1))=((t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((0x71cf4f74)OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((((rt0.c1))=((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((0X71cf4f74)OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((((rt0.c1))=((t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((0x71cf4f74)OR((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))))OR((((rt0.c1))=((t0.c2))))));
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR((rt0.c1 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c0)))OR((rt0.c1 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR((rt0.c1 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((NOT (rt0.c0)))OR((rt0.c1 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((NOT (rt0.c0)))OR((rt0.c1 IN ()))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT COUNT(*) FROM t0 WHERE ((+ (TRIM(t0.c1)))) ORDER BY json_extract((t0.c2 IN ()), ((t0.c1)&(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY json_extract((t0.c2 IN ()), ((t0.c1)&(t0.c2))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((+ (TRIM(t0.c1)))) ORDER BY json_extract((t0.c2 IN ()), ((t0.c1)&(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (TRIM(t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY json_extract((t0.c2 IN ()), ((t0.c1)&(t0.c2))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((+ (TRIM(t0.c1)))) ORDER BY json_extract((t0.c2 IN ()), ((t0.c1)&(t0.c2))) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE ('1597361151') ORDER BY 0.7830367891373513  NULLS FIRST, CAST((~ (rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1597361151') IS TRUE)  as count FROM t0, rt0 ORDER BY 0.7830367891373513  NULLS FIRST, CAST((~ (rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ('1597361151') ORDER BY 0.7830367891373513  NULLS FIRST, CAST((~ (rt0.c2)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('1597361151') IS TRUE)  as count FROM t0, rt0 ORDER BY 0.7830367891373513  NULLS FIRST, CAST((~ (rt0.c2)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ('1597361151') ORDER BY 0.7830367891373513  NULLS FIRST, CAST((~ (rt0.c2)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c1)<(t0.c2)))AND(((t0.c2)<=(rt0.c2)))))OR((- (t0.c1)))) WHERE (CASE WHEN CAST(NULL AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((t0.c1)||(0.08667696792758794)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(NULL AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((t0.c1)||(0.08667696792758794)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c1)<(t0.c2)))AND(((t0.c2)<=(rt0.c2)))))OR((- (t0.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c1)<(t0.c2)))AND(((t0.c2)<=(rt0.c2)))))OR((- (t0.c1)))) WHERE (CASE WHEN CAST(NULL AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((t0.c1)||(0.08667696792758794)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(NULL AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((t0.c1)||(0.08667696792758794)) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c1)<(t0.c2)))AND(((t0.c2)<=(rt0.c2)))))OR((- (t0.c1)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON ((((((t0.c1)<(t0.c2)))AND(((t0.c2)<=(rt0.c2)))))OR((- (t0.c1)))) WHERE (CASE WHEN CAST(NULL AS BLOB) THEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE ((t0.c1)||(0.08667696792758794)) END);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c2) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c2) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c2) IS TRUE))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1)) NOT BETWEEN ((NULL)) AND ((((t0.c2) IS TRUE)))));
SELECT * FROM t0 WHERE ((((- (t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c2)>(t0.c1))))) ORDER BY (((t0.c1 IN ()))<<(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c2)>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))<<(t0.c0)) ASC);
SELECT * FROM t0 WHERE ((((- (t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c2)>(t0.c1))))) ORDER BY (((t0.c1 IN ()))<<(t0.c0)) ASC;
SELECT SUM(count) FROM (SELECT (((((- (t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c2)>(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1 IN ()))<<(t0.c0)) ASC);
SELECT * FROM t0 WHERE ((((- (t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND (((t0.c2)>(t0.c1))))) ORDER BY (((t0.c1 IN ()))<<(t0.c0)) ASC;
SELECT * FROM t0 WHERE (((IFNULL(DISTINCT t0.c0, t0.c2)) NOTNULL)) ORDER BY (LIKE(t0.c2, t0.c1, '-') IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c0, t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (LIKE(t0.c2, t0.c1, '-') IN ()) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((IFNULL(DISTINCT t0.c0, t0.c2)) NOTNULL)) ORDER BY (LIKE(t0.c2, t0.c1, '-') IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT t0.c0, t0.c2)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (LIKE(t0.c2, t0.c1, '-') IN ()) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (((IFNULL(DISTINCT t0.c0, t0.c2)) NOTNULL)) ORDER BY (LIKE(t0.c2, t0.c1, '-') IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1) BETWEEN (0.6505133341937145) AND (t0.c2))  WHEN ((t0.c1) IS TRUE) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c2))<((t0.c1))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) BETWEEN (0.6505133341937145) AND (t0.c2))  WHEN ((t0.c1) IS TRUE) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2))<((t0.c1))) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1) BETWEEN (0.6505133341937145) AND (t0.c2))  WHEN ((t0.c1) IS TRUE) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c2))<((t0.c1))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1) BETWEEN (0.6505133341937145) AND (t0.c2))  WHEN ((t0.c1) IS TRUE) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2))<((t0.c1))) COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (CASE ((t0.c1) BETWEEN (0.6505133341937145) AND (t0.c2))  WHEN ((t0.c1) IS TRUE) THEN t0.c0 ELSE t0.c0 COLLATE NOCASE END) ORDER BY (((t0.c2))<((t0.c1))) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (x'b3be') ORDER BY ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END)<>(((rt0.c1)<(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((x'b3be') IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END)!=(((rt0.c1)<(t0.c1)))));
SELECT ALL * FROM t0, rt0 WHERE (x'b3be') ORDER BY ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END)<>(((rt0.c1)<(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((x'b3be') IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END)!=(((rt0.c1)<(t0.c1)))));
SELECT ALL * FROM t0, rt0 WHERE (x'b3be') ORDER BY ((CASE rt0.c3  WHEN rt0.c1 THEN t0.c0 END)<>(((rt0.c1)<(t0.c1))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY CASE WHEN ((((((((((((rt0.c2)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(x'')))OR(t0.c0)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((((((((((((rt0.c2)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(x'')))OR(t0.c0)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY CASE WHEN ((((((((((((rt0.c2)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(x'')))OR(t0.c0)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN ((((((((((((rt0.c2)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(x'')))OR(t0.c0)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c0 THEN rt0.c2 END COLLATE BINARY) ORDER BY CASE WHEN ((((((((((((rt0.c2)OR(t0.c2)))AND(rt0.c1)))OR(rt0.c1)))OR(x'')))OR(t0.c0)))AND(rt0.c1)) THEN (rt0.c3 IN ()) ELSE t0.c1 COLLATE RTRIM END ASC  NULLS LAST;
SELECT * FROM rt0, t0 WHERE ((('')%(COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c0, t0.c1)))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (t0.c2 COLLATE BINARY) AND (TRIM(t0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')%(COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c0, t0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (t0.c2 COLLATE BINARY) AND (TRIM(t0.c2, rt0.c2))) ASC);
SELECT * FROM rt0, t0 WHERE ((('')%(COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c0, t0.c1)))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (t0.c2 COLLATE BINARY) AND (TRIM(t0.c2, rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((('')%(COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c0, t0.c1)))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (t0.c2 COLLATE BINARY) AND (TRIM(t0.c2, rt0.c2))) ASC);
SELECT * FROM rt0, t0 WHERE ((('')%(COALESCE(DISTINCT t0.c2, rt0.c1, rt0.c0, t0.c1)))) ORDER BY ((((rt0.c1) NOTNULL)) BETWEEN (t0.c2 COLLATE BINARY) AND (TRIM(t0.c2, rt0.c2))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (((((((((((t0.c2)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(0.14357188531427567))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(0.14357188531427567))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((((t0.c2)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(0.14357188531427567))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c2)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(0.14357188531427567))) IS FALSE)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((((((((t0.c2)AND(rt0.c3)))AND(x'')))AND(rt0.c1)))AND(0.14357188531427567))) IS FALSE));
SELECT * FROM rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT t0.c0, rt0.c3) THEN (((t0.c1))==((rt0.c1))) ELSE ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(DISTINCT t0.c0, rt0.c3) THEN (((t0.c1))==((rt0.c1))) ELSE ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(t0.c1)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT t0.c0, rt0.c3) THEN (((t0.c1))==((rt0.c1))) ELSE ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(DISTINCT t0.c0, rt0.c3) THEN (((t0.c1))==((rt0.c1))) ELSE ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(t0.c1)) END) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (CASE WHEN NULLIF(DISTINCT t0.c0, rt0.c3) THEN (((t0.c1))==((rt0.c1))) ELSE ((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(t0.c1)) END);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))%(0.9397588978998771)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))%(0.9397588978998771))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))%(0.9397588978998771)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT NULL))%(0.9397588978998771))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL))%(0.9397588978998771)));
SELECT * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c0)-(t0.c1)) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)-(t0.c1)) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c0)-(t0.c1)) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)-(t0.c1)) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE WHEN ((rt0.c0)-(t0.c1)) THEN CASE t0.c0  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (t0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (t0.c0))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((~ (t0.c0))) IS TRUE)  as count FROM t0, rt0 ORDER BY x'' DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((~ (t0.c0))) ORDER BY x'' DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((rt0.c0)GLOB(rt0.c3)))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))AND(((rt0.c0)GLOB(rt0.c3)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((rt0.c0)GLOB(rt0.c3)))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY rt0.c3 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c3 IN ()))AND(((rt0.c0)GLOB(rt0.c3)))))AND(CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 DESC);
SELECT * FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((rt0.c0)GLOB(rt0.c3)))))AND(CAST(rt0.c1 AS TEXT)))) ORDER BY rt0.c3 DESC;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) ORDER BY ((('', rt0.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((0.5136819319356968) BETWEEN (rt0.c3) AND (rt0.c0)), x'', rt0.c1, ((rt0.c2)<=(rt0.c1)), CAST(rt0.c2 AS BLOB))) AND (((rt0.c3 IN ()), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((('1729890734')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1) IS TRUE), ((rt0.c3)|(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((('', rt0.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((0.5136819319356968) BETWEEN (rt0.c3) AND (rt0.c0)), x'', rt0.c1, ((rt0.c2)<=(rt0.c1)), CAST(rt0.c2 AS BLOB))) AND (((rt0.c3 IN ()), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((('1729890734')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1) IS TRUE), ((rt0.c3)|(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) ORDER BY ((('', rt0.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((0.5136819319356968) BETWEEN (rt0.c3) AND (rt0.c0)), x'', rt0.c1, ((rt0.c2)<=(rt0.c1)), CAST(rt0.c2 AS BLOB))) AND (((rt0.c3 IN ()), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((('1729890734')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1) IS TRUE), ((rt0.c3)|(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((('', rt0.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((0.5136819319356968) BETWEEN (rt0.c3) AND (rt0.c0)), x'', rt0.c1, ((rt0.c2)<=(rt0.c1)), CAST(rt0.c2 AS BLOB))) AND (((rt0.c3 IN ()), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((('1729890734')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1) IS TRUE), ((rt0.c3)|(rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY) ORDER BY ((('', rt0.c2, rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((((0.5136819319356968) BETWEEN (rt0.c3) AND (rt0.c0)), x'', rt0.c1, ((rt0.c2)<=(rt0.c1)), CAST(rt0.c2 AS BLOB))) AND (((rt0.c3 IN ()), ((((rt0.c0)AND(rt0.c1)))AND(rt0.c3)), ((('1729890734')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c1) IS TRUE), ((rt0.c3)|(rt0.c2)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(0.19250497717316506));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(0.19250497717316506)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(0.19250497717316506));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(0.19250497717316506)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (SQLITE_COMPILEOPTION_GET(0.19250497717316506));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON '');
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '' WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON '');
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON '' WHERE (rt0.c0);
SELECT * FROM t0 WHERE (LIKELY(t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELY(t0.c2));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(t0.c2)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (LIKELY(t0.c2));
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL)) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))>=(((rt0.c3 IN (rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST, (((rt0.c1)<=(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=(((rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST, (((rt0.c1)<=(rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))>=(((rt0.c3 IN (rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST, (((rt0.c1)<=(rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>=(((rt0.c3 IN (rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS FIRST, (((rt0.c1)<=(rt0.c0)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))>=(((rt0.c3 IN (rt0.c2)))))) ORDER BY rt0.c0  NULLS FIRST, (((rt0.c1)<=(rt0.c0)) IN ()) ASC;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c3) BETWEEN (((rt0.c0)>>(rt0.c2))) AND ((t0.c1 IN ())))) ORDER BY (- (((rt0.c3)||(rt0.c1)))) DESC, ((((rt0.c3) ISNULL))LIKE(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (((rt0.c0)>>(rt0.c2))) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY (- (((rt0.c3)||(rt0.c1)))) DESC, ((((rt0.c3) ISNULL))LIKE(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c3) BETWEEN (((rt0.c0)>>(rt0.c2))) AND ((t0.c1 IN ())))) ORDER BY (- (((rt0.c3)||(rt0.c1)))) DESC, ((((rt0.c3) ISNULL))LIKE(rt0.c2))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (((rt0.c0)>>(rt0.c2))) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY (- (((rt0.c3)||(rt0.c1)))) DESC, ((((rt0.c3) ISNULL))LIKE(rt0.c2))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((rt0.c3) BETWEEN (((rt0.c0)>>(rt0.c2))) AND ((t0.c1 IN ())))) ORDER BY (- (((rt0.c3)||(rt0.c1)))) DESC, ((((rt0.c3) ISNULL))LIKE(rt0.c2))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) ORDER BY 0.31031933769639763;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.31031933769639763);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) ORDER BY 0.31031933769639763;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) IS TRUE)  as count FROM rt0, t0 ORDER BY 0.31031933769639763);
SELECT COUNT(*) FROM rt0, t0 WHERE (CASE WHEN rt0.c2 THEN rt0.c0 END COLLATE BINARY) ORDER BY 0.31031933769639763;
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND ((CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END)))) ORDER BY CASE WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (rt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND ((CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND ((CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END)))) ORDER BY CASE WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (rt0.c2 IN ()) END;
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND ((CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c2 COLLATE NOCASE)) AND ((CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c3 END)))) ORDER BY CASE WHEN rt0.c1 THEN (rt0.c2 IN ()) ELSE (rt0.c2 IN ()) END;
SELECT * FROM rt0 INNER JOIN t0 ON ((((t0.c2) ISNULL)) BETWEEN (((rt0.c0) BETWEEN (NULL) AND (t0.c2))) AND (CAST(rt0.c3 AS REAL))) WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c2) ISNULL)) BETWEEN (((rt0.c0) BETWEEN (NULL) AND (t0.c2))) AND (CAST(rt0.c3 AS REAL))));
SELECT * FROM rt0 INNER JOIN t0 ON ((((t0.c2) ISNULL)) BETWEEN (((rt0.c0) BETWEEN (NULL) AND (t0.c2))) AND (CAST(rt0.c3 AS REAL))) WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt0.c0)) AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c2) ISNULL)) BETWEEN (((rt0.c0) BETWEEN (NULL) AND (t0.c2))) AND (CAST(rt0.c3 AS REAL))));
SELECT * FROM rt0 INNER JOIN t0 ON ((((t0.c2) ISNULL)) BETWEEN (((rt0.c0) BETWEEN (NULL) AND (t0.c2))) AND (CAST(rt0.c3 AS REAL))) WHERE (CAST((~ (rt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END)<<(0.1315517684824128))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END)<<(0.1315517684824128))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END)<<(0.1315517684824128))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)>(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END)<<(0.1315517684824128))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)>(rt0.c2))))) ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c3 END)<<(0.1315517684824128))  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((NULL)<>((rt0.c1 IN ())))) ORDER BY ((LIKELIHOOD(rt0.c0, 0.3719809335826342))>((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)!=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELIHOOD(rt0.c0, 0.3719809335826342))>((NOT (t0.c0)))));
SELECT * FROM t0, rt0 WHERE (((NULL)<>((rt0.c1 IN ())))) ORDER BY ((LIKELIHOOD(rt0.c0, 0.3719809335826342))>((NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((NULL)!=((rt0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((LIKELIHOOD(rt0.c0, 0.3719809335826342))>((NOT (t0.c0)))));
SELECT * FROM t0, rt0 WHERE (((NULL)<>((rt0.c1 IN ())))) ORDER BY ((LIKELIHOOD(rt0.c0, 0.3719809335826342))>((NOT (t0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(COALESCE(rt0.c3, rt0.c2, rt0.c1, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((RTRIM(COALESCE(rt0.c3, rt0.c2, rt0.c1, rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(COALESCE(rt0.c3, rt0.c2, rt0.c1, rt0.c2)));
SELECT SUM(count) FROM (SELECT ((RTRIM(COALESCE(rt0.c3, rt0.c2, rt0.c1, rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (RTRIM(COALESCE(rt0.c3, rt0.c2, rt0.c1, rt0.c2)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CASE ((rt0.c2)!=(rt0.c3))  WHEN (((t0.c2, x'', rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c2)) AND ((rt0.c0, t0.c1, t0.c0))) THEN ((rt0.c3) IS TRUE) WHEN (t0.c1 IN (rt0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)) WHEN 0xffffffffe5c31e0e THEN (NOT (rt0.c2)) ELSE CASE WHEN t0.c1 THEN t0.c2 END END WHERE (((UPPER(t0.c1)) NOT NULL)) ORDER BY ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE ((rt0.c2)!=(rt0.c3))  WHEN (((t0.c2, x'', rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c2)) AND ((rt0.c0, t0.c1, t0.c0))) THEN ((rt0.c3) IS TRUE) WHEN (t0.c1 IN (rt0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)) WHEN 0Xffffffffe5c31e0e THEN (NOT (rt0.c2)) ELSE CASE WHEN t0.c1 THEN t0.c2 END END ORDER BY ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c0))) IN ()) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CASE ((rt0.c2)!=(rt0.c3))  WHEN (((t0.c2, x'', rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c2)) AND ((rt0.c0, t0.c1, t0.c0))) THEN ((rt0.c3) IS TRUE) WHEN (t0.c1 IN (rt0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)) WHEN 0xffffffffe5c31e0e THEN (NOT (rt0.c2)) ELSE CASE WHEN t0.c1 THEN t0.c2 END END WHERE (((UPPER(t0.c1)) NOT NULL)) ORDER BY ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c0))) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t0 ON CASE ((rt0.c2)!=(rt0.c3))  WHEN (((t0.c2, x'', rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c2)) AND ((rt0.c0, t0.c1, t0.c0))) THEN ((rt0.c3) IS TRUE) WHEN (t0.c1 IN (rt0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)) WHEN 0Xffffffffe5c31e0e THEN (NOT (rt0.c2)) ELSE CASE WHEN t0.c1 THEN t0.c2 END END ORDER BY ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c0))) IN ()) DESC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN t0 ON CASE ((rt0.c2)!=(rt0.c3))  WHEN (((t0.c2, x'', rt0.c2)) NOT BETWEEN ((t0.c0, rt0.c3, rt0.c2)) AND ((rt0.c0, t0.c1, t0.c0))) THEN ((rt0.c3) IS TRUE) WHEN (t0.c1 IN (rt0.c2)) THEN ((t0.c1) BETWEEN (t0.c2) AND (rt0.c3)) WHEN 0xffffffffe5c31e0e THEN (NOT (rt0.c2)) ELSE CASE WHEN t0.c1 THEN t0.c2 END END WHERE (((UPPER(t0.c1)) NOT NULL)) ORDER BY ((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c0))) IN ()) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)*(((t0.c1)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((t0.c1)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)*(((t0.c1)*(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)*(((t0.c1)*(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((NULL)*(((t0.c1)*(t0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT) DESC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT) DESC, rt0.c3);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT) DESC, rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT) DESC, rt0.c3);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT) DESC, rt0.c3;
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))*((NOT (rt0.c1))))) ORDER BY rt0.c3 ASC, ((((t0.c0) IS TRUE)) ISNULL) ASC, ((((rt0.c2) IS TRUE)) BETWEEN (((((((((t0.c1)AND(t0.c1)))AND(rt0.c1)))AND(0.051951476145388975)))AND(rt0.c2))) AND (rt0.c3));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c3 ASC, ((((t0.c0) IS TRUE)) ISNULL) ASC, ((((rt0.c2) IS TRUE)) BETWEEN (((((((((t0.c1)AND(t0.c1)))AND(rt0.c1)))AND(0.051951476145388975)))AND(rt0.c2))) AND (rt0.c3)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))*((NOT (rt0.c1))))) ORDER BY rt0.c3 ASC, ((((t0.c0) IS TRUE)) ISNULL) ASC, ((((rt0.c2) IS TRUE)) BETWEEN (((((((((t0.c1)AND(t0.c1)))AND(rt0.c1)))AND(0.051951476145388975)))AND(rt0.c2))) AND (rt0.c3));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))*((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c3 ASC, ((((t0.c0) IS TRUE)) ISNULL) ASC, ((((rt0.c2) IS TRUE)) BETWEEN (((((((((t0.c1)AND(t0.c1)))AND(rt0.c1)))AND(0.051951476145388975)))AND(rt0.c2))) AND (rt0.c3)));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))*((NOT (rt0.c1))))) ORDER BY rt0.c3 ASC, ((((t0.c0) IS TRUE)) ISNULL) ASC, ((((rt0.c2) IS TRUE)) BETWEEN (((((((((t0.c1)AND(t0.c1)))AND(rt0.c1)))AND(0.051951476145388975)))AND(rt0.c2))) AND (rt0.c3));
SELECT ALL * FROM t0 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (((t0.c1)IS NOT(t0.c1))) AND (NULL))) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))), 0.8826869513055523 COLLATE NOCASE ASC, CASE ((t0.c2)GLOB(t0.c1))  WHEN ((t0.c0)-(t0.c2)) THEN (((t0.c2)) BETWEEN ((0.8685493393579494)) AND (('DQvqKbম)'))) WHEN json_patch(t0.c1, NULL) THEN '-1764490976' WHEN CAST(x'9a60' AS REAL) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN TYPEOF(t0.c1) THEN x'' ELSE ((t0.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (((t0.c1)IS NOT(t0.c1))) AND (NULL))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))), 0.8826869513055523 COLLATE NOCASE ASC, CASE ((t0.c2)GLOB(t0.c1))  WHEN ((t0.c0)-(t0.c2)) THEN (((t0.c2)) BETWEEN ((0.8685493393579494)) AND (('DQvqKbম)'))) WHEN json_patch(t0.c1, NULL) THEN '-1764490976' WHEN CAST(x'9a60' AS REAL) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN TYPEOF(t0.c1) THEN x'' ELSE ((t0.c0) NOTNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (((t0.c1)IS NOT(t0.c1))) AND (NULL))) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))), 0.8826869513055523 COLLATE NOCASE ASC, CASE ((t0.c2)GLOB(t0.c1))  WHEN ((t0.c0)-(t0.c2)) THEN (((t0.c2)) BETWEEN ((0.8685493393579494)) AND (('DQvqKbম)'))) WHEN json_patch(t0.c1, NULL) THEN '-1764490976' WHEN CAST(x'9a60' AS REAL) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN TYPEOF(t0.c1) THEN x'' ELSE ((t0.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (((t0.c1)IS NOT(t0.c1))) AND (NULL))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))), 0.8826869513055523 COLLATE NOCASE ASC, CASE ((t0.c2)GLOB(t0.c1))  WHEN ((t0.c0)-(t0.c2)) THEN (((t0.c2)) BETWEEN ((0.8685493393579494)) AND (('DQvqKbম)'))) WHEN json_patch(t0.c1, NULL) THEN '-1764490976' WHEN CAST(x'9a60' AS REAL) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN TYPEOF(t0.c1) THEN x'' ELSE ((t0.c0) NOTNULL) END ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c2))>=((t0.c2)))) NOT BETWEEN (((t0.c1)IS NOT(t0.c1))) AND (NULL))) ORDER BY ((t0.c2 COLLATE NOCASE) BETWEEN (CAST(t0.c2 AS NUMERIC)) AND ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))), 0.8826869513055523 COLLATE NOCASE ASC, CASE ((t0.c2)GLOB(t0.c1))  WHEN ((t0.c0)-(t0.c2)) THEN (((t0.c2)) BETWEEN ((0.8685493393579494)) AND (('DQvqKbম)'))) WHEN json_patch(t0.c1, NULL) THEN '-1764490976' WHEN CAST(x'9a60' AS REAL) THEN ((t0.c0)<>(t0.c0)) WHEN ((t0.c0)<=(t0.c0)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) WHEN TYPEOF(t0.c1) THEN x'' ELSE ((t0.c0) NOTNULL) END ASC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY json_array(rt0.c3, rt0.c0) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY json_array(rt0.c3, rt0.c0) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY json_array(rt0.c3, rt0.c0) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY json_array(rt0.c3, rt0.c0) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (NULL) ORDER BY json_array(rt0.c3, rt0.c0) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)) IN ())) ORDER BY ((((TRIM(t0.c2))AND(((((t0.c1)OR(t0.c0)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((TRIM(t0.c2))AND(((((t0.c1)OR(t0.c0)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)) IN ())) ORDER BY ((((TRIM(t0.c2))AND(((((t0.c1)OR(t0.c0)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((TRIM(t0.c2))AND(((((t0.c1)OR(t0.c0)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE ((((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(t0.c0)) IN ())) ORDER BY ((((TRIM(t0.c2))AND(((((t0.c1)OR(t0.c0)))OR(t0.c1)))))OR(t0.c0 COLLATE NOCASE));
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (t0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (-325090646))) ORDER BY ((CASE WHEN t0.c2 THEN 'M{<2' WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (-325090646))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN t0.c2 THEN 'M{<2' WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)IS NOT(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (t0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (-325090646))) ORDER BY ((CASE WHEN t0.c2 THEN 'M{<2' WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (-325090646))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CASE WHEN t0.c2 THEN 'M{<2' WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)IS NOT(rt0.c1))))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((NOT (t0.c0))) BETWEEN (CAST(rt0.c3 AS REAL)) AND (-325090646))) ORDER BY ((CASE WHEN t0.c2 THEN 'M{<2' WHEN t0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c2)IS NOT(rt0.c1))))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST('585496579' AS REAL) END) ORDER BY CASE (((-4.40197618E8, rt0.c3, 9223372036854775807)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((',.Ke', rt0.c0, rt0.c3)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(x'7ea1')) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST('585496579' AS REAL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (((-4.40197618E8, rt0.c3, 9223372036854775807)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((',.Ke', rt0.c0, rt0.c3)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(x'7ea1')) END);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST('585496579' AS REAL) END) ORDER BY CASE (((-4.40197618E8, rt0.c3, 9223372036854775807)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((',.Ke', rt0.c0, rt0.c3)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(x'7ea1')) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST('585496579' AS REAL) END) IS TRUE)  as count FROM rt0 ORDER BY CASE (((-4.40197618E8, rt0.c3, 9223372036854775807)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((',.Ke', rt0.c0, rt0.c3)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(x'7ea1')) END);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c2  WHEN rt0.c2 THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) ELSE CAST('585496579' AS REAL) END) ORDER BY CASE (((-4.40197618E8, rt0.c3, 9223372036854775807)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((',.Ke', rt0.c0, rt0.c3)))  WHEN ((rt0.c0)>=(rt0.c1)) THEN ((rt0.c0) IS TRUE) ELSE ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c2)))OR(x'7ea1')) END;
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (rt0.c1 IN (rt0.c3, rt0.c0)) THEN 0.7020770254461338 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (rt0.c1 IN (rt0.c3, rt0.c0)) THEN 0.7020770254461338 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (rt0.c1 IN (rt0.c3, rt0.c0)) THEN 0.7020770254461338 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (rt0.c1 IN (rt0.c3, rt0.c0)) THEN 0.7020770254461338 END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END  WHEN (rt0.c1 IN (rt0.c3, rt0.c0)) THEN 0.7020770254461338 END);
SELECT ALL * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c0)) ISNULL)) ORDER BY ((((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))LIKE((rt0.c1 IN ('H')))), ((t0.c1) NOT BETWEEN ('-1096174224') AND (rt0.c2)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c0)) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))LIKE((rt0.c1 IN ('H')))), ((t0.c1) NOT BETWEEN ('-1096174224') AND (rt0.c2)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c0)) ISNULL)) ORDER BY ((((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))LIKE((rt0.c1 IN ('H')))), ((t0.c1) NOT BETWEEN ('-1096174224') AND (rt0.c2)) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT t0.c0)) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))LIKE((rt0.c1 IN ('H')))), ((t0.c1) NOT BETWEEN ('-1096174224') AND (rt0.c2)) COLLATE BINARY COLLATE BINARY);
SELECT ALL * FROM rt0, t0 WHERE (((TRIM(DISTINCT t0.c0)) ISNULL)) ORDER BY ((((((t0.c0)AND(rt0.c1)))OR(rt0.c1)))LIKE((rt0.c1 IN ('H')))), ((t0.c1) NOT BETWEEN ('-1096174224') AND (rt0.c2)) COLLATE BINARY COLLATE BINARY;
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (0.2346943008748209) AND (((-1.096174224E9)&(rt0.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-440197618'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (0.2346943008748209) AND (((-1.096174224E9)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-440197618'))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (0.2346943008748209) AND (((-1.096174224E9)&(rt0.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-440197618'))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (0.2346943008748209) AND (((-1.096174224E9)&(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-440197618'))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT BETWEEN (0.2346943008748209) AND (((-1.096174224E9)&(rt0.c1))))) ORDER BY (((rt0.c3)) BETWEEN ((((rt0.c3)LIKE(rt0.c2)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND ('-440197618'))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))*((+ (rt0.c2))))) ORDER BY ((((0.3296067055261245)OR(((rt0.c3)|(rt0.c2)))))AND(CAST(rt0.c3 AS REAL))) ASC, (((- ('-'))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))*((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.3296067055261245)OR(((rt0.c3)|(rt0.c2)))))AND(CAST(rt0.c3 AS REAL))) ASC, (((- ('-'))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))*((+ (rt0.c2))))) ORDER BY ((((0.3296067055261245)OR(((rt0.c3)|(rt0.c2)))))AND(CAST(rt0.c3 AS REAL))) ASC, (((- ('-'))) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))*((+ (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((0.3296067055261245)OR(((rt0.c3)|(rt0.c2)))))AND(CAST(rt0.c3 AS REAL))) ASC, (((- ('-'))) ISNULL) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))*((+ (rt0.c2))))) ORDER BY ((((0.3296067055261245)OR(((rt0.c3)|(rt0.c2)))))AND(CAST(rt0.c3 AS REAL))) ASC, (((- ('-'))) ISNULL) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((x'c8d8')IS(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (- (((rt0.c3)-(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'c8d8')IS(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)-(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'c8d8')IS(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (- (((rt0.c3)-(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'c8d8')IS(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (- (((rt0.c3)-(rt0.c2))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((x'c8d8')IS(((((rt0.c3)OR(rt0.c2)))AND(rt0.c3))))) ORDER BY (- (((rt0.c3)-(rt0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c1))) NOT BETWEEN (((((((((t0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c1))) NOT BETWEEN (((((((((t0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c1))) NOT BETWEEN (((((((((t0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c1))) NOT BETWEEN (((((((((t0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (rt0.c0) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(rt0.c1))) NOT BETWEEN (((((((((t0.c2)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3))) AND (rt0.c0 COLLATE BINARY)) DESC  NULLS FIRST;
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3)%(rt0.c1)))!=(CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)%(rt0.c1)))<>(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3)%(rt0.c1)))!=(CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)%(rt0.c1)))<>(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c3)%(rt0.c1)))!=(CAST(t0.c2 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE BINARY);
SELECT * FROM t0, rt0 WHERE (MAX(((rt0.c0) ISNULL), rt0.c0 COLLATE BINARY, 0.8027061362312098, ((((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))OR(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MAX(((rt0.c0) ISNULL), rt0.c0 COLLATE BINARY, 0.8027061362312098, ((((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))OR(rt0.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (MAX(((rt0.c0) ISNULL), rt0.c0 COLLATE BINARY, 0.8027061362312098, ((((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))OR(rt0.c0)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((MAX(((rt0.c0) ISNULL), rt0.c0 COLLATE BINARY, 0.8027061362312098, ((((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))OR(rt0.c0)))OR(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (MAX(((rt0.c0) ISNULL), rt0.c0 COLLATE BINARY, 0.8027061362312098, ((((((((rt0.c1)OR(t0.c0)))AND(t0.c1)))OR(rt0.c0)))OR(rt0.c2))));
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))>>((+ ('1909411700'))))) ORDER BY (CAST(t0.c1 AS TEXT) IN (rt0.c1 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, (NOT (((t0.c1) IS TRUE))), ((rt0.c3)IS NOT(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))>>((+ ('1909411700'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(t0.c1 AS TEXT) IN (rt0.c1 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, (NOT (((t0.c1) IS TRUE))), ((rt0.c3)IS NOT(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))>>((+ ('1909411700'))))) ORDER BY (CAST(t0.c1 AS TEXT) IN (rt0.c1 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, (NOT (((t0.c1) IS TRUE))), ((rt0.c3)IS NOT(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))>>((+ ('1909411700'))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (CAST(t0.c1 AS TEXT) IN (rt0.c1 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, (NOT (((t0.c1) IS TRUE))), ((rt0.c3)IS NOT(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))>>((+ ('1909411700'))))) ORDER BY (CAST(t0.c1 AS TEXT) IN (rt0.c1 COLLATE BINARY, CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)) ASC  NULLS LAST, (NOT (((t0.c1) IS TRUE))), ((rt0.c3)IS NOT(CASE WHEN t0.c1 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))  NULLS FIRST;
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)==(t0.c2)), NULL, (((t0.c1))<=((t0.c2)))))!=((((rt0.c1)%(rt0.c1)), (~ (t0.c1)), t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'')))>(((0.0572807236370777)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)=(t0.c2)), NULL, (((t0.c1))<=((t0.c2)))))<>((((rt0.c1)%(rt0.c1)), (~ (t0.c1)), t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'')))>(((0.0572807236370777)IS(t0.c0)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)==(t0.c2)), NULL, (((t0.c1))<=((t0.c2)))))!=((((rt0.c1)%(rt0.c1)), (~ (t0.c1)), t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'')))>(((0.0572807236370777)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)=(t0.c2)), NULL, (((t0.c1))<=((t0.c2)))))<>((((rt0.c1)%(rt0.c1)), (~ (t0.c1)), t0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'')))>(((0.0572807236370777)IS(t0.c0)))));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ((((((rt0.c1)==(t0.c2)), NULL, (((t0.c1))<=((t0.c2)))))!=((((rt0.c1)%(rt0.c1)), (~ (t0.c1)), t0.c1 COLLATE BINARY)))) ORDER BY ((((t0.c0) BETWEEN (t0.c0) AND (x'')))>(((0.0572807236370777)IS(t0.c0))));
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT NULL) WHERE (((rt0.c0)*(NULL)) COLLATE NOCASE) ORDER BY ((((t0.c1)-(t0.c1)))OR(CAST(rt0.c1 AS INTEGER))), ((((((t0.c0) IS TRUE))AND(rt0.c1)))OR((rt0.c3 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT NULL) ORDER BY ((((t0.c1)-(t0.c1)))OR(CAST(rt0.c1 AS INTEGER))), ((((((t0.c0) IS TRUE))AND(rt0.c1)))OR((rt0.c3 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT NULL) WHERE (((rt0.c0)*(NULL)) COLLATE NOCASE) ORDER BY ((((t0.c1)-(t0.c1)))OR(CAST(rt0.c1 AS INTEGER))), ((((((t0.c0) IS TRUE))AND(rt0.c1)))OR((rt0.c3 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)*(NULL)) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT NULL) ORDER BY ((((t0.c1)-(t0.c1)))OR(CAST(rt0.c1 AS INTEGER))), ((((((t0.c0) IS TRUE))AND(rt0.c1)))OR((rt0.c3 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN rt0 ON ((((t0.c1) NOTNULL)) NOT NULL) WHERE (((rt0.c0)*(NULL)) COLLATE NOCASE) ORDER BY ((((t0.c1)-(t0.c1)))OR(CAST(rt0.c1 AS INTEGER))), ((((((t0.c0) IS TRUE))AND(rt0.c1)))OR((rt0.c3 IN (t0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELY(t0.c2) IN (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY (NOT (t0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(t0.c2) IN (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c1 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELY(t0.c2) IN (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY (NOT (t0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((LIKELY(t0.c2) IN (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c1 COLLATE NOCASE)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELY(t0.c2) IN (((((t0.c0)OR(t0.c0)))AND(t0.c1))))) ORDER BY (NOT (t0.c1 COLLATE NOCASE)) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN x'' THEN rt0.c2 END ELSE 0X3676a8af END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN x'' THEN rt0.c2 END ELSE 0X3676a8af END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN x'' THEN rt0.c2 END ELSE 0X3676a8af END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN x'' THEN rt0.c2 END ELSE 0X3676a8af END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN CASE WHEN x'' THEN rt0.c2 END ELSE 0X3676a8af END);
SELECT ALL * FROM t0 WHERE (MAX(IFNULL(t0.c0, t0.c1), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY ((((((t0.c1)&(t0.c2)))OR(CAST(t0.c1 AS BLOB))))AND(IFNULL(t0.c1, t0.c0))) DESC  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((MAX(IFNULL(t0.c0, t0.c1), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)&(t0.c2)))OR(CAST(t0.c1 AS BLOB))))AND(IFNULL(t0.c1, t0.c0))) DESC  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN ()) DESC);
SELECT ALL * FROM t0 WHERE (MAX(IFNULL(t0.c0, t0.c1), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY ((((((t0.c1)&(t0.c2)))OR(CAST(t0.c1 AS BLOB))))AND(IFNULL(t0.c1, t0.c0))) DESC  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((MAX(IFNULL(t0.c0, t0.c1), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)&(t0.c2)))OR(CAST(t0.c1 AS BLOB))))AND(IFNULL(t0.c1, t0.c0))) DESC  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN ()) DESC);
SELECT ALL * FROM t0 WHERE (MAX(IFNULL(t0.c0, t0.c1), ((t0.c0) BETWEEN (t0.c1) AND (t0.c1)))) ORDER BY ((((((t0.c1)&(t0.c2)))OR(CAST(t0.c1 AS BLOB))))AND(IFNULL(t0.c1, t0.c0))) DESC  NULLS LAST, (CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (('-372843623')OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY (('-372843623')OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (('-372843623')OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, t0 NOT INDEXED ORDER BY (('-372843623')OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)) AS INTEGER)) ORDER BY (('-372843623')OR(rt0.c2)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c2) NOTNULL) WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c1)IS NOT(t0.c1)) THEN 0.905432607681996 END) ORDER BY ((((0.967320508259761)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c2) NOTNULL) WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c1)IS NOT(t0.c1)) THEN 0.905432607681996 END) IS TRUE)  as count FROM t0 ORDER BY ((((0.967320508259761)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c2) NOTNULL) WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c1)IS NOT(t0.c1)) THEN 0.905432607681996 END) ORDER BY ((((0.967320508259761)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c2) NOTNULL) WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c1)IS NOT(t0.c1)) THEN 0.905432607681996 END) IS TRUE)  as count FROM t0 ORDER BY ((((0.967320508259761)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM t0 WHERE (CASE t0.c0 COLLATE BINARY  WHEN CASE t0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END THEN ((t0.c2) NOTNULL) WHEN ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))OR(t0.c1)))OR(t0.c2)) THEN (t0.c1 IN (t0.c2, t0.c2)) WHEN ((t0.c1)IS NOT(t0.c1)) THEN 0.905432607681996 END) ORDER BY ((((0.967320508259761)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((t0.c0) NOT NULL))) ASC;
SELECT ALL * FROM t0, rt0 WHERE (0.4095950992820615) ORDER BY (((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))OR(t0.c1)))) AND ((rt0.c2))) DESC, ABS(t0.c0) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4095950992820615) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))OR(t0.c1)))) AND ((rt0.c2))) DESC, ABS(t0.c0) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (0.4095950992820615) ORDER BY (((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))OR(t0.c1)))) AND ((rt0.c2))) DESC, ABS(t0.c0) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.4095950992820615) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))OR(t0.c1)))) AND ((rt0.c2))) DESC, ABS(t0.c0) COLLATE NOCASE  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (0.4095950992820615) ORDER BY (((t0.c0)) NOT BETWEEN ((((((t0.c0)AND(rt0.c1)))OR(t0.c1)))) AND ((rt0.c2))) DESC, ABS(t0.c0) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE t0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c0) NOT NULL) WHEN '-626406214' THEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST('505065261' AS REAL) END WHERE ((~ (0x68923370))) ORDER BY (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (0x68923370))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE t0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c0) NOT NULL) WHEN '-626406214' THEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST('505065261' AS REAL) END ORDER BY (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE t0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c0) NOT NULL) WHEN '-626406214' THEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST('505065261' AS REAL) END WHERE ((~ (0x68923370))) ORDER BY (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (0x68923370))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON CASE t0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c0) NOT NULL) WHEN '-626406214' THEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST('505065261' AS REAL) END ORDER BY (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON CASE t0.c2 COLLATE RTRIM  WHEN CASE WHEN rt0.c1 THEN rt0.c1 END THEN ((rt0.c0) NOT NULL) WHEN '-626406214' THEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)) WHEN (rt0.c0 IN ()) THEN CAST('505065261' AS REAL) END WHERE ((~ (0x68923370))) ORDER BY (((t0.c0 IN (t0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND ((+ (rt0.c2))));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)%(((rt0.c0) NOTNULL)))) ORDER BY ((((UNLIKELY(rt0.c3))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0) NOTNULL)))  NULLS FIRST, CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN (+ (rt0.c2)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)) WHEN LTRIM(rt0.c0, rt0.c1) THEN LIKELY(rt0.c2) END;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)%(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((UNLIKELY(rt0.c3))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0) NOTNULL)))  NULLS FIRST, CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN (+ (rt0.c2)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)) WHEN LTRIM(rt0.c0, rt0.c1) THEN LIKELY(rt0.c2) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)%(((rt0.c0) NOTNULL)))) ORDER BY ((((UNLIKELY(rt0.c3))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0) NOTNULL)))  NULLS FIRST, CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN (+ (rt0.c2)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)) WHEN LTRIM(rt0.c0, rt0.c1) THEN LIKELY(rt0.c2) END;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)%(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((UNLIKELY(rt0.c3))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0) NOTNULL)))  NULLS FIRST, CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN (+ (rt0.c2)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)) WHEN LTRIM(rt0.c0, rt0.c1) THEN LIKELY(rt0.c2) END);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c3 END)%(((rt0.c0) NOTNULL)))) ORDER BY ((((UNLIKELY(rt0.c3))AND((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))))AND(((rt0.c0) NOTNULL)))  NULLS FIRST, CASE (((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN (+ (rt0.c2)) THEN rt0.c1 WHEN rt0.c0 COLLATE NOCASE THEN ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c2)) WHEN LTRIM(rt0.c0, rt0.c1) THEN LIKELY(rt0.c2) END;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY '1808211549', t0.c1 ASC, ((((TRIM(DISTINCT rt0.c1))AND(rt0.c1 COLLATE NOCASE)))AND((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY '1808211549', t0.c1 ASC, ((((TRIM(DISTINCT rt0.c1))AND(rt0.c1 COLLATE NOCASE)))AND((t0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((((rt0.c0) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY '1808211549', t0.c1 ASC, ((((TRIM(DISTINCT rt0.c1))AND(rt0.c1 COLLATE NOCASE)))AND((t0.c2 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) NOT NULL))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY '1808211549', t0.c1 ASC, ((((TRIM(DISTINCT rt0.c1))AND(rt0.c1 COLLATE NOCASE)))AND((t0.c2 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((- (((rt0.c2)-(t0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)-(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((- (((rt0.c2)-(t0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)-(t0.c0))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE ((- (((rt0.c2)-(t0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((CAST(rt0.c0 AS TEXT))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1) NOT NULL) IN ())) ORDER BY (t0.c0 COLLATE RTRIM IN (IFNULL(DISTINCT t0.c2, t0.c0), TRIM(t0.c1)))  NULLS FIRST, ((t0.c2)||(CASE t0.c2  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE RTRIM IN (IFNULL(DISTINCT t0.c2, t0.c0), TRIM(t0.c1)))  NULLS FIRST, ((t0.c2)||(CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1) NOT NULL) IN ())) ORDER BY (t0.c0 COLLATE RTRIM IN (IFNULL(DISTINCT t0.c2, t0.c0), TRIM(t0.c1)))  NULLS FIRST, ((t0.c2)||(CASE t0.c2  WHEN t0.c2 THEN t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM t0 ORDER BY (t0.c0 COLLATE RTRIM IN (IFNULL(DISTINCT t0.c2, t0.c0), TRIM(t0.c1)))  NULLS FIRST, ((t0.c2)||(CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1) NOT NULL) IN ())) ORDER BY (t0.c0 COLLATE RTRIM IN (IFNULL(DISTINCT t0.c2, t0.c0), TRIM(t0.c1)))  NULLS FIRST, ((t0.c2)||(CASE t0.c2  WHEN t0.c2 THEN t0.c2 END));
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(('q꼭XG' IN ())));
SELECT SUM(count) FROM (SELECT ((json_valid(('q꼭XG' IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(('q꼭XG' IN ())));
SELECT SUM(count) FROM (SELECT ((json_valid(('q꼭XG' IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(('q꼭XG' IN ())));
SELECT * FROM t0, rt0 WHERE ((~ (('?)59,~V%댞' IN ())))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c2))))&(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (('?)59,~V%댞' IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c2))))&(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((~ (('?)59,~V%댞' IN ())))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c2))))&(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (('?)59,~V%댞' IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c2))))&(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE ((~ (('?)59,~V%댞' IN ())))) ORDER BY (((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((t0.c2))))&(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c0) IS TRUE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c0) IS TRUE))));
SELECT ALL * FROM rt0, t0 WHERE (CASE (~ (t0.c1))  WHEN ((rt0.c2)||(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c3)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c1))  WHEN ((rt0.c2)||(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c3)))AND(t0.c1)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE (~ (t0.c1))  WHEN ((rt0.c2)||(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c3)))AND(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (t0.c1))  WHEN ((rt0.c2)||(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c3)))AND(t0.c1)) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE (~ (t0.c1))  WHEN ((rt0.c2)||(rt0.c0)) THEN ((((rt0.c3)AND(rt0.c3)))AND(t0.c1)) END);
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((- (-1178943203)), (t0.c0 IN (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (t0.c2))))<=(((NOT (t0.c2)), ((((t0.c2)OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2) ISNULL)))) WHERE ('p^');
SELECT SUM(count) FROM (SELECT ALL (('p^') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((- (-1178943203)), (t0.c0 IN (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (t0.c2))))<=(((NOT (t0.c2)), ((((t0.c2)OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2) ISNULL)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((- (-1178943203)), (t0.c0 IN (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (t0.c2))))<=(((NOT (t0.c2)), ((((t0.c2)OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2) ISNULL)))) WHERE ('p^');
SELECT SUM(count) FROM (SELECT ALL (('p^') IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((- (-1178943203)), (t0.c0 IN (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (t0.c2))))<=(((NOT (t0.c2)), ((((t0.c2)OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2) ISNULL)))));
SELECT * FROM t0 FULL OUTER JOIN rt0 ON ((((- (-1178943203)), (t0.c0 IN (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (t0.c2))))<=(((NOT (t0.c2)), ((((t0.c2)OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2) ISNULL)))) WHERE ('p^');
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c0)))) ORDER BY ((CAST(rt0.c0 AS TEXT))*(CASE WHEN rt0.c0 THEN rt0.c3 END)) DESC, UNLIKELY(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((UNICODE((+ (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))*(CASE WHEN rt0.c0 THEN rt0.c3 END)) DESC, UNLIKELY(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c0)))) ORDER BY ((CAST(rt0.c0 AS TEXT))*(CASE WHEN rt0.c0 THEN rt0.c3 END)) DESC, UNLIKELY(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((UNICODE((+ (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT))*(CASE WHEN rt0.c0 THEN rt0.c3 END)) DESC, UNLIKELY(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE((+ (rt0.c0)))) ORDER BY ((CAST(rt0.c0 AS TEXT))*(CASE WHEN rt0.c0 THEN rt0.c3 END)) DESC, UNLIKELY(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2))) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((t0.c1, ((((rt0.c1)OR(x'13ba')))AND(t0.c2)), CAST(t0.c2 AS INTEGER)))<((CAST(rt0.c1 AS NUMERIC), (((rt0.c1))!=((x''))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((rt0.c0, (((t0.c2, rt0.c2, rt0.c3))<((t0.c0, t0.c2, rt0.c0))), rt0.c1))==((((rt0.c3) IS FALSE), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (NOT (t0.c0)))))) ORDER BY (((((((((rt0.c0 IN ()))AND(NULL)))AND(rt0.c3)))OR(DATETIME(rt0.c2, t0.c1, t0.c1, t0.c1, '-1874372886'))))AND('')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, (((t0.c2, rt0.c2, rt0.c3))<((t0.c0, t0.c2, rt0.c0))), rt0.c1))=((((rt0.c3) IS FALSE), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (NOT (t0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((t0.c1, ((((rt0.c1)OR(x'13ba')))AND(t0.c2)), CAST(t0.c2 AS INTEGER)))<((CAST(rt0.c1 AS NUMERIC), (((rt0.c1))<>((x''))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY (((((((((rt0.c0 IN ()))AND(NULL)))AND(rt0.c3)))OR(DATETIME(rt0.c2, t0.c1, t0.c1, t0.c1, '-1874372886'))))AND('')) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((t0.c1, ((((rt0.c1)OR(x'13ba')))AND(t0.c2)), CAST(t0.c2 AS INTEGER)))<((CAST(rt0.c1 AS NUMERIC), (((rt0.c1))!=((x''))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((rt0.c0, (((t0.c2, rt0.c2, rt0.c3))<((t0.c0, t0.c2, rt0.c0))), rt0.c1))==((((rt0.c3) IS FALSE), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (NOT (t0.c0)))))) ORDER BY (((((((((rt0.c0 IN ()))AND(NULL)))AND(rt0.c3)))OR(DATETIME(rt0.c2, t0.c1, t0.c1, t0.c1, '-1874372886'))))AND('')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, (((t0.c2, rt0.c2, rt0.c3))<((t0.c0, t0.c2, rt0.c0))), rt0.c1))=((((rt0.c3) IS FALSE), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (NOT (t0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t0 ON (((t0.c1, ((((rt0.c1)OR(x'13ba')))AND(t0.c2)), CAST(t0.c2 AS INTEGER)))<((CAST(rt0.c1 AS NUMERIC), (((rt0.c1))<>((x''))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) ORDER BY (((((((((rt0.c0 IN ()))AND(NULL)))AND(rt0.c3)))OR(DATETIME(rt0.c2, t0.c1, t0.c1, t0.c1, '-1874372886'))))AND('')) ASC);
SELECT ALL * FROM rt0 FULL OUTER JOIN t0 ON (((t0.c1, ((((rt0.c1)OR(x'13ba')))AND(t0.c2)), CAST(t0.c2 AS INTEGER)))<((CAST(rt0.c1 AS NUMERIC), (((rt0.c1))!=((x''))), ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))))) WHERE ((((rt0.c0, (((t0.c2, rt0.c2, rt0.c3))<((t0.c0, t0.c2, rt0.c0))), rt0.c1))==((((rt0.c3) IS FALSE), ((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)), (NOT (t0.c0)))))) ORDER BY (((((((((rt0.c0 IN ()))AND(NULL)))AND(rt0.c3)))OR(DATETIME(rt0.c2, t0.c1, t0.c1, t0.c1, '-1874372886'))))AND('')) ASC;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC)) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC)) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC)) ORDER BY CAST(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))AND(x'')))OR(rt0.c0)) AS TEXT)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))))OR((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2))) ISNULL)) ORDER BY t0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2))) ISNULL)) ORDER BY t0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c0 COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2))) ISNULL)) ORDER BY t0.c0 COLLATE NOCASE ASC;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) NOT NULL) AS BLOB));
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) ORDER BY ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CASE NULL  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 0.7043053312552635 END)))AND(CASE rt0.c2  WHEN -552306023 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END)))AND((((rt0.c3, t0.c0, t0.c0))!=((t0.c0, rt0.c2, t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CASE NULL  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 0.7043053312552635 END)))AND(CASE rt0.c2  WHEN -552306023 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END)))AND((((rt0.c3, t0.c0, t0.c0))<>((t0.c0, rt0.c2, t0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) ORDER BY ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CASE NULL  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 0.7043053312552635 END)))AND(CASE rt0.c2  WHEN -552306023 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END)))AND((((rt0.c3, t0.c0, t0.c0))!=((t0.c0, rt0.c2, t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CASE NULL  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 0.7043053312552635 END)))AND(CASE rt0.c2  WHEN -552306023 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END)))AND((((rt0.c3, t0.c0, t0.c0))<>((t0.c0, rt0.c2, t0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) ORDER BY ((((((((((((t0.c0)AND(rt0.c0)))OR(t0.c2)))AND(rt0.c0 COLLATE NOCASE)))OR(CASE NULL  WHEN rt0.c1 THEN t0.c0 WHEN t0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 ELSE 0.7043053312552635 END)))AND(CASE rt0.c2  WHEN -552306023 THEN rt0.c0 WHEN rt0.c0 THEN t0.c1 WHEN t0.c1 THEN rt0.c3 END)))AND((((rt0.c3, t0.c0, t0.c0))!=((t0.c0, rt0.c2, t0.c2))))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((((rt0.c3)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<=(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((((rt0.c3)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<=(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT * FROM rt0 WHERE (((NOT (rt0.c0)) IN ())) ORDER BY ((((rt0.c3)<=(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((t0.c0)) BETWEEN (((t0.c2 IN (t0.c2)))) AND (((('1754411888') BETWEEN (t0.c0) AND (t0.c0))))), CAST(rt0.c3 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)) BETWEEN (((t0.c2 IN (t0.c2)))) AND (((('1754411888') BETWEEN (t0.c0) AND (t0.c0))))), CAST(rt0.c3 AS BLOB));
SELECT * FROM rt0, t0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((t0.c0)) BETWEEN (((t0.c2 IN (t0.c2)))) AND (((('1754411888') BETWEEN (t0.c0) AND (t0.c0))))), CAST(rt0.c3 AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0, t0 ORDER BY (((t0.c0)) BETWEEN (((t0.c2 IN (t0.c2)))) AND (((('1754411888') BETWEEN (t0.c0) AND (t0.c0))))), CAST(rt0.c3 AS BLOB));
SELECT * FROM rt0, t0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((t0.c0)) BETWEEN (((t0.c2 IN (t0.c2)))) AND (((('1754411888') BETWEEN (t0.c0) AND (t0.c0))))), CAST(rt0.c3 AS BLOB);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END AS TEXT)) ORDER BY ((t0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END AS TEXT)) ORDER BY ((t0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((t0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE NOCASE)));
SELECT ALL * FROM t0, rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c3 END AS TEXT)) ORDER BY ((t0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE NOCASE));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, 'r}', rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))))) AND (((~ (rt0.c3)))))) ORDER BY ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))))AND(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR('505065261')))OR(rt0.c3)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1, '%n')) BETWEEN ((((rt0.c1) NOT NULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c3 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END, CAST(rt0.c0 AS TEXT), SQLITE_COMPILEOPTION_GET(rt0.c0)))), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((rt0.c0, 'r}', rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))))AND(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR('505065261')))OR(rt0.c3)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1, '%n')) BETWEEN ((((rt0.c1) NOT NULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c3 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END, CAST(rt0.c0 AS TEXT), SQLITE_COMPILEOPTION_GET(rt0.c0)))), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, 'r}', rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))))) AND (((~ (rt0.c3)))))) ORDER BY ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))))AND(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR('505065261')))OR(rt0.c3)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1, '%n')) BETWEEN ((((rt0.c1) NOT NULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c3 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END, CAST(rt0.c0 AS TEXT), SQLITE_COMPILEOPTION_GET(rt0.c0)))), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((((rt0.c0, 'r}', rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))))) AND (((~ (rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))))AND(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR('505065261')))OR(rt0.c3)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1, '%n')) BETWEEN ((((rt0.c1) NOT NULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c3 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END, CAST(rt0.c0 AS TEXT), SQLITE_COMPILEOPTION_GET(rt0.c0)))), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) BETWEEN (((((rt0.c0, 'r}', rt0.c2))<((rt0.c1, rt0.c2, rt0.c0))))) AND (((~ (rt0.c3)))))) ORDER BY ((((((((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND((rt0.c0 IN ()))))OR(rt0.c1 COLLATE RTRIM)))OR((rt0.c2 IN ()))))AND(((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c3)))OR('505065261')))OR(rt0.c3)))) DESC  NULLS LAST, (((rt0.c0, rt0.c1, '%n')) BETWEEN ((((rt0.c1) NOT NULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c3 IN ()))) AND ((CASE WHEN rt0.c3 THEN rt0.c0 END, CAST(rt0.c0 AS TEXT), SQLITE_COMPILEOPTION_GET(rt0.c0)))), ((rt0.c0)+(rt0.c0)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM t0 WHERE (((PRINTF(t0.c1, t0.c0, t0.c0, t0.c2, t0.c0)) ISNULL)) ORDER BY (((t0.c0 IN ())) IS FALSE), LIKELY(((((t0.c2)OR(t0.c2)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(t0.c1, t0.c0, t0.c0, t0.c2, t0.c0)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) IS FALSE), LIKELY(((((t0.c2)OR(t0.c2)))OR(t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((PRINTF(t0.c1, t0.c0, t0.c0, t0.c2, t0.c0)) ISNULL)) ORDER BY (((t0.c0 IN ())) IS FALSE), LIKELY(((((t0.c2)OR(t0.c2)))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((PRINTF(t0.c1, t0.c0, t0.c0, t0.c2, t0.c0)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) IS FALSE), LIKELY(((((t0.c2)OR(t0.c2)))OR(t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (((PRINTF(t0.c1, t0.c0, t0.c0, t0.c2, t0.c0)) ISNULL)) ORDER BY (((t0.c0 IN ())) IS FALSE), LIKELY(((((t0.c2)OR(t0.c2)))OR(t0.c1)));
SELECT ALL * FROM t0, rt0 WHERE (PRINTF(t0.c0, x'', rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(t0.c0, x'', rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (PRINTF(t0.c0, x'', rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(t0.c0, x'', rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (PRINTF(t0.c0, x'', rt0.c2) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((~ (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((~ (rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS INTEGER))) AND (((~ (rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE)) IS FALSE));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 END)) AND ((((t0.c1)LIKE(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 END)) AND ((((t0.c1)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 END)) AND ((((t0.c1)LIKE(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 END)) AND ((((t0.c1)LIKE(rt0.c0)))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 END)) AND ((((t0.c1)LIKE(rt0.c0))))));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (+ (((((t0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (+ (((((t0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (+ (((((t0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM t0 ORDER BY (+ (((((t0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0) NOTNULL) COLLATE RTRIM) ORDER BY (+ (((((t0.c0)OR(t0.c0)))AND(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON '-1655922998' WHERE ((((((t0.c1 IN ()))OR(((rt0.c0)+(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN ()))OR(((rt0.c0)+(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '-1655922998');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON '-1655922998' WHERE ((((((t0.c1 IN ()))OR(((rt0.c0)+(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN ()))OR(((rt0.c0)+(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON '-1655922998');
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON '-1655922998' WHERE ((((((t0.c1 IN ()))OR(((rt0.c0)+(rt0.c0)))))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))));
SELECT ALL * FROM t0 WHERE ((((NULL))>=(('-1455180373')))) ORDER BY ((((t0.c1)AND('')))AND(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>=(('-1455180373')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)AND('')))AND(t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((NULL))>=(('-1455180373')))) ORDER BY ((((t0.c1)AND('')))AND(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL))>=(('-1455180373')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)AND('')))AND(t0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((NULL))>=(('-1455180373')))) ORDER BY ((((t0.c1)AND('')))AND(t0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM t0, rt0 WHERE (((((rt0.c3)/(t0.c0)))%(CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (('1597361151')IS NOT(CASE WHEN '+' THEN rt0.c0 END))  NULLS LAST, (((((rt0.c1, rt0.c0, t0.c0))=((rt0.c3, t0.c2, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (((((t0.c2)AND(0.09635369013411299)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)/(t0.c0)))%(CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (('1597361151')IS NOT(CASE WHEN '+' THEN rt0.c0 END))  NULLS LAST, (((((rt0.c1, rt0.c0, t0.c0))==((rt0.c3, t0.c2, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (((((t0.c2)AND(0.09635369013411299)))AND(rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c3)/(t0.c0)))%(CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (('1597361151')IS NOT(CASE WHEN '+' THEN rt0.c0 END))  NULLS LAST, (((((rt0.c1, rt0.c0, t0.c0))=((rt0.c3, t0.c2, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (((((t0.c2)AND(0.09635369013411299)))AND(rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)/(t0.c0)))%(CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0, rt0 ORDER BY (('1597361151')IS NOT(CASE WHEN '+' THEN rt0.c0 END))  NULLS LAST, (((((rt0.c1, rt0.c0, t0.c0))==((rt0.c3, t0.c2, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (((((t0.c2)AND(0.09635369013411299)))AND(rt0.c2))))  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((((rt0.c3)/(t0.c0)))%(CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (('1597361151')IS NOT(CASE WHEN '+' THEN rt0.c0 END))  NULLS LAST, (((((rt0.c1, rt0.c0, t0.c0))=((rt0.c3, t0.c2, rt0.c1)))) NOT BETWEEN (rt0.c2) AND (((((t0.c2)AND(0.09635369013411299)))AND(rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9950960231755749));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c1, 0.9950960231755749)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9950960231755749));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT rt0.c1, 0.9950960231755749)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LIKELIHOOD(DISTINCT rt0.c1, 0.9950960231755749));
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c1 END THEN t0.c2 END) ORDER BY ((((rt0.c2)OR(t0.c1))) IS TRUE) DESC  NULLS LAST, ((t0.c1 COLLATE RTRIM)=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c1 END THEN t0.c2 END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(t0.c1))) IS TRUE) DESC  NULLS LAST, ((t0.c1 COLLATE RTRIM)==(((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c1 END THEN t0.c2 END) ORDER BY ((((rt0.c2)OR(t0.c1))) IS TRUE) DESC  NULLS LAST, ((t0.c1 COLLATE RTRIM)=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c1 END THEN t0.c2 END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(t0.c1))) IS TRUE) DESC  NULLS LAST, ((t0.c1 COLLATE RTRIM)==(((rt0.c0) IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (CASE CAST(rt0.c1 AS INTEGER)  WHEN CASE rt0.c2  WHEN NULL THEN rt0.c1 WHEN t0.c1 THEN rt0.c2 WHEN t0.c0 THEN t0.c1 END THEN t0.c2 END) ORDER BY ((((rt0.c2)OR(t0.c1))) IS TRUE) DESC  NULLS LAST, ((t0.c1 COLLATE RTRIM)=(((rt0.c0) IS TRUE)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))<<(((((rt0.c1)OR(rt0.c0)))AND(t0.c1)))) WHERE ((~ ((((rt0.c2))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))<<(((((rt0.c1)OR(rt0.c0)))AND(t0.c1)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))<<(((((rt0.c1)OR(rt0.c0)))AND(t0.c1)))) WHERE ((~ ((((rt0.c2))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((~ ((((rt0.c2))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))<<(((((rt0.c1)OR(rt0.c0)))AND(t0.c1)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t0 ON ((CAST(t0.c1 AS INTEGER))<<(((((rt0.c1)OR(rt0.c0)))AND(t0.c1)))) WHERE ((~ ((((rt0.c2))>=((rt0.c2))))));
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((~ (rt0.c3 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c2 IN ())) BETWEEN (((rt0.c0)GLOB(t0.c0))) AND (((t0.c1) NOT BETWEEN (rt0.c3) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN (((rt0.c0)GLOB(t0.c0))) AND (((t0.c1) NOT BETWEEN (rt0.c3) AND (t0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c2 IN ())) BETWEEN (((rt0.c0)GLOB(t0.c0))) AND (((t0.c1) NOT BETWEEN (rt0.c3) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN (((rt0.c0)GLOB(t0.c0))) AND (((t0.c1) NOT BETWEEN (rt0.c3) AND (t0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN t0 WHERE ((((t0.c2 IN ())) BETWEEN (((rt0.c0)GLOB(t0.c0))) AND (((t0.c1) NOT BETWEEN (rt0.c3) AND (t0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c1)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (((rt0.c1)IS NOT(rt0.c1)))));
SELECT ALL * FROM t0 WHERE (CASE (~ (t0.c0))  WHEN t0.c0 THEN TRIM(DISTINCT t0.c0) ELSE ((t0.c0)+(t0.c1)) END) ORDER BY (t0.c1 COLLATE BINARY IN ((+ (t0.c0)), LIKELY(DISTINCT 0Xffffffffb77185a0)))  NULLS LAST, ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN t0.c0 THEN TRIM(DISTINCT t0.c0) ELSE ((t0.c0)+(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE BINARY IN ((+ (t0.c0)), LIKELY(DISTINCT 0xffffffffb77185a0)))  NULLS LAST, ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE (~ (t0.c0))  WHEN t0.c0 THEN TRIM(DISTINCT t0.c0) ELSE ((t0.c0)+(t0.c1)) END) ORDER BY (t0.c1 COLLATE BINARY IN ((+ (t0.c0)), LIKELY(DISTINCT 0Xffffffffb77185a0)))  NULLS LAST, ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (~ (t0.c0))  WHEN t0.c0 THEN TRIM(DISTINCT t0.c0) ELSE ((t0.c0)+(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (t0.c1 COLLATE BINARY IN ((+ (t0.c0)), LIKELY(DISTINCT 0xffffffffb77185a0)))  NULLS LAST, ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC);
SELECT ALL * FROM t0 WHERE (CASE (~ (t0.c0))  WHEN t0.c0 THEN TRIM(DISTINCT t0.c0) ELSE ((t0.c0)+(t0.c1)) END) ORDER BY (t0.c1 COLLATE BINARY IN ((+ (t0.c0)), LIKELY(DISTINCT 0Xffffffffb77185a0)))  NULLS LAST, ((((t0.c0) IS FALSE)) NOT BETWEEN (t0.c1) AND (((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))) DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE (0X59d53d10);
SELECT SUM(count) FROM (SELECT ALL ((0X59d53d10) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (0X59d53d10);
SELECT SUM(count) FROM (SELECT ALL ((0X59d53d10) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (0X59d53d10);
SELECT COUNT(*) FROM rt0 WHERE (('895913693' IN ())) ORDER BY ((rt0.c1)<(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((('895913693' IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (('895913693' IN ())) ORDER BY ((rt0.c1)<(CAST(rt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((('895913693' IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<(CAST(rt0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (('895913693' IN ())) ORDER BY ((rt0.c1)<(CAST(rt0.c1 AS NUMERIC)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)||(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c2)||(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c2)||(rt0.c3)))));
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1)))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE (HEX(DISTINCT ((rt0.c1) BETWEEN (rt0.c0) AND (t0.c1))));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c3 IN ((~ (rt0.c1))))) ORDER BY CAST(0Xffffffffcc13a2ac AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(0xffffffffcc13a2ac AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c3 IN ((~ (rt0.c1))))) ORDER BY CAST(0Xffffffffcc13a2ac AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(0xffffffffcc13a2ac AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((rt0.c3 IN ((~ (rt0.c1))))) ORDER BY CAST(0Xffffffffcc13a2ac AS INTEGER)  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE ((((t0.c0, (~ (t0.c1)), ((rt0.c0) NOT NULL)))<>((((((rt0.c2)AND(t0.c2)))AND(rt0.c2)), ((rt0.c3)<<(rt0.c1)), ((rt0.c1)=(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, (~ (t0.c1)), ((rt0.c0) NOT NULL)))<>((((((rt0.c2)AND(t0.c2)))AND(rt0.c2)), ((rt0.c3)<<(rt0.c1)), ((rt0.c1)==(rt0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c0, (~ (t0.c1)), ((rt0.c0) NOT NULL)))<>((((((rt0.c2)AND(t0.c2)))AND(rt0.c2)), ((rt0.c3)<<(rt0.c1)), ((rt0.c1)=(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, (~ (t0.c1)), ((rt0.c0) NOT NULL)))<>((((((rt0.c2)AND(t0.c2)))AND(rt0.c2)), ((rt0.c3)<<(rt0.c1)), ((rt0.c1)==(rt0.c3)))))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((((t0.c0, (~ (t0.c1)), ((rt0.c0) NOT NULL)))<>((((((rt0.c2)AND(t0.c2)))AND(rt0.c2)), ((rt0.c3)<<(rt0.c1)), ((rt0.c1)=(rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('&|q4a*W澀\');
SELECT SUM(count) FROM (SELECT (('&|q4a*W澀\') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('&|q4a*W澀\');
SELECT SUM(count) FROM (SELECT (('&|q4a*W澀\') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('&|q4a*W澀\');
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((rt0.c3 IN (0.2659994622082852, t0.c2)))-(NULL)) WHERE (((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c3 IN (0.2659994622082852, t0.c2)))-(NULL)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((rt0.c3 IN (0.2659994622082852, t0.c2)))-(NULL)) WHERE (((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c1))) IS FALSE)) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON (((rt0.c3 IN (0.2659994622082852, t0.c2)))-(NULL)));
SELECT ALL * FROM rt0 INNER JOIN t0 ON (((rt0.c3 IN (0.2659994622082852, t0.c2)))-(NULL)) WHERE (((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(t0.c1)))OR(t0.c1))) IS FALSE));
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(CAST(t0.c0 AS TEXT) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND('946008197')))OR(rt0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY CASE ((x'') IS FALSE)  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST('' AS TEXT) END DESC  NULLS FIRST, CASE ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))  WHEN ((x'')*(rt0.c3)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c0)>>(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND('946008197')))OR(rt0.c1)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((x'') IS FALSE)  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST('' AS TEXT) END DESC  NULLS FIRST, CASE ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))  WHEN ((x'')*(rt0.c3)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c0)>>(rt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND('946008197')))OR(rt0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY CASE ((x'') IS FALSE)  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST('' AS TEXT) END DESC  NULLS FIRST, CASE ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))  WHEN ((x'')*(rt0.c3)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c0)>>(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c3)))AND('946008197')))OR(rt0.c1)))AND(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE ((x'') IS FALSE)  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST('' AS TEXT) END DESC  NULLS FIRST, CASE ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))  WHEN ((x'')*(rt0.c3)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c0)>>(rt0.c0)) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c3)))AND('946008197')))OR(rt0.c1)))AND(rt0.c0))) ISNULL)) ORDER BY CASE ((x'') IS FALSE)  WHEN (+ (rt0.c2)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST('' AS TEXT) END DESC  NULLS FIRST, CASE ((((((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR(rt0.c1))  WHEN ((x'')*(rt0.c3)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c0)>>(rt0.c0)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('-1212190848')>>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c0) IS TRUE))IS NOT(('1W' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1212190848')>>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) IS TRUE))IS NOT(('1W' IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('-1212190848')>>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c0) IS TRUE))IS NOT(('1W' IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('-1212190848')>>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c0) IS TRUE))IS NOT(('1W' IN ()))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((('-1212190848')>>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((((rt0.c0) IS TRUE))IS NOT(('1W' IN ()))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)/(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)/(rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)/(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)/(rt0.c2)) IN ()));
SELECT * FROM t0, rt0 WHERE (LIKE(LOWER(t0.c1), CAST(rt0.c1 AS BLOB), 'P')) ORDER BY (((- (t0.c2)))>=((((rt0.c2))<((t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(LOWER(t0.c1), CAST(rt0.c1 AS BLOB), 'P')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((- (t0.c2)))>=((((rt0.c2))<((t0.c0))))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (LIKE(LOWER(t0.c1), CAST(rt0.c1 AS BLOB), 'P')) ORDER BY (((- (t0.c2)))>=((((rt0.c2))<((t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKE(LOWER(t0.c1), CAST(rt0.c1 AS BLOB), 'P')) IS TRUE)  as count FROM t0, rt0 ORDER BY (((- (t0.c2)))>=((((rt0.c2))<((t0.c0))))) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (LIKE(LOWER(t0.c1), CAST(rt0.c1 AS BLOB), 'P')) ORDER BY (((- (t0.c2)))>=((((rt0.c2))<((t0.c0))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE ((- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((- ((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) ORDER BY t0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 COLLATE NOCASE))<=(((- (t0.c0)))))) ORDER BY '#K䪅''*䪅dr|' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE NOCASE))<=(((- (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY '#K䪅''*䪅dr|' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 COLLATE NOCASE))<=(((- (t0.c0)))))) ORDER BY '#K䪅''*䪅dr|' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 COLLATE NOCASE))<=(((- (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY '#K䪅''*䪅dr|' ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 COLLATE NOCASE))<=(((- (t0.c0)))))) ORDER BY '#K䪅''*䪅dr|' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.4079293250598557);
SELECT SUM(count) FROM (SELECT ((0.4079293250598557) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.4079293250598557);
SELECT SUM(count) FROM (SELECT ((0.4079293250598557) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (0.4079293250598557);
SELECT COUNT(*) FROM t0 WHERE (0xfffffffffe3d51d2) ORDER BY CAST(t0.c1 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffe3d51d2) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0xfffffffffe3d51d2) ORDER BY CAST(t0.c1 AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffffe3d51d2) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c1 AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (0xfffffffffe3d51d2) ORDER BY CAST(t0.c1 AS TEXT)  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END IN ()));
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END IN ()));
SELECT * FROM t0 WHERE (((t0.c0) ISNULL)) ORDER BY (CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END IN ());
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c2)))IS(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))IS(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c2)))IS(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2)))IS(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((NOT (rt0.c2)))IS(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (t0.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB)) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((0.47433511929005767, rt0.c2, rt0.c3, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.47433511929005767, rt0.c2, rt0.c3, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((0.47433511929005767, rt0.c2, rt0.c3, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((((0.47433511929005767, rt0.c2, rt0.c3, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((0.47433511929005767, rt0.c2, rt0.c3, rt0.c2, rt0.c1))<=((rt0.c0, rt0.c0, rt0.c0, rt0.c0, rt0.c0)))) IS FALSE));
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<=(-6.26406214E8 COLLATE NOCASE))) ORDER BY json_extract(t0.c1, rt0.c3, t0.c0, t0.c2) COLLATE RTRIM, CAST(t0.c2 AS TEXT) COLLATE RTRIM ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN (('-1155364494')) AND ((((((((((((((t0.c2)AND(t0.c2)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(-6.26406214E8 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY json_extract(t0.c1, rt0.c3, t0.c0, t0.c2) COLLATE RTRIM, CAST(t0.c2 AS TEXT) COLLATE RTRIM ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN (('-1155364494')) AND ((((((((((((((t0.c2)AND(t0.c2)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<=(-6.26406214E8 COLLATE NOCASE))) ORDER BY json_extract(t0.c1, rt0.c3, t0.c0, t0.c2) COLLATE RTRIM, CAST(t0.c2 AS TEXT) COLLATE RTRIM ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN (('-1155364494')) AND ((((((((((((((t0.c2)AND(t0.c2)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<=(-6.26406214E8 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY json_extract(t0.c1, rt0.c3, t0.c0, t0.c2) COLLATE RTRIM, CAST(t0.c2 AS TEXT) COLLATE RTRIM ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN (('-1155364494')) AND ((((((((((((((t0.c2)AND(t0.c2)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((rt0.c0)<=(-6.26406214E8 COLLATE NOCASE))) ORDER BY json_extract(t0.c1, rt0.c3, t0.c0, t0.c2) COLLATE RTRIM, CAST(t0.c2 AS TEXT) COLLATE RTRIM ASC  NULLS LAST, (((rt0.c2)) NOT BETWEEN (('-1155364494')) AND ((((((((((((((t0.c2)AND(t0.c2)))OR(rt0.c1)))OR(t0.c0)))AND(rt0.c2)))AND(t0.c1)))OR(rt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (SUBSTR(TOTAL_CHANGES(), ((rt0.c2)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(TOTAL_CHANGES(), ((rt0.c2)IS(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SUBSTR(TOTAL_CHANGES(), ((rt0.c2)IS(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(TOTAL_CHANGES(), ((rt0.c2)IS(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (SUBSTR(TOTAL_CHANGES(), ((rt0.c2)IS(rt0.c0))));
SELECT * FROM rt0, t0 WHERE (CASE WHEN '247290181' THEN (t0.c0 IN (t0.c0, rt0.c0)) ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY ((((rt0.c2)OR(x'')))AND(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '247290181' THEN (t0.c0 IN (t0.c0, rt0.c0)) ELSE CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(x'')))AND(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, t0 WHERE (CASE WHEN '247290181' THEN (t0.c0 IN (t0.c0, rt0.c0)) ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY ((((rt0.c2)OR(x'')))AND(rt0.c1)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CASE WHEN '247290181' THEN (t0.c0 IN (t0.c0, rt0.c0)) ELSE CAST(rt0.c3 AS NUMERIC) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c2)OR(x'')))AND(rt0.c1)) COLLATE BINARY);
SELECT * FROM rt0, t0 WHERE (CASE WHEN '247290181' THEN (t0.c0 IN (t0.c0, rt0.c0)) ELSE CAST(rt0.c3 AS NUMERIC) END) ORDER BY ((((rt0.c2)OR(x'')))AND(rt0.c1)) COLLATE BINARY;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))<<(((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c2))))) ORDER BY (((CASE WHEN '-2036339864' THEN x'' ELSE t0.c2 END, LIKELY(t0.c1), ((t0.c2) IS TRUE)))>=(((((t0.c1, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c0))), ((t0.c0)AND(t0.c1)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(t0.c2)))<<(((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN '-2036339864' THEN x'' ELSE t0.c2 END, LIKELY(t0.c1), ((t0.c2) IS TRUE)))>=(((((t0.c1, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c0))), ((t0.c0)AND(t0.c1)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))<<(((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c2))))) ORDER BY (((CASE WHEN '-2036339864' THEN x'' ELSE t0.c2 END, LIKELY(t0.c1), ((t0.c2) IS TRUE)))>=(((((t0.c1, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c0))), ((t0.c0)AND(t0.c1)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)GLOB(t0.c2)))<<(((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((CASE WHEN '-2036339864' THEN x'' ELSE t0.c2 END, LIKELY(t0.c1), ((t0.c2) IS TRUE)))>=(((((t0.c1, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c0))), ((t0.c0)AND(t0.c1)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1)GLOB(t0.c2)))<<(((((((((t0.c0)OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))OR(t0.c2))))) ORDER BY (((CASE WHEN '-2036339864' THEN x'' ELSE t0.c2 END, LIKELY(t0.c1), ((t0.c2) IS TRUE)))>=(((((t0.c1, t0.c1, t0.c1))<((t0.c0, t0.c2, t0.c0))), ((t0.c0)AND(t0.c1)), (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) DESC;
SELECT ALL * FROM t0, rt0 WHERE ((- ((((t0.c2, t0.c2, t0.c1))>=(('-181828758', rt0.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c2, t0.c2, t0.c1))>=(('-181828758', rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((- ((((t0.c2, t0.c2, t0.c1))>=(('-181828758', rt0.c1, t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c2, t0.c2, t0.c1))>=(('-181828758', rt0.c1, t0.c0)))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((- ((((t0.c2, t0.c2, t0.c1))>=(('-181828758', rt0.c1, t0.c0))))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN LOWER(t0.c1) THEN (NULL IN ()) ELSE t0.c1 COLLATE RTRIM END WHERE ((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN LOWER(t0.c1) THEN (NULL IN ()) ELSE t0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN LOWER(t0.c1) THEN (NULL IN ()) ELSE t0.c1 COLLATE RTRIM END WHERE ((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE WHEN LOWER(t0.c1) THEN (NULL IN ()) ELSE t0.c1 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE WHEN LOWER(t0.c1) THEN (NULL IN ()) ELSE t0.c1 COLLATE RTRIM END WHERE ((+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ((LIKELY(t0.c1)) IS TRUE) WHERE (((((t0.c0)/(t0.c1))) BETWEEN (rt0.c3) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c1))) BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((LIKELY(t0.c1)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ((LIKELY(t0.c1)) IS TRUE) WHERE (((((t0.c0)/(t0.c1))) BETWEEN (rt0.c3) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)/(t0.c1))) BETWEEN (rt0.c3) AND (rt0.c0))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((LIKELY(t0.c1)) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN t0 ON ((LIKELY(t0.c1)) IS TRUE) WHERE (((((t0.c0)/(t0.c1))) BETWEEN (rt0.c3) AND (rt0.c0)));
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE ((rt0.c2 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))>=(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END))) ORDER BY CAST(((t0.c1) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))>=(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1) IS TRUE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))>=(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END))) ORDER BY CAST(((t0.c1) IS TRUE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))>=(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1) IS TRUE) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))>=(CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE t0.c0 END))) ORDER BY CAST(((t0.c1) IS TRUE) AS BLOB) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((CAST(t0.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((CAST(t0.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(t0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((CAST(t0.c2 AS NUMERIC) IN ()));
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY (((((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((t0.c2, rt0.c3, t0.c1)) AND ((t0.c1, rt0.c3, t0.c0))))!=(((rt0.c2)>(rt0.c1)))), (NOT (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((t0.c2, rt0.c3, t0.c1)) AND ((t0.c1, rt0.c3, t0.c0))))!=(((rt0.c2)>(rt0.c1)))), (NOT (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY (((((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((t0.c2, rt0.c3, t0.c1)) AND ((t0.c1, rt0.c3, t0.c0))))!=(((rt0.c2)>(rt0.c1)))), (NOT (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((t0.c2, rt0.c3, t0.c1)) AND ((t0.c1, rt0.c3, t0.c0))))!=(((rt0.c2)>(rt0.c1)))), (NOT (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (CAST(t0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY (((((rt0.c2, rt0.c0, t0.c2)) BETWEEN ((t0.c2, rt0.c3, t0.c1)) AND ((t0.c1, rt0.c3, t0.c0))))!=(((rt0.c2)>(rt0.c1)))), (NOT (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 END));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c0)==('qx')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)==('qx')) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c0)==('qx')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)==('qx')) IN ())) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE ((((rt0.c0)==('qx')) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE x''  WHEN t0.c1 THEN x'' END)-(t0.c1))) ORDER BY t0.c2, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN t0.c1 THEN x'' END)-(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY t0.c2, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE x''  WHEN t0.c1 THEN x'' END)-(t0.c1))) ORDER BY t0.c2, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN t0.c1 THEN x'' END)-(t0.c1))) IS TRUE)  as count FROM t0 ORDER BY t0.c2, t0.c0 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE x''  WHEN t0.c1 THEN x'' END)-(t0.c1))) ORDER BY t0.c2, t0.c0 DESC;
SELECT * FROM t0, rt0 WHERE (((0.5733439509554503) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5733439509554503) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((0.5733439509554503) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.5733439509554503) NOTNULL)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((0.5733439509554503) NOTNULL));
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((x'150b')==(0.7663896662737638)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((NULL)OR(rt0.c0)))AND(t0.c0))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'150b')==(0.7663896662737638)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((NULL)OR(rt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((x'150b')==(0.7663896662737638)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((NULL)OR(rt0.c0)))AND(t0.c0))))) ORDER BY t0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((x'150b')==(0.7663896662737638)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((NULL)OR(rt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY t0.c1 DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (((((((x'150b')==(0.7663896662737638)))OR(((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(((((NULL)OR(rt0.c0)))AND(t0.c0))))) ORDER BY t0.c1 DESC;
SELECT ALL * FROM rt0, t0 WHERE ((CASE WHEN NULL THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN t0.c1 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((CASE WHEN NULL THEN t0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN NULL THEN t0.c1 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((CASE WHEN NULL THEN t0.c1 END IN ()));
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN ('55619199') AND (((((t0.c0)OR(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) BETWEEN ('55619199') AND (((((t0.c0)OR(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN ('55619199') AND (((((t0.c0)OR(t0.c1)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c0))) BETWEEN ('55619199') AND (((((t0.c0)OR(t0.c1)))OR(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((NOT (t0.c0))) BETWEEN ('55619199') AND (((((t0.c0)OR(t0.c1)))OR(t0.c1)))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((CAST(t0.c2 AS TEXT))LIKE((t0.c0 IN ()))) ASC  NULLS LAST, ((((((((((((((rt0.c2) NOTNULL))AND('192649776')))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1)>=(t0.c2)))))AND(CAST(t0.c1 AS REAL))))OR((((rt0.c2))<((t0.c2))))))AND(((rt0.c3) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS TEXT))LIKE((t0.c0 IN ()))) ASC  NULLS LAST, ((((((((((((((rt0.c2) NOTNULL))AND('192649776')))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1)>=(t0.c2)))))AND(CAST(t0.c1 AS REAL))))OR((((rt0.c2))<((t0.c2))))))AND(((rt0.c3) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((CAST(t0.c2 AS TEXT))LIKE((t0.c0 IN ()))) ASC  NULLS LAST, ((((((((((((((rt0.c2) NOTNULL))AND('192649776')))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1)>=(t0.c2)))))AND(CAST(t0.c1 AS REAL))))OR((((rt0.c2))<((t0.c2))))))AND(((rt0.c3) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c2 AS TEXT))LIKE((t0.c0 IN ()))) ASC  NULLS LAST, ((((((((((((((rt0.c2) NOTNULL))AND('192649776')))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1)>=(t0.c2)))))AND(CAST(t0.c1 AS REAL))))OR((((rt0.c2))<((t0.c2))))))AND(((rt0.c3) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((CAST(t0.c2 AS TEXT))LIKE((t0.c0 IN ()))) ASC  NULLS LAST, ((((((((((((((rt0.c2) NOTNULL))AND('192649776')))AND(CAST(rt0.c2 AS BLOB))))OR(((rt0.c1)>=(t0.c2)))))AND(CAST(t0.c1 AS REAL))))OR((((rt0.c2))<((t0.c2))))))AND(((rt0.c3) ISNULL))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)*((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)*((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)*((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)*((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)*((NOT (rt0.c0)))));
SELECT * FROM t0 WHERE ((+ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((+ (CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END)));
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(t0.c2 AS REAL)) IS TRUE)) ORDER BY (((rt0.c1, ((0Xffffffffdf147a99)IS NOT(rt0.c0)), (t0.c0 IN ()), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)), t0.c0))=((1800574512, ABS(DISTINCT rt0.c1), rt0.c1, ((t0.c0)<=(t0.c1)), TIME('-1446387698', rt0.c0, t0.c1)))) DESC, CASE ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))  WHEN (- (t0.c1)) THEN (((t0.c0, rt0.c0, t0.c1))<((rt0.c0, t0.c1, rt0.c2))) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 COLLATE BINARY WHEN CASE rt0.c3  WHEN 0.2471711388379727 THEN t0.c2 END THEN ((rt0.c2)>=(t0.c1)) END ASC, CASE WHEN (t0.c1 IN ()) THEN ((t0.c0)|(t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c1, ((0Xffffffffdf147a99)IS NOT(rt0.c0)), (t0.c0 IN ()), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)), t0.c0))=((1800574512, ABS(DISTINCT rt0.c1), rt0.c1, ((t0.c0)<=(t0.c1)), TIME('-1446387698', rt0.c0, t0.c1)))) DESC, CASE ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))  WHEN (- (t0.c1)) THEN (((t0.c0, rt0.c0, t0.c1))<((rt0.c0, t0.c1, rt0.c2))) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 COLLATE BINARY WHEN CASE rt0.c3  WHEN 0.2471711388379727 THEN t0.c2 END THEN ((rt0.c2)>=(t0.c1)) END ASC, CASE WHEN (t0.c1 IN ()) THEN ((t0.c0)|(t0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(t0.c2 AS REAL)) IS TRUE)) ORDER BY (((rt0.c1, ((0Xffffffffdf147a99)IS NOT(rt0.c0)), (t0.c0 IN ()), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)), t0.c0))=((1800574512, ABS(DISTINCT rt0.c1), rt0.c1, ((t0.c0)<=(t0.c1)), TIME('-1446387698', rt0.c0, t0.c1)))) DESC, CASE ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))  WHEN (- (t0.c1)) THEN (((t0.c0, rt0.c0, t0.c1))<((rt0.c0, t0.c1, rt0.c2))) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 COLLATE BINARY WHEN CASE rt0.c3  WHEN 0.2471711388379727 THEN t0.c2 END THEN ((rt0.c2)>=(t0.c1)) END ASC, CASE WHEN (t0.c1 IN ()) THEN ((t0.c0)|(t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (((rt0.c1, ((0Xffffffffdf147a99)IS NOT(rt0.c0)), (t0.c0 IN ()), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)), t0.c0))=((1800574512, ABS(DISTINCT rt0.c1), rt0.c1, ((t0.c0)<=(t0.c1)), TIME('-1446387698', rt0.c0, t0.c1)))) DESC, CASE ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))  WHEN (- (t0.c1)) THEN (((t0.c0, rt0.c0, t0.c1))<((rt0.c0, t0.c1, rt0.c2))) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 COLLATE BINARY WHEN CASE rt0.c3  WHEN 0.2471711388379727 THEN t0.c2 END THEN ((rt0.c2)>=(t0.c1)) END ASC, CASE WHEN (t0.c1 IN ()) THEN ((t0.c0)|(t0.c2)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE (((CAST(t0.c2 AS REAL)) IS TRUE)) ORDER BY (((rt0.c1, ((0Xffffffffdf147a99)IS NOT(rt0.c0)), (t0.c0 IN ()), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0)), t0.c0))=((1800574512, ABS(DISTINCT rt0.c1), rt0.c1, ((t0.c0)<=(t0.c1)), TIME('-1446387698', rt0.c0, t0.c1)))) DESC, CASE ((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))  WHEN (- (t0.c1)) THEN (((t0.c0, rt0.c0, t0.c1))<((rt0.c0, t0.c1, rt0.c2))) WHEN CAST(t0.c2 AS REAL) THEN t0.c1 COLLATE BINARY WHEN CASE rt0.c3  WHEN 0.2471711388379727 THEN t0.c2 END THEN ((rt0.c2)>=(t0.c1)) END ASC, CASE WHEN (t0.c1 IN ()) THEN ((t0.c0)|(t0.c2)) END DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))) AND ((rt0.c3 COLLATE RTRIM)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))) AND ((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))) AND ((rt0.c3 COLLATE RTRIM)))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))) AND ((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)))) AND ((rt0.c3 COLLATE RTRIM)))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c1)GLOB(t0.c1)))|(0x74ded7d9)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c1)))|(0x74ded7d9)) ASC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c1)GLOB(t0.c1)))|(0x74ded7d9)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1)GLOB(t0.c1)))|(0x74ded7d9)) ASC);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY ((((t0.c1)GLOB(t0.c1)))|(0x74ded7d9)) ASC;
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE)>((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)>((rt0.c3 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE)>((rt0.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)>((rt0.c3 IN ())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (((t0.c0 COLLATE NOCASE)>((rt0.c3 IN ()))));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE ((((t0.c1) BETWEEN (rt0.c1) AND (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (rt0.c1) AND (x'')) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE ((((t0.c1) BETWEEN (rt0.c1) AND (x'')) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1) BETWEEN (rt0.c1) AND (x'')) IN ())) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN rt0 ON rt0.c2 WHERE ((((t0.c1) BETWEEN (rt0.c1) AND (x'')) IN ()));
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('24744914') ORDER BY (t0.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('24744914') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (t0.c1 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('24744914') ORDER BY (t0.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('24744914') IS TRUE)  as count FROM t0 NATURAL JOIN rt0 ORDER BY (t0.c1 IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN rt0 WHERE ('24744914') ORDER BY (t0.c1 IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((((((('-1764490976')OR(rt0.c1)))OR(rt0.c3)))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1764490976')OR(rt0.c1)))OR(rt0.c3)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((('-1764490976')OR(rt0.c1)))OR(rt0.c3)))<((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((('-1764490976')OR(rt0.c1)))OR(rt0.c3)))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((('-1764490976')OR(rt0.c1)))OR(rt0.c3)))<((rt0.c0 IN ()))));
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((rt0.c3)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c3)*(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((rt0.c3)*(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c3)*(rt0.c2)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (ABS(DISTINCT ((rt0.c3)*(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN ((+ (rt0.c3))) AND (rt0.c1)));
SELECT * FROM t0 WHERE (((((t0.c0)|(t0.c2))) NOT BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c0)<=(t0.c1))))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2)))GLOB(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(t0.c2))) NOT BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c0)<=(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2)))GLOB(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)|(t0.c2))) NOT BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c0)<=(t0.c1))))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2)))GLOB(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)|(t0.c2))) NOT BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c0)<=(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2)))GLOB(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)|(t0.c2))) NOT BETWEEN (((t0.c0)<<(t0.c1))) AND (((t0.c0)<=(t0.c1))))) ORDER BY ((((((t0.c2)OR(t0.c2)))OR(t0.c2)))GLOB(CAST(t0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c0 AS REAL))AND(('-871128404' IN (t0.c0)))))OR(x'643e')))OR(((t0.c2)||(NULL)))))OR(((((t0.c2)AND(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS REAL))AND(('-871128404' IN (t0.c0)))))OR(x'643e')))OR(((t0.c2)||(NULL)))))OR(((((t0.c2)AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c0 AS REAL))AND(('-871128404' IN (t0.c0)))))OR(x'643e')))OR(((t0.c2)||(NULL)))))OR(((((t0.c2)AND(t0.c0)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c0 AS REAL))AND(('-871128404' IN (t0.c0)))))OR(x'643e')))OR(((t0.c2)||(NULL)))))OR(((((t0.c2)AND(t0.c0)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c0 AS REAL))AND(('-871128404' IN (t0.c0)))))OR(x'643e')))OR(((t0.c2)||(NULL)))))OR(((((t0.c2)AND(t0.c0)))AND(t0.c1)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c2))==((t0.c1)))) ISNULL)) ORDER BY ((((CAST(t0.c2 AS TEXT))OR(LTRIM(t0.c2))))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))==((t0.c1)))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c2 AS TEXT))OR(LTRIM(t0.c2))))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c2))==((t0.c1)))) ISNULL)) ORDER BY ((((CAST(t0.c2 AS TEXT))OR(LTRIM(t0.c2))))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))==((t0.c1)))) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((CAST(t0.c2 AS TEXT))OR(LTRIM(t0.c2))))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) ASC);
SELECT ALL * FROM t0 WHERE ((((((t0.c2))==((t0.c1)))) ISNULL)) ORDER BY ((((CAST(t0.c2 AS TEXT))OR(LTRIM(t0.c2))))OR(((((t0.c0)AND(t0.c2)))OR(t0.c1)))) ASC;
SELECT ALL * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c1, t0.c2) AS TEXT)) ORDER BY MIN((t0.c2 IN ()), (t0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c1, t0.c2) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY MIN((t0.c2 IN ()), (t0.c0 IN ())) ASC);
SELECT ALL * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c1, t0.c2) AS TEXT)) ORDER BY MIN((t0.c2 IN ()), (t0.c0 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(DISTINCT t0.c1, t0.c2) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY MIN((t0.c2 IN ()), (t0.c0 IN ())) ASC);
SELECT ALL * FROM t0 WHERE (CAST(TRIM(DISTINCT t0.c1, t0.c2) AS TEXT)) ORDER BY MIN((t0.c2 IN ()), (t0.c0 IN ())) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN ((t0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN ((t0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN ((t0.c2) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN ((t0.c2) IS TRUE) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END THEN ((t0.c2) IS TRUE) END);
SELECT * FROM t0, rt0 WHERE (((HEX(t0.c2))/((((rt0.c0, rt0.c0, t0.c0, NULL, t0.c1))=((rt0.c0, 55619199, t0.c2, rt0.c0, t0.c1)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c2))/((((rt0.c0, rt0.c0, t0.c0, NULL, t0.c1))==((rt0.c0, 55619199, t0.c2, rt0.c0, t0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (((HEX(t0.c2))/((((rt0.c0, rt0.c0, t0.c0, NULL, t0.c1))=((rt0.c0, 55619199, t0.c2, rt0.c0, t0.c1)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c2))/((((rt0.c0, rt0.c0, t0.c0, NULL, t0.c1))==((rt0.c0, 55619199, t0.c2, rt0.c0, t0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ASC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (((HEX(t0.c2))/((((rt0.c0, rt0.c0, t0.c0, NULL, t0.c1))=((rt0.c0, 55619199, t0.c2, rt0.c0, t0.c1)))))) ORDER BY ((CAST(t0.c0 AS NUMERIC)) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ORDER BY x'0fae' ASC  NULLS FIRST, CAST(INSTR(rt0.c2, rt0.c2) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 ORDER BY x'0fae' ASC  NULLS FIRST, CAST(INSTR(rt0.c2, rt0.c2) AS BLOB) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ORDER BY x'0fae' ASC  NULLS FIRST, CAST(INSTR(rt0.c2, rt0.c2) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 ORDER BY x'0fae' ASC  NULLS FIRST, CAST(INSTR(rt0.c2, rt0.c2) AS BLOB) ASC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t0 ON t0.c1 WHERE (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)) COLLATE NOCASE) ORDER BY x'0fae' ASC  NULLS FIRST, CAST(INSTR(rt0.c2, rt0.c2) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELIHOOD(t0.c1, 0.7069852370989366) IN ((((t0.c2, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, x'')) AND ((t0.c2, t0.c1, t0.c1, t0.c2, t0.c1))), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c1, 0.7069852370989366) IN ((((t0.c2, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, x'')) AND ((t0.c2, t0.c1, t0.c1, t0.c2, t0.c1))), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELIHOOD(t0.c1, 0.7069852370989366) IN ((((t0.c2, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, x'')) AND ((t0.c2, t0.c1, t0.c1, t0.c2, t0.c1))), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((LIKELIHOOD(t0.c1, 0.7069852370989366) IN ((((t0.c2, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, x'')) AND ((t0.c2, t0.c1, t0.c1, t0.c2, t0.c1))), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((LIKELIHOOD(t0.c1, 0.7069852370989366) IN ((((t0.c2, t0.c0, t0.c0, t0.c1, t0.c2)) BETWEEN ((t0.c1, t0.c0, t0.c0, t0.c1, x'')) AND ((t0.c2, t0.c1, t0.c1, t0.c2, t0.c1))), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c1, t0.c2))))));
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)IS NOT(((rt0.c3) NOT NULL))));
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((0.5370305299090455))!=((0.11650934694648984))) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.5370305299090455))<>((0.11650934694648984))) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((0.5370305299090455))!=((0.11650934694648984))) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((0.5370305299090455))<>((0.11650934694648984))) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CASE WHEN (((0.5370305299090455))!=((0.11650934694648984))) THEN (((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))) END);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c3)))OR('%X')))OR(rt0.c3))) ORDER BY CASE rt0.c1  WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c1)%(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (rt0.c3)))OR('%X')))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c1)%(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c3)))OR('%X')))OR(rt0.c3))) ORDER BY CASE rt0.c1  WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c1)%(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN (rt0.c3)))OR('%X')))OR(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c1  WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c1)%(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END DESC);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c2 IN (rt0.c3)))OR('%X')))OR(rt0.c3))) ORDER BY CASE rt0.c1  WHEN LIKELY(DISTINCT rt0.c1) THEN ((rt0.c1)%(rt0.c0)) ELSE ((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)) END DESC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0) ISNULL) IN ((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ((~ (t0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0) ISNULL) IN ((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0) ISNULL) IN ((~ (t0.c1))))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((t0.c0) ISNULL) IN ((~ (t0.c1)))));
SELECT * FROM t0, rt0 WHERE (t0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (t0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (t0.c1 COLLATE BINARY);
SELECT * FROM t0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)));
SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c3))>(x''))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END, ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)), CAST(NULL AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c0))), rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c3))>(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END, ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)), CAST(NULL AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c0))), rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c3))>(x''))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END, ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)), CAST(NULL AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c0))), rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c3))>(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END, ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)), CAST(NULL AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c0))), rt0.c0))) ASC);
SELECT * FROM rt0 WHERE (((TYPEOF(DISTINCT rt0.c3))>(x''))) ORDER BY (((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN NULL END, ((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c1)), CAST(NULL AS TEXT))) AND (((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), (((rt0.c1, rt0.c0, rt0.c3))<=((rt0.c1, rt0.c2, rt0.c0))), rt0.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(((rt0.c3)||(t0.c0))))) ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((t0.c0)<=(t0.c2)) WHEN ((rt0.c0)==(rt0.c3)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)GLOB(x'')) THEN (((0.8061961579064737, rt0.c1, t0.c2)) BETWEEN ((rt0.c0, 'Wଶ', rt0.c1)) AND ((t0.c0, t0.c1, t0.c1))) WHEN (+ (t0.c0)) THEN (rt0.c3 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c2)) END, ((((rt0.c0)LIKE(rt0.c3))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(((rt0.c3)||(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((t0.c0)<=(t0.c2)) WHEN ((rt0.c0)==(rt0.c3)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)GLOB(x'')) THEN (((0.8061961579064737, rt0.c1, t0.c2)) BETWEEN ((rt0.c0, 'Wଶ', rt0.c1)) AND ((t0.c0, t0.c1, t0.c1))) WHEN (+ (t0.c0)) THEN (rt0.c3 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c2)) END, ((((rt0.c0)LIKE(rt0.c3))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(((rt0.c3)||(t0.c0))))) ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((t0.c0)<=(t0.c2)) WHEN ((rt0.c0)==(rt0.c3)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)GLOB(x'')) THEN (((0.8061961579064737, rt0.c1, t0.c2)) BETWEEN ((rt0.c0, 'Wଶ', rt0.c1)) AND ((t0.c0, t0.c1, t0.c1))) WHEN (+ (t0.c0)) THEN (rt0.c3 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c2)) END, ((((rt0.c0)LIKE(rt0.c3))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(((rt0.c3)||(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((t0.c0)<=(t0.c2)) WHEN ((rt0.c0)==(rt0.c3)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)GLOB(x'')) THEN (((0.8061961579064737, rt0.c1, t0.c2)) BETWEEN ((rt0.c0, 'Wଶ', rt0.c1)) AND ((t0.c0, t0.c1, t0.c1))) WHEN (+ (t0.c0)) THEN (rt0.c3 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c2)) END, ((((rt0.c0)LIKE(rt0.c3))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 WHEN NULL THEN rt0.c3 WHEN t0.c2 THEN rt0.c2 ELSE rt0.c2 END)>=(((rt0.c3)||(t0.c0))))) ORDER BY CASE ((rt0.c1) IS TRUE)  WHEN ((rt0.c3)>(t0.c0)) THEN (t0.c0 IN ()) WHEN CAST(rt0.c2 AS BLOB) THEN ((t0.c0)<=(t0.c2)) WHEN ((rt0.c0)==(rt0.c3)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c2)GLOB(x'')) THEN (((0.8061961579064737, rt0.c1, t0.c2)) BETWEEN ((rt0.c0, 'Wଶ', rt0.c1)) AND ((t0.c0, t0.c1, t0.c1))) WHEN (+ (t0.c0)) THEN (rt0.c3 IN ()) ELSE ((((((((rt0.c2)AND(rt0.c2)))AND(t0.c0)))AND(rt0.c1)))OR(t0.c2)) END, ((((rt0.c0)LIKE(rt0.c3))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((+ (t0.c1)))OR(((((rt0.c0)OR(t0.c0)))AND(NULL)))))OR(((t0.c0)*(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c1)))OR(((((rt0.c0)OR(t0.c0)))AND(NULL)))))OR(((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((+ (t0.c1)))OR(((((rt0.c0)OR(t0.c0)))AND(NULL)))))OR(((t0.c0)*(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (t0.c1)))OR(((((rt0.c0)OR(t0.c0)))AND(NULL)))))OR(((t0.c0)*(t0.c2))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((+ (t0.c1)))OR(((((rt0.c0)OR(t0.c0)))AND(NULL)))))OR(((t0.c0)*(t0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7269004893075174 IN ())) ORDER BY (~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((0.7269004893075174 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7269004893075174 IN ())) ORDER BY (~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT (((0.7269004893075174 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((0.7269004893075174 IN ())) ORDER BY (~ (((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))) DESC  NULLS FIRST, (- (CAST(rt0.c0 AS NUMERIC)))  NULLS LAST, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND (rt0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))AND(t0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((x'')OR(NULL)))AND(t0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))AND(t0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((x'')OR(NULL)))AND(t0.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((x'')OR(NULL)))AND(t0.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND(((x'')IS NOT(rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))AND(((x'')IS NOT(rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND(((x'')IS NOT(rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))AND(((x'')IS NOT(rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))AND(((x'')IS NOT(rt0.c0)))))OR(((rt0.c1) IS FALSE))))OR(CAST(rt0.c3 AS INTEGER))))AND(CAST(rt0.c0 AS BLOB))));
SELECT * FROM rt0 WHERE ((((0.3486495489085072))>(((rt0.c0 IN ()))))) ORDER BY CAST(json_valid('-1155364494') AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.3486495489085072))>(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid('-1155364494') AS BLOB)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.3486495489085072))>(((rt0.c0 IN ()))))) ORDER BY CAST(json_valid('-1155364494') AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((0.3486495489085072))>(((rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(json_valid('-1155364494') AS BLOB)  NULLS LAST);
SELECT * FROM rt0 WHERE ((((0.3486495489085072))>(((rt0.c0 IN ()))))) ORDER BY CAST(json_valid('-1155364494') AS BLOB)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((('-563247429', rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), (NOT (rt0.c3)), COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((((rt0.c3)>=(rt0.c3)), ((rt0.c0)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))) ORDER BY UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-563247429', rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), (NOT (rt0.c3)), COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((((rt0.c3)>=(rt0.c3)), ((rt0.c0)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE (((('-563247429', rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), (NOT (rt0.c3)), COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((((rt0.c3)>=(rt0.c3)), ((rt0.c0)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))) ORDER BY UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('-563247429', rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), (NOT (rt0.c3)), COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((((rt0.c3)>=(rt0.c3)), ((rt0.c0)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC);
SELECT ALL * FROM rt0 WHERE (((('-563247429', rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)), (NOT (rt0.c3)), COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c2, rt0.c1))) AND ((((rt0.c3)>=(rt0.c3)), ((rt0.c0)<<(rt0.c2)), ((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))))) ORDER BY UNICODE(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC;
SELECT * FROM t0 WHERE (((t0.c0)>>(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)>>(t0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)>>(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0)>>(t0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 IN (t0.c1)) IN ())) ORDER BY ((CAST(t0.c2 AS REAL))|(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS REAL))|(t0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 IN (t0.c1)) IN ())) ORDER BY ((CAST(t0.c2 AS REAL))|(t0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 IN (t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c2 AS REAL))|(t0.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 IN (t0.c1)) IN ())) ORDER BY ((CAST(t0.c2 AS REAL))|(t0.c1 COLLATE BINARY));
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((+ (rt0.c3)))<=((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))<=((~ (t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((+ (rt0.c3)))<=((~ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3)))<=((~ (t0.c1))))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT * FROM t0 NATURAL JOIN rt0 WHERE ((((+ (rt0.c3)))<=((~ (t0.c1)))));
SELECT * FROM rt0 WHERE ((((((rt0.c3))<=((rt0.c3))))<((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))IS NOT('j<G'));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<=((rt0.c3))))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))IS NOT('j<G')));
SELECT * FROM rt0 WHERE ((((((rt0.c3))<=((rt0.c3))))<((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))IS NOT('j<G'));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3))<=((rt0.c3))))<((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))IS NOT('j<G')));
SELECT * FROM rt0 WHERE ((((((rt0.c3))<=((rt0.c3))))<((rt0.c0 IN ())))) ORDER BY ((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))IS NOT('j<G'));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY ((((t0.c0 IN ()), (((t0.c2))<((t0.c0))), (t0.c2 IN (t0.c2))))<=((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE t0.c0  WHEN t0.c1 THEN t0.c0 END, (t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN ()), (((t0.c2))<((t0.c0))), (t0.c2 IN (t0.c2))))<=((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE t0.c0  WHEN t0.c1 THEN t0.c0 END, (t0.c2 IN ())))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY ((((t0.c0 IN ()), (((t0.c2))<((t0.c0))), (t0.c2 IN (t0.c2))))<=((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE t0.c0  WHEN t0.c1 THEN t0.c0 END, (t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) IS TRUE)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0 IN ()), (((t0.c2))<((t0.c0))), (t0.c2 IN (t0.c2))))<=((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE t0.c0  WHEN t0.c1 THEN t0.c0 END, (t0.c2 IN ())))));
SELECT ALL * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END) IS TRUE)) ORDER BY ((((t0.c0 IN ()), (((t0.c2))<((t0.c0))), (t0.c2 IN (t0.c2))))<=((((t0.c1) BETWEEN (t0.c2) AND (t0.c0)), CASE t0.c0  WHEN t0.c1 THEN t0.c0 END, (t0.c2 IN ()))));
SELECT COUNT(*) FROM t0 WHERE ((((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2))))-('578229656'))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2))))-('578229656'))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2))))-('578229656'))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2))))-('578229656'))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((NULL)) BETWEEN ((t0.c1)) AND ((t0.c2))))-('578229656'))) ORDER BY t0.c2 ASC;
SELECT * FROM t0 WHERE ((NOT (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((NOT (t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT (t0.c2 COLLATE NOCASE)));
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT))>(((t0.c1) NOT BETWEEN (t0.c0) AND ('-2029768310'))))) ORDER BY ((((((((((((((t0.c2) NOT NULL))OR('0.7663896662737638')))AND(t0.c2)))OR((((x'', t0.c0, t0.c1))<=(('899595039', t0.c2, t0.c0))))))OR(((t0.c2) NOT NULL))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS TEXT))>(((t0.c1) NOT BETWEEN (t0.c0) AND ('-2029768310'))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((((t0.c2) NOT NULL))OR('0.7663896662737638')))AND(t0.c2)))OR((((x'', t0.c0, t0.c1))<=(('899595039', t0.c2, t0.c0))))))OR(((t0.c2) NOT NULL))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT))>(((t0.c1) NOT BETWEEN (t0.c0) AND ('-2029768310'))))) ORDER BY ((((((((((((((t0.c2) NOT NULL))OR('0.7663896662737638')))AND(t0.c2)))OR((((x'', t0.c0, t0.c1))<=(('899595039', t0.c2, t0.c0))))))OR(((t0.c2) NOT NULL))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c1 AS TEXT))>(((t0.c1) NOT BETWEEN (t0.c0) AND ('-2029768310'))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((((t0.c2) NOT NULL))OR('0.7663896662737638')))AND(t0.c2)))OR((((x'', t0.c0, t0.c1))<=(('899595039', t0.c2, t0.c0))))))OR(((t0.c2) NOT NULL))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c2 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((CAST(t0.c1 AS TEXT))>(((t0.c1) NOT BETWEEN (t0.c0) AND ('-2029768310'))))) ORDER BY ((((((((((((((t0.c2) NOT NULL))OR('0.7663896662737638')))AND(t0.c2)))OR((((x'', t0.c0, t0.c1))<=(('899595039', t0.c2, t0.c0))))))OR(((t0.c2) NOT NULL))))OR(((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))))AND(t0.c2 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ('-181828758') ORDER BY (((t0.c1)) NOT BETWEEN ((UPPER(DISTINCT t0.c1))) AND ((((0.7705511463998017)>(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-181828758') IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((UPPER(DISTINCT t0.c1))) AND ((((0.7705511463998017)>(x'')))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('-181828758') ORDER BY (((t0.c1)) NOT BETWEEN ((UPPER(DISTINCT t0.c1))) AND ((((0.7705511463998017)>(x'')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-181828758') IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)) NOT BETWEEN ((UPPER(DISTINCT t0.c1))) AND ((((0.7705511463998017)>(x'')))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ('-181828758') ORDER BY (((t0.c1)) NOT BETWEEN ((UPPER(DISTINCT t0.c1))) AND ((((0.7705511463998017)>(x'')))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c2) ORDER BY ROUND(CAST(t0.c1 AS NUMERIC), PRINTF(t0.c0));
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY ROUND(CAST(t0.c1 AS NUMERIC), PRINTF(t0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c2) ORDER BY ROUND(CAST(t0.c1 AS NUMERIC), PRINTF(t0.c0));
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM rt0, t0 ORDER BY ROUND(CAST(t0.c1 AS NUMERIC), PRINTF(t0.c0)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (t0.c2) ORDER BY ROUND(CAST(t0.c1 AS NUMERIC), PRINTF(t0.c0));
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((+ ('{}')))<((- (t0.c0))))) ORDER BY (((- (t0.c0))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ ('{}')))<((- (t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((+ ('{}')))<((- (t0.c0))))) ORDER BY (((- (t0.c0))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ ('{}')))<((- (t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((- (t0.c0))) BETWEEN ((((rt0.c2))<>((rt0.c2)))) AND (NULL))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE ((((+ ('{}')))<((- (t0.c0))))) ORDER BY (((- (t0.c0))) BETWEEN ((((rt0.c2))!=((rt0.c2)))) AND (NULL))  NULLS FIRST;
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS INTEGER)) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS INTEGER)) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED, rt0 WHERE (CAST(((rt0.c3) IS FALSE) AS INTEGER)) ORDER BY CAST(LTRIM(t0.c0, t0.c0) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c1))) THEN t0.c1 COLLATE BINARY ELSE ((x'') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c0))<=((t0.c1))) THEN t0.c1 COLLATE BINARY ELSE ((x'') IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c1))) THEN t0.c1 COLLATE BINARY ELSE ((x'') IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c0))<=((t0.c1))) THEN t0.c1 COLLATE BINARY ELSE ((x'') IS FALSE) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c0))<=((t0.c1))) THEN t0.c1 COLLATE BINARY ELSE ((x'') IS FALSE) END);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c3);
SELECT ALL * FROM t0, rt0 WHERE (CAST(CAST(t0.c1 AS BLOB) AS INTEGER)) ORDER BY rt0.c3;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST(rt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CASE WHEN rt0.c1 THEN t0.c2 END)<=(((((((((((((rt0.c2)AND(t0.c1)))AND(0.1996885585771737)))OR(rt0.c3)))AND(rt0.c3)))AND(-2.21086647E8)))OR(rt0.c0))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)=(rt0.c3))) AND (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN t0.c2 END)<=(((((((((((((rt0.c2)AND(t0.c1)))AND(0.1996885585771737)))OR(rt0.c3)))AND(rt0.c3)))AND(-2.21086647E8)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(rt0.c0 COLLATE NOCASE AS BLOB) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)==(rt0.c3))) AND (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST(rt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CASE WHEN rt0.c1 THEN t0.c2 END)<=(((((((((((((rt0.c2)AND(t0.c1)))AND(0.1996885585771737)))OR(rt0.c3)))AND(rt0.c3)))AND(-2.21086647E8)))OR(rt0.c0))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)=(rt0.c3))) AND (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c3 ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN t0.c2 END)<=(((((((((((((rt0.c2)AND(t0.c1)))AND(0.1996885585771737)))OR(rt0.c3)))AND(rt0.c3)))AND(-2.21086647E8)))OR(rt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(rt0.c0 COLLATE NOCASE AS BLOB) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)==(rt0.c3))) AND (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON CAST(rt0.c0 COLLATE NOCASE AS BLOB) WHERE (((CASE WHEN rt0.c1 THEN t0.c2 END)<=(((((((((((((rt0.c2)AND(t0.c1)))AND(0.1996885585771737)))OR(rt0.c3)))AND(rt0.c3)))AND(-2.21086647E8)))OR(rt0.c0))))) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOT BETWEEN (((t0.c0)=(rt0.c3))) AND (CASE rt0.c1  WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c3 ELSE rt0.c1 END));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((-285383638)=(t0.c2)) THEN json_type(t0.c2) END WHERE (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((-285383638)=(t0.c2)) THEN json_type(t0.c2) END);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((-285383638)=(t0.c2)) THEN json_type(t0.c2) END WHERE (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((-285383638)=(t0.c2)) THEN json_type(t0.c2) END);
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON CASE WHEN ((-285383638)=(t0.c2)) THEN json_type(t0.c2) END WHERE (CASE WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN t0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3)>=(rt0.c3)))>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c3)))>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3)>=(rt0.c3)))>(t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)>=(rt0.c3)))>(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (((((rt0.c3)>=(rt0.c3)))>(t0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (NULL)) COLLATE RTRIM);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY x'f638' ASC  NULLS FIRST, ((((rt0.c1) BETWEEN ('0.8685493393579494') AND (rt0.c0)))&(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY x'f638' ASC  NULLS FIRST, ((((rt0.c1) BETWEEN ('0.8685493393579494') AND (rt0.c0)))&(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY x'f638' ASC  NULLS FIRST, ((((rt0.c1) BETWEEN ('0.8685493393579494') AND (rt0.c0)))&(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY x'f638' ASC  NULLS FIRST, ((((rt0.c1) BETWEEN ('0.8685493393579494') AND (rt0.c0)))&(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY x'f638' ASC  NULLS FIRST, ((((rt0.c1) BETWEEN ('0.8685493393579494') AND (rt0.c0)))&(((((rt0.c3)OR(rt0.c1)))AND(rt0.c3))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((t0.c1 IN (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c1 IN (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c1 IN (t0.c1)) COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN t0 ON CAST((rt0.c0 IN ()) AS BLOB) WHERE (x'' COLLATE RTRIM) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST((rt0.c0 IN ()) AS BLOB) ORDER BY t0.c0 DESC);
SELECT * FROM rt0 INNER JOIN t0 ON CAST((rt0.c0 IN ()) AS BLOB) WHERE (x'' COLLATE RTRIM) ORDER BY t0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST((rt0.c0 IN ()) AS BLOB) ORDER BY t0.c0 DESC);
SELECT * FROM rt0 INNER JOIN t0 ON CAST((rt0.c0 IN ()) AS BLOB) WHERE (x'' COLLATE RTRIM) ORDER BY t0.c0 DESC;
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c1 THEN t0.c0 END, t0.c0, ((t0.c2) ISNULL), CAST(t0.c2 AS INTEGER), '-29535790'))<>((((((NULL)OR(t0.c2)))OR(t0.c0)), ((x'ba2d') NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0)IS(t0.c0)), (((t0.c2))!=((t0.c0))), ((t0.c1)<(t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c1 THEN t0.c0 END, t0.c0, ((t0.c2) ISNULL), CAST(t0.c2 AS INTEGER), '-29535790'))!=((((((NULL)OR(t0.c2)))OR(t0.c0)), ((x'ba2d') NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0)IS(t0.c0)), (((t0.c2))<>((t0.c0))), ((t0.c1)<(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c1 THEN t0.c0 END, t0.c0, ((t0.c2) ISNULL), CAST(t0.c2 AS INTEGER), '-29535790'))<>((((((NULL)OR(t0.c2)))OR(t0.c0)), ((x'ba2d') NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0)IS(t0.c0)), (((t0.c2))!=((t0.c0))), ((t0.c1)<(t0.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c1 THEN t0.c0 END, t0.c0, ((t0.c2) ISNULL), CAST(t0.c2 AS INTEGER), '-29535790'))!=((((((NULL)OR(t0.c2)))OR(t0.c0)), ((x'ba2d') NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0)IS(t0.c0)), (((t0.c2))<>((t0.c0))), ((t0.c1)<(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0);
SELECT COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c1 THEN t0.c0 END, t0.c0, ((t0.c2) ISNULL), CAST(t0.c2 AS INTEGER), '-29535790'))<>((((((NULL)OR(t0.c2)))OR(t0.c0)), ((x'ba2d') NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c0)IS(t0.c0)), (((t0.c2))!=((t0.c0))), ((t0.c1)<(t0.c0)))))) ORDER BY t0.c0;
SELECT * FROM t0, rt0 WHERE (LOWER(CASE rt0.c3  WHEN NULL THEN rt0.c0 END)) ORDER BY ((((t0.c1)OR(rt0.c3))) ISNULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE rt0.c3  WHEN NULL THEN rt0.c0 END)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1)OR(rt0.c3))) ISNULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (LOWER(CASE rt0.c3  WHEN NULL THEN rt0.c0 END)) ORDER BY ((((t0.c1)OR(rt0.c3))) ISNULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LOWER(CASE rt0.c3  WHEN NULL THEN rt0.c0 END)) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1)OR(rt0.c3))) ISNULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE (LOWER(CASE rt0.c3  WHEN NULL THEN rt0.c0 END)) ORDER BY ((((t0.c1)OR(rt0.c3))) ISNULL)  NULLS FIRST, CAST(((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (0.8740944995188632) AND ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (0.8740944995188632) AND ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (0.8740944995188632) AND ((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c0))) NOT BETWEEN (0.8740944995188632) AND ((- (rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOT BETWEEN (0.8740944995188632) AND ((- (rt0.c3)))));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c1) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c1 THEN '-1123266671' ELSE t0.c0 END THEN NULL ELSE t0.c2 COLLATE NOCASE END WHERE ((~ (((((0.5568910310041434)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY t0.c1 COLLATE RTRIM  NULLS FIRST, ((TRIM(DISTINCT rt0.c3)) BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(t0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((0.5568910310041434)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c1) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c1 THEN '-1123266671' ELSE t0.c0 END THEN NULL ELSE t0.c2 COLLATE NOCASE END ORDER BY t0.c1 COLLATE RTRIM  NULLS FIRST, ((TRIM(DISTINCT rt0.c3)) BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(t0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c1) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c1 THEN '-1123266671' ELSE t0.c0 END THEN NULL ELSE t0.c2 COLLATE NOCASE END WHERE ((~ (((((0.5568910310041434)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY t0.c1 COLLATE RTRIM  NULLS FIRST, ((TRIM(DISTINCT rt0.c3)) BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(t0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((0.5568910310041434)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c1) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c1 THEN '-1123266671' ELSE t0.c0 END THEN NULL ELSE t0.c2 COLLATE NOCASE END ORDER BY t0.c1 COLLATE RTRIM  NULLS FIRST, ((TRIM(DISTINCT rt0.c3)) BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(t0.c2 AS NUMERIC))) DESC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CASE ((t0.c1) IS FALSE)  WHEN CASE t0.c0  WHEN t0.c1 THEN '-1123266671' ELSE t0.c0 END THEN NULL ELSE t0.c2 COLLATE NOCASE END WHERE ((~ (((((0.5568910310041434)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY t0.c1 COLLATE RTRIM  NULLS FIRST, ((TRIM(DISTINCT rt0.c3)) BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(t0.c2 AS NUMERIC))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (json_remove(((t0.c0)=(t0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c2)>(t0.c0)), CASE WHEN t0.c2 THEN 0.7898195199269676 END, json_insert(t0.c0, t0.c1, t0.c2, t0.c1, t0.c1), (((t0.c2, t0.c1, t0.c1)) BETWEEN ((0.2035922401737854, t0.c2, t0.c2)) AND ((NULL, t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((json_remove(((t0.c0)==(t0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c2)>(t0.c0)), CASE WHEN t0.c2 THEN 0.7898195199269676 END, json_insert(t0.c0, t0.c1, t0.c2, t0.c1, t0.c1), (((t0.c2, t0.c1, t0.c1)) BETWEEN ((0.2035922401737854, t0.c2, t0.c2)) AND ((NULL, t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_remove(((t0.c0)=(t0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c2)>(t0.c0)), CASE WHEN t0.c2 THEN 0.7898195199269676 END, json_insert(t0.c0, t0.c1, t0.c2, t0.c1, t0.c1), (((t0.c2, t0.c1, t0.c1)) BETWEEN ((0.2035922401737854, t0.c2, t0.c2)) AND ((NULL, t0.c0, t0.c2)))));
SELECT SUM(count) FROM (SELECT ((json_remove(((t0.c0)==(t0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c2)>(t0.c0)), CASE WHEN t0.c2 THEN 0.7898195199269676 END, json_insert(t0.c0, t0.c1, t0.c2, t0.c1, t0.c1), (((t0.c2, t0.c1, t0.c1)) BETWEEN ((0.2035922401737854, t0.c2, t0.c2)) AND ((NULL, t0.c0, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_remove(((t0.c0)=(t0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)), ((t0.c2)>(t0.c0)), CASE WHEN t0.c2 THEN 0.7898195199269676 END, json_insert(t0.c0, t0.c1, t0.c2, t0.c1, t0.c1), (((t0.c2, t0.c1, t0.c1)) BETWEEN ((0.2035922401737854, t0.c2, t0.c2)) AND ((NULL, t0.c0, t0.c2)))));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(t0.c0)))AND(t0.c1))  WHEN 'Zi' THEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) END WHERE (((((((((((t0.c1)OR(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)OR(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(t0.c0)))AND(t0.c1))  WHEN 'Zi' THEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(t0.c0)))AND(t0.c1))  WHEN 'Zi' THEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) END WHERE (((((((((((t0.c1)OR(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)OR(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2))) IS TRUE)) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(t0.c0)))AND(t0.c1))  WHEN 'Zi' THEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) END);
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON CASE ((((rt0.c0)AND(t0.c0)))AND(t0.c1))  WHEN 'Zi' THEN ((((t0.c0)AND(t0.c0)))OR(rt0.c1)) END WHERE (((((((((((t0.c1)OR(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(t0.c2))) IS TRUE));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<(t0.c1))) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c0))<((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<(t0.c1))) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c0))<((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<(t0.c1))) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c0))<((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)<(t0.c1))) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c0))<((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)<(t0.c1))) NOT BETWEEN ((- (t0.c2))) AND ((((t0.c0))<((t0.c2))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2))=((t0.c2)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'f946') AND (t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (t0.c0 IN (rt0.c1)) COLLATE NOCASE ASC, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))=((t0.c2)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'f946') AND (t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c0 IN (rt0.c1)) COLLATE NOCASE ASC, t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2))=((t0.c2)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'f946') AND (t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (t0.c0 IN (rt0.c1)) COLLATE NOCASE ASC, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2))=((t0.c2)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'f946') AND (t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (t0.c0 IN (rt0.c1)) COLLATE NOCASE ASC, t0.c0  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2))=((t0.c2)))) NOT BETWEEN (((rt0.c3) NOT BETWEEN (x'f946') AND (t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) ORDER BY (t0.c0 IN (rt0.c1)) COLLATE NOCASE ASC, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY TRIM(rt0.c3) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(rt0.c3) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY TRIM(rt0.c3) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0 ORDER BY TRIM(rt0.c3) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t0 WHERE (NULL) ORDER BY TRIM(rt0.c3) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE ((~ (((rt0.c0) NOT NULL)))) ORDER BY IFNULL(rt0.c0, rt0.c0) COLLATE RTRIM DESC;
SELECT ALL * FROM t0 WHERE (((x'') BETWEEN ((((t0.c1, t0.c2, x'ed82'))>((t0.c0, t0.c0, t0.c0)))) AND ((t0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((t0.c1, t0.c2, x'ed82'))>((t0.c0, t0.c0, t0.c0)))) AND ((t0.c1 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'') BETWEEN ((((t0.c1, t0.c2, x'ed82'))>((t0.c0, t0.c0, t0.c0)))) AND ((t0.c1 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') BETWEEN ((((t0.c1, t0.c2, x'ed82'))>((t0.c0, t0.c0, t0.c0)))) AND ((t0.c1 IN (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((x'') BETWEEN ((((t0.c1, t0.c2, x'ed82'))>((t0.c0, t0.c0, t0.c0)))) AND ((t0.c1 IN (t0.c0)))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c3) IS TRUE))) WHERE (',.Ke');
SELECT SUM(count) FROM (SELECT ((',.Ke') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c3) IS TRUE))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c3) IS TRUE))) WHERE (',.Ke');
SELECT SUM(count) FROM (SELECT ((',.Ke') IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c3) IS TRUE))));
SELECT COUNT(*) FROM t0 CROSS JOIN rt0 ON (+ (((rt0.c3) IS TRUE))) WHERE (',.Ke');
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)=(t0.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)=(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)=(t0.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c0)=(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY x'' DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0)=(t0.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (LIKELIHOOD(0X6bc71e5d, 0.22967918645981156)))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(0x6bc71e5d, 0.22967918645981156)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2 IN (t0.c2)))GLOB(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (LIKELIHOOD(0X6bc71e5d, 0.22967918645981156)))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((+ (LIKELIHOOD(0x6bc71e5d, 0.22967918645981156)))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((t0.c2 IN (t0.c2)))GLOB(((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((+ (LIKELIHOOD(0X6bc71e5d, 0.22967918645981156)))) ORDER BY (((t0.c2 IN (t0.c2)))GLOB(((rt0.c0) IS FALSE)));
SELECT * FROM t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)>>(((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)>>(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)>>(((rt0.c2)<(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE)>>(((rt0.c2)<(rt0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((rt0.c0 COLLATE NOCASE)>>(((rt0.c2)<(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0X7f22f963) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c2 AS BLOB) WHEN (- (0.6892346770164051)) THEN CAST(rt0.c2 AS TEXT) WHEN (NOT (x'')) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN rt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X7f22f963) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c2 AS BLOB) WHEN (- (0.6892346770164051)) THEN CAST(rt0.c2 AS TEXT) WHEN (NOT (x'')) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN rt0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0X7f22f963) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c2 AS BLOB) WHEN (- (0.6892346770164051)) THEN CAST(rt0.c2 AS TEXT) WHEN (NOT (x'')) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN rt0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X7f22f963) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c2 AS BLOB) WHEN (- (0.6892346770164051)) THEN CAST(rt0.c2 AS TEXT) WHEN (NOT (x'')) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN rt0.c0 END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (0X7f22f963) ORDER BY CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN (NOT (t0.c1)) WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c2 AS BLOB) WHEN (- (0.6892346770164051)) THEN CAST(rt0.c2 AS TEXT) WHEN (NOT (x'')) THEN t0.c1 WHEN ((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)) THEN rt0.c0 END  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c2)>(t0.c2)))))AND(((t0.c2)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))OR(((t0.c2)>(t0.c2)))))AND(((t0.c2)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c2)>(t0.c2)))))AND(((t0.c2)LIKE(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (t0.c0)))OR(((t0.c2)>(t0.c2)))))AND(((t0.c2)LIKE(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c2)>(t0.c2)))))AND(((t0.c2)LIKE(t0.c0)))));
SELECT * FROM rt0 WHERE ((('192649776')GLOB(CAST(rt0.c3 AS TEXT)))) ORDER BY (+ ((((rt0.c2))<=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('192649776')GLOB(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2))<=((rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((('192649776')GLOB(CAST(rt0.c3 AS TEXT)))) ORDER BY (+ ((((rt0.c2))<=((rt0.c1))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('192649776')GLOB(CAST(rt0.c3 AS TEXT)))) IS TRUE)  as count FROM rt0 ORDER BY (+ ((((rt0.c2))<=((rt0.c1))))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((('192649776')GLOB(CAST(rt0.c3 AS TEXT)))) ORDER BY (+ ((((rt0.c2))<=((rt0.c1))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c2)))>>(((-1203594615)<>(rt0.c2)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c2)))>>(((-1203594615)<>(rt0.c2)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c2)))>>(((-1203594615)<>(rt0.c2)))) WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c2)))>>(((-1203594615)<>(rt0.c2)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN rt0 ON ((((rt0.c0)*(rt0.c2)))>>(((-1203594615)<>(rt0.c2)))) WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(rt0.c2))) IS TRUE)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(rt0.c2))) IS TRUE)) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)AND(t0.c0)))OR(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((t0.c0)AND(t0.c0)))OR(rt0.c2))) IS TRUE)) ORDER BY rt0.c0 ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'857f')<=(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'857f')<=(((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'857f')<=(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((x'857f')<=(((t0.c0) ISNULL)))) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (((x'857f')<=(((t0.c0) ISNULL))));
SELECT ALL * FROM rt0 WHERE ('P^' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('P^' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('P^' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('P^' COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('P^' COLLATE NOCASE);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((((rt0.c3, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c3, t0.c0, x'')))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((((rt0.c3, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c3, t0.c0, x'')))) AND (rt0.c3))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((((rt0.c3, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c3, t0.c0, x'')))) AND (rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((((rt0.c3, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c3, t0.c0, x'')))) AND (rt0.c3))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) NOT BETWEEN ((((rt0.c3, t0.c2, rt0.c0)) BETWEEN ((rt0.c0, rt0.c0, rt0.c3)) AND ((rt0.c3, t0.c0, x'')))) AND (rt0.c3)));
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c2)<>(rt0.c0)) THEN t0.c1 ELSE CASE rt0.c0  WHEN t0.c1 THEN t0.c2 END END) ORDER BY CASE WHEN (((t0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((0.14193081549332454, t0.c0, rt0.c2))) THEN ((rt0.c2)>('')) ELSE t0.c1 END DESC, (((CAST(t0.c0 AS REAL)))!=((rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)<>(rt0.c0)) THEN t0.c1 ELSE CASE rt0.c0  WHEN t0.c1 THEN t0.c2 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (((t0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((0.14193081549332454, t0.c0, rt0.c2))) THEN ((rt0.c2)>('')) ELSE t0.c1 END DESC, (((CAST(t0.c0 AS REAL)))!=((rt0.c3)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c2)<>(rt0.c0)) THEN t0.c1 ELSE CASE rt0.c0  WHEN t0.c1 THEN t0.c2 END END) ORDER BY CASE WHEN (((t0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((0.14193081549332454, t0.c0, rt0.c2))) THEN ((rt0.c2)>('')) ELSE t0.c1 END DESC, (((CAST(t0.c0 AS REAL)))!=((rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)<>(rt0.c0)) THEN t0.c1 ELSE CASE rt0.c0  WHEN t0.c1 THEN t0.c2 END END) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN (((t0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((0.14193081549332454, t0.c0, rt0.c2))) THEN ((rt0.c2)>('')) ELSE t0.c1 END DESC, (((CAST(t0.c0 AS REAL)))!=((rt0.c3)))  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((t0.c2)<>(rt0.c0)) THEN t0.c1 ELSE CASE rt0.c0  WHEN t0.c1 THEN t0.c2 END END) ORDER BY CASE WHEN (((t0.c2, rt0.c2, rt0.c2)) BETWEEN ((t0.c2, rt0.c1, rt0.c2)) AND ((0.14193081549332454, t0.c0, rt0.c2))) THEN ((rt0.c2)>('')) ELSE t0.c1 END DESC, (((CAST(t0.c0 AS REAL)))!=((rt0.c3)))  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))>=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))>=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))>=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0))>=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM t0, rt0 NOT INDEXED ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) ISNULL)  NULLS LAST);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((t0.c0))>=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c0) BETWEEN (t0.c2) AND (rt0.c2))) ISNULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c2)OR(CASE WHEN t0.c2 THEN 'Pd' ELSE t0.c2 END)))OR(CAST(t0.c1 AS TEXT))))OR(((t0.c1)/(t0.c1)))))OR(((t0.c0)IS NOT(t0.c1)))))OR(t0.c1)))OR(t0.c2))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (-954515468)) THEN CAST(t0.c1 AS REAL) ELSE CAST(t0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR(CASE WHEN t0.c2 THEN 'Pd' ELSE t0.c2 END)))OR(CAST(t0.c1 AS TEXT))))OR(((t0.c1)/(t0.c1)))))OR(((t0.c0)IS NOT(t0.c1)))))OR(t0.c1)))OR(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (-954515468)) THEN CAST(t0.c1 AS REAL) ELSE CAST(t0.c1 AS TEXT) END);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c2)OR(CASE WHEN t0.c2 THEN 'Pd' ELSE t0.c2 END)))OR(CAST(t0.c1 AS TEXT))))OR(((t0.c1)/(t0.c1)))))OR(((t0.c0)IS NOT(t0.c1)))))OR(t0.c1)))OR(t0.c2))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (-954515468)) THEN CAST(t0.c1 AS REAL) ELSE CAST(t0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR(CASE WHEN t0.c2 THEN 'Pd' ELSE t0.c2 END)))OR(CAST(t0.c1 AS TEXT))))OR(((t0.c1)/(t0.c1)))))OR(((t0.c0)IS NOT(t0.c1)))))OR(t0.c1)))OR(t0.c2))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (-954515468)) THEN CAST(t0.c1 AS REAL) ELSE CAST(t0.c1 AS TEXT) END);
SELECT COUNT(*) FROM t0 WHERE (((((((((((((t0.c2)OR(CASE WHEN t0.c2 THEN 'Pd' ELSE t0.c2 END)))OR(CAST(t0.c1 AS TEXT))))OR(((t0.c1)/(t0.c1)))))OR(((t0.c0)IS NOT(t0.c1)))))OR(t0.c1)))OR(t0.c2))) ORDER BY CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (-954515468)) THEN CAST(t0.c1 AS REAL) ELSE CAST(t0.c1 AS TEXT) END;
SELECT * FROM rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY (- (((rt0.c1) ISNULL))) ASC  NULLS FIRST, 0.17588417942239454 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c1) ISNULL))) ASC  NULLS FIRST, 0.17588417942239454 ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY (- (((rt0.c1) ISNULL))) ASC  NULLS FIRST, 0.17588417942239454 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE NOCASE) IS TRUE)  as count FROM rt0, t0 ORDER BY (- (((rt0.c1) ISNULL))) ASC  NULLS FIRST, 0.17588417942239454 ASC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (t0.c1 COLLATE NOCASE) ORDER BY (- (((rt0.c1) ISNULL))) ASC  NULLS FIRST, 0.17588417942239454 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE, GLOB(t0.c1, t0.c2)))<>(((t0.c2 IN ()), ((t0.c2) NOTNULL), 0.9484934082549157))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE, GLOB(t0.c1, t0.c2)))!=(((t0.c2 IN ()), ((t0.c2) NOTNULL), 0.9484934082549157)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE, GLOB(t0.c1, t0.c2)))<>(((t0.c2 IN ()), ((t0.c2) NOTNULL), 0.9484934082549157))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE, GLOB(t0.c1, t0.c2)))!=(((t0.c2 IN ()), ((t0.c2) NOTNULL), 0.9484934082549157)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0 COLLATE RTRIM, t0.c0 COLLATE NOCASE, GLOB(t0.c1, t0.c2)))<>(((t0.c2 IN ()), ((t0.c2) NOTNULL), 0.9484934082549157))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c2))OR(((((((((t0.c0)AND(t0.c1)))OR(x'')))AND(NULL)))OR(0xffffffffeb055cb9)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c2))OR(((((((((t0.c0)AND(t0.c1)))OR(x'')))AND(NULL)))OR(0Xffffffffeb055cb9)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c2))OR(((((((((t0.c0)AND(t0.c1)))OR(x'')))AND(NULL)))OR(0xffffffffeb055cb9)))))OR(((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c2))OR(((((((((t0.c0)AND(t0.c1)))OR(x'')))AND(NULL)))OR(0Xffffffffeb055cb9)))))OR(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((HEX(t0.c2))OR(((((((((t0.c0)AND(t0.c1)))OR(x'')))AND(NULL)))OR(0xffffffffeb055cb9)))))OR(((t0.c0) IS FALSE))));
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, t0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c3, '', t0.c1))<=((rt0.c3, t0.c2, rt0.c2))))AND((((0.27683412896925086)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN (rt0.c0, 'w{?Q*4')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c3, '', t0.c1))<=((rt0.c3, t0.c2, rt0.c2))))AND((((0.27683412896925086)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN (rt0.c0, 'w{?Q*4')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c3, '', t0.c1))<=((rt0.c3, t0.c2, rt0.c2))))AND((((0.27683412896925086)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN (rt0.c0, 'w{?Q*4')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c3, '', t0.c1))<=((rt0.c3, t0.c2, rt0.c2))))AND((((0.27683412896925086)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN (rt0.c0, 'w{?Q*4')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE ((((((((((((rt0.c3, '', t0.c1))<=((rt0.c3, t0.c2, rt0.c2))))AND((((0.27683412896925086)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))))))AND(CASE t0.c1  WHEN rt0.c0 THEN rt0.c3 END)))AND((rt0.c1 IN (rt0.c0, 'w{?Q*4')))))AND(CASE WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3 COLLATE BINARY))<=((((rt0.c0)>(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE BINARY))<=((((rt0.c0)>(t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3 COLLATE BINARY))<=((((rt0.c0)>(t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE BINARY))<=((((rt0.c0)>(t0.c2)))))) IS TRUE)  as count FROM rt0, t0);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE ((((rt0.c3 COLLATE BINARY))<=((((rt0.c0)>(t0.c2))))));
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY NULL DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) IS TRUE)  as count FROM t0, rt0 ORDER BY NULL DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS TEXT)) ORDER BY NULL DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (t0.c2);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE x'5e27' END)IS NOT(((0.5136819319356968)<<(rt0.c3))))) ORDER BY ((t0.c2)!=(t0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE x'5e27' END)IS NOT(((0.5136819319356968)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((t0.c2)!=(t0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE x'5e27' END)IS NOT(((0.5136819319356968)<<(rt0.c3))))) ORDER BY ((t0.c2)!=(t0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE x'5e27' END)IS NOT(((0.5136819319356968)<<(rt0.c3))))) IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((t0.c2)!=(t0.c0)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 NATURAL JOIN t0 WHERE (((CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE x'5e27' END)IS NOT(((0.5136819319356968)<<(rt0.c3))))) ORDER BY ((t0.c2)!=(t0.c0)) COLLATE NOCASE  NULLS LAST;
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((t0.c0 COLLATE RTRIM)GLOB(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)GLOB(t0.c1))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((t0.c0 COLLATE RTRIM)GLOB(t0.c1)));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)GLOB(t0.c1))) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (((t0.c0 COLLATE RTRIM)GLOB(t0.c1)));
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c1)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((~ (((rt0.c1)%(rt0.c0)))));
SELECT * FROM t0 WHERE (UNLIKELY(t0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(t0.c0) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (UPPER(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER(((rt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c1) NOTNULL))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UPPER(((rt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (CASE WHEN 1.800574512E9 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (CASE WHEN 1.800574512E9 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (CASE WHEN 1.800574512E9 THEN t0.c2 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (CASE WHEN 1.800574512E9 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c2)))) BETWEEN (t0.c2) AND (CASE WHEN 1.800574512E9 THEN t0.c2 ELSE t0.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))AND(rt0.c3))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))AND(rt0.c3))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(CAST(rt0.c2 AS REAL))))AND(rt0.c3))) ORDER BY CAST((~ (rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN t0.c1 END) AND (((rt0.c3) BETWEEN (t0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c2)>=(x'')) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN t0.c1 END) AND (((rt0.c3) BETWEEN (t0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)>=(x'')) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN t0.c1 END) AND (((rt0.c3) BETWEEN (t0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c2)>=(x'')) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN t0.c1 END) AND (((rt0.c3) BETWEEN (t0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((rt0.c2)>=(x'')) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM t0, rt0 WHERE ((((+ (rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN t0.c1 END) AND (((rt0.c3) BETWEEN (t0.c2) AND (rt0.c2))))) ORDER BY ((rt0.c2)>=(x'')) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS REAL))*((rt0.c1 IN (rt0.c1))))) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN '1738519045' THEN rt0.c0 END THEN ((t0.c1) ISNULL) WHEN ((rt0.c2) IS FALSE) THEN 'WJ.' WHEN ((t0.c0)<(rt0.c2)) THEN CASE WHEN t0.c0 THEN t0.c1 END ELSE CAST(t0.c2 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))*((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN '1738519045' THEN rt0.c0 END THEN ((t0.c1) ISNULL) WHEN ((rt0.c2) IS FALSE) THEN 'WJ.' WHEN ((t0.c0)<(rt0.c2)) THEN CASE WHEN t0.c0 THEN t0.c1 END ELSE CAST(t0.c2 AS INTEGER) END ASC);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS REAL))*((rt0.c1 IN (rt0.c1))))) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN '1738519045' THEN rt0.c0 END THEN ((t0.c1) ISNULL) WHEN ((rt0.c2) IS FALSE) THEN 'WJ.' WHEN ((t0.c0)<(rt0.c2)) THEN CASE WHEN t0.c0 THEN t0.c1 END ELSE CAST(t0.c2 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS REAL))*((rt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN '1738519045' THEN rt0.c0 END THEN ((t0.c1) ISNULL) WHEN ((rt0.c2) IS FALSE) THEN 'WJ.' WHEN ((t0.c0)<(rt0.c2)) THEN CASE WHEN t0.c0 THEN t0.c1 END ELSE CAST(t0.c2 AS INTEGER) END ASC);
SELECT * FROM rt0, t0 WHERE (((CAST(rt0.c3 AS REAL))*((rt0.c1 IN (rt0.c1))))) ORDER BY CASE WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN t0.c1 WHEN '1738519045' THEN rt0.c0 END THEN ((t0.c1) ISNULL) WHEN ((rt0.c2) IS FALSE) THEN 'WJ.' WHEN ((t0.c0)<(rt0.c2)) THEN CASE WHEN t0.c0 THEN t0.c1 END ELSE CAST(t0.c2 AS INTEGER) END ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN 'uf' THEN t0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'uf' THEN t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN 'uf' THEN t0.c2 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN 'uf' THEN t0.c2 END) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN 'uf' THEN t0.c2 END) ISNULL));
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(x'')))AND(t0.c2)))OR(t0.c0 COLLATE NOCASE)))OR(0.015583325306777085)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(x'')))AND(t0.c2)))OR(t0.c0 COLLATE NOCASE)))OR(0.015583325306777085))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(x'')))AND(t0.c2)))OR(t0.c0 COLLATE NOCASE)))OR(0.015583325306777085)));
SELECT SUM(count) FROM (SELECT ((((((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(x'')))AND(t0.c2)))OR(t0.c0 COLLATE NOCASE)))OR(0.015583325306777085))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((((((t0.c2)OR(t0.c2)))AND(t0.c0)))AND(x'')))AND(t0.c2)))OR(t0.c0 COLLATE NOCASE)))OR(0.015583325306777085)));
SELECT ALL * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY (((((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((0.2346943008748209, rt0.c2, rt0.c3))))>>(((((x'')AND(9.46008197E8)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((0.2346943008748209, rt0.c2, rt0.c3))))>>(((((x'')AND(9.46008197E8)))OR(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY (((((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((0.2346943008748209, rt0.c2, rt0.c3))))>>(((((x'')AND(9.46008197E8)))OR(rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((0.2346943008748209, rt0.c2, rt0.c3))))>>(((((x'')AND(9.46008197E8)))OR(rt0.c1)))) ASC);
SELECT ALL * FROM rt0 WHERE ((- ((+ (rt0.c0))))) ORDER BY (((((rt0.c3, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((0.2346943008748209, rt0.c2, rt0.c3))))>>(((((x'')AND(9.46008197E8)))OR(rt0.c1)))) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c1 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c1 IN ()) AS NUMERIC)) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE (CAST((t0.c1 IN ()) AS NUMERIC));
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (DATE(CAST(rt0.c3 AS INTEGER), LIKELIHOOD(DISTINCT t0.c1, 0.4002679885094008), rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CAST(rt0.c3 AS INTEGER), LIKELIHOOD(DISTINCT t0.c1, 0.4002679885094008), rt0.c3)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (DATE(CAST(rt0.c3 AS INTEGER), LIKELIHOOD(DISTINCT t0.c1, 0.4002679885094008), rt0.c3));
SELECT SUM(count) FROM (SELECT ALL ((DATE(CAST(rt0.c3 AS INTEGER), LIKELIHOOD(DISTINCT t0.c1, 0.4002679885094008), rt0.c3)) IS TRUE)  as count FROM t0 NATURAL JOIN rt0);
SELECT ALL * FROM t0 NATURAL JOIN rt0 WHERE (DATE(CAST(rt0.c3 AS INTEGER), LIKELIHOOD(DISTINCT t0.c1, 0.4002679885094008), rt0.c3));
SELECT ALL * FROM t0 WHERE (((~ (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((~ (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((~ (t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((~ (t0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-5.52306023E8, rt0.c0, rt0.c0)) AND ((rt0.c0, ')6', NULL)))) BETWEEN (((rt0.c2)<(rt0.c0))) AND (((rt0.c0)OR(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-5.52306023E8, rt0.c0, rt0.c0)) AND ((rt0.c0, ')6', NULL)))) BETWEEN (((rt0.c2)<(rt0.c0))) AND (((rt0.c0)OR(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-5.52306023E8, rt0.c0, rt0.c0)) AND ((rt0.c0, ')6', NULL)))) BETWEEN (((rt0.c2)<(rt0.c0))) AND (((rt0.c0)OR(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-5.52306023E8, rt0.c0, rt0.c0)) AND ((rt0.c0, ')6', NULL)))) BETWEEN (((rt0.c2)<(rt0.c0))) AND (((rt0.c0)OR(rt0.c1)))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0) ISNULL) AS BLOB)) ORDER BY (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((-5.52306023E8, rt0.c0, rt0.c0)) AND ((rt0.c0, ')6', NULL)))) BETWEEN (((rt0.c2)<(rt0.c0))) AND (((rt0.c0)OR(rt0.c1)))) DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)IS(t0.c2)))*((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS(t0.c2)))*((- (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)IS(t0.c2)))*((- (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS(t0.c2)))*((- (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)IS(t0.c2)))*((- (t0.c1)))));
SELECT * FROM rt0, t0 WHERE ((- ('O/*3&')));
SELECT SUM(count) FROM (SELECT (((- ('O/*3&'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((- ('O/*3&')));
SELECT SUM(count) FROM (SELECT (((- ('O/*3&'))) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((- ('O/*3&')));
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)IS NOT(t0.c2)))<>(((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (~ ((rt0.c0 IN ()))) DESC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c3)))GLOB(((rt0.c0)>(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(t0.c2)))<>(((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((rt0.c0 IN ()))) DESC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c3)))GLOB(((rt0.c0)>(rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)IS NOT(t0.c2)))<>(((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (~ ((rt0.c0 IN ()))) DESC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c3)))GLOB(((rt0.c0)>(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)IS NOT(t0.c2)))<>(((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, t0 ORDER BY (~ ((rt0.c0 IN ()))) DESC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c3)))GLOB(((rt0.c0)>(rt0.c3)))) DESC  NULLS LAST);
SELECT * FROM rt0, t0 WHERE (((((rt0.c2)IS NOT(t0.c2)))<>(((t0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (~ ((rt0.c0 IN ()))) DESC, ((((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c3)))GLOB(((rt0.c0)>(rt0.c3)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((~ (rt0.c2)) AS REAL));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1, 0.7710616173763756, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c1))))+(((rt0.c1)|(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1, 0.7710616173763756, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c1))))+(((rt0.c1)|(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1, 0.7710616173763756, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c1))))+(((rt0.c1)|(rt0.c3)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c1, 0.7710616173763756, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c1))))+(((rt0.c1)|(rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1, 0.7710616173763756, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((t0.c0, rt0.c2, rt0.c1))))+(((rt0.c1)|(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT NULLIF(t0.c0, rt0.c3))) ORDER BY COALESCE(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)), ((t0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT NULLIF(t0.c0, rt0.c3))) IS TRUE)  as count FROM rt0, t0 ORDER BY COALESCE(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)), ((t0.c0) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT NULLIF(t0.c0, rt0.c3))) ORDER BY COALESCE(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)), ((t0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(DISTINCT NULLIF(t0.c0, rt0.c3))) IS TRUE)  as count FROM rt0, t0 ORDER BY COALESCE(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)), ((t0.c0) ISNULL)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (UPPER(DISTINCT NULLIF(t0.c0, rt0.c3))) ORDER BY COALESCE(DISTINCT ((rt0.c3) BETWEEN (rt0.c0) AND (t0.c1)), ((t0.c0) ISNULL)) ASC  NULLS FIRST;
SELECT * FROM rt0, t0 WHERE (0Xffffffffc3b9aa73);
SELECT SUM(count) FROM (SELECT ((0Xffffffffc3b9aa73) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (0Xffffffffc3b9aa73);
SELECT SUM(count) FROM (SELECT ((0Xffffffffc3b9aa73) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (0Xffffffffc3b9aa73);
SELECT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END THEN (((t0.c1)) NOT BETWEEN (('rtH3Z.W눅')) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END THEN (((t0.c1)) NOT BETWEEN (('rtH3Z.W눅')) AND ((t0.c0))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END THEN (((t0.c1)) NOT BETWEEN (('rtH3Z.W눅')) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END THEN (((t0.c1)) NOT BETWEEN (('rtH3Z.W눅')) AND ((t0.c0))) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END  WHEN CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 END THEN (((t0.c1)) NOT BETWEEN (('rtH3Z.W눅')) AND ((t0.c0))) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c2 COLLATE BINARY))<((((((rt0.c1)OR(t0.c2)))AND(rt0.c0)))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE BINARY))<((((((rt0.c1)OR(t0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c2 COLLATE BINARY))<((((((rt0.c1)OR(t0.c2)))AND(rt0.c0)))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 COLLATE BINARY))<((((((rt0.c1)OR(t0.c2)))AND(rt0.c0)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((t0.c2 COLLATE BINARY))<((((((rt0.c1)OR(t0.c2)))AND(rt0.c0)))))) ORDER BY t0.c2 DESC;
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1))))<((((rt0.c0)*(t0.c2)))))) ORDER BY (((((rt0.c3, t0.c1, rt0.c3, rt0.c1, rt0.c2))<=((t0.c2, t0.c0, t0.c1, t0.c1, NULL))))*((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1))))<((((rt0.c0)*(t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3, t0.c1, rt0.c3, rt0.c1, rt0.c2))<=((t0.c2, t0.c0, t0.c1, t0.c1, NULL))))*((NOT (rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1))))<((((rt0.c0)*(t0.c2)))))) ORDER BY (((((rt0.c3, t0.c1, rt0.c3, rt0.c1, rt0.c2))<=((t0.c2, t0.c0, t0.c1, t0.c1, NULL))))*((NOT (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1))))<((((rt0.c0)*(t0.c2)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((rt0.c3, t0.c1, rt0.c3, rt0.c1, rt0.c2))<=((t0.c2, t0.c0, t0.c1, t0.c1, NULL))))*((NOT (rt0.c3)))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c0) NOT BETWEEN (rt0.c2) AND (t0.c1))))<((((rt0.c0)*(t0.c2)))))) ORDER BY (((((rt0.c3, t0.c1, rt0.c3, rt0.c1, rt0.c2))<=((t0.c2, t0.c0, t0.c1, t0.c1, NULL))))*((NOT (rt0.c3))));
SELECT * FROM rt0, t0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((rt0.c1 IN ()));
SELECT * FROM rt0 WHERE (CAST('-954515468' AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-954515468' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('-954515468' AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('-954515468' AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST('-954515468' AS INTEGER)) ORDER BY ((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)+(t0.c2)))*(((((rt0.c0)AND(rt0.c3)))OR(t0.c0))))) ORDER BY ((((rt0.c3)GLOB(t0.c0)))%((((rt0.c3))>((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(t0.c2)))*(((((rt0.c0)AND(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)GLOB(t0.c0)))%((((rt0.c3))>((t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)+(t0.c2)))*(((((rt0.c0)AND(rt0.c3)))OR(t0.c0))))) ORDER BY ((((rt0.c3)GLOB(t0.c0)))%((((rt0.c3))>((t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)+(t0.c2)))*(((((rt0.c0)AND(rt0.c3)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)GLOB(t0.c0)))%((((rt0.c3))>((t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((rt0.c2)+(t0.c2)))*(((((rt0.c0)AND(rt0.c3)))OR(t0.c0))))) ORDER BY ((((rt0.c3)GLOB(t0.c0)))%((((rt0.c3))>((t0.c0))))) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (('') BETWEEN (((t0.c2)<<(t0.c0))) AND (rt0.c1 COLLATE NOCASE)) WHERE ('&L7');
SELECT SUM(count) FROM (SELECT (('&L7') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (('') BETWEEN (((t0.c2)<<(t0.c0))) AND (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (('') BETWEEN (((t0.c2)<<(t0.c0))) AND (rt0.c1 COLLATE NOCASE)) WHERE ('&L7');
SELECT SUM(count) FROM (SELECT (('&L7') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON (('') BETWEEN (((t0.c2)<<(t0.c0))) AND (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON (('') BETWEEN (((t0.c2)<<(t0.c0))) AND (rt0.c1 COLLATE NOCASE)) WHERE ('&L7');
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((x'' IN (t0.c0))) AND (-1326227008))) ORDER BY (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((~ (rt0.c0))))), 0.045343431564571324;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((x'' IN (t0.c0))) AND (-1326227008))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((~ (rt0.c0))))), 0.045343431564571324);
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((x'' IN (t0.c0))) AND (-1326227008))) ORDER BY (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((~ (rt0.c0))))), 0.045343431564571324;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((x'' IN (t0.c0))) AND (-1326227008))) IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((~ (rt0.c0))))), 0.045343431564571324);
SELECT * FROM rt0, t0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c3 END) BETWEEN ((x'' IN (t0.c0))) AND (-1326227008))) ORDER BY (((rt0.c3)) NOT BETWEEN (((NOT (rt0.c2)))) AND (((~ (rt0.c0))))), 0.045343431564571324;
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((UPPER(DISTINCT rt0.c2))AND(t0.c2 COLLATE NOCASE)))AND((rt0.c3 IN ())))) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST, (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), (- (rt0.c0)), ((t0.c2) NOT NULL))) AND ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)), t0.c0, (((t0.c1))<=((rt0.c3)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT rt0.c2))AND(t0.c2 COLLATE NOCASE)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST, (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), (- (rt0.c0)), ((t0.c2) NOT NULL))) AND ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)), t0.c0, (((t0.c1))<=((rt0.c3)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((UPPER(DISTINCT rt0.c2))AND(t0.c2 COLLATE NOCASE)))AND((rt0.c3 IN ())))) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST, (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), (- (rt0.c0)), ((t0.c2) NOT NULL))) AND ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)), t0.c0, (((t0.c1))<=((rt0.c3)))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UPPER(DISTINCT rt0.c2))AND(t0.c2 COLLATE NOCASE)))AND((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST, (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), (- (rt0.c0)), ((t0.c2) NOT NULL))) AND ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)), t0.c0, (((t0.c1))<=((rt0.c3)))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t0 WHERE (((((UPPER(DISTINCT rt0.c2))AND(t0.c2 COLLATE NOCASE)))AND((rt0.c3 IN ())))) ORDER BY ((((((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))AND(rt0.c3 COLLATE RTRIM)))OR(rt0.c1 COLLATE NOCASE))  NULLS LAST, (((rt0.c0, rt0.c0, rt0.c3)) BETWEEN ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)), (- (rt0.c0)), ((t0.c2) NOT NULL))) AND ((((((rt0.c3)AND(rt0.c2)))OR(rt0.c0)), t0.c0, (((t0.c1))<=((rt0.c3)))))) ASC  NULLS LAST;
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(t0.c2)))OR(rt0.c1)) AS INTEGER) WHERE (0.6790348417681289);
SELECT SUM(count) FROM (SELECT ALL ((0.6790348417681289) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(t0.c2)))OR(rt0.c1)) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(t0.c2)))OR(rt0.c1)) AS INTEGER) WHERE (0.6790348417681289);
SELECT SUM(count) FROM (SELECT ALL ((0.6790348417681289) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(t0.c2)))OR(rt0.c1)) AS INTEGER));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt0 ON CAST(((((rt0.c3)AND(t0.c2)))OR(rt0.c1)) AS INTEGER) WHERE (0.6790348417681289);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((x'')AND(rt0.c1)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c2))  WHEN t0.c2 COLLATE NOCASE THEN (('Zr媯<t-z') IS TRUE) END) ORDER BY (((((((rt0.c0))<=((t0.c1))))OR((rt0.c3 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7499113370492054))), CASE t0.c0 COLLATE RTRIM  WHEN t0.c1 COLLATE RTRIM THEN (t0.c1 IN (rt0.c2)) ELSE SQLITE_SOURCE_ID() END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((x'')AND(rt0.c1)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c2))  WHEN t0.c2 COLLATE NOCASE THEN (('Zr媯<t-z') IS TRUE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c0))<=((t0.c1))))OR((rt0.c3 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7499113370492054))), CASE t0.c0 COLLATE RTRIM  WHEN t0.c1 COLLATE RTRIM THEN (t0.c1 IN (rt0.c2)) ELSE SQLITE_SOURCE_ID() END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((x'')AND(rt0.c1)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c2))  WHEN t0.c2 COLLATE NOCASE THEN (('Zr媯<t-z') IS TRUE) END) ORDER BY (((((((rt0.c0))<=((t0.c1))))OR((rt0.c3 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7499113370492054))), CASE t0.c0 COLLATE RTRIM  WHEN t0.c1 COLLATE RTRIM THEN (t0.c1 IN (rt0.c2)) ELSE SQLITE_SOURCE_ID() END;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((x'')AND(rt0.c1)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c2))  WHEN t0.c2 COLLATE NOCASE THEN (('Zr媯<t-z') IS TRUE) END) IS TRUE)  as count FROM t0, rt0 ORDER BY (((((((rt0.c0))<=((t0.c1))))OR((rt0.c3 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7499113370492054))), CASE t0.c0 COLLATE RTRIM  WHEN t0.c1 COLLATE RTRIM THEN (t0.c1 IN (rt0.c2)) ELSE SQLITE_SOURCE_ID() END);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((x'')AND(rt0.c1)))AND(t0.c2)))AND(rt0.c1)))OR(t0.c2))  WHEN t0.c2 COLLATE NOCASE THEN (('Zr媯<t-z') IS TRUE) END) ORDER BY (((((((rt0.c0))<=((t0.c1))))OR((rt0.c3 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT rt0.c2, 0.7499113370492054))), CASE t0.c0 COLLATE RTRIM  WHEN t0.c1 COLLATE RTRIM THEN (t0.c1 IN (rt0.c2)) ELSE SQLITE_SOURCE_ID() END;
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ('') ORDER BY ((((rt0.c1) IS FALSE))<=((~ (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c1) IS FALSE))<=((~ (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ('') ORDER BY ((((rt0.c1) IS FALSE))<=((~ (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 NATURAL JOIN t0 ORDER BY ((((rt0.c1) IS FALSE))<=((~ (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN t0 WHERE ('') ORDER BY ((((rt0.c1) IS FALSE))<=((~ (rt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY NULL DESC, ((((t0.c1)*(rt0.c0)))*((+ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC, ((((t0.c1)*(rt0.c0)))*((+ (t0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY NULL DESC, ((((t0.c1)*(rt0.c0)))*((+ (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, t0 ORDER BY NULL DESC, ((((t0.c1)*(rt0.c0)))*((+ (t0.c0)))) DESC);
SELECT COUNT(*) FROM rt0, t0 WHERE (rt0.c3) ORDER BY NULL DESC, ((((t0.c1)*(rt0.c0)))*((+ (t0.c0)))) DESC;
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (rt0.c1)));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((t0.c2)IS(NULL)))) WHERE (((CAST(rt0.c2 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((t0.c2)IS(NULL)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((t0.c2)IS(NULL)))) WHERE (((CAST(rt0.c2 AS REAL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) IS TRUE)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((t0.c2)IS(NULL)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN rt0 ON ((CASE rt0.c2  WHEN t0.c0 THEN rt0.c3 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (((t0.c2)IS(NULL)))) WHERE (((CAST(rt0.c2 AS REAL)) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('[V岹' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('[V岹' AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('[V岹' AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST('[V岹' AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST('[V岹' AS REAL));
SELECT * FROM rt0 INNER JOIN t0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) WHERE ((- (CASE '520363015'  WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE 0.16989289959092269  WHEN t0.c0 THEN t0.c1 END) AND (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE '520363015'  WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE 0.16989289959092269  WHEN t0.c0 THEN t0.c1 END) AND (rt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt0 INNER JOIN t0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) WHERE ((- (CASE '520363015'  WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE 0.16989289959092269  WHEN t0.c0 THEN t0.c1 END) AND (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE '520363015'  WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE 0.16989289959092269  WHEN t0.c0 THEN t0.c1 END) AND (rt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt0 INNER JOIN t0 ON CAST(rt0.c3 COLLATE BINARY AS NUMERIC) WHERE ((- (CASE '520363015'  WHEN t0.c2 THEN NULL ELSE rt0.c2 END))) ORDER BY ((rt0.c1 COLLATE BINARY) BETWEEN (CASE 0.16989289959092269  WHEN t0.c0 THEN t0.c1 END) AND (rt0.c1 COLLATE BINARY)) ASC;
SELECT * FROM t0, rt0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((rt0.c1)GLOB(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((rt0.c1)GLOB(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((rt0.c1)GLOB(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((rt0.c1)GLOB(t0.c1))))) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE ((((t0.c2 IN ())) NOT BETWEEN (CAST(t0.c2 AS NUMERIC)) AND (((rt0.c1)GLOB(t0.c1)))));
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (~ ((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (~ ((x'' IN ()))) ASC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (~ ((x'' IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY (~ ((x'' IN ()))) ASC);
SELECT ALL * FROM t0 WHERE (x'') ORDER BY (~ ((x'' IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(json_insert(rt0.c3, rt0.c1, rt0.c0), ((rt0.c1)=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(json_insert(rt0.c3, rt0.c1, rt0.c0), ((rt0.c1)=(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (COALESCE(json_insert(rt0.c3, rt0.c1, rt0.c0), ((rt0.c1)=(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(json_insert(rt0.c3, rt0.c1, rt0.c0), ((rt0.c1)=(rt0.c3)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN TYPEOF(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN TYPEOF(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN TYPEOF(rt0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN TYPEOF(rt0.c2) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))  WHEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END THEN TYPEOF(rt0.c2) END);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(t0.c2)  WHEN (((rt0.c3))>=((rt0.c0))) THEN ((t0.c0)<>(rt0.c0)) END) ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.2285375386140992) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(t0.c2)  WHEN (((rt0.c3))>=((rt0.c0))) THEN ((t0.c0)<>(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.2285375386140992) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(t0.c2)  WHEN (((rt0.c3))>=((rt0.c0))) THEN ((t0.c0)<>(rt0.c0)) END) ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.2285375386140992) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE LOWER(t0.c2)  WHEN (((rt0.c3))>=((rt0.c0))) THEN ((t0.c0)<>(rt0.c0)) END) IS TRUE)  as count FROM t0, rt0 ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.2285375386140992) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CASE LOWER(t0.c2)  WHEN (((rt0.c3))>=((rt0.c0))) THEN ((t0.c0)<>(rt0.c0)) END) ORDER BY LIKELIHOOD(DISTINCT t0.c1, 0.2285375386140992) ASC;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM t0 WHERE ((((0.2442404349525934)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c2, t0.c0))==((t0.c1, t0.c1, t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2442404349525934)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.2442404349525934)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c2, t0.c0))==((t0.c1, t0.c1, t0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((0.2442404349525934)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c2, t0.c0))=((t0.c1, t0.c1, t0.c2))))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((0.2442404349525934)) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND (((((t0.c0, t0.c2, t0.c0))==((t0.c1, t0.c1, t0.c2)))))));
SELECT COUNT(*) FROM rt0, t0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0, t0);
SELECT COUNT(*) FROM rt0, t0 WHERE ((CASE t0.c2  WHEN t0.c0 THEN t0.c2 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((INSTR(rt0.c2, rt0.c1))OR(((1429247949)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt0.c2, rt0.c1))OR(((1429247949)<(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((INSTR(rt0.c2, rt0.c1))OR(((1429247949)<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((INSTR(rt0.c2, rt0.c1))OR(((1429247949)<(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((INSTR(rt0.c2, rt0.c1))OR(((1429247949)<(rt0.c3)))));
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c2)))))AND(t0.c2)))AND(LIKELIHOOD('|89dXp&2Y', 0.7317469199112898))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c2)))))AND(t0.c2)))AND(LIKELIHOOD('|89dXp&2Y', 0.7317469199112898)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c2)))))AND(t0.c2)))AND(LIKELIHOOD('|89dXp&2Y', 0.7317469199112898))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c1 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c2)))))AND(t0.c2)))AND(LIKELIHOOD('|89dXp&2Y', 0.7317469199112898)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((((t0.c1 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c1)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)))))AND(((((t0.c1)OR(t0.c2)))OR(t0.c2)))))AND(t0.c2)))AND(LIKELIHOOD('|89dXp&2Y', 0.7317469199112898))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1))<>((rt0.c0))))<<((NOT (rt0.c1))))) ORDER BY (((NOT (t0.c0)))=(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c1)))), '' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<>((rt0.c0))))<<((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (t0.c0)))==(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c1)))), '' ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1))<>((rt0.c0))))<<((NOT (rt0.c1))))) ORDER BY (((NOT (t0.c0)))=(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c1)))), '' ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))<>((rt0.c0))))<<((NOT (rt0.c1))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((NOT (t0.c0)))==(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c1)))), '' ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((((((t0.c1))<>((rt0.c0))))<<((NOT (rt0.c1))))) ORDER BY (((NOT (t0.c0)))=(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(t0.c0)))AND(t0.c1)))), '' ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END) NOTNULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END) NOTNULL)) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END) NOTNULL)) IS TRUE)  as count FROM t0, rt0 ORDER BY x''  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((CASE WHEN rt0.c3 THEN NULL WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END) NOTNULL)) ORDER BY x''  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(NULL AS BLOB));
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c2 IN ())) AND ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ((t0.c2 IN ())) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c2 IN ())) AND ((- (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN ((t0.c2 IN ())) AND ((- (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) BETWEEN ((t0.c2 IN ())) AND ((- (t0.c0)))));
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((CAST(rt0.c2 AS REAL)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (CASE rt0.c0  WHEN rt0.c2 THEN x'' ELSE rt0.c1 END)));
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2)<(t0.c0))))=((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)<(t0.c0))))==((TOTAL_CHANGES())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2)<(t0.c0))))=((TOTAL_CHANGES()))));
SELECT SUM(count) FROM (SELECT (((((((t0.c2)<(t0.c0))))==((TOTAL_CHANGES())))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE ((((((t0.c2)<(t0.c0))))=((TOTAL_CHANGES()))));
SELECT * FROM rt0, t0 WHERE (RTRIM(UNLIKELY(rt0.c0))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(UNLIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (RTRIM(UNLIKELY(rt0.c0))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(UNLIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (RTRIM(UNLIKELY(rt0.c0))) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(CAST(t0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(t0.c0 AS NUMERIC))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(CAST(t0.c0 AS NUMERIC)));
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)!=(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)!=(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)!=(rt0.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)!=(rt0.c2)) AS REAL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c0)!=(rt0.c2)) AS REAL));
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c1) IS TRUE));
SELECT * FROM rt0, t0 WHERE ((+ (((t0.c2)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2)&(t0.c0))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT * FROM rt0, t0 WHERE ((+ (((t0.c2)&(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2)&(t0.c0))))) IS TRUE)  as count FROM rt0, t0 NOT INDEXED);
SELECT * FROM rt0, t0 WHERE ((+ (((t0.c2)&(t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))/((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))/((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))/((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2)))/((~ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c2)))/((~ (t0.c2)))));
SELECT ALL * FROM rt0, t0 WHERE (CAST(TRIM(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(TRIM(rt0.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(rt0.c0) AS TEXT)) IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (CAST(TRIM(rt0.c0) AS TEXT));
SELECT * FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT NULL) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('蟘8i{Z5]S+')AND(((rt0.c2) NOT NULL))))OR(((rt0.c0)%(rt0.c3))))) ORDER BY (~ ((- (rt0.c3)))), (+ (x'1ac1ea21'));
SELECT SUM(count) FROM (SELECT ALL (((((('蟘8i{Z5]S+')AND(((rt0.c2) NOT NULL))))OR(((rt0.c0)%(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((- (rt0.c3)))), (+ (x'1ac1ea21')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('蟘8i{Z5]S+')AND(((rt0.c2) NOT NULL))))OR(((rt0.c0)%(rt0.c3))))) ORDER BY (~ ((- (rt0.c3)))), (+ (x'1ac1ea21'));
SELECT SUM(count) FROM (SELECT ALL (((((('蟘8i{Z5]S+')AND(((rt0.c2) NOT NULL))))OR(((rt0.c0)%(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY (~ ((- (rt0.c3)))), (+ (x'1ac1ea21')));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((('蟘8i{Z5]S+')AND(((rt0.c2) NOT NULL))))OR(((rt0.c0)%(rt0.c3))))) ORDER BY (~ ((- (rt0.c3)))), (+ (x'1ac1ea21'));
SELECT * FROM rt0, t0 WHERE ('e_w?!') ORDER BY (((rt0.c2, rt0.c2, t0.c2, t0.c1, 0.11650934694648984)) BETWEEN ((((t0.c2)%(rt0.c1)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE 0Xffffffffc6527f81 END, (('-570654856') NOT NULL), rt0.c2 COLLATE BINARY)) AND ((0.044683128676315964, ((rt0.c2)+(rt0.c0)), '495026340', ((rt0.c0) IS TRUE), ((t0.c0) IS FALSE)))) DESC  NULLS FIRST, (- (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('e_w?!') IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, rt0.c2, t0.c2, t0.c1, 0.11650934694648984)) BETWEEN ((((t0.c2)%(rt0.c1)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE 0xffffffffc6527f81 END, (('-570654856') NOT NULL), rt0.c2 COLLATE BINARY)) AND ((0.044683128676315964, ((rt0.c2)+(rt0.c0)), '495026340', ((rt0.c0) IS TRUE), ((t0.c0) IS FALSE)))) DESC  NULLS FIRST, (- (t0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t0 WHERE ('e_w?!') ORDER BY (((rt0.c2, rt0.c2, t0.c2, t0.c1, 0.11650934694648984)) BETWEEN ((((t0.c2)%(rt0.c1)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE 0Xffffffffc6527f81 END, (('-570654856') NOT NULL), rt0.c2 COLLATE BINARY)) AND ((0.044683128676315964, ((rt0.c2)+(rt0.c0)), '495026340', ((rt0.c0) IS TRUE), ((t0.c0) IS FALSE)))) DESC  NULLS FIRST, (- (t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL (('e_w?!') IS TRUE)  as count FROM rt0, t0 ORDER BY (((rt0.c2, rt0.c2, t0.c2, t0.c1, 0.11650934694648984)) BETWEEN ((((t0.c2)%(rt0.c1)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE 0xffffffffc6527f81 END, (('-570654856') NOT NULL), rt0.c2 COLLATE BINARY)) AND ((0.044683128676315964, ((rt0.c2)+(rt0.c0)), '495026340', ((rt0.c0) IS TRUE), ((t0.c0) IS FALSE)))) DESC  NULLS FIRST, (- (t0.c0 COLLATE RTRIM)));
SELECT * FROM rt0, t0 WHERE ('e_w?!') ORDER BY (((rt0.c2, rt0.c2, t0.c2, t0.c1, 0.11650934694648984)) BETWEEN ((((t0.c2)%(rt0.c1)), ((rt0.c1) NOT NULL), CASE rt0.c1  WHEN t0.c2 THEN rt0.c2 ELSE 0Xffffffffc6527f81 END, (('-570654856') NOT NULL), rt0.c2 COLLATE BINARY)) AND ((0.044683128676315964, ((rt0.c2)+(rt0.c0)), '495026340', ((rt0.c0) IS TRUE), ((t0.c0) IS FALSE)))) DESC  NULLS FIRST, (- (t0.c0 COLLATE RTRIM));
SELECT ALL * FROM t0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((~ (rt0.c0)))LIKE((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (rt0.c0)))LIKE((rt0.c3 IN ())))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((~ (rt0.c0)))LIKE((rt0.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (rt0.c0)))LIKE((rt0.c3 IN ())))  NULLS LAST);
SELECT ALL * FROM t0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (((~ (rt0.c0)))LIKE((rt0.c3 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)-(NULL)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)-(NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)-(NULL)))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c2)-(NULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((- (((t0.c2)-(NULL)))));
SELECT * FROM t0 WHERE (((((((t0.c1) NOTNULL))OR(((t0.c0)>=(t0.c1)))))AND((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOTNULL))OR(((t0.c0)>=(t0.c1)))))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1) NOTNULL))OR(((t0.c0)>=(t0.c1)))))AND((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1) NOTNULL))OR(((t0.c0)>=(t0.c1)))))AND((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1) NOTNULL))OR(((t0.c0)>=(t0.c1)))))AND((~ (t0.c0)))));
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((('') BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((('') BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c2))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((('') BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (((('') BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c2))  NULLS LAST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (((('') BETWEEN (t0.c2) AND (t0.c0)))OR(t0.c2))  NULLS LAST;
SELECT * FROM rt0, t0 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY CAST(((rt0.c3) BETWEEN (t0.c1) AND (rt0.c1)) AS BLOB), (+ ((NOT (t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c3) BETWEEN (t0.c1) AND (rt0.c1)) AS BLOB), (+ ((NOT (t0.c1)))));
SELECT * FROM rt0, t0 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY CAST(((rt0.c3) BETWEEN (t0.c1) AND (rt0.c1)) AS BLOB), (+ ((NOT (t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST(((rt0.c3) BETWEEN (t0.c1) AND (rt0.c1)) AS BLOB), (+ ((NOT (t0.c1)))));
SELECT * FROM rt0, t0 WHERE (((((t0.c0) IS FALSE)) ISNULL)) ORDER BY CAST(((rt0.c3) BETWEEN (t0.c1) AND (rt0.c1)) AS BLOB), (+ ((NOT (t0.c1))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ()) COLLATE BINARY) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((rt0.c3 IN ()) COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c2 THEN '' END  WHEN t0.c2 THEN ((((t0.c0)AND(t0.c1)))AND(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN JULIANDAY(t0.c2, 'I({ p{qtf}', t0.c0) WHEN TRIM(t0.c0) THEN NULL COLLATE RTRIM END) ORDER BY UNLIKELY(((t0.c0)|(t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c2  WHEN t0.c2 THEN '' END  WHEN t0.c2 THEN ((((t0.c0)AND(t0.c1)))AND(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN JULIANDAY(t0.c2, 'I({ p{qtf}', t0.c0) WHEN TRIM(t0.c0) THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0)|(t0.c1))) DESC);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c2 THEN '' END  WHEN t0.c2 THEN ((((t0.c0)AND(t0.c1)))AND(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN JULIANDAY(t0.c2, 'I({ p{qtf}', t0.c0) WHEN TRIM(t0.c0) THEN NULL COLLATE RTRIM END) ORDER BY UNLIKELY(((t0.c0)|(t0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE t0.c2  WHEN t0.c2 THEN '' END  WHEN t0.c2 THEN ((((t0.c0)AND(t0.c1)))AND(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN JULIANDAY(t0.c2, 'I({ p{qtf}', t0.c0) WHEN TRIM(t0.c0) THEN NULL COLLATE RTRIM END) IS TRUE)  as count FROM t0 ORDER BY UNLIKELY(((t0.c0)|(t0.c1))) DESC);
SELECT ALL * FROM t0 WHERE (CASE CASE t0.c2  WHEN t0.c2 THEN '' END  WHEN t0.c2 THEN ((((t0.c0)AND(t0.c1)))AND(t0.c0)) WHEN CAST(t0.c1 AS TEXT) THEN JULIANDAY(t0.c2, 'I({ p{qtf}', t0.c0) WHEN TRIM(t0.c0) THEN NULL COLLATE RTRIM END) ORDER BY UNLIKELY(((t0.c0)|(t0.c1))) DESC;
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)%(((t0.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)%(((t0.c0)|(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)%(((t0.c0)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)%(((t0.c0)|(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c1 END)%(((t0.c0)|(t0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))LIKE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))LIKE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))LIKE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))LIKE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)) BETWEEN ((t0.c0)) AND ((x''))))LIKE(((t0.c1) BETWEEN (t0.c0) AND (t0.c1))))) ORDER BY t0.c0 ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c3, rt0.c1)) BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c3, rt0.c1)) BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c3, rt0.c1)) BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((LTRIM(rt0.c3, rt0.c1)) BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LTRIM(rt0.c3, rt0.c1)) BETWEEN (((((rt0.c1)OR(rt0.c3)))OR(rt0.c0))) AND (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c3 AS BLOB))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(rt0.c3 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c3 AS BLOB))) ORDER BY rt0.c3;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT CAST(rt0.c3 AS BLOB))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3);
SELECT * FROM rt0 WHERE (LOWER(DISTINCT CAST(rt0.c3 AS BLOB))) ORDER BY rt0.c3;
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE (t0.c0);
SELECT * FROM rt0, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0, t0 WHERE ((t0.c2 IN ()) COLLATE RTRIM);
SELECT * FROM t0 WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c0) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LIKE(rt0.c2, rt0.c1) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((LIKE(rt0.c2, rt0.c1) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((LIKE(rt0.c2, rt0.c1) IN ())) ORDER BY ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (0.5987948555308641) AND (((rt0.c3)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) BETWEEN (0.5987948555308641) AND (((rt0.c3)||(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (0.5987948555308641) AND (((rt0.c3)||(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE RTRIM) BETWEEN (0.5987948555308641) AND (((rt0.c3)||(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) BETWEEN (0.5987948555308641) AND (((rt0.c3)||(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (json_quote((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS TEXT) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (json_quote((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (CAST(t0.c2 AS TEXT) IN ()) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (json_quote((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) ORDER BY (CAST(t0.c2 AS TEXT) IN ()) ASC;
SELECT * FROM rt0, t0 NOT INDEXED WHERE ((((~ (rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) ISNULL)))) ORDER BY TYPEOF((('149527155')IS NOT(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TYPEOF((('149527155')IS NOT(t0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0, t0 NOT INDEXED WHERE ((((~ (rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) ISNULL)))) ORDER BY TYPEOF((('149527155')IS NOT(t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0, t0 ORDER BY TYPEOF((('149527155')IS NOT(t0.c0))) ASC  NULLS LAST);
SELECT * FROM rt0, t0 NOT INDEXED WHERE ((((~ (rt0.c1))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) AND (((rt0.c2) ISNULL)))) ORDER BY TYPEOF((('149527155')IS NOT(t0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((t0.c1)<<(t0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)<<(t0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((t0.c1)<<(t0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY CAST(((t0.c1)<<(t0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY CAST(((t0.c1)<<(t0.c1)) AS INTEGER);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c2) NOT NULL))))OR(CASE WHEN t0.c2 THEN '' ELSE t0.c0 END)) WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c2) NOT NULL))))OR(CASE WHEN t0.c2 THEN '' ELSE t0.c0 END)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c2) NOT NULL))))OR(CASE WHEN t0.c2 THEN '' ELSE t0.c0 END)) WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c2) NOT NULL))))OR(CASE WHEN t0.c2 THEN '' ELSE t0.c0 END)));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c2) NOT NULL))))OR(CASE WHEN t0.c2 THEN '' ELSE t0.c0 END)) WHERE (rt0.c3 COLLATE BINARY);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END IN ())) ORDER BY ((((t0.c0)AND(t0.c1)))OR(t0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c1)))OR(t0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END IN ())) ORDER BY ((((t0.c0)AND(t0.c1)))OR(t0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0)AND(t0.c1)))OR(t0.c1)) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((CASE WHEN t0.c1 THEN t0.c1 ELSE t0.c1 END IN ())) ORDER BY ((((t0.c0)AND(t0.c1)))OR(t0.c1)) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((CAST(rt0.c3 AS INTEGER))))) ORDER BY (((rt0.c1 COLLATE BINARY, TYPEOF(rt0.c1), CAST(rt0.c3 AS TEXT), (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-9223372036854775808'))), ((rt0.c0)>>(rt0.c0))))<>((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1)>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)||(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY, TYPEOF(rt0.c1), CAST(rt0.c3 AS TEXT), (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-9223372036854775808'))), ((rt0.c0)>>(rt0.c0))))!=((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1)>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)||(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((CAST(rt0.c3 AS INTEGER))))) ORDER BY (((rt0.c1 COLLATE BINARY, TYPEOF(rt0.c1), CAST(rt0.c3 AS TEXT), (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-9223372036854775808'))), ((rt0.c0)>>(rt0.c0))))<>((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1)>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)||(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((CAST(rt0.c3 AS INTEGER))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1 COLLATE BINARY, TYPEOF(rt0.c1), CAST(rt0.c3 AS TEXT), (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-9223372036854775808'))), ((rt0.c0)>>(rt0.c0))))!=((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1)>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)||(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END))));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)OR(rt0.c1)))) AND ((CAST(rt0.c3 AS INTEGER))))) ORDER BY (((rt0.c1 COLLATE BINARY, TYPEOF(rt0.c1), CAST(rt0.c3 AS TEXT), (((rt0.c1)) BETWEEN ((rt0.c0)) AND (('-9223372036854775808'))), ((rt0.c0)>>(rt0.c0))))<>((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1)>=(rt0.c1)), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)||(rt0.c3)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))*(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))*(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))*(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))*(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- (rt0.c2)))*(CAST(rt0.c1 AS REAL))));
SELECT ALL * FROM t0, rt0 WHERE (1238474108) ORDER BY ((((((((TYPEOF(799360899))OR(t0.c1 COLLATE NOCASE)))OR(((((t0.c2)OR(rt0.c0)))AND(rt0.c1)))))OR(((((((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))), (((NOT (t0.c2)))*(CASE t0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((1238474108) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((TYPEOF(799360899))OR(t0.c1 COLLATE NOCASE)))OR(((((t0.c2)OR(rt0.c0)))AND(rt0.c1)))))OR(((((((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))), (((NOT (t0.c2)))*(CASE t0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)));
SELECT ALL * FROM t0, rt0 WHERE (1238474108) ORDER BY ((((((((TYPEOF(799360899))OR(t0.c1 COLLATE NOCASE)))OR(((((t0.c2)OR(rt0.c0)))AND(rt0.c1)))))OR(((((((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))), (((NOT (t0.c2)))*(CASE t0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((1238474108) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((((((TYPEOF(799360899))OR(t0.c1 COLLATE NOCASE)))OR(((((t0.c2)OR(rt0.c0)))AND(rt0.c1)))))OR(((((((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))), (((NOT (t0.c2)))*(CASE t0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END)));
SELECT ALL * FROM t0, rt0 WHERE (1238474108) ORDER BY ((((((((TYPEOF(799360899))OR(t0.c1 COLLATE NOCASE)))OR(((((t0.c2)OR(rt0.c0)))AND(rt0.c1)))))OR(((((((((t0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))))AND(CAST(rt0.c1 AS REAL))), (((NOT (t0.c2)))*(CASE t0.c2  WHEN rt0.c3 THEN rt0.c0 ELSE t0.c2 END));
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY ((((t0.c2)<=(t0.c2)))GLOB(rt0.c1 COLLATE BINARY)) DESC, ABS(CAST(t0.c0 AS NUMERIC)) DESC, CAST(t0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)<=(t0.c2)))GLOB(rt0.c1 COLLATE BINARY)) DESC, ABS(CAST(t0.c0 AS NUMERIC)) DESC, CAST(t0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY ((((t0.c2)<=(t0.c2)))GLOB(rt0.c1 COLLATE BINARY)) DESC, ABS(CAST(t0.c0 AS NUMERIC)) DESC, CAST(t0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c2)<=(t0.c2)))GLOB(rt0.c1 COLLATE BINARY)) DESC, ABS(CAST(t0.c0 AS NUMERIC)) DESC, CAST(t0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (NULL) ORDER BY ((((t0.c2)<=(t0.c2)))GLOB(rt0.c1 COLLATE BINARY)) DESC, ABS(CAST(t0.c0 AS NUMERIC)) DESC, CAST(t0.c2 AS TEXT) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t0 WHERE (CAST((((t0.c1, t0.c1, t0.c0)) BETWEEN (('244275779', t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c1, t0.c1, t0.c0)) BETWEEN (('244275779', t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c1, t0.c1, t0.c0)) BETWEEN (('244275779', t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c1, t0.c1, t0.c0)) BETWEEN (('244275779', t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c0))) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c1, t0.c1, t0.c0)) BETWEEN (('244275779', t0.c0, t0.c0)) AND ((t0.c2, t0.c1, t0.c0))) AS NUMERIC));
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, t0);
SELECT * FROM rt0 NOT INDEXED, t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (rt0.c3))))) ORDER BY ((((t0.c1)||(t0.c1))) NOT BETWEEN (NULLIF(DISTINCT t0.c2, rt0.c0)) AND ((((t0.c2, t0.c0, t0.c0, t0.c0, t0.c0, rt0.c1, t0.c0))>((rt0.c3, rt0.c3, 0.22562413969939266, '1875313387', rt0.c0, t0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1)||(t0.c1))) NOT BETWEEN (NULLIF(DISTINCT t0.c2, rt0.c0)) AND ((((t0.c2, t0.c0, t0.c0, t0.c0, t0.c0, rt0.c1, t0.c0))>((rt0.c3, rt0.c3, 0.22562413969939266, '1875313387', rt0.c0, t0.c2, t0.c0))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (rt0.c3))))) ORDER BY ((((t0.c1)||(t0.c1))) NOT BETWEEN (NULLIF(DISTINCT t0.c2, rt0.c0)) AND ((((t0.c2, t0.c0, t0.c0, t0.c0, t0.c0, rt0.c1, t0.c0))>((rt0.c3, rt0.c3, 0.22562413969939266, '1875313387', rt0.c0, t0.c2, t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((+ (rt0.c3))))) IS TRUE)  as count FROM t0, rt0 ORDER BY ((((t0.c1)||(t0.c1))) NOT BETWEEN (NULLIF(DISTINCT t0.c2, rt0.c0)) AND ((((t0.c2, t0.c0, t0.c0, t0.c0, t0.c0, rt0.c1, t0.c0))>((rt0.c3, rt0.c3, 0.22562413969939266, '1875313387', rt0.c0, t0.c2, t0.c0))))));
SELECT COUNT(*) FROM t0, rt0 WHERE ((+ ((+ (rt0.c3))))) ORDER BY ((((t0.c1)||(t0.c1))) NOT BETWEEN (NULLIF(DISTINCT t0.c2, rt0.c0)) AND ((((t0.c2, t0.c0, t0.c0, t0.c0, t0.c0, rt0.c1, t0.c0))>((rt0.c3, rt0.c3, 0.22562413969939266, '1875313387', rt0.c0, t0.c2, t0.c0)))));
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC);
SELECT * FROM rt0 WHERE (rt0.c3) ORDER BY (+ (rt0.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c1 AS BLOB)))==((rt0.c0)))) ORDER BY CAST('2262929093143738818T1600:' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c1 AS BLOB)))==((rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST('2262929093143738818T1600:' AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c1 AS BLOB)))==((rt0.c0)))) ORDER BY CAST('2262929093143738818T1600:' AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c1 AS BLOB)))==((rt0.c0)))) IS TRUE)  as count FROM rt0, t0 ORDER BY CAST('2262929093143738818T1600:' AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, t0 WHERE ((((CAST(t0.c1 AS BLOB)))==((rt0.c0)))) ORDER BY CAST('2262929093143738818T1600:' AS REAL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))==(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c1)))=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))==(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c1)))=(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)AND(rt0.c1)))==(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0);
SELECT ALL * FROM rt0 WHERE ((rt0.c1 IN ()) COLLATE BINARY) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((NULL)OR(t0.c2)))OR(rt0.c1))) BETWEEN ((t0.c2 IN ())) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t0.c2)))OR(rt0.c1))) BETWEEN ((t0.c2 IN ())) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((NULL)OR(t0.c2)))OR(rt0.c1))) BETWEEN ((t0.c2 IN ())) AND ((NOT (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)OR(t0.c2)))OR(rt0.c1))) BETWEEN ((t0.c2 IN ())) AND ((NOT (rt0.c3))))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (((((((NULL)OR(t0.c2)))OR(rt0.c1))) BETWEEN ((t0.c2 IN ())) AND ((NOT (rt0.c3)))));
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((((t0.c2)AND(rt0.c0)))AND(t0.c1)) END) ORDER BY ((((rt0.c3)AND(t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((((t0.c2)AND(rt0.c0)))AND(t0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)AND(t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c3))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((((t0.c2)AND(rt0.c0)))AND(t0.c1)) END) ORDER BY ((((rt0.c3)AND(t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((((t0.c2)AND(rt0.c0)))AND(t0.c1)) END) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((rt0.c3)AND(t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c3))  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE (CASE WHEN ((rt0.c0)>(rt0.c0)) THEN ((((t0.c2)AND(rt0.c0)))AND(t0.c1)) END) ORDER BY ((((rt0.c3)AND(t0.c2))) NOT BETWEEN (CASE t0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND (rt0.c3))  NULLS FIRST;
SELECT * FROM rt0 CROSS JOIN t0 ON CAST(json(t0.c0) AS TEXT) WHERE (((((rt0.c3)*(rt0.c2))) NOT NULL)) ORDER BY (('') NOT BETWEEN (((((rt0.c2)OR(rt0.c3)))OR('#v'))) AND (rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)*(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(json(t0.c0) AS TEXT) ORDER BY (('') NOT BETWEEN (((((rt0.c2)OR(rt0.c3)))OR('#v'))) AND (rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON CAST(json(t0.c0) AS TEXT) WHERE (((((rt0.c3)*(rt0.c2))) NOT NULL)) ORDER BY (('') NOT BETWEEN (((((rt0.c2)OR(rt0.c3)))OR('#v'))) AND (rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)*(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON CAST(json(t0.c0) AS TEXT) ORDER BY (('') NOT BETWEEN (((((rt0.c2)OR(rt0.c3)))OR('#v'))) AND (rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt0 CROSS JOIN t0 ON CAST(json(t0.c0) AS TEXT) WHERE (((((rt0.c3)*(rt0.c2))) NOT NULL)) ORDER BY (('') NOT BETWEEN (((((rt0.c2)OR(rt0.c3)))OR('#v'))) AND (rt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))GLOB((((rt0.c2))<((t0.c1)))))) ORDER BY CASE ((t0.c1)IS NOT(rt0.c0))  WHEN (- (rt0.c2)) THEN ((rt0.c2) ISNULL) END ASC  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(NULL AS REAL), CAST('#v' AS REAL)))=((((rt0.c3)||(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))), ((t0.c2)=(t0.c1))))) ASC  NULLS LAST, TIME(SUBSTR(rt0.c2, t0.c0), (NOT (rt0.c3)), (NOT (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))GLOB((((rt0.c2))<((t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((t0.c1)IS NOT(rt0.c0))  WHEN (- (rt0.c2)) THEN ((rt0.c2) ISNULL) END ASC  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(NULL AS REAL), CAST('#v' AS REAL)))==((((rt0.c3)||(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))), ((t0.c2)=(t0.c1))))) ASC  NULLS LAST, TIME(SUBSTR(rt0.c2, t0.c0), (NOT (rt0.c3)), (NOT (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))GLOB((((rt0.c2))<((t0.c1)))))) ORDER BY CASE ((t0.c1)IS NOT(rt0.c0))  WHEN (- (rt0.c2)) THEN ((rt0.c2) ISNULL) END ASC  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(NULL AS REAL), CAST('#v' AS REAL)))=((((rt0.c3)||(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))), ((t0.c2)=(t0.c1))))) ASC  NULLS LAST, TIME(SUBSTR(rt0.c2, t0.c0), (NOT (rt0.c3)), (NOT (rt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))GLOB((((rt0.c2))<((t0.c1)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY CASE ((t0.c1)IS NOT(rt0.c0))  WHEN (- (rt0.c2)) THEN ((rt0.c2) ISNULL) END ASC  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(NULL AS REAL), CAST('#v' AS REAL)))==((((rt0.c3)||(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))), ((t0.c2)=(t0.c1))))) ASC  NULLS LAST, TIME(SUBSTR(rt0.c2, t0.c0), (NOT (rt0.c3)), (NOT (rt0.c0)))  NULLS FIRST);
SELECT ALL * FROM rt0, t0 WHERE (((((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c1)))GLOB((((rt0.c2))<((t0.c1)))))) ORDER BY CASE ((t0.c1)IS NOT(rt0.c0))  WHEN (- (rt0.c2)) THEN ((rt0.c2) ISNULL) END ASC  NULLS LAST, (((CASE WHEN t0.c0 THEN t0.c1 ELSE rt0.c1 END, CAST(NULL AS REAL), CAST('#v' AS REAL)))=((((rt0.c3)||(t0.c1)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2))), ((t0.c2)=(t0.c1))))) ASC  NULLS LAST, TIME(SUBSTR(rt0.c2, t0.c0), (NOT (rt0.c3)), (NOT (rt0.c0)))  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))|((t0.c2 IN ()))) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY UNICODE('JSz') COLLATE BINARY ASC, (- ((((rt0.c3))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))|((t0.c2 IN ()))) ORDER BY UNICODE('JSz') COLLATE BINARY ASC, (- ((((rt0.c3))>((t0.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))|((t0.c2 IN ()))) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY UNICODE('JSz') COLLATE BINARY ASC, (- ((((rt0.c3))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((rt0.c1 IN ())))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))|((t0.c2 IN ()))) ORDER BY UNICODE('JSz') COLLATE BINARY ASC, (- ((((rt0.c3))>((t0.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))|((t0.c2 IN ()))) WHERE ((+ ((rt0.c1 IN ())))) ORDER BY UNICODE('JSz') COLLATE BINARY ASC, (- ((((rt0.c3))>((t0.c0)))));
SELECT * FROM rt0 WHERE (((((0.680444836903836)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT)))<=((CAST(rt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.680444836903836)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS TEXT)))<=((CAST(rt0.c0 AS TEXT)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((0.680444836903836)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT)))<=((CAST(rt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.680444836903836)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CAST(rt0.c0 AS TEXT)))<=((CAST(rt0.c0 AS TEXT)))) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((0.680444836903836)GLOB(rt0.c1))) NOT BETWEEN (((rt0.c2)|(rt0.c3))) AND ((- (rt0.c0))))) ORDER BY (((CAST(rt0.c0 AS TEXT)))<=((CAST(rt0.c0 AS TEXT)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c1)))AND(t0.c1)))OR(((t0.c0)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c1)))AND(t0.c1)))OR(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c1)))AND(t0.c1)))OR(((t0.c0)-(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c1)))AND(t0.c1)))OR(((t0.c0)-(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((+ (t0.c1)))AND(t0.c1)))OR(((t0.c0)-(t0.c2)))));
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((rt0.c1)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c1)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END THEN t0.c1 END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((rt0.c1)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END THEN t0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((rt0.c1)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END THEN t0.c1 END) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM t0, rt0 WHERE (CASE ((((((((rt0.c1)OR(NULL)))OR(rt0.c3)))AND(rt0.c3)))OR(rt0.c2))  WHEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c1 WHEN t0.c1 THEN rt0.c0 END THEN t0.c1 END);
SELECT * FROM rt0 WHERE ((- ((((rt0.c3))<((rt0.c2)))))) ORDER BY ((((((((MAX(NULL, rt0.c0))OR((- (0.8027061362312098)))))AND(rt0.c1 COLLATE NOCASE)))AND((((rt0.c1))!=((rt0.c1))))))AND((((rt0.c0, rt0.c1, rt0.c3))!=((rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c3))<((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((MAX(NULL, rt0.c0))OR((- (0.8027061362312098)))))AND(rt0.c1 COLLATE NOCASE)))AND((((rt0.c1))!=((rt0.c1))))))AND((((rt0.c0, rt0.c1, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((rt0.c3))<((rt0.c2)))))) ORDER BY ((((((((MAX(NULL, rt0.c0))OR((- (0.8027061362312098)))))AND(rt0.c1 COLLATE NOCASE)))AND((((rt0.c1))!=((rt0.c1))))))AND((((rt0.c0, rt0.c1, rt0.c3))!=((rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c3))<((rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((MAX(NULL, rt0.c0))OR((- (0.8027061362312098)))))AND(rt0.c1 COLLATE NOCASE)))AND((((rt0.c1))!=((rt0.c1))))))AND((((rt0.c0, rt0.c1, rt0.c3))<>((rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((rt0.c3))<((rt0.c2)))))) ORDER BY ((((((((MAX(NULL, rt0.c0))OR((- (0.8027061362312098)))))AND(rt0.c1 COLLATE NOCASE)))AND((((rt0.c1))!=((rt0.c1))))))AND((((rt0.c0, rt0.c1, rt0.c3))!=((rt0.c1, rt0.c0, rt0.c1))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY rt0.c0);
SELECT COUNT(*) FROM t0, rt0 WHERE (rt0.c0) ORDER BY rt0.c0;
SELECT ALL * FROM t0 WHERE ((((t0.c1, (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))), (((t0.c1, t0.c1, t0.c1))=((t0.c2, t0.c2, t0.c2)))))<>((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)), (~ (t0.c0)), t0.c2 COLLATE NOCASE)))) ORDER BY (t0.c2 IN ())  NULLS FIRST, CASE ((((NULL)OR(NULL)))AND(t0.c2))  WHEN TRIM(t0.c0) THEN UNLIKELY(DISTINCT 'UjTM馲') END DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))), (((t0.c1, t0.c1, t0.c1))=((t0.c2, t0.c2, t0.c2)))))!=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)), (~ (t0.c0)), t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ())  NULLS FIRST, CASE ((((NULL)OR(NULL)))AND(t0.c2))  WHEN TRIM(t0.c0) THEN UNLIKELY(DISTINCT 'UjTM馲') END DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c1, (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))), (((t0.c1, t0.c1, t0.c1))=((t0.c2, t0.c2, t0.c2)))))<>((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)), (~ (t0.c0)), t0.c2 COLLATE NOCASE)))) ORDER BY (t0.c2 IN ())  NULLS FIRST, CASE ((((NULL)OR(NULL)))AND(t0.c2))  WHEN TRIM(t0.c0) THEN UNLIKELY(DISTINCT 'UjTM馲') END DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))), (((t0.c1, t0.c1, t0.c1))=((t0.c2, t0.c2, t0.c2)))))!=((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)), (~ (t0.c0)), t0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c2 IN ())  NULLS FIRST, CASE ((((NULL)OR(NULL)))AND(t0.c2))  WHEN TRIM(t0.c0) THEN UNLIKELY(DISTINCT 'UjTM馲') END DESC  NULLS FIRST, t0.c0  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((t0.c1, (((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))), (((t0.c1, t0.c1, t0.c1))=((t0.c2, t0.c2, t0.c2)))))<>((((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)), (~ (t0.c0)), t0.c2 COLLATE NOCASE)))) ORDER BY (t0.c2 IN ())  NULLS FIRST, CASE ((((NULL)OR(NULL)))AND(t0.c2))  WHEN TRIM(t0.c0) THEN UNLIKELY(DISTINCT 'UjTM馲') END DESC  NULLS FIRST, t0.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ('-1212190848');
SELECT SUM(count) FROM (SELECT (('-1212190848') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('-1212190848');
SELECT SUM(count) FROM (SELECT (('-1212190848') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('-1212190848');
SELECT * FROM t0 WHERE (CAST((((t0.c0))<=((t0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<=((t0.c1))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c0))<=((t0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((t0.c0))<=((t0.c1))) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST((((t0.c0))<=((t0.c1))) AS INTEGER));
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1)==(rt0.c1)))) ORDER BY rt0.c1, ((LOWER(rt0.c3))>>(((rt0.c1)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((rt0.c1)=(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, ((LOWER(rt0.c3))>>(((rt0.c1)*(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1)==(rt0.c1)))) ORDER BY rt0.c1, ((LOWER(rt0.c3))>>(((rt0.c1)*(rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((rt0.c1)=(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1, ((LOWER(rt0.c3))>>(((rt0.c1)*(rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (SQLITE_COMPILEOPTION_GET(((rt0.c1)==(rt0.c1)))) ORDER BY rt0.c1, ((LOWER(rt0.c3))>>(((rt0.c1)*(rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((((((((rt0.c0)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((((((((rt0.c0)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c0)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)) AS REAL)) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (CAST(((((((((rt0.c0)AND(t0.c2)))AND(t0.c2)))AND(t0.c1)))AND(t0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c2)), CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) AND (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))), ((t0.c2)=(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c2)), CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) AND (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))), ((t0.c2)==(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c2)), CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) AND (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))), ((t0.c2)=(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c2)), CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) AND (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))), ((t0.c2)==(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c0, t0.c0)) NOT BETWEEN (((~ (t0.c2)), CASE t0.c0  WHEN x'' THEN t0.c0 ELSE t0.c1 END, ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c2)))) AND (((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c1))), ((t0.c2)=(t0.c2)), (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c1)))))));
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c0)) BETWEEN ((x'')) AND ((0.25722861757584126)))) BETWEEN (UNLIKELY('-2029768310')) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((x'')) AND ((0.25722861757584126)))) BETWEEN (UNLIKELY('-2029768310')) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c0)) BETWEEN ((x'')) AND ((0.25722861757584126)))) BETWEEN (UNLIKELY('-2029768310')) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) BETWEEN ((x'')) AND ((0.25722861757584126)))) BETWEEN (UNLIKELY('-2029768310')) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t0, rt0 ORDER BY (- (((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) DESC);
SELECT ALL * FROM t0, rt0 WHERE ((((((t0.c0)) BETWEEN ((x'')) AND ((0.25722861757584126)))) BETWEEN (UNLIKELY('-2029768310')) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) ORDER BY (- (((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) DESC;
SELECT * FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (CASE WHEN rt0.c0 THEN rt0.c0 END)));
SELECT * FROM t0 CROSS JOIN rt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (rt0.c1) ORDER BY ((((t0.c0 IN ())))=(((rt0.c3 IN (t0.c0)))))  NULLS LAST, '-1241831035' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE ORDER BY ((((t0.c0 IN ())))=(((rt0.c3 IN (t0.c0)))))  NULLS LAST, '-1241831035' DESC);
SELECT * FROM t0 CROSS JOIN rt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (rt0.c1) ORDER BY ((((t0.c0 IN ())))=(((rt0.c3 IN (t0.c0)))))  NULLS LAST, '-1241831035' DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM t0 CROSS JOIN rt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE ORDER BY ((((t0.c0 IN ())))=(((rt0.c3 IN (t0.c0)))))  NULLS LAST, '-1241831035' DESC);
SELECT * FROM t0 CROSS JOIN rt0 ON CAST(rt0.c1 AS TEXT) COLLATE NOCASE WHERE (rt0.c1) ORDER BY ((((t0.c0 IN ())))=(((rt0.c3 IN (t0.c0)))))  NULLS LAST, '-1241831035' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) NOT NULL) THEN ((((((((x'')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)) END) ORDER BY CAST(CASE WHEN '' THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC)  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) NOT NULL) THEN ((((((((x'')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN '' THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC)  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) NOT NULL) THEN ((((((((x'')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)) END) ORDER BY CAST(CASE WHEN '' THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC)  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) NOT NULL) THEN ((((((((x'')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE WHEN '' THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC)  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN rt0.c0 COLLATE RTRIM WHEN ((rt0.c2) NOT NULL) THEN ((((((((x'')AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c3)) END) ORDER BY CAST(CASE WHEN '' THEN rt0.c2 ELSE rt0.c0 END AS NUMERIC)  NULLS LAST, CAST(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((((((((rt0.c2, t0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))))OR(((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(x'')))AND('')))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (x'')))))AND(((rt0.c0) IS TRUE))) WHERE ((((rt0.c3)) BETWEEN ((json_extract(t0.c0, rt0.c2))) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY CASE WHEN t0.c2 THEN CAST(rt0.c2 AS TEXT) ELSE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((json_extract(t0.c0, rt0.c2))) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((((((((rt0.c2, t0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))))OR(((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(x'')))AND('')))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (x'')))))AND(((rt0.c0) IS TRUE))) ORDER BY CASE WHEN t0.c2 THEN CAST(rt0.c2 AS TEXT) ELSE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((((((((rt0.c2, t0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))))OR(((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(x'')))AND('')))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (x'')))))AND(((rt0.c0) IS TRUE))) WHERE ((((rt0.c3)) BETWEEN ((json_extract(t0.c0, rt0.c2))) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY CASE WHEN t0.c2 THEN CAST(rt0.c2 AS TEXT) ELSE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((json_extract(t0.c0, rt0.c2))) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))) IS TRUE)  as count FROM rt0 CROSS JOIN t0 ON (((((((((((rt0.c2, t0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))))OR(((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(x'')))AND('')))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (x'')))))AND(((rt0.c0) IS TRUE))) ORDER BY CASE WHEN t0.c2 THEN CAST(rt0.c2 AS TEXT) ELSE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t0 ON (((((((((((rt0.c2, t0.c2, rt0.c0))<=((rt0.c2, rt0.c1, rt0.c2))))OR(((t0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))))AND(((((rt0.c2)OR(x'')))AND('')))))AND(((rt0.c1) NOT BETWEEN (t0.c0) AND (x'')))))AND(((rt0.c0) IS TRUE))) WHERE ((((rt0.c3)) BETWEEN ((json_extract(t0.c0, rt0.c2))) AND ((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))) ORDER BY CASE WHEN t0.c2 THEN CAST(rt0.c2 AS TEXT) ELSE ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c3)) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c2) NOT NULL))) ORDER BY (((~ (t0.c2)))!=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2) NOT NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (t0.c2)))!=(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c2) NOT NULL))) ORDER BY (((~ (t0.c2)))!=(rt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c2) NOT NULL))) IS TRUE)  as count FROM t0, rt0 ORDER BY (((~ (t0.c2)))!=(rt0.c0)) ASC);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE (TRIM(((rt0.c2) NOT NULL))) ORDER BY (((~ (t0.c2)))!=(rt0.c0)) ASC;
SELECT * FROM rt0, t0 WHERE ((((((t0.c1))==((t0.c0)))) NOT BETWEEN (-1.655922998E9) AND (((((rt0.c0)AND(0.8705323424601449)))AND(t0.c2))))) ORDER BY ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))==((t0.c0)))) NOT BETWEEN (-1.655922998E9) AND (((((rt0.c0)AND(0.8705323424601449)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((((t0.c1))==((t0.c0)))) NOT BETWEEN (-1.655922998E9) AND (((((rt0.c0)AND(0.8705323424601449)))AND(t0.c2))))) ORDER BY ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c1))==((t0.c0)))) NOT BETWEEN (-1.655922998E9) AND (((((rt0.c0)AND(0.8705323424601449)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT * FROM rt0, t0 WHERE ((((((t0.c1))==((t0.c0)))) NOT BETWEEN (-1.655922998E9) AND (((((rt0.c0)AND(0.8705323424601449)))AND(t0.c2))))) ORDER BY ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT '-351970119') AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT '-351970119') AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT '-351970119') AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(DISTINCT '-351970119') AS INTEGER)) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE (CAST(UPPER(DISTINCT '-351970119') AS INTEGER));
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN t0.c1 COLLATE BINARY WHEN (((t0.c0))<>((t0.c1))) THEN (t0.c2 IN ()) WHEN NULL THEN ((t0.c0)-(0.9484934082549157)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN t0.c1 COLLATE BINARY WHEN (((t0.c0))<>((t0.c1))) THEN (t0.c2 IN ()) WHEN NULL THEN ((t0.c0)-(0.9484934082549157)) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN t0.c1 COLLATE BINARY WHEN (((t0.c0))<>((t0.c1))) THEN (t0.c2 IN ()) WHEN NULL THEN ((t0.c0)-(0.9484934082549157)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN t0.c1 COLLATE BINARY WHEN (((t0.c0))<>((t0.c1))) THEN (t0.c2 IN ()) WHEN NULL THEN ((t0.c0)-(0.9484934082549157)) END  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (x'') ORDER BY CASE WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) THEN t0.c1 COLLATE BINARY WHEN (((t0.c0))<>((t0.c1))) THEN (t0.c2 IN ()) WHEN NULL THEN ((t0.c0)-(0.9484934082549157)) END  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) ISNULL)) ORDER BY 0.3733614937292369 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0.3733614937292369 ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) ISNULL)) ORDER BY 0.3733614937292369 ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)GLOB(rt0.c0))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY 0.3733614937292369 ASC);
SELECT * FROM rt0 WHERE (((((rt0.c0)GLOB(rt0.c0))) ISNULL)) ORDER BY 0.3733614937292369 ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN (CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END, (((t0.c0))>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN (CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END, (((t0.c0))>((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN (CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END, (((t0.c0))>((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN (CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END, (((t0.c0))>((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2 IN ()) IN (CASE t0.c1  WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c1 THEN t0.c0 END, (((t0.c0))>((t0.c1))))));
SELECT * FROM t0, rt0 WHERE (((json_array_length(rt0.c3, rt0.c1))IS NOT((t0.c1 IN ())))) ORDER BY CASE x''  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((NULL))) THEN (NULL IN (rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c3, rt0.c1))IS NOT((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE x''  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((NULL))) THEN (NULL IN (rt0.c3)) END ASC  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (((json_array_length(rt0.c3, rt0.c1))IS NOT((t0.c1 IN ())))) ORDER BY CASE x''  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((NULL))) THEN (NULL IN (rt0.c3)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array_length(rt0.c3, rt0.c1))IS NOT((t0.c1 IN ())))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE x''  WHEN (((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((NULL))) THEN (NULL IN (rt0.c3)) END ASC  NULLS LAST);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t0);
SELECT ALL * FROM rt0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE (json_object(((t0.c1) NOTNULL), ((t0.c0) BETWEEN ('946008197') AND (t0.c2)), CAST(NULL AS INTEGER), (1.49527155E8 IN ()))) ORDER BY ((RTRIM(t0.c1)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((t0.c1) NOTNULL), ((t0.c0) BETWEEN ('946008197') AND (t0.c2)), CAST(NULL AS INTEGER), (1.49527155E8 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c1)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (json_object(((t0.c1) NOTNULL), ((t0.c0) BETWEEN ('946008197') AND (t0.c2)), CAST(NULL AS INTEGER), (1.49527155E8 IN ()))) ORDER BY ((RTRIM(t0.c1)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(((t0.c1) NOTNULL), ((t0.c0) BETWEEN ('946008197') AND (t0.c2)), CAST(NULL AS INTEGER), (1.49527155E8 IN ()))) IS TRUE)  as count FROM t0 ORDER BY ((RTRIM(t0.c1)) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (json_object(((t0.c1) NOTNULL), ((t0.c0) BETWEEN ('946008197') AND (t0.c2)), CAST(NULL AS INTEGER), (1.49527155E8 IN ()))) ORDER BY ((RTRIM(t0.c1)) IS TRUE)  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE (t0.c0 IN (t0.c2))  WHEN ((t0.c2)/(t0.c1)) THEN t0.c1 ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY (((((((((((((NOT (t0.c1)))OR((NOT (x'f749f07a')))))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c2)<<(t0.c1)))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR((((t0.c0))>=((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t0.c2))  WHEN ((t0.c2)/(t0.c1)) THEN t0.c1 ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((NOT (t0.c1)))OR((NOT (x'f749f07a')))))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c2)<<(t0.c1)))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR((((t0.c0))>=((t0.c2))))) ASC);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN (t0.c2))  WHEN ((t0.c2)/(t0.c1)) THEN t0.c1 ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY (((((((((((((NOT (t0.c1)))OR((NOT (x'f749f07a')))))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c2)<<(t0.c1)))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR((((t0.c0))>=((t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c0 IN (t0.c2))  WHEN ((t0.c2)/(t0.c1)) THEN t0.c1 ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0 ORDER BY (((((((((((((NOT (t0.c1)))OR((NOT (x'f749f07a')))))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c2)<<(t0.c1)))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR((((t0.c0))>=((t0.c2))))) ASC);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN (t0.c2))  WHEN ((t0.c2)/(t0.c1)) THEN t0.c1 ELSE CAST(t0.c1 AS INTEGER) END) ORDER BY (((((((((((((NOT (t0.c1)))OR((NOT (x'f749f07a')))))OR(CAST(t0.c1 AS INTEGER))))AND(((t0.c2)<<(t0.c1)))))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c2 END)))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c2)))))OR((((t0.c0))>=((t0.c2))))) ASC;
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, rt0 ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS LAST);
SELECT * FROM t0, rt0 WHERE (t0.c0) ORDER BY CAST(CAST(t0.c1 AS BLOB) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY CASE TRIM('X{xbBBD\n')  WHEN (NOT (rt0.c3)) THEN (~ (rt0.c1)) ELSE (~ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE TRIM('X{xbBBD\n')  WHEN (NOT (rt0.c3)) THEN (~ (rt0.c1)) ELSE (~ (NULL)) END);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY CASE TRIM('X{xbBBD\n')  WHEN (NOT (rt0.c3)) THEN (~ (rt0.c1)) ELSE (~ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 ORDER BY CASE TRIM('X{xbBBD\n')  WHEN (NOT (rt0.c3)) THEN (~ (rt0.c1)) ELSE (~ (NULL)) END);
SELECT COUNT(*) FROM t0, rt0 WHERE ((~ (rt0.c1 COLLATE NOCASE))) ORDER BY CASE TRIM('X{xbBBD\n')  WHEN (NOT (rt0.c3)) THEN (~ (rt0.c1)) ELSE (~ (NULL)) END;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((rt0.c3))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((rt0.c3))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((rt0.c3))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) IS FALSE)) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((rt0.c3))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) IS FALSE)) BETWEEN (rt0.c3 COLLATE BINARY) AND ((((rt0.c3))==((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('-1455180373') ISNULL))+((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0 ORDER BY (((('-1455180373') ISNULL))+((rt0.c3 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('-1455180373') ISNULL))+((rt0.c3 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0 ORDER BY (((('-1455180373') ISNULL))+((rt0.c3 IN ())))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('-1455180373') ISNULL))+((rt0.c3 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))==((NULL))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c0)))))AND(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))=((NULL))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c0)))))AND(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))==((NULL))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c0)))))AND(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))=((NULL))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c0)))))AND(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))==((NULL))))OR(((((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c0)))))AND(CAST(t0.c1 AS INTEGER))));
SELECT ALL * FROM t0 WHERE ((- (0.48463238292380795))) ORDER BY ((((+ (0.8543147018683002))))<=(((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.48463238292380795))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (0.8543147018683002))))<=(((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (0.48463238292380795))) ORDER BY ((((+ (0.8543147018683002))))<=(((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.48463238292380795))) IS TRUE)  as count FROM t0 ORDER BY ((((+ (0.8543147018683002))))<=(((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((- (0.48463238292380795))) ORDER BY ((((+ (0.8543147018683002))))<=(((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))))  NULLS LAST;
