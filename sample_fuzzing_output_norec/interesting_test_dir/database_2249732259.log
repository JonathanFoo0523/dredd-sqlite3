-- Time: 2024/06/09 15:39:44
-- Database: database59
-- Database version: 3.40.0
-- seed value: 2249732259
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1); -- 1ms;
UPDATE OR IGNORE vt0 SET c1='-400329049', c0='-400329049' WHERE '-400329049'; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-567447972,14');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 461586195); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1986735616, c0=0.05554216913836385 WHERE (((vt0.c1 IN ())) BETWEEN ('') AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)))IS((vt0.c1 IN (rt0.c2)))) FROM vt0 INNER JOIN rt0 ON ((vt0.c0 COLLATE RTRIM) NOT NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2018332228); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1908694004); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8546'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF INSERT ON v0 WHEN QUOTE(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) BEGIN INSERT OR IGNORE INTO rt0 VALUES (0.7389049065519872, '1767599726', NULL);END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c1)=(x'', '-1278510471'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1278510471);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1563204920') WHERE ((UNLIKELY(DISTINCT vt0.c0))&(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))); -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c2, c2)=('J9퍑', x'', '-1738007096'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54864'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1361100157,10');\n; -- 0ms;
CREATE TABLE t0 (c0 TEXT ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t0 ADD COLUMN c83 INT; -- 1ms;
UPDATE rt0 SET (c2, c1)=(x'f73a', x'27fc') WHERE ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)) COLLATE BINARY COLLATE BINARY; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL) WHERE CAST(vt0.c1 AS TEXT) COLLATE RTRIM; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
REINDEX; -- 0ms;
ALTER TABLE t0 ADD COLUMN c70 REAL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
DROP TABLE t0; -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c0, c2)=(x'', 0.6498690448493365, x'') WHERE CASE WHEN (rt0.c1 IN (rt0.c1)) THEN x'1b98' COLLATE RTRIM WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((((((((((((0.6731242335134632)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c0 END ELSE x'd260' END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '29212'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=0.2526767812546745 WHERE x'1a87'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c1=x'', c1=NULL WHERE (- (CASE WHEN vt0.c1 THEN vt0.c1 END)); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ABORT INTO rt0(c1) VALUES (x'acb5f5b8'), ('0'), (-4.00329049E8), (x''), (0.6498690448493365); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR REPLACE rt0 SET (c1)=(x'') WHERE ((((('199840095')>(rt0.c1))))>=((((rt0.c1) NOTNULL)))); -- 1ms;
REINDEX BINARY; -- 3ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 257255125); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (x'8c16', ''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (-9.32850863E8); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('퍑C', 0.20844371667469552) WHERE UPPER(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END); -- 1ms;
INSERT OR ABORT INTO rt0(c0) VALUES (x'630e'), (1.361100157E9), ('cPjn	Q^'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (x'', x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('245340236'); -- 0ms;
UPDATE vt0 SET c0='1267665294'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('871756851'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c0)=(1267665294); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'36b0'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1192673195); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1='ฤz' WHERE '#bg+\ra95'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=-5.67447972E8 WHERE (((rt0.c2)) NOT BETWEEN (((((rt0.c0))!=((0.9510882826873404))))) AND ((0X55d27415))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.17973733505070577; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', -1278510471); -- 0ms;
UPDATE OR FAIL rt0 SET (c0, c2, c2)=(1851607254, -952689012, x'5fdb'); -- 1ms;
UPDATE vt0 SET (c1)=('&Ẍ+') WHERE (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1))))||(((vt0.c0)<(vt0.c1)))); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE rt0.c2; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -361128956);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''), (-2034219822), (0.816620976208203); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1361100157);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11421'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=x''; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (CASE 2118847618  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((((((((UPPER(DISTINCT rt0.c1))AND(((rt0.c0) IS FALSE))))OR(0.28848575868345216)))OR((NOT (rt0.c0)))))OR(v0.c0)) DESC  NULLS FIRST, rt0.c2, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (CASE 2118847618  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((UPPER(DISTINCT rt0.c1))AND(((rt0.c0) IS FALSE))))OR(0.28848575868345216)))OR((NOT (rt0.c0)))))OR(v0.c0)) DESC  NULLS FIRST, rt0.c2, x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (CASE 2118847618  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((((((((UPPER(DISTINCT rt0.c1))AND(((rt0.c0) IS FALSE))))OR(0.28848575868345216)))OR((NOT (rt0.c0)))))OR(v0.c0)) DESC  NULLS FIRST, rt0.c2, x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (CASE 2118847618  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((((((UPPER(DISTINCT rt0.c1))AND(((rt0.c0) IS FALSE))))OR(0.28848575868345216)))OR((NOT (rt0.c0)))))OR(v0.c0)) DESC  NULLS FIRST, rt0.c2, x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)%(rt0.c0))) AND (CASE 2118847618  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY ((((((((UPPER(DISTINCT rt0.c1))AND(((rt0.c0) IS FALSE))))OR(0.28848575868345216)))OR((NOT (rt0.c0)))))OR(v0.c0)) DESC  NULLS FIRST, rt0.c2, x'' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (0xa7697d)) AS TEXT)) ORDER BY LTRIM(((vt0.c0)&(rt0.c2)), CAST(rt0.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (0xa7697d)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY LTRIM(((vt0.c0)&(rt0.c2)), CAST(rt0.c0 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (0xa7697d)) AS TEXT)) ORDER BY LTRIM(((vt0.c0)&(rt0.c2)), CAST(rt0.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (0xa7697d)) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY LTRIM(((vt0.c0)&(rt0.c2)), CAST(rt0.c0 AS BLOB)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (0xa7697d)) AS TEXT)) ORDER BY LTRIM(((vt0.c0)&(rt0.c2)), CAST(rt0.c0 AS BLOB)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKE((- (v0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1))) FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (STRFTIME(rt0.c2, rt0.c1, vt0.c0, vt0.c0, 0.7717889083630741, vt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND ((((rt0.c2, vt0.c1, rt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<((rt0.c2)))) AND (CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c2)) NOT BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND ((((rt0.c2, vt0.c1, rt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON LIKE((- (v0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1))) FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (STRFTIME(rt0.c2, rt0.c1, vt0.c0, vt0.c0, 0.7717889083630741, vt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<((rt0.c2)))) AND (CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKE((- (v0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1))) FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (STRFTIME(rt0.c2, rt0.c1, vt0.c0, vt0.c0, 0.7717889083630741, vt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND ((((rt0.c2, vt0.c1, rt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<((rt0.c2)))) AND (CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((ABS(rt0.c2)) NOT BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND ((((rt0.c2, vt0.c1, rt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON LIKE((- (v0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1))) FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (STRFTIME(rt0.c2, rt0.c1, vt0.c0, vt0.c0, 0.7717889083630741, vt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<((rt0.c2)))) AND (CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON LIKE((- (v0.c0)), ((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c1))) FULL OUTER JOIN vt0 ON ((CAST(rt0.c2 AS REAL)) BETWEEN (STRFTIME(rt0.c2, rt0.c1, vt0.c0, vt0.c0, 0.7717889083630741, vt0.c1, rt0.c0)) AND (CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 END)) WHERE (((ABS(rt0.c2)) NOT BETWEEN (((vt0.c1)GLOB(rt0.c1))) AND ((((rt0.c2, vt0.c1, rt0.c0, rt0.c2, rt0.c2))<=((rt0.c0, vt0.c0, rt0.c1, rt0.c0, vt0.c0)))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c0))<((rt0.c2)))) AND (CAST(vt0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM rt0, v0 INNER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, NULL))) AS BLOB) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 INNER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, NULL))) AS BLOB));
SELECT * FROM rt0, v0 INNER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, NULL))) AS BLOB) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 NOT INDEXED, v0 INNER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, NULL))) AS BLOB));
SELECT * FROM rt0, v0 INNER JOIN vt0 ON CAST((((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c0, rt0.c1)) AND ((vt0.c0, rt0.c1, NULL))) AS BLOB) WHERE ((- (CASE vt0.c0  WHEN vt0.c0 THEN rt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)&(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c0)&(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)&(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((vt0.c0)&(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((vt0.c1 IN ()) IN (((vt0.c0)&(vt0.c0)), CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END)));
SELECT COUNT(*) FROM rt0 WHERE (json_object(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((((((((0.056358499693523245)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((rt0.c1) NOTNULL), (rt0.c0 IN (rt0.c0)))) ORDER BY (((rt0.c0 IN ()))&(('-439698071' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((((((((0.056358499693523245)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((rt0.c1) NOTNULL), (rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(('-439698071' IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (json_object(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((((((((0.056358499693523245)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((rt0.c1) NOTNULL), (rt0.c0 IN (rt0.c0)))) ORDER BY (((rt0.c0 IN ()))&(('-439698071' IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_object(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END, ((((((((0.056358499693523245)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c0)), rt0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((rt0.c1) NOTNULL), (rt0.c0 IN (rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN ()))&(('-439698071' IN ()))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND (((- (rt0.c1)))))) ORDER BY '-392210776'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY '-392210776'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND (((- (rt0.c1)))))) ORDER BY '-392210776'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND (((- (rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY '-392210776'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((((vt0.c0)AND(rt0.c1)))OR(v0.c0)))) AND (((- (rt0.c1)))))) ORDER BY '-392210776'  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((x'')))) IS FALSE));
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ ((((1069178805)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY x'' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((1069178805)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 ORDER BY x'' COLLATE RTRIM DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ ((((1069178805)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY x'' COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ ((((1069178805)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 ORDER BY x'' COLLATE RTRIM DESC);
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 WHERE ((+ ((((1069178805)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY x'' COLLATE RTRIM DESC;
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS NOT(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c1) ORDER BY ((((rt0.c1) IS FALSE)) NOT BETWEEN ((((v0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0)))) AND (((rt0.c2)IS NOT(v0.c0)))) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN (v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((~ (v0.c0)) IN (v0.c0)));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ('-1996536969') ORDER BY -1278510471 ASC;
SELECT SUM(count) FROM (SELECT (('-1996536969') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY -1278510471 ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ('-1996536969') ORDER BY -1278510471 ASC;
SELECT SUM(count) FROM (SELECT (('-1996536969') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY -1278510471 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)||(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)||(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)||(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)||(rt0.c0)) IN ()));
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) NOT BETWEEN (-400329049) AND (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (-400329049) AND (rt0.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) NOT BETWEEN (-400329049) AND (rt0.c1))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (-400329049) AND (rt0.c1))) NOTNULL) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0) NOT BETWEEN (-400329049) AND (rt0.c1))) NOTNULL) ASC;
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CASE WHEN rt0.c0 THEN (((-399733884, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '-559993871')) AND ((rt0.c0, v0.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c0 THEN (((-399733884, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '-559993871')) AND ((rt0.c0, v0.c0, rt0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CASE WHEN rt0.c0 THEN (((-399733884, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '-559993871')) AND ((rt0.c0, v0.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY CASE WHEN rt0.c0 THEN (((-399733884, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '-559993871')) AND ((rt0.c0, v0.c0, rt0.c0))) END ASC  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY CASE WHEN rt0.c0 THEN (((-399733884, v0.c0, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, '-559993871')) AND ((rt0.c0, v0.c0, rt0.c0))) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(CAST(NULL AS TEXT))))OR(((rt0.c1)<(rt0.c0))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c2), vt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE RTRIM)AND(CAST(NULL AS TEXT))))OR(((rt0.c1)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LIKE(LOWER(DISTINCT rt0.c2), vt0.c1 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(CAST(NULL AS TEXT))))OR(((rt0.c1)<(rt0.c0))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c2), vt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0 COLLATE RTRIM)AND(CAST(NULL AS TEXT))))OR(((rt0.c1)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY LIKE(LOWER(DISTINCT rt0.c2), vt0.c1 COLLATE RTRIM) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((((rt0.c0 COLLATE RTRIM)AND(CAST(NULL AS TEXT))))OR(((rt0.c1)<(rt0.c0))))) ORDER BY LIKE(LOWER(DISTINCT rt0.c2), vt0.c1 COLLATE RTRIM) DESC  NULLS FIRST;
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)*(((rt0.c0)<>(v0.c0)))) CROSS JOIN v0 ON (+ (((vt0.c1) IS FALSE))) WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)*(((rt0.c0)!=(v0.c0)))) CROSS JOIN v0 ON (+ (((vt0.c1) IS FALSE))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)*(((rt0.c0)<>(v0.c0)))) CROSS JOIN v0 ON (+ (((vt0.c1) IS FALSE))) WHERE ((~ (v0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (v0.c0))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)*(((rt0.c0)!=(v0.c0)))) CROSS JOIN v0 ON (+ (((vt0.c1) IS FALSE))));
SELECT * FROM vt0 INNER JOIN rt0 ON ((rt0.c2 COLLATE NOCASE)*(((rt0.c0)<>(v0.c0)))) CROSS JOIN v0 ON (+ (((vt0.c1) IS FALSE))) WHERE ((~ (v0.c0)));
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c2))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<<(rt0.c2))))=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c2))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)<<(rt0.c2))))=((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c0)<<(rt0.c2))))==((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((x'' IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((x'' IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ('')));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((x'' IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (''));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((x'' IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND ('')));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM) ORDER BY (((x'' IN ())) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (''));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0)))<=((((rt0.c2))>=((rt0.c0)))))) ORDER BY ((0.2365198217093799)-((NOT (vt0.c1)))) DESC, ((CAST(vt0.c1 AS TEXT))<<(((vt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<=((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.2365198217093799)-((NOT (vt0.c1)))) DESC, ((CAST(vt0.c1 AS TEXT))<<(((vt0.c1)||(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0)))<=((((rt0.c2))>=((rt0.c0)))))) ORDER BY ((0.2365198217093799)-((NOT (vt0.c1)))) DESC, ((CAST(vt0.c1 AS TEXT))<<(((vt0.c1)||(rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<=((((rt0.c2))>=((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((0.2365198217093799)-((NOT (vt0.c1)))) DESC, ((CAST(vt0.c1 AS TEXT))<<(((vt0.c1)||(rt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((~ (vt0.c0)))<=((((rt0.c2))>=((rt0.c0)))))) ORDER BY ((0.2365198217093799)-((NOT (vt0.c1)))) DESC, ((CAST(vt0.c1 AS TEXT))<<(((vt0.c1)||(rt0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c0 END AS REAL));
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((-400329049)OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((-400329049)OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((-400329049)OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((-400329049)OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (((((-400329049)OR(rt0.c1)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((NOT (vt0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c1 THEN CAST(rt0.c0 AS REAL) END WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))>(((rt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))>(((rt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c1 THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c1 THEN CAST(rt0.c0 AS REAL) END WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))>(((rt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))>(((rt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN v0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c1 THEN CAST(rt0.c0 AS REAL) END);
SELECT ALL COUNT(*) FROM vt0, rt0 NOT INDEXED RIGHT OUTER JOIN v0 ON CASE ((vt0.c0)>>(rt0.c1))  WHEN rt0.c1 THEN CAST(rt0.c0 AS REAL) END WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))>(((rt0.c0)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) NOT BETWEEN (((vt0.c1)%(vt0.c1))) AND (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))))) ORDER BY ((vt0.c1 COLLATE RTRIM) IS TRUE);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY SUBSTR(((v0.c0)OR(v0.c0)), (((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY SUBSTR(((v0.c0)OR(v0.c0)), (((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY SUBSTR(((v0.c0)OR(v0.c0)), (((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0, vt0 ORDER BY SUBSTR(((v0.c0)OR(v0.c0)), (((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1))))  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS BLOB)) BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) AND (CAST(vt0.c1 AS BLOB)))) ORDER BY SUBSTR(((v0.c0)OR(v0.c0)), (((vt0.c1, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((v0.c0, vt0.c1, vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (load_extension((vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)GLOB(vt0.c1)))) ORDER BY (((x'', ((vt0.c1)<<(vt0.c0)), CASE 0.9977697194095695  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c1)>>(vt0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)), (NOT (vt0.c1))))) DESC, (((v0.c0 IN (v0.c0, vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'', ((vt0.c1)<<(vt0.c0)), CASE 0.9977697194095695  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c1)>>(vt0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)), (NOT (vt0.c1))))) DESC, (((v0.c0 IN (v0.c0, vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (load_extension((vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)GLOB(vt0.c1)))) ORDER BY (((x'', ((vt0.c1)<<(vt0.c0)), CASE 0.9977697194095695  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c1)>>(vt0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)), (NOT (vt0.c1))))) DESC, (((v0.c0 IN (v0.c0, vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ((load_extension((vt0.c0 IN (v0.c0, vt0.c0)), ((vt0.c0)GLOB(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((x'', ((vt0.c1)<<(vt0.c0)), CASE 0.9977697194095695  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))>((((vt0.c1)>>(vt0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(NULL)))OR(vt0.c1)))AND(vt0.c1)), (NOT (vt0.c1))))) DESC, (((v0.c0 IN (v0.c0, vt0.c0)))IS(CAST(vt0.c0 AS INTEGER))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0)))-(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0)OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c0)))-(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)OR(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0)))-(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0)OR(v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)<>(v0.c0)))-(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)OR(v0.c0)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)!=(v0.c0)))-(v0.c0 COLLATE RTRIM))) ORDER BY (((v0.c0)OR(v0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c0)OR(NULL)))AND(rt0.c0)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((LIKELY(DISTINCT rt0.c2)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(NULL)))AND(rt0.c0)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LIKELY(DISTINCT rt0.c2)) NOTNULL) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c0)OR(NULL)))AND(rt0.c0)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((LIKELY(DISTINCT rt0.c2)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(NULL)))AND(rt0.c0)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((LIKELY(DISTINCT rt0.c2)) NOTNULL) ASC);
SELECT ALL * FROM rt0, v0 WHERE (((((((rt0.c0)OR(NULL)))AND(rt0.c0)))IS NOT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END))) ORDER BY ((LIKELY(DISTINCT rt0.c2)) NOTNULL) ASC;
SELECT * FROM rt0, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)==(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))=((((0.7717889083630741, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY CASE WHEN json_object(v0.c0, v0.c0) THEN v0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))=((((0.7717889083630741, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN json_object(v0.c0, v0.c0) THEN v0.c0 END);
SELECT * FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(v0.c0)))=((((0.7717889083630741, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) ORDER BY CASE WHEN json_object(v0.c0, v0.c0) THEN v0.c0 END;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))=((((0.7717889083630741, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN json_object(v0.c0, v0.c0) THEN v0.c0 END);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c2))<>((rt0.c0))) THEN ((rt0.c1) NOTNULL) END WHERE (NULL) ORDER BY (((((((((('1439855637')/(rt0.c0)))OR(rt0.c0 COLLATE BINARY)))OR((((rt0.c0))<((v0.c0))))))AND(CASE 0.2526767812546745  WHEN '-1685961376' THEN v0.c0 END)))OR((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c2))<>((rt0.c0))) THEN ((rt0.c1) NOTNULL) END ORDER BY (((((((((('1439855637')/(rt0.c0)))OR(rt0.c0 COLLATE BINARY)))OR((((rt0.c0))<((v0.c0))))))AND(CASE 0.2526767812546745  WHEN '-1685961376' THEN v0.c0 END)))OR((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c2))<>((rt0.c0))) THEN ((rt0.c1) NOTNULL) END WHERE (NULL) ORDER BY (((((((((('1439855637')/(rt0.c0)))OR(rt0.c0 COLLATE BINARY)))OR((((rt0.c0))<((v0.c0))))))AND(CASE 0.2526767812546745  WHEN '-1685961376' THEN v0.c0 END)))OR((- (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c2))<>((rt0.c0))) THEN ((rt0.c1) NOTNULL) END ORDER BY (((((((((('1439855637')/(rt0.c0)))OR(rt0.c0 COLLATE BINARY)))OR((((rt0.c0))<((v0.c0))))))AND(CASE 0.2526767812546745  WHEN '-1685961376' THEN v0.c0 END)))OR((- (rt0.c1)))) ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS REAL)  WHEN (((rt0.c2))<>((rt0.c0))) THEN ((rt0.c1) NOTNULL) END WHERE (NULL) ORDER BY (((((((((('1439855637')/(rt0.c0)))OR(rt0.c0 COLLATE BINARY)))OR((((rt0.c0))<((v0.c0))))))AND(CASE 0.2526767812546745  WHEN '-1685961376' THEN v0.c0 END)))OR((- (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((LENGTH(rt0.c0))-(json_remove(rt0.c0, rt0.c2)))) ORDER BY 2.086473252E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c0))-(json_remove(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) ORDER BY 2.086473252E9 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((LENGTH(rt0.c0))-(json_remove(rt0.c0, rt0.c2)))) ORDER BY 2.086473252E9 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c0))-(json_remove(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) ORDER BY 2.086473252E9 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS NUMERIC) WHERE (((LENGTH(rt0.c0))-(json_remove(rt0.c0, rt0.c2)))) ORDER BY 2.086473252E9 ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, 0x3d62bc4d, vt0.c1)) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CASE ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c1, -559993871, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (('kA', vt0.c1, vt0.c0, vt0.c0, x'8acf')) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((x'6e6b') NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END ASC  NULLS FIRST, CASE (~ (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt0.c0, 0x3d62bc4d, vt0.c1)) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c1, -559993871, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (('kA', vt0.c1, vt0.c0, vt0.c0, x'8acf')) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((x'6e6b') NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END ASC  NULLS FIRST, CASE (~ (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, 0x3d62bc4d, vt0.c1)) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CASE ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c1, -559993871, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (('kA', vt0.c1, vt0.c0, vt0.c0, x'8acf')) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((x'6e6b') NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END ASC  NULLS FIRST, CASE (~ (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((JULIANDAY(vt0.c0, 0x3d62bc4d, vt0.c1)) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c1, -559993871, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (('kA', vt0.c1, vt0.c0, vt0.c0, x'8acf')) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((x'6e6b') NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END ASC  NULLS FIRST, CASE (~ (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((JULIANDAY(vt0.c0, 0x3d62bc4d, vt0.c1)) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) AND ((vt0.c1 IN ())))) ORDER BY CASE ((((((((((((vt0.c1)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0))  WHEN (((vt0.c1, -559993871, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN (('kA', vt0.c1, vt0.c0, vt0.c0, x'8acf')) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) THEN ((x'6e6b') NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 END END ASC  NULLS FIRST, CASE (~ (vt0.c0))  WHEN ((vt0.c1) IS TRUE) THEN ((vt0.c0) IS TRUE) END ASC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(vt0.c0 AS NUMERIC));
SELECT * FROM vt0, v0, rt0 WHERE (vt0.c1) ORDER BY CAST(vt0.c0 AS NUMERIC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(load_extension(rt0.c2, vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(rt0.c2, vt0.c1) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(load_extension(rt0.c2, vt0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(load_extension(rt0.c2, vt0.c1) AS REAL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(v0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))OR(CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)))OR(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT), ((NULL COLLATE BINARY) ISNULL) DESC, ((((('wmjKM\xᒓ3')&(vt0.c0)), ((vt0.c0)<(vt0.c0)), ((vt0.c1)>(vt0.c1))))<((CASE vt0.c1  WHEN 0.1254699243940549 THEN vt0.c1 END, (vt0.c0 IN ()), CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT), ((NULL COLLATE BINARY) ISNULL) DESC, ((((('wmjKM\xᒓ3')&(vt0.c0)), ((vt0.c0)<(vt0.c0)), ((vt0.c1)>(vt0.c1))))<((CASE vt0.c1  WHEN 0.1254699243940549 THEN vt0.c1 END, (vt0.c0 IN ()), CAST(x'' AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT), ((NULL COLLATE BINARY) ISNULL) DESC, ((((('wmjKM\xᒓ3')&(vt0.c0)), ((vt0.c0)<(vt0.c0)), ((vt0.c1)>(vt0.c1))))<((CASE vt0.c1  WHEN 0.1254699243940549 THEN vt0.c1 END, (vt0.c0 IN ()), CAST(x'' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT), ((NULL COLLATE BINARY) ISNULL) DESC, ((((('wmjKM\xᒓ3')&(vt0.c0)), ((vt0.c0)<(vt0.c0)), ((vt0.c1)>(vt0.c1))))<((CASE vt0.c1  WHEN 0.1254699243940549 THEN vt0.c1 END, (vt0.c0 IN ()), CAST(x'' AS INTEGER)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY CAST(vt0.c1 COLLATE BINARY AS TEXT), ((NULL COLLATE BINARY) ISNULL) DESC, ((((('wmjKM\xᒓ3')&(vt0.c0)), ((vt0.c0)<(vt0.c0)), ((vt0.c1)>(vt0.c1))))<((CASE vt0.c1  WHEN 0.1254699243940549 THEN vt0.c1 END, (vt0.c0 IN ()), CAST(x'' AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ('0.1254699243940549') AND (vt0.c1 COLLATE BINARY))) ORDER BY UPPER(((vt0.c0)AND(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ('0.1254699243940549') AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)AND(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ('0.1254699243940549') AND (vt0.c1 COLLATE BINARY))) ORDER BY UPPER(((vt0.c0)AND(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS NUMERIC)) BETWEEN ('0.1254699243940549') AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY UPPER(((vt0.c0)AND(vt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC)) BETWEEN ('0.1254699243940549') AND (vt0.c1 COLLATE BINARY))) ORDER BY UPPER(((vt0.c0)AND(vt0.c0))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (NOT ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (NOT ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM v0 ORDER BY (NOT ((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE ((CAST(v0.c0 AS NUMERIC) IN ())) ORDER BY (NOT ((v0.c0 IN ())));
SELECT * FROM v0, vt0, rt0 WHERE (x'') ORDER BY ((((COALESCE('305849830', rt0.c2, vt0.c0, rt0.c1))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((COALESCE('305849830', rt0.c2, vt0.c0, rt0.c1))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c1) IS TRUE)))  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (x'') ORDER BY ((((COALESCE('305849830', rt0.c2, vt0.c0, rt0.c1))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((COALESCE('305849830', rt0.c2, vt0.c0, rt0.c1))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c1) IS TRUE)))  NULLS LAST);
SELECT * FROM v0, vt0, rt0 WHERE (x'') ORDER BY ((((COALESCE('305849830', rt0.c2, vt0.c0, rt0.c1))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c1) IS TRUE)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.17973733505070577 WHEN NULL THEN vt0.c1 END) NOT BETWEEN ((NULL IN (vt0.c1, v0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.17973733505070577 WHEN NULL THEN vt0.c1 END) NOT BETWEEN ((NULL IN (vt0.c1, v0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.17973733505070577 WHEN NULL THEN vt0.c1 END) NOT BETWEEN ((NULL IN (vt0.c1, v0.c0))) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.17973733505070577 WHEN NULL THEN vt0.c1 END) NOT BETWEEN ((NULL IN (vt0.c1, v0.c0))) AND (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN 0.17973733505070577 WHEN NULL THEN vt0.c1 END) NOT BETWEEN ((NULL IN (vt0.c1, v0.c0))) AND (vt0.c0)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (v0.c0) AND (HEX(DISTINCT rt0.c1)))) ORDER BY IFNULL(DISTINCT rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (v0.c0) AND (HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY IFNULL(DISTINCT rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (v0.c0) AND (HEX(DISTINCT rt0.c1)))) ORDER BY IFNULL(DISTINCT rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) BETWEEN (v0.c0) AND (HEX(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY IFNULL(DISTINCT rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((rt0.c2 COLLATE BINARY) BETWEEN (v0.c0) AND (HEX(DISTINCT rt0.c1)))) ORDER BY IFNULL(DISTINCT rt0.c2, ((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c1)))>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c1)))>(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c1)))>(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c1)))>(CAST(vt0.c0 AS BLOB))));
SELECT * FROM rt0, vt0 WHERE (((NULL)|('-185687930'))) ORDER BY vt0.c1 DESC  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, vt0.c1, vt0.c0))) THEN IFNULL(NULL, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((((NULL)|('-185687930'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, vt0.c1, vt0.c0))) THEN IFNULL(NULL, rt0.c1) END);
SELECT * FROM rt0, vt0 WHERE (((NULL)|('-185687930'))) ORDER BY vt0.c1 DESC  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, vt0.c1, vt0.c0))) THEN IFNULL(NULL, rt0.c1) END;
SELECT SUM(count) FROM (SELECT ((((NULL)|('-185687930'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c1 DESC  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, vt0.c1, vt0.c0))) THEN IFNULL(NULL, rt0.c1) END);
SELECT * FROM rt0, vt0 WHERE (((NULL)|('-185687930'))) ORDER BY vt0.c1 DESC  NULLS FIRST, CASE WHEN (((rt0.c2, rt0.c1, rt0.c0))<((rt0.c1, vt0.c1, vt0.c0))) THEN IFNULL(NULL, rt0.c1) END;
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c2 IN (vt0.c1)) AS TEXT) CROSS JOIN rt0 ON 0.24379767744780878 WHERE (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((rt0.c2)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((rt0.c2)<<(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c2 IN (vt0.c1)) AS TEXT) CROSS JOIN rt0 ON 0.24379767744780878);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c2 IN (vt0.c1)) AS TEXT) CROSS JOIN rt0 ON 0.24379767744780878 WHERE (((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((rt0.c2)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (((rt0.c2)<<(vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST((rt0.c2 IN (vt0.c1)) AS TEXT) CROSS JOIN rt0 ON 0.24379767744780878);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)||(vt0.c1)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)||(vt0.c1)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)||(vt0.c1)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)||(vt0.c1)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST(vt0.c0 AS INTEGER) WHERE ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)||(vt0.c1)))) AND ((((vt0.c0) IS FALSE))))  NULLS LAST, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<>(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.7352468899434008)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<>(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.7352468899434008)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<>(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.7352468899434008)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)<>(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.7352468899434008)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c1)<>(((((((((v0.c0)AND(rt0.c1)))AND(rt0.c0)))OR(0.7352468899434008)))OR(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (vt0.c0 IN (rt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON ((((vt0.c0)==(''))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (v0.c0)) WHERE (LIKELIHOOD(((vt0.c1)>=(v0.c0)), 0.8951489819279517));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c1)>=(v0.c0)), 0.8951489819279517)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (vt0.c0 IN (rt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON ((((vt0.c0)==(''))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (v0.c0)));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (vt0.c0 IN (rt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON ((((vt0.c0)==(''))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (v0.c0)) WHERE (LIKELIHOOD(((vt0.c1)>=(v0.c0)), 0.8951489819279517));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c1)>=(v0.c0)), 0.8951489819279517)) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (vt0.c0 IN (rt0.c1)) COLLATE BINARY CROSS JOIN vt0 ON ((((vt0.c0)==(''))) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (v0.c0)));
SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT NULL))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT NULL))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0) NOT NULL))OR(CAST(v0.c0 AS INTEGER))))AND(v0.c0)));
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN (((~ (vt0.c1)))) AND (((((v0.c0))=((rt0.c0))))))) ORDER BY ((CASE '-400329049'  WHEN v0.c0 THEN rt0.c2 END)*(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((~ (vt0.c1)))) AND (((((v0.c0))=((rt0.c0))))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE '-400329049'  WHEN v0.c0 THEN rt0.c2 END)*(rt0.c0 COLLATE RTRIM)));
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN (((~ (vt0.c1)))) AND (((((v0.c0))=((rt0.c0))))))) ORDER BY ((CASE '-400329049'  WHEN v0.c0 THEN rt0.c2 END)*(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN (((~ (vt0.c1)))) AND (((((v0.c0))=((rt0.c0))))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((CASE '-400329049'  WHEN v0.c0 THEN rt0.c2 END)*(rt0.c0 COLLATE RTRIM)));
SELECT * FROM v0, vt0, rt0 WHERE ((((rt0.c0)) BETWEEN (((~ (vt0.c1)))) AND (((((v0.c0))=((rt0.c0))))))) ORDER BY ((CASE '-400329049'  WHEN v0.c0 THEN rt0.c2 END)*(rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))<(((~ (NULL)), ((vt0.c1)==(vt0.c0)), LIKELY(DISTINCT vt0.c1)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))<(((~ (NULL)), ((vt0.c1)=(vt0.c0)), LIKELY(DISTINCT vt0.c1)))) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))<(((~ (NULL)), ((vt0.c1)==(vt0.c0)), LIKELY(DISTINCT vt0.c1)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))<(((~ (NULL)), ((vt0.c1)=(vt0.c0)), LIKELY(DISTINCT vt0.c1)))) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0 COLLATE NOCASE, (((vt0.c1, vt0.c0, v0.c0)) BETWEEN ((vt0.c0, '', vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))), (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0)))))<(((~ (NULL)), ((vt0.c1)==(vt0.c0)), LIKELY(DISTINCT vt0.c1)))) WHERE (((vt0.c0) IS TRUE)) ORDER BY CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT ALL * FROM rt0 WHERE (((x'11c7') BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'11c7') BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'11c7') BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((x'11c7') BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'11c7') BETWEEN (((rt0.c2) NOTNULL)) AND ((~ (rt0.c1))))) ORDER BY rt0.c1 ASC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(rt0.c1) WHEN UNLIKELY(vt0.c1) THEN (~ (rt0.c2)) WHEN (((vt0.c0, rt0.c2, rt0.c2))<((vt0.c1, rt0.c0, vt0.c0))) THEN '1108200090' ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(rt0.c1) WHEN UNLIKELY(vt0.c1) THEN (~ (rt0.c2)) WHEN (((vt0.c0, rt0.c2, rt0.c2))<((vt0.c1, rt0.c0, vt0.c0))) THEN '1108200090' ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(rt0.c1) WHEN UNLIKELY(vt0.c1) THEN (~ (rt0.c2)) WHEN (((vt0.c0, rt0.c2, rt0.c2))<((vt0.c1, rt0.c0, vt0.c0))) THEN '1108200090' ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(rt0.c1) WHEN UNLIKELY(vt0.c1) THEN (~ (rt0.c2)) WHEN (((vt0.c0, rt0.c2, rt0.c2))<((vt0.c1, rt0.c0, vt0.c0))) THEN '1108200090' ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY) ORDER BY CASE WHEN CAST(vt0.c0 AS REAL) THEN LOWER(rt0.c1) WHEN UNLIKELY(vt0.c1) THEN (~ (rt0.c2)) WHEN (((vt0.c0, rt0.c2, rt0.c2))<((vt0.c1, rt0.c0, vt0.c0))) THEN '1108200090' ELSE CASE WHEN rt0.c1 THEN vt0.c0 END END;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(RTRIM(rt0.c2))) ORDER BY ((((1.99840095E8) BETWEEN (rt0.c1) AND (v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(RTRIM(rt0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((1.99840095E8) BETWEEN (rt0.c1) AND (v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(RTRIM(rt0.c2))) ORDER BY ((((1.99840095E8) BETWEEN (rt0.c1) AND (v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(RTRIM(rt0.c2))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((1.99840095E8) BETWEEN (rt0.c1) AND (v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (LOWER(RTRIM(rt0.c2))) ORDER BY ((((1.99840095E8) BETWEEN (rt0.c1) AND (v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON json_extract((- (rt0.c0)), (v0.c0 IN (rt0.c0))) WHERE ((((x'c45d' IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((x'c45d' IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON json_extract((- (rt0.c0)), (v0.c0 IN (rt0.c0))));
SELECT * FROM v0 INNER JOIN rt0 ON json_extract((- (rt0.c0)), (v0.c0 IN (rt0.c0))) WHERE ((((x'c45d' IN (rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((x'c45d' IN (rt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON json_extract((- (rt0.c0)), (v0.c0 IN (rt0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((-334351443) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-334351443) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) AND ((- (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((-334351443) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) AND ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((-334351443) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) AND ((- (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((-334351443) NOT BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) AND ((- (rt0.c2)))));
SELECT * FROM rt0, v0 WHERE (((x'1b45') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'1b45') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'1b45') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((x'1b45') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((x'1b45') NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) END WHERE ((((((rt0.c1 IN ()))OR(LIKELY(DISTINCT rt0.c2))))OR((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR(LIKELY(DISTINCT rt0.c2))))OR((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) END WHERE ((((((rt0.c1 IN ()))OR(LIKELY(DISTINCT rt0.c2))))OR((vt0.c0 IN (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1 IN ()))OR(LIKELY(DISTINCT rt0.c2))))OR((vt0.c0 IN (vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) END);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON CASE WHEN ((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (v0.c0 IN ()) END WHERE ((((((rt0.c1 IN ()))OR(LIKELY(DISTINCT rt0.c2))))OR((vt0.c0 IN (vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('1554490551')) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('1554490551')) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('1554490551')) AND (((- (vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (('1554490551')) AND (((- (vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (('1554490551')) AND (((- (vt0.c1))))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE LTRIM(rt0.c1)  WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE LTRIM(rt0.c1)  WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE LTRIM(rt0.c1)  WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE LTRIM(rt0.c1)  WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CASE LTRIM(rt0.c1)  WHEN (((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c0))) THEN ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'' COLLATE RTRIM) ORDER BY (- ((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (- ((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'' COLLATE RTRIM) ORDER BY (- ((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (- ((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (x'' COLLATE RTRIM) ORDER BY (- ((vt0.c0 IN ()))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1))<((vt0.c0))) IN ())) ORDER BY (((NULL))!=((CASE WHEN 0.8614618681292792 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0X77e3658b END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NULL))<>((CASE WHEN 0.8614618681292792 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0x77e3658b END))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1))<((vt0.c0))) IN ())) ORDER BY (((NULL))!=((CASE WHEN 0.8614618681292792 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0X77e3658b END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))<((vt0.c0))) IN ())) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NULL))<>((CASE WHEN 0.8614618681292792 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0x77e3658b END))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((rt0.c1))<((vt0.c0))) IN ())) ORDER BY (((NULL))!=((CASE WHEN 0.8614618681292792 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0X77e3658b END)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c0))<<(v0.c0 COLLATE NOCASE))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))<<(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c0))<<(v0.c0 COLLATE NOCASE))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))<<(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((LTRIM(vt0.c0))<<(v0.c0 COLLATE NOCASE))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY (v0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) IS TRUE)  as count FROM rt0, v0 ORDER BY (v0.c0 IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_COMPILEOPTION_GET((rt0.c2 IN ()))) ORDER BY (v0.c0 IN ()) DESC;
SELECT * FROM v0, vt0 WHERE (((vt0.c1 IN (vt0.c1, v0.c0)) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1, v0.c0)) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 IN (vt0.c1, v0.c0)) IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN (vt0.c1, v0.c0)) IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 IN (vt0.c1, v0.c0)) IN ((v0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))&('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))&(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))&('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))&(''))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((((vt0.c0)OR(rt0.c0)))AND(vt0.c0)))AND(rt0.c2)))AND(rt0.c2)))&('')));
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x29d44f41 END)LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY x'dfac' DESC, (((((((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))))<(((((0.5708536430101704)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x29d44f41 END)LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY x'dfac' DESC, (((((((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))))<(((((0.5708536430101704)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x29d44f41 END)LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY x'dfac' DESC, (((((((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))))<(((((0.5708536430101704)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x29d44f41 END)LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY x'dfac' DESC, (((((((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))))<(((((0.5708536430101704)) BETWEEN ((v0.c0)) AND ((rt0.c0)))))));
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c2 THEN rt0.c2 ELSE 0x29d44f41 END)LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY x'dfac' DESC, (((((((((((v0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0))))<(((((0.5708536430101704)) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3572915840686747)))) ASC  NULLS LAST, CASE '1361100157'  WHEN (+ ('1267665294')) THEN ((rt0.c2)+(rt0.c1)) ELSE ((rt0.c1)||(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3572915840686747)))) ASC  NULLS LAST, CASE '1361100157'  WHEN (+ ('1267665294')) THEN ((rt0.c2)+(rt0.c1)) ELSE ((rt0.c1)||(rt0.c1)) END DESC);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3572915840686747)))) ASC  NULLS LAST, CASE '1361100157'  WHEN (+ ('1267665294')) THEN ((rt0.c2)+(rt0.c1)) ELSE ((rt0.c1)||(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3572915840686747)))) ASC  NULLS LAST, CASE '1361100157'  WHEN (+ ('1267665294')) THEN ((rt0.c2)+(rt0.c1)) ELSE ((rt0.c1)||(rt0.c1)) END DESC);
SELECT ALL * FROM v0 NATURAL JOIN rt0 WHERE ((+ (((((rt0.c2)OR(rt0.c0)))AND(rt0.c1))))) ORDER BY ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((x''))) IN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (0.3572915840686747)))) ASC  NULLS LAST, CASE '1361100157'  WHEN (+ ('1267665294')) THEN ((rt0.c2)+(rt0.c1)) ELSE ((rt0.c1)||(rt0.c1)) END DESC;
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '0.17652794070314148' WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY 0Xfffffffff4eea086 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '0.17652794070314148' WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0xfffffffff4eea086 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '0.17652794070314148' WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY 0Xfffffffff4eea086 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '0.17652794070314148' WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0xfffffffff4eea086 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((- (CASE v0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN '0.17652794070314148' WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY 0Xfffffffff4eea086 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY (((rt0.c2)>(rt0.c1)) IN (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)>(rt0.c1)) IN (((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY (((rt0.c2)>(rt0.c1)) IN (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2)>(rt0.c1)) IN (((vt0.c0) NOTNULL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN rt0.c2 END AS TEXT)) ORDER BY (((rt0.c2)>(rt0.c1)) IN (((vt0.c0) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1)&(vt0.c0)))>>(CASE vt0.c1  WHEN v0.c0 THEN 'TRUE' ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c2)&(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)&(vt0.c0)))>>(CASE vt0.c1  WHEN v0.c0 THEN 'TRUE' ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((rt0.c2)&(vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1)&(vt0.c0)))>>(CASE vt0.c1  WHEN v0.c0 THEN 'TRUE' ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c2)&(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)&(vt0.c0)))>>(CASE vt0.c1  WHEN v0.c0 THEN 'TRUE' ELSE rt0.c1 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((rt0.c2)&(vt0.c0)) AS REAL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((vt0.c1)&(vt0.c0)))>>(CASE vt0.c1  WHEN v0.c0 THEN 'TRUE' ELSE rt0.c1 END))) ORDER BY CAST(((rt0.c2)&(vt0.c0)) AS REAL) ASC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)|(rt0.c0))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(((vt0.c1)==(rt0.c2)))))OR(QUOTE(vt0.c1))) WHERE (x'') ORDER BY (((rt0.c2, rt0.c0, rt0.c2, v0.c0, vt0.c1))==((rt0.c1, rt0.c0, vt0.c1, NULL, vt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)|(rt0.c0))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(((vt0.c1)==(rt0.c2)))))OR(QUOTE(vt0.c1))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2, v0.c0, vt0.c1))==((rt0.c1, rt0.c0, vt0.c1, NULL, vt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)|(rt0.c0))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(((vt0.c1)==(rt0.c2)))))OR(QUOTE(vt0.c1))) WHERE (x'') ORDER BY (((rt0.c2, rt0.c0, rt0.c2, v0.c0, vt0.c1))==((rt0.c1, rt0.c0, vt0.c1, NULL, vt0.c1))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1)|(rt0.c0))) ISNULL) LEFT OUTER JOIN rt0 ON ((((rt0.c2)AND(((vt0.c1)==(rt0.c2)))))OR(QUOTE(vt0.c1))) ORDER BY (((rt0.c2, rt0.c0, rt0.c2, v0.c0, vt0.c1))==((rt0.c1, rt0.c0, vt0.c1, NULL, vt0.c1))) COLLATE RTRIM  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0)>>(vt0.c1)) END WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0)>>(vt0.c1)) END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0)>>(vt0.c1)) END WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0)>>(vt0.c1)) END);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE WHEN ((vt0.c0) NOT NULL) THEN ((rt0.c0)>>(vt0.c1)) END WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)%(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOT NULL)))) ORDER BY ABS(('0.24379767744780878' IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)%(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ABS(('0.24379767744780878' IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)%(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOT NULL)))) ORDER BY ABS(('0.24379767744780878' IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)%(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM rt0 ORDER BY ABS(('0.24379767744780878' IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)%(rt0.c2)))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 END)))OR(((rt0.c0) NOT NULL)))) ORDER BY ABS(('0.24379767744780878' IN ())) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN CASE WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END END);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (UNLIKELY(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c2) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (UNLIKELY(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c2) ISNULL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((rt0.c2) ISNULL) WHERE (UNLIKELY(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2)=(rt0.c2)) THEN (+ (rt0.c0)) ELSE (('lฤT㋥s!') NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((((NOT (rt0.c0)), '1467487379', (rt0.c2 IN ())))<(((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0) NOTNULL), (rt0.c0 IN ())))) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN ((x'9311' IN ())) AND (((rt0.c2)IS(x''))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)=(rt0.c2)) THEN (+ (rt0.c0)) ELSE (('lฤT㋥s!') NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c0)), '1467487379', (rt0.c2 IN ())))<(((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0) NOTNULL), (rt0.c0 IN ())))) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN ((x'9311' IN ())) AND (((rt0.c2)IS(x'')))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2)=(rt0.c2)) THEN (+ (rt0.c0)) ELSE (('lฤT㋥s!') NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((((NOT (rt0.c0)), '1467487379', (rt0.c2 IN ())))<(((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0) NOTNULL), (rt0.c0 IN ())))) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN ((x'9311' IN ())) AND (((rt0.c2)IS(x''))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)=(rt0.c2)) THEN (+ (rt0.c0)) ELSE (('lฤT㋥s!') NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0 ORDER BY ((((NOT (rt0.c0)), '1467487379', (rt0.c2 IN ())))<(((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0) NOTNULL), (rt0.c0 IN ())))) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN ((x'9311' IN ())) AND (((rt0.c2)IS(x'')))));
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2)=(rt0.c2)) THEN (+ (rt0.c0)) ELSE (('lฤT㋥s!') NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) ORDER BY ((((NOT (rt0.c0)), '1467487379', (rt0.c2 IN ())))<(((rt0.c2 IN (rt0.c0, rt0.c2)), ((rt0.c0) NOTNULL), (rt0.c0 IN ())))) DESC  NULLS FIRST, (+ ((rt0.c2 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN ((x'9311' IN ())) AND (((rt0.c2)IS(x''))));
SELECT COUNT(*) FROM rt0 WHERE (highlight(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))!=((rt0.c1))), ((rt0.c2)|(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))<>((rt0.c1))), ((rt0.c2)|(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (highlight(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))!=((rt0.c1))), ((rt0.c2)|(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)), (((rt0.c0))<>((rt0.c1))), ((rt0.c2)|(rt0.c2)), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ('bP{!j*T]d', vt0.c0))) AND ('6*')) WHERE (rt0.c0) ORDER BY (((((vt0.c1, vt0.c1, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c2))))>=(((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))) DESC, TRIM(DISTINCT x'd4be', ((rt0.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ('bP{!j*T]d', vt0.c0))) AND ('6*')) ORDER BY (((((vt0.c1, vt0.c1, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c2))))>=(((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))) DESC, TRIM(DISTINCT x'd4be', ((rt0.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ('bP{!j*T]d', vt0.c0))) AND ('6*')) WHERE (rt0.c0) ORDER BY (((((vt0.c1, vt0.c1, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c2))))>=(((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))) DESC, TRIM(DISTINCT x'd4be', ((rt0.c2) IS FALSE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON NULL RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ('bP{!j*T]d', vt0.c0))) AND ('6*')) ORDER BY (((((vt0.c1, vt0.c1, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c2))))>=(((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))) DESC, TRIM(DISTINCT x'd4be', ((rt0.c2) IS FALSE))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON NULL RIGHT OUTER JOIN v0 ON (((rt0.c0 IN (rt0.c1))) NOT BETWEEN ((vt0.c1 IN ('bP{!j*T]d', vt0.c0))) AND ('6*')) WHERE (rt0.c0) ORDER BY (((((vt0.c1, vt0.c1, rt0.c2))>=((rt0.c2, rt0.c0, rt0.c2))))>=(((((((((rt0.c1)OR(vt0.c1)))AND(rt0.c2)))OR(vt0.c1)))OR(vt0.c1)))) DESC, TRIM(DISTINCT x'd4be', ((rt0.c2) IS FALSE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')!=(rt0.c1)))>((((v0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')<>(rt0.c1)))>((((v0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')!=(rt0.c1)))>((((v0.c0))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((('')<>(rt0.c1)))>((((v0.c0))!=((rt0.c2)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((((('')!=(rt0.c1)))>((((v0.c0))<>((rt0.c2))))));
SELECT ALL * FROM rt0 WHERE (0.1254699243940549) ORDER BY (((((rt0.c2))==((rt0.c1))))<=(((((((((0.9977697194095695)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(0x7e9c2ac6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1254699243940549) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))==((rt0.c1))))<=(((((((((0.9977697194095695)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(0x7e9c2ac6))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0.1254699243940549) ORDER BY (((((rt0.c2))==((rt0.c1))))<=(((((((((0.9977697194095695)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(0x7e9c2ac6))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.1254699243940549) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2))==((rt0.c1))))<=(((((((((0.9977697194095695)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(0x7e9c2ac6))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (0.1254699243940549) ORDER BY (((((rt0.c2))==((rt0.c1))))<=(((((((((0.9977697194095695)OR(rt0.c2)))OR(rt0.c0)))OR(NULL)))OR(0x7e9c2ac6))))  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (NULL) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) LEFT OUTER JOIN v0 ON (~ (((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) WHERE (((CASE rt0.c1  WHEN 0X1ba82d94 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN '2067795377' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)==(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN 0x1ba82d94 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN '2067795377' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)=(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) LEFT OUTER JOIN v0 ON (~ (((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) LEFT OUTER JOIN v0 ON (~ (((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) WHERE (((CASE rt0.c1  WHEN 0X1ba82d94 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN '2067795377' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)==(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN 0x1ba82d94 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN '2067795377' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)=(rt0.c2))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) LEFT OUTER JOIN v0 ON (~ (((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST((rt0.c2 IN ()) AS REAL) LEFT OUTER JOIN v0 ON (~ (((rt0.c0) BETWEEN (NULL) AND (rt0.c2)))) WHERE (((CASE rt0.c1  WHEN 0X1ba82d94 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 WHEN '2067795377' THEN vt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)==(rt0.c2)));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY DESC, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY DESC, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY DESC, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (x'') ORDER BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY DESC, x''  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((('1e500' COLLATE RTRIM))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('1e500' COLLATE RTRIM))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((('1e500' COLLATE RTRIM))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('1e500' COLLATE RTRIM))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((('1e500' COLLATE RTRIM))>=((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))));
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((x'')-((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'')-((NOT (rt0.c0)))) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((x'')-((NOT (rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((x'')-((NOT (rt0.c0)))) DESC);
SELECT * FROM vt0, v0, rt0 WHERE (rt0.c2) ORDER BY ((x'')-((NOT (rt0.c0)))) DESC;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY (NOT ('0.24379767744780878' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT ('0.24379767744780878' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY (NOT ('0.24379767744780878' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT ('0.24379767744780878' COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((NOT ((rt0.c2 IN ())))) ORDER BY (NOT ('0.24379767744780878' COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE '0.20844371667469552' END COLLATE NOCASE) ORDER BY (((v0.c0 IN (v0.c0)))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 ELSE '0.20844371667469552' END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE '0.20844371667469552' END COLLATE NOCASE) ORDER BY (((v0.c0 IN (v0.c0)))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 ELSE '0.20844371667469552' END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0)))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 ELSE '0.20844371667469552' END COLLATE NOCASE) ORDER BY (((v0.c0 IN (v0.c0)))<<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(0.898592373425796 AS REAL)) ORDER BY LIKELIHOOD(((((rt0.c2)AND(vt0.c1)))AND(vt0.c1)), 0.3022322827817572)  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c1)<(NULL))))  NULLS FIRST, (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.898592373425796 AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LIKELIHOOD(((((rt0.c2)AND(vt0.c1)))AND(vt0.c1)), 0.3022322827817572)  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c1)<(NULL))))  NULLS FIRST, (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(0.898592373425796 AS REAL)) ORDER BY LIKELIHOOD(((((rt0.c2)AND(vt0.c1)))AND(vt0.c1)), 0.3022322827817572)  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c1)<(NULL))))  NULLS FIRST, (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.898592373425796 AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY LIKELIHOOD(((((rt0.c2)AND(vt0.c1)))AND(vt0.c1)), 0.3022322827817572)  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c1)<(NULL))))  NULLS FIRST, (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CAST(0.898592373425796 AS REAL)) ORDER BY LIKELIHOOD(((((rt0.c2)AND(vt0.c1)))AND(vt0.c1)), 0.3022322827817572)  NULLS FIRST, ((vt0.c1 COLLATE RTRIM) NOT BETWEEN ((- (vt0.c0))) AND (((vt0.c1)<(NULL))))  NULLS FIRST, (CAST(rt0.c0 AS REAL) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (NULL COLLATE RTRIM) ORDER BY x'' DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (rt0.c1);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN '2124163782' ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE vt0.c0  WHEN vt0.c0 THEN '2124163782' ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN '2124163782' ELSE rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((ABS(CASE vt0.c0  WHEN vt0.c0 THEN '2124163782' ELSE rt0.c1 END)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (ABS(CASE vt0.c0  WHEN vt0.c0 THEN '2124163782' ELSE rt0.c1 END));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((UPPER(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((UPPER(rt0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(rt0.c0)) NOTNULL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((UPPER(rt0.c0)) NOTNULL));
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0  NULLS FIRST, rt0.c1, 'za';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0  NULLS FIRST, rt0.c1, 'za');
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0  NULLS FIRST, rt0.c1, 'za';
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY v0.c0  NULLS FIRST, rt0.c1, 'za');
SELECT COUNT(*) FROM v0, rt0 WHERE (((rt0.c0 COLLATE NOCASE) NOT NULL)) ORDER BY v0.c0  NULLS FIRST, rt0.c1, 'za';
SELECT ALL * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((rt0.c0)/(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)/(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((rt0.c0)/(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((rt0.c0)/(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END ASC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (vt0.c0) ORDER BY CASE WHEN ((rt0.c0)/(rt0.c1)) THEN CAST(rt0.c2 AS REAL) END ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2))==((rt0.c2))))OR((NOT (rt0.c2)))))OR((vt0.c1 IN (rt0.c1))))) ORDER BY ((((NULL)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))=((rt0.c2))))OR((NOT (rt0.c2)))))OR((vt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2))==((rt0.c2))))OR((NOT (rt0.c2)))))OR((vt0.c1 IN (rt0.c1))))) ORDER BY ((((NULL)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c2))=((rt0.c2))))OR((NOT (rt0.c2)))))OR((vt0.c1 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((NULL)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((rt0.c2))==((rt0.c2))))OR((NOT (rt0.c2)))))OR((vt0.c1 IN (rt0.c1))))) ORDER BY ((((NULL)AND(((vt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 2.011391371E9)))))=((((vt0.c1)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 2.011391371E9)))))=((((vt0.c1)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 2.011391371E9)))))=((((vt0.c1)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 2.011391371E9)))))=((((vt0.c1)GLOB(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(vt0.c1)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1, vt0.c0, vt0.c0))<>((vt0.c0, vt0.c0, 2.011391371E9)))))=((((vt0.c1)GLOB(vt0.c1)))))) ORDER BY ((LIKELY(vt0.c1)) IS TRUE) DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1)>(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1)>(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1)>(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1)>(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c1 AS TEXT))AND(((rt0.c1)>(rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (v0.c0 IN ())  WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c1))>=((rt0.c2))) END) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((('-1234192054') BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c1))>=((rt0.c2))) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((('-1234192054') BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (v0.c0 IN ())  WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c1))>=((rt0.c2))) END) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((('-1234192054') BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (v0.c0 IN ())  WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c1))>=((rt0.c2))) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((('-1234192054') BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE (v0.c0 IN ())  WHEN ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(rt0.c1)) THEN (((vt0.c1))>=((rt0.c2))) END) ORDER BY (((rt0.c2)) NOT BETWEEN (((rt0.c2 IN ()))) AND (((('-1234192054') BETWEEN (vt0.c1) AND (rt0.c1)))))  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c0) ISNULL))&(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))&(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c0) ISNULL))&(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) ISNULL))&(SQLITE_COMPILEOPTION_GET(rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((v0.c0) ISNULL))&(SQLITE_COMPILEOPTION_GET(rt0.c2))));
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((- (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((- (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST);
SELECT * FROM v0 NATURAL JOIN vt0 WHERE ((- (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 END))) ORDER BY ((vt0.c1 COLLATE NOCASE) NOTNULL)  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS BLOB)) ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((vt0.c1)<>(vt0.c0)))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((vt0.c1)<>(vt0.c0)))))AND((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM v0, vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS BLOB)) ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((vt0.c1)<>(vt0.c0)))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((CAST(v0.c0 AS TEXT))OR(((vt0.c1)<>(vt0.c0)))))AND((vt0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN (- (v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c1)<=(rt0.c1)) END) ORDER BY rt0.c1, (((v0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c1)<=(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c1, (((v0.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN (- (v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c1)<=(rt0.c1)) END) ORDER BY rt0.c1, (((v0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c1)<=(rt0.c1)) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY rt0.c1, (((v0.c0) NOT NULL) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN (- (v0.c0)) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0)) ELSE ((vt0.c1)<=(rt0.c1)) END) ORDER BY rt0.c1, (((v0.c0) NOT NULL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ')' RIGHT OUTER JOIN v0 ON CASE (((rt0.c2))>=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c2) ISNULL) THEN (~ (rt0.c1)) WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c1))>=((vt0.c1))) ELSE vt0.c1 COLLATE RTRIM END WHERE (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) BETWEEN ('1947269895') AND (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) BETWEEN ('1947269895') AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ')' RIGHT OUTER JOIN v0 ON CASE (((rt0.c2))>=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c2) ISNULL) THEN (~ (rt0.c1)) WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c1))>=((vt0.c1))) ELSE vt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ')' RIGHT OUTER JOIN v0 ON CASE (((rt0.c2))>=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c2) ISNULL) THEN (~ (rt0.c1)) WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c1))>=((vt0.c1))) ELSE vt0.c1 COLLATE RTRIM END WHERE (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) BETWEEN ('1947269895') AND (CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) BETWEEN ('1947269895') AND (CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ')' RIGHT OUTER JOIN v0 ON CASE (((rt0.c2))>=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c2) ISNULL) THEN (~ (rt0.c1)) WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c1))>=((vt0.c1))) ELSE vt0.c1 COLLATE RTRIM END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ')' RIGHT OUTER JOIN v0 ON CASE (((rt0.c2))>=((rt0.c1)))  WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c2) ISNULL) THEN (~ (rt0.c1)) WHEN CAST(rt0.c0 AS TEXT) THEN (((rt0.c1))>=((vt0.c1))) ELSE vt0.c1 COLLATE RTRIM END WHERE (((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) BETWEEN ('1947269895') AND (CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (CAST('1527210511' AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST('1527210511' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CAST('1527210511' AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST('1527210511' AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL));
SELECT ALL * FROM rt0 WHERE (CAST('1527210511' AS REAL)) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT NULL);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END IN ())) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST, ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((- (0.7258561265267995)))) AND ((0.056358499693523245))) WHERE ((((v0.c0)OR(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)OR(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((- (0.7258561265267995)))) AND ((0.056358499693523245))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((- (0.7258561265267995)))) AND ((0.056358499693523245))) WHERE ((((v0.c0)OR(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)OR(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x'')))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((- (0.7258561265267995)))) AND ((0.056358499693523245))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((vt0.c1)) NOT BETWEEN (((- (0.7258561265267995)))) AND ((0.056358499693523245))) WHERE ((((v0.c0)OR(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((x''))))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN ((rt0.c2)>(rt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 1481646957 ELSE 0.5181129746271799 END END INNER JOIN v0 ON CAST((((v0.c0, -1831555312, '1467487379'))<=((vt0.c1, rt0.c1, rt0.c0))) AS BLOB) WHERE ((NOT (vt0.c1)) COLLATE NOCASE) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN ((rt0.c2)>(rt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 1481646957 ELSE 0.5181129746271799 END END INNER JOIN v0 ON CAST((((v0.c0, -1831555312, '1467487379'))<=((vt0.c1, rt0.c1, rt0.c0))) AS BLOB) ORDER BY NULL DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN ((rt0.c2)>(rt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 1481646957 ELSE 0.5181129746271799 END END INNER JOIN v0 ON CAST((((v0.c0, -1831555312, '1467487379'))<=((vt0.c1, rt0.c1, rt0.c0))) AS BLOB) WHERE ((NOT (vt0.c1)) COLLATE NOCASE) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE WHEN rt0.c0 THEN ((rt0.c2)>(rt0.c2)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN v0.c0 THEN 1481646957 ELSE 0.5181129746271799 END END INNER JOIN v0 ON CAST((((v0.c0, -1831555312, '1467487379'))<=((vt0.c1, rt0.c1, rt0.c0))) AS BLOB) ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(rt0.c0 AS REAL))/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))/(rt0.c2))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(rt0.c0 AS REAL))/(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c0 AS REAL))/(rt0.c2))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(rt0.c0 AS REAL))/(rt0.c2)));
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 NATURAL JOIN v0);
SELECT * FROM vt0, rt0 NATURAL JOIN v0 WHERE (((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE NOCASE);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)<<(rt0.c1)))&((rt0.c2 IN (vt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))&((rt0.c2 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)<<(rt0.c1)))&((rt0.c2 IN (vt0.c0, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<<(rt0.c1)))&((rt0.c2 IN (vt0.c0, rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0)<<(rt0.c1)))&((rt0.c2 IN (vt0.c0, rt0.c2)))));
SELECT * FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY ((((((((((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c1 AS INTEGER))))AND(NULL)))OR(LOWER(vt0.c0))))AND((('-1049233213')<=(vt0.c1)))))AND(NULLIF(vt0.c0, vt0.c1))))AND((vt0.c0 IN (vt0.c0)))), (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, (((vt0.c0 COLLATE BINARY, TYPEOF(DISTINCT vt0.c1), ((vt0.c0)LIKE(vt0.c0))))==(((vt0.c1 IN ()), vt0.c1, (vt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c1 AS INTEGER))))AND(NULL)))OR(LOWER(vt0.c0))))AND((('-1049233213')<=(vt0.c1)))))AND(NULLIF(vt0.c0, vt0.c1))))AND((vt0.c0 IN (vt0.c0)))), (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, (((vt0.c0 COLLATE BINARY, TYPEOF(DISTINCT vt0.c1), ((vt0.c0)LIKE(vt0.c0))))=(((vt0.c1 IN ()), vt0.c1, (vt0.c1 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY ((((((((((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c1 AS INTEGER))))AND(NULL)))OR(LOWER(vt0.c0))))AND((('-1049233213')<=(vt0.c1)))))AND(NULLIF(vt0.c0, vt0.c1))))AND((vt0.c0 IN (vt0.c0)))), (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, (((vt0.c0 COLLATE BINARY, TYPEOF(DISTINCT vt0.c1), ((vt0.c0)LIKE(vt0.c0))))==(((vt0.c1 IN ()), vt0.c1, (vt0.c1 IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c1 AS INTEGER))))AND(NULL)))OR(LOWER(vt0.c0))))AND((('-1049233213')<=(vt0.c1)))))AND(NULLIF(vt0.c0, vt0.c1))))AND((vt0.c0 IN (vt0.c0)))), (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, (((vt0.c0 COLLATE BINARY, TYPEOF(DISTINCT vt0.c1), ((vt0.c0)LIKE(vt0.c0))))=(((vt0.c1 IN ()), vt0.c1, (vt0.c1 IN ()))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (ABS(DISTINCT (vt0.c0 IN ()))) ORDER BY ((((((((((((CAST(vt0.c1 AS NUMERIC))OR(CAST(vt0.c1 AS INTEGER))))AND(NULL)))OR(LOWER(vt0.c0))))AND((('-1049233213')<=(vt0.c1)))))AND(NULLIF(vt0.c0, vt0.c1))))AND((vt0.c0 IN (vt0.c0)))), (+ (((vt0.c0) IS FALSE))) ASC  NULLS FIRST, (((vt0.c0 COLLATE BINARY, TYPEOF(DISTINCT vt0.c1), ((vt0.c0)LIKE(vt0.c0))))==(((vt0.c1 IN ()), vt0.c1, (vt0.c1 IN ()))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR('-1112249712')))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))))AND(rt0.c0)))OR(((rt0.c2) IS FALSE))))AND(((('-567447972')) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR('-1112249712')))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))))AND(rt0.c0)))OR(((rt0.c2) IS FALSE))))AND(((('-567447972')) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR('-1112249712')))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))))AND(rt0.c0)))OR(((rt0.c2) IS FALSE))))AND(((('-567447972')) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR('-1112249712')))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))))AND(rt0.c0)))OR(((rt0.c2) IS FALSE))))AND(((('-567447972')) BETWEEN ((v0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((((CASE WHEN v0.c0 THEN rt0.c1 END)AND(((((((((rt0.c0)OR('-1112249712')))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))))AND(rt0.c0)))OR(((rt0.c2) IS FALSE))))AND(((('-567447972')) BETWEEN ((v0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) ORDER BY (NOT (v0.c0)) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) ASC  NULLS LAST, v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) ORDER BY (NOT (v0.c0)) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)LIKE(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (NOT (v0.c0)) ASC  NULLS LAST, v0.c0  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0))) IS FALSE)) ORDER BY (NOT (v0.c0)) ASC  NULLS LAST, v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST((~ (vt0.c0)) AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c1))==((NULL, rt0.c2, rt0.c1))))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c1))=((NULL, rt0.c2, rt0.c1))))) AND ((((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c1))==((NULL, rt0.c2, rt0.c1))))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c1))=((NULL, rt0.c2, rt0.c1))))) AND ((((rt0.c1)OR(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN (((((rt0.c2, rt0.c1, rt0.c1))==((NULL, rt0.c2, rt0.c1))))) AND ((((rt0.c1)OR(rt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c1)&(x''))  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) THEN HEX(rt0.c0) ELSE 0.7011594156184333 END) ORDER BY QUOTE(((rt0.c0) BETWEEN (vt0.c0) AND (0.20844371667469552))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)&(x''))  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) THEN HEX(rt0.c0) ELSE 0.7011594156184333 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY QUOTE(((rt0.c0) BETWEEN (vt0.c0) AND (0.20844371667469552))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c1)&(x''))  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) THEN HEX(rt0.c0) ELSE 0.7011594156184333 END) ORDER BY QUOTE(((rt0.c0) BETWEEN (vt0.c0) AND (0.20844371667469552))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)&(x''))  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) THEN HEX(rt0.c0) ELSE 0.7011594156184333 END) IS TRUE)  as count FROM vt0, rt0 ORDER BY QUOTE(((rt0.c0) BETWEEN (vt0.c0) AND (0.20844371667469552))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE ((vt0.c1)&(x''))  WHEN (((rt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))) THEN HEX(rt0.c0) ELSE 0.7011594156184333 END) ORDER BY QUOTE(((rt0.c0) BETWEEN (vt0.c0) AND (0.20844371667469552))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))>>((rt0.c2 IN ()))) FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY ((CASE WHEN 0xffffffffa61f8dd4 THEN 0.8255161876361806 END) NOT NULL), (((vt0.c1) NOTNULL) IN (CASE WHEN vt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END, (NOT (vt0.c1))))  NULLS LAST, (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))|((((rt0.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))>>((rt0.c2 IN ()))) FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) ORDER BY ((CASE WHEN 0Xffffffffa61f8dd4 THEN 0.8255161876361806 END) NOT NULL), (((vt0.c1) NOTNULL) IN (CASE WHEN vt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END, (NOT (vt0.c1))))  NULLS LAST, (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))|((((rt0.c0))<((rt0.c1))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))>>((rt0.c2 IN ()))) FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) WHERE ((((rt0.c0 IN ())) ISNULL)) ORDER BY ((CASE WHEN 0xffffffffa61f8dd4 THEN 0.8255161876361806 END) NOT NULL), (((vt0.c1) NOTNULL) IN (CASE WHEN vt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END, (NOT (vt0.c1))))  NULLS LAST, (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))|((((rt0.c0))<((rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c0)))>>((rt0.c2 IN ()))) FULL OUTER JOIN vt0 ON ((v0.c0) IS TRUE) ORDER BY ((CASE WHEN 0Xffffffffa61f8dd4 THEN 0.8255161876361806 END) NOT NULL), (((vt0.c1) NOTNULL) IN (CASE WHEN vt0.c1 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c0 END, (NOT (vt0.c1))))  NULLS LAST, (((((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))|((((rt0.c0))<((rt0.c1))))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0)OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END, CASE vt0.c1  WHEN x'' THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0)OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END, CASE vt0.c1  WHEN x'' THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0)OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END, CASE vt0.c1  WHEN x'' THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0)OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END, CASE vt0.c1  WHEN x'' THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))) AS NUMERIC)) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1)))  WHEN ((rt0.c0)OR(rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END END, CASE vt0.c1  WHEN x'' THEN v0.c0 ELSE vt0.c1 END COLLATE RTRIM COLLATE NOCASE;
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c2);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0))))) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c2, 0.10661112245722892)  WHEN ((vt0.c0) NOTNULL) THEN (+ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c2, 0.10661112245722892)  WHEN ((vt0.c0) NOTNULL) THEN (+ (NULL)) END);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0))))) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c2, 0.10661112245722892)  WHEN ((vt0.c0) NOTNULL) THEN (+ (NULL)) END;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c2, 0.10661112245722892)  WHEN ((vt0.c0) NOTNULL) THEN (+ (NULL)) END);
SELECT ALL * FROM vt0, rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0))))) ORDER BY CASE LIKELIHOOD(DISTINCT rt0.c2, 0.10661112245722892)  WHEN ((vt0.c0) NOTNULL) THEN (+ (NULL)) END;
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))) WHERE (v0.c0) ORDER BY (((rt0.c2 IN (vt0.c1)))-(vt0.c0)) ASC  NULLS LAST, ((((CAST(rt0.c1 AS NUMERIC))OR(NULL)))OR(CASE WHEN vt0.c1 THEN rt0.c1 END)) ASC, CASE v0.c0  WHEN (~ (rt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE (((v0.c0))>=((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c1))=((vt0.c1))))) ORDER BY (((rt0.c2 IN (vt0.c1)))-(vt0.c0)) ASC  NULLS LAST, ((((CAST(rt0.c1 AS NUMERIC))OR(NULL)))OR(CASE WHEN vt0.c1 THEN rt0.c1 END)) ASC, CASE v0.c0  WHEN (~ (rt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE (((v0.c0))>=((v0.c0))) END ASC);
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))) WHERE (v0.c0) ORDER BY (((rt0.c2 IN (vt0.c1)))-(vt0.c0)) ASC  NULLS LAST, ((((CAST(rt0.c1 AS NUMERIC))OR(NULL)))OR(CASE WHEN vt0.c1 THEN rt0.c1 END)) ASC, CASE v0.c0  WHEN (~ (rt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE (((v0.c0))>=((v0.c0))) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c1))=((vt0.c1))))) ORDER BY (((rt0.c2 IN (vt0.c1)))-(vt0.c0)) ASC  NULLS LAST, ((((CAST(rt0.c1 AS NUMERIC))OR(NULL)))OR(CASE WHEN vt0.c1 THEN rt0.c1 END)) ASC, CASE v0.c0  WHEN (~ (rt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE (((v0.c0))>=((v0.c0))) END ASC);
SELECT * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- ((((vt0.c1))==((vt0.c1))))) WHERE (v0.c0) ORDER BY (((rt0.c2 IN (vt0.c1)))-(vt0.c0)) ASC  NULLS LAST, ((((CAST(rt0.c1 AS NUMERIC))OR(NULL)))OR(CASE WHEN vt0.c1 THEN rt0.c1 END)) ASC, CASE v0.c0  WHEN (~ (rt0.c1)) THEN CAST(vt0.c0 AS INTEGER) ELSE (((v0.c0))>=((v0.c0))) END ASC;
SELECT ALL * FROM v0 WHERE ((((((~ (v0.c0)))AND(v0.c0)))AND('141027100')));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))AND(v0.c0)))AND('141027100'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((~ (v0.c0)))AND(v0.c0)))AND('141027100')));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c0)))AND(v0.c0)))AND('141027100'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((~ (v0.c0)))AND(v0.c0)))AND('141027100')));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ABS(v0.c0);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(v0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ABS(v0.c0);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY ABS(v0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c1 AS REAL) COLLATE RTRIM) ORDER BY ABS(v0.c0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((v0.c0)-(rt0.c0))) AND ('1844365104')));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((v0.c0)-(rt0.c0))) AND ('1844365104'))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((v0.c0)-(rt0.c0))) AND ('1844365104')));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((v0.c0)-(rt0.c0))) AND ('1844365104'))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((CAST(v0.c0 AS BLOB)) NOT BETWEEN (((v0.c0)-(rt0.c0))) AND ('1844365104')));
SELECT * FROM v0 WHERE (NULL) ORDER BY UPPER(DISTINCT v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT v0.c0 COLLATE NOCASE));
SELECT * FROM v0 WHERE (NULL) ORDER BY UPPER(DISTINCT v0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY UPPER(DISTINCT v0.c0 COLLATE NOCASE));
SELECT * FROM v0 WHERE (NULL) ORDER BY UPPER(DISTINCT v0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (rt0.c2);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<>(((((rt0.c0)OR(vt0.c1)))AND(rt0.c0))))) ORDER BY CASE ((x'c8d0') IS TRUE)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END ELSE (((vt0.c1))<>((vt0.c1))) END ASC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=(((((rt0.c0)OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((x'c8d0') IS TRUE)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END ELSE (((vt0.c1))<>((vt0.c1))) END ASC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<>(((((rt0.c0)OR(vt0.c1)))AND(rt0.c0))))) ORDER BY CASE ((x'c8d0') IS TRUE)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END ELSE (((vt0.c1))<>((vt0.c1))) END ASC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)!=(((((rt0.c0)OR(vt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((x'c8d0') IS TRUE)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END ELSE (((vt0.c1))<>((vt0.c1))) END ASC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((vt0.c1)<>(((((rt0.c0)OR(vt0.c1)))AND(rt0.c0))))) ORDER BY CASE ((x'c8d0') IS TRUE)  WHEN (vt0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 ELSE x'' END ELSE (((vt0.c1))<>((vt0.c1))) END ASC, (((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)/(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)/(vt0.c1))) AND (((vt0.c0)>>(vt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)/(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)/(vt0.c1))) AND (((vt0.c0)>>(vt0.c1)))));
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1 COLLATE NOCASE) IS TRUE) WHERE (((NOT (vt0.c0)) IN ())) ORDER BY ((CAST(v0.c0 AS NUMERIC)) BETWEEN (((v0.c0)/(vt0.c1))) AND (((vt0.c0)>>(vt0.c1))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY 0.9014152847899449;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY 0.9014152847899449);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY 0.9014152847899449;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY 0.9014152847899449);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) IS TRUE)) ORDER BY 0.9014152847899449;
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)<>((((rt0.c0))!=((rt0.c1)))))) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END)<>((((rt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)<>((((rt0.c0))!=((rt0.c1)))))) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c1 THEN rt0.c0 END)<>((((rt0.c0))!=((rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c0 END)<>((((rt0.c0))!=((rt0.c1)))))) ORDER BY (~ (CAST(rt0.c1 AS TEXT)))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((rt0.c0, vt0.c1, rt0.c1))<=((vt0.c0, v0.c0, vt0.c0)))))) ORDER BY ((NULL) IS TRUE), CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC), (((rt0.c0)<<(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0, vt0.c1, rt0.c1))<=((vt0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((NULL) IS TRUE), CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC), (((rt0.c0)<<(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((rt0.c0, vt0.c1, rt0.c1))<=((vt0.c0, v0.c0, vt0.c0)))))) ORDER BY ((NULL) IS TRUE), CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC), (((rt0.c0)<<(vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((((rt0.c0, vt0.c1, rt0.c1))<=((vt0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((NULL) IS TRUE), CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC), (((rt0.c0)<<(vt0.c0)) IN ()) DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((- ((((rt0.c0, vt0.c1, rt0.c1))<=((vt0.c0, v0.c0, vt0.c0)))))) ORDER BY ((NULL) IS TRUE), CAST(((((rt0.c1)AND(v0.c0)))OR(rt0.c1)) AS NUMERIC), (((rt0.c0)<<(vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((0.17652794070314148) NOTNULL) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((0.17652794070314148) NOTNULL) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (- (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((0.17652794070314148) NOTNULL) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (- (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((0.17652794070314148) NOTNULL) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (- (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN vt0.c1 THEN ((0.17652794070314148) NOTNULL) WHEN CAST(vt0.c1 AS BLOB) THEN ((vt0.c1) IS TRUE) WHEN vt0.c1 COLLATE NOCASE THEN (- (vt0.c1)) END);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL))));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0 IN (v0.c0))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(v0.c0 AS REAL)));
SELECT * FROM v0, rt0, vt0 WHERE (CASE rt0.c1  WHEN 0Xffffffffa00e82ff THEN (rt0.c1 IN ()) WHEN UPPER(vt0.c1) THEN ((rt0.c2)|(v0.c0)) WHEN (+ (v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c1 AS INTEGER) END) ORDER BY ((~ (rt0.c2)) IN ()) DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN 0Xffffffffa00e82ff THEN (rt0.c1 IN ()) WHEN UPPER(vt0.c1) THEN ((rt0.c2)|(v0.c0)) WHEN (+ (v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((~ (rt0.c2)) IN ()) DESC, vt0.c0 DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (CASE rt0.c1  WHEN 0Xffffffffa00e82ff THEN (rt0.c1 IN ()) WHEN UPPER(vt0.c1) THEN ((rt0.c2)|(v0.c0)) WHEN (+ (v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c1 AS INTEGER) END) ORDER BY ((~ (rt0.c2)) IN ()) DESC, vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN 0Xffffffffa00e82ff THEN (rt0.c1 IN ()) WHEN UPPER(vt0.c1) THEN ((rt0.c2)|(v0.c0)) WHEN (+ (v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c1 AS INTEGER) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((~ (rt0.c2)) IN ()) DESC, vt0.c0 DESC  NULLS LAST);
SELECT * FROM v0, rt0, vt0 WHERE (CASE rt0.c1  WHEN 0Xffffffffa00e82ff THEN (rt0.c1 IN ()) WHEN UPPER(vt0.c1) THEN ((rt0.c2)|(v0.c0)) WHEN (+ (v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE CAST(vt0.c1 AS INTEGER) END) ORDER BY ((~ (rt0.c2)) IN ()) DESC, vt0.c0 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (('-1609661697' IN ())) ORDER BY ((((vt0.c1)IS(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((('-1609661697' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)IS(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (('-1609661697' IN ())) ORDER BY ((((vt0.c1)IS(vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((('-1609661697' IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)IS(vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE (('-1609661697' IN ())) ORDER BY ((((vt0.c1)IS(vt0.c0))) ISNULL);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(0X508eac5b)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(0x508eac5b)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(0X508eac5b)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(0x508eac5b)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS(0X508eac5b)) COLLATE BINARY);
SELECT ALL * FROM v0, vt0 WHERE ((CASE v0.c0  WHEN x'' THEN v0.c0 END IN ())) ORDER BY ((((vt0.c0)%(v0.c0))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN x'' THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)%(v0.c0))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE ((CASE v0.c0  WHEN x'' THEN v0.c0 END IN ())) ORDER BY ((((vt0.c0)%(v0.c0))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN x'' THEN v0.c0 END IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)%(v0.c0))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE ((CASE v0.c0  WHEN x'' THEN v0.c0 END IN ())) ORDER BY ((((vt0.c0)%(v0.c0))) NOT BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (((vt0.c1)IS NOT(vt0.c1))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c0 COLLATE NOCASE)||((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||((- (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c0 COLLATE NOCASE)||((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||((- (rt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((v0.c0 COLLATE NOCASE)||((- (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND (LAST_INSERT_ROWID())));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND (LAST_INSERT_ROWID()))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) AND (LAST_INSERT_ROWID())));
SELECT * FROM rt0, v0 WHERE (((('/)qY' IN (rt0.c0, rt0.c1)))|((((rt0.c2)) BETWEEN ((x'7729')) AND ((rt0.c1)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((('/)qY' IN (rt0.c0, rt0.c1)))|((((rt0.c2)) BETWEEN ((x'7729')) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT * FROM rt0, v0 WHERE (((('/)qY' IN (rt0.c0, rt0.c1)))|((((rt0.c2)) BETWEEN ((x'7729')) AND ((rt0.c1)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ((((('/)qY' IN (rt0.c0, rt0.c1)))|((((rt0.c2)) BETWEEN ((x'7729')) AND ((rt0.c1)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0);
SELECT * FROM rt0, v0 WHERE (((('/)qY' IN (rt0.c0, rt0.c1)))|((((rt0.c2)) BETWEEN ((x'7729')) AND ((rt0.c1)))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(NULL AS NUMERIC))>>(((rt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))>>(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(NULL AS NUMERIC))>>(((rt0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS NUMERIC))>>(((rt0.c0)==(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(NULL AS NUMERIC))>>(((rt0.c0)=(rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))), ((vt0.c0) IS FALSE), vt0.c0)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1))), (- (vt0.c0)))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))+(UPPER(DISTINCT 0.8075853106690852)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))), ((vt0.c0) IS FALSE), vt0.c0)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1))), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c0)))+(UPPER(DISTINCT 0.8075853106690852))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))), ((vt0.c0) IS FALSE), vt0.c0)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1))), (- (vt0.c0)))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))+(UPPER(DISTINCT 0.8075853106690852)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))), ((vt0.c0) IS FALSE), vt0.c0)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1))), (- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c0)))+(UPPER(DISTINCT 0.8075853106690852))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((x''))), ((vt0.c0) IS FALSE), vt0.c0)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1))), (- (vt0.c0)))))) ORDER BY ((((vt0.c1)<=(vt0.c0)))+(UPPER(DISTINCT 0.8075853106690852)));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 WHERE (CASE DATETIME(v0.c0, rt0.c0, rt0.c2)  WHEN (((rt0.c2, v0.c0, v0.c0))>=((v0.c0, rt0.c2, rt0.c0))) THEN ((rt0.c2)|(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE DATETIME(v0.c0, rt0.c0, rt0.c2)  WHEN (((rt0.c2, v0.c0, v0.c0))>=((v0.c0, rt0.c2, rt0.c0))) THEN ((rt0.c2)|(rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 WHERE (CASE DATETIME(v0.c0, rt0.c0, rt0.c2)  WHEN (((rt0.c2, v0.c0, v0.c0))>=((v0.c0, rt0.c2, rt0.c0))) THEN ((rt0.c2)|(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE DATETIME(v0.c0, rt0.c0, rt0.c2)  WHEN (((rt0.c2, v0.c0, v0.c0))>=((v0.c0, rt0.c2, rt0.c0))) THEN ((rt0.c2)|(rt0.c2)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON rt0.c2 WHERE (CASE DATETIME(v0.c0, rt0.c0, rt0.c2)  WHEN (((rt0.c2, v0.c0, v0.c0))>=((v0.c0, rt0.c2, rt0.c0))) THEN ((rt0.c2)|(rt0.c2)) END);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (CAST(((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0.5181129746271799 WHEN ((v0.c0) NOTNULL) THEN LAST_INSERT_ROWID() END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0.5181129746271799 WHEN ((v0.c0) NOTNULL) THEN LAST_INSERT_ROWID() END);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0.5181129746271799 WHEN ((v0.c0) NOTNULL) THEN LAST_INSERT_ROWID() END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0.5181129746271799 WHEN ((v0.c0) NOTNULL) THEN LAST_INSERT_ROWID() END);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0)LIKE(v0.c0)) AS INTEGER)) ORDER BY CASE WHEN v0.c0 THEN ((v0.c0) IS FALSE) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN 0.5181129746271799 WHEN ((v0.c0) NOTNULL) THEN LAST_INSERT_ROWID() END;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c0) IS FALSE))AND((~ (v0.c0))))) ORDER BY highlight((vt0.c0 IN ()), rt0.c1 COLLATE BINARY, vt0.c1 COLLATE BINARY, ((rt0.c1)AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY highlight((vt0.c0 IN ()), rt0.c1 COLLATE BINARY, vt0.c1 COLLATE BINARY, ((rt0.c1)AND(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c0) IS FALSE))AND((~ (v0.c0))))) ORDER BY highlight((vt0.c0 IN ()), rt0.c1 COLLATE BINARY, vt0.c1 COLLATE BINARY, ((rt0.c1)AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE))AND((~ (v0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY highlight((vt0.c0 IN ()), rt0.c1 COLLATE BINARY, vt0.c1 COLLATE BINARY, ((rt0.c1)AND(v0.c0))) ASC);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c0)LIKE(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c0)LIKE(rt0.c2))))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0 NATURAL JOIN vt0 WHERE (((CASE WHEN vt0.c0 THEN rt0.c2 END) BETWEEN (((rt0.c2) IS TRUE)) AND (((v0.c0)LIKE(rt0.c2)))));
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c2 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNLIKELY(rt0.c1) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(NULL)))AND(((rt0.c2)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(rt0.c1) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(NULL)))AND(((rt0.c2)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNLIKELY(rt0.c1) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(NULL)))AND(((rt0.c2)LIKE(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UNLIKELY(rt0.c1) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(NULL)))AND(((rt0.c2)LIKE(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN UNLIKELY(rt0.c1) THEN (- (rt0.c2)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END END) ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(NULL)))AND(((rt0.c2)LIKE(rt0.c0)))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((vt0.c1)-(vt0.c0)) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_USED(((x'505e') NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_COMPILEOPTION_USED(((x'505e') NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((vt0.c1)-(vt0.c0)) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_USED(((x'505e') NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)-(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_COMPILEOPTION_USED(((x'505e') NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((vt0.c1)-(vt0.c0)) AS REAL)) ORDER BY SQLITE_COMPILEOPTION_USED(((x'505e') NOT BETWEEN (v0.c0) AND (v0.c0)))  NULLS FIRST;
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(vt0.c0, vt0.c1))+(NULL)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c1))+(NULL))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(vt0.c0, vt0.c1))+(NULL)));
SELECT SUM(count) FROM (SELECT ((((NULLIF(vt0.c0, vt0.c1))+(NULL))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(vt0.c0, vt0.c1))+(NULL)));
SELECT * FROM v0 INNER JOIN vt0 ON 0X540770da WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0x540770da);
SELECT * FROM v0 INNER JOIN vt0 ON 0X540770da WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0x540770da);
SELECT * FROM v0 INNER JOIN vt0 ON 0X540770da WHERE (NULL);
SELECT * FROM vt0, v0, rt0 WHERE (HEX(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c1) ISNULL))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (HEX(((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ((HEX(((rt0.c1) ISNULL))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (HEX(((rt0.c1) ISNULL)));
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c0, v0.c0))<(v0.c0))) ORDER BY CAST(((v0.c0)=(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKE(v0.c0, v0.c0))<(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)==(v0.c0)) AS TEXT));
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c0, v0.c0))<(v0.c0))) ORDER BY CAST(((v0.c0)=(v0.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((LIKE(v0.c0, v0.c0))<(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)==(v0.c0)) AS TEXT));
SELECT ALL * FROM v0 WHERE (((LIKE(v0.c0, v0.c0))<(v0.c0))) ORDER BY CAST(((v0.c0)=(v0.c0)) AS TEXT);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('-2014666236') AND (v0.c0)))>>(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN '141027100' THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) WHERE (CASE (+ (vt0.c1))  WHEN ((v0.c0)&(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c1 END) ORDER BY '0.9510882826873404' ASC  NULLS LAST, IFNULL(NULL, vt0.c1) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c1))  WHEN ((v0.c0)&(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c1 END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('-2014666236') AND (v0.c0)))>>(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN '141027100' THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY '0.9510882826873404' ASC  NULLS LAST, IFNULL(NULL, vt0.c1) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('-2014666236') AND (v0.c0)))>>(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN '141027100' THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) WHERE (CASE (+ (vt0.c1))  WHEN ((v0.c0)&(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c1 END) ORDER BY '0.9510882826873404' ASC  NULLS LAST, IFNULL(NULL, vt0.c1) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c1))  WHEN ((v0.c0)&(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c1 END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('-2014666236') AND (v0.c0)))>>(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN '141027100' THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) ORDER BY '0.9510882826873404' ASC  NULLS LAST, IFNULL(NULL, vt0.c1) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c0 FULL OUTER JOIN rt0 ON ((((rt0.c0) NOT BETWEEN ('-2014666236') AND (v0.c0)))>>(CASE rt0.c1  WHEN vt0.c1 THEN rt0.c2 WHEN '141027100' THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 END)) WHERE (CASE (+ (vt0.c1))  WHEN ((v0.c0)&(vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE vt0.c1 END) ORDER BY '0.9510882826873404' ASC  NULLS LAST, IFNULL(NULL, vt0.c1) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))  WHEN ((vt0.c1)GLOB(v0.c0)) THEN ((NULL)<(v0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))  WHEN ((vt0.c1)GLOB(v0.c0)) THEN ((NULL)<(v0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))  WHEN ((vt0.c1)GLOB(v0.c0)) THEN ((NULL)<(v0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))  WHEN ((vt0.c1)GLOB(v0.c0)) THEN ((NULL)<(v0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE BINARY) ORDER BY CASE ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))  WHEN ((vt0.c1)GLOB(v0.c0)) THEN ((NULL)<(v0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 ELSE v0.c0 END END DESC;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TRIM(rt0.c0) COLLATE RTRIM) ORDER BY ((((v0.c0)AND(rtreenode(rt0.c1, v0.c0))))AND((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)AND(rtreenode(rt0.c1, v0.c0))))AND((- (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TRIM(rt0.c0) COLLATE RTRIM) ORDER BY ((((v0.c0)AND(rtreenode(rt0.c1, v0.c0))))AND((- (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(rt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)AND(rtreenode(rt0.c1, v0.c0))))AND((- (rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (TRIM(rt0.c0) COLLATE RTRIM) ORDER BY ((((v0.c0)AND(rtreenode(rt0.c1, v0.c0))))AND((- (rt0.c0))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)AND(-2014666236)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(-2014666236)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)AND(-2014666236)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)AND(-2014666236)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))>(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((((vt0.c1)AND(-2014666236)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))>(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (json_valid((~ (vt0.c0)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))!=((CAST(vt0.c0 AS BLOB), TRIM(vt0.c0), x''))) DESC  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_valid((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))!=((CAST(vt0.c0 AS BLOB), TRIM(vt0.c0), x''))) DESC  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (json_valid((~ (vt0.c0)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))!=((CAST(vt0.c0 AS BLOB), TRIM(vt0.c0), x''))) DESC  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((json_valid((~ (vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))!=((CAST(vt0.c0 AS BLOB), TRIM(vt0.c0), x''))) DESC  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (json_valid((~ (vt0.c0)))) ORDER BY (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), ((vt0.c0) NOTNULL), ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))))!=((CAST(vt0.c0 AS BLOB), TRIM(vt0.c0), x''))) DESC  NULLS LAST, ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (rt0.c2) ORDER BY SQLITE_VERSION() DESC, ((((v0.c0) NOTNULL))>=(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)) DESC, (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) ISNULL) ORDER BY SQLITE_VERSION() DESC, ((((v0.c0) NOTNULL))>=(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)) DESC, (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (rt0.c2) ORDER BY SQLITE_VERSION() DESC, ((((v0.c0) NOTNULL))>=(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)) DESC, (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) ISNULL) ORDER BY SQLITE_VERSION() DESC, ((((v0.c0) NOTNULL))>=(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)) DESC, (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON (((rt0.c0 IN ())) ISNULL) WHERE (rt0.c2) ORDER BY SQLITE_VERSION() DESC, ((((v0.c0) NOTNULL))>=(CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END)) DESC, (((CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c0 END))<>((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((v0.c0 IN ()) IN ((- (v0.c0))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0) IS FALSE)))) ASC, (((v0.c0)<(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))IS NOT(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ((- (v0.c0))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0) IS FALSE)))) ASC, (((v0.c0)<(v0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((v0.c0 IN ()) IN ((- (v0.c0))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0) IS FALSE)))) ASC, (((v0.c0)<(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))IS NOT(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ((- (v0.c0))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0) IS FALSE)))) ASC, (((v0.c0)<(v0.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))IS NOT(CAST(v0.c0 AS INTEGER)))) ORDER BY ((v0.c0 IN ()) IN ((- (v0.c0))))  NULLS FIRST, (((v0.c0)) NOT BETWEEN ((CAST(v0.c0 AS REAL))) AND ((((v0.c0) IS FALSE)))) ASC, (((v0.c0)<(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (((NOT (v0.c0)))<<(0.7717889083630741)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (v0.c0)))<<(0.7717889083630741)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (((NOT (v0.c0)))<<(0.7717889083630741)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0 ORDER BY (((NOT (v0.c0)))<<(0.7717889083630741)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c0) ORDER BY (((NOT (v0.c0)))<<(0.7717889083630741)) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (TYPEOF(((v0.c0)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0)>>(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (TYPEOF(((v0.c0)>>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c0)>>(vt0.c1)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (TYPEOF(((v0.c0)>>(vt0.c1))));
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULLIF(DISTINCT NULL, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS REAL)))) ORDER BY CASE WHEN LTRIM(v0.c0, v0.c0) THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.22553102410478065))))OR(LIKELIHOOD(v0.c0, 0.8551573543943572))))AND(((v0.c0)>>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULLIF(DISTINCT NULL, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LTRIM(v0.c0, v0.c0) THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.22553102410478065))))OR(LIKELIHOOD(v0.c0, 0.8551573543943572))))AND(((v0.c0)>>(v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULLIF(DISTINCT NULL, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS REAL)))) ORDER BY CASE WHEN LTRIM(v0.c0, v0.c0) THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.22553102410478065))))OR(LIKELIHOOD(v0.c0, 0.8551573543943572))))AND(((v0.c0)>>(v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0)AND(NULLIF(DISTINCT NULL, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LTRIM(v0.c0, v0.c0) THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.22553102410478065))))OR(LIKELIHOOD(v0.c0, 0.8551573543943572))))AND(((v0.c0)>>(v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(NULLIF(DISTINCT NULL, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS REAL)))) ORDER BY CASE WHEN LTRIM(v0.c0, v0.c0) THEN (((v0.c0))>=((v0.c0))) ELSE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END, CAST(((((v0.c0)OR(v0.c0)))AND(v0.c0)) AS INTEGER)  NULLS LAST, (((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((0.22553102410478065))))OR(LIKELIHOOD(v0.c0, 0.8551573543943572))))AND(((v0.c0)>>(v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((CAST(rt0.c1 AS NUMERIC) IN (CAST(v0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)>(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, x'548d')) NOT BETWEEN ((-1.831555312E9, x'52f3', rt0.c0)) AND ((rt0.c2, vt0.c1, rt0.c2)))) AND (UPPER(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, x'548d')) NOT BETWEEN ((-1.831555312E9, x'52f3', rt0.c0)) AND ((rt0.c2, vt0.c1, rt0.c2)))) AND (UPPER(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c2 THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)>(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, x'548d')) NOT BETWEEN ((-1.831555312E9, x'52f3', rt0.c0)) AND ((rt0.c2, vt0.c1, rt0.c2)))) AND (UPPER(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN (rt0.c1 IN ()) END;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, x'548d')) NOT BETWEEN ((-1.831555312E9, x'52f3', rt0.c0)) AND ((rt0.c2, vt0.c1, rt0.c2)))) AND (UPPER(rt0.c2)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c2 THEN (rt0.c1 IN ()) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)>(vt0.c1))) BETWEEN ((((vt0.c1, vt0.c0, x'548d')) NOT BETWEEN ((-1.831555312E9, x'52f3', rt0.c0)) AND ((rt0.c2, vt0.c1, rt0.c2)))) AND (UPPER(rt0.c2)))) ORDER BY CASE WHEN rt0.c2 THEN (rt0.c1 IN ()) END;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((+ (rt0.c2)))>=(((rt0.c1) IS TRUE)))) ORDER BY (((x'', rt0.c2, rt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((x'', rt0.c2, rt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((+ (rt0.c2)))>=(((rt0.c1) IS TRUE)))) ORDER BY (((x'', rt0.c2, rt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c2)))>=(((rt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((x'', rt0.c2, rt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((+ (rt0.c2)))>=(((rt0.c1) IS TRUE)))) ORDER BY (((x'', rt0.c2, rt0.c0)) BETWEEN ((v0.c0, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c0, rt0.c0))) COLLATE NOCASE ASC;
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0)OR(vt0.c0)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(vt0.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0)OR(vt0.c0)))OR(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)OR(vt0.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE ((((((v0.c0)OR(vt0.c0)))OR(rt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN ('-1609661697') AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (((rt0.c2))!=((''))) END) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((- (vt0.c1)))))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN ('-1609661697') AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (((rt0.c2))!=((''))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((- (vt0.c1)))))OR(rt0.c1)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN ('-1609661697') AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (((rt0.c2))!=((''))) END) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((- (vt0.c1)))))OR(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) BETWEEN ('-1609661697') AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (((rt0.c2))!=((''))) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((- (vt0.c1)))))OR(rt0.c1)));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((rt0.c1) BETWEEN ('-1609661697') AND (rt0.c0)) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE (((rt0.c2))!=((''))) END) ORDER BY ((((((rt0.c0)<=(rt0.c1)))AND((- (vt0.c1)))))OR(rt0.c1));
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')-(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')-(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((x'')-(NULL COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((x'')-(NULL COLLATE NOCASE)));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (0xffffffffdacb457f)) INNER JOIN vt0 ON '' WHERE (CASE NULL  WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE vt0.c1 COLLATE NOCASE END) ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (0Xffffffffdacb457f)) INNER JOIN vt0 ON '' ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (0xffffffffdacb457f)) INNER JOIN vt0 ON '' WHERE (CASE NULL  WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE vt0.c1 COLLATE NOCASE END) ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN vt0.c0 THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END ELSE vt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN v0.c0 THEN vt0.c0 END) NOT BETWEEN ((+ (rt0.c2))) AND (0Xffffffffdacb457f)) INNER JOIN vt0 ON '' ORDER BY ((((((rt0.c1)OR(vt0.c1)))AND(rt0.c1))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((((((((((((v0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(v0.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM)=(INSTR(rt0.c1, vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)=(INSTR(rt0.c1, vt0.c1)))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((((((((((((v0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(v0.c0)) IN ()) ORDER BY (((v0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((((((((((((v0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(v0.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM)=(INSTR(rt0.c1, vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)=(INSTR(rt0.c1, vt0.c1)))) IS TRUE)  as count FROM rt0, v0 FULL OUTER JOIN vt0 ON (((((((((((((v0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(v0.c0)) IN ()) ORDER BY (((v0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 FULL OUTER JOIN vt0 ON (((((((((((((v0.c0)AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(v0.c0)) IN ()) WHERE (((v0.c0 COLLATE RTRIM)=(INSTR(rt0.c1, vt0.c1)))) ORDER BY (((v0.c0)) BETWEEN ((((rt0.c0) IS TRUE))) AND ((((rt0.c2) BETWEEN (rt0.c0) AND (vt0.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN IFNULL(rt0.c1, rt0.c2) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN IFNULL(rt0.c1, rt0.c2) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN IFNULL(rt0.c1, rt0.c2) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt0.c2 IN ()) THEN IFNULL(rt0.c1, rt0.c2) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN IFNULL(rt0.c1, rt0.c2) ELSE ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.9014152847899449') ORDER BY x'9d7e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.9014152847899449') IS TRUE)  as count FROM v0, rt0 ORDER BY x'9d7e'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.9014152847899449') ORDER BY x'9d7e'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.9014152847899449') IS TRUE)  as count FROM v0, rt0 ORDER BY x'9d7e'  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ('0.9014152847899449') ORDER BY x'9d7e'  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END AS INTEGER));
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0 NOT INDEXED, rt0 WHERE (NULL);
SELECT ALL * FROM vt0 INNER JOIN v0 ON load_extension(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, ((vt0.c1)*(vt0.c0))) CROSS JOIN rt0 ON '꒷i' WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((vt0.c1)+(vt0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON load_extension(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, ((vt0.c1)*(vt0.c0))) CROSS JOIN rt0 ON '꒷i' ORDER BY ((vt0.c1)+(vt0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON load_extension(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, ((vt0.c1)*(vt0.c0))) CROSS JOIN rt0 ON '꒷i' WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((vt0.c1)+(vt0.c1)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE BINARY) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON load_extension(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, ((vt0.c1)*(vt0.c0))) CROSS JOIN rt0 ON '꒷i' ORDER BY ((vt0.c1)+(vt0.c1)) COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON load_extension(CASE WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END, ((vt0.c1)*(vt0.c0))) CROSS JOIN rt0 ON '꒷i' WHERE (CAST(v0.c0 AS BLOB) COLLATE BINARY) ORDER BY ((vt0.c1)+(vt0.c1)) COLLATE RTRIM ASC;
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) END LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((UNLIKELY(DISTINCT rt0.c1)))) WHERE (v0.c0) ORDER BY ((rt0.c0)-(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) END LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((UNLIKELY(DISTINCT rt0.c1)))) ORDER BY ((rt0.c0)-(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) END LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((UNLIKELY(DISTINCT rt0.c1)))) WHERE (v0.c0) ORDER BY ((rt0.c0)-(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) END LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((UNLIKELY(DISTINCT rt0.c1)))) ORDER BY ((rt0.c0)-(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN v0 ON CASE WHEN rt0.c1 COLLATE BINARY THEN CAST(rt0.c2 AS REAL) END LEFT OUTER JOIN vt0 ON (((vt0.c1)) BETWEEN ((UPPER(vt0.c0))) AND ((UNLIKELY(DISTINCT rt0.c1)))) WHERE (v0.c0) ORDER BY ((rt0.c0)-(CASE rt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c2 END)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON '81' WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN x'70b3' WHEN vt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN x'70b3' WHEN vt0.c1 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON '81');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON '81' WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN x'70b3' WHEN vt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN x'70b3' WHEN vt0.c1 THEN rt0.c2 END AS INTEGER)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON '81');
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON NULL RIGHT OUTER JOIN rt0 ON '81' WHERE (CAST(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN x'70b3' WHEN vt0.c1 THEN rt0.c2 END AS INTEGER));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<>(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)!=(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<>(rt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)!=(rt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)<>(rt0.c0))) IS TRUE));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((- (v0.c0)))IS(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((- (v0.c0)))IS(((vt0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c0)))IS(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((((- (v0.c0)))IS(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (vt0.c0)))LIKE((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (vt0.c0)))LIKE((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))LIKE((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY vt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((((~ (vt0.c0)))LIKE((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY vt0.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('-344928359')))OR(v0.c0)) THEN (v0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('-344928359')))OR(v0.c0)) THEN (v0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('-344928359')))OR(v0.c0)) THEN (v0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('-344928359')))OR(v0.c0)) THEN (v0.c0 IN ()) END DESC);
SELECT COUNT(*) FROM v0 WHERE ((- ((v0.c0 IN ())))) ORDER BY CASE WHEN ((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND('-344928359')))OR(v0.c0)) THEN (v0.c0 IN ()) END DESC;
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (NULL) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (NULL) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (NULL) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) BETWEEN (NULL) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((((((rt0.c0) BETWEEN (NULL) AND (vt0.c1)))AND(vt0.c0 COLLATE BINARY)))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) ORDER BY (((CAST(v0.c0 AS TEXT)))>=((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS TEXT)))>=((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) ORDER BY (((CAST(v0.c0 AS TEXT)))>=((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS TEXT)))>=((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE)) ORDER BY (((CAST(v0.c0 AS TEXT)))>=((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM rt0, v0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (((((((((x'dc5c')OR(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) BETWEEN (((((((((x'dc5c')OR(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (((((((((x'dc5c')OR(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS INTEGER)) BETWEEN (((((((((x'dc5c')OR(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))) AND (rt0.c0))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (((((((((x'dc5c')OR(vt0.c0)))AND(x'')))OR(vt0.c1)))OR(vt0.c1))) AND (rt0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY (((('')OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN (rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((('')OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY (((('')OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((rt0.c0 IN (rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((('')OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT ((rt0.c0 IN (rt0.c0, rt0.c2))))) ORDER BY (((('')OR(rt0.c0)))OR(rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM rt0 WHERE (HEX((rt0.c0 IN (rt0.c2)))) ORDER BY (((((rt0.c2) IS TRUE), ((rt0.c0) BETWEEN ('0.3572915840686747') AND (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), CAST(rt0.c2 AS BLOB), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX((rt0.c0 IN (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS TRUE), ((rt0.c0) BETWEEN ('0.3572915840686747') AND (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), CAST(rt0.c2 AS BLOB), rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (HEX((rt0.c0 IN (rt0.c2)))) ORDER BY (((((rt0.c2) IS TRUE), ((rt0.c0) BETWEEN ('0.3572915840686747') AND (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), CAST(rt0.c2 AS BLOB), rt0.c0)));
SELECT SUM(count) FROM (SELECT ((HEX((rt0.c0 IN (rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c2) IS TRUE), ((rt0.c0) BETWEEN ('0.3572915840686747') AND (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), CAST(rt0.c2 AS BLOB), rt0.c0))));
SELECT COUNT(*) FROM rt0 WHERE (HEX((rt0.c0 IN (rt0.c2)))) ORDER BY (((((rt0.c2) IS TRUE), ((rt0.c0) BETWEEN ('0.3572915840686747') AND (rt0.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))>(((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))), CAST(rt0.c2 AS BLOB), rt0.c0)));
SELECT * FROM v0, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)AND(vt0.c0)))OR(v0.c0)) IN (NULL, ((vt0.c1)AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((rt0.c0)AND(vt0.c0)))OR(v0.c0)) IN (NULL, ((vt0.c1)AND(rt0.c0)))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)AND(vt0.c0)))OR(v0.c0)) IN (NULL, ((vt0.c1)AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((((rt0.c0)AND(vt0.c0)))OR(v0.c0)) IN (NULL, ((vt0.c1)AND(rt0.c0)))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY (((((rt0.c0)AND(vt0.c0)))OR(v0.c0)) IN (NULL, ((vt0.c1)AND(rt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.8075853106690852') ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)-((rt0.c0 IN ()))) DESC, ((CASE 0.5172955105703341  WHEN rt0.c1 THEN '-444203132' WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '611787232' ELSE rt0.c2 END)|((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8075853106690852') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)-((rt0.c0 IN ()))) DESC, ((CASE 0.5172955105703341  WHEN rt0.c1 THEN '-444203132' WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '611787232' ELSE rt0.c2 END)|((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.8075853106690852') ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)-((rt0.c0 IN ()))) DESC, ((CASE 0.5172955105703341  WHEN rt0.c1 THEN '-444203132' WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '611787232' ELSE rt0.c2 END)|((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8075853106690852') IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)-((rt0.c0 IN ()))) DESC, ((CASE 0.5172955105703341  WHEN rt0.c1 THEN '-444203132' WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '611787232' ELSE rt0.c2 END)|((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ('0.8075853106690852') ORDER BY ((CASE WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c0 END)-((rt0.c0 IN ()))) DESC, ((CASE 0.5172955105703341  WHEN rt0.c1 THEN '-444203132' WHEN rt0.c2 THEN x'' WHEN rt0.c2 THEN '611787232' ELSE rt0.c2 END)|((rt0.c0 IN (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((0.2722810326709554))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((0.2722810326709554))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((0.2722810326709554))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((0.2722810326709554))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND ((0.2722810326709554))) WHERE ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) IN ()));
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN ('/)qY') AND (x'da97')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN ('/)qY') AND (x'da97'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN ('/)qY') AND (x'da97')))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN ('/)qY') AND (x'da97'))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0) BETWEEN ('/)qY') AND (x'da97')))));
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.8716035292412531);
SELECT SUM(count) FROM (SELECT ((0.8716035292412531) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.8716035292412531);
SELECT SUM(count) FROM (SELECT ((0.8716035292412531) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (0.8716035292412531);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)-(v0.c0)))OR('&z')))AND(ABS(vt0.c0))))OR(((v0.c0) ISNULL))))OR(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)-(v0.c0)))OR('&z')))AND(ABS(vt0.c0))))OR(((v0.c0) ISNULL))))OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)-(v0.c0)))OR('&z')))AND(ABS(vt0.c0))))OR(((v0.c0) ISNULL))))OR(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)-(v0.c0)))OR('&z')))AND(ABS(vt0.c0))))OR(((v0.c0) ISNULL))))OR(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((NULL)-(v0.c0)))OR('&z')))AND(ABS(vt0.c0))))OR(((v0.c0) ISNULL))))OR(CAST(vt0.c1 AS TEXT))));
SELECT * FROM rt0, v0, vt0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)>>(rt0.c1))) AND ((((v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c1, v0.c0, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CASE ((v0.c0)/(v0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN '' ELSE ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)>>(rt0.c1))) AND ((((v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c1, v0.c0, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE ((v0.c0)/(v0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN '' ELSE ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END DESC);
SELECT * FROM rt0, v0, vt0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)>>(rt0.c1))) AND ((((v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c1, v0.c0, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CASE ((v0.c0)/(v0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN '' ELSE ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)>>(rt0.c1))) AND ((((v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c1, v0.c0, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE ((v0.c0)/(v0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN '' ELSE ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END DESC);
SELECT * FROM rt0, v0, vt0 WHERE ((((+ (v0.c0))) NOT BETWEEN (((vt0.c1)>>(rt0.c1))) AND ((((v0.c0, vt0.c0, rt0.c2)) NOT BETWEEN ((vt0.c1, v0.c0, NULL)) AND ((vt0.c1, vt0.c1, vt0.c1)))))) ORDER BY CASE ((v0.c0)/(v0.c0))  WHEN ((vt0.c0)>>(vt0.c0)) THEN '' ELSE ((((NULL)OR(vt0.c1)))OR(vt0.c1)) END DESC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))>=((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))>=((- (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))>=((- (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))>=((- (rt0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (CAST((NOT (rt0.c1)) AS INTEGER)) ORDER BY ((((vt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))>=((- (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1) BETWEEN (((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))) AND (((rt0.c2)LIKE(rt0.c1)))));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt0.c2) IS FALSE), 0.9125634712401746);
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT ((rt0.c2) IS FALSE), 0.9125634712401746));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt0.c2) IS FALSE), 0.9125634712401746);
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY LIKELIHOOD(DISTINCT ((rt0.c2) IS FALSE), 0.9125634712401746));
SELECT ALL * FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY LIKELIHOOD(DISTINCT ((rt0.c2) IS FALSE), 0.9125634712401746);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c0)))+((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))+((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c0)))+((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))+((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((((+ (rt0.c0)))+((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)%(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)%(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c0)%(rt0.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1 COLLATE RTRIM) ISNULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((vt0.c1 COLLATE RTRIM) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (0x73a13420);
SELECT SUM(count) FROM (SELECT ALL ((0x73a13420) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0x73a13420);
SELECT SUM(count) FROM (SELECT ALL ((0x73a13420) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0x73a13420);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) ISNULL) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c1)IS(vt0.c0))))  NULLS LAST, ((((((vt0.c1) NOT NULL))AND(((((((((vt0.c1)AND(0xffffffffb2dbb9a5)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) DESC, (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c1)IS(vt0.c0))))  NULLS LAST, ((((((vt0.c1) NOT NULL))AND(((((((((vt0.c1)AND(0xffffffffb2dbb9a5)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) DESC, (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c1)IS(vt0.c0))))  NULLS LAST, ((((((vt0.c1) NOT NULL))AND(((((((((vt0.c1)AND(0xffffffffb2dbb9a5)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) DESC, (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c1)IS(vt0.c0))))  NULLS LAST, ((((((vt0.c1) NOT NULL))AND(((((((((vt0.c1)AND(0xffffffffb2dbb9a5)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) DESC, (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0 COLLATE BINARY)OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c1)IS(vt0.c0))))  NULLS LAST, ((((((vt0.c1) NOT NULL))AND(((((((((vt0.c1)AND(0xffffffffb2dbb9a5)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))))AND(CAST(vt0.c0 AS BLOB))) DESC, (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c0)) THEN (NOT (vt0.c0)) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c0)) THEN (NOT (vt0.c0)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c0)) THEN (NOT (vt0.c0)) ELSE ((rt0.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c0)) THEN (NOT (vt0.c0)) ELSE ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE (CASE ((rt0.c1) NOTNULL)  WHEN (~ (rt0.c0)) THEN (NOT (vt0.c0)) ELSE ((rt0.c0) ISNULL) END);
SELECT ALL * FROM vt0 WHERE (((('\*', vt0.c0, 0xffffffffba92d59f)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) AND (((vt0.c1 IN ()), ((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL))))) ORDER BY vt0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((('\*', vt0.c0, 0Xffffffffba92d59f)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) AND (((vt0.c1 IN ()), ((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE (((('\*', vt0.c0, 0xffffffffba92d59f)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) AND (((vt0.c1 IN ()), ((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL))))) ORDER BY vt0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((((('\*', vt0.c0, 0Xffffffffba92d59f)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) AND (((vt0.c1 IN ()), ((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM ASC);
SELECT ALL * FROM vt0 WHERE (((('\*', vt0.c0, 0xffffffffba92d59f)) NOT BETWEEN ((CASE WHEN x'' THEN vt0.c1 ELSE vt0.c0 END, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(x'')))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))) AND (((vt0.c1 IN ()), ((vt0.c1) IS TRUE), ((vt0.c1) NOT NULL))))) ORDER BY vt0.c1 COLLATE RTRIM COLLATE NOCASE COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL)+(rt0.c0)) IN (((x'd745')+(vt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c1) AND ('Yg* 6')))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)+(rt0.c0)) IN (((x'd745')+(vt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c1) AND ('Yg* 6'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL)+(rt0.c0)) IN (((x'd745')+(vt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c1) AND ('Yg* 6')))));
SELECT SUM(count) FROM (SELECT ALL (((((NULL)+(rt0.c0)) IN (((x'd745')+(vt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c1) AND ('Yg* 6'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((NULL)+(rt0.c0)) IN (((x'd745')+(vt0.c0)), ((vt0.c1) NOT BETWEEN (rt0.c1) AND ('Yg* 6')))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((vt0.c1)OR('')))AND('jkK<윰qGkr')) AS INTEGER)) ORDER BY CAST(x'' COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR('')))AND('jkK<윰qGkr')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(x'' COLLATE RTRIM AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((vt0.c1)OR('')))AND('jkK<윰qGkr')) AS INTEGER)) ORDER BY CAST(x'' COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR('')))AND('jkK<윰qGkr')) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(x'' COLLATE RTRIM AS INTEGER) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((((vt0.c1)OR('')))AND('jkK<윰qGkr')) AS INTEGER)) ORDER BY CAST(x'' COLLATE RTRIM AS INTEGER) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())AND(((v0.c0)<(vt0.c1)))))OR((+ (v0.c0)))))AND(((rt0.c0)%(rt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_SOURCE_ID())AND(((v0.c0)<(vt0.c1)))))OR((+ (v0.c0)))))AND(((rt0.c0)%(rt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())AND(((v0.c0)<(vt0.c1)))))OR((+ (v0.c0)))))AND(((rt0.c0)%(rt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((SQLITE_SOURCE_ID())AND(((v0.c0)<(vt0.c1)))))OR((+ (v0.c0)))))AND(((rt0.c0)%(rt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((((((SQLITE_SOURCE_ID())AND(((v0.c0)<(vt0.c1)))))OR((+ (v0.c0)))))AND(((rt0.c0)%(rt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER)  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(v0.c0 AS NUMERIC))<(CASE v0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN x'4242' END)>>(((vt0.c0)IS(vt0.c1))))) ORDER BY ((rt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN x'4242' END)>>(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN x'4242' END)>>(((vt0.c0)IS(vt0.c1))))) ORDER BY ((rt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN x'4242' END)>>(((vt0.c0)IS(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1) IS TRUE) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((CASE WHEN rt0.c2 THEN x'4242' END)>>(((vt0.c0)IS(vt0.c1))))) ORDER BY ((rt0.c1) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)/(vt0.c1)) THEN (~ (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1) ISNULL) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)/(vt0.c1)) THEN (~ (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1) ISNULL) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)<<(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)/(vt0.c1)) THEN (~ (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1) ISNULL) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)<<(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)/(vt0.c1)) THEN (~ (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1) ISNULL) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)<<(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN ((vt0.c0)/(vt0.c1)) THEN (~ (vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1) ISNULL) THEN (~ (vt0.c0)) WHEN (NOT (vt0.c0)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN ((vt0.c1)<<(vt0.c1)) END);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(json_object(vt0.c0, vt0.c1))))AND(IFNULL(vt0.c1, vt0.c0)))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.810212579221299)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (NULL)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN '2064022972' ELSE vt0.c0 END ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(json_object(vt0.c0, vt0.c1))))AND(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.810212579221299)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (NULL)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN '2064022972' ELSE vt0.c0 END ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(json_object(vt0.c0, vt0.c1))))AND(IFNULL(vt0.c1, vt0.c0)))) ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.810212579221299)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (NULL)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN '2064022972' ELSE vt0.c0 END ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0 IN ()))OR(json_object(vt0.c0, vt0.c1))))AND(IFNULL(vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c1, vt0.c1, vt0.c0)))  WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END THEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(0.810212579221299)))AND(vt0.c0)) WHEN (vt0.c0 IN ()) THEN (~ (NULL)) WHEN ((vt0.c1)LIKE(vt0.c0)) THEN CASE vt0.c1  WHEN vt0.c1 THEN '2064022972' ELSE vt0.c0 END ELSE COALESCE(DISTINCT vt0.c0, vt0.c0) END DESC);
SELECT * FROM v0, rt0, vt0 WHERE (CAST(UPPER(rt0.c0) AS NUMERIC)) ORDER BY CASE ((vt0.c1)<<(v0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE ((vt0.c1)<<(v0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS BLOB));
SELECT * FROM v0, rt0, vt0 WHERE (CAST(UPPER(rt0.c0) AS NUMERIC)) ORDER BY CASE ((vt0.c1)<<(v0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS BLOB);
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE ((vt0.c1)<<(v0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS BLOB));
SELECT * FROM v0, rt0, vt0 WHERE (CAST(UPPER(rt0.c0) AS NUMERIC)) ORDER BY CASE ((vt0.c1)<<(v0.c0))  WHEN CASE WHEN vt0.c0 THEN vt0.c0 END THEN ((((v0.c0)AND(rt0.c1)))AND(rt0.c0)) END  NULLS FIRST, CAST(CAST(vt0.c1 AS INTEGER) AS BLOB);
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (NULL);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((((vt0.c1)GLOB('/)QY')))))) ORDER BY CASE ((rt0.c0)AND(rt0.c1))  WHEN ((vt0.c0)&(vt0.c0)) THEN (NULL IN (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((((vt0.c1)GLOB('/)QY')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c0)AND(rt0.c1))  WHEN ((vt0.c0)&(vt0.c0)) THEN (NULL IN (rt0.c2)) END DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((((vt0.c1)GLOB('/)QY')))))) ORDER BY CASE ((rt0.c0)AND(rt0.c1))  WHEN ((vt0.c0)&(vt0.c0)) THEN (NULL IN (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((((vt0.c1)GLOB('/)QY')))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c0)AND(rt0.c1))  WHEN ((vt0.c0)&(vt0.c0)) THEN (NULL IN (rt0.c2)) END DESC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((rt0.c2)<=(rt0.c2)))) AND ((((vt0.c1)GLOB('/)QY')))))) ORDER BY CASE ((rt0.c0)AND(rt0.c1))  WHEN ((vt0.c0)&(vt0.c0)) THEN (NULL IN (rt0.c2)) END DESC;
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ()))<<((vt0.c0 IN (rt0.c1))))) ORDER BY COALESCE(DISTINCT ((rt0.c1)GLOB(vt0.c1)), ((NULL)GLOB(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)GLOB(vt0.c1)), ((NULL)GLOB(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ()))<<((vt0.c0 IN (rt0.c1))))) ORDER BY COALESCE(DISTINCT ((rt0.c1)GLOB(vt0.c1)), ((NULL)GLOB(rt0.c1))) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ()))<<((vt0.c0 IN (rt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY COALESCE(DISTINCT ((rt0.c1)GLOB(vt0.c1)), ((NULL)GLOB(rt0.c1))) ASC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c1 IN ()))<<((vt0.c0 IN (rt0.c1))))) ORDER BY COALESCE(DISTINCT ((rt0.c1)GLOB(vt0.c1)), ((NULL)GLOB(rt0.c1))) ASC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT TRIM('81', rt0.c0), ((rt0.c1)>>(v0.c0))) WHERE ((((((NOT (rt0.c0)))AND(UPPER(v0.c0))))OR((((rt0.c2))<((rt0.c0)))))) ORDER BY '-624212609' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))AND(UPPER(v0.c0))))OR((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT TRIM('81', rt0.c0), ((rt0.c1)>>(v0.c0))) ORDER BY '-624212609' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT TRIM('81', rt0.c0), ((rt0.c1)>>(v0.c0))) WHERE ((((((NOT (rt0.c0)))AND(UPPER(v0.c0))))OR((((rt0.c2))<((rt0.c0)))))) ORDER BY '-624212609' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c0)))AND(UPPER(v0.c0))))OR((((rt0.c2))<((rt0.c0)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT TRIM('81', rt0.c0), ((rt0.c1)>>(v0.c0))) ORDER BY '-624212609' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN rt0 ON TRIM(DISTINCT TRIM('81', rt0.c0), ((rt0.c1)>>(v0.c0))) WHERE ((((((NOT (rt0.c0)))AND(UPPER(v0.c0))))OR((((rt0.c2))<((rt0.c0)))))) ORDER BY '-624212609' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))OR('223228173'))) AND (0.6041265693794015 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))OR('223228173'))) AND (0.6041265693794015 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))OR('223228173'))) AND (0.6041265693794015 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))OR('223228173'))) AND (0.6041265693794015 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c0) BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(v0.c0)))OR('223228173'))) AND (0.6041265693794015 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT vt0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, vt0.c1) COLLATE NOCASE);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (~ (1.351527515E9)) WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (~ (1.351527515E9)));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (~ (1.351527515E9)) WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) IN ())) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON (~ (1.351527515E9)));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON (~ (1.351527515E9)) WHERE ((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c2 THEN '' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c2 THEN '' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c2 THEN '' ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c2 THEN '' ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ()))LIKE(CASE WHEN rt0.c2 THEN '' ELSE rt0.c0 END)));
SELECT * FROM vt0 WHERE (HEX((0.7717889083630741 IN ()))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1, '0.17973733505070577')) DESC, (((NOT (0.43166449904558024))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((0.7717889083630741 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (vt0.c1, '0.17973733505070577')) DESC, (((NOT (0.43166449904558024))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (HEX((0.7717889083630741 IN ()))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1, '0.17973733505070577')) DESC, (((NOT (0.43166449904558024))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((0.7717889083630741 IN ()))) IS TRUE)  as count FROM vt0 ORDER BY ((+ (vt0.c1)) IN (vt0.c1, '0.17973733505070577')) DESC, (((NOT (0.43166449904558024))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (HEX((0.7717889083630741 IN ()))) ORDER BY ((+ (vt0.c1)) IN (vt0.c1, '0.17973733505070577')) DESC, (((NOT (0.43166449904558024))) NOT BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((v0.c0) IS TRUE) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))=(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))=(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))=(((rt0.c1)GLOB(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0)))=(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0)))=(((rt0.c1)GLOB(rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)) AS BLOB));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY '+얦.fS*慏㐠' ASC  NULLS LAST, (vt0.c1 IN (((('g^')) NOT BETWEEN ((0.8953015768665474)) AND ((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY '+얦.fS*慏㐠' ASC  NULLS LAST, (vt0.c1 IN (((('g^')) NOT BETWEEN ((0.8953015768665474)) AND ((rt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY '+얦.fS*慏㐠' ASC  NULLS LAST, (vt0.c1 IN (((('g^')) NOT BETWEEN ((0.8953015768665474)) AND ((rt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY '+얦.fS*慏㐠' ASC  NULLS LAST, (vt0.c1 IN (((('g^')) NOT BETWEEN ((0.8953015768665474)) AND ((rt0.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY '+얦.fS*慏㐠' ASC  NULLS LAST, (vt0.c1 IN (((('g^')) NOT BETWEEN ((0.8953015768665474)) AND ((rt0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(vt0.c1)))AND(v0.c0)) END) ORDER BY (NOT (((((vt0.c1)OR(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(vt0.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(vt0.c1)))AND(v0.c0)) END) ORDER BY (NOT (((((vt0.c1)OR(v0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(vt0.c1)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY (NOT (((((vt0.c1)OR(v0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) NOTNULL) THEN ((((v0.c0)OR(vt0.c1)))AND(v0.c0)) END) ORDER BY (NOT (((((vt0.c1)OR(v0.c0)))OR(vt0.c0))));
SELECT ALL * FROM rt0, vt0 WHERE (json(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((json(vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (json(vt0.c0 COLLATE RTRIM));
SELECT * FROM vt0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND(JULIANDAY(vt0.c0, vt0.c0, vt0.c1))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)>>(vt0.c0)))AND(JULIANDAY(vt0.c0, vt0.c0, vt0.c1))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND(JULIANDAY(vt0.c0, vt0.c0, vt0.c1))))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)>>(vt0.c0)))AND(JULIANDAY(vt0.c0, vt0.c0, vt0.c1))))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c1)>>(vt0.c0)))AND(JULIANDAY(vt0.c0, vt0.c0, vt0.c1))))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1, vt0.c0, rt0.c2))<((vt0.c1, rt0.c1, rt0.c2))) END) ORDER BY ((((vt0.c1) NOTNULL))<((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((((rt0.c0))!=((x'')))))>=((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1, vt0.c0, rt0.c2))<((vt0.c1, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY ((((vt0.c1) NOTNULL))<((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((((rt0.c0))!=((x'')))))>=((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1, vt0.c0, rt0.c2))<((vt0.c1, rt0.c1, rt0.c2))) END) ORDER BY ((((vt0.c1) NOTNULL))<((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((((rt0.c0))!=((x'')))))>=((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((CASE ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1, vt0.c0, rt0.c2))<((vt0.c1, rt0.c1, rt0.c2))) END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED, rt0 ORDER BY ((((vt0.c1) NOTNULL))<((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((((rt0.c0))!=((x'')))))>=((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((((((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c0))  WHEN CAST(vt0.c1 AS REAL) THEN (((vt0.c1, vt0.c0, rt0.c2))<((vt0.c1, rt0.c1, rt0.c2))) END) ORDER BY ((((vt0.c1) NOTNULL))<((((rt0.c1, rt0.c0, rt0.c0))>((rt0.c0, rt0.c0, vt0.c0))))) ASC  NULLS LAST, ((((((rt0.c0))!=((x'')))))>=((((((((((((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c2)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c1) IN ())) ORDER BY x'03de'  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'03de'  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c1) IN ())) ORDER BY x'03de'  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(DISTINCT vt0.c1) IN ())) IS TRUE)  as count FROM vt0 ORDER BY x'03de'  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((UNLIKELY(DISTINCT vt0.c1) IN ())) ORDER BY x'03de'  NULLS FIRST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))|(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER)) ORDER BY CASE (vt0.c0 IN (vt0.c0, v0.c0, 'ka', vt0.c0))  WHEN ((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c1)<(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, v0.c0, 'ka', vt0.c0))  WHEN ((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c1)<(v0.c0)) END);
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER)) ORDER BY CASE (vt0.c0 IN (vt0.c0, v0.c0, 'ka', vt0.c0))  WHEN ((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c1)<(v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)!=(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (vt0.c0 IN (vt0.c0, v0.c0, 'ka', vt0.c0))  WHEN ((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c1)<(v0.c0)) END);
SELECT * FROM v0, vt0 WHERE (CAST(((vt0.c1)<>(vt0.c0)) AS INTEGER)) ORDER BY CASE (vt0.c0 IN (vt0.c0, v0.c0, 'ka', vt0.c0))  WHEN ((((((((vt0.c1)AND(v0.c0)))OR(vt0.c0)))OR(v0.c0)))OR(v0.c0)) THEN ((vt0.c1)<(v0.c0)) END;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))%(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC, (((((('-1821640753')OR(rt0.c2)))AND(rt0.c2)))=(rt0.c0)), ((((vt0.c1 COLLATE RTRIM)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))))AND((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))%(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC, (((((('-1821640753')OR(rt0.c2)))AND(rt0.c2)))==(rt0.c0)), ((((vt0.c1 COLLATE RTRIM)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))))AND((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))%(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC, (((((('-1821640753')OR(rt0.c2)))AND(rt0.c2)))=(rt0.c0)), ((((vt0.c1 COLLATE RTRIM)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))))AND((+ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))%(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC, (((((('-1821640753')OR(rt0.c2)))AND(rt0.c2)))==(rt0.c0)), ((((vt0.c1 COLLATE RTRIM)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))))AND((+ (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)))%(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((((rt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 END END ASC, (((((('-1821640753')OR(rt0.c2)))AND(rt0.c2)))=(rt0.c0)), ((((vt0.c1 COLLATE RTRIM)AND(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))))AND((+ (rt0.c2))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_array_length((rt0.c2 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c2 IN (rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_array_length((rt0.c2 IN (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((json_array_length((rt0.c2 IN (rt0.c2)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (json_array_length((rt0.c2 IN (rt0.c2))));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (rt0.c2) ORDER BY (((((rt0.c0)*(v0.c0)), ((rt0.c1)>>(rt0.c2)), (- (rt0.c0))))<=((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (((((rt0.c0)*(v0.c0)), ((rt0.c1)>>(rt0.c2)), (- (rt0.c0))))<=((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0) IS TRUE)))) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (rt0.c2) ORDER BY (((((rt0.c0)*(v0.c0)), ((rt0.c1)>>(rt0.c2)), (- (rt0.c0))))<=((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0) IS TRUE)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON v0.c0 ORDER BY (((((rt0.c0)*(v0.c0)), ((rt0.c1)>>(rt0.c2)), (- (rt0.c0))))<=((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0) IS TRUE)))) DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON v0.c0 WHERE (rt0.c2) ORDER BY (((((rt0.c0)*(v0.c0)), ((rt0.c1)>>(rt0.c2)), (- (rt0.c0))))<=((((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM, ((rt0.c0) IS TRUE)))) DESC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c0, v0.c0, rt0.c0, v0.c0, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0, v0.c0, rt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c0, v0.c0, rt0.c0, v0.c0, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1, v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((rt0.c0, v0.c0, rt0.c0, v0.c0, vt0.c0))==((vt0.c0, vt0.c1, vt0.c1, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((((rt0.c0, v0.c0, rt0.c0, v0.c0, vt0.c0))=((vt0.c0, vt0.c1, vt0.c1, v0.c0, vt0.c0))))));
SELECT * FROM v0, rt0, vt0 WHERE (((CAST('sDVu(({' AS BLOB)) NOT BETWEEN ((((vt0.c1, v0.c0, rt0.c0))<=((vt0.c1, rt0.c2, rt0.c1)))) AND ((((vt0.c1))>((v0.c0)))))) ORDER BY (('0.8614618681292792')/(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('sDVu(({' AS BLOB)) NOT BETWEEN ((((vt0.c1, v0.c0, rt0.c0))<=((vt0.c1, rt0.c2, rt0.c1)))) AND ((((vt0.c1))>((v0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (('0.8614618681292792')/(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (((CAST('sDVu(({' AS BLOB)) NOT BETWEEN ((((vt0.c1, v0.c0, rt0.c0))<=((vt0.c1, rt0.c2, rt0.c1)))) AND ((((vt0.c1))>((v0.c0)))))) ORDER BY (('0.8614618681292792')/(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST('sDVu(({' AS BLOB)) NOT BETWEEN ((((vt0.c1, v0.c0, rt0.c0))<=((vt0.c1, rt0.c2, rt0.c1)))) AND ((((vt0.c1))>((v0.c0)))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (('0.8614618681292792')/(((v0.c0) NOTNULL))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE (((CAST('sDVu(({' AS BLOB)) NOT BETWEEN ((((vt0.c1, v0.c0, rt0.c0))<=((vt0.c1, rt0.c2, rt0.c1)))) AND ((((vt0.c1))>((v0.c0)))))) ORDER BY (('0.8614618681292792')/(((v0.c0) NOTNULL))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'' COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=(SQLITE_COMPILEOPTION_GET(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=(SQLITE_COMPILEOPTION_GET(rt0.c1)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) NOTNULL))>=(SQLITE_COMPILEOPTION_GET(rt0.c1))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL)GLOB(rt0.c0)))-(TRIM(vt0.c1))) WHERE (rt0.c2) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))AND(((rt0.c1)IS NOT(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL)GLOB(rt0.c0)))-(TRIM(vt0.c1))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))AND(((rt0.c1)IS NOT(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL)GLOB(rt0.c0)))-(TRIM(vt0.c1))) WHERE (rt0.c2) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))AND(((rt0.c1)IS NOT(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL)GLOB(rt0.c0)))-(TRIM(vt0.c1))) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))AND(((rt0.c1)IS NOT(vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((((NULL)GLOB(rt0.c0)))-(TRIM(vt0.c1))) WHERE (rt0.c2) ORDER BY (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((vt0.c0))))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c1))))))AND(((rt0.c1)IS NOT(vt0.c1))))  NULLS FIRST;
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((rt0.c2) ISNULL)))<((ABS(rt0.c2)))) WHERE (CASE WHEN ((rt0.c0)<(vt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY CAST(v0.c0 AS REAL) COLLATE BINARY ASC, (UNLIKELY(vt0.c1) IN ()) ASC, ((((v0.c0)AND(vt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(vt0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((rt0.c2) ISNULL)))<((ABS(rt0.c2)))) ORDER BY CAST(v0.c0 AS REAL) COLLATE BINARY ASC, (UNLIKELY(vt0.c1) IN ()) ASC, ((((v0.c0)AND(vt0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((rt0.c2) ISNULL)))<((ABS(rt0.c2)))) WHERE (CASE WHEN ((rt0.c0)<(vt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY CAST(v0.c0 AS REAL) COLLATE BINARY ASC, (UNLIKELY(vt0.c1) IN ()) ASC, ((((v0.c0)AND(vt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)<(vt0.c0)) THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((rt0.c2) ISNULL)))<((ABS(rt0.c2)))) ORDER BY CAST(v0.c0 AS REAL) COLLATE BINARY ASC, (UNLIKELY(vt0.c1) IN ()) ASC, ((((v0.c0)AND(vt0.c1))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, vt0 FULL OUTER JOIN v0 ON (((((rt0.c2) ISNULL)))<((ABS(rt0.c2)))) WHERE (CASE WHEN ((rt0.c0)<(vt0.c0)) THEN (rt0.c2 IN ()) END) ORDER BY CAST(v0.c0 AS REAL) COLLATE BINARY ASC, (UNLIKELY(vt0.c1) IN ()) ASC, ((((v0.c0)AND(vt0.c1))) NOT NULL) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((vt0.c1 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ((vt0.c1 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((vt0.c1 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((vt0.c1 COLLATE NOCASE IN ((vt0.c1 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ((vt0.c1 IN (vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((('333873460') NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((('333873460') NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((('333873460') NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((('333873460') NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((('333873460') NOTNULL)) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ((('') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ((('') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ((('') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ((('') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY) BETWEEN (((((v0.c0)OR(v0.c0)))AND(v0.c0))) AND ((('') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY '577200131'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY '577200131'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY '577200131'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, rt0 ORDER BY '577200131'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (NULL) ORDER BY '577200131'  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1)OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1)OR(vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)OR(vt0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((vt0.c1)OR(vt0.c1)) IN ());
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST('綼]Y2P' AS REAL)) ORDER BY (+ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('綼]Y2P' AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST('綼]Y2P' AS REAL)) ORDER BY (+ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('綼]Y2P' AS REAL)) IS TRUE)  as count FROM v0, rt0 ORDER BY (+ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (CAST('綼]Y2P' AS REAL)) ORDER BY (+ (((rt0.c0) BETWEEN (x'') AND (rt0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)<>(vt0.c1)) THEN ((vt0.c1)<>(rt0.c2)) END FULL OUTER JOIN vt0 ON (((- (vt0.c1)))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))<>(NULL COLLATE NOCASE))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))!=(NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)<>(vt0.c1)) THEN ((vt0.c1)!=(rt0.c2)) END FULL OUTER JOIN vt0 ON (((- (vt0.c1)))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)<>(vt0.c1)) THEN ((vt0.c1)<>(rt0.c2)) END FULL OUTER JOIN vt0 ON (((- (vt0.c1)))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))<>(NULL COLLATE NOCASE))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))!=(NULL COLLATE NOCASE))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN ((rt0.c0)<>(vt0.c1)) THEN ((vt0.c1)!=(rt0.c2)) END FULL OUTER JOIN vt0 ON (((- (vt0.c1)))/(((((rt0.c1)OR(rt0.c2)))OR(rt0.c2)))) ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((~ (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('' IN ())))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((~ (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((~ (('' IN ())))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((~ (('' IN ()))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((NOT (v0.c0)) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c1 COLLATE RTRIM)-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((NOT (v0.c0)) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c1 COLLATE RTRIM)-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((vt0.c1 COLLATE RTRIM)-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((NOT (v0.c0)) IN ((vt0.c0 IN ())))) ORDER BY ((vt0.c1 COLLATE RTRIM)-((((rt0.c1)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((rt0.c2)LIKE(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)LIKE(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((rt0.c2)LIKE(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)LIKE(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) IS FALSE)) ORDER BY ((rt0.c2)LIKE(((((vt0.c1)AND(rt0.c0)))AND(rt0.c0)))) ASC;
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((- (rt0.c2)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN vt0.c1 THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN vt0.c1 THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN vt0.c1 THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN vt0.c1 THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0)) COLLATE RTRIM) ORDER BY CASE CAST(rt0.c0 AS NUMERIC)  WHEN vt0.c1 THEN CAST(vt0.c0 AS TEXT) END  NULLS FIRST;
SELECT * FROM v0 WHERE (((CASE WHEN 0.41923381405011717 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)&(v0.c0))) AND (v0.c0))  NULLS LAST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.41923381405011717 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)&(v0.c0))) AND (v0.c0))  NULLS LAST, v0.c0 ASC);
SELECT * FROM v0 WHERE (((CASE WHEN 0.41923381405011717 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)&(v0.c0))) AND (v0.c0))  NULLS LAST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN 0.41923381405011717 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)&(v0.c0))) AND (v0.c0))  NULLS LAST, v0.c0 ASC);
SELECT * FROM v0 WHERE (((CASE WHEN 0.41923381405011717 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN x'' THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)|(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (((v0.c0)&(v0.c0))) AND (v0.c0))  NULLS LAST, v0.c0 ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((~ (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ()) ASC, ((((vt0.c1)>(vt0.c0))) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c1 AS NUMERIC))LIKE(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ()) ASC, ((((vt0.c1)>(vt0.c0))) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c1 AS NUMERIC))LIKE(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ()) ASC, ((((vt0.c1)>(vt0.c0))) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c1 AS NUMERIC))LIKE(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((- (vt0.c0)) IN ()) ASC, ((((vt0.c1)>(vt0.c0))) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c1 AS NUMERIC))LIKE(NULL)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOTNULL)))) ORDER BY ((- (vt0.c0)) IN ()) ASC, ((((vt0.c1)>(vt0.c0))) NOTNULL) DESC  NULLS LAST, ((CAST(vt0.c1 AS NUMERIC))LIKE(NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(0.798370726511521 AS INTEGER)) ORDER BY (((((v0.c0)>>(0Xffffffffb5a20a78)), v0.c0 COLLATE BINARY, (v0.c0 IN ())))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 0xffffffffea799c04 ELSE v0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.798370726511521 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>>(0xffffffffb5a20a78)), v0.c0 COLLATE BINARY, (v0.c0 IN ())))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 0Xffffffffea799c04 ELSE v0.c0 END))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(0.798370726511521 AS INTEGER)) ORDER BY (((((v0.c0)>>(0Xffffffffb5a20a78)), v0.c0 COLLATE BINARY, (v0.c0 IN ())))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 0xffffffffea799c04 ELSE v0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.798370726511521 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)>>(0xffffffffb5a20a78)), v0.c0 COLLATE BINARY, (v0.c0 IN ())))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 0Xffffffffea799c04 ELSE v0.c0 END))) ASC);
SELECT COUNT(*) FROM v0 WHERE (CAST(0.798370726511521 AS INTEGER)) ORDER BY (((((v0.c0)>>(0Xffffffffb5a20a78)), v0.c0 COLLATE BINARY, (v0.c0 IN ())))<=(((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END, CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN NULL WHEN v0.c0 THEN 0xffffffffea799c04 ELSE v0.c0 END))) ASC;
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY ((ABS(DISTINCT 0.7389049065519872)) BETWEEN (((x'') IS TRUE)) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((ABS(DISTINCT 0.7389049065519872)) BETWEEN (((x'') IS TRUE)) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY ((ABS(DISTINCT 0.7389049065519872)) BETWEEN (((x'') IS TRUE)) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((ABS(DISTINCT 0.7389049065519872)) BETWEEN (((x'') IS TRUE)) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0)))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (((v0.c0)>=(vt0.c0)) COLLATE RTRIM) ORDER BY ((ABS(DISTINCT 0.7389049065519872)) BETWEEN (((x'') IS TRUE)) AND (((((v0.c0)OR(vt0.c0)))OR(v0.c0))));
SELECT * FROM rt0, vt0 WHERE (CASE WHEN UPPER(DISTINCT 0.2885273441244749) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT 0.2885273441244749) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN UPPER(DISTINCT 0.2885273441244749) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT 0.2885273441244749) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN UPPER(DISTINCT 0.2885273441244749) THEN NULLIF(DISTINCT rt0.c1, rt0.c1) ELSE CAST(vt0.c0 AS INTEGER) END);
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE ((((((NOT (rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE ((((((NOT (rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT * FROM vt0, v0 NATURAL JOIN rt0 WHERE ((((((NOT (rt0.c2)))OR(CAST(rt0.c0 AS INTEGER))))AND(vt0.c1 COLLATE RTRIM)));
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c1)*(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (UPPER(((rt0.c2)+(v0.c0)))) ORDER BY (NOT (-1683954552)) DESC  NULLS LAST, ((((rt0.c2) IS FALSE))IS NOT((+ (rt0.c0))))  NULLS LAST, ((575139956 COLLATE RTRIM) BETWEEN ((NULL IN ())) AND (ABS(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)+(v0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c1)*(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))) ORDER BY (NOT (-1683954552)) DESC  NULLS LAST, ((((rt0.c2) IS FALSE))IS NOT((+ (rt0.c0))))  NULLS LAST, ((575139956 COLLATE RTRIM) BETWEEN ((NULL IN ())) AND (ABS(rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c1)*(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (UPPER(((rt0.c2)+(v0.c0)))) ORDER BY (NOT (-1683954552)) DESC  NULLS LAST, ((((rt0.c2) IS FALSE))IS NOT((+ (rt0.c0))))  NULLS LAST, ((575139956 COLLATE RTRIM) BETWEEN ((NULL IN ())) AND (ABS(rt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((rt0.c2)+(v0.c0)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c1)*(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))) ORDER BY (NOT (-1683954552)) DESC  NULLS LAST, ((((rt0.c2) IS FALSE))IS NOT((+ (rt0.c0))))  NULLS LAST, ((575139956 COLLATE RTRIM) BETWEEN ((NULL IN ())) AND (ABS(rt0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON ((((((((((rt0.c1)*(rt0.c0)))AND(rt0.c0 COLLATE RTRIM)))OR(CAST(rt0.c1 AS BLOB))))OR((NOT (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))) WHERE (UPPER(((rt0.c2)+(v0.c0)))) ORDER BY (NOT (-1683954552)) DESC  NULLS LAST, ((((rt0.c2) IS FALSE))IS NOT((+ (rt0.c0))))  NULLS LAST, ((575139956 COLLATE RTRIM) BETWEEN ((NULL IN ())) AND (ABS(rt0.c0))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE ((('2118847618') IS FALSE)) ORDER BY (+ (((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(rt0.c2))) AND ((((('m(,jWS')AND(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((('2118847618') IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 NOT INDEXED ORDER BY (+ (((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(rt0.c2))) AND ((((('m(,jWS')AND(vt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE ((('2118847618') IS FALSE)) ORDER BY (+ (((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(rt0.c2))) AND ((((('m(,jWS')AND(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((('2118847618') IS FALSE)) IS TRUE)  as count FROM rt0, vt0, v0 NOT INDEXED ORDER BY (+ (((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(rt0.c2))) AND ((((('m(,jWS')AND(vt0.c1)))AND(rt0.c1)))) DESC);
SELECT * FROM rt0, vt0, v0 WHERE ((('2118847618') IS FALSE)) ORDER BY (+ (((((rt0.c0)OR(vt0.c1)))AND(vt0.c0)))), ((((rt0.c1) BETWEEN (v0.c0) AND (rt0.c2))) BETWEEN (((((rt0.c1)OR(v0.c0)))OR(rt0.c2))) AND ((((('m(,jWS')AND(vt0.c1)))AND(rt0.c1)))) DESC;
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((v0.c0)&(rt0.c2))) AND (NULL COLLATE BINARY))) ORDER BY CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((v0.c0)&(rt0.c2))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((v0.c0)&(rt0.c2))) AND (NULL COLLATE BINARY))) ORDER BY CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL)) NOT BETWEEN (((v0.c0)&(rt0.c2))) AND (NULL COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS REAL) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) ISNULL)) NOT BETWEEN (((v0.c0)&(rt0.c2))) AND (NULL COLLATE BINARY))) ORDER BY CAST(((((rt0.c2)OR(vt0.c0)))AND(vt0.c0)) AS REAL) DESC;
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c1)))AND(0.03515730811988971)), rt0.c2 COLLATE RTRIM, ((((((((rt0.c2)AND(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))!=((CAST(rt0.c1 AS BLOB), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), 0.4982702770519539)))) ORDER BY ((CASE '-1683954552'  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) BETWEEN ('245340236') AND ('>')) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)OR(rt0.c1)))AND(0.03515730811988971)), rt0.c2 COLLATE RTRIM, ((((((((rt0.c2)AND(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))<>((CAST(rt0.c1 AS BLOB), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), 0.4982702770519539)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE '-1683954552'  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) BETWEEN ('245340236') AND ('>')) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c1)))AND(0.03515730811988971)), rt0.c2 COLLATE RTRIM, ((((((((rt0.c2)AND(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))!=((CAST(rt0.c1 AS BLOB), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), 0.4982702770519539)))) ORDER BY ((CASE '-1683954552'  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) BETWEEN ('245340236') AND ('>')) ASC;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0)OR(rt0.c1)))AND(0.03515730811988971)), rt0.c2 COLLATE RTRIM, ((((((((rt0.c2)AND(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))<>((CAST(rt0.c1 AS BLOB), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), 0.4982702770519539)))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE '-1683954552'  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) BETWEEN ('245340236') AND ('>')) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0)OR(rt0.c1)))AND(0.03515730811988971)), rt0.c2 COLLATE RTRIM, ((((((((rt0.c2)AND(x'')))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c1))))!=((CAST(rt0.c1 AS BLOB), ((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)), 0.4982702770519539)))) ORDER BY ((CASE '-1683954552'  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1)))) BETWEEN ('245340236') AND ('>')) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0)<=(vt0.c1)))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE ((((x'')) NOT BETWEEN (((v0.c0 IN ()))) AND ((((NULL)||(v0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)|(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN (((v0.c0 IN ()))) AND ((((NULL)||(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0)<=(vt0.c1)))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)|(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0)<=(vt0.c1)))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE ((((x'')) NOT BETWEEN (((v0.c0 IN ()))) AND ((((NULL)||(v0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)|(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) NOT BETWEEN (((v0.c0 IN ()))) AND ((((NULL)||(v0.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0)<=(vt0.c1)))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)|(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON ((((((vt0.c0)<=(vt0.c1)))AND(((v0.c0)/(v0.c0)))))OR(((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) WHERE ((((x'')) NOT BETWEEN (((v0.c0 IN ()))) AND ((((NULL)||(v0.c0)))))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)|(((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (LOWER((+ ('kFM l3^w')))) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((+ ('kFM l3^w')))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (LOWER((+ ('kFM l3^w')))) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((+ ('kFM l3^w')))) IS TRUE)  as count FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (LOWER((+ ('kFM l3^w')))) ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((CASE rt0.c1  WHEN '' THEN vt0.c1 ELSE 'a48\5vD' END IN ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN '' THEN vt0.c1 ELSE 'a48\5vD' END IN ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ((CASE rt0.c1  WHEN '' THEN vt0.c1 ELSE 'a48\5vD' END IN ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY rt0.c1;
SELECT SUM(count) FROM (SELECT ALL (((CASE rt0.c1  WHEN '' THEN vt0.c1 ELSE 'a48\5vD' END IN ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1);
SELECT ALL * FROM vt0, rt0 WHERE ((CASE rt0.c1  WHEN '' THEN vt0.c1 ELSE 'a48\5vD' END IN ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END))) ORDER BY rt0.c1;
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0)%(v0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c1 AS REAL) WHEN (v0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1)||(v0.c0)) THEN ((vt0.c1)<<(vt0.c0)) END) ORDER BY ((((v0.c0, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, v0.c0))) IN ((+ (vt0.c0)))) ASC, (((((vt0.c0)LIKE(x'')), INSTR(vt0.c0, vt0.c0), CAST(v0.c0 AS NUMERIC)))!=((vt0.c1, ((vt0.c1) IS TRUE), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)%(v0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c1 AS REAL) WHEN (v0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1)||(v0.c0)) THEN ((vt0.c1)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0, vt0.c1, vt0.c1))<>((vt0.c0, vt0.c0, v0.c0))) IN ((+ (vt0.c0)))) ASC, (((((vt0.c0)LIKE(x'')), INSTR(vt0.c0, vt0.c0), CAST(v0.c0 AS NUMERIC)))<>((vt0.c1, ((vt0.c1) IS TRUE), CAST(vt0.c1 AS BLOB)))) ASC);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0)%(v0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c1 AS REAL) WHEN (v0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1)||(v0.c0)) THEN ((vt0.c1)<<(vt0.c0)) END) ORDER BY ((((v0.c0, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, v0.c0))) IN ((+ (vt0.c0)))) ASC, (((((vt0.c0)LIKE(x'')), INSTR(vt0.c0, vt0.c0), CAST(v0.c0 AS NUMERIC)))!=((vt0.c1, ((vt0.c1) IS TRUE), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)%(v0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c1 AS REAL) WHEN (v0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1)||(v0.c0)) THEN ((vt0.c1)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0, vt0.c1, vt0.c1))<>((vt0.c0, vt0.c0, v0.c0))) IN ((+ (vt0.c0)))) ASC, (((((vt0.c0)LIKE(x'')), INSTR(vt0.c0, vt0.c0), CAST(v0.c0 AS NUMERIC)))<>((vt0.c1, ((vt0.c1) IS TRUE), CAST(vt0.c1 AS BLOB)))) ASC);
SELECT * FROM vt0, v0 WHERE (CASE ((v0.c0)%(v0.c0))  WHEN vt0.c1 COLLATE NOCASE THEN CAST(vt0.c1 AS REAL) WHEN (v0.c0 IN (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c1)||(v0.c0)) THEN ((vt0.c1)<<(vt0.c0)) END) ORDER BY ((((v0.c0, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, v0.c0))) IN ((+ (vt0.c0)))) ASC, (((((vt0.c0)LIKE(x'')), INSTR(vt0.c0, vt0.c0), CAST(v0.c0 AS NUMERIC)))!=((vt0.c1, ((vt0.c1) IS TRUE), CAST(vt0.c1 AS BLOB)))) ASC;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CASE rt0.c2  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CASE rt0.c2  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((CASE rt0.c2  WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE vt0.c0 END) BETWEEN ((~ (rt0.c2))) AND (CAST(vt0.c0 AS INTEGER))));
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST(((rt0.c1)&(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))>>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)&(vt0.c1)) AS REAL) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST(((rt0.c1)&(vt0.c1)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))>>(CAST(rt0.c2 AS INTEGER)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(((rt0.c1)&(vt0.c1)) AS REAL) DESC);
SELECT * FROM rt0, vt0 WHERE (((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))>>(CAST(rt0.c2 AS INTEGER)))) ORDER BY CAST(((rt0.c1)&(vt0.c1)) AS REAL) DESC;
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) BETWEEN (((((rt0.c1)AND(0.9516422966549264)))AND(v0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) BETWEEN (((((rt0.c1)AND(0.9516422966549264)))AND(v0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) BETWEEN (((((rt0.c1)AND(0.9516422966549264)))AND(v0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) BETWEEN (((((rt0.c1)AND(0.9516422966549264)))AND(v0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c1) AND (NULL))) BETWEEN (((((rt0.c1)AND(0.9516422966549264)))AND(v0.c0))) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(CHANGES()))) ORDER BY CASE ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c2)=(rt0.c1)) THEN RTRIM(rt0.c1) ELSE rt0.c2 END  NULLS FIRST, ((((IFNULL(rt0.c0, rt0.c1))AND(rt0.c1)))OR((((rt0.c1, rt0.c0, rt0.c2))!=((rt0.c2, x'', rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(CHANGES()))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c2)=(rt0.c1)) THEN RTRIM(rt0.c1) ELSE rt0.c2 END  NULLS FIRST, ((((IFNULL(rt0.c0, rt0.c1))AND(rt0.c1)))OR((((rt0.c1, rt0.c0, rt0.c2))<>((rt0.c2, x'', rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(CHANGES()))) ORDER BY CASE ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c2)=(rt0.c1)) THEN RTRIM(rt0.c1) ELSE rt0.c2 END  NULLS FIRST, ((((IFNULL(rt0.c0, rt0.c1))AND(rt0.c1)))OR((((rt0.c1, rt0.c0, rt0.c2))!=((rt0.c2, x'', rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))||(CHANGES()))) IS TRUE)  as count FROM rt0 ORDER BY CASE ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c2)=(rt0.c1)) THEN RTRIM(rt0.c1) ELSE rt0.c2 END  NULLS FIRST, ((((IFNULL(rt0.c0, rt0.c1))AND(rt0.c1)))OR((((rt0.c1, rt0.c0, rt0.c2))<>((rt0.c2, x'', rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1 IN ()))||(CHANGES()))) ORDER BY CASE ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1))  WHEN (NOT (rt0.c2)) THEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)) WHEN rt0.c0 THEN (rt0.c2 IN ()) WHEN ((rt0.c2)=(rt0.c1)) THEN RTRIM(rt0.c1) ELSE rt0.c2 END  NULLS FIRST, ((((IFNULL(rt0.c0, rt0.c1))AND(rt0.c1)))OR((((rt0.c1, rt0.c0, rt0.c2))!=((rt0.c2, x'', rt0.c2))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c0)|(((rt0.c2)<=(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2 IN ()))<(((((rt0.c2)OR(x'')))OR(rt0.c1))))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)|(((rt0.c2)<=(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2 IN ()))<(((((rt0.c2)OR(x'')))OR(rt0.c1))))  NULLS LAST, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c0)|(((rt0.c2)<=(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2 IN ()))<(((((rt0.c2)OR(x'')))OR(rt0.c1))))  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)|(((rt0.c2)<=(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2 IN ()))<(((((rt0.c2)OR(x'')))OR(rt0.c1))))  NULLS LAST, x''  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) IN ())) ORDER BY ((rt0.c0)|(((rt0.c2)<=(rt0.c2)))) ASC  NULLS FIRST, (((rt0.c2 IN ()))<(((((rt0.c2)OR(x'')))OR(rt0.c1))))  NULLS LAST, x''  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)<=('1554490551')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=('1554490551')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)<=('1554490551')) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)<=('1554490551')) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)<=('1554490551')) IN ()));
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<>(v0.c0)) WHEN NULL COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) ORDER BY CASE ((v0.c0)<<(2086498808))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<>(v0.c0)) WHEN NULL COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)<<(2086498808))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<>(v0.c0)) WHEN NULL COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) ORDER BY CASE ((v0.c0)<<(2086498808))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<>(v0.c0)) WHEN NULL COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0)<<(2086498808))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN CAST(v0.c0 AS TEXT) THEN ((v0.c0)<>(v0.c0)) WHEN NULL COLLATE NOCASE THEN (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) ORDER BY CASE ((v0.c0)<<(2086498808))  WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)>=(v0.c0)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%('+얦.fS*慏㐠')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%('+얦.fS*慏㐠'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%('+얦.fS*慏㐠')));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY)%('+얦.fS*慏㐠'))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY)%('+얦.fS*慏㐠')));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (json_quote(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_quote(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (json_quote(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_quote(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (json_quote(((rt0.c0) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (x'') ORDER BY ((CAST(v0.c0 AS BLOB)) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN NULL END, SQLITE_VERSION(), ((rt0.c1)||(rt0.c1))))==((LIKELIHOOD(DISTINCT rt0.c1, 0.9663579589998315), CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN NULL END, SQLITE_VERSION(), ((rt0.c1)||(rt0.c1))))==((LIKELIHOOD(DISTINCT rt0.c1, 0.9663579589998315), CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN NULL END, SQLITE_VERSION(), ((rt0.c1)||(rt0.c1))))==((LIKELIHOOD(DISTINCT rt0.c1, 0.9663579589998315), CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN NULL END, SQLITE_VERSION(), ((rt0.c1)||(rt0.c1))))==((LIKELIHOOD(DISTINCT rt0.c1, 0.9663579589998315), CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))) ORDER BY (((CASE WHEN rt0.c0 THEN NULL END, SQLITE_VERSION(), ((rt0.c1)||(rt0.c1))))==((LIKELIHOOD(DISTINCT rt0.c1, 0.9663579589998315), CAST(rt0.c1 AS REAL), rt0.c2 COLLATE BINARY)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)&(rt0.c0))))<=((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)&(rt0.c0))))<=((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)&(rt0.c0))))<=((rt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)&(rt0.c0))))<=((rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c0)&(rt0.c0))))<=((rt0.c0))));
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (+ (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE ((((((((((('k\V*U*GH걛') NOT BETWEEN (vt0.c1) AND (v0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(CAST(rt0.c2 AS TEXT))))AND(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) ORDER BY (((rt0.c2, rt0.c0, vt0.c1)) BETWEEN (((('')>>(rt0.c2)), (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt0.c1, 0.8296114563426636)) AND ((rt0.c0, rt0.c1, rt0.c1))), ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((TRIM(DISTINCT rt0.c0), CAST(rt0.c2 AS REAL), ((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('k\V*U*GH걛') NOT BETWEEN (vt0.c1) AND (v0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(CAST(rt0.c2 AS TEXT))))AND(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (+ (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (((rt0.c2, rt0.c0, vt0.c1)) BETWEEN (((('')>>(rt0.c2)), (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt0.c1, 0.8296114563426636)) AND ((rt0.c0, rt0.c1, rt0.c1))), ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((TRIM(DISTINCT rt0.c0), CAST(rt0.c2 AS REAL), ((rt0.c0)<=(rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (+ (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE ((((((((((('k\V*U*GH걛') NOT BETWEEN (vt0.c1) AND (v0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(CAST(rt0.c2 AS TEXT))))AND(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) ORDER BY (((rt0.c2, rt0.c0, vt0.c1)) BETWEEN (((('')>>(rt0.c2)), (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt0.c1, 0.8296114563426636)) AND ((rt0.c0, rt0.c1, rt0.c1))), ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((TRIM(DISTINCT rt0.c0), CAST(rt0.c2 AS REAL), ((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('k\V*U*GH걛') NOT BETWEEN (vt0.c1) AND (v0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(CAST(rt0.c2 AS TEXT))))AND(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM rt0, vt0 LEFT OUTER JOIN v0 ON (+ (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) ORDER BY (((rt0.c2, rt0.c0, vt0.c1)) BETWEEN (((('')>>(rt0.c2)), (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt0.c1, 0.8296114563426636)) AND ((rt0.c0, rt0.c1, rt0.c1))), ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((TRIM(DISTINCT rt0.c0), CAST(rt0.c2 AS REAL), ((rt0.c0)<=(rt0.c2)))))  NULLS FIRST);
SELECT * FROM rt0, vt0 LEFT OUTER JOIN v0 ON (+ (((((rt0.c0)AND(v0.c0)))AND(rt0.c1)))) WHERE ((((((((((('k\V*U*GH걛') NOT BETWEEN (vt0.c1) AND (v0.c0)))OR(CAST(vt0.c1 AS REAL))))OR(CAST(rt0.c2 AS TEXT))))AND(((v0.c0) ISNULL))))AND(CASE WHEN v0.c0 THEN vt0.c1 END))) ORDER BY (((rt0.c2, rt0.c0, vt0.c1)) BETWEEN (((('')>>(rt0.c2)), (((rt0.c2, rt0.c2, NULL)) BETWEEN ((rt0.c1, vt0.c1, 0.8296114563426636)) AND ((rt0.c0, rt0.c1, rt0.c1))), ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((TRIM(DISTINCT rt0.c0), CAST(rt0.c2 AS REAL), ((rt0.c0)<=(rt0.c2)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (0xffffffffea799c04);
SELECT SUM(count) FROM (SELECT ((0Xffffffffea799c04) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0xffffffffea799c04);
SELECT SUM(count) FROM (SELECT ((0Xffffffffea799c04) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (0xffffffffea799c04);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)&(((v0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)&(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)&(((v0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)&(((v0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)&(((v0.c0)-(v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)<>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)<>(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)!=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)<>(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT COUNT(*) FROM rt0, vt0 NATURAL JOIN v0 WHERE (((((vt0.c1) IS FALSE)) NOTNULL));
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (611787232)))<>(((rt0.c2)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (611787232)))<>(((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (611787232)))<>(((rt0.c2)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c1) AND (611787232)))<>(((rt0.c2)<(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT * FROM v0, rt0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (611787232)))<>(((rt0.c2)<(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM WHERE ((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (NULL) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY 636641426 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (NULL) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM ORDER BY 636641426 ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM WHERE ((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (NULL) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) ORDER BY 636641426 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<((rt0.c1)))) NOT BETWEEN (NULL) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((vt0.c0)|(rt0.c2)) COLLATE RTRIM ORDER BY 636641426 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(-9.52689012E8))) ORDER BY (((((NULL) NOT NULL)))==((((vt0.c1) BETWEEN (x'') AND ('-410076491')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(-9.52689012E8))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((((NULL) NOT NULL)))==((((vt0.c1) BETWEEN (x'') AND ('-410076491'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(-9.52689012E8))) ORDER BY (((((NULL) NOT NULL)))==((((vt0.c1) BETWEEN (x'') AND ('-410076491')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(-9.52689012E8))) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((((NULL) NOT NULL)))==((((vt0.c1) BETWEEN (x'') AND ('-410076491'))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) IS FALSE))AND(vt0.c1)))AND(-9.52689012E8))) ORDER BY (((((NULL) NOT NULL)))==((((vt0.c1) BETWEEN (x'') AND ('-410076491')))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL IN ())))!=((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((NOT (rt0.c1)))LIKE(((x'89ae') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))!=((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c1)))LIKE(((x'89ae') IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL IN ())))!=((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((NOT (rt0.c1)))LIKE(((x'89ae') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL IN ())))!=((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((NOT (rt0.c1)))LIKE(((x'89ae') IS TRUE)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((NULL IN ())))!=((((((((((rt0.c2)OR(rt0.c1)))AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))))) ORDER BY (((NOT (rt0.c1)))LIKE(((x'89ae') IS TRUE)))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((vt0.c1) ISNULL))%((((vt0.c0))>=((vt0.c1))))) WHERE (((((rt0.c0)|(vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((vt0.c1) ISNULL))%((((vt0.c0))>=((vt0.c1))))));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((vt0.c1) ISNULL))%((((vt0.c0))>=((vt0.c1))))) WHERE (((((rt0.c0)|(vt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)|(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON ((((vt0.c1) ISNULL))%((((vt0.c0))>=((vt0.c1))))));
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON ((((vt0.c1) ISNULL))%((((vt0.c0))>=((vt0.c1))))) WHERE (((((rt0.c0)|(vt0.c1))) IS TRUE));
SELECT ALL * FROM vt0 WHERE (UPPER(((vt0.c1)AND(vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c1)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(((vt0.c1)AND(vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(((vt0.c1)AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(((vt0.c1)AND(vt0.c0)))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (((((vt0.c1)OR(((v0.c0)|(v0.c0)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((v0.c0)|(v0.c0)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (((((vt0.c1)OR(((v0.c0)|(v0.c0)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(((v0.c0)|(v0.c0)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT * FROM rt0, v0, vt0 WHERE (((((vt0.c1)OR(((v0.c0)|(v0.c0)))))OR(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY (((rt0.c2 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((~ (rt0.c1))) NOTNULL)) ORDER BY NULL ASC;
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(UPPER(DISTINCT rt0.c2) AS NUMERIC));
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((-1738007096)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((-1738007096)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((-1738007096)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((((-1738007096)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)OR(rt0.c0)))AND(rt0.c0))))) ORDER BY ((((-1738007096)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 WHERE (-1122776357);
SELECT SUM(count) FROM (SELECT ALL ((-1122776357) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-1122776357);
SELECT SUM(count) FROM (SELECT ALL ((-1122776357) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (-1122776357);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR('')) THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1))<=((rt0.c0))) ELSE '1939944480' END) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR('')) THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1))<=((rt0.c0))) ELSE '1939944480' END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR('')) THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1))<=((rt0.c0))) ELSE '1939944480' END) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR('')) THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1))<=((rt0.c0))) ELSE '1939944480' END) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST);
SELECT * FROM rt0 WHERE (CASE WHEN ((((rt0.c2)OR(rt0.c2)))OR('')) THEN ((rt0.c0) IS TRUE) WHEN rt0.c1 THEN CASE WHEN rt0.c0 THEN rt0.c1 END WHEN ((rt0.c0) ISNULL) THEN (((rt0.c1))<=((rt0.c0))) ELSE '1939944480' END) ORDER BY (CAST(rt0.c0 AS BLOB) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (x'');
SELECT * FROM v0, rt0 WHERE (CAST(((v0.c0)>(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((v0.c0)>(v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0)>(v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((v0.c0)>(v0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((ROUND(rt0.c0, v0.c0)) BETWEEN ((rt0.c2 IN ())) AND (load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, v0.c0)) BETWEEN ((rt0.c2 IN ())) AND (load_extension(vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (((ROUND(rt0.c0, v0.c0)) BETWEEN ((rt0.c2 IN ())) AND (load_extension(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((ROUND(rt0.c0, v0.c0)) BETWEEN ((rt0.c2 IN ())) AND (load_extension(vt0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (HEX('<㍶') COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX('<㍶') COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (HEX('<㍶') COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX('<㍶') COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (HEX('<㍶') COLLATE RTRIM) ORDER BY vt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((v0.c0, rt0.c1, 'V륊#Dj12')) BETWEEN ((rt0.c2, vt0.c0, v0.c0)) AND ((rt0.c0, NULL, vt0.c1))))=((+ (vt0.c0)))) WHERE (((((((('#ym2', x'', v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND(COALESCE(DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c0))))OR(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((('#ym2', x'', v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND(COALESCE(DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c0))))OR(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((v0.c0, rt0.c1, 'V륊#Dj12')) BETWEEN ((rt0.c2, vt0.c0, v0.c0)) AND ((rt0.c0, NULL, vt0.c1))))=((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((v0.c0, rt0.c1, 'V륊#Dj12')) BETWEEN ((rt0.c2, vt0.c0, v0.c0)) AND ((rt0.c0, NULL, vt0.c1))))=((+ (vt0.c0)))) WHERE (((((((('#ym2', x'', v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND(COALESCE(DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c0))))OR(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((('#ym2', x'', v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND(COALESCE(DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c0))))OR(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((v0.c0, rt0.c1, 'V륊#Dj12')) BETWEEN ((rt0.c2, vt0.c0, v0.c0)) AND ((rt0.c0, NULL, vt0.c1))))=((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (((((v0.c0, rt0.c1, 'V륊#Dj12')) BETWEEN ((rt0.c2, vt0.c0, v0.c0)) AND ((rt0.c0, NULL, vt0.c1))))=((+ (vt0.c0)))) WHERE (((((((('#ym2', x'', v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c0)) AND ((v0.c0, rt0.c2, rt0.c2))))AND(COALESCE(DISTINCT rt0.c2, vt0.c1, rt0.c0, rt0.c0))))OR(((((rt0.c2)OR(rt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)<=(rt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c1)<=(rt0.c0)) IN ())  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS INTEGER) IN ())) ORDER BY (((rt0.c1)<=(rt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((v0.c0 COLLATE BINARY)OR(((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1962837984')))))AND((v0.c0 IN ())))) ORDER BY CAST(LENGTH(NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR(((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1962837984')))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(LENGTH(NULL) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((v0.c0 COLLATE BINARY)OR(((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1962837984')))))AND((v0.c0 IN ())))) ORDER BY CAST(LENGTH(NULL) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0 COLLATE BINARY)OR(((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1962837984')))))AND((v0.c0 IN ())))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(LENGTH(NULL) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (((((v0.c0 COLLATE BINARY)OR(((v0.c0) NOT BETWEEN (rt0.c1) AND ('-1962837984')))))AND((v0.c0 IN ())))) ORDER BY CAST(LENGTH(NULL) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY (('' IN ()) IN ())  NULLS FIRST, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (('' IN ()) IN ())  NULLS FIRST, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL)) ORDER BY (('' IN ()) IN ())  NULLS FIRST, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY (('' IN ()) IN ())  NULLS FIRST, load_extension(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END));
SELECT ALL * FROM rt0, v0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (x'' COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((NULL)AND(0x19d23476))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((NULL)AND(0X19d23476))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((NULL)AND(0x19d23476))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((NULL)AND(0X19d23476))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY rt0.c0 ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c1 COLLATE BINARY) NOT BETWEEN (SQLITE_COMPILEOPTION_GET(v0.c0)) AND (((NULL)AND(0x19d23476))))) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE))<((CASE WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE))<((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE))<((CASE WHEN v0.c0 THEN v0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE NOCASE))<((CASE WHEN v0.c0 THEN v0.c0 END)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE ((((rt0.c1 COLLATE NOCASE))<((CASE WHEN v0.c0 THEN v0.c0 END))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))>(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))>(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))>(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE))>(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE))>(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))) AND ((((((vt0.c1)OR(rt0.c0)))AND(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))) AND ((((((vt0.c1)OR(rt0.c0)))AND(v0.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))) AND ((((((vt0.c1)OR(rt0.c0)))AND(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))) AND ((((((vt0.c1)OR(rt0.c0)))AND(v0.c0))))) ASC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((~ (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c2)))OR(vt0.c0)))) AND ((((((vt0.c1)OR(rt0.c0)))AND(v0.c0))))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE json(vt0.c0)  WHEN NULL THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (vt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json(vt0.c0)  WHEN NULL THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE json(vt0.c0)  WHEN NULL THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (vt0.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json(vt0.c0)  WHEN NULL THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE json(vt0.c0)  WHEN NULL THEN ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)) ELSE vt0.c0 COLLATE BINARY END) ORDER BY (vt0.c1 IN ())  NULLS LAST;
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY 0.3380649613303496  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 0.3380649613303496  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY 0.3380649613303496  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (~ (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY 0.3380649613303496  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (CASE WHEN (~ (vt0.c0)) THEN ((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END) ORDER BY 0.3380649613303496  NULLS LAST;
SELECT * FROM rt0 WHERE ('-1996536969');
SELECT SUM(count) FROM (SELECT ALL (('-1996536969') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1996536969');
SELECT SUM(count) FROM (SELECT ALL (('-1996536969') IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ('-1996536969');
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON SUBSTR((((rt0.c0))<>((rt0.c1))), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))), CASE ((v0.c0)IS NOT(rt0.c2))  WHEN ((x'3ae5')==(vt0.c0)) THEN CAST('g''wJ' AS NUMERIC) WHEN (+ (v0.c0)) THEN ((vt0.c1)||(rt0.c1)) WHEN 'l^' THEN '2064022972' END, ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN 0X57781493 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)+((((vt0.c1))<((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON SUBSTR((((rt0.c0))!=((rt0.c1))), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))), CASE ((v0.c0)IS NOT(rt0.c2))  WHEN ((x'3ae5')==(vt0.c0)) THEN CAST('g''wJ' AS NUMERIC) WHEN (+ (v0.c0)) THEN ((vt0.c1)||(rt0.c1)) WHEN 'l^' THEN '2064022972' END, ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN 0X57781493 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)+((((vt0.c1))<((vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON SUBSTR((((rt0.c0))<>((rt0.c1))), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))), CASE ((v0.c0)IS NOT(rt0.c2))  WHEN ((x'3ae5')==(vt0.c0)) THEN CAST('g''wJ' AS NUMERIC) WHEN (+ (v0.c0)) THEN ((vt0.c1)||(rt0.c1)) WHEN 'l^' THEN '2064022972' END, ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN 0X57781493 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)+((((vt0.c1))<((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN rt0 ON SUBSTR((((rt0.c0))!=((rt0.c1))), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))), CASE ((v0.c0)IS NOT(rt0.c2))  WHEN ((x'3ae5')==(vt0.c0)) THEN CAST('g''wJ' AS NUMERIC) WHEN (+ (v0.c0)) THEN ((vt0.c1)||(rt0.c1)) WHEN 'l^' THEN '2064022972' END, ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN 0X57781493 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)+((((vt0.c1))<((vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 FULL OUTER JOIN rt0 ON SUBSTR((((rt0.c0))<>((rt0.c1))), ((((rt0.c2)AND(vt0.c0)))OR(rt0.c1))) WHERE (CAST(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) AS TEXT)) ORDER BY (((rt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((CAST(v0.c0 AS TEXT)))), CASE ((v0.c0)IS NOT(rt0.c2))  WHEN ((x'3ae5')==(vt0.c0)) THEN CAST('g''wJ' AS NUMERIC) WHEN (+ (v0.c0)) THEN ((vt0.c1)||(rt0.c1)) WHEN 'l^' THEN '2064022972' END, ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN 0X57781493 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)+((((vt0.c1))<((vt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0)+(rt0.c0)) THEN TIME(v0.c0, rt0.c0, 'DD') ELSE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) END) ORDER BY (NOT (((rt0.c1)<>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0)+(rt0.c0)) THEN TIME(v0.c0, rt0.c0, 'DD') ELSE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0)+(rt0.c0)) THEN TIME(v0.c0, rt0.c0, 'DD') ELSE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) END) ORDER BY (NOT (((rt0.c1)<>(rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0)+(rt0.c0)) THEN TIME(v0.c0, rt0.c0, 'DD') ELSE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM v0, rt0 ORDER BY (NOT (((rt0.c1)!=(rt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (CASE ((rt0.c0) IS FALSE)  WHEN ((rt0.c0)+(rt0.c0)) THEN TIME(v0.c0, rt0.c0, 'DD') ELSE ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1)) END) ORDER BY (NOT (((rt0.c1)<>(rt0.c0)))) ASC;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'ฤz' WHERE ((((((v0.c0)LIKE(rt0.c0))))<((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)LIKE(rt0.c0))))<((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON 'ฤz');
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'ฤz' WHERE ((((((v0.c0)LIKE(rt0.c0))))<((((rt0.c0) IS TRUE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)LIKE(rt0.c0))))<((((rt0.c0) IS TRUE))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON 'ฤz');
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON 'ฤz' WHERE ((((((v0.c0)LIKE(rt0.c0))))<((((rt0.c0) IS TRUE)))));
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(')O')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(')O')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(')O')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(')O')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((vt0.c1)AND(')O')))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) NOT NULL) ASC);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((NULL, v0.c0, v0.c0))) COLLATE BINARY) ORDER BY (((v0.c0 IN ())) NOT NULL) ASC;
SELECT * FROM v0 INNER JOIN rt0 ON (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) INNER JOIN vt0 ON ((((rt0.c1)>>(vt0.c0)))GLOB(x'' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY ((0.598202327072474) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2)!=(v0.c0)))), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) INNER JOIN vt0 ON ((((rt0.c1)>>(vt0.c0)))GLOB(x'' COLLATE BINARY)) ORDER BY ((0.598202327072474) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2)!=(v0.c0)))), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 INNER JOIN rt0 ON (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) INNER JOIN vt0 ON ((((rt0.c1)>>(vt0.c0)))GLOB(x'' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY ((0.598202327072474) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2)!=(v0.c0)))), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) INNER JOIN vt0 ON ((((rt0.c1)>>(vt0.c0)))GLOB(x'' COLLATE BINARY)) ORDER BY ((0.598202327072474) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2)!=(v0.c0)))), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM v0 INNER JOIN rt0 ON (((vt0.c0 IN ())) NOT BETWEEN (vt0.c1 COLLATE BINARY) AND (vt0.c1)) INNER JOIN vt0 ON ((((rt0.c1)>>(vt0.c0)))GLOB(x'' COLLATE BINARY)) WHERE (vt0.c0) ORDER BY ((0.598202327072474) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c2)!=(v0.c0)))), (~ (((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1)!=(((v0.c0) NOTNULL))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1)!=(((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1)!=(((v0.c0) NOTNULL))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1)!=(((v0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((vt0.c1)!=(((v0.c0) NOTNULL))) WHERE (vt0.c0);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)>=(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST(((rt0.c2)>=(rt0.c1)) AS BLOB));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0)||(v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(0X5850236d)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0)||(v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(0X5850236d)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0)||(v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(0X5850236d)))OR(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0)||(v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(0X5850236d)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON '');
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON '' WHERE (CASE WHEN (vt0.c0 IN (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) WHEN ((v0.c0)||(v0.c0)) THEN CAST(v0.c0 AS BLOB) WHEN (v0.c0 IN ()) THEN ((((v0.c0)AND(0X5850236d)))OR(vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN v0 ON (((vt0.c1 IN ()))||(((v0.c0)/(vt0.c1)))) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN v0 ON (((vt0.c1 IN ()))||(((v0.c0)/(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN v0 ON (((vt0.c1 IN ()))||(((v0.c0)/(vt0.c1)))) WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((v0.c0) IS TRUE) RIGHT OUTER JOIN v0 ON (((vt0.c1 IN ()))||(((v0.c0)/(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<((((rt0.c1)GLOB(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<((((rt0.c1)GLOB(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<((((rt0.c1)GLOB(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2))<((((rt0.c1)GLOB(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2))<((((rt0.c1)GLOB(rt0.c1))))));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(0.2885273441244749))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(0.2885273441244749))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(0.2885273441244749))) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(0.2885273441244749))) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) BETWEEN (((((vt0.c1)OR(vt0.c1)))OR(0.2885273441244749))) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c1)OR(rt0.c2)))OR('-2034219822')))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(TRIM(rt0.c0))))AND(((vt0.c1) NOTNULL))))OR(((rt0.c0) IS TRUE))) WHERE (((vt0.c0 COLLATE NOCASE)AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY json_patch((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), ((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c1)OR(rt0.c2)))OR('-2034219822')))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(TRIM(rt0.c0))))AND(((vt0.c1) NOTNULL))))OR(((rt0.c0) IS TRUE))) ORDER BY json_patch((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), ((rt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c1)OR(rt0.c2)))OR('-2034219822')))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(TRIM(rt0.c0))))AND(((vt0.c1) NOTNULL))))OR(((rt0.c0) IS TRUE))) WHERE (((vt0.c0 COLLATE NOCASE)AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY json_patch((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), ((rt0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c1)OR(rt0.c2)))OR('-2034219822')))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(TRIM(rt0.c0))))AND(((vt0.c1) NOTNULL))))OR(((rt0.c0) IS TRUE))) ORDER BY json_patch((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), ((rt0.c1) NOTNULL)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((rt0.c1)OR(rt0.c2)))OR('-2034219822')))AND(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c0)))))OR(TRIM(rt0.c0))))AND(((vt0.c1) NOTNULL))))OR(((rt0.c0) IS TRUE))) WHERE (((vt0.c0 COLLATE NOCASE)AND(CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c0 END))) ORDER BY json_patch((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((rt0.c1))), ((rt0.c1) NOTNULL));
SELECT * FROM rt0, v0, vt0 WHERE (vt0.c1) ORDER BY CAST(',#Ek睘IV쫛' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(',#Ek睘IV쫛' AS INTEGER) DESC);
SELECT * FROM rt0, v0, vt0 WHERE (vt0.c1) ORDER BY CAST(',#Ek睘IV쫛' AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CAST(',#Ek睘IV쫛' AS INTEGER) DESC);
SELECT * FROM rt0, v0, vt0 WHERE (vt0.c1) ORDER BY CAST(',#Ek睘IV쫛' AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CASE WHEN v0.c0 THEN v0.c0 END IN (vt0.c1)) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((vt0.c0)AND(rt0.c2))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (CASE WHEN v0.c0 THEN v0.c0 END IN (vt0.c1)) RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY TRIM(rt0.c2) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CASE WHEN v0.c0 THEN v0.c0 END IN (vt0.c1)) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((vt0.c0)AND(rt0.c2))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)AND(rt0.c2))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (CASE WHEN v0.c0 THEN v0.c0 END IN (vt0.c1)) RIGHT OUTER JOIN rt0 ON rt0.c2 ORDER BY TRIM(rt0.c2) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (CASE WHEN v0.c0 THEN v0.c0 END IN (vt0.c1)) RIGHT OUTER JOIN rt0 ON rt0.c2 WHERE ((NOT (((vt0.c0)AND(rt0.c2))))) ORDER BY TRIM(rt0.c2) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<=(((((rt0.c0))==((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<=(((((rt0.c0))=((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<=(((((rt0.c0))==((rt0.c2)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 COLLATE BINARY))<=(((((rt0.c0))=((rt0.c2))))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 COLLATE BINARY))<=(((((rt0.c0))==((rt0.c2)))))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((('Wxxh', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c1, v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((('Wxxh', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c1, v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((('Wxxh', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c1, v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((('Wxxh', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c1, v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((((('Wxxh', rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c0, rt0.c1)) AND ((rt0.c0, vt0.c1, v0.c0)))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) NOTNULL)) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ('0.9274057991643542')) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN (((NOT ('{BY<\*')))) AND ((((v0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(v0.c0, v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ('0.9274057991643542')) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN (((NOT ('{BY<\*')))) AND ((((v0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) NOTNULL)) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ('0.9274057991643542')) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN (((NOT ('{BY<\*')))) AND ((((v0.c0) ISNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((DATE(v0.c0, v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ('0.9274057991643542')) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN (((NOT ('{BY<\*')))) AND ((((v0.c0) ISNULL))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((DATE(v0.c0, v0.c0, v0.c0)) NOTNULL)) ORDER BY v0.c0 DESC  NULLS FIRST, ((((v0.c0)<(v0.c0))) NOT BETWEEN (((v0.c0)IS(v0.c0))) AND ('0.9274057991643542')) DESC  NULLS FIRST, (((v0.c0)) NOT BETWEEN (((NOT ('{BY<\*')))) AND ((((v0.c0) ISNULL))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY CAST(((rt0.c1)OR(x'5525')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)OR(x'5525')) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY CAST(((rt0.c1)OR(x'5525')) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c1)OR(x'5525')) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM rt0, v0 WHERE (((CASE WHEN rt0.c0 THEN v0.c0 END) IS TRUE)) ORDER BY CAST(((rt0.c1)OR(x'5525')) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (((v0.c0, NULL, rt0.c0))<((v0.c0, vt0.c1, vt0.c0)))), ((CAST(vt0.c0 AS BLOB))-(-1048205555)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (((v0.c0, NULL, rt0.c0))<((v0.c0, vt0.c1, vt0.c0)))), ((CAST(vt0.c0 AS BLOB))-(-1048205555)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (((v0.c0, NULL, rt0.c0))<((v0.c0, vt0.c1, vt0.c0)))), ((CAST(vt0.c0 AS BLOB))-(-1048205555)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (((v0.c0, NULL, rt0.c0))<((v0.c0, vt0.c1, vt0.c0)))), ((CAST(vt0.c0 AS BLOB))-(-1048205555)) DESC);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c0 COLLATE BINARY AS TEXT)) ORDER BY NULLIF(rt0.c2 COLLATE NOCASE, (((v0.c0, NULL, rt0.c0))<((v0.c0, vt0.c1, vt0.c0)))), ((CAST(vt0.c0 AS BLOB))-(-1048205555)) DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON x'' WHERE (LIKELIHOOD(DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), 0.22228702515344145)) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))>(((vt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), 0.22228702515344145)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON x'' ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))>(((vt0.c0)>=(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON x'' WHERE (LIKELIHOOD(DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), 0.22228702515344145)) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))>(((vt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), 0.22228702515344145)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON x'' ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))>(((vt0.c0)>=(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON x'' WHERE (LIKELIHOOD(DISTINCT ((((v0.c0)AND(vt0.c0)))AND(v0.c0)), 0.22228702515344145)) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))>(((vt0.c0)>=(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (('-1e500')>>(NULL)) ELSE vt0.c0 END CROSS JOIN rt0 ON (((vt0.c0, 'qu(+ho', vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((((v0.c0)OR(v0.c0)))OR(rt0.c0)), ((v0.c0)*(2.008347175E9)), CASE 0X52847163  WHEN rt0.c2 THEN v0.c0 ELSE NULL END, ((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), v0.c0, ((rt0.c0)OR(rt0.c2))))) WHERE (((CASE WHEN rt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)==(((vt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)=(((vt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (('-1e500')>>(NULL)) ELSE vt0.c0 END CROSS JOIN rt0 ON (((vt0.c0, 'qu(+ho', vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((((v0.c0)OR(v0.c0)))OR(rt0.c0)), ((v0.c0)*(2.008347175E9)), CASE 0X52847163  WHEN rt0.c2 THEN v0.c0 ELSE NULL END, ((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), v0.c0, ((rt0.c0)OR(rt0.c2))))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (('-1e500')>>(NULL)) ELSE vt0.c0 END CROSS JOIN rt0 ON (((vt0.c0, 'qu(+ho', vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((((v0.c0)OR(v0.c0)))OR(rt0.c0)), ((v0.c0)*(2.008347175E9)), CASE 0X52847163  WHEN rt0.c2 THEN v0.c0 ELSE NULL END, ((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), v0.c0, ((rt0.c0)OR(rt0.c2))))) WHERE (((CASE WHEN rt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)==(((vt0.c0)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)=(((vt0.c0)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN (('-1e500')>>(NULL)) ELSE vt0.c0 END CROSS JOIN rt0 ON (((vt0.c0, 'qu(+ho', vt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN (((~ (vt0.c1)), ((((v0.c0)OR(v0.c0)))OR(rt0.c0)), ((v0.c0)*(2.008347175E9)), CASE 0X52847163  WHEN rt0.c2 THEN v0.c0 ELSE NULL END, ((rt0.c1) ISNULL))) AND ((rt0.c2 COLLATE RTRIM, v0.c0 COLLATE BINARY, ((vt0.c1) IS FALSE), v0.c0, ((rt0.c0)OR(rt0.c2))))));
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, 0x59915368, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, 0X59915368, vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, 0x59915368, vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, 0X59915368, vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (IFNULL(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), (((rt0.c1, vt0.c0, rt0.c1))>=((rt0.c0, 0x59915368, vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (((rt0.c2)&(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (((rt0.c2)&(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (((rt0.c2)&(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (((rt0.c2)&(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (x'') ORDER BY (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END IN (((rt0.c2)&(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))) ISNULL);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN NULL ELSE vt0.c1 END))) ORDER BY (- ((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN NULL ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (- ((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN NULL ELSE vt0.c1 END))) ORDER BY (- ((~ (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN rt0.c2 THEN NULL ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (- ((~ (rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((+ (CASE WHEN rt0.c2 THEN NULL ELSE vt0.c1 END))) ORDER BY (- ((~ (rt0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)IS(((rt0.c0)IS NOT(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0)IS(((rt0.c0)IS NOT(NULL)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)IS(((rt0.c0)IS NOT(NULL)))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))>((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, v0 ORDER BY ((v0.c0)IS(((rt0.c0)IS NOT(NULL)))) ASC);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0))>((rt0.c0))) COLLATE BINARY) ORDER BY ((v0.c0)IS(((rt0.c0)IS NOT(NULL)))) ASC;
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((-1147558383 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-1147558383 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((-1147558383 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-1147558383 IN ())) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((-1147558383 IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(((((rt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND(LIKELIHOOD(vt0.c0, 0.6993886368699118))) WHERE (-1.164782177E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.164782177E9) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(((((rt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND(LIKELIHOOD(vt0.c0, 0.6993886368699118))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(((((rt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND(LIKELIHOOD(vt0.c0, 0.6993886368699118))) WHERE (-1.164782177E9);
SELECT SUM(count) FROM (SELECT ALL ((-1.164782177E9) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(((((rt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND(LIKELIHOOD(vt0.c0, 0.6993886368699118))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((v0.c0)OR(((((rt0.c0)AND(vt0.c0)))AND(v0.c0)))))AND(LIKELIHOOD(vt0.c0, 0.6993886368699118))) WHERE (-1.164782177E9);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_VERSION());
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_VERSION());
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN ())) AND (1369421276))) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN ())) AND (1369421276))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN ())) AND (1369421276))) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN ())) AND (1369421276))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((CAST(v0.c0 AS NUMERIC)) BETWEEN ((v0.c0 IN ())) AND (1369421276))) ORDER BY (rt0.c2 COLLATE NOCASE IN ()) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((COALESCE(v0.c0, rt0.c1), CAST(vt0.c1 AS REAL), (((v0.c0))<((vt0.c1))))) AND ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c0)OR(vt0.c0)), ((NULL)>(vt0.c1))))) WHERE (GLOB(rt0.c1 COLLATE BINARY, (~ (0.24818568459150037))));
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c1 COLLATE BINARY, (~ (0.24818568459150037)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((COALESCE(v0.c0, rt0.c1), CAST(vt0.c1 AS REAL), (((v0.c0))<((vt0.c1))))) AND ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c0)OR(vt0.c0)), ((NULL)>(vt0.c1))))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((COALESCE(v0.c0, rt0.c1), CAST(vt0.c1 AS REAL), (((v0.c0))<((vt0.c1))))) AND ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c0)OR(vt0.c0)), ((NULL)>(vt0.c1))))) WHERE (GLOB(rt0.c1 COLLATE BINARY, (~ (0.24818568459150037))));
SELECT SUM(count) FROM (SELECT ((GLOB(rt0.c1 COLLATE BINARY, (~ (0.24818568459150037)))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((COALESCE(v0.c0, rt0.c1), CAST(vt0.c1 AS REAL), (((v0.c0))<((vt0.c1))))) AND ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c0)OR(vt0.c0)), ((NULL)>(vt0.c1))))));
SELECT * FROM vt0, v0 LEFT OUTER JOIN rt0 ON (((v0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((COALESCE(v0.c0, rt0.c1), CAST(vt0.c1 AS REAL), (((v0.c0))<((vt0.c1))))) AND ((((((rt0.c1)AND(rt0.c1)))OR(vt0.c0)), ((rt0.c0)OR(vt0.c0)), ((NULL)>(vt0.c1))))) WHERE (GLOB(rt0.c1 COLLATE BINARY, (~ (0.24818568459150037))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((NULL)GLOB(((((v0.c0)AND(rt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((v0.c0)AND(rt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((NULL)GLOB(((((v0.c0)AND(rt0.c2)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL)GLOB(((((v0.c0)AND(rt0.c2)))OR(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((NULL)GLOB(((((v0.c0)AND(rt0.c2)))OR(vt0.c1)))));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((v0.c0) NOT NULL) IN ()) WHERE (((rt0.c0)!=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((v0.c0) NOT NULL) IN ()));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((v0.c0) NOT NULL) IN ()) WHERE (((rt0.c0)!=(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<>(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON (((v0.c0) NOT NULL) IN ()));
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON (((v0.c0) NOT NULL) IN ()) WHERE (((rt0.c0)!=(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((+ (vt0.c0))))>((rt0.c0 COLLATE BINARY)))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((+ (vt0.c0))))>((rt0.c0 COLLATE BINARY)))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((+ (vt0.c0))))>((rt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((+ (vt0.c0))))>((rt0.c0 COLLATE BINARY)))) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (- (rt0.c2)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((v0.c0)<(rt0.c0)), rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (- (rt0.c2)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((v0.c0)<(rt0.c0)), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (- (rt0.c2)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((v0.c0)<(rt0.c0)), rt0.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (- (rt0.c2)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((v0.c0)<(rt0.c0)), rt0.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (- (rt0.c2)), (v0.c0 IN ()))) AND ((rt0.c0 COLLATE NOCASE, ((v0.c0)<(rt0.c0)), rt0.c1 COLLATE RTRIM))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS TEXT)) ORDER BY (+ ((('ld') IS TRUE))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1))))) ASC  NULLS LAST, NULLIF(DISTINCT ((((vt0.c1)AND(vt0.c0)))AND(0.6347619333604875)), ((('2124163782'))<=((0.7487428901614117)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((('ld') IS TRUE))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1))))) ASC  NULLS LAST, NULLIF(DISTINCT ((((vt0.c1)AND(vt0.c0)))AND(0.6347619333604875)), ((('2124163782'))<=((0.7487428901614117)))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS TEXT)) ORDER BY (+ ((('ld') IS TRUE))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1))))) ASC  NULLS LAST, NULLIF(DISTINCT ((((vt0.c1)AND(vt0.c0)))AND(0.6347619333604875)), ((('2124163782'))<=((0.7487428901614117)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (+ ((('ld') IS TRUE))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1))))) ASC  NULLS LAST, NULLIF(DISTINCT ((((vt0.c1)AND(vt0.c0)))AND(0.6347619333604875)), ((('2124163782'))<=((0.7487428901614117)))) DESC);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS TEXT)) ORDER BY (+ ((('ld') IS TRUE))) DESC, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)+(vt0.c0)))) AND (((vt0.c1 IN (vt0.c1))))) ASC  NULLS LAST, NULLIF(DISTINCT ((((vt0.c1)AND(vt0.c0)))AND(0.6347619333604875)), ((('2124163782'))<=((0.7487428901614117)))) DESC;
SELECT * FROM rt0 WHERE ((- ((((0.8953015768665474)) NOT BETWEEN ((rt0.c0)) AND ((x'6cb3')))))) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((0.8953015768665474)) NOT BETWEEN ((rt0.c0)) AND ((x'6cb3')))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((0.8953015768665474)) NOT BETWEEN ((rt0.c0)) AND ((x'6cb3')))))) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((0.8953015768665474)) NOT BETWEEN ((rt0.c0)) AND ((x'6cb3')))))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((- ((((0.8953015768665474)) NOT BETWEEN ((rt0.c0)) AND ((x'6cb3')))))) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1))!=((vt0.c1))))-(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.2526767812546745 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((vt0.c1))))-(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.2526767812546745 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1))!=((vt0.c1))))-(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.2526767812546745 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))!=((vt0.c1))))-(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.2526767812546745 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c1))!=((vt0.c1))))-(CASE WHEN rt0.c0 THEN rt0.c2 WHEN 0.2526767812546745 THEN rt0.c1 WHEN vt0.c1 THEN rt0.c0 ELSE rt0.c0 END)));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN (vt0.c1, vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c1, vt0.c0)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN (vt0.c1, vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c1, vt0.c0)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2 IN (vt0.c1, vt0.c0)))AND(CAST(vt0.c0 AS INTEGER))));
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))) CROSS JOIN v0 ON CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END THEN (((rt0.c2))<=((vt0.c0))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END WHERE (((LIKELY(DISTINCT rt0.c2))OR((rt0.c0 IN ())))) ORDER BY (rt0.c0 COLLATE RTRIM IN (rt0.c1)), NULL DESC  NULLS LAST, ((vt0.c1) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c2))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))) CROSS JOIN v0 ON CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END THEN (((rt0.c2))<=((vt0.c0))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END ORDER BY (rt0.c0 COLLATE RTRIM IN (rt0.c1)), NULL DESC  NULLS LAST, ((vt0.c1) IS TRUE) COLLATE NOCASE ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))) CROSS JOIN v0 ON CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END THEN (((rt0.c2))<=((vt0.c0))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END WHERE (((LIKELY(DISTINCT rt0.c2))OR((rt0.c0 IN ())))) ORDER BY (rt0.c0 COLLATE RTRIM IN (rt0.c1)), NULL DESC  NULLS LAST, ((vt0.c1) IS TRUE) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c2))OR((rt0.c0 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (- (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))) CROSS JOIN v0 ON CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END THEN (((rt0.c2))<=((vt0.c0))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END ORDER BY (rt0.c0 COLLATE RTRIM IN (rt0.c1)), NULL DESC  NULLS LAST, ((vt0.c1) IS TRUE) COLLATE NOCASE ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON (- (((((vt0.c0)AND(vt0.c1)))AND(rt0.c1)))) CROSS JOIN v0 ON CASE WHEN CASE rt0.c2  WHEN vt0.c1 THEN vt0.c1 ELSE rt0.c2 END THEN (((rt0.c2))<=((vt0.c0))) ELSE ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) END WHERE (((LIKELY(DISTINCT rt0.c2))OR((rt0.c0 IN ())))) ORDER BY (rt0.c0 COLLATE RTRIM IN (rt0.c1)), NULL DESC  NULLS LAST, ((vt0.c1) IS TRUE) COLLATE NOCASE ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (('-952689012')) AND ((rt0.c1))))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN (('-952689012')) AND ((rt0.c1))))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (('-952689012')) AND ((rt0.c1))))<<((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN (('-952689012')) AND ((rt0.c1))))<<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((((vt0.c1)) NOT BETWEEN (('-952689012')) AND ((rt0.c1))))<<((rt0.c2 IN ()))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) NOTNULL) AS REAL));
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR((((-1259520339)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((((-1259520339)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR((((-1259520339)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)OR((((-1259520339)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)OR((((-1259520339)) BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(((v0.c0)%(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (CAST(vt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS BLOB) IN ()));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (CAST(vt0.c1 AS BLOB) IN ());
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS BLOB) IN ()));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (CAST(vt0.c1 AS BLOB) IN ());
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((')O')AND(vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((')O')AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((')O')AND(vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((')O')AND(vt0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((')O')AND(vt0.c0)) COLLATE RTRIM WHERE (vt0.c0);
SELECT * FROM rt0, v0 WHERE ((NOT (((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (((rt0.c0)IS(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)IS(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (((rt0.c0)IS(rt0.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE (((rt0.c0, vt0.c1, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c0)))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END THEN rt0.c2 COLLATE BINARY END) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(((rt0.c1) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (5.77200131E8)))))AND((rt0.c2 IN ()))))AND((~ (rt0.c1)))))AND(x'b619'));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, vt0.c1, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c0)))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(((rt0.c1) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (5.77200131E8)))))AND((rt0.c2 IN ()))))AND((~ (rt0.c1)))))AND(x'b619')));
SELECT ALL * FROM rt0, vt0 WHERE (CASE (((rt0.c0, vt0.c1, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c0)))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END THEN rt0.c2 COLLATE BINARY END) ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(((rt0.c1) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (5.77200131E8)))))AND((rt0.c2 IN ()))))AND((~ (rt0.c1)))))AND(x'b619'));
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c0, vt0.c1, rt0.c1))<=((rt0.c2, vt0.c0, rt0.c0)))  WHEN CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c1 END THEN rt0.c2 COLLATE BINARY END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(((((vt0.c0)OR(vt0.c0)))AND(rt0.c1)))))AND(((rt0.c1) IS TRUE))))AND(((vt0.c1) NOT BETWEEN (rt0.c1) AND (5.77200131E8)))))AND((rt0.c2 IN ()))))AND((~ (rt0.c1)))))AND(x'b619')));
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.c1, vt0.c0, vt0.c0, rt0.c0))<((vt0.c0, rt0.c1, NULL, '2037549906', rt0.c0))))LIKE(0.816620976208203)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c1, vt0.c0, vt0.c0, rt0.c0))<((vt0.c0, rt0.c1, NULL, '2037549906', rt0.c0))))LIKE(0.816620976208203))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.c1, vt0.c0, vt0.c0, rt0.c0))<((vt0.c0, rt0.c1, NULL, '2037549906', rt0.c0))))LIKE(0.816620976208203)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c1, vt0.c0, vt0.c0, rt0.c0))<((vt0.c0, rt0.c1, NULL, '2037549906', rt0.c0))))LIKE(0.816620976208203))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2, vt0.c1, vt0.c0, vt0.c0, rt0.c0))<((vt0.c0, rt0.c1, NULL, '2037549906', rt0.c0))))LIKE(0.816620976208203)));
SELECT * FROM v0 WHERE (CASE WHEN ((((0.11585367516380618)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0)|(v0.c0)) WHEN ((v0.c0) NOT NULL) THEN (NOT ('P')) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) WHEN ((v0.c0) NOT BETWEEN ('218376701') AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM ELSE v0.c0 END) ORDER BY ((((v0.c0)|(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0.11585367516380618)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0)|(v0.c0)) WHEN ((v0.c0) NOT NULL) THEN (NOT ('P')) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) WHEN ((v0.c0) NOT BETWEEN ('218376701') AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(v0.c0))) ISNULL) ASC);
SELECT * FROM v0 WHERE (CASE WHEN ((((0.11585367516380618)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0)|(v0.c0)) WHEN ((v0.c0) NOT NULL) THEN (NOT ('P')) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) WHEN ((v0.c0) NOT BETWEEN ('218376701') AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM ELSE v0.c0 END) ORDER BY ((((v0.c0)|(v0.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((0.11585367516380618)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0)|(v0.c0)) WHEN ((v0.c0) NOT NULL) THEN (NOT ('P')) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) WHEN ((v0.c0) NOT BETWEEN ('218376701') AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM ELSE v0.c0 END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(v0.c0))) ISNULL) ASC);
SELECT * FROM v0 WHERE (CASE WHEN ((((0.11585367516380618)AND(v0.c0)))OR(v0.c0)) THEN ((v0.c0)|(v0.c0)) WHEN ((v0.c0) NOT NULL) THEN (NOT ('P')) WHEN v0.c0 COLLATE BINARY THEN (v0.c0 IN ()) WHEN ((v0.c0) NOT BETWEEN ('218376701') AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN v0.c0 COLLATE RTRIM ELSE v0.c0 END) ORDER BY ((((v0.c0)|(v0.c0))) ISNULL) ASC;
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY ((((((vt0.c1)OR(0Xffffffffdee359af)))OR(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c1)OR(0Xffffffffdee359af)))OR(rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY ((((((vt0.c1)OR(0Xffffffffdee359af)))OR(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((vt0.c1)OR(0Xffffffffdee359af)))OR(rt0.c0))) NOT NULL)  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((- (rt0.c1 COLLATE RTRIM))) ORDER BY ((((((vt0.c1)OR(0Xffffffffdee359af)))OR(rt0.c0))) NOT NULL)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((((NULL) NOTNULL)))<((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOTNULL)))<((rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((NULL) NOTNULL)))<((rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL) NOTNULL)))<((rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((((NULL) NOTNULL)))<((rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (x'');
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOTNULL)))=((((rt0.c0)<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOTNULL)))=((((rt0.c0)<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOTNULL)))=((((rt0.c0)<(rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) NOTNULL)))=((((rt0.c0)<(rt0.c0)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2) NOTNULL)))=((((rt0.c0)<(rt0.c0))))));
SELECT * FROM vt0, rt0, v0 WHERE (TYPEOF(((rt0.c0)LIKE(v0.c0)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0)LIKE(v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))));
SELECT * FROM vt0, rt0, v0 WHERE (TYPEOF(((rt0.c0)LIKE(v0.c0)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((rt0.c0)LIKE(v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1)))));
SELECT * FROM vt0, rt0, v0 WHERE (TYPEOF(((rt0.c0)LIKE(v0.c0)))) ORDER BY (NOT (((((vt0.c1)OR(vt0.c0)))OR(rt0.c1))));
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))), ((((vt0.c0) IS FALSE))>(NULLIF(vt0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(rt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))), ((((vt0.c0) IS FALSE))>(NULLIF(vt0.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))), ((((vt0.c0) IS FALSE))>(NULLIF(vt0.c0, rt0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)GLOB(rt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))), ((((vt0.c0) IS FALSE))>(NULLIF(vt0.c0, rt0.c2)))  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((((vt0.c0)GLOB(rt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) ORDER BY (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt0.c0))))<(((~ (vt0.c0))))), ((((vt0.c0) IS FALSE))>(NULLIF(vt0.c0, rt0.c2)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE ((('1652218456')<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('1652218456')<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((('1652218456')<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((('1652218456')<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE ((('1652218456')<(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY ABS(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY ABS(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2 COLLATE NOCASE COLLATE NOCASE) ORDER BY ABS(DISTINCT rt0.c1 COLLATE NOCASE)  NULLS FIRST;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) ISNULL) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) ISNULL) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) ISNULL) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) ISNULL) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) BETWEEN (rt0.c0) AND (vt0.c0))) ISNULL) WHERE (rt0.c1) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((~ (v0.c0))) BETWEEN ((v0.c0 IN (v0.c0))) AND (CAST(v0.c0 AS INTEGER))));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE '179895614' END))) ORDER BY rt0.c2 DESC, ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (((rt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE '179895614' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC, ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (((rt0.c0) ISNULL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE '179895614' END))) ORDER BY rt0.c2 DESC, ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (((rt0.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE '179895614' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2 DESC, ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (((rt0.c0) ISNULL))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c1 END) NOT BETWEEN (TYPEOF(DISTINCT vt0.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c2 ELSE '179895614' END))) ORDER BY rt0.c2 DESC, ((((((rt0.c0)OR(rt0.c0)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c0 END) AND (((rt0.c0) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (json_object(rt0.c2, NULL, rt0.c1, rt0.c0)) AND (TRIM(DISTINCT 0.9014152847899449)))) ORDER BY ((((rt0.c1) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (json_object(rt0.c2, NULL, rt0.c1, rt0.c0)) AND (TRIM(DISTINCT 0.9014152847899449)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c2))) NOT BETWEEN (json_object(rt0.c2, NULL, rt0.c1, rt0.c0)) AND (TRIM(DISTINCT 0.9014152847899449)))) ORDER BY ((((rt0.c1) IS FALSE)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c2))) NOT BETWEEN (json_object(rt0.c2, NULL, rt0.c1, rt0.c0)) AND (TRIM(DISTINCT 0.9014152847899449)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((('')%(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('')%(((x'') NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('')%(((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT (((('')%(((x'') NOT NULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((('')%(((x'') NOT NULL))));
SELECT COUNT(*) FROM v0 WHERE (CASE json_extract(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN (((v0.c0))<=((v0.c0))) THEN (NULL IN (v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN (- (v0.c0)) ELSE NULL END) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (NULL) AND (x'')))) AND (((((v0.c0))==((v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE json_extract(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN (((v0.c0))<=((v0.c0))) THEN (NULL IN (v0.c0)) WHEN ((v0.c0)=(v0.c0)) THEN (- (v0.c0)) ELSE NULL END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (NULL) AND (x'')))) AND (((((v0.c0))=((v0.c0))))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE json_extract(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN (((v0.c0))<=((v0.c0))) THEN (NULL IN (v0.c0)) WHEN ((v0.c0)==(v0.c0)) THEN (- (v0.c0)) ELSE NULL END) ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (NULL) AND (x'')))) AND (((((v0.c0))==((v0.c0))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE json_extract(v0.c0, v0.c0)  WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (+ (v0.c0)) WHEN (((v0.c0))<=((v0.c0))) THEN (NULL IN (v0.c0)) WHEN ((v0.c0)=(v0.c0)) THEN (- (v0.c0)) ELSE NULL END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (NULL) AND (x'')))) AND (((((v0.c0))=((v0.c0))))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))&((v0.c0 IN ()))) WHERE ((((rt0.c0)*(rt0.c1)) IN ())) ORDER BY CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN NULLIF(vt0.c1, rt0.c1) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c2)*(rt0.c1)) THEN ((rt0.c0)+(vt0.c1)) ELSE ((2.008347175E9)-(rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))&((v0.c0 IN ()))) ORDER BY CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN NULLIF(vt0.c1, rt0.c1) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c2)*(rt0.c1)) THEN ((rt0.c0)+(vt0.c1)) ELSE ((2.008347175E9)-(rt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))&((v0.c0 IN ()))) WHERE ((((rt0.c0)*(rt0.c1)) IN ())) ORDER BY CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN NULLIF(vt0.c1, rt0.c1) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c2)*(rt0.c1)) THEN ((rt0.c0)+(vt0.c1)) ELSE ((2.008347175E9)-(rt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)*(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))&((v0.c0 IN ()))) ORDER BY CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN NULLIF(vt0.c1, rt0.c1) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c2)*(rt0.c1)) THEN ((rt0.c0)+(vt0.c1)) ELSE ((2.008347175E9)-(rt0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON ((CAST(rt0.c1 AS REAL))&((v0.c0 IN ()))) WHERE ((((rt0.c0)*(rt0.c1)) IN ())) ORDER BY CASE WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN NULLIF(vt0.c1, rt0.c1) THEN ((v0.c0) IS FALSE) WHEN ((rt0.c2)*(rt0.c1)) THEN ((rt0.c0)+(vt0.c1)) ELSE ((2.008347175E9)-(rt0.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0 IN (v0.c0, 0xffffffffb3cb7a79)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, 0Xffffffffb3cb7a79)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0 IN (v0.c0, 0xffffffffb3cb7a79)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN (v0.c0, 0Xffffffffb3cb7a79)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((v0.c0 IN (v0.c0, 0xffffffffb3cb7a79)) IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)GLOB(v0.c0)) IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)GLOB(v0.c0)) IN ())) ORDER BY x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)GLOB(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY x''  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c0)GLOB(v0.c0)) IN ())) ORDER BY x''  NULLS LAST;
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) ISNULL) IN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((rt0.c1)>=((- (v0.c0))))) ORDER BY 0.6260833443404021, (((v0.c0)/(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=((- (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) ISNULL) IN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY 0.6260833443404021, (((v0.c0)/(rt0.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) ISNULL) IN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((rt0.c1)>=((- (v0.c0))))) ORDER BY 0.6260833443404021, (((v0.c0)/(rt0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)>=((- (v0.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) ISNULL) IN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) ORDER BY 0.6260833443404021, (((v0.c0)/(rt0.c1)) IN ())  NULLS LAST);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON (((rt0.c1) ISNULL) IN (CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c2 END)) WHERE (((rt0.c1)>=((- (v0.c0))))) ORDER BY 0.6260833443404021, (((v0.c0)/(rt0.c1)) IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0)=(v0.c0)), (((v0.c0))>=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0)=(v0.c0)), (((v0.c0))>=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0)=(v0.c0)), (((v0.c0))>=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(((v0.c0)=(v0.c0)), (((v0.c0))>=((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (MAX(((v0.c0)=(v0.c0)), (((v0.c0))>=((v0.c0)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS NOT(CASE WHEN rt0.c1 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS NOT(CASE WHEN rt0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS NOT(CASE WHEN rt0.c1 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS NOT(CASE WHEN rt0.c1 THEN v0.c0 END))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS NOT(CASE WHEN rt0.c1 THEN v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)LIKE(((vt0.c0)>=(rt0.c0)))) WHERE (CAST(vt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)LIKE(((vt0.c0)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)LIKE(((vt0.c0)>=(rt0.c0)))) WHERE (CAST(vt0.c1 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS BLOB)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)LIKE(((vt0.c0)>=(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((rt0.c0)LIKE(((vt0.c0)>=(rt0.c0)))) WHERE (CAST(vt0.c1 AS BLOB));
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c2))))<=((((rt0.c2)>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2))))<=((((rt0.c2)>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c2))))<=((((rt0.c2)>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((NOT (rt0.c2))))<=((((rt0.c2)>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NOT (rt0.c2))))<=((((rt0.c2)>(rt0.c1))))));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((1538412036 IN (rt0.c0)) IN ()) WHERE (((v0.c0)>>((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((1538412036 IN (rt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((1538412036 IN (rt0.c0)) IN ()) WHERE (((v0.c0)>>((- (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>>((- (rt0.c0))))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((1538412036 IN (rt0.c0)) IN ()));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((1538412036 IN (rt0.c0)) IN ()) WHERE (((v0.c0)>>((- (rt0.c0)))));
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)AND(vt0.c1)))) AND ((((vt0.c1)>(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)AND(vt0.c1)))) AND ((((vt0.c1)>(NULL)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)AND(vt0.c1)))) AND ((((vt0.c1)>(NULL)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)AND(vt0.c1)))) AND ((((vt0.c1)>(NULL)))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c1 AS BLOB))IS NOT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) ASC  NULLS FIRST, (((vt0.c1)) NOT BETWEEN ((((vt0.c0)AND(vt0.c1)))) AND ((((vt0.c1)>(NULL)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.9465695918233409 WHERE ('1635493647');
SELECT SUM(count) FROM (SELECT ALL (('1635493647') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 0.9465695918233409);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.9465695918233409 WHERE ('1635493647');
SELECT SUM(count) FROM (SELECT ALL (('1635493647') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON 0.9465695918233409);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON 0.9465695918233409 WHERE ('1635493647');
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((4.3320639E8)>>(0.45531569539679084)))*(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((4.3320639E8)>>(0.45531569539679084)))*(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((4.3320639E8)>>(0.45531569539679084)))*(((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((4.3320639E8)>>(0.45531569539679084)))*(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((4.3320639E8)>>(0.45531569539679084)))*(((vt0.c1) IS TRUE))));
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON CASE ((vt0.c1)<('151992350'))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN 'rhKw珄WL' THEN rt0.c0 END END WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON CASE ((vt0.c1)<('151992350'))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN 'rhKw珄WL' THEN rt0.c0 END END);
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON CASE ((vt0.c1)<('151992350'))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN 'rhKw珄WL' THEN rt0.c0 END END WHERE (vt0.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON CASE ((vt0.c1)<('151992350'))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN 'rhKw珄WL' THEN rt0.c0 END END);
SELECT ALL * FROM vt0, rt0 INNER JOIN v0 ON CASE ((vt0.c1)<('151992350'))  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) IS FALSE) ELSE CASE WHEN 'rhKw珄WL' THEN rt0.c0 END END WHERE (vt0.c1 COLLATE BINARY);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/((('''&0X▹TMtf')=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))/((('''&0X▹TMtf')=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/((('''&0X▹TMtf')=(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOTNULL))/((('''&0X▹TMtf')=(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL))/((('''&0X▹TMtf')=(v0.c0)))));
SELECT * FROM v0 WHERE (((',t+&>s|t') NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((v0.c0)OR('')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((',t+&>s|t') NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((v0.c0)OR('')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((',t+&>s|t') NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((v0.c0)OR('')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((',t+&>s|t') NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((v0.c0)OR('')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((',t+&>s|t') NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND (((((((((v0.c0)OR('')))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT * FROM rt0, vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((+ (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((+ (vt0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (HEX((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((v0.c0))>((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((v0.c0))>((v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (HEX((((v0.c0))>((v0.c0)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((NOT ('9ocweL%')))-(((rt0.c1) NOT NULL)))) ORDER BY (- ((0x3d62bc4d IN ())))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (0.9264054477980411)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('9ocweL%')))-(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- ((0x3d62bc4d IN ())))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (0.9264054477980411)) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((((NOT ('9ocweL%')))-(((rt0.c1) NOT NULL)))) ORDER BY (- ((0x3d62bc4d IN ())))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (0.9264054477980411)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT ('9ocweL%')))-(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (- ((0x3d62bc4d IN ())))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (0.9264054477980411)) DESC  NULLS FIRST);
SELECT * FROM v0, rt0, vt0 WHERE ((((NOT ('9ocweL%')))-(((rt0.c1) NOT NULL)))) ORDER BY (- ((0x3d62bc4d IN ())))  NULLS LAST, ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (LOWER(vt0.c1)) AND (0.9264054477980411)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) ORDER BY (CAST(rt0.c2 AS TEXT) IN (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c2 AS TEXT) IN (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) ORDER BY (CAST(rt0.c2 AS TEXT) IN (rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY (CAST(rt0.c2 AS TEXT) IN (rt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((- (CASE WHEN x'' THEN rt0.c1 WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 END))) ORDER BY (CAST(rt0.c2 AS TEXT) IN (rt0.c0 COLLATE NOCASE));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1 IN (vt0.c1))) IS FALSE)) ORDER BY ((((((((((vt0.c1)|(v0.c0)))OR((((v0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))))))OR(vt0.c1)))AND((((vt0.c0))>=((x'26d4'))))))OR(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)|(v0.c0)))OR((((v0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))))))OR(vt0.c1)))AND((((vt0.c0))>=((x'26d4'))))))OR(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1 IN (vt0.c1))) IS FALSE)) ORDER BY ((((((((((vt0.c1)|(v0.c0)))OR((((v0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))))))OR(vt0.c1)))AND((((vt0.c0))>=((x'26d4'))))))OR(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((vt0.c1)|(v0.c0)))OR((((v0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))))))OR(vt0.c1)))AND((((vt0.c0))>=((x'26d4'))))))OR(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1 IN (vt0.c1))) IS FALSE)) ORDER BY ((((((((((vt0.c1)|(v0.c0)))OR((((v0.c0)) NOT BETWEEN ((x'')) AND ((vt0.c1))))))OR(vt0.c1)))AND((((vt0.c0))>=((x'26d4'))))))OR(v0.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE (((((0.12195439225400317)<<(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.9417438142016166 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.12195439225400317)<<(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.9417438142016166 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (((((0.12195439225400317)<<(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.9417438142016166 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.12195439225400317)<<(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.9417438142016166 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN ()))) ASC);
SELECT ALL * FROM vt0 WHERE (((((0.12195439225400317)<<(vt0.c1))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 WHEN 0.9417438142016166 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CAST(vt0.c0 AS REAL)))) ORDER BY ((vt0.c0 COLLATE RTRIM)OR((vt0.c0 IN ()))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))GLOB((((x'')) BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((rt0.c1)|(vt0.c0)) COLLATE BINARY WHERE (((((NOT (rt0.c2))))<=((((rt0.c1)<<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c2))))<=((((rt0.c1)<<(vt0.c1)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((rt0.c1)|(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((rt0.c1)|(vt0.c0)) COLLATE BINARY WHERE (((((NOT (rt0.c2))))<=((((rt0.c1)<<(vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt0.c2))))<=((((rt0.c1)<<(vt0.c1)))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((rt0.c1)|(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((rt0.c1)|(vt0.c0)) COLLATE BINARY WHERE (((((NOT (rt0.c2))))<=((((rt0.c1)<<(vt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((NULL) BETWEEN (NULL) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))GLOB(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((NULL) BETWEEN (NULL) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))GLOB(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((NULL) BETWEEN (NULL) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))GLOB(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((NULL) BETWEEN (NULL) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))GLOB(((vt0.c0) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN ((NULL) BETWEEN (NULL) AND (vt0.c1)) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END END) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))GLOB(((vt0.c0) IS TRUE)))  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2))<>((rt0.c0))), json_extract(v0.c0, rt0.c0, 'd棄5inU', rt0.c2, rt0.c2, rt0.c1))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.7737345531943657 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, '()'))) WHERE ((((rt0.c2)GLOB(rt0.c1)) IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOTNULL)))) ORDER BY CASE CASE 0.34422082456669956  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN rt0.c2 COLLATE RTRIM THEN (('SH')=(rt0.c0)) END  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(rt0.c1)) IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2))!=((rt0.c0))), json_extract(v0.c0, rt0.c0, 'd棄5inU', rt0.c2, rt0.c2, rt0.c1))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.7737345531943657 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, '()'))) ORDER BY CASE CASE 0.34422082456669956  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN rt0.c2 COLLATE RTRIM THEN (('SH')==(rt0.c0)) END  NULLS LAST, rt0.c2 ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2))<>((rt0.c0))), json_extract(v0.c0, rt0.c0, 'd棄5inU', rt0.c2, rt0.c2, rt0.c1))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.7737345531943657 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, '()'))) WHERE ((((rt0.c2)GLOB(rt0.c1)) IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOTNULL)))) ORDER BY CASE CASE 0.34422082456669956  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN rt0.c2 COLLATE RTRIM THEN (('SH')=(rt0.c0)) END  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)GLOB(rt0.c1)) IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2))!=((rt0.c0))), json_extract(v0.c0, rt0.c0, 'd棄5inU', rt0.c2, rt0.c2, rt0.c1))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.7737345531943657 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, '()'))) ORDER BY CASE CASE 0.34422082456669956  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN rt0.c2 COLLATE RTRIM THEN (('SH')==(rt0.c0)) END  NULLS LAST, rt0.c2 ASC  NULLS LAST);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON (((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))), (((rt0.c2))<>((rt0.c0))), json_extract(v0.c0, rt0.c0, 'd棄5inU', rt0.c2, rt0.c2, rt0.c1))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.7737345531943657 ELSE rt0.c2 END, rt0.c0 COLLATE RTRIM, '()'))) WHERE ((((rt0.c2)GLOB(rt0.c1)) IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), ((rt0.c0) NOTNULL)))) ORDER BY CASE CASE 0.34422082456669956  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN rt0.c2 COLLATE RTRIM THEN (('SH')=(rt0.c0)) END  NULLS LAST, rt0.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c1) ORDER BY (((NOT (0.13807031782626966))) BETWEEN ((vt0.c0 IN (rt0.c0))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (0.13807031782626966))) BETWEEN ((vt0.c0 IN (rt0.c0))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c1) ORDER BY (((NOT (0.13807031782626966))) BETWEEN ((vt0.c0 IN (rt0.c0))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (0.13807031782626966))) BETWEEN ((vt0.c0 IN (rt0.c0))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 WHERE (vt0.c1) ORDER BY (((NOT (0.13807031782626966))) BETWEEN ((vt0.c0 IN (rt0.c0))) AND (((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))))  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c0)+(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((NOT (((rt0.c0)+(rt0.c0)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((('1393963894')<(v0.c0)))) AND ((((vt0.c0)>(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((('1393963894')<(v0.c0)))) AND ((((vt0.c0)>(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((('1393963894')<(v0.c0)))) AND ((((vt0.c0)>(v0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((('1393963894')<(v0.c0)))) AND ((((vt0.c0)>(v0.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1)) NOT BETWEEN (((('1393963894')<(v0.c0)))) AND ((((vt0.c0)>(v0.c0))))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE ((((((('-1164782177')AND(0.9983884069142672)))AND(rt0.c1))) BETWEEN ((((vt0.c0, rt0.c2, vt0.c0))>=((vt0.c1, NULL, rt0.c1)))) AND (CASE vt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE 0.11650228330036805 END))) ORDER BY ((vt0.c0)*(rt0.c1));
SELECT SUM(count) FROM (SELECT (((((((('-1164782177')AND(0.9983884069142672)))AND(rt0.c1))) BETWEEN ((((vt0.c0, rt0.c2, vt0.c0))>=((vt0.c1, NULL, rt0.c1)))) AND (CASE vt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE 0.11650228330036805 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((vt0.c0)*(rt0.c1)));
SELECT * FROM rt0, vt0, v0 WHERE ((((((('-1164782177')AND(0.9983884069142672)))AND(rt0.c1))) BETWEEN ((((vt0.c0, rt0.c2, vt0.c0))>=((vt0.c1, NULL, rt0.c1)))) AND (CASE vt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE 0.11650228330036805 END))) ORDER BY ((vt0.c0)*(rt0.c1));
SELECT SUM(count) FROM (SELECT (((((((('-1164782177')AND(0.9983884069142672)))AND(rt0.c1))) BETWEEN ((((vt0.c0, rt0.c2, vt0.c0))>=((vt0.c1, NULL, rt0.c1)))) AND (CASE vt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE 0.11650228330036805 END))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((vt0.c0)*(rt0.c1)));
SELECT * FROM rt0, vt0, v0 WHERE ((((((('-1164782177')AND(0.9983884069142672)))AND(rt0.c1))) BETWEEN ((((vt0.c0, rt0.c2, vt0.c0))>=((vt0.c1, NULL, rt0.c1)))) AND (CASE vt0.c0  WHEN v0.c0 THEN rt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 ELSE 0.11650228330036805 END))) ORDER BY ((vt0.c0)*(rt0.c1));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE WHEN ((x'7ad7')AND(rt0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN (~ (x'')) THEN NULL WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'' END WHEN ((v0.c0)%(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN x'1185' ELSE (rt0.c2 IN ()) END WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c0 ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c0 ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN ((x'7ad7')AND(rt0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN (~ (x'')) THEN NULL WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'' END WHEN ((v0.c0)%(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN x'1185' ELSE (rt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE WHEN ((x'7ad7')AND(rt0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN (~ (x'')) THEN NULL WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'' END WHEN ((v0.c0)%(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN x'1185' ELSE (rt0.c2 IN ()) END WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c0 ELSE CAST(rt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c0 ELSE CAST(rt0.c1 AS REAL) END) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE WHEN ((x'7ad7')AND(rt0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN (~ (x'')) THEN NULL WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'' END WHEN ((v0.c0)%(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN x'1185' ELSE (rt0.c2 IN ()) END);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON CASE WHEN ((x'7ad7')AND(rt0.c0)) THEN CAST(v0.c0 AS NUMERIC) WHEN (~ (x'')) THEN NULL WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c2 THEN NULL WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE x'' END WHEN ((v0.c0)%(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END WHEN CAST(rt0.c0 AS BLOB) THEN x'1185' ELSE (rt0.c2 IN ()) END WHERE (CASE WHEN ((rt0.c0) IS TRUE) THEN rt0.c0 ELSE CAST(rt0.c1 AS REAL) END);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)|(rt0.c2)) IN ())) ORDER BY highlight((- (rt0.c2)), CAST(rt0.c0 AS BLOB), CAST(0.055840886495142183 AS TEXT), (('	Ⴆg') IS FALSE)) DESC  NULLS FIRST, ((((('141027100', rt0.c1, vt0.c1))>=((rt0.c1, rt0.c2, vt0.c1))))/((((vt0.c1))=((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY highlight((- (rt0.c2)), CAST(rt0.c0 AS BLOB), CAST(0.055840886495142183 AS TEXT), (('	Ⴆg') IS FALSE)) DESC  NULLS FIRST, ((((('141027100', rt0.c1, vt0.c1))>=((rt0.c1, rt0.c2, vt0.c1))))/((((vt0.c1))=((vt0.c1))))) ASC);
SELECT * FROM vt0, rt0 WHERE ((((vt0.c0)|(rt0.c2)) IN ())) ORDER BY highlight((- (rt0.c2)), CAST(rt0.c0 AS BLOB), CAST(0.055840886495142183 AS TEXT), (('	Ⴆg') IS FALSE)) DESC  NULLS FIRST, ((((('141027100', rt0.c1, vt0.c1))>=((rt0.c1, rt0.c2, vt0.c1))))/((((vt0.c1))=((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY highlight((- (rt0.c2)), CAST(rt0.c0 AS BLOB), CAST(0.055840886495142183 AS TEXT), (('	Ⴆg') IS FALSE)) DESC  NULLS FIRST, ((((('141027100', rt0.c1, vt0.c1))>=((rt0.c1, rt0.c2, vt0.c1))))/((((vt0.c1))=((vt0.c1))))) ASC);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((((((rt0.c0, vt0.c1, vt0.c0))==((rt0.c2, rt0.c0, vt0.c0))))OR(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c1)))))AND(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, vt0.c1, vt0.c0))==((rt0.c2, rt0.c0, vt0.c0))))OR(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c1)))))AND(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((((((rt0.c0, vt0.c1, vt0.c0))==((rt0.c2, rt0.c0, vt0.c0))))OR(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c1)))))AND(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0, vt0.c1, vt0.c0))==((rt0.c2, rt0.c0, vt0.c0))))OR(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c1)))))AND(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE ((((((((((((rt0.c0, vt0.c1, vt0.c0))==((rt0.c2, rt0.c0, vt0.c0))))OR(vt0.c1)))OR(vt0.c1 COLLATE NOCASE)))AND(((vt0.c0)&(vt0.c1)))))AND(CASE v0.c0  WHEN vt0.c1 THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON (('-1734868407')LIKE(((v0.c0) NOT NULL))) WHERE ((('-392210776') BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-392210776') BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON (('-1734868407')LIKE(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON (('-1734868407')LIKE(((v0.c0) NOT NULL))) WHERE ((('-392210776') BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-392210776') BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON (('-1734868407')LIKE(((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM v0 NOT INDEXED FULL OUTER JOIN vt0 ON (((vt0.c1 IN ())) NOT NULL) RIGHT OUTER JOIN rt0 ON (('-1734868407')LIKE(((v0.c0) NOT NULL))) WHERE ((('-392210776') BETWEEN (CASE WHEN v0.c0 THEN vt0.c0 END) AND (((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))));
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c0, x''))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0, v0.c0, x''))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c0, x''))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, v0.c0, v0.c0, v0.c0, x''))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0, v0.c0, v0.c0, v0.c0, x''))<((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0))))AND((v0.c0 IN ()))))OR(v0.c0 COLLATE RTRIM)));
SELECT * FROM vt0 WHERE (CAST(0.00992537037303065 AS BLOB)) ORDER BY HEX((+ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.00992537037303065 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY HEX((+ (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(0.00992537037303065 AS BLOB)) ORDER BY HEX((+ (vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(0.00992537037303065 AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY HEX((+ (vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (CAST(0.00992537037303065 AS BLOB)) ORDER BY HEX((+ (vt0.c0))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, rt0 WHERE ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END IN (((((rt0.c1)AND(NULL)))OR(rt0.c2)), 0.11585367516380618)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END IN (((((rt0.c1)AND(NULL)))OR(rt0.c2)), 0.11585367516380618))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END IN (((((rt0.c1)AND(NULL)))OR(rt0.c2)), 0.11585367516380618)));
SELECT SUM(count) FROM (SELECT (((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END IN (((((rt0.c1)AND(NULL)))OR(rt0.c2)), 0.11585367516380618))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END IN (((((rt0.c1)AND(NULL)))OR(rt0.c2)), 0.11585367516380618)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((0.2885273441244749) NOTNULL))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0.2885273441244749) NOTNULL))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((0.2885273441244749) NOTNULL))<(rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0.2885273441244749) NOTNULL))<(rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((0.2885273441244749) NOTNULL))<(rt0.c0 COLLATE BINARY)));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c0) NOT NULL))|((v0.c0 IN ())))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))|((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c0) NOT NULL))|((v0.c0 IN ())))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL))|((v0.c0 IN ())))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((- (rt0.c2))) IS TRUE));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((rt0.c0) NOT NULL))|((v0.c0 IN ())))) ORDER BY (((- (rt0.c2))) IS TRUE);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT vt0.c1)) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TYPEOF(DISTINCT vt0.c1)) IS FALSE));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND ((((vt0.c0))!=((0Xffffffffcba8733f))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND ((((vt0.c0))!=((0xffffffffcba8733f)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND ((((vt0.c0))!=((0Xffffffffcba8733f))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND ((((vt0.c0))!=((0xffffffffcba8733f)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) NOT BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND ((((vt0.c0))!=((0Xffffffffcba8733f))))));
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((rt0.c0) BETWEEN (x'3a13') AND (vt0.c0)) END WHERE (((rt0.c2)!=(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END)LIKE(CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((rt0.c0) BETWEEN (x'3a13') AND (vt0.c0)) END ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END)LIKE(CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((rt0.c0) BETWEEN (x'3a13') AND (vt0.c0)) END WHERE (((rt0.c2)!=(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END)LIKE(CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)<>(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((rt0.c0) BETWEEN (x'3a13') AND (vt0.c0)) END ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END)LIKE(CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ASC);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((rt0.c0) BETWEEN (x'3a13') AND (vt0.c0)) END WHERE (((rt0.c2)!=(vt0.c0)) COLLATE BINARY) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN rt0.c1 END)LIKE(CASE vt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)) ASC;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c1)))<((rt0.c2 IN ())))) ORDER BY json_extract(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), (NOT (rt0.c1)), NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c1)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY json_extract(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), (NOT (rt0.c1)), NULL));
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c0)<=(rt0.c1)))<((rt0.c2 IN ())))) ORDER BY json_extract(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), (NOT (rt0.c1)), NULL);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)<=(rt0.c1)))<((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY json_extract(((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)), (rt0.c0 IN ()), (NOT (rt0.c1)), NULL));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((x'')>('1357651969'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'')>('1357651969'))  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((x'')>('1357651969'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((x'')>('1357651969'))  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((vt0.c0) NOT NULL)) NOTNULL)) ORDER BY ((x'')>('1357651969'))  NULLS LAST;
SELECT * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (v0.c0);
SELECT * FROM v0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c0))%((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0))%((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c0))%((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(DISTINCT rt0.c0))%((rt0.c2 IN ())))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((ABS(DISTINCT rt0.c0))%((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<>(rt0.c2)))<=(rt0.c2 COLLATE NOCASE))) ORDER BY ((rt0.c2)&(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c2)))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)&(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<>(rt0.c2)))<=(rt0.c2 COLLATE NOCASE))) ORDER BY ((rt0.c2)&(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)<>(rt0.c2)))<=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c2)&(rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)<>(rt0.c2)))<=(rt0.c2 COLLATE NOCASE))) ORDER BY ((rt0.c2)&(rt0.c1));
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))OR((((v0.c0))<((rt0.c1))))))OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) WHERE ((- (v0.c0))) ORDER BY LTRIM(((rt0.c2)||(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))OR((((v0.c0))<((rt0.c1))))))OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) ORDER BY LTRIM(((rt0.c2)||(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))OR((((v0.c0))<((rt0.c1))))))OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) WHERE ((- (v0.c0))) ORDER BY LTRIM(((rt0.c2)||(vt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (v0.c0))) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))OR((((v0.c0))<((rt0.c1))))))OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) ORDER BY LTRIM(((rt0.c2)||(vt0.c1))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON ((((((((((rt0.c1) IS TRUE))AND(vt0.c0 COLLATE RTRIM)))OR((((v0.c0))<((rt0.c1))))))OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) WHERE ((- (v0.c0))) ORDER BY LTRIM(((rt0.c2)||(vt0.c1))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((('')AND(0.1300208667849032)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(0.1300208667849032)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((('')AND(0.1300208667849032)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((('')AND(0.1300208667849032)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((('')AND(0.1300208667849032)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c2)))<<(LIKELY(x'f3ad'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c2)))<<(LIKELY(x'f3ad')))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c2)))<<(LIKELY(x'f3ad'))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c2)))<<(LIKELY(x'f3ad')))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)>(rt0.c2)))<<(LIKELY(x'f3ad'))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE 'q3\n㐠i8 )'  WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE (rt0.c1 IN ()) END) ORDER BY ((((((((((0.878623027691385) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND(CASE rt0.c1  WHEN vt0.c1 THEN NULL END)))OR(((v0.c0)<<(v0.c0)))))AND((+ (rt0.c2)))))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 'q3\n㐠i8 )'  WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((0.878623027691385) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND(CASE rt0.c1  WHEN vt0.c1 THEN NULL END)))OR(((v0.c0)<<(v0.c0)))))AND((+ (rt0.c2)))))OR(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE 'q3\n㐠i8 )'  WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE (rt0.c1 IN ()) END) ORDER BY ((((((((((0.878623027691385) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND(CASE rt0.c1  WHEN vt0.c1 THEN NULL END)))OR(((v0.c0)<<(v0.c0)))))AND((+ (rt0.c2)))))OR(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE 'q3\n㐠i8 )'  WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((((((((0.878623027691385) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND(CASE rt0.c1  WHEN vt0.c1 THEN NULL END)))OR(((v0.c0)<<(v0.c0)))))AND((+ (rt0.c2)))))OR(rt0.c0)) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (CASE 'q3\n㐠i8 )'  WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c2  WHEN vt0.c1 THEN rt0.c1 ELSE rt0.c1 END ELSE (rt0.c1 IN ()) END) ORDER BY ((((((((((0.878623027691385) NOT BETWEEN (vt0.c1) AND (v0.c0)))AND(CASE rt0.c1  WHEN vt0.c1 THEN NULL END)))OR(((v0.c0)<<(v0.c0)))))AND((+ (rt0.c2)))))OR(rt0.c0)) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CAST(v0.c0 AS REAL)) NOT BETWEEN (((vt0.c1)IS NOT(vt0.c1))) AND (CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))>=((((vt0.c1)==(vt0.c1)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c1))))>=((((vt0.c1)=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))>=((((vt0.c1)==(vt0.c1)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((- (vt0.c1))))>=((((vt0.c1)=(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT COUNT(*) FROM vt0 WHERE (((((- (vt0.c1))))>=((((vt0.c1)==(vt0.c1)))))) ORDER BY NULL;
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY ((-1567610265 COLLATE BINARY)<=((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((-1567610265 COLLATE BINARY)<=((- (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY ((-1567610265 COLLATE BINARY)<=((- (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((-1567610265 COLLATE BINARY)<=((- (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY ((-1567610265 COLLATE BINARY)<=((- (v0.c0))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((rt0.c1)&(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c1)&(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((rt0.c1)&(vt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c1)&(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID()) ORDER BY ((((rt0.c1)&(vt0.c0))) NOTNULL);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.35504385585876064)) ORDER BY ((v0.c0 COLLATE BINARY)AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (0.4982702770519539)))<<(CASE WHEN 0.9863403526847488 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.35504385585876064)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (0.4982702770519539)))<<(CASE WHEN 0.9863403526847488 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.35504385585876064)) ORDER BY ((v0.c0 COLLATE BINARY)AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (0.4982702770519539)))<<(CASE WHEN 0.9863403526847488 THEN v0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.35504385585876064)) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY)AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (0.4982702770519539)))<<(CASE WHEN 0.9863403526847488 THEN v0.c0 ELSE v0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT v0.c0 COLLATE NOCASE, 0.35504385585876064)) ORDER BY ((v0.c0 COLLATE BINARY)AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))), ((((v0.c0) NOT BETWEEN (v0.c0) AND (0.4982702770519539)))<<(CASE WHEN 0.9863403526847488 THEN v0.c0 ELSE v0.c0 END));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN '' END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c0 IN ()) THEN '' END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c0 IN ()) THEN '' END);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (TOTAL_CHANGES());
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE (TOTAL_CHANGES());
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (MAX(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE 0Xffffffffdaef614f END, (vt0.c0 IN (x''))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE 0xffffffffdaef614f END, (vt0.c0 IN (x'')))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (MAX(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE 0Xffffffffdaef614f END, (vt0.c0 IN (x''))));
SELECT SUM(count) FROM (SELECT ((MAX(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE 0xffffffffdaef614f END, (vt0.c0 IN (x'')))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (MAX(CASE vt0.c1  WHEN vt0.c1 THEN rt0.c2 ELSE 0Xffffffffdaef614f END, (vt0.c0 IN (x''))));
SELECT * FROM vt0 WHERE (CASE WHEN '' THEN TYPEOF(0.5019898672633549) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((vt0.c1)<(vt0.c1)))OR(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN TYPEOF(0.5019898672633549) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<(vt0.c1)))OR(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN '' THEN TYPEOF(0.5019898672633549) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((vt0.c1)<(vt0.c1)))OR(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '' THEN TYPEOF(0.5019898672633549) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<(vt0.c1)))OR(((vt0.c0) NOT NULL)))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN '' THEN TYPEOF(0.5019898672633549) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END) ORDER BY ((((vt0.c1)<(vt0.c1)))OR(((vt0.c0) NOT NULL)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE (((((vt0.c1)==(rt0.c2))) NOT NULL)) ORDER BY ((CAST(0.8840484338777708 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0)&(vt0.c1))))  NULLS LAST, NULL COLLATE RTRIM DESC, ((vt0.c1) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c1 AS REAL))) ORDER BY ((CAST(0.8840484338777708 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0)&(vt0.c1))))  NULLS LAST, NULL COLLATE RTRIM DESC, ((vt0.c1) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE (((((vt0.c1)==(rt0.c2))) NOT NULL)) ORDER BY ((CAST(0.8840484338777708 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0)&(vt0.c1))))  NULLS LAST, NULL COLLATE RTRIM DESC, ((vt0.c1) NOT NULL) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)=(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c1 AS REAL))) ORDER BY ((CAST(0.8840484338777708 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0)&(vt0.c1))))  NULLS LAST, NULL COLLATE RTRIM DESC, ((vt0.c1) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 LEFT OUTER JOIN v0 ON (+ (CAST(rt0.c1 AS REAL))) WHERE (((((vt0.c1)==(rt0.c2))) NOT NULL)) ORDER BY ((CAST(0.8840484338777708 AS INTEGER)) NOT BETWEEN (CAST(vt0.c0 AS REAL)) AND (((rt0.c0)&(vt0.c1))))  NULLS LAST, NULL COLLATE RTRIM DESC, ((vt0.c1) NOT NULL) COLLATE BINARY;
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c1)AND(x'')))OR(rt0.c0)) END WHERE (((((v0.c0)/(vt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(vt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c1)AND(x'')))OR(rt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c1)AND(x'')))OR(rt0.c0)) END WHERE (((((v0.c0)/(vt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)/(vt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c1)AND(x'')))OR(rt0.c0)) END);
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON CASE WHEN (~ (vt0.c0)) THEN ((((vt0.c1)AND(x'')))OR(rt0.c0)) END WHERE (((((v0.c0)/(vt0.c1))) NOT BETWEEN (CASE rt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) AND (((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c2)))-(CAST('-1049233213' AS BLOB)))) ORDER BY ((((((rt0.c0)GLOB(rt0.c1)))AND(((rt0.c2) NOTNULL))))AND(LIKE(rt0.c2, rt0.c1, 'l'))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(rt0.c2)))-(CAST('-1049233213' AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)GLOB(rt0.c1)))AND(((rt0.c2) NOTNULL))))AND(LIKE(rt0.c2, rt0.c1, 'l'))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c2)))-(CAST('-1049233213' AS BLOB)))) ORDER BY ((((((rt0.c0)GLOB(rt0.c1)))AND(((rt0.c2) NOTNULL))))AND(LIKE(rt0.c2, rt0.c1, 'l'))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)=(rt0.c2)))-(CAST('-1049233213' AS BLOB)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c0)GLOB(rt0.c1)))AND(((rt0.c2) NOTNULL))))AND(LIKE(rt0.c2, rt0.c1, 'l'))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)==(rt0.c2)))-(CAST('-1049233213' AS BLOB)))) ORDER BY ((((((rt0.c0)GLOB(rt0.c1)))AND(((rt0.c2) NOTNULL))))AND(LIKE(rt0.c2, rt0.c1, 'l'))) DESC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((rt0.c1)|(vt0.c1)))>(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(vt0.c1)))>(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((rt0.c1)|(vt0.c1)))>(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN (vt0.c1))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1)|(vt0.c1)))>(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE ((((((vt0.c0)AND(rt0.c0)))AND(rt0.c1)) IN ((rt0.c1 IN (vt0.c1))))) ORDER BY ((((rt0.c1)|(vt0.c1)))>(vt0.c1 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))|(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c1))))|(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))|(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1))>=((rt0.c1))))|(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1))>=((rt0.c1))))|(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ('-1979449785')));
SELECT SUM(count) FROM (SELECT (((NOT ('-1979449785'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ('-1979449785')));
SELECT SUM(count) FROM (SELECT (((NOT ('-1979449785'))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT ('-1979449785')));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL))LIKE(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)=(rt0.c1))) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c2)==(rt0.c1))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL))LIKE(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL))LIKE(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)=(rt0.c1))) AND (((vt0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) BETWEEN (((rt0.c2)==(rt0.c1))) AND (((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL))LIKE(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOTNULL))LIKE(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)))) WHERE ((((- (rt0.c1))) BETWEEN (((rt0.c2)=(rt0.c1))) AND (((vt0.c1) IS TRUE))));
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((NULLIF(rt0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((NULLIF(rt0.c2, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((NULLIF(rt0.c2, v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((NULLIF(rt0.c2, v0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((rt0.c2)) NOT BETWEEN ((CAST(rt0.c2 AS TEXT))) AND ((NULLIF(rt0.c2, v0.c0)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN '-2034219822' ELSE rt0.c2 END))) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2, 'E'))|((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN '-2034219822' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2, 'E'))|((~ (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN '-2034219822' ELSE rt0.c2 END))) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2, 'E'))|((~ (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN '-2034219822' ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2, 'E'))|((~ (rt0.c2)))));
SELECT * FROM rt0 WHERE ((((((rt0.c1, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c1)) AND ((rt0.c0, rt0.c2, rt0.c1))))*(CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN NULL THEN '-2034219822' ELSE rt0.c2 END))) ORDER BY (((+ (rt0.c2))) NOTNULL) ASC  NULLS LAST, ((LIKE(rt0.c1, rt0.c2, 'E'))|((~ (rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN ((rt0.c2)OR(vt0.c0)) THEN (- (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN ((rt0.c2)OR(vt0.c0)) THEN (- (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN ((rt0.c2)OR(vt0.c0)) THEN (- (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c0  WHEN ((rt0.c2)OR(vt0.c0)) THEN (- (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE rt0.c0  WHEN ((rt0.c2)OR(vt0.c0)) THEN (- (vt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN ((rt0.c2)>(NULL)) THEN ((((rt0.c0)AND(rt0.c1)))OR(x'')) END);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((v0.c0)>(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0)>(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((v0.c0)>(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0)>(v0.c0)))) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) ORDER BY (~ (((v0.c0)>(v0.c0)))) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((vt0.c0 IN (0.23837697360970533)) COLLATE RTRIM) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c2)<<(v0.c0)))))  NULLS FIRST, TRIM(DISTINCT ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)), (((('1058122683')AND(v0.c0)))OR(vt0.c1))) DESC, (('i\n') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (0.23837697360970533)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c2)<<(v0.c0)))))  NULLS FIRST, TRIM(DISTINCT ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)), (((('1058122683')AND(v0.c0)))OR(vt0.c1))) DESC, (('i\n') NOT NULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((vt0.c0 IN (0.23837697360970533)) COLLATE RTRIM) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c2)<<(v0.c0)))))  NULLS FIRST, TRIM(DISTINCT ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)), (((('1058122683')AND(v0.c0)))OR(vt0.c1))) DESC, (('i\n') NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (0.23837697360970533)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c2)<<(v0.c0)))))  NULLS FIRST, TRIM(DISTINCT ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)), (((('1058122683')AND(v0.c0)))OR(vt0.c1))) DESC, (('i\n') NOT NULL));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((vt0.c0 IN (0.23837697360970533)) COLLATE RTRIM) ORDER BY (((v0.c0)) NOT BETWEEN ((((rt0.c0) ISNULL))) AND ((((rt0.c2)<<(v0.c0)))))  NULLS FIRST, TRIM(DISTINCT ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)), (((('1058122683')AND(v0.c0)))OR(vt0.c1))) DESC, (('i\n') NOT NULL);
SELECT * FROM vt0, v0 WHERE ((((((~ (vt0.c0)))AND(((v0.c0) ISNULL))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((v0.c0) ISNULL))))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((~ (vt0.c0)))AND(((v0.c0) ISNULL))))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((~ (vt0.c0)))AND(((v0.c0) ISNULL))))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((((~ (vt0.c0)))AND(((v0.c0) ISNULL))))OR(v0.c0)));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN x'9e01' ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN x'9e01' ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN x'9e01' ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN x'9e01' ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN x'9e01' ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END)=(((vt0.c1) NOT NULL)))) ORDER BY ((v0.c0) BETWEEN (((vt0.c1)-(vt0.c1))) AND (223228173 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 END)==(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOTNULL) ORDER BY ((v0.c0) BETWEEN (((vt0.c1)-(vt0.c1))) AND (223228173 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END)=(((vt0.c1) NOT NULL)))) ORDER BY ((v0.c0) BETWEEN (((vt0.c1)-(vt0.c1))) AND (223228173 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 END)==(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOTNULL) ORDER BY ((v0.c0) BETWEEN (((vt0.c1)-(vt0.c1))) AND (223228173 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((vt0.c1) NOTNULL) WHERE (((CASE WHEN vt0.c0 THEN v0.c0 END)=(((vt0.c1) NOT NULL)))) ORDER BY ((v0.c0) BETWEEN (((vt0.c1)-(vt0.c1))) AND (223228173 COLLATE RTRIM))  NULLS LAST, ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1))!=((rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (((-289355268)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (((-289355268)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1))!=((rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (((-289355268)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))!=((rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (((-289355268)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((((vt0.c1))!=((rt0.c1)))) NOT BETWEEN ((((rt0.c2))=((rt0.c2)))) AND (((-289355268)GLOB(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, 0.8217471992953698)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN '5' THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN 0.2246441072808455 END) ORDER BY 9223372036854775807;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, 0.8217471992953698)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN '5' THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN 0.2246441072808455 END) IS TRUE)  as count FROM vt0 ORDER BY 9223372036854775807);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, 0.8217471992953698)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN '5' THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN 0.2246441072808455 END) ORDER BY 9223372036854775807;
SELECT SUM(count) FROM (SELECT ALL ((CASE (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, 0.8217471992953698)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN '5' THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN 0.2246441072808455 END) IS TRUE)  as count FROM vt0 ORDER BY 9223372036854775807);
SELECT COUNT(*) FROM vt0 WHERE (CASE (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c0, 0.8217471992953698)))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN '5' THEN (vt0.c1 IN ()) WHEN vt0.c1 THEN 0.2246441072808455 END) ORDER BY 9223372036854775807;
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((NULLIF(DISTINCT vt0.c1, vt0.c1))AND(LOWER(DISTINCT vt0.c0))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c1, vt0.c1))AND(LOWER(DISTINCT vt0.c0))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((NULLIF(DISTINCT vt0.c1, vt0.c1))AND(LOWER(DISTINCT vt0.c0))))OR(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(DISTINCT vt0.c1, vt0.c1))AND(LOWER(DISTINCT vt0.c0))))OR(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (((((NULLIF(DISTINCT vt0.c1, vt0.c1))AND(LOWER(DISTINCT vt0.c0))))OR(CAST(vt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.00781664670762472);
SELECT SUM(count) FROM (SELECT ALL ((0.00781664670762472) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.00781664670762472);
SELECT SUM(count) FROM (SELECT ALL ((0.00781664670762472) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (0.00781664670762472);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c1);
SELECT * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(rt0.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((v0.c0)AND(rt0.c0))) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0) IS FALSE))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((x'') BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(rt0.c2)) WHERE (json_array_length(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((x'') BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(rt0.c2)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((x'') BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(rt0.c2)) WHERE (json_array_length(rt0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((json_array_length(rt0.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((((x'') BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(rt0.c2)));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((((x'') BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(rt0.c2)) WHERE (json_array_length(rt0.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49203397804228943 COLLATE RTRIM) ORDER BY 0.043392422747541626 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.49203397804228943 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY 0.043392422747541626 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49203397804228943 COLLATE RTRIM) ORDER BY 0.043392422747541626 COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.49203397804228943 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY 0.043392422747541626 COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.49203397804228943 COLLATE RTRIM) ORDER BY 0.043392422747541626 COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE (((NULL)IS NOT(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL)IS NOT(((rt0.c0)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)IS NOT(((rt0.c0)+(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (((NULL)IS NOT(((rt0.c0)+(rt0.c2)))));
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)<=(rt0.c0))))>((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c0))))>((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)<=(rt0.c0))))>((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1)<=(rt0.c0))))>((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))))) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE ((((((rt0.c1)<=(rt0.c0))))>((((((rt0.c2)AND(v0.c0)))AND(v0.c0)))))) ORDER BY rt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 AS TEXT) COLLATE NOCASE);
SELECT * FROM vt0, v0, rt0 WHERE (LIKE(rt0.c0, (((v0.c0))!=((rt0.c0))), '-')) ORDER BY ((vt0.c1) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c0, (((v0.c0))<>((rt0.c0))), '-')) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((vt0.c1) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (LIKE(rt0.c0, (((v0.c0))!=((rt0.c0))), '-')) ORDER BY ((vt0.c1) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKE(rt0.c0, (((v0.c0))<>((rt0.c0))), '-')) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((vt0.c1) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 WHERE (LIKE(rt0.c0, (((v0.c0))!=((rt0.c0))), '-')) ORDER BY ((vt0.c1) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0, v0.c0, vt0.c1))<=((rt0.c0, vt0.c0, v0.c0))) IN ()) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0, v0.c0, vt0.c1))<=((rt0.c0, vt0.c0, v0.c0))) IN ()));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0, v0.c0, vt0.c1))<=((rt0.c0, vt0.c0, v0.c0))) IN ()) WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0, v0.c0, vt0.c1))<=((rt0.c0, vt0.c0, v0.c0))) IN ()));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN rt0 ON ((((vt0.c0, v0.c0, vt0.c1))<=((rt0.c0, vt0.c0, v0.c0))) IN ()) WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)<=(v0.c0)) IN ()), ((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)<=(v0.c0)) IN ()), ((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)<=(v0.c0)) IN ()), ((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)<=(v0.c0)) IN ()), ((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>((v0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0)<=(v0.c0)) IN ()), ((v0.c0) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) AND ((((v0.c0))>((v0.c0)))));
SELECT * FROM v0, vt0 WHERE (0x4b443577);
SELECT SUM(count) FROM (SELECT ALL ((0x4b443577) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0x4b443577);
SELECT SUM(count) FROM (SELECT ALL ((0x4b443577) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (0x4b443577);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))-(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))-(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))-(rt0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))-(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c1))))-(rt0.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN 1018012440 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN 1018012440 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN 1018012440 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN 1018012440 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) IS TRUE)  as count FROM rt0, vt0 ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE CASE WHEN 1018012440 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 ELSE vt0.c0 END  WHEN ((rt0.c1) IS FALSE) THEN vt0.c0 COLLATE BINARY ELSE vt0.c1 END) ORDER BY (rt0.c0 IN (rt0.c1)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (~ (((vt0.c1) NOTNULL))) WHERE (0.9516422966549264) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9516422966549264) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (~ (((vt0.c1) NOTNULL))) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (~ (((vt0.c1) NOTNULL))) WHERE (0.9516422966549264) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9516422966549264) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (~ (((vt0.c1) NOTNULL))) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (~ (((vt0.c1) NOTNULL))) WHERE (0.9516422966549264) ORDER BY CASE WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY ASC;
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(((rt0.c2)>(rt0.c0)))) WHERE ((((((('857740535')AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('857740535')AND(rt0.c0)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(((rt0.c2)>(rt0.c0)))));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(((rt0.c2)>(rt0.c0)))) WHERE ((((((('857740535')AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((('857740535')AND(rt0.c0)))OR(rt0.c2))) NOT NULL)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(((rt0.c2)>(rt0.c0)))));
SELECT * FROM rt0 CROSS JOIN v0 ON ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))OR(((rt0.c2)>(rt0.c0)))) WHERE ((((((('857740535')AND(rt0.c0)))OR(rt0.c2))) NOT NULL));
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0))!=(((((vt0.c0))<((vt0.c1))))))) ORDER BY (+ (((vt0.c1)||(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0))!=(((((vt0.c0))<((vt0.c1))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c1)||(vt0.c1)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0))!=(((((vt0.c0))<((vt0.c1))))))) ORDER BY (+ (((vt0.c1)||(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0))!=(((((vt0.c0))<((vt0.c1))))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (+ (((vt0.c1)||(vt0.c1)))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0))!=(((((vt0.c0))<((vt0.c1))))))) ORDER BY (+ (((vt0.c1)||(vt0.c1)))) ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((x'')) AND (((- (rt0.c0))))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)*(v0.c0)))) WHERE ((SQLITE_SOURCE_ID() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_SOURCE_ID() IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((x'')) AND (((- (rt0.c0))))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)*(v0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((x'')) AND (((- (rt0.c0))))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)*(v0.c0)))) WHERE ((SQLITE_SOURCE_ID() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_SOURCE_ID() IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((x'')) AND (((- (rt0.c0))))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)*(v0.c0)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c0)) NOT BETWEEN ((x'')) AND (((- (rt0.c0))))) RIGHT OUTER JOIN vt0 ON ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN x'' WHEN NULL THEN rt0.c2 WHEN vt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c1 END) BETWEEN ((rt0.c0 IN ())) AND (((rt0.c0)*(v0.c0)))) WHERE ((SQLITE_SOURCE_ID() IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY (((rt0.c2 IN (vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN (vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY (((rt0.c2 IN (vt0.c0))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c2 IN (vt0.c0))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c2)))OR(vt0.c1)) AS INTEGER)) ORDER BY (((rt0.c2 IN (vt0.c0))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c2 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE ((~ (((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c2 COLLATE NOCASE)IS NOT(CAST(rt0.c0 AS INTEGER))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('A['))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND('A['))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('A['))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))AND('A['))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))AND('A['))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0)));
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c2)GLOB(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((- (((rt0.c2)GLOB(rt0.c1)))));
SELECT * FROM rt0, v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(LIKE(v0.c0, v0.c0, 'y'))))OR('-1507881516'))) ORDER BY (((vt0.c0)<=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(v0.c0)))AND(LIKE(v0.c0, v0.c0, 'y'))))OR('-1507881516'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0)<=(vt0.c1)) IN ()) ASC);
SELECT * FROM rt0, v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(LIKE(v0.c0, v0.c0, 'y'))))OR('-1507881516'))) ORDER BY (((vt0.c0)<=(vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)>(v0.c0)))AND(LIKE(v0.c0, v0.c0, 'y'))))OR('-1507881516'))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((vt0.c0)<=(vt0.c1)) IN ()) ASC);
SELECT * FROM rt0, v0, vt0 WHERE (((((((vt0.c0)>(v0.c0)))AND(LIKE(v0.c0, v0.c0, 'y'))))OR('-1507881516'))) ORDER BY (((vt0.c0)<=(vt0.c1)) IN ()) ASC;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE NULL END WHERE ((~ (json_patch(rt0.c2, vt0.c0)))) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN ((- (rt0.c2))) AND ((- ('9As\7')))) ASC, ((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, '6*'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_patch(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE NULL END ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN ((- (rt0.c2))) AND ((- ('9As\7')))) ASC, ((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, '6*'  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE NULL END WHERE ((~ (json_patch(rt0.c2, vt0.c0)))) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN ((- (rt0.c2))) AND ((- ('9As\7')))) ASC, ((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, '6*'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (json_patch(rt0.c2, vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE NULL END ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN ((- (rt0.c2))) AND ((- ('9As\7')))) ASC, ((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, '6*'  NULLS LAST);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE (((rt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))  WHEN CAST(rt0.c2 AS NUMERIC) THEN rt0.c0 COLLATE RTRIM ELSE NULL END WHERE ((~ (json_patch(rt0.c2, vt0.c0)))) ORDER BY ((((rt0.c2) NOT NULL)) BETWEEN ((- (rt0.c2))) AND ((- ('9As\7')))) ASC, ((((((rt0.c0)AND(vt0.c1)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, '6*'  NULLS LAST;
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_array_length(0X79ec6b50, CAST(v0.c0 AS INTEGER))) ORDER BY (((- (rt0.c2)))<=(((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(0X79ec6b50, CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((- (rt0.c2)))<=(((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM vt0, v0, rt0 WHERE (json_array_length(0X79ec6b50, CAST(v0.c0 AS INTEGER))) ORDER BY (((- (rt0.c2)))<=(((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((json_array_length(0X79ec6b50, CAST(v0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (((- (rt0.c2)))<=(((((rt0.c0)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE ((UNLIKELY(v0.c0) IN ())) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT ALL * FROM v0 WHERE ((UNLIKELY(v0.c0) IN ())) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT SUM(count) FROM (SELECT (((UNLIKELY(v0.c0) IN ())) IS TRUE)  as count FROM v0 ORDER BY SQLITE_SOURCE_ID() ASC);
SELECT ALL * FROM v0 WHERE ((UNLIKELY(v0.c0) IN ())) ORDER BY SQLITE_SOURCE_ID() ASC;
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY NULL);
SELECT COUNT(*) FROM v0, rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY NULL;
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))OR((NOT (v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))OR((NOT (v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))OR((NOT (v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0 COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))OR((NOT (v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)AND(CAST(v0.c0 AS REAL))))OR((NOT (v0.c0)))))AND((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))))AND((- (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')!=(vt0.c1))) NOT BETWEEN (0xffffffff936bf7cf) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((x'')!=(vt0.c1))) NOT BETWEEN (0xffffffff936bf7cf) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')!=(vt0.c1))) NOT BETWEEN (0xffffffff936bf7cf) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((x'')!=(vt0.c1))) NOT BETWEEN (0xffffffff936bf7cf) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((x'')!=(vt0.c1))) NOT BETWEEN (0xffffffff936bf7cf) AND (CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY -2072235859  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0)=(v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY -2072235859  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0)==(v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE ((NOT ((rt0.c0 IN ())))) ORDER BY -2072235859  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0)=(v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY -2072235859  NULLS FIRST, (((vt0.c0)) BETWEEN ((((rt0.c0)==(v0.c0)))) AND ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.9139450685120774) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((0.9139450685120774) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.9139450685120774) IS FALSE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((0.9139450685120774) IS FALSE) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.9139450685120774) IS FALSE) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(DISTINCT ((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) ISNULL))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(DISTINCT ((rt0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT ((rt0.c1) ISNULL))) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (LOWER(DISTINCT ((rt0.c1) ISNULL)));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)-(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))AND(x'')))))OR(0.3674736491102717)))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT (((((vt0.c0)AND(v0.c0)))AND('1369421276'))))  NULLS FIRST, 'bP{!j*T]d';
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)-(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))AND(x'')))))OR(0.3674736491102717)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((((vt0.c0)AND(v0.c0)))AND('1369421276'))))  NULLS FIRST, 'bP{!j*T]d');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)-(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))AND(x'')))))OR(0.3674736491102717)))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT (((((vt0.c0)AND(v0.c0)))AND('1369421276'))))  NULLS FIRST, 'bP{!j*T]d';
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)-(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))AND(x'')))))OR(0.3674736491102717)))AND(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (NOT (((((vt0.c0)AND(v0.c0)))AND('1369421276'))))  NULLS FIRST, 'bP{!j*T]d');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((((((v0.c0)-(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c1)OR(vt0.c1)))AND(x'')))))OR(0.3674736491102717)))AND(CAST(vt0.c0 AS INTEGER)))) ORDER BY (NOT (((((vt0.c0)AND(v0.c0)))AND('1369421276'))))  NULLS FIRST, 'bP{!j*T]d';
SELECT ALL * FROM rt0 INNER JOIN v0 ON (- ((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON 2037549906 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, (1.369421276E9 IN (vt0.c1, 0X53a91caf)), vt0.c1 COLLATE NOCASE)) AND ((((((vt0.c1)OR(v0.c0)))AND(rt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, (1.369421276E9 IN (vt0.c1, 0X53a91caf)), vt0.c1 COLLATE NOCASE)) AND ((((((vt0.c1)OR(v0.c0)))AND(rt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (- ((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON 2037549906);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (- ((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON 2037549906 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, (1.369421276E9 IN (vt0.c1, 0X53a91caf)), vt0.c1 COLLATE NOCASE)) AND ((((((vt0.c1)OR(v0.c0)))AND(rt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, (1.369421276E9 IN (vt0.c1, 0X53a91caf)), vt0.c1 COLLATE NOCASE)) AND ((((((vt0.c1)OR(v0.c0)))AND(rt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0)))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (- ((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON 2037549906);
SELECT ALL * FROM rt0 INNER JOIN v0 ON (- ((rt0.c0 IN ()))) FULL OUTER JOIN vt0 ON 2037549906 WHERE ((((rt0.c0, rt0.c1, rt0.c0)) BETWEEN ((rt0.c2 COLLATE RTRIM, (1.369421276E9 IN (vt0.c1, 0X53a91caf)), vt0.c1 COLLATE NOCASE)) AND ((((((vt0.c1)OR(v0.c0)))AND(rt0.c0)), CAST(vt0.c0 AS REAL), vt0.c0))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CAST(v0.c0 AS BLOB))|(LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))|(LENGTH(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CAST(v0.c0 AS BLOB))|(LENGTH(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))|(LENGTH(vt0.c0)))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CAST(v0.c0 AS BLOB))|(LENGTH(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (((v0.c0)<(vt0.c1))))) ORDER BY (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) DESC  NULLS LAST, ((('zJng^Pp', v0.c0, v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), ((v0.c0)==(vt0.c0)), 0.5707592270649772)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9987' THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((v0.c0) IS TRUE) IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((v0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) DESC  NULLS LAST, ((('zJng^Pp', v0.c0, v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), ((v0.c0)=(vt0.c0)), 0.5707592270649772)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9987' THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((v0.c0) IS TRUE) IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (((v0.c0)<(vt0.c1))))) ORDER BY (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) DESC  NULLS LAST, ((('zJng^Pp', v0.c0, v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), ((v0.c0)==(vt0.c0)), 0.5707592270649772)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9987' THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((v0.c0) IS TRUE) IN (CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN (((v0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) DESC  NULLS LAST, ((('zJng^Pp', v0.c0, v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), ((v0.c0)=(vt0.c0)), 0.5707592270649772)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9987' THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((v0.c0) IS TRUE) IN (CAST(vt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN (((v0.c0)<(vt0.c1))))) ORDER BY (CASE WHEN vt0.c0 THEN v0.c0 END IN ()) DESC  NULLS LAST, ((('zJng^Pp', v0.c0, v0.c0)) BETWEEN ((((v0.c0)IS NOT(v0.c0)), ((v0.c0)==(vt0.c0)), 0.5707592270649772)) AND ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END, (vt0.c0 IN ()), CASE WHEN vt0.c0 THEN vt0.c0 WHEN x'9987' THEN vt0.c1 WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST, (((v0.c0) IS TRUE) IN (CAST(vt0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, (- (v0.c0)), ((v0.c0)!=(v0.c0))))<=((PRINTF(v0.c0), v0.c0, LIKELIHOOD(v0.c0, 0.07735732791115835)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, (- (v0.c0)), ((v0.c0)!=(v0.c0))))<=((PRINTF(v0.c0), v0.c0, LIKELIHOOD(v0.c0, 0.07735732791115835))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, (- (v0.c0)), ((v0.c0)!=(v0.c0))))<=((PRINTF(v0.c0), v0.c0, LIKELIHOOD(v0.c0, 0.07735732791115835)))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, (- (v0.c0)), ((v0.c0)!=(v0.c0))))<=((PRINTF(v0.c0), v0.c0, LIKELIHOOD(v0.c0, 0.07735732791115835))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, (- (v0.c0)), ((v0.c0)!=(v0.c0))))<=((PRINTF(v0.c0), v0.c0, LIKELIHOOD(v0.c0, 0.07735732791115835)))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c2 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c1);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((0x5850236d)&(IFNULL(DISTINCT rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((0x5850236d)&(IFNULL(DISTINCT rt0.c2, vt0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((0x5850236d)&(IFNULL(DISTINCT rt0.c2, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((0x5850236d)&(IFNULL(DISTINCT rt0.c2, vt0.c1)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (((0x5850236d)&(IFNULL(DISTINCT rt0.c2, vt0.c1))));
