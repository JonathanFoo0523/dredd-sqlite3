-- Time: 2024/06/09 23:14:26
-- Database: database98
-- Database version: 3.40.0
-- seed value: 302238998
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 TEXT , c1 INTEGER , c2 INT ); -- 0ms;
REINDEX RTRIM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (''); -- 0ms;
UPDATE OR IGNORE t0 SET (c2)=(x'9ef3') WHERE LIKELIHOOD(DISTINCT t0.c1 COLLATE RTRIM, 0.16627600200725168); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET (c0, c0)=(NULL, NULL) WHERE (NOT (((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c1)))AND(0Xffffffffd35488aa)))); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL, '', '557082979'); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'6a46' WHERE (('-749434710') NOT NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
REINDEX; -- 0ms;
UPDATE t0 SET c2=NULL; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES ('-868504325', 0.7478524586021711), ('557082979', -868504325), ('', NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'', c0=x''; -- 0ms;
CREATE UNIQUE INDEX i48 ON t0(((c2) NOTNULL) COLLATE RTRIM,CAST(((((c1)OR(c2)))AND(c2)) AS NUMERIC) COLLATE RTRIM DESC,(((c0)|(c1)) IN (((c1)IS NOT(c0)))) COLLATE BINARY) WHERE ((((((((((x'9769')AND(c1)))AND(c0)))OR(c2)))AND(c0))) NOT NULL); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i26 ON t0(((((CASE c1  WHEN c0 THEN c2 ELSE c1 END)AND(LOWER(c2))))AND(c0)) COLLATE RTRIM DESC,TYPEOF(DISTINCT LIKE(c2, c0, '0')),CAST(CAST(c2 AS NUMERIC) AS REAL)) WHERE ((CAST(c2 AS NUMERIC)) ISNULL); -- 0ms;
CREATE UNIQUE INDEX i96 ON t0((((((c0)OR(c1)))AND(c2)) IN ()) COLLATE RTRIM DESC,(((~ (c2))) NOT NULL) COLLATE BINARY,((c1) IS TRUE) COLLATE NOCASE); -- 0ms;
CREATE INDEX i5 ON t0(TRIM(DISTINCT (c2 IN ()), CAST(NULL AS REAL)) COLLATE NOCASE DESC,(((NOT (c2)))|((((c0, c0, c2))>((c0, c1, c2))))) COLLATE NOCASE ASC,x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i46 ON t0(c0,NULL ASC,NULL COLLATE BINARY) WHERE (((c1 IN (c1, c0)))<=(((c1)<<(c1)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.21778477176775757 WHERE ((t0.c1 COLLATE NOCASE)IS(t0.c0)); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i5 ON t0(0.8884745035320029 COLLATE RTRIM,((((((((c1)AND(c2)))AND(c0)))AND(((((((((((((c0)OR(c1)))OR(c1)))AND(c1)))AND(c2)))AND(c0)))AND(c0)))))AND((c1 IN ()))) COLLATE RTRIM,(((c0) BETWEEN (c0) AND (c1)) IN ()) COLLATE BINARY); -- 0ms;
UPDATE OR ABORT t0 SET c0='-868504325', c0=NULL WHERE '-749434710'; -- 0ms;
UPDATE OR IGNORE t0 SET c0=''''; -- 1ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES (x''); -- 0ms;
END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('}f', x'', NULL); -- 0ms;
INSERT OR ABORT INTO t0(c2) VALUES (x''), (-7.4943471E8), (x''), (x''), ('}f'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES (x'', NULL), ('-868504325', '557082979'), (0Xffffffffce728f4a, -1031075780), (0.45065324834893405, x''), (NULL, 0.3052248151173653); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.21530489155683985) NOT BETWEEN (x'') AND ('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-57394450 sz=1344105840'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1597185388'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'', 0x52cc9264, x''))=((x'', 0.3327474249086285, NULL))) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1389138532 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1389138532 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (557082979 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'e1b4' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-831353014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-83801619 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (0.21904183831096247) AND ('mb,	N{oà ¼'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-662367219 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-868504325'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=557082979 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((((x'')AND(x'')))AND(0X1f7445b1))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=557082979 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(CASE x''  WHEN x'9d1b' THEN '-57394450' END, CAST(1.597185388E9 AS BLOB), '-1671199533' COLLATE BINARY, ((('*KJW')) NOT BETWEEN (('R')) AND ((x''))), LOWER(DISTINCT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1043199173 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE DATE((~ (0.5705499782951826)), CASE NULL  WHEN NULL THEN '-749434710' WHEN 5.27713713E8 THEN x'' WHEN 0.872336546616584 THEN 0X501d6d70 ELSE NULL END, ((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-958962991 0 sz=227725920 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 2 sz=1397569327 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)&(-7.4943471E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-870169269'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1620809208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5170989545303113; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-1671199533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2145905801 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1597185388'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((1.043199173E9)OR(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '527713713 -804663257 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0X3e4d4f1c AS REAL))>(x'cd4c')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1578297916 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1232290231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1974463292'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1957642449 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-958962991 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-2127355184 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 1255084577 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-105725030'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=469445268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=-1229446544 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-841302656 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((1.597185388E9)IS NOT(-1.671199533E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN (((('') IS TRUE))) AND ((0.7704177237154552 COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1517428253'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-954223083 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((NULL)OR('-868504325')))AND('-1578297916')) THEN 0.45065324834893405 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1145688759')) NOT BETWEEN (((x'' IN ('{X2%ê~^F', '){')))) AND (((('1252519349') ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1256701636 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (x'a3c9') AND (0xffffffffdbc58905)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.45065324834893405)-(x'3798')))OR((- (-6.07811323E8)))))OR((((x'')) NOT BETWEEN ((0.017267500428576943)) AND ((0x5664e3c2))))))OR((0.41740995492816646 IN ()))))AND((~ (x'47073b2d')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1687403757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1178206709 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1656294903'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((QUOTE(-1795179115)))<((']+B4â¿«ç®z\n '))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1232290231 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, NULL, x'')) BETWEEN ((0.007391837423234238, x'', 0.8259092473170881)) AND ((0.1361458246662971, 0Xffffffffd4825a16, '-1448464695')))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-954223083' AS INTEGER) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((NULL IN (-1671199533)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('{x2%ê~^f')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (886531323)))OR(((NULL) BETWEEN ('') AND (NULL)))))OR((((NULL))<((''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 sz=1015261430 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 706101885'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((((((((0xffffffff932e2b9d)OR(NULL)))OR(0.6837279635612196)))AND('-954223083')))OR(0x2a16427d)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 0 sz=-83801619 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-1232290231' AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (x'')) THEN ((NULL)OR('~v')) WHEN ((NULL)%(x'9e6d')) THEN ((0.9456864940686391)-(NULL)) WHEN '-1990843405' THEN ((((NULL)OR('-1382074326')))OR(-6.62367219E8)) WHEN ((('-958962991')) NOT BETWEEN (('vh')) AND ((0x1bfb2a94))) THEN CASE WHEN 'j\r' THEN 0.7776027002805788 ELSE 683544133 END WHEN (((x'')) NOT BETWEEN (('29P')) AND ((x''))) THEN LIKELY(x'bb01') ELSE (~ (0.8310399716590495)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(DISTINCT CAST(0.5398449130456581 AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1187545350 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-958962991'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((1819561275)+('282383588')), 0.5013935499380828); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1497644795 sz=-1688983149'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1444400238 sz=1389138532'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((((NULL) ISNULL))) AND ((0.8173324612345203 COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=872209942 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 -1229446544 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2130524030'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1517428253 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.7478524586021711; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (0.13311610906966653) AND ('-817474783')))<(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 sz=886531323 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1492690139 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')GLOB(x'')) IN (json_object(x'', NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1855607711) BETWEEN (0x2ac410d3) AND ('-1656294903')))<=((x'' IN ('643567227')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('\rx''')OR('-729665556')))OR(((NULL) NOTNULL))))OR(CASE '-296842070'  WHEN '557082979' THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE NULL  WHEN '\r\0Z' THEN 0X3da6c6 WHEN x'' THEN '' WHEN 0.7704177237154552 THEN 382504797 END))=((((x'') IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1322221774 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=-1403294332 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '282383588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=706101885 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.3267739983843654)) NOT BETWEEN ((((0xfffffffff7be29ce)||('r7TNF''6')))) AND ((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-916207265'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x'ff5f'))) BETWEEN (((x'')OR(NULL))) AND (CAST(0.09141396004155311 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=531646226 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-279578391 sz=-1688983149 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '531646226 0 sz=1813039563 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=382120322 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1160572711 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '77614054 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1.34410584E9 AS REAL)) BETWEEN ((NOT (x''))) AND (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1597185388 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1322221774 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '772443333 -969551627 -182782970 sz=1252519349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-1903754050 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1045253916'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (x'') AND ('886531323')))AND('(s!î¯' COLLATE BINARY)))AND(NULLIF(0X4a04be6, x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1795179115'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-138532402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-284579532'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2012310934 sz=-1820443240'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '753703920 sz=-954223083 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1104062683'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1982809335'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((443839566)IS('K)Yã¶(wn')))OR('1256701636')))OR(((0.09300367669840048) NOT BETWEEN (NULL) AND (x'')))))AND(COALESCE(DISTINCT '-969551627', '850582306', NULL, x''))))AND(((1949944739) NOT BETWEEN ('282383588') AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'')<>(x'')) THEN (+ (x'd108')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9425982659177207, 0x76fe60f9, '-659598881', x'', 0.4717970308244568)) BETWEEN ((x'', 'Jä§q', '-296842070', x'', x'e5e6')) AND ((NULL, 0.8265776547618352, x'38cb', 'æ°<', x'')))) NOT BETWEEN ((~ ('2012310934'))) AND (CAST(0.5159205729292895 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1620809208 -1670512961 sz=-284579532 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.21530489155683985 IN (NULL))) BETWEEN ((('k-') NOT NULL)) AND ((((' ?-M?'))<((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1598104468 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=643567227 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN (x'') AND ('0.1361458246662971')))>(((x'a02b') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-831353014'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '492083863 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-196725377'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '706101885 sz=753703920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-2089184363 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))>(UNLIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 2.2772592E8; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 0 sz=-1983879673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((+ (0X33fcde16)))) AND (((~ (0.872336546616584))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('2012310934')>>(NULL)))OR((((((((((((('')OR(x'')))OR(1561960642)))AND(0.7071576501956095)))OR(1524969345)))AND(-296842070)))OR('')))))AND((x'' IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1412220114 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1497644795'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '4 sz=-1770841491'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (HEX(DISTINCT -0.0) IN ()); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-787633555' AS REAL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((((((((((((0X88b11ba)AND(-1.38532402E8)))AND(NULL)))OR(0X58686a2d)))OR(1.389138532E9)))OR(x'7ad3ea12')))OR(NULL)), (((('')OR('-764338039')))AND(x'9daa'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '227725920'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 0 sz=-870169269 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (LIKELY(DISTINCT 's2Lh%k'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1370869451 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=352328435 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>(0.9666704027377128)))IS NOT('753703920' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1517428253 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(CAST('{Q+GBRí¶' AS TEXT)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LOWER(DISTINCT -1.990843405E9), (((('')AND(x'')))OR(NULL)), (((0.2221800839386373, '0.872336546616584', '-483441177')) BETWEEN ((x'', 0.9666704027377128, '-1990843405')) AND (('', '469445268', x'')))))<=(((('J') NOT BETWEEN ('772656364') AND ('-729654762')), ((0.9425982659177207)/('-182782970')), ((-662367219)/(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1597185388') NOTNULL), ((x'') IS FALSE), 0.5399597370128374 COLLATE BINARY))>((NULL COLLATE NOCASE, ((((0.49535654430659193)OR(x'')))AND('')), ((((((((x'')AND(NULL)))OR(x'')))AND('872209942')))AND(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1903754050 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-305013275')OR(NULL)))OR(CAST(0.9666704027377128 AS BLOB))))AND(((0.043969790208089)==('zG,')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('551988154')=(NULL)))||((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '433232605 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'dafd' AS INTEGER) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('3*%UIDO\nS')AND('-1871198371')))AND(-607811323)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-855255985'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE 'Lw8D'  WHEN NULL THEN '!G' ELSE '_,' END THEN (('CHN!_B')/(x'')) ELSE x'1faf' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1517428253 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1252519349 sz=1445263664 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x''  WHEN 0.5799936373045423 THEN '-2142281253' ELSE NULL END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((((NULL)AND(0.5634120641315368)))OR('-729787643'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1539696146 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-841302656' COLLATE BINARY) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1824420978'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=466168178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-177999907 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=521699525 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1256701636'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0.9943574371795902 THEN NULL WHEN '-1382074326' THEN -993959040 WHEN '1112260531' THEN x'3811' END  WHEN ((0.4717970308244568)>(x'')) THEN ((x'') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '596354722 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- ('-0.0')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1545027336 0 1597185388 sz=-246439823 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-133560409)))-(NULLIF('-1031075780', -83801619))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1255084577 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1972442906 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=872209942 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(LIKELIHOOD(DISTINCT '1344105840', 0.24835313256527225), (+ ('1373379451'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 2 sz=717492435 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '8 -2131476147'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2125943460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((((x'', '-831353014', NULL))<((x'9d95', 0.22104220409589648, 0.45113280980080095))))) AND ((0xffffffff932c044e))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=753703920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.8173324612345203  WHEN '527713713' THEN 0xffffffffedfef6f6 WHEN x'' THEN NULL WHEN NULL THEN '' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=531646226 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (')~') AND (x'669d'))) BETWEEN (x'') AND (CAST('j\r' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-884975997')<(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1371323168 sz=750998781 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.2675738697054659)AND(NULL)))OR(NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 sz=1627345287 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ABS(753703920)) NOT BETWEEN (CAST('' AS BLOB)) AND ('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')>(x''))))!=((ABS('-1178206709')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=506378624 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1344105840'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 382504797 sz=7105266'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('-279578391')) THEN (((('aD')OR(0.0796975957360766)))OR(x'')) ELSE ((x'8f11') NOT BETWEEN ('%k') AND (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3717896578654766) NOT BETWEEN (x'') AND ('1252519349')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-729665556 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE UNICODE(x'') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1684139090 sz=-804663257 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-887311357'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=-574511595 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-558378647 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1389138532 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))LIKE('-1957642449')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((RTRIM(NULL))AND((('1908298981')==('vyO_')))))AND(0x3e165c1d)))AND((('-1382074326') NOT NULL))))OR(CASE WHEN NULL THEN 0Xffffffffef09a934 WHEN 0Xfffffffffd213d2c THEN NULL WHEN NULL THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '482154357'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0xffffffffd08895e2, NULL, 0.45113280980080095)) BETWEEN ((0.4276457287676957, x'0f11', NULL)) AND ((x'5bc7', NULL, x''))))!=(x'' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'c185') BETWEEN (NULL) AND (0.4311107303886439)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 sz=-1274549307 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN (NOT (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(('772443333' IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2118468329 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))/(((375794915) NOT BETWEEN (0.10700670130966505) AND (-841302656)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1145688759 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1819561275 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1825690723 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=227725920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '422870296 sz=77254505'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-1974463292 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=695205143 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '4 sz=-1232290231 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=993773965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'7d010a4e' THEN NULL WHEN 0.9586551158754083 THEN 0.5395949359079238 WHEN 0.09874714109327476 THEN x'' END)AND(x'' COLLATE RTRIM)))AND((NOT (0.9465793145006176)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1901050075 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.7029384505842865 AS NUMERIC))&(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('í{E', NULL, '}', -8.70169269E8, 0.23668263251016464)) NOT BETWEEN ((((x'') NOTNULL), ((NULL)<<(NULL)), (0.5209679843723612 IN ()), LTRIM('-1671199533', NULL), 'dnìPáT6{')) AND (('1256701636', CASE 436545467  WHEN 1.819561275E9 THEN '-1699646418' WHEN 0xffffffffc5ce93c8 THEN '-1074008951' WHEN '' THEN 0.8976914607630087 ELSE x'befdb06b' END, ((NULL) NOT NULL), ((NULL)/('')), (0.7719042835106196 IN ('-1957642449'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1754097538 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 sz=1015261430 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1949944739 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- ('#XZddX>|h'))  WHEN (('0.8884745035320029')>>(-659598881)) THEN ABS(0Xfffffffffd1e2ee5) ELSE (((((((('-1687403757')AND('72957681')))OR(x'e654')))AND(NULL)))OR('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2018080617 -410578661 sz=1166809558 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1372928181'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('-607811323')))IS NOT((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-18641622 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-980991438 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1440444463 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=483681677 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1974463292 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1559325191 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1982858224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1318013751'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1067977337 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')>('' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-1437449293 -265871338 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)OR(NULL)))AND(0.6075181339202336)))OR(NULL)))OR(NULL)), CASE 0.4311107303886439  WHEN x'' THEN '?,î¨¼' END, ((0.7478524586021711) IS TRUE)))<(((0.688101808298851 IN ()), ((0.8722084162553252) NOT BETWEEN (-1256336614) AND (x'')), ((((((((x'')AND(x'69fe')))AND(x'64e09d2a')))OR(x'')))AND('mb,	n{oà ¼'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 -196735188'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=2103297734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=601477727'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'4adc')AND('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1832141590 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-143890598'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '715087681 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN ('') AND (0X67bfca7)))<=((((0X7497f61))>=((x'a0512d44'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1377500443 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '1073602560 sz=-868504325 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'8157', 3.82504797E8, '')))IS(CASE NULL  WHEN '' THEN '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 sz=2060117621'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('æ°<' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((x'')) NOT BETWEEN (('')) AND ((NULL))), ((0.5864296200124096) BETWEEN (-1620809208) AND ('2012310934'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((NULL)!=('!M')))) AND (((('1819561275') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=683544133 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-804663257 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('f&E&, ä' AS TEXT) THEN -762072402 ELSE (- (x'')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1764279340'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffc1389eff; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('0.017267500428576943') NOT BETWEEN (-855195890) AND (0.09141396004155311)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=850582306 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(DISTINCT CASE 0.6507044644317108  WHEN 'â²°KL*â¿¬â±¥' THEN x'' WHEN x'' THEN 1738908005 WHEN NULL THEN 720264315 WHEN 706101885 THEN 0.3052248151173653 WHEN -9.69551627E8 THEN NULL WHEN 0X501d6d70 THEN x'' WHEN '0.9943574371795902' THEN '' ELSE 0.0796975957360766 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9189362654204513)) NOT BETWEEN ((0xffffffffa5101b18 COLLATE BINARY)) AND ((CAST(NULL AS NUMERIC)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '0.45065324834893405' THEN '2094160584' WHEN '-1946450039' THEN x'' WHEN 0.7176156248016816 THEN -1.104062683E9 ELSE 0.3717896578654766 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.42039734708394894) AND (0.2264981377548818)))IS NOT(CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '282383588'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1546572361 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9007048942447093; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1039582657') NOTNULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-749434710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-138532402 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-968659064 2 sz=-1462237537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'93b3')&(x'f9bf'))) BETWEEN (CASE WHEN 0.6108725549726124 THEN x'' ELSE '' END) AND ((((NULL)) BETWEEN ((772443333)) AND ((0.9303056139135767))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1497644795'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('879462445' AS INTEGER))AND((~ (NULL)))))AND((('-934373752') IS TRUE))))AND((('1817723435')+(0.770517969246063)))))OR(CASE WHEN 0.3425748764099483 THEN 'ì§<' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE x''  WHEN '' THEN x'6fc04fed' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-827406265 1517623000 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '1187545350 sz=-1521555205 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((((x'')*(0.42039734708394894)))) AND (((((0.0988213857258804)) NOT BETWEEN ((NULL)) AND ((-1.38532402E8)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1344105840') NOT BETWEEN (NULL) AND (0.1584803530825054)) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE((((NULL, 1848547244, '-1508105835')) BETWEEN ((x'cf7399e4', 0X2127ceba, 7.06101885E8)) AND (('kr', NULL, NULL))), 0.7677276659985669, 'r'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('168422363') NOT BETWEEN (x'65e6') AND (x'')))AND(x'')))OR((+ (x'e927')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1816518501 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '1026847539 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS TEXT)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('s') NOT BETWEEN (0Xfffffffffb0149ed) AND (''))) BETWEEN ((- (0.49535654430659193))) AND (CASE WHEN NULL THEN '' WHEN NULL THEN '-1160572711' WHEN x'' THEN '872209942' ELSE 1322221774 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 2 sz=-285190099'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-976298052 sz=-1639057155'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')<<(NULL)), ((NULL) IS TRUE), NULLIF(DISTINCT '-124570626', NULL)))<((((('-444217941')) BETWEEN ((NULL)) AND ((']Aì\r'))), (- ('914976792')), 0.33920839402022607))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=-1232290231 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-2007547197 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-589289908'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME(-8.68504325E8, NULL, 1391375374))>>(CAST(4.43839566E8 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0xffffffffe3ba999c COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (1073971785 COLLATE BINARY IN (0.13167197133143105, ((((804259400)AND(1.18754535E9)))OR(-182782970)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '928237407'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1379480095 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1266251670 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '717492435 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')+(0.48551043501475155)), (((x'288f'))<=((0.8825813766584543))), (((NULL)) BETWEEN (('1671402364')) AND ((0.6399635014178501)))))<=(((('-735309479')AND('247690218')), ((((0.9347536951542962)AND(-1454680277)))OR(NULL)), (('-36095427')AND('0.8310399716590495'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-863968235 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1449452482', x'8de6', '-1220634754', x'', '0.5363358707094991')) BETWEEN (((('aD') IS TRUE), ((0.5363358707094991)<<(NULL)), ((1e500) IS FALSE), CASE x'6b01'  WHEN '469445268' THEN '1OCm' WHEN 0.42039734708394894 THEN '' WHEN '0.21530489155683985' THEN 0.9425982659177207 ELSE x'' END, (('')IS(NULL)))) AND (((((0.6507044644317108)) NOT BETWEEN ((NULL)) AND ((x''))), (((NULL)) BETWEEN ((NULL)) AND (('	Z'))), TRIM(DISTINCT 0.1418617086705748, 'o\r^?pd'), load_extension(0.24070021975915745, 0Xffffffff893b7785), IFNULL('J''', 0.5443363459411982)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1745177119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 -1509318703 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1609965004'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-915096367 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1974463292'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=4040390 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '1638068580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=772443333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('0.9425982659177207')|('')) THEN ((('-868504325'))<(('-105725030'))) ELSE TYPEOF(DISTINCT '382504797') END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%('1535586089'))) BETWEEN ((('2145905801') NOT NULL)) AND ((0.9347132026995312 IN (x'', 0.8721127751802341)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER))<<(((x'ae0b')LIKE(x'b217')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '990217881 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2077114927 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=79258800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((''))<>((NULL))))AND((+ (x'')))))OR(CAST('&J0[' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-2104265331 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((('chn!_b'))<(('-785175247'))), (NULL IN ()), ''''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2000407727 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-483441177 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '1552066611 4 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffffb9b84575 COLLATE RTRIM)/((((0.7498238658997305, 0.7937490244981208, 0.36110801285744343)) NOT BETWEEN ((NULL, NULL, x'')) AND (('', '1298816948', 0.3400219382930849))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('0.7677276659985669')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8976914607630087)IS NOT('')))IS NOT(CASE x''  WHEN 'v+' THEN 0xffffffffee313148 WHEN 'vkXÓ' THEN NULL WHEN -870169269 THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-349279886 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 sz=146613255 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0 sz=556398092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-672657118 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1759909419'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2145905801 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1756369168' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1551905420 sz=1264590888'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'bec3')/(0.11647677802637257)) IN (CAST(x'8d4a' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN NULL THEN 1255084577 ELSE '484796233' END  WHEN CASE WHEN 0.9147727269120483 THEN NULL END THEN ((NULL) IS TRUE) ELSE ((((NULL)AND(NULL)))AND(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1982809335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'22e0', NULL, 'J''', 0.7238941117602072, x'')) NOT BETWEEN ((CAST('382504797' AS TEXT), ((0.3409723393801334) ISNULL), ((0.26836894762753594)IS NOT(0.013540466419177055)), ((0.4318239406803136)>=(NULL)), (~ ('F%)(P	')))) AND ((((x'')+(x'')), LOWER(x'ac9a'), (('-727745831') BETWEEN (NULL) AND (NULL)), x'' COLLATE BINARY, ((((x'')OR(NULL)))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LIKELIHOOD(x'', 0.342384109959592) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (('-969551627' COLLATE NOCASE)) AND (((~ ('382120322'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=492686530'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (('801225377')!=('1335995143')), CAST(0.5229815281407033 AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '' THEN x'079f' ELSE NULL END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 1202035519 THEN '' WHEN '' THEN 0.48033903808597866 WHEN 0.06803348791041874 THEN '?,î¨¼' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN NULL THEN '0.7029384505842865' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (0.19068555107378915 IN ()) THEN ((NULL) NOT BETWEEN ('') AND ('-1819535120')) WHEN (((0xffffffffe32f45e7)) NOT BETWEEN (('1043199173')) AND ((0.16814616559836137))) THEN (((NULL)) NOT BETWEEN (('1860583286')) AND ((''))) WHEN ((0xfffffffff92104d5)LIKE(x'')) THEN x'c9e9' ELSE 733579095 COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=347330263 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 1392639653 sz=539451459 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN 0x7fffffffffffffff THEN '1256701636' ELSE NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1903206211'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 sz=-1688983149 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=-105725030'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1656294903'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')<=(NULL)))+(('' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')IS(x'')))OR(((NULL) BETWEEN ('257854869') AND (x'')))))AND(LTRIM(x'7b27'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'ç´)8,Uë¼¯'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '1535727018' THEN '0.3425748764099483' WHEN NULL THEN '>uEn' WHEN 0.3885192875682124 THEN NULL ELSE 0xffffffffdb457b4b END IN ('1L')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(0Xffffffffcc22454b)))OR(0.6475002510157899)))>=((('')&('tON0t\rHHF')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.42039734708394894 COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=-969551627 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '8 sz=227725920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_remove(0X2ac410d3, '1596688517', '-57394450', 0.20417529900582843, NULL, x'') IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2000146878 2 sz=1307307462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((472381077)AND(((0.5467181097021905)*('}ï¼æº>2T')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_extract(0.36110801285744343, '')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-870169269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ ('706101885')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 sz=-1699646418 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X80c62f5) NOT BETWEEN (0xffffffffca870182) AND (NULL))) NOT BETWEEN (0X3e4d4f1c COLLATE NOCASE) AND (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 sz=1918008808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-1398006 sz=227725920 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'975d') IS FALSE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-7.29665556E8))<>((NULL))))>>('Sá³ï{' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0.6135806307081213 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-2076162795'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT (((NULL))<((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-138532402 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1458972789'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=616319571'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1.974463292E9 THEN -335148267 ELSE NULL END)>=(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1656294903'  WHEN '' THEN NULL WHEN NULL THEN '-1768287737' WHEN NULL THEN '0.7478524586021711' ELSE '680097043' END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('1147356624' AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('-1389456801')) AND ((''))))<=(0.022137082822442422 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT x'476c')) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-2014138557'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 5.27713713E8  WHEN 'k-' THEN x'' WHEN 1982809335 THEN NULL WHEN '' THEN '' END) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1145688759'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')||('[OEvnC]')))-((((((((('')AND(NULL)))AND(NULL)))AND('1500696172')))AND(0.11647677802637257)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1358923035 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('31') NOT BETWEEN (((0xffffffff94007c3b)<('í{E'))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT (('1659826512') IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-1178206709') NOT BETWEEN (NULL) AND (-6.07811323E8)))OR((((('')OR('')))AND(NULL)))))OR(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '1911403774', '{}', NULL, '-1441629773')) NOT BETWEEN ((0.017267500428576943, '1830256915', -1.671199533E9, '1273937905', '')) AND (('-2062131892', x'6318', x'', '1949944739', x'')))) NOT BETWEEN (CASE WHEN x'' THEN NULL WHEN '168422363' THEN '-1688983149' WHEN x'' THEN -1671643353 ELSE '1813039563' END) AND (x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((((0.9465793145006176))=((0.3400219382930849))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 1983983784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CAST('7' AS INTEGER))OR(0.11647677802637257 COLLATE BINARY)))AND(CAST(0.6675615553434084 AS REAL))))AND((NULL IN (NULL)))))OR(CAST(325638401 AS TEXT))))AND(CASE WHEN 872209942 THEN -151561573 ELSE x'' END)))AND(((0.47752465338262085) BETWEEN (0.42855411549468847) AND ('-916207265')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=1255084577'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=910266767 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT NULL))AND(CAST(NULL AS BLOB))))AND(TRIM(DISTINCT x'', NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1261623157'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-1648169506 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=103520647 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1656294903 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-662367219 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'51721795' AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.14316832559663561 IN ()))>>(((x'')GLOB(x'e016217e')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1229446544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('''! %é®µgC/' AS INTEGER)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-613603939 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1558201121 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2130101970 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=154528782'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '443839566 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=1664731862 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '-1403294332 sz=1044382448 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 sz=1365027602 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1311072426 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=2066614548 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.0636174309587848, NULL, NULL, NULL, 0.7401517213383336))=(('-1171028170', '-1972500407', NULL, x'', x''))))&(CAST(0Xffffffffeca25742 AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))<((NULL)))) BETWEEN (((('Oj')) BETWEEN ((x'13f0')) AND ((NULL)))) AND (((((x'')AND(x'')))AND(0.48551043501475155)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('ã©i.VI6' AS BLOB)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.3267739983843654') NOT NULL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT(NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-531979892'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')>>(x'')))OR(((0X10d4d4e4) NOT BETWEEN (NULL) AND ('643567227')))))OR('2137123291')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-607811323 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('f&E&, ä' IN ()))*(CAST(x'5dd6' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('/' COLLATE NOCASE)OR(((x'') BETWEEN (0.5730115244549506) AND (x'be5e')))))OR(CASE 0.9943747519835289  WHEN 0.5906265595148608 THEN '-105954325' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1972557246 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0.6600329693080066)))OR((- ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1322221774 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-284579532 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-191916544 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('1015261430'))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=482938934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-1444400238 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '166150136 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 0 sz=-93351597 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1210673164 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=249342797'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL))!=((NULL))))AND(NULL COLLATE RTRIM)))AND((+ ('717032209')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1581403784 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1671199533'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=900488947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '931290581 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.20295516549995873, 717492435, '-2066739496', NULL, x'')) NOT BETWEEN ((('?,î¨¼' IN (557082979)), (((('|(sE')OR('1252519349')))OR(-6.59598881E8)), ((x'') NOT BETWEEN (527713713) AND ('-1131696067')), CAST(0.045595645297966225 AS TEXT), ((('\rKV<', 0.8659698933407751, '-296842070'))>((NULL, x'', NULL))))) AND ((CAST('-1646139107' AS NUMERIC), (((NULL))>((0.6439556906793472))), x'', (('~kV}ç¦')GLOB(NULL)), ((x'') BETWEEN ('P{\n') AND ('1517428253'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, NULL)) NOT BETWEEN ((((0.5649703598896526)AND(0.304143469551985)), (('')=(x'78e0')), ((((((((NULL)AND(0X759403bf)))AND(NULL)))OR(1.813039563E9)))AND(x'')))) AND ((LIKELIHOOD(NULL, 0.7240938629559713), (- (-1023682887)), (((x'')) BETWEEN ((x'4a3a')) AND (('-659598881')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(-15489478)))OR('-182782970')))<<(((('!CVs'))>(('0.21530489155683985'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-23133610 -831353014 sz=-2013031367 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((7.17492435E8)|(NULL)))OR(((0.5680826033330804)<('-659598881')))))AND(CASE '-1232290231'  WHEN 0.4464515767310099 THEN x'' ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-1160572711'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X774aeb66; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((CASE 1.996382457E9  WHEN 0.40437885027129883 THEN 0.02306521536847239 ELSE '' END)) AND (((x'' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '2 sz=850582306 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5553850398988764) NOTNULL))LIKE(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7695761661529132) BETWEEN (-607811323) AND (x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1517428253 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 -1562063102 sz=1255084577'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2055798612 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((x'') NOTNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.49584279144625654) BETWEEN ((((('MäPï¸%|')AND('')))OR('-1740781847'))) AND ((('717548855') NOT BETWEEN ('') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8594686520438188; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN ())  WHEN (- (NULL)) THEN CASE '-109692701'  WHEN NULL THEN 0.015280837581045037 WHEN 0x1a33e504 THEN -861852721 WHEN x'' THEN NULL WHEN x'' THEN 0.3409723393801334 WHEN 0.03693690966427354 THEN 251929327 END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('x7+TK|76')+((-458151420 IN (x'475b', '1321693925')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 sz=1145688759'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((JULIANDAY(x'', -1578297916, x''))OR(CASE x'835102b6'  WHEN 0.03578312303195774 THEN x'' END)))OR((((NULL)) NOT BETWEEN (('')) AND (('l'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-749434710 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-944251943 443839566'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-503306852 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-182782970 sz=-1044957617 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(('38643297' IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=227725920 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1104400604 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN ((NULL)) AND (((('')/('-662367219'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(DISTINCT x'', 0.688101808298851) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-80056196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1252519349'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8815976002975596 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', ' sz=-2071598558'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', '0 -2124845042 sz=850582306 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (('' IN (x'')))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '717492435' THEN 0.23301539608460275 ELSE 'usK^WUä ' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE NULL  WHEN x'fc12' THEN 0.6074223655935904 WHEN '' THEN x'7b44' WHEN 5.31646226E8 THEN x'aa65' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1522769126 -795592380 sz=-1820443240 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('-1990843405'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1580887555 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR('0.45065324834893405')))OR(-5.739445E7)))>>('-142735315' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' sz=-875906100 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('	\r][?Z')OR((((('0.017267500428576943')OR(NULL)))AND('''%^5~	P')))))AND(((((x'fadc')OR(x'')))OR(x'42781876')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'b063' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_object((('â®Qî±¯]-') NOT BETWEEN (x'') AND (0Xfffffffff45c142d)), 0.9024608341074132); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'3537')) BETWEEN ((NULL)) AND ((266715894))))OR(5.31646226E8 COLLATE BINARY)))OR(CAST(x'' AS INTEGER))))OR(((x'')>>(0.09185906815654732)))))OR(((0.15688408225569883) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '-212232930 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1996382457'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '699962098 0 sz=1110601560 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-284579532')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-371530029 0 sz=1875173662 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i46', '0 sz=-1232290231 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE 0.12801957021325328  WHEN 732933761 THEN 0.9691184630654506 ELSE '1596848889' END, ((NULL) NOTNULL), ((x'')IS NOT(NULL))))<((((((((((0.15586909251559733)OR('-729654762')))OR(0Xffffffffbcaa00a9)))AND('eïBnJnv')))OR('s6')), (('227725920') BETWEEN ('-2026398280') AND (x'')), ('835911154' IN ())))); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (0.5150600663772162, NULL, NULL), (x'', '227725920', 0Xffffffffeaaf5306), (-1.699646418E9, x'', NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES ('c|', -1865504758, 1807640802), ('', x'8a40', '-1688983149'), ('-1868449486', '-1444400238', ''), (NULL, x'', x''), (')\rFæ³', '1744216034', NULL); -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES (x'376f'); -- 0ms;
INSERT OR FAIL INTO t0(c0, c2, c1) VALUES ('rn', 0.22768779442204445, '-1792587465'), ('-1974463292', x'678f', 'zG,'), (x'', 'r2', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES ('m''', '^ _A[Z.'), (x'', x'2f38'), (0.8173324612345203, x'3325'), ('&J', 'lç¶yPg?ì¶«ì§'), ('', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=('-969551627') WHERE ABS(((((((((NULL)AND(t0.c1)))AND(t0.c2)))OR(t0.c2)))OR(t0.c1))); -- 0ms;
UPDATE OR FAIL t0 SET (c2)=(''); -- 0ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
ANALYZE i5; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (0.18082196887006585, 0.34425282904353816); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0, c2) VALUES (NULL, x''); -- 0ms;
INSERT OR ABORT INTO t0(c1, c0) VALUES (0.8301754132441576, '1853446618'); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c2) VALUES (x'852e', x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'06c6' WHERE (((((t0.c0, t0.c0, ''))>=(('-105725030', t0.c1, t0.c1)))) NOT BETWEEN (((t0.c0) IS FALSE)) AND (t0.c2 COLLATE RTRIM)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('J^', x'', NULL); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT DISTINCT t0.c0 COLLATE NOCASE, CAST((((t0.c1))>=((t0.c1))) AS BLOB), NULL FROM t0 WHERE ((((0xffffffffd009d027 IN ()))IS(NULL))); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 AFTER UPDATE OF c1 ON t0 WHEN ((t0.c2)IS NOT(t0.c1)) COLLATE RTRIM BEGIN UPDATE OR IGNORE t0 SET c1='', c0=0.2221800839386373 WHERE LIKELIHOOD(DISTINCT LOWER(t0.c2), 0.809488289552583);END; -- 0ms;
PRAGMA temp.default_cache_size = 554575745; -- 0ms;
PRAGMA locking_mode; -- 0ms;
UPDATE t0 SET c1=x'' WHERE (~ ((NOT (t0.c0)))); -- 0ms;
UPDATE t0 SET (c0)=(0.5827539610503638); -- 0ms;
UPDATE t0 SET (c2)=(x'1ccc'); -- 1ms;
CREATE INDEX i76 ON t0(CASE WHEN COALESCE('%k', c0) THEN 0.2796788339140317 WHEN (c0 IN ()) THEN c0 WHEN ((c1) NOT NULL) THEN (+ (c2)) END,CAST(CAST(0.8238029893060022 AS NUMERIC) AS NUMERIC) COLLATE RTRIM,(((((((((c2 IN (c1)))OR(-227868139)))OR(c0)))OR(((c1)>=(c0)))))OR(c2)) COLLATE BINARY DESC); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (-9.69551627E8); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (0.8185548334621713); -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c0) VALUES (NULL, 0Xffffffffac5b6d84); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.7225521395469575, 431701568, x''), ('-1578297916', 'N72I4358909249529331172-^', '573411470'), (0.3103398865718454, x'c585', NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO t0(c1) VALUES ('1145688759'); -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'', NULL, '-750669403') ON CONFLICT(c0) DO UPDATE SET c1=NULL; -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES ('ê²å¬¥Rì¢)|p'); -- 0ms;
INSERT OR REPLACE INTO t0(c2, c1, c0) VALUES ('', NULL, x''), (x'', '-929169338', 0.3851976392929892), (0.632521871417458, 0.7001770551150376, 1.491677163E9); -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c2, c2)=(x'', 0.0988213857258804); -- 1ms;
ANALYZE v0; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE t0 SET c0='1497644795'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i5', ' unordered noskipscan'); -- 0ms;
ANALYZE temp; -- 0ms;
DROP INDEX IF EXISTS "i46"; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c0='TV'; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(NULL); -- 0ms;
UPDATE OR FAIL t0 SET (c2, c1, c1)=('1940685861', x'a0fa', '') WHERE t0.c2; -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c2, c1)=(0.8483537384409199, x'a0de', 0.4754997951405344) WHERE ((((((((((t0.c0) NOT NULL))OR(((t0.c0)<=(t0.c0)))))AND(t0.c2 COLLATE BINARY)))OR(((t0.c2)&(t0.c1)))))OR((t0.c2 IN ()))); -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=(0xffffffffd8af51df) WHERE (((t0.c2 IN ())) NOT NULL); -- 0ms;
UPDATE OR IGNORE t0 SET c2='0.8976914607630087' WHERE CASE WHEN (- (t0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE ((t0.c1) NOTNULL) END; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-729654762') NOT NULL) IN ('' COLLATE BINARY)); -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (NULL), (x''), ('h\nN\r]ê%'), (0X1ae8d389), ('-870169269'); -- 0ms;
UPDATE OR IGNORE t0 SET c0='-916207265'; -- 1ms;
PRAGMA main.soft_heap_limit; -- 0ms;
INSERT OR REPLACE INTO t0(c2, c1) VALUES (NULL, 'f?cZP\r'), ('1619865834', 0.037889279548948496), (0.02236429051219857, '-1795179115'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i76', ' sz=-1492690139'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM t0, v0 WHERE ((((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), (NULL IN ()), CAST('Je}ë² Pî¼yM' AS REAL))) AND ((TRIM(v0.c2), ((((t0.c1)AND(v0.c1)))OR(v0.c2)), (t0.c1 IN ()))))) ORDER BY (NOT ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), (NULL IN ()), CAST('Je}ë² Pî¼yM' AS REAL))) AND ((TRIM(v0.c2), ((((t0.c1)AND(v0.c1)))OR(v0.c2)), (t0.c1 IN ()))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c0)))))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), (NULL IN ()), CAST('Je}ë² Pî¼yM' AS REAL))) AND ((TRIM(v0.c2), ((((t0.c1)AND(v0.c1)))OR(v0.c2)), (t0.c1 IN ()))))) ORDER BY (NOT ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), (NULL IN ()), CAST('Je}ë² Pî¼yM' AS REAL))) AND ((TRIM(v0.c2), ((((t0.c1)AND(v0.c1)))OR(v0.c2)), (t0.c1 IN ()))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c0)))))  NULLS FIRST);
SELECT * FROM t0, v0 WHERE ((((v0.c1, v0.c2, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER), (NULL IN ()), CAST('Je}ë² Pî¼yM' AS REAL))) AND ((TRIM(v0.c2), ((((t0.c1)AND(v0.c1)))OR(v0.c2)), (t0.c1 IN ()))))) ORDER BY (NOT ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (UNICODE((- (v0.c2)))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((- (v0.c2)))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (UNICODE((- (v0.c2)))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNICODE((- (v0.c2)))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE (UNICODE((- (v0.c2)))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c1 AS BLOB)))) ORDER BY (((SQLITE_COMPILEOPTION_USED(v0.c0)))>=((x''))) DESC  NULLS FIRST, ((((v0.c2)*(v0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (((SQLITE_COMPILEOPTION_USED(v0.c0)))>=((x''))) DESC  NULLS FIRST, ((((v0.c2)*(v0.c1))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c1 AS BLOB)))) ORDER BY (((SQLITE_COMPILEOPTION_USED(v0.c0)))>=((x''))) DESC  NULLS FIRST, ((((v0.c2)*(v0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 ORDER BY (((SQLITE_COMPILEOPTION_USED(v0.c0)))>=((x''))) DESC  NULLS FIRST, ((((v0.c2)*(v0.c1))) NOTNULL));
SELECT COUNT(*) FROM v0 WHERE ((- (CAST(v0.c1 AS BLOB)))) ORDER BY (((SQLITE_COMPILEOPTION_USED(v0.c0)))>=((x''))) DESC  NULLS FIRST, ((((v0.c2)*(v0.c1))) NOTNULL);
SELECT * FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) BETWEEN (x'') AND (x''))) ORDER BY -1.7976931348623157E308 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c2, v0.c0)) BETWEEN (x'') AND (x''))) IS TRUE)  as count FROM v0 ORDER BY -1.7976931348623157E308 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) BETWEEN (x'') AND (x''))) ORDER BY -1.7976931348623157E308 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULLIF(v0.c2, v0.c0)) BETWEEN (x'') AND (x''))) IS TRUE)  as count FROM v0 ORDER BY -1.7976931348623157E308 DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((NULLIF(v0.c2, v0.c0)) BETWEEN (x'') AND (x''))) ORDER BY -1.7976931348623157E308 DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((json_quote(v0.c2)) NOT BETWEEN ((v0.c1 IN ())) AND (v0.c1 COLLATE NOCASE))) ORDER BY MAX(-1160572711, ((v0.c1)|(v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(v0.c2)) NOT BETWEEN ((v0.c1 IN ())) AND (v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY MAX(-1160572711, ((v0.c1)|(v0.c1)))  NULLS LAST);
SELECT * FROM v0 WHERE (((json_quote(v0.c2)) NOT BETWEEN ((v0.c1 IN ())) AND (v0.c1 COLLATE NOCASE))) ORDER BY MAX(-1160572711, ((v0.c1)|(v0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(v0.c2)) NOT BETWEEN ((v0.c1 IN ())) AND (v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY MAX(-1160572711, ((v0.c1)|(v0.c1)))  NULLS LAST);
SELECT * FROM v0 WHERE (((json_quote(v0.c2)) NOT BETWEEN ((v0.c1 IN ())) AND (v0.c1 COLLATE NOCASE))) ORDER BY MAX(-1160572711, ((v0.c1)|(v0.c1)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (0.9700186426948013);
SELECT SUM(count) FROM (SELECT ALL ((0.9700186426948013) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9700186426948013);
SELECT SUM(count) FROM (SELECT ALL ((0.9700186426948013) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (0.9700186426948013);
SELECT * FROM t0, v0 WHERE ((((((v0.c1)) BETWEEN ((t0.c1)) AND ((v0.c2)))) NOT NULL)) ORDER BY (((t0.c2, CASE 0.32957071740818455  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END, x''))>(((- (t0.c1)), (((v0.c1, x'', NULL)) BETWEEN ((t0.c1, v0.c0, t0.c1)) AND ((v0.c1, t0.c0, v0.c1))), CASE WHEN t0.c0 THEN 0.5443363459411982 WHEN '&W2[' THEN t0.c0 WHEN v0.c0 THEN v0.c2 ELSE 0.7937490244981208 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((t0.c1)) AND ((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c2, CASE 0.32957071740818455  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END, x''))>(((- (t0.c1)), (((v0.c1, x'', NULL)) BETWEEN ((t0.c1, v0.c0, t0.c1)) AND ((v0.c1, t0.c0, v0.c1))), CASE WHEN t0.c0 THEN 0.5443363459411982 WHEN '&W2[' THEN t0.c0 WHEN v0.c0 THEN v0.c2 ELSE 0.7937490244981208 END)))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((((v0.c1)) BETWEEN ((t0.c1)) AND ((v0.c2)))) NOT NULL)) ORDER BY (((t0.c2, CASE 0.32957071740818455  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END, x''))>(((- (t0.c1)), (((v0.c1, x'', NULL)) BETWEEN ((t0.c1, v0.c0, t0.c1)) AND ((v0.c1, t0.c0, v0.c1))), CASE WHEN t0.c0 THEN 0.5443363459411982 WHEN '&W2[' THEN t0.c0 WHEN v0.c0 THEN v0.c2 ELSE 0.7937490244981208 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1)) BETWEEN ((t0.c1)) AND ((v0.c2)))) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c2, CASE 0.32957071740818455  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END, x''))>(((- (t0.c1)), (((v0.c1, x'', NULL)) BETWEEN ((t0.c1, v0.c0, t0.c1)) AND ((v0.c1, t0.c0, v0.c1))), CASE WHEN t0.c0 THEN 0.5443363459411982 WHEN '&W2[' THEN t0.c0 WHEN v0.c0 THEN v0.c2 ELSE 0.7937490244981208 END)))  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((((v0.c1)) BETWEEN ((t0.c1)) AND ((v0.c2)))) NOT NULL)) ORDER BY (((t0.c2, CASE 0.32957071740818455  WHEN t0.c2 THEN t0.c1 ELSE t0.c2 END, x''))>(((- (t0.c1)), (((v0.c1, x'', NULL)) BETWEEN ((t0.c1, v0.c0, t0.c1)) AND ((v0.c1, t0.c0, v0.c1))), CASE WHEN t0.c0 THEN 0.5443363459411982 WHEN '&W2[' THEN t0.c0 WHEN v0.c0 THEN v0.c2 ELSE 0.7937490244981208 END)))  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE ((~ ('-1319715961'))) ORDER BY ((CAST(v0.c2 AS TEXT))|(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('-1319715961'))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(v0.c2 AS TEXT))|(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((~ ('-1319715961'))) ORDER BY ((CAST(v0.c2 AS TEXT))|(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('-1319715961'))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(v0.c2 AS TEXT))|(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS LAST);
SELECT ALL * FROM t0, v0 WHERE ((~ ('-1319715961'))) ORDER BY ((CAST(v0.c2 AS TEXT))|(CASE WHEN v0.c0 THEN v0.c0 END))  NULLS LAST;
SELECT * FROM t0 WHERE ((((((((((((t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c2, t0.c0))))OR(TRIM(t0.c1))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)))OR(((t0.c0)>(t0.c2)))))AND(INSTR(t0.c0, x''))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c2, t0.c0))))OR(TRIM(t0.c1))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)))OR(((t0.c0)>(t0.c2)))))AND(INSTR(t0.c0, x'')))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c2, t0.c0))))OR(TRIM(t0.c1))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)))OR(((t0.c0)>(t0.c2)))))AND(INSTR(t0.c0, x''))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c2, t0.c0))))OR(TRIM(t0.c1))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)))OR(((t0.c0)>(t0.c2)))))AND(INSTR(t0.c0, x'')))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((((((((t0.c1, t0.c0, t0.c1))>((t0.c0, t0.c2, t0.c0))))OR(TRIM(t0.c1))))AND(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)))OR(((t0.c0)>(t0.c2)))))AND(INSTR(t0.c0, x''))));
SELECT COUNT(*) FROM v0 WHERE (x'f12ea98a');
SELECT SUM(count) FROM (SELECT ((x'f12ea98a') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'f12ea98a');
SELECT SUM(count) FROM (SELECT ((x'f12ea98a') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (x'f12ea98a');
SELECT * FROM v0 INNER JOIN t0 ON (((v0.c2))<((((v0.c2)IS(t0.c0))))) WHERE (((((x'2b82') ISNULL))=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'2b82') ISNULL))=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((v0.c2))<((((v0.c2)IS(t0.c0))))));
SELECT * FROM v0 INNER JOIN t0 ON (((v0.c2))<((((v0.c2)IS(t0.c0))))) WHERE (((((x'2b82') ISNULL))=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((x'2b82') ISNULL))=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1)))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((v0.c2))<((((v0.c2)IS(t0.c0))))));
SELECT * FROM v0 INNER JOIN t0 ON (((v0.c2))<((((v0.c2)IS(t0.c0))))) WHERE (((((x'2b82') ISNULL))=((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))));
SELECT * FROM t0 WHERE ((- (1.043199173E9))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((- (1.043199173E9))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT * FROM t0 WHERE ((- (1.043199173E9))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT (((- (1.043199173E9))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT * FROM t0 WHERE ((- (1.043199173E9))) ORDER BY t0.c2 DESC;
SELECT * FROM v0 INDEXED BY i5, t0 WHERE ((((t0.c1)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM v0 INDEXED BY i5, t0);
SELECT * FROM v0 INDEXED BY i5, t0 WHERE ((((t0.c1)GLOB(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)GLOB(t0.c0)) IN ())) IS TRUE)  as count FROM v0 INDEXED BY i5, t0);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))<<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))<<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))<<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))<<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2))))<<(((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)))) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (v0.c1 IN ()) THEN ((v0.c0) BETWEEN (x'') AND (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c2)))) AND ((((v0.c2)IS(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((NOT (v0.c2)))) AND ((((v0.c2)IS(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c2)))) AND ((((v0.c2)IS(v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((NOT (v0.c2)))) AND ((((v0.c2)IS(v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((NOT (v0.c2)))) AND ((((v0.c2)IS(v0.c2))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS BLOB) WHERE ((((((((((((v0.c2, t0.c2, t0.c0)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1))))OR(((v0.c1) NOTNULL))))AND((~ (v0.c2)))))AND(t0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE CASE t0.c0  WHEN v0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN NULL ELSE v0.c1 END  WHEN NULL THEN (t0.c1 IN (v0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2, t0.c2, t0.c0)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1))))OR(((v0.c1) NOTNULL))))AND((~ (v0.c2)))))AND(t0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS BLOB) ORDER BY CASE CASE t0.c0  WHEN v0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN NULL ELSE v0.c1 END  WHEN NULL THEN (t0.c1 IN (v0.c1)) END DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS BLOB) WHERE ((((((((((((v0.c2, t0.c2, t0.c0)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1))))OR(((v0.c1) NOTNULL))))AND((~ (v0.c2)))))AND(t0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE CASE t0.c0  WHEN v0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN NULL ELSE v0.c1 END  WHEN NULL THEN (t0.c1 IN (v0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((v0.c2, t0.c2, t0.c0)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1))))OR(((v0.c1) NOTNULL))))AND((~ (v0.c2)))))AND(t0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS BLOB) ORDER BY CASE CASE t0.c0  WHEN v0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN NULL ELSE v0.c1 END  WHEN NULL THEN (t0.c1 IN (v0.c1)) END DESC);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CAST(LOWER(t0.c0) AS BLOB) WHERE ((((((((((((v0.c2, t0.c2, t0.c0)) NOT BETWEEN ((v0.c0, v0.c1, v0.c0)) AND ((v0.c0, v0.c0, v0.c1))))OR(((v0.c1) NOTNULL))))AND((~ (v0.c2)))))AND(t0.c2 COLLATE BINARY)))AND(CAST(v0.c1 AS NUMERIC)))) ORDER BY CASE CASE t0.c0  WHEN v0.c0 THEN v0.c1 WHEN t0.c2 THEN t0.c1 WHEN v0.c1 THEN NULL ELSE v0.c1 END  WHEN NULL THEN (t0.c1 IN (v0.c1)) END DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS TRUE)) NOTNULL)) ORDER BY ((((t0.c2) NOTNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOTNULL)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS TRUE)) NOTNULL)) ORDER BY ((((t0.c2) NOTNULL)) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) NOTNULL)) IS TRUE)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS TRUE)) NOTNULL)) ORDER BY ((((t0.c2) NOTNULL)) IS TRUE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c2)==(v0.c1)) WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN 0.425975543217885 THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((v0.c2)=(v0.c1)) WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN 0.425975543217885 THEN v0.c2 ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c2)==(v0.c1)) WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN 0.425975543217885 THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN ((v0.c2)=(v0.c1)) WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN 0.425975543217885 THEN v0.c2 ELSE (v0.c2 IN ()) END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN ((v0.c2)==(v0.c1)) WHEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) THEN v0.c0 COLLATE NOCASE WHEN 0.425975543217885 THEN v0.c2 ELSE (v0.c2 IN ()) END);
SELECT COUNT(*) FROM v0 WHERE (CASE ((((v0.c2)OR(v0.c2)))AND(v0.c2))  WHEN (((v0.c1, v0.c2, v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c2, v0.c1, NULL)) AND ((NULL, v0.c2, v0.c2, v0.c1, v0.c0))) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN ((v0.c1)|(v0.c2)) WHEN v0.c1 THEN ((v0.c1)||('2103455074')) END) ORDER BY (- (v0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c2)OR(v0.c2)))AND(v0.c2))  WHEN (((v0.c1, v0.c2, v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c2, v0.c1, NULL)) AND ((NULL, v0.c2, v0.c2, v0.c1, v0.c0))) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN ((v0.c1)|(v0.c2)) WHEN v0.c1 THEN ((v0.c1)||('2103455074')) END) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (CASE ((((v0.c2)OR(v0.c2)))AND(v0.c2))  WHEN (((v0.c1, v0.c2, v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c2, v0.c1, NULL)) AND ((NULL, v0.c2, v0.c2, v0.c1, v0.c0))) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN ((v0.c1)|(v0.c2)) WHEN v0.c1 THEN ((v0.c1)||('2103455074')) END) ORDER BY (- (v0.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c2)OR(v0.c2)))AND(v0.c2))  WHEN (((v0.c1, v0.c2, v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c2, v0.c1, NULL)) AND ((NULL, v0.c2, v0.c2, v0.c1, v0.c0))) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN ((v0.c1)|(v0.c2)) WHEN v0.c1 THEN ((v0.c1)||('2103455074')) END) IS TRUE)  as count FROM v0 ORDER BY (- (v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (CASE ((((v0.c2)OR(v0.c2)))AND(v0.c2))  WHEN (((v0.c1, v0.c2, v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c0, v0.c2, v0.c1, NULL)) AND ((NULL, v0.c2, v0.c2, v0.c1, v0.c0))) THEN CAST(v0.c2 AS BLOB) WHEN v0.c0 THEN ((v0.c1)|(v0.c2)) WHEN v0.c1 THEN ((v0.c1)||('2103455074')) END) ORDER BY (- (v0.c2 COLLATE RTRIM));
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((((((json(t0.c0))OR((v0.c1 IN ()))))OR(((t0.c1)LIKE(v0.c2)))))AND(LOWER(DISTINCT v0.c0))))AND(0X13739331)));
SELECT SUM(count) FROM (SELECT ((((((((((json(t0.c0))OR((v0.c1 IN ()))))OR(((t0.c1)LIKE(v0.c2)))))AND(LOWER(DISTINCT v0.c0))))AND(0x13739331))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((((((json(t0.c0))OR((v0.c1 IN ()))))OR(((t0.c1)LIKE(v0.c2)))))AND(LOWER(DISTINCT v0.c0))))AND(0X13739331)));
SELECT SUM(count) FROM (SELECT ((((((((((json(t0.c0))OR((v0.c1 IN ()))))OR(((t0.c1)LIKE(v0.c2)))))AND(LOWER(DISTINCT v0.c0))))AND(0x13739331))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT COUNT(*) FROM v0 NATURAL JOIN t0 WHERE (((((((((json(t0.c0))OR((v0.c1 IN ()))))OR(((t0.c1)LIKE(v0.c2)))))AND(LOWER(DISTINCT v0.c0))))AND(0X13739331)));
SELECT * FROM v0, t0 WHERE (((((t0.c2) ISNULL))&(((v0.c0) NOT BETWEEN (x'') AND (v0.c0))))) ORDER BY ((((((((((t0.c0)AND(v0.c2)))AND(v0.c0)))OR(t0.c2)))AND(v0.c2)))|(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL))&(((v0.c0) NOT BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((t0.c0)AND(v0.c2)))AND(v0.c0)))OR(t0.c2)))AND(v0.c2)))|(x'')) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((t0.c2) ISNULL))&(((v0.c0) NOT BETWEEN (x'') AND (v0.c0))))) ORDER BY ((((((((((t0.c0)AND(v0.c2)))AND(v0.c0)))OR(t0.c2)))AND(v0.c2)))|(x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) ISNULL))&(((v0.c0) NOT BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((((t0.c0)AND(v0.c2)))AND(v0.c0)))OR(t0.c2)))AND(v0.c2)))|(x'')) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((t0.c2) ISNULL))&(((v0.c0) NOT BETWEEN (x'') AND (v0.c0))))) ORDER BY ((((((((((t0.c0)AND(v0.c2)))AND(v0.c0)))OR(t0.c2)))AND(v0.c2)))|(x'')) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (t0.c2 IN ()) THEN ((v0.c0) IS TRUE) WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c1 AS TEXT) WHEN t0.c0 THEN '' END WHERE (((((((v0.c0)>>(t0.c2)))OR(((t0.c0)>=(t0.c2)))))OR(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>>(t0.c2)))OR(((t0.c0)>=(t0.c2)))))OR(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (t0.c2 IN ()) THEN ((v0.c0) IS TRUE) WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c1 AS TEXT) WHEN t0.c0 THEN '' END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (t0.c2 IN ()) THEN ((v0.c0) IS TRUE) WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c1 AS TEXT) WHEN t0.c0 THEN '' END WHERE (((((((v0.c0)>>(t0.c2)))OR(((t0.c0)>=(t0.c2)))))OR(((t0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>>(t0.c2)))OR(((t0.c0)>=(t0.c2)))))OR(((t0.c0) ISNULL)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (t0.c2 IN ()) THEN ((v0.c0) IS TRUE) WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c1 AS TEXT) WHEN t0.c0 THEN '' END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON CASE WHEN (t0.c2 IN ()) THEN ((v0.c0) IS TRUE) WHEN v0.c0 COLLATE NOCASE THEN CAST(v0.c1 AS TEXT) WHEN t0.c0 THEN '' END WHERE (((((((v0.c0)>>(t0.c2)))OR(((t0.c0)>=(t0.c2)))))OR(((t0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) NOT NULL))OR(v0.c1 COLLATE NOCASE)))OR(CASE 162173550  WHEN x'' THEN v0.c1 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) NOT NULL))OR(v0.c1 COLLATE NOCASE)))OR(CASE 162173550  WHEN x'' THEN v0.c1 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) NOT NULL))OR(v0.c1 COLLATE NOCASE)))OR(CASE 162173550  WHEN x'' THEN v0.c1 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0) NOT NULL))OR(v0.c1 COLLATE NOCASE)))OR(CASE 162173550  WHEN x'' THEN v0.c1 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((t0.c0) NOT NULL))OR(v0.c1 COLLATE NOCASE)))OR(CASE 162173550  WHEN x'' THEN v0.c1 WHEN t0.c0 THEN v0.c2 WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END)));
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c1)))%(LIKE(t0.c2, t0.c1, 't'))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1)))%(LIKE(t0.c2, t0.c1, 't')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c1)))%(LIKE(t0.c2, t0.c1, 't'))));
SELECT SUM(count) FROM (SELECT (((((~ (t0.c1)))%(LIKE(t0.c2, t0.c1, 't')))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((~ (t0.c1)))%(LIKE(t0.c2, t0.c1, 't'))));
SELECT COUNT(*) FROM t0, v0 WHERE (x'd8c6');
SELECT SUM(count) FROM (SELECT ALL ((x'd8c6') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'd8c6');
SELECT SUM(count) FROM (SELECT ALL ((x'd8c6') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (x'd8c6');
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN (((- (v0.c1)), ((v0.c1)>=(v0.c2)), (NOT (v0.c2)))) AND ((x'', (v0.c0 IN (v0.c1)), v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c2, v0.c2)) BETWEEN (((- (v0.c1)), ((v0.c1)>=(v0.c2)), (NOT (v0.c2)))) AND ((x'', (v0.c0 IN (v0.c1)), v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN (((- (v0.c1)), ((v0.c1)>=(v0.c2)), (NOT (v0.c2)))) AND ((x'', (v0.c0 IN (v0.c1)), v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2, v0.c2, v0.c2)) BETWEEN (((- (v0.c1)), ((v0.c1)>=(v0.c2)), (NOT (v0.c2)))) AND ((x'', (v0.c0 IN (v0.c1)), v0.c1)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c2, v0.c2)) BETWEEN (((- (v0.c1)), ((v0.c1)>=(v0.c2)), (NOT (v0.c2)))) AND ((x'', (v0.c0 IN (v0.c1)), v0.c1))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c1) AND (x'698b')))%((t0.c0 IN ())))) ORDER BY json_remove(v0.c2, ((((t0.c0)AND(t0.c1)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c1) AND (x'698b')))%((t0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY json_remove(v0.c2, ((((t0.c0)AND(t0.c1)))AND(v0.c2))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c1) AND (x'698b')))%((t0.c0 IN ())))) ORDER BY json_remove(v0.c2, ((((t0.c0)AND(t0.c1)))AND(v0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c1) AND (x'698b')))%((t0.c0 IN ())))) IS TRUE)  as count FROM v0, t0 ORDER BY json_remove(v0.c2, ((((t0.c0)AND(t0.c1)))AND(v0.c2))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((x'') NOT BETWEEN (t0.c1) AND (x'698b')))%((t0.c0 IN ())))) ORDER BY json_remove(v0.c2, ((((t0.c0)AND(t0.c1)))AND(v0.c2)));
SELECT * FROM t0, v0 WHERE (((v0.c1)>=(((v0.c1)OR(x''))))) ORDER BY ((((((((((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE WHEN v0.c2 THEN t0.c2 WHEN NULL THEN t0.c1 WHEN v0.c1 THEN t0.c2 END)))AND(((t0.c0) NOT NULL))))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))))OR(((((((((0.08242587655766098)OR(t0.c2)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)>=(((v0.c1)OR(x''))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE WHEN v0.c2 THEN t0.c2 WHEN NULL THEN t0.c1 WHEN v0.c1 THEN t0.c2 END)))AND(((t0.c0) NOT NULL))))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))))OR(((((((((0.08242587655766098)OR(t0.c2)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1))))  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((v0.c1)>=(((v0.c1)OR(x''))))) ORDER BY ((((((((((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE WHEN v0.c2 THEN t0.c2 WHEN NULL THEN t0.c1 WHEN v0.c1 THEN t0.c2 END)))AND(((t0.c0) NOT NULL))))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))))OR(((((((((0.08242587655766098)OR(t0.c2)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)>=(((v0.c1)OR(x''))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((((((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE WHEN v0.c2 THEN t0.c2 WHEN NULL THEN t0.c1 WHEN v0.c1 THEN t0.c2 END)))AND(((t0.c0) NOT NULL))))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))))OR(((((((((0.08242587655766098)OR(t0.c2)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1))))  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((v0.c1)>=(((v0.c1)OR(x''))))) ORDER BY ((((((((((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)))OR(CASE WHEN v0.c2 THEN t0.c2 WHEN NULL THEN t0.c1 WHEN v0.c1 THEN t0.c2 END)))AND(((t0.c0) NOT NULL))))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))))OR(((((((((0.08242587655766098)OR(t0.c2)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c0)))OR('1745473804')))<<(INSTR(t0.c2, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))OR('1745473804')))<<(INSTR(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c0)))OR('1745473804')))<<(INSTR(t0.c2, t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))OR('1745473804')))<<(INSTR(t0.c2, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)OR(t0.c0)))OR('1745473804')))<<(INSTR(t0.c2, t0.c1))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('')OR((t0.c1 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((('')OR((t0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('')OR((t0.c1 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((('')OR((t0.c1 IN (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('')OR((t0.c1 IN (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)<<('HJ>QY')))*('0.7498238658997305'))) ORDER BY CHANGES() ASC  NULLS LAST, (((t0.c0)OR(0.32986407707218146)) IN ()) DESC, ((t0.c1) BETWEEN ((((t0.c0))<>((t0.c1)))) AND (((v0.c1)OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<<('HJ>QY')))*('0.7498238658997305'))) IS TRUE)  as count FROM t0, v0 ORDER BY CHANGES() ASC  NULLS LAST, (((t0.c0)OR(0.32986407707218146)) IN ()) DESC, ((t0.c1) BETWEEN ((((t0.c0))!=((t0.c1)))) AND (((v0.c1)OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)<<('HJ>QY')))*('0.7498238658997305'))) ORDER BY CHANGES() ASC  NULLS LAST, (((t0.c0)OR(0.32986407707218146)) IN ()) DESC, ((t0.c1) BETWEEN ((((t0.c0))<>((t0.c1)))) AND (((v0.c1)OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<<('HJ>QY')))*('0.7498238658997305'))) IS TRUE)  as count FROM t0, v0 ORDER BY CHANGES() ASC  NULLS LAST, (((t0.c0)OR(0.32986407707218146)) IN ()) DESC, ((t0.c1) BETWEEN ((((t0.c0))!=((t0.c1)))) AND (((v0.c1)OR(v0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)<<('HJ>QY')))*('0.7498238658997305'))) ORDER BY CHANGES() ASC  NULLS LAST, (((t0.c0)OR(0.32986407707218146)) IN ()) DESC, ((t0.c1) BETWEEN ((((t0.c0))<>((t0.c1)))) AND (((v0.c1)OR(v0.c0)))) ASC;
SELECT * FROM t0 FULL OUTER JOIN v0 ON ((((0.3316638731189181) BETWEEN (v0.c1) AND (t0.c1)))|('-224728402')) WHERE (CAST((NULL IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((0.3316638731189181) BETWEEN (v0.c1) AND (t0.c1)))|('-224728402')));
SELECT * FROM t0 FULL OUTER JOIN v0 ON ((((0.3316638731189181) BETWEEN (v0.c1) AND (t0.c1)))|('-224728402')) WHERE (CAST((NULL IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((NULL IN ()) AS TEXT)) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON ((((0.3316638731189181) BETWEEN (v0.c1) AND (t0.c1)))|('-224728402')));
SELECT * FROM t0 FULL OUTER JOIN v0 ON ((((0.3316638731189181) BETWEEN (v0.c1) AND (t0.c1)))|('-224728402')) WHERE (CAST((NULL IN ()) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)*(v0.c1)))>=(TRIM(v0.c1)))) ORDER BY CASE WHEN x'' THEN CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0.26939331775236897 THEN v0.c1 ELSE v0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(v0.c1)))>=(TRIM(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN x'' THEN CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0.26939331775236897 THEN v0.c1 ELSE v0.c1 END END ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)*(v0.c1)))>=(TRIM(v0.c1)))) ORDER BY CASE WHEN x'' THEN CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0.26939331775236897 THEN v0.c1 ELSE v0.c1 END END ASC;
SELECT SUM(count) FROM (SELECT ((((((v0.c1)*(v0.c1)))>=(TRIM(v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN x'' THEN CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0.26939331775236897 THEN v0.c1 ELSE v0.c1 END END ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1)*(v0.c1)))>=(TRIM(v0.c1)))) ORDER BY CASE WHEN x'' THEN CASE WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN 0.26939331775236897 THEN v0.c1 ELSE v0.c1 END END ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0))>=((v0.c0)))) IS TRUE) WHERE ((~ (json_remove(t0.c0, t0.c0)))) ORDER BY (((v0.c0) NOT NULL) IN (t0.c1, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_remove(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0))>=((v0.c0)))) IS TRUE) ORDER BY (((v0.c0) NOT NULL) IN (t0.c1, v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0))>=((v0.c0)))) IS TRUE) WHERE ((~ (json_remove(t0.c0, t0.c0)))) ORDER BY (((v0.c0) NOT NULL) IN (t0.c1, v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((~ (json_remove(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0))>=((v0.c0)))) IS TRUE) ORDER BY (((v0.c0) NOT NULL) IN (t0.c1, v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN v0 ON (((((t0.c0))>=((v0.c0)))) IS TRUE) WHERE ((~ (json_remove(t0.c0, t0.c0)))) ORDER BY (((v0.c0) NOT NULL) IN (t0.c1, v0.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS BLOB));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS BLOB) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS BLOB));
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON CAST(((v0.c1) NOT NULL) AS BLOB) WHERE ('');
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((NULL) NOT BETWEEN (t0.c0) AND (((v0.c0)LIKE(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (t0.c0) AND (((v0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((NULL) NOT BETWEEN (t0.c0) AND (((v0.c0)LIKE(v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT BETWEEN (t0.c0) AND (((v0.c0)LIKE(v0.c1))))) IS TRUE)  as count FROM v0 NATURAL JOIN t0);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (((NULL) NOT BETWEEN (t0.c0) AND (((v0.c0)LIKE(v0.c1)))));
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE (((v0.c0) NOT BETWEEN (((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c2))) AND (((v0.c0) ISNULL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)<>(t0.c2)) IN ())) ORDER BY ((v0.c2)-(t0.c0)) COLLATE NOCASE COLLATE RTRIM ASC, COALESCE(CAST(t0.c0 AS INTEGER), (((v0.c1)) NOT BETWEEN ((0.8107261384688823)) AND ((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)!=(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c2)-(t0.c0)) COLLATE NOCASE COLLATE RTRIM ASC, COALESCE(CAST(t0.c0 AS INTEGER), (((v0.c1)) NOT BETWEEN ((0.8107261384688823)) AND ((v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)<>(t0.c2)) IN ())) ORDER BY ((v0.c2)-(t0.c0)) COLLATE NOCASE COLLATE RTRIM ASC, COALESCE(CAST(t0.c0 AS INTEGER), (((v0.c1)) NOT BETWEEN ((0.8107261384688823)) AND ((v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)!=(t0.c2)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((v0.c2)-(t0.c0)) COLLATE NOCASE COLLATE RTRIM ASC, COALESCE(CAST(t0.c0 AS INTEGER), (((v0.c1)) NOT BETWEEN ((0.8107261384688823)) AND ((v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)<>(t0.c2)) IN ())) ORDER BY ((v0.c2)-(t0.c0)) COLLATE NOCASE COLLATE RTRIM ASC, COALESCE(CAST(t0.c0 AS INTEGER), (((v0.c1)) NOT BETWEEN ((0.8107261384688823)) AND ((v0.c0))))  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'0f4e')))OR(v0.c2))) NOT BETWEEN (t0.c0) AND (0.17361312991001376))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((v0.c2)AND(v0.c2)))AND(t0.c2)))) AND (((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'0f4e')))OR(v0.c2))) NOT BETWEEN (t0.c0) AND (0.17361312991001376))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2)) NOT BETWEEN ((((((v0.c2)AND(v0.c2)))AND(t0.c2)))) AND (((~ (v0.c1))))));
SELECT * FROM v0, t0 WHERE (((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'0f4e')))OR(v0.c2))) NOT BETWEEN (t0.c0) AND (0.17361312991001376))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((v0.c2)AND(v0.c2)))AND(t0.c2)))) AND (((~ (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'0f4e')))OR(v0.c2))) NOT BETWEEN (t0.c0) AND (0.17361312991001376))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2)) NOT BETWEEN ((((((v0.c2)AND(v0.c2)))AND(t0.c2)))) AND (((~ (v0.c1))))));
SELECT * FROM v0, t0 WHERE (((((((((((v0.c1)AND(v0.c1)))AND(v0.c2)))AND(x'0f4e')))OR(v0.c2))) NOT BETWEEN (t0.c0) AND (0.17361312991001376))) ORDER BY (((v0.c2)) NOT BETWEEN ((((((v0.c2)AND(v0.c2)))AND(t0.c2)))) AND (((~ (v0.c1)))));
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY ((((((((v0.c0)OR((+ (v0.c1)))))OR(((v0.c0)OR(v0.c2)))))AND(1.597185388E9)))AND((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR((+ (v0.c1)))))OR(((v0.c0)OR(v0.c2)))))AND(1.597185388E9)))AND((- (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY ((((((((v0.c0)OR((+ (v0.c1)))))OR(((v0.c0)OR(v0.c2)))))AND(1.597185388E9)))AND((- (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c0)OR((+ (v0.c1)))))OR(((v0.c0)OR(v0.c2)))))AND(1.597185388E9)))AND((- (v0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (v0.c2) ORDER BY ((((((((v0.c0)OR((+ (v0.c1)))))OR(((v0.c0)OR(v0.c2)))))AND(1.597185388E9)))AND((- (v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE CASE WHEN v0.c2 THEN t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE CASE WHEN v0.c2 THEN t0.c2 END END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE CASE WHEN v0.c2 THEN t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE CASE WHEN v0.c2 THEN t0.c2 END END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN ((t0.c1) ISNULL) THEN v0.c2 COLLATE RTRIM ELSE CASE WHEN v0.c2 THEN t0.c2 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((0.6945409365318984)-((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE -515570361  WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (v0.c2 IN ()) ELSE (('F%)(P	') NOT BETWEEN (v0.c0) AND (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((0.6945409365318984)-((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE -515570361  WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (v0.c2 IN ()) ELSE (('F%)(P	') NOT BETWEEN (v0.c0) AND (v0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((0.6945409365318984)-((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE -515570361  WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (v0.c2 IN ()) ELSE (('F%)(P	') NOT BETWEEN (v0.c0) AND (v0.c1)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0 ORDER BY ((0.6945409365318984)-((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE -515570361  WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (v0.c2 IN ()) ELSE (('F%)(P	') NOT BETWEEN (v0.c0) AND (v0.c1)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c1) ORDER BY ((0.6945409365318984)-((((v0.c1)) BETWEEN ((v0.c1)) AND ((v0.c1))))) DESC, CASE -515570361  WHEN ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) THEN (v0.c2 IN ()) ELSE (('F%)(P	') NOT BETWEEN (v0.c0) AND (v0.c1)) END ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c1)))IS NOT(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS(v0.c1)))IS NOT(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c1)))IS NOT(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS(v0.c1)))IS NOT(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c1)))IS NOT(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM v0 WHERE ((+ (HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (HEX(DISTINCT v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(DISTINCT v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (HEX(DISTINCT v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (v0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((+ (v0.c1)))));
SELECT SUM(count) FROM (SELECT (((- ((+ (v0.c1))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((+ (v0.c1)))));
SELECT ALL * FROM t0 WHERE ((- (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t0.c1)<>(t0.c0))  WHEN (((t0.c1, t0.c2, t0.c1))==(('-804663257', t0.c0, t0.c1))) THEN ((t0.c1)IS NOT(t0.c0)) ELSE (((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t0.c1)<>(t0.c0))  WHEN (((t0.c1, t0.c2, t0.c1))=(('-804663257', t0.c0, t0.c1))) THEN ((t0.c1)IS NOT(t0.c0)) ELSE (((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) END);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t0.c1)<>(t0.c0))  WHEN (((t0.c1, t0.c2, t0.c1))==(('-804663257', t0.c0, t0.c1))) THEN ((t0.c1)IS NOT(t0.c0)) ELSE (((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) END;
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t0.c1)<>(t0.c0))  WHEN (((t0.c1, t0.c2, t0.c1))=(('-804663257', t0.c0, t0.c1))) THEN ((t0.c1)IS NOT(t0.c0)) ELSE (((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) END);
SELECT ALL * FROM t0 WHERE ((- (((t0.c0) BETWEEN (t0.c1) AND (t0.c2))))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END THEN ((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END, CASE ((t0.c1)<>(t0.c0))  WHEN (((t0.c1, t0.c2, t0.c1))==(('-804663257', t0.c0, t0.c1))) THEN ((t0.c1)IS NOT(t0.c0)) ELSE (((t0.c0, t0.c1, t0.c0)) BETWEEN ((t0.c1, t0.c2, t0.c0)) AND ((t0.c1, t0.c0, t0.c1))) END;
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))!=(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))<>(v0.c1)) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))!=(v0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT NULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))<>(v0.c1)) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE (((t0.c2) NOT NULL)) ORDER BY ((((((t0.c0)OR(t0.c1)))AND(t0.c2)))!=(v0.c1)) ASC;
SELECT * FROM t0 NATURAL JOIN v0 WHERE ('-70127827');
SELECT SUM(count) FROM (SELECT ALL (('-70127827') IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE ('-70127827');
SELECT SUM(count) FROM (SELECT ALL (('-70127827') IS TRUE)  as count FROM t0 NATURAL JOIN v0);
SELECT * FROM t0 NATURAL JOIN v0 WHERE ('-70127827');
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT t0.c2, t0.c2), 0.9998142905359834));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULLIF(DISTINCT t0.c2, t0.c2), 0.9998142905359834)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT t0.c2, t0.c2), 0.9998142905359834));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULLIF(DISTINCT t0.c2, t0.c2), 0.9998142905359834)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(NULLIF(DISTINCT t0.c2, t0.c2), 0.9998142905359834));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))<((t0.c2))))OR(t0.c0)))OR((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 0.2202219644485397, t0.c1)) AND ((NULL, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))<((t0.c2))))OR(t0.c0)))OR((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 0.2202219644485397, t0.c1)) AND ((NULL, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))<((t0.c2))))OR(t0.c0)))OR((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 0.2202219644485397, t0.c1)) AND ((NULL, t0.c1, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1))<((t0.c2))))OR(t0.c0)))OR((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 0.2202219644485397, t0.c1)) AND ((NULL, t0.c1, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c1))<((t0.c2))))OR(t0.c0)))OR((((t0.c2, t0.c0, t0.c1)) NOT BETWEEN ((t0.c0, 0.2202219644485397, t0.c1)) AND ((NULL, t0.c1, t0.c2))))));
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (t0.c0);
SELECT ALL * FROM v0, t0 WHERE (((((((((v0.c1)AND(((t0.c0) IS TRUE))))OR(STRFTIME(v0.c0, x'', t0.c0))))AND((NOT (v0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c1 THEN '-773486442' END))) ORDER BY ((-57394450) NOT BETWEEN ('0.2221800839386373') AND ((- (1799553222)))) DESC, LIKELIHOOD(v0.c1, 0.046099545361644845) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(((t0.c0) IS TRUE))))OR(STRFTIME(v0.c0, x'', t0.c0))))AND((NOT (v0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c1 THEN '-773486442' END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((-57394450) NOT BETWEEN ('0.2221800839386373') AND ((- (1799553222)))) DESC, LIKELIHOOD(v0.c1, 0.046099545361644845) COLLATE NOCASE ASC);
SELECT ALL * FROM v0, t0 WHERE (((((((((v0.c1)AND(((t0.c0) IS TRUE))))OR(STRFTIME(v0.c0, x'', t0.c0))))AND((NOT (v0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c1 THEN '-773486442' END))) ORDER BY ((-57394450) NOT BETWEEN ('0.2221800839386373') AND ((- (1799553222)))) DESC, LIKELIHOOD(v0.c1, 0.046099545361644845) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((((((((v0.c1)AND(((t0.c0) IS TRUE))))OR(STRFTIME(v0.c0, x'', t0.c0))))AND((NOT (v0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c1 THEN '-773486442' END))) IS TRUE)  as count FROM v0, t0 ORDER BY ((-57394450) NOT BETWEEN ('0.2221800839386373') AND ((- (1799553222)))) DESC, LIKELIHOOD(v0.c1, 0.046099545361644845) COLLATE NOCASE ASC);
SELECT ALL * FROM v0, t0 WHERE (((((((((v0.c1)AND(((t0.c0) IS TRUE))))OR(STRFTIME(v0.c0, x'', t0.c0))))AND((NOT (v0.c1)))))OR(CASE WHEN t0.c0 THEN v0.c1 WHEN t0.c0 THEN t0.c1 WHEN v0.c1 THEN '-773486442' END))) ORDER BY ((-57394450) NOT BETWEEN ('0.2221800839386373') AND ((- (1799553222)))) DESC, LIKELIHOOD(v0.c1, 0.046099545361644845) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((v0.c1)OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c1)OR(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((v0.c1)OR(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((v0.c1)OR(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TYPEOF(((v0.c1)OR(v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<=((((v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, 0.9473877761623823, v0.c2)))))) ORDER BY CAST((v0.c0 IN (v0.c0, v0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)<=((((v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, 0.9473877761623823, v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN (v0.c0, v0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<=((((v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, 0.9473877761623823, v0.c2)))))) ORDER BY CAST((v0.c0 IN (v0.c0, v0.c1)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2)<=((((v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, 0.9473877761623823, v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN (v0.c0, v0.c1)) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2)<=((((v0.c1, v0.c1, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1)) AND ((v0.c2, 0.9473877761623823, v0.c2)))))) ORDER BY CAST((v0.c0 IN (v0.c0, v0.c1)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) BETWEEN ((((t0.c2))<((t0.c1)))) AND ((- (v0.c1))))) ORDER BY LIKELY(DISTINCT (('531646226') ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) BETWEEN ((((t0.c2))<((t0.c1)))) AND ((- (v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY(DISTINCT (('531646226') ISNULL)) DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) BETWEEN ((((t0.c2))<((t0.c1)))) AND ((- (v0.c1))))) ORDER BY LIKELY(DISTINCT (('531646226') ISNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) BETWEEN ((((t0.c2))<((t0.c1)))) AND ((- (v0.c1))))) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY(DISTINCT (('531646226') ISNULL)) DESC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c1))) BETWEEN ((((t0.c2))<((t0.c1)))) AND ((- (v0.c1))))) ORDER BY LIKELY(DISTINCT (('531646226') ISNULL)) DESC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (((t0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE BINARY WHERE (v0.c0) ORDER BY ((((v0.c2)/(v0.c0)))AND('832735449')) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((t0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE BINARY ORDER BY ((((v0.c2)/(v0.c0)))AND('832735449')) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (((t0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE BINARY WHERE (v0.c0) ORDER BY ((((v0.c2)/(v0.c0)))AND('832735449')) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((t0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE BINARY ORDER BY ((((v0.c2)/(v0.c0)))AND('832735449')) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON (((t0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))) COLLATE BINARY WHERE (v0.c0) ORDER BY ((((v0.c2)/(v0.c0)))AND('832735449')) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT ALL * FROM t0, v0 WHERE (((((((((CAST(t0.c2 AS TEXT))AND(t0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN t0.c0 THEN v0.c2 WHEN 0.4230814767490274 THEN x'' WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END)))OR(((((((((((((t0.c1)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(t0.c2)))OR(v0.c0)))AND(v0.c1)))))OR(v0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c2 AS TEXT))AND(t0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN t0.c0 THEN v0.c2 WHEN 0.4230814767490274 THEN x'' WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END)))OR(((((((((((((t0.c1)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(t0.c2)))OR(v0.c0)))AND(v0.c1)))))OR(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((CAST(t0.c2 AS TEXT))AND(t0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN t0.c0 THEN v0.c2 WHEN 0.4230814767490274 THEN x'' WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END)))OR(((((((((((((t0.c1)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(t0.c2)))OR(v0.c0)))AND(v0.c1)))))OR(v0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c2 AS TEXT))AND(t0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN t0.c0 THEN v0.c2 WHEN 0.4230814767490274 THEN x'' WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END)))OR(((((((((((((t0.c1)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(t0.c2)))OR(v0.c0)))AND(v0.c1)))))OR(v0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((((((((CAST(t0.c2 AS TEXT))AND(t0.c1 COLLATE RTRIM)))AND(CASE v0.c0  WHEN t0.c0 THEN v0.c2 WHEN 0.4230814767490274 THEN x'' WHEN t0.c2 THEN v0.c0 ELSE t0.c1 END)))OR(((((((((((((t0.c1)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(t0.c2)))OR(v0.c0)))AND(v0.c1)))))OR(v0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))AND(v0.c2)) THEN ((v0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))AND(v0.c2)) THEN ((v0.c2) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))AND(v0.c2)) THEN ((v0.c2) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))AND(v0.c2)) THEN ((v0.c2) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN ((((((((v0.c1)AND(v0.c2)))AND(v0.c2)))OR(v0.c0)))AND(v0.c2)) THEN ((v0.c2) NOTNULL) END);
SELECT ALL * FROM t0, v0 WHERE (CAST(TYPEOF(DISTINCT t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(TYPEOF(DISTINCT t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(DISTINCT t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CAST(TYPEOF(DISTINCT t0.c2) AS NUMERIC));
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c2) BETWEEN (t0.c0) AND (t0.c2))))>=((((t0.c1)>>(v0.c1)))))) ORDER BY (((TYPEOF(DISTINCT v0.c2), ((t0.c1)<<(t0.c0)), LIKELIHOOD(DISTINCT t0.c1, 0.3592287649843364)))!=((((v0.c0) NOT NULL), ((t0.c2) NOTNULL), v0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) BETWEEN (t0.c0) AND (t0.c2))))>=((((t0.c1)>>(v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((TYPEOF(DISTINCT v0.c2), ((t0.c1)<<(t0.c0)), LIKELIHOOD(DISTINCT t0.c1, 0.3592287649843364)))<>((((v0.c0) NOT NULL), ((t0.c2) NOTNULL), v0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c2) BETWEEN (t0.c0) AND (t0.c2))))>=((((t0.c1)>>(v0.c1)))))) ORDER BY (((TYPEOF(DISTINCT v0.c2), ((t0.c1)<<(t0.c0)), LIKELIHOOD(DISTINCT t0.c1, 0.3592287649843364)))!=((((v0.c0) NOT NULL), ((t0.c2) NOTNULL), v0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c2) BETWEEN (t0.c0) AND (t0.c2))))>=((((t0.c1)>>(v0.c1)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (((TYPEOF(DISTINCT v0.c2), ((t0.c1)<<(t0.c0)), LIKELIHOOD(DISTINCT t0.c1, 0.3592287649843364)))<>((((v0.c0) NOT NULL), ((t0.c2) NOTNULL), v0.c2))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((v0.c2) BETWEEN (t0.c0) AND (t0.c2))))>=((((t0.c1)>>(v0.c1)))))) ORDER BY (((TYPEOF(DISTINCT v0.c2), ((t0.c1)<<(t0.c0)), LIKELIHOOD(DISTINCT t0.c1, 0.3592287649843364)))!=((((v0.c0) NOT NULL), ((t0.c2) NOTNULL), v0.c2))) ASC  NULLS LAST;
SELECT * FROM t0, v0 WHERE (0.12389747657240857) ORDER BY ((((((t0.c1)OR(v0.c2)))AND(x''))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.12389747657240857) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c1)OR(v0.c2)))AND(x''))) ISNULL) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (0.12389747657240857) ORDER BY ((((((t0.c1)OR(v0.c2)))AND(x''))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.12389747657240857) IS TRUE)  as count FROM t0, v0 ORDER BY ((((((t0.c1)OR(v0.c2)))AND(x''))) ISNULL) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (0.12389747657240857) ORDER BY ((((((t0.c1)OR(v0.c2)))AND(x''))) ISNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c1) ORDER BY ((x'')-(CASE WHEN v0.c2 THEN t0.c1 WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0, v0 ORDER BY ((x'')-(CASE WHEN v0.c2 THEN t0.c1 WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c1) ORDER BY ((x'')-(CASE WHEN v0.c2 THEN t0.c1 WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0, v0 ORDER BY ((x'')-(CASE WHEN v0.c2 THEN t0.c1 WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c1) ORDER BY ((x'')-(CASE WHEN v0.c2 THEN t0.c1 WHEN v0.c1 THEN t0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 END))  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1)) IN (t0.c1)) WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1)) IN (t0.c1)) ORDER BY t0.c1 ASC);
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1)) IN (t0.c1)) WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY t0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1)) IN (t0.c1)) ORDER BY t0.c1 ASC);
SELECT ALL * FROM t0 CROSS JOIN v0 ON (((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1)) IN (t0.c1)) WHERE ((((t0.c0 IN ())) IS TRUE)) ORDER BY t0.c1 ASC;
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c0) NOTNULL) ELSE t0.c1 COLLATE BINARY END) ORDER BY ((((v0.c2)LIKE(v0.c0)))&(((v0.c1)&(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c0) NOTNULL) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c2)LIKE(v0.c0)))&(((v0.c1)&(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c0) NOTNULL) ELSE t0.c1 COLLATE BINARY END) ORDER BY ((((v0.c2)LIKE(v0.c0)))&(((v0.c1)&(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c0) NOTNULL) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c2)LIKE(v0.c0)))&(((v0.c1)&(t0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN CAST(v0.c0 AS BLOB) THEN ((t0.c0) NOTNULL) ELSE t0.c1 COLLATE BINARY END) ORDER BY ((((v0.c2)LIKE(v0.c0)))&(((v0.c1)&(t0.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((LIKELY(t0.c1))>=(((((t0.c0)AND(t0.c2)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c1))>=(((((t0.c0)AND(t0.c2)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((LIKELY(t0.c1))>=(((((t0.c0)AND(t0.c2)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(t0.c1))>=(((((t0.c0)AND(t0.c2)))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((LIKELY(t0.c1))>=(((((t0.c0)AND(t0.c2)))AND(t0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((t0.c0)AND(v0.c1)))) WHERE (((((((((CASE t0.c2  WHEN v0.c0 THEN t0.c1 END)OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(t0.c2)))OR(t0.c0)))))OR(((('381884442', v0.c2, v0.c2, t0.c0, t0.c2)) NOT BETWEEN ((NULL, t0.c0, v0.c1, t0.c1, t0.c2)) AND ((v0.c0, v0.c0, t0.c1, t0.c2, v0.c2))))))OR(NULL)))AND((((0.8310399716590495)) NOT BETWEEN ((t0.c2)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c2  WHEN v0.c0 THEN t0.c1 END)OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(t0.c2)))OR(t0.c0)))))OR(((('381884442', v0.c2, v0.c2, t0.c0, t0.c2)) NOT BETWEEN ((NULL, t0.c0, v0.c1, t0.c1, t0.c2)) AND ((v0.c0, v0.c0, t0.c1, t0.c2, v0.c2))))))OR(NULL)))AND((((0.8310399716590495)) NOT BETWEEN ((t0.c2)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((t0.c0)AND(v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((t0.c0)AND(v0.c1)))) WHERE (((((((((CASE t0.c2  WHEN v0.c0 THEN t0.c1 END)OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(t0.c2)))OR(t0.c0)))))OR(((('381884442', v0.c2, v0.c2, t0.c0, t0.c2)) NOT BETWEEN ((NULL, t0.c0, v0.c1, t0.c1, t0.c2)) AND ((v0.c0, v0.c0, t0.c1, t0.c2, v0.c2))))))OR(NULL)))AND((((0.8310399716590495)) NOT BETWEEN ((t0.c2)) AND ((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c2  WHEN v0.c0 THEN t0.c1 END)OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(t0.c2)))OR(t0.c0)))))OR(((('381884442', v0.c2, v0.c2, t0.c0, t0.c2)) NOT BETWEEN ((NULL, t0.c0, v0.c1, t0.c1, t0.c2)) AND ((v0.c0, v0.c0, t0.c1, t0.c2, v0.c2))))))OR(NULL)))AND((((0.8310399716590495)) NOT BETWEEN ((t0.c2)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((t0.c0)AND(v0.c1)))));
SELECT COUNT(*) FROM v0 CROSS JOIN t0 ON (((((v0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) AND (((t0.c0)AND(v0.c1)))) WHERE (((((((((CASE t0.c2  WHEN v0.c0 THEN t0.c1 END)OR(((((((((v0.c2)AND(v0.c2)))OR(v0.c1)))AND(t0.c2)))OR(t0.c0)))))OR(((('381884442', v0.c2, v0.c2, t0.c0, t0.c2)) NOT BETWEEN ((NULL, t0.c0, v0.c1, t0.c1, t0.c2)) AND ((v0.c0, v0.c0, t0.c1, t0.c2, v0.c2))))))OR(NULL)))AND((((0.8310399716590495)) NOT BETWEEN ((t0.c2)) AND ((v0.c2))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c1))) AND (((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM) BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c1))) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c1))) AND (((v0.c0)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE RTRIM) BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c1))) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE RTRIM) BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c1))) AND (((v0.c0)%(v0.c0)))));
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) NOT NULL)) IS FALSE)) ORDER BY ((NULL COLLATE BINARY)+(((v0.c0) ISNULL))) ASC, CAST(((t0.c1)/(t0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((NULL COLLATE BINARY)+(((v0.c0) ISNULL))) ASC, CAST(((t0.c1)/(t0.c2)) AS NUMERIC) ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) NOT NULL)) IS FALSE)) ORDER BY ((NULL COLLATE BINARY)+(((v0.c0) ISNULL))) ASC, CAST(((t0.c1)/(t0.c2)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY ((NULL COLLATE BINARY)+(((v0.c0) ISNULL))) ASC, CAST(((t0.c1)/(t0.c2)) AS NUMERIC) ASC);
SELECT ALL * FROM t0, v0 WHERE (((((t0.c1) NOT NULL)) IS FALSE)) ORDER BY ((NULL COLLATE BINARY)+(((v0.c0) ISNULL))) ASC, CAST(((t0.c1)/(t0.c2)) AS NUMERIC) ASC;
SELECT * FROM v0, t0 WHERE (((t0.c0 IN (v0.c0, t0.c1)) IN (((v0.c2) BETWEEN (x'') AND (t0.c0))))) ORDER BY (((t0.c0 IN (NULL, v0.c2)))<(CASE WHEN v0.c1 THEN NULL END)) DESC, ((((t0.c2 IN ()), ((v0.c0) NOT NULL), (v0.c2 IN ())))=(((t0.c2 IN ()), ((t0.c1) BETWEEN (v0.c1) AND (v0.c2)), (((NULL, v0.c1, v0.c1))!=((t0.c2, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (v0.c0, t0.c1)) IN (((v0.c2) BETWEEN (x'') AND (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN (NULL, v0.c2)))<(CASE WHEN v0.c1 THEN NULL END)) DESC, ((((t0.c2 IN ()), ((v0.c0) NOT NULL), (v0.c2 IN ())))==(((t0.c2 IN ()), ((t0.c1) BETWEEN (v0.c1) AND (v0.c2)), (((NULL, v0.c1, v0.c1))<>((t0.c2, v0.c0, v0.c0)))))));
SELECT * FROM v0, t0 WHERE (((t0.c0 IN (v0.c0, t0.c1)) IN (((v0.c2) BETWEEN (x'') AND (t0.c0))))) ORDER BY (((t0.c0 IN (NULL, v0.c2)))<(CASE WHEN v0.c1 THEN NULL END)) DESC, ((((t0.c2 IN ()), ((v0.c0) NOT NULL), (v0.c2 IN ())))=(((t0.c2 IN ()), ((t0.c1) BETWEEN (v0.c1) AND (v0.c2)), (((NULL, v0.c1, v0.c1))!=((t0.c2, v0.c0, v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (v0.c0, t0.c1)) IN (((v0.c2) BETWEEN (x'') AND (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c0 IN (NULL, v0.c2)))<(CASE WHEN v0.c1 THEN NULL END)) DESC, ((((t0.c2 IN ()), ((v0.c0) NOT NULL), (v0.c2 IN ())))==(((t0.c2 IN ()), ((t0.c1) BETWEEN (v0.c1) AND (v0.c2)), (((NULL, v0.c1, v0.c1))<>((t0.c2, v0.c0, v0.c0)))))));
SELECT * FROM v0, t0 WHERE (((t0.c0 IN (v0.c0, t0.c1)) IN (((v0.c2) BETWEEN (x'') AND (t0.c0))))) ORDER BY (((t0.c0 IN (NULL, v0.c2)))<(CASE WHEN v0.c1 THEN NULL END)) DESC, ((((t0.c2 IN ()), ((v0.c0) NOT NULL), (v0.c2 IN ())))=(((t0.c2 IN ()), ((t0.c1) BETWEEN (v0.c1) AND (v0.c2)), (((NULL, v0.c1, v0.c1))!=((t0.c2, v0.c0, v0.c0))))));
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE (CAST(((t0.c1)GLOB(v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)GLOB(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE (CAST(((t0.c1)GLOB(v0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1)GLOB(v0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM);
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c0 AS TEXT) COLLATE RTRIM WHERE (CAST(((t0.c1)GLOB(v0.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (0.20122036546931787);
SELECT SUM(count) FROM (SELECT ((0.20122036546931787) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.20122036546931787);
SELECT SUM(count) FROM (SELECT ((0.20122036546931787) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (0.20122036546931787);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)!=(NULL)))%((((v0.c2))<((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<>(NULL)))%((((v0.c2))<((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)!=(NULL)))%((((v0.c2))<((v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)<>(NULL)))%((((v0.c2))<((v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c2)!=(NULL)))%((((v0.c2))<((v0.c2))))));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (((v0.c2, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c0)) AND ((t0.c0, t0.c0, -164903906))) THEN (- (x'')) ELSE (((v0.c2))>=((t0.c0))) END) ORDER BY CAST((((t0.c1, NULL, t0.c2, v0.c1, v0.c2))<=((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c2, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c0)) AND ((t0.c0, t0.c0, -164903906))) THEN (- (x'')) ELSE (((v0.c2))>=((t0.c0))) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((((t0.c1, NULL, t0.c2, v0.c1, v0.c2))<=((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1))) AS BLOB));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (((v0.c2, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c0)) AND ((t0.c0, t0.c0, -164903906))) THEN (- (x'')) ELSE (((v0.c2))>=((t0.c0))) END) ORDER BY CAST((((t0.c1, NULL, t0.c2, v0.c1, v0.c2))<=((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1))) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c2, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c0)) AND ((t0.c0, t0.c0, -164903906))) THEN (- (x'')) ELSE (((v0.c2))>=((t0.c0))) END) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((((t0.c1, NULL, t0.c2, v0.c1, v0.c2))<=((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1))) AS BLOB));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN (((v0.c2, v0.c0, t0.c0)) NOT BETWEEN ((v0.c0, v0.c0, t0.c0)) AND ((t0.c0, t0.c0, -164903906))) THEN (- (x'')) ELSE (((v0.c2))>=((t0.c0))) END) ORDER BY CAST((((t0.c1, NULL, t0.c2, v0.c1, v0.c2))<=((t0.c1, t0.c1, t0.c1, t0.c1, t0.c1))) AS BLOB);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON TRIM(DISTINCT (NOT (v0.c2))) WHERE (((((((((CAST(0.1506548623594467 AS REAL))AND(((0.9007048942447093)&(t0.c2)))))AND((((v0.c2))>=((v0.c0))))))OR(((v0.c1) NOT NULL))))AND(((t0.c1) BETWEEN (t0.c0) AND (x'79bd')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(0.1506548623594467 AS REAL))AND(((0.9007048942447093)&(t0.c2)))))AND((((v0.c2))>=((v0.c0))))))OR(((v0.c1) NOT NULL))))AND(((t0.c1) BETWEEN (t0.c0) AND (x'79bd'))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON TRIM(DISTINCT (NOT (v0.c2))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON TRIM(DISTINCT (NOT (v0.c2))) WHERE (((((((((CAST(0.1506548623594467 AS REAL))AND(((0.9007048942447093)&(t0.c2)))))AND((((v0.c2))>=((v0.c0))))))OR(((v0.c1) NOT NULL))))AND(((t0.c1) BETWEEN (t0.c0) AND (x'79bd')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(0.1506548623594467 AS REAL))AND(((0.9007048942447093)&(t0.c2)))))AND((((v0.c2))>=((v0.c0))))))OR(((v0.c1) NOT NULL))))AND(((t0.c1) BETWEEN (t0.c0) AND (x'79bd'))))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON TRIM(DISTINCT (NOT (v0.c2))));
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON TRIM(DISTINCT (NOT (v0.c2))) WHERE (((((((((CAST(0.1506548623594467 AS REAL))AND(((0.9007048942447093)&(t0.c2)))))AND((((v0.c2))>=((v0.c0))))))OR(((v0.c1) NOT NULL))))AND(((t0.c1) BETWEEN (t0.c0) AND (x'79bd')))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c1 ELSE t0.c2 END)OR(COALESCE(v0.c1, t0.c2))))OR(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE RTRIM)))OR((((v0.c2, t0.c1, t0.c1))>((v0.c1, t0.c0, v0.c0)))))) ORDER BY -1.671199533E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c1 ELSE t0.c2 END)OR(COALESCE(v0.c1, t0.c2))))OR(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE RTRIM)))OR((((v0.c2, t0.c1, t0.c1))>((v0.c1, t0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY -1.671199533E9  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c1 ELSE t0.c2 END)OR(COALESCE(v0.c1, t0.c2))))OR(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE RTRIM)))OR((((v0.c2, t0.c1, t0.c1))>((v0.c1, t0.c0, v0.c0)))))) ORDER BY -1.671199533E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c1 ELSE t0.c2 END)OR(COALESCE(v0.c1, t0.c2))))OR(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE RTRIM)))OR((((v0.c2, t0.c1, t0.c1))>((v0.c1, t0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY -1.671199533E9  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c1 ELSE t0.c2 END)OR(COALESCE(v0.c1, t0.c2))))OR(CAST(t0.c1 AS REAL))))OR(t0.c0 COLLATE RTRIM)))OR((((v0.c2, t0.c1, t0.c1))>((v0.c1, t0.c0, v0.c0)))))) ORDER BY -1.671199533E9  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((NOT (json(NULL)))) ORDER BY (((('375061642')OR(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)))AND(((v0.c2)IS NOT(v0.c2)))), ((v0.c0 COLLATE BINARY)IS(CAST(v0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((('375061642')OR(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)))AND(((v0.c2)IS NOT(v0.c2)))), ((v0.c0 COLLATE BINARY)IS(CAST(v0.c2 AS BLOB))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((NOT (json(NULL)))) ORDER BY (((('375061642')OR(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)))AND(((v0.c2)IS NOT(v0.c2)))), ((v0.c0 COLLATE BINARY)IS(CAST(v0.c2 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json(NULL)))) IS TRUE)  as count FROM v0 ORDER BY (((('375061642')OR(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)))AND(((v0.c2)IS NOT(v0.c2)))), ((v0.c0 COLLATE BINARY)IS(CAST(v0.c2 AS BLOB))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((NOT (json(NULL)))) ORDER BY (((('375061642')OR(CASE v0.c0  WHEN v0.c1 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN v0.c0 END)))AND(((v0.c2)IS NOT(v0.c2)))), ((v0.c0 COLLATE BINARY)IS(CAST(v0.c2 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))&('MO'));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))&('MO')));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))&('MO'));
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) IS TRUE)  as count FROM v0 ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))&('MO')));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c1) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (v0.c2))) ORDER BY (~ (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))), ((((v0.c1) BETWEEN (v0.c0) AND (v0.c0)))&('MO'));
SELECT * FROM t0, v0 WHERE (((((((t0.c1)AND(v0.c1)))AND(t0.c1))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0) BETWEEN (v0.c1) AND (643567227)))))AND(CASE WHEN t0.c2 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN '382504797' THEN -1.957642449E9 WHEN t0.c0 THEN '' WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(v0.c1)))AND(t0.c1))) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0) BETWEEN (v0.c1) AND (643567227)))))AND(CASE WHEN t0.c2 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN '382504797' THEN -1.957642449E9 WHEN t0.c0 THEN '' WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((((t0.c1)AND(v0.c1)))AND(t0.c1))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0) BETWEEN (v0.c1) AND (643567227)))))AND(CASE WHEN t0.c2 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN '382504797' THEN -1.957642449E9 WHEN t0.c0 THEN '' WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(v0.c1)))AND(t0.c1))) ISNULL)) IS TRUE)  as count FROM t0, v0 ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0) BETWEEN (v0.c1) AND (643567227)))))AND(CASE WHEN t0.c2 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN '382504797' THEN -1.957642449E9 WHEN t0.c0 THEN '' WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((((t0.c1)AND(v0.c1)))AND(t0.c1))) ISNULL)) ORDER BY ((((CAST(t0.c0 AS BLOB))OR(((t0.c0) BETWEEN (v0.c1) AND (643567227)))))AND(CASE WHEN t0.c2 THEN v0.c1 WHEN t0.c2 THEN t0.c0 WHEN '382504797' THEN -1.957642449E9 WHEN t0.c0 THEN '' WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1)|(v0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c0)) AND ((v0.c2)))) AND (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)|(v0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c0)) AND ((v0.c2)))) AND (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1)|(v0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c0)) AND ((v0.c2)))) AND (((v0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)|(v0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c0)) AND ((v0.c2)))) AND (((v0.c2) NOT NULL)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((((t0.c1)|(v0.c0))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((t0.c0)) AND ((v0.c2)))) AND (((v0.c2) NOT NULL))));
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS NUMERIC))||(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC))||(t0.c1))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS NUMERIC))||(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS NUMERIC))||(t0.c1))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS NUMERIC))||(t0.c1)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c1)-(v0.c0)))OR((~ (v0.c2)))))OR(IFNULL(v0.c2, t0.c2)))) ORDER BY -5.31979892E8 COLLATE BINARY  NULLS FIRST, ((((v0.c2 IN ())))==(((~ (t0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)-(v0.c0)))OR((~ (v0.c2)))))OR(IFNULL(v0.c2, t0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY -5.31979892E8 COLLATE BINARY  NULLS FIRST, ((((v0.c2 IN ())))=(((~ (t0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c1)-(v0.c0)))OR((~ (v0.c2)))))OR(IFNULL(v0.c2, t0.c2)))) ORDER BY -5.31979892E8 COLLATE BINARY  NULLS FIRST, ((((v0.c2 IN ())))==(((~ (t0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c1)-(v0.c0)))OR((~ (v0.c2)))))OR(IFNULL(v0.c2, t0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY -5.31979892E8 COLLATE BINARY  NULLS FIRST, ((((v0.c2 IN ())))=(((~ (t0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((((v0.c1)-(v0.c0)))OR((~ (v0.c2)))))OR(IFNULL(v0.c2, t0.c2)))) ORDER BY -5.31979892E8 COLLATE BINARY  NULLS FIRST, ((((v0.c2 IN ())))==(((~ (t0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c1 IN (v0.c0))))>((v0.c1 COLLATE NOCASE)))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 IN (v0.c0))))>((v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, NULL);
SELECT ALL * FROM v0 WHERE (((((v0.c1 IN (v0.c0))))>((v0.c1 COLLATE NOCASE)))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 IN (v0.c0))))>((v0.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, NULL);
SELECT ALL * FROM v0 WHERE (((((v0.c1 IN (v0.c0))))>((v0.c1 COLLATE NOCASE)))) ORDER BY CAST(v0.c0 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, NULL;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('') BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (((t0.c1)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (((t0.c1)<<(t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('') BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (((t0.c1)<<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((('') BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (((t0.c1)<<(t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((('') BETWEEN ((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (((t0.c1)<<(t0.c2)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0))==((((t0.c2)|(v0.c0)))))) ORDER BY (+ (((v0.c1)/(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((((t0.c2)|(v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (+ (((v0.c1)/(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0))==((((t0.c2)|(v0.c0)))))) ORDER BY (+ (((v0.c1)/(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))==((((t0.c2)|(v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY (+ (((v0.c1)/(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c0))==((((t0.c2)|(v0.c0)))))) ORDER BY (+ (((v0.c1)/(v0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c2 IN ())  WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c2 IN ())  WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (t0.c2 IN ())  WHEN t0.c0 COLLATE RTRIM THEN CASE t0.c0  WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END END);
SELECT ALL * FROM v0 WHERE (((((((((0.3283042431263751)OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND((~ (v0.c2)))))OR(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((0.3283042431263751)OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND((~ (v0.c2)))))OR(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((0.3283042431263751)OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND((~ (v0.c2)))))OR(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((((0.3283042431263751)OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND((~ (v0.c2)))))OR(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((0.3283042431263751)OR(((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))))AND((~ (v0.c2)))))OR(((v0.c1) IS TRUE))))OR(CAST(v0.c1 AS TEXT))));
SELECT ALL * FROM v0 WHERE (TRIM(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TRIM(v0.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(v0.c2 COLLATE BINARY)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TRIM(v0.c2 COLLATE BINARY));
SELECT ALL * FROM v0, t0 WHERE ((+ ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ ((- (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ ((- (v0.c2)))));
SELECT ALL * FROM t0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (v0.c1);
SELECT ALL * FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c2 ASC);
SELECT ALL * FROM t0, v0 WHERE (CAST(t0.c1 AS NUMERIC) COLLATE BINARY) ORDER BY t0.c2 ASC;
SELECT COUNT(*) FROM v0, t0 WHERE ((- (v0.c1)));
SELECT SUM(count) FROM (SELECT (((- (v0.c1))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((- (v0.c1)));
SELECT SUM(count) FROM (SELECT (((- (v0.c1))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((- (v0.c1)));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (((((v0.c2, x'0a9ebb12', v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, x'')) AND ((t0.c0, v0.c2, v0.c1)))) ISNULL) WHERE ((((v0.c0 IN (t0.c2, t0.c1))) BETWEEN (('-105725030' IN ())) AND (CASE '-1656294903'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN v0.c1 THEN t0.c2 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c2, t0.c1))) BETWEEN (('-105725030' IN ())) AND (CASE '-1656294903'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN v0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((((v0.c2, x'0a9ebb12', v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, x'')) AND ((t0.c0, v0.c2, v0.c1)))) ISNULL) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) ISNULL) DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (((((v0.c2, x'0a9ebb12', v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, x'')) AND ((t0.c0, v0.c2, v0.c1)))) ISNULL) WHERE ((((v0.c0 IN (t0.c2, t0.c1))) BETWEEN (('-105725030' IN ())) AND (CASE '-1656294903'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN v0.c1 THEN t0.c2 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (t0.c2, t0.c1))) BETWEEN (('-105725030' IN ())) AND (CASE '-1656294903'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN v0.c1 THEN t0.c2 END))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON (((((v0.c2, x'0a9ebb12', v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, x'')) AND ((t0.c0, v0.c2, v0.c1)))) ISNULL) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) ISNULL) DESC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON (((((v0.c2, x'0a9ebb12', v0.c1)) NOT BETWEEN ((v0.c1, v0.c2, x'')) AND ((t0.c0, v0.c2, v0.c1)))) ISNULL) WHERE ((((v0.c0 IN (t0.c2, t0.c1))) BETWEEN (('-105725030' IN ())) AND (CASE '-1656294903'  WHEN v0.c0 THEN v0.c0 WHEN NULL THEN t0.c0 WHEN v0.c1 THEN t0.c2 END))) ORDER BY ((CASE WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END) ISNULL) DESC;
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(0X6c744d3b)))OR(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(0x6c744d3b)))OR(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(0X6c744d3b)))OR(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(0x6c744d3b)))OR(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)))AND(0X6c744d3b)))OR(CASE WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)));
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c2)))AND(v0.c0)))>>(t0.c0)) WHERE (((((t0.c0 COLLATE RTRIM)OR(CASE v0.c0  WHEN v0.c0 THEN t0.c2 ELSE v0.c1 END)))AND((v0.c1 IN (t0.c2))))) ORDER BY ((v0.c2 IN ()) IN ()), CAST(((NULL) BETWEEN (v0.c2) AND (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)OR(CASE v0.c0  WHEN v0.c0 THEN t0.c2 ELSE v0.c1 END)))AND((v0.c1 IN (t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c2)))AND(v0.c0)))>>(t0.c0)) ORDER BY ((v0.c2 IN ()) IN ()), CAST(((NULL) BETWEEN (v0.c2) AND (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c2)))AND(v0.c0)))>>(t0.c0)) WHERE (((((t0.c0 COLLATE RTRIM)OR(CASE v0.c0  WHEN v0.c0 THEN t0.c2 ELSE v0.c1 END)))AND((v0.c1 IN (t0.c2))))) ORDER BY ((v0.c2 IN ()) IN ()), CAST(((NULL) BETWEEN (v0.c2) AND (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)OR(CASE v0.c0  WHEN v0.c0 THEN t0.c2 ELSE v0.c1 END)))AND((v0.c1 IN (t0.c2))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c2)))AND(v0.c0)))>>(t0.c0)) ORDER BY ((v0.c2 IN ()) IN ()), CAST(((NULL) BETWEEN (v0.c2) AND (v0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN v0 ON ((((((v0.c1)AND(v0.c2)))AND(v0.c0)))>>(t0.c0)) WHERE (((((t0.c0 COLLATE RTRIM)OR(CASE v0.c0  WHEN v0.c0 THEN t0.c2 ELSE v0.c1 END)))AND((v0.c1 IN (t0.c2))))) ORDER BY ((v0.c2 IN ()) IN ()), CAST(((NULL) BETWEEN (v0.c2) AND (v0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((t0.c1)%(t0.c0)))) AND ((CAST(v0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((t0.c1)%(t0.c0)))) AND ((CAST(v0.c1 AS INTEGER))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((t0.c1)%(t0.c0)))) AND ((CAST(v0.c1 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) BETWEEN ((((t0.c1)%(t0.c0)))) AND ((CAST(v0.c1 AS INTEGER))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c2)) BETWEEN ((((t0.c1)%(t0.c0)))) AND ((CAST(v0.c1 AS INTEGER)))));
SELECT ALL * FROM v0, t0 WHERE (((v0.c1) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((v0.c1) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (((v0.c1) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE ((((((((('-765099773')AND((((v0.c1, v0.c0, x'1f49'))!=((v0.c2, v0.c2, v0.c0))))))OR(((v0.c0)<<('')))))AND(CASE WHEN v0.c2 THEN x'27ff' ELSE v0.c0 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((('-765099773')AND((((v0.c1, v0.c0, x'1f49'))<>((v0.c2, v0.c2, v0.c0))))))OR(((v0.c0)<<('')))))AND(CASE WHEN v0.c2 THEN x'27ff' ELSE v0.c0 END)))AND(NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((('-765099773')AND((((v0.c1, v0.c0, x'1f49'))!=((v0.c2, v0.c2, v0.c0))))))OR(((v0.c0)<<('')))))AND(CASE WHEN v0.c2 THEN x'27ff' ELSE v0.c0 END)))AND(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((('-765099773')AND((((v0.c1, v0.c0, x'1f49'))<>((v0.c2, v0.c2, v0.c0))))))OR(((v0.c0)<<('')))))AND(CASE WHEN v0.c2 THEN x'27ff' ELSE v0.c0 END)))AND(NULL))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((('-765099773')AND((((v0.c1, v0.c0, x'1f49'))!=((v0.c2, v0.c2, v0.c0))))))OR(((v0.c0)<<('')))))AND(CASE WHEN v0.c2 THEN x'27ff' ELSE v0.c0 END)))AND(NULL)));
SELECT * FROM v0, t0 WHERE (((CASE t0.c0  WHEN v0.c2 THEN t0.c0 END) IS TRUE)) ORDER BY ((((t0.c1)||(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN v0.c2 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1)||(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((CASE t0.c0  WHEN v0.c2 THEN t0.c0 END) IS TRUE)) ORDER BY ((((t0.c1)||(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN v0.c2 THEN t0.c0 END) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY ((((t0.c1)||(v0.c0))) ISNULL) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((CASE t0.c0  WHEN v0.c2 THEN t0.c0 END) IS TRUE)) ORDER BY ((((t0.c1)||(v0.c0))) ISNULL) DESC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (ROUND((v0.c0 IN ()), ((v0.c1) ISNULL))) ORDER BY ((((CASE t0.c2  WHEN t0.c2 THEN v0.c1 ELSE v0.c2 END)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((('-1178206709')) BETWEEN ((v0.c0)) AND ((t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND((v0.c0 IN ()), ((v0.c1) ISNULL))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE t0.c2  WHEN t0.c2 THEN v0.c1 ELSE v0.c2 END)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((('-1178206709')) BETWEEN ((v0.c0)) AND ((t0.c2))))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (ROUND((v0.c0 IN ()), ((v0.c1) ISNULL))) ORDER BY ((((CASE t0.c2  WHEN t0.c2 THEN v0.c1 ELSE v0.c2 END)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((('-1178206709')) BETWEEN ((v0.c0)) AND ((t0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((ROUND((v0.c0 IN ()), ((v0.c1) ISNULL))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((CASE t0.c2  WHEN t0.c2 THEN v0.c1 ELSE v0.c2 END)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((('-1178206709')) BETWEEN ((v0.c0)) AND ((t0.c2))))) DESC  NULLS LAST);
SELECT * FROM v0, t0 WHERE (ROUND((v0.c0 IN ()), ((v0.c1) ISNULL))) ORDER BY ((((CASE t0.c2  WHEN t0.c2 THEN v0.c1 ELSE v0.c2 END)OR(CASE WHEN t0.c2 THEN t0.c1 END)))AND(((('-1178206709')) BETWEEN ((v0.c0)) AND ((t0.c2))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (PRINTF(t0.c2) COLLATE NOCASE) ORDER BY ((((((v0.c1)OR(v0.c1)))OR(t0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(t0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c1)OR(v0.c1)))OR(t0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (PRINTF(t0.c2) COLLATE NOCASE) ORDER BY ((((((v0.c1)OR(v0.c1)))OR(t0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(t0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((v0.c1)OR(v0.c1)))OR(t0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (PRINTF(t0.c2) COLLATE NOCASE) ORDER BY ((((((v0.c1)OR(v0.c1)))OR(t0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN LIKELY(v0.c2) END) ORDER BY NULL DESC  NULLS LAST, 0X46f49d2 ASC  NULLS LAST, CASE WHEN (- (v0.c0)) THEN (~ (v0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN (+ (v0.c1)) WHEN (- (v0.c2)) THEN (+ (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN LIKELY(v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY NULL DESC  NULLS LAST, 0x46f49d2 ASC  NULLS LAST, CASE WHEN (- (v0.c0)) THEN (~ (v0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN (+ (v0.c1)) WHEN (- (v0.c2)) THEN (+ (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c1 THEN LIKELY(v0.c2) END) ORDER BY NULL DESC  NULLS LAST, 0X46f49d2 ASC  NULLS LAST, CASE WHEN (- (v0.c0)) THEN (~ (v0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN (+ (v0.c1)) WHEN (- (v0.c2)) THEN (+ (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c1 THEN LIKELY(v0.c2) END) IS TRUE)  as count FROM v0 ORDER BY NULL DESC  NULLS LAST, 0x46f49d2 ASC  NULLS LAST, CASE WHEN (- (v0.c0)) THEN (~ (v0.c1)) WHEN CAST(v0.c1 AS INTEGER) THEN (+ (v0.c1)) WHEN (- (v0.c2)) THEN (+ (v0.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)) ORDER BY ((CAST(v0.c0 AS NUMERIC))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)) ORDER BY ((CAST(v0.c0 AS NUMERIC))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS NUMERIC))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (SQLITE_COMPILEOPTION_GET(CASE v0.c1  WHEN v0.c1 THEN v0.c1 END)) ORDER BY ((CAST(v0.c0 AS NUMERIC))IS(v0.c0 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2 IN ())) NOT NULL));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((x'' IN ()))<<(((t0.c1)<=(v0.c2)))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((x'' IN ()))<<(((t0.c1)<=(v0.c2)))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((x'' IN ()))<<(((t0.c1)<=(v0.c2)))) WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON (((x'' IN ()))<<(((t0.c1)<=(v0.c2)))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON (((x'' IN ()))<<(((t0.c1)<=(v0.c2)))) WHERE (t0.c1);
SELECT * FROM t0 INNER JOIN v0 ON CASE WHEN NULL THEN ((v0.c2) NOT BETWEEN ('-631353171') AND (v0.c2)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE WHEN NULL THEN ((v0.c2) NOT BETWEEN ('-631353171') AND (v0.c2)) END);
SELECT * FROM t0 INNER JOIN v0 ON CASE WHEN NULL THEN ((v0.c2) NOT BETWEEN ('-631353171') AND (v0.c2)) END WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CASE WHEN NULL THEN ((v0.c2) NOT BETWEEN ('-631353171') AND (v0.c2)) END);
SELECT * FROM t0 INNER JOIN v0 ON CASE WHEN NULL THEN ((v0.c2) NOT BETWEEN ('-631353171') AND (v0.c2)) END WHERE (t0.c0);
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((CAST(t0.c2 AS INTEGER)) IS FALSE) WHERE (((MAX(v0.c1, t0.c1)) IS FALSE)) ORDER BY (((v0.c2 IN ()))<=(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((MAX(v0.c1, t0.c1)) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((CAST(t0.c2 AS INTEGER)) IS FALSE) ORDER BY (((v0.c2 IN ()))<=(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((CAST(t0.c2 AS INTEGER)) IS FALSE) WHERE (((MAX(v0.c1, t0.c1)) IS FALSE)) ORDER BY (((v0.c2 IN ()))<=(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((MAX(v0.c1, t0.c1)) IS FALSE)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((CAST(t0.c2 AS INTEGER)) IS FALSE) ORDER BY (((v0.c2 IN ()))<=(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON ((CAST(t0.c2 AS INTEGER)) IS FALSE) WHERE (((MAX(v0.c1, t0.c1)) IS FALSE)) ORDER BY (((v0.c2 IN ()))<=(v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT * FROM t0 INNER JOIN v0 ON ((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 END)OR(',0')))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))) WHERE (v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 END)OR(',0')))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 END)OR(',0')))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))) WHERE (v0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c1 COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 END)OR(',0')))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))));
SELECT * FROM t0 INNER JOIN v0 ON ((((CASE v0.c0  WHEN t0.c0 THEN t0.c2 END)OR(',0')))OR(((((v0.c1)OR(v0.c1)))AND(v0.c0)))) WHERE (v0.c1 COLLATE NOCASE);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c2 IN ()))IS((v0.c0 IN ())))) ORDER BY (((((v0.c2) IS FALSE)))>((((v0.c0)>(v0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))IS((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) IS FALSE)))>((((v0.c0)>(v0.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c2 IN ()))IS((v0.c0 IN ())))) ORDER BY (((((v0.c2) IS FALSE)))>((((v0.c0)>(v0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2 IN ()))IS((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2) IS FALSE)))>((((v0.c0)>(v0.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 NOT INDEXED WHERE ((((v0.c2 IN ()))IS((v0.c0 IN ())))) ORDER BY (((((v0.c2) IS FALSE)))>((((v0.c0)>(v0.c2))))) DESC  NULLS FIRST;
SELECT * FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1) IS FALSE))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c1) IS FALSE))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, t0 ORDER BY '' DESC);
SELECT * FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1) IS FALSE))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((v0.c1) IS FALSE))) AND ((CAST(v0.c0 AS TEXT))))) IS TRUE)  as count FROM v0, t0 ORDER BY '' DESC);
SELECT * FROM v0, t0 WHERE ((((v0.c0)) BETWEEN ((((v0.c1) IS FALSE))) AND ((CAST(v0.c0 AS TEXT))))) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c2) IS TRUE)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c2) IS TRUE)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c2))) NOT BETWEEN (TOTAL_CHANGES()) AND (((v0.c2) IS TRUE)))) ORDER BY x''  NULLS FIRST;
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((((v0.c2)||(t0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR(HEX(DISTINCT v0.c0))) WHERE ('4cì¯]|â®Ecê') ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN v0.c1 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)GLOB(((((t0.c1)AND(v0.c2)))OR(NULL))));
SELECT SUM(count) FROM (SELECT (('4cì¯]|â®Ecê') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((v0.c2)||(t0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR(HEX(DISTINCT v0.c0))) ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN v0.c1 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)GLOB(((((t0.c1)AND(v0.c2)))OR(NULL)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((((v0.c2)||(t0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR(HEX(DISTINCT v0.c0))) WHERE ('4cì¯]|â®Ecê') ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN v0.c1 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)GLOB(((((t0.c1)AND(v0.c2)))OR(NULL))));
SELECT SUM(count) FROM (SELECT (('4cì¯]|â®Ecê') IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON ((((((v0.c2)||(t0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR(HEX(DISTINCT v0.c0))) ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN v0.c1 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)GLOB(((((t0.c1)AND(v0.c2)))OR(NULL)))));
SELECT ALL * FROM t0 LEFT OUTER JOIN v0 ON ((((((v0.c2)||(t0.c2)))OR(((v0.c1) NOT BETWEEN (v0.c2) AND (t0.c0)))))OR(HEX(DISTINCT v0.c0))) WHERE ('4cì¯]|â®Ecê') ORDER BY ((CASE t0.c0  WHEN t0.c1 THEN v0.c1 WHEN v0.c0 THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)GLOB(((((t0.c1)AND(v0.c2)))OR(NULL))));
SELECT * FROM t0, v0 WHERE (((((((v0.c2)OR(t0.c2)))AND(v0.c0)))GLOB(json_quote(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(t0.c2)))AND(v0.c0)))GLOB(json_quote(v0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((v0.c2)OR(t0.c2)))AND(v0.c0)))GLOB(json_quote(v0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c2)OR(t0.c2)))AND(v0.c0)))GLOB(json_quote(v0.c2)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((v0.c2)OR(t0.c2)))AND(v0.c0)))GLOB(json_quote(v0.c2))));
SELECT * FROM v0 WHERE (((((v0.c1)/('-1160572711'))) ISNULL)) ORDER BY (((((v0.c0 IN ()))AND(x'')))AND(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)/('-1160572711'))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(x'')))AND(CAST(v0.c1 AS REAL))));
SELECT * FROM v0 WHERE (((((v0.c1)/('-1160572711'))) ISNULL)) ORDER BY (((((v0.c0 IN ()))AND(x'')))AND(CAST(v0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)/('-1160572711'))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0 IN ()))AND(x'')))AND(CAST(v0.c1 AS REAL))));
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (v0.c1)) COLLATE RTRIM) ORDER BY (((t0.c1) ISNULL) IN (((v0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c1) ISNULL) IN (((v0.c1) IS FALSE))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (v0.c1)) COLLATE RTRIM) ORDER BY (((t0.c1) ISNULL) IN (((v0.c1) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT (((+ (v0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c1) ISNULL) IN (((v0.c1) IS FALSE))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (v0.c1)) COLLATE RTRIM) ORDER BY (((t0.c1) ISNULL) IN (((v0.c1) IS FALSE))) ASC;
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((v0.c2)-(v0.c1)) COLLATE RTRIM  NULLS LAST, (((v0.c1) ISNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)-(v0.c1)) COLLATE RTRIM  NULLS LAST, (((v0.c1) ISNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((v0.c2)-(v0.c1)) COLLATE RTRIM  NULLS LAST, (((v0.c1) ISNULL) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)-(v0.c1)) COLLATE RTRIM  NULLS LAST, (((v0.c1) ISNULL) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c2) IS FALSE) COLLATE BINARY) ORDER BY ((v0.c2)-(v0.c1)) COLLATE RTRIM  NULLS LAST, (((v0.c1) ISNULL) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN DATE(v0.c1, v0.c0, v0.c1) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((v0.c1)/(v0.c1)) THEN -2013292050 WHEN v0.c1 THEN (NOT (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN DATE(v0.c1, v0.c0, v0.c1) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((v0.c1)/(v0.c1)) THEN -2013292050 WHEN v0.c1 THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN DATE(v0.c1, v0.c0, v0.c1) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((v0.c1)/(v0.c1)) THEN -2013292050 WHEN v0.c1 THEN (NOT (v0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN DATE(v0.c1, v0.c0, v0.c1) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((v0.c1)/(v0.c1)) THEN -2013292050 WHEN v0.c1 THEN (NOT (v0.c2)) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN DATE(v0.c1, v0.c0, v0.c1) THEN CASE WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c1 ELSE v0.c1 END WHEN ((v0.c1)/(v0.c1)) THEN -2013292050 WHEN v0.c1 THEN (NOT (v0.c2)) END);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1) NOT BETWEEN ('-868504325') AND (v0.c1))))<>((IFNULL(DISTINCT v0.c2, v0.c1))))) ORDER BY (- (((x'')LIKE(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1) NOT BETWEEN ('-868504325') AND (v0.c1))))<>((IFNULL(DISTINCT v0.c2, v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (- (((x'')LIKE(v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1) NOT BETWEEN ('-868504325') AND (v0.c1))))<>((IFNULL(DISTINCT v0.c2, v0.c1))))) ORDER BY (- (((x'')LIKE(v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1) NOT BETWEEN ('-868504325') AND (v0.c1))))<>((IFNULL(DISTINCT v0.c2, v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (- (((x'')LIKE(v0.c1)))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1) NOT BETWEEN ('-868504325') AND (v0.c1))))<>((IFNULL(DISTINCT v0.c2, v0.c1))))) ORDER BY (- (((x'')LIKE(v0.c1)))) ASC;
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0)AND(v0.c0)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(v0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0)AND(v0.c0)))OR(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)AND(v0.c0)))OR(t0.c2)) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((((((t0.c0)AND(v0.c0)))OR(t0.c2)) IN ()));
SELECT * FROM t0, v0 WHERE (((CASE WHEN v0.c1 THEN t0.c2 END)/(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN t0.c2 END)/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((CASE WHEN v0.c1 THEN t0.c2 END)/(CAST(t0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c1 THEN t0.c2 END)/(CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((CASE WHEN v0.c1 THEN t0.c2 END)/(CAST(t0.c0 AS REAL))));
SELECT * FROM t0, v0 WHERE (0.02306521536847239);
SELECT SUM(count) FROM (SELECT ((0.02306521536847239) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (0.02306521536847239);
SELECT SUM(count) FROM (SELECT ((0.02306521536847239) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (0.02306521536847239);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(v0.c1)))-(t0.c0 COLLATE BINARY))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c1)))-(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(v0.c1)))-(t0.c0 COLLATE BINARY))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)%(v0.c1)))-(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c0)%(v0.c1)))-(t0.c0 COLLATE BINARY))) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c2 COLLATE BINARY)OR(LOWER(DISTINCT v0.c2))))OR(CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE v0.c2 END)) WHERE ((((t0.c2)) NOT BETWEEN (((((v0.c1))>=((v0.c1))))) AND ((CASE v0.c2  WHEN v0.c0 THEN '465529109' ELSE v0.c2 END)))) ORDER BY ((v0.c2) NOTNULL), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((((v0.c1))>=((v0.c1))))) AND ((CASE v0.c2  WHEN v0.c0 THEN '465529109' ELSE v0.c2 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c2 COLLATE BINARY)OR(LOWER(DISTINCT v0.c2))))OR(CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE v0.c2 END)) ORDER BY ((v0.c2) NOTNULL), NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c2 COLLATE BINARY)OR(LOWER(DISTINCT v0.c2))))OR(CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE v0.c2 END)) WHERE ((((t0.c2)) NOT BETWEEN (((((v0.c1))>=((v0.c1))))) AND ((CASE v0.c2  WHEN v0.c0 THEN '465529109' ELSE v0.c2 END)))) ORDER BY ((v0.c2) NOTNULL), NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((((v0.c1))>=((v0.c1))))) AND ((CASE v0.c2  WHEN v0.c0 THEN '465529109' ELSE v0.c2 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c2 COLLATE BINARY)OR(LOWER(DISTINCT v0.c2))))OR(CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE v0.c2 END)) ORDER BY ((v0.c2) NOTNULL), NULL  NULLS FIRST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c2 COLLATE BINARY)OR(LOWER(DISTINCT v0.c2))))OR(CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE v0.c2 END)) WHERE ((((t0.c2)) NOT BETWEEN (((((v0.c1))>=((v0.c1))))) AND ((CASE v0.c2  WHEN v0.c0 THEN '465529109' ELSE v0.c2 END)))) ORDER BY ((v0.c2) NOTNULL), NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((t0.c1)AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((t0.c1)AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((t0.c1)AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (((t0.c1)AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((x'' IN (((t0.c1)AND(t0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (((v0.c0, v0.c0, v0.c1, v0.c2, 0x4aa7edb5)) BETWEEN ((v0.c2, v0.c0, v0.c1, v0.c0, 0xffffffff9be9954f)) AND ((v0.c1, v0.c0, v0.c0, v0.c0, v0.c2))), 0.0517300719101188)) ORDER BY (+ (v0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN v0.c1 THEN 0.7071576501956095 WHEN (- (v0.c2)) THEN (v0.c0 IN ()) ELSE ((v0.c1)-(v0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((v0.c0, v0.c0, v0.c1, v0.c2, 0X4aa7edb5)) BETWEEN ((v0.c2, v0.c0, v0.c1, v0.c0, 0xffffffff9be9954f)) AND ((v0.c1, v0.c0, v0.c0, v0.c0, v0.c2))), 0.0517300719101188)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN v0.c1 THEN 0.7071576501956095 WHEN (- (v0.c2)) THEN (v0.c0 IN ()) ELSE ((v0.c1)-(v0.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (((v0.c0, v0.c0, v0.c1, v0.c2, 0x4aa7edb5)) BETWEEN ((v0.c2, v0.c0, v0.c1, v0.c0, 0xffffffff9be9954f)) AND ((v0.c1, v0.c0, v0.c0, v0.c0, v0.c2))), 0.0517300719101188)) ORDER BY (+ (v0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN v0.c1 THEN 0.7071576501956095 WHEN (- (v0.c2)) THEN (v0.c0 IN ()) ELSE ((v0.c1)-(v0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((v0.c0, v0.c0, v0.c1, v0.c2, 0X4aa7edb5)) BETWEEN ((v0.c2, v0.c0, v0.c1, v0.c0, 0xffffffff9be9954f)) AND ((v0.c1, v0.c0, v0.c0, v0.c0, v0.c2))), 0.0517300719101188)) IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN v0.c1 THEN 0.7071576501956095 WHEN (- (v0.c2)) THEN (v0.c0 IN ()) ELSE ((v0.c1)-(v0.c2)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT (((v0.c0, v0.c0, v0.c1, v0.c2, 0x4aa7edb5)) BETWEEN ((v0.c2, v0.c0, v0.c1, v0.c0, 0xffffffff9be9954f)) AND ((v0.c1, v0.c0, v0.c0, v0.c0, v0.c2))), 0.0517300719101188)) ORDER BY (+ (v0.c2 COLLATE NOCASE)) DESC  NULLS FIRST, CASE ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))  WHEN v0.c0 COLLATE NOCASE THEN x'' WHEN v0.c1 THEN 0.7071576501956095 WHEN (- (v0.c2)) THEN (v0.c0 IN ()) ELSE ((v0.c1)-(v0.c2)) END DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (x'')) THEN (v0.c0 IN ()) ELSE v0.c2 END) ORDER BY (((v0.c0 IN (v0.c1)))<(((v0.c0)<<(v0.c1)))) DESC  NULLS LAST, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(x''))) NOT BETWEEN (CAST(' ,\' AS REAL)) AND (((v0.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (x'')) THEN (v0.c0 IN ()) ELSE v0.c2 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c1)))<(((v0.c0)<<(v0.c1)))) DESC  NULLS LAST, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(x''))) NOT BETWEEN (CAST(' ,\' AS REAL)) AND (((v0.c0) IS FALSE))) DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (x'')) THEN (v0.c0 IN ()) ELSE v0.c2 END) ORDER BY (((v0.c0 IN (v0.c1)))<(((v0.c0)<<(v0.c1)))) DESC  NULLS LAST, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(x''))) NOT BETWEEN (CAST(' ,\' AS REAL)) AND (((v0.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (x'')) THEN (v0.c0 IN ()) ELSE v0.c2 END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c1)))<(((v0.c0)<<(v0.c1)))) DESC  NULLS LAST, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(x''))) NOT BETWEEN (CAST(' ,\' AS REAL)) AND (((v0.c0) IS FALSE))) DESC);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c1) AND (x'')) THEN (v0.c0 IN ()) ELSE v0.c2 END) ORDER BY (((v0.c0 IN (v0.c1)))<(((v0.c0)<<(v0.c1)))) DESC  NULLS LAST, ((((((((((v0.c0)OR(v0.c2)))OR(v0.c1)))AND(v0.c2)))OR(x''))) NOT BETWEEN (CAST(' ,\' AS REAL)) AND (((v0.c0) IS FALSE))) DESC;
SELECT * FROM v0 WHERE (CASE WHEN 0.22525048384971036 THEN ((v0.c2) IS TRUE) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) END) ORDER BY (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (x''))  NULLS LAST, ((((0.30338211489257405)AND((('172879691')>>(v0.c2)))))AND(v0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.22525048384971036 THEN ((v0.c2) IS TRUE) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (x''))  NULLS LAST, ((((0.30338211489257405)AND((('172879691')>>(v0.c2)))))AND(v0.c2 COLLATE NOCASE)) ASC);
SELECT * FROM v0 WHERE (CASE WHEN 0.22525048384971036 THEN ((v0.c2) IS TRUE) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) END) ORDER BY (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (x''))  NULLS LAST, ((((0.30338211489257405)AND((('172879691')>>(v0.c2)))))AND(v0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.22525048384971036 THEN ((v0.c2) IS TRUE) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (x''))  NULLS LAST, ((((0.30338211489257405)AND((('172879691')>>(v0.c2)))))AND(v0.c2 COLLATE NOCASE)) ASC);
SELECT * FROM v0 WHERE (CASE WHEN 0.22525048384971036 THEN ((v0.c2) IS TRUE) ELSE ((v0.c2) BETWEEN (v0.c0) AND (v0.c2)) END) ORDER BY (((v0.c0) BETWEEN (v0.c1) AND (v0.c1)) IN (x''))  NULLS LAST, ((((0.30338211489257405)AND((('172879691')>>(v0.c2)))))AND(v0.c2 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('-958962991', t0.c1, v0.c2)) BETWEEN ((IFNULL(DISTINCT t0.c1, v0.c2), ((((((((v0.c2)OR(v0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)), (v0.c1 IN ()))) AND (((~ (v0.c1)), t0.c1, ((t0.c2)=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-958962991', t0.c1, v0.c2)) BETWEEN ((IFNULL(DISTINCT t0.c1, v0.c2), ((((((((v0.c2)OR(v0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)), (v0.c1 IN ()))) AND (((~ (v0.c1)), t0.c1, ((t0.c2)==(v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('-958962991', t0.c1, v0.c2)) BETWEEN ((IFNULL(DISTINCT t0.c1, v0.c2), ((((((((v0.c2)OR(v0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)), (v0.c1 IN ()))) AND (((~ (v0.c1)), t0.c1, ((t0.c2)=(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((('-958962991', t0.c1, v0.c2)) BETWEEN ((IFNULL(DISTINCT t0.c1, v0.c2), ((((((((v0.c2)OR(v0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)), (v0.c1 IN ()))) AND (((~ (v0.c1)), t0.c1, ((t0.c2)==(v0.c0)))))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('-958962991', t0.c1, v0.c2)) BETWEEN ((IFNULL(DISTINCT t0.c1, v0.c2), ((((((((v0.c2)OR(v0.c2)))OR(t0.c0)))AND(t0.c1)))AND(t0.c0)), (v0.c1 IN ()))) AND (((~ (v0.c1)), t0.c1, ((t0.c2)=(v0.c0))))));
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((v0.c2)-(v0.c0)))/(NULL))  NULLS FIRST, (((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) AND ((v0.c2, v0.c2, v0.c1, v0.c2, v0.c1)))) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c1 AS BLOB))) ASC, (NOT (((v0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c0)))/(NULL))  NULLS FIRST, (((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) AND ((v0.c2, v0.c2, v0.c1, v0.c2, v0.c1)))) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c1 AS BLOB))) ASC, (NOT (((v0.c1) IS FALSE))));
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((v0.c2)-(v0.c0)))/(NULL))  NULLS FIRST, (((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) AND ((v0.c2, v0.c2, v0.c1, v0.c2, v0.c1)))) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c1 AS BLOB))) ASC, (NOT (((v0.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c2)-(v0.c0)))/(NULL))  NULLS FIRST, (((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) AND ((v0.c2, v0.c2, v0.c1, v0.c2, v0.c1)))) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c1 AS BLOB))) ASC, (NOT (((v0.c1) IS FALSE))));
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((v0.c2)-(v0.c0)))/(NULL))  NULLS FIRST, (((((v0.c2, v0.c0, v0.c2, v0.c2, v0.c0)) BETWEEN ((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) AND ((v0.c2, v0.c2, v0.c1, v0.c2, v0.c1)))) BETWEEN ((v0.c0 IN ())) AND (CAST(v0.c1 AS BLOB))) ASC, (NOT (((v0.c1) IS FALSE)));
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2)) BETWEEN (((~ (t0.c0)), TIME(t0.c0, t0.c1, t0.c2, t0.c0, t0.c1), CASE t0.c1  WHEN t0.c2 THEN t0.c0 END)) AND ((((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c1))<((t0.c2, NULL, t0.c1))))))) ORDER BY ((LOWER(t0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c2)) BETWEEN (((~ (t0.c0)), TIME(t0.c0, t0.c1, t0.c2, t0.c0, t0.c1), CASE t0.c1  WHEN t0.c2 THEN t0.c0 END)) AND ((((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c1))<((t0.c2, NULL, t0.c1))))))) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c2)) ISNULL) ASC);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2)) BETWEEN (((~ (t0.c0)), TIME(t0.c0, t0.c1, t0.c2, t0.c0, t0.c1), CASE t0.c1  WHEN t0.c2 THEN t0.c0 END)) AND ((((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c1))<((t0.c2, NULL, t0.c1))))))) ORDER BY ((LOWER(t0.c2)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c2, t0.c2)) BETWEEN (((~ (t0.c0)), TIME(t0.c0, t0.c1, t0.c2, t0.c0, t0.c1), CASE t0.c1  WHEN t0.c2 THEN t0.c0 END)) AND ((((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c1))<((t0.c2, NULL, t0.c1))))))) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c2)) ISNULL) ASC);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c2, t0.c2)) BETWEEN (((~ (t0.c0)), TIME(t0.c0, t0.c1, t0.c2, t0.c0, t0.c1), CASE t0.c1  WHEN t0.c2 THEN t0.c0 END)) AND ((((((((((t0.c2)OR(t0.c0)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)), (((t0.c0, t0.c0, t0.c1))<((t0.c2, NULL, t0.c1))))))) ORDER BY ((LOWER(t0.c2)) ISNULL) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) AND (LIKELY(DISTINCT x'')))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))OR(x'9de9db2d' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) AND (LIKELY(DISTINCT x'')))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))OR(x'9de9db2d' COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) AND (LIKELY(DISTINCT x'')))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))OR(x'9de9db2d' COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) AND (LIKELY(DISTINCT x'')))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))OR(x'9de9db2d' COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 END) BETWEEN (CASE t0.c2  WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END) AND (LIKELY(DISTINCT x'')))) ORDER BY ((((((t0.c0)AND(t0.c0)))AND(CASE t0.c2  WHEN t0.c1 THEN t0.c0 END)))OR(x'9de9db2d' COLLATE RTRIM)) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((('1015261430', t0.c0, t0.c1)) NOT BETWEEN ((DATE(t0.c1, t0.c1, t0.c0), ((t0.c0) NOTNULL), CAST(t0.c1 AS TEXT))) AND ((0.02663467353779314, ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)), (t0.c1 IN (t0.c0)))))) ORDER BY ((NULL) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((('1015261430', t0.c0, t0.c1)) NOT BETWEEN ((DATE(t0.c1, t0.c1, t0.c0), ((t0.c0) NOTNULL), CAST(t0.c1 AS TEXT))) AND ((0.02663467353779314, ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)), (t0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((('1015261430', t0.c0, t0.c1)) NOT BETWEEN ((DATE(t0.c1, t0.c1, t0.c0), ((t0.c0) NOTNULL), CAST(t0.c1 AS TEXT))) AND ((0.02663467353779314, ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)), (t0.c1 IN (t0.c0)))))) ORDER BY ((NULL) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((((('1015261430', t0.c0, t0.c1)) NOT BETWEEN ((DATE(t0.c1, t0.c1, t0.c0), ((t0.c0) NOTNULL), CAST(t0.c1 AS TEXT))) AND ((0.02663467353779314, ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)), (t0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((NULL) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((('1015261430', t0.c0, t0.c1)) NOT BETWEEN ((DATE(t0.c1, t0.c1, t0.c0), ((t0.c0) NOTNULL), CAST(t0.c1 AS TEXT))) AND ((0.02663467353779314, ((((((((t0.c0)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))AND(t0.c0)), (t0.c1 IN (t0.c0)))))) ORDER BY ((NULL) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) AND (((t0.c0) IS FALSE)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((IFNULL(v0.c0, v0.c2)))>((t0.c2))) WHERE (((0.9303056139135767 COLLATE RTRIM) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (CAST(t0.c0 AS REAL)))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c2, t0.c2) THEN (+ (v0.c2)) WHEN 0.1862125549234932 THEN ((('T W%TK', 'FH', t0.c0))<>((t0.c0, t0.c2, v0.c0))) WHEN ((t0.c2)AND(t0.c2)) THEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) END DESC, ((((((v0.c1)OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((('-1492690139')/(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9303056139135767 COLLATE RTRIM) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((IFNULL(v0.c0, v0.c2)))>((t0.c2))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c2, t0.c2) THEN (+ (v0.c2)) WHEN 0.1862125549234932 THEN ((('T W%TK', 'FH', t0.c0))<>((t0.c0, t0.c2, v0.c0))) WHEN ((t0.c2)AND(t0.c2)) THEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) END DESC, ((((((v0.c1)OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((('-1492690139')/(t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((IFNULL(v0.c0, v0.c2)))>((t0.c2))) WHERE (((0.9303056139135767 COLLATE RTRIM) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (CAST(t0.c0 AS REAL)))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c2, t0.c2) THEN (+ (v0.c2)) WHEN 0.1862125549234932 THEN ((('T W%TK', 'FH', t0.c0))<>((t0.c0, t0.c2, v0.c0))) WHEN ((t0.c2)AND(t0.c2)) THEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) END DESC, ((((((v0.c1)OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((('-1492690139')/(t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.9303056139135767 COLLATE RTRIM) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((IFNULL(v0.c0, v0.c2)))>((t0.c2))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c2, t0.c2) THEN (+ (v0.c2)) WHEN 0.1862125549234932 THEN ((('T W%TK', 'FH', t0.c0))<>((t0.c0, t0.c2, v0.c0))) WHEN ((t0.c2)AND(t0.c2)) THEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) END DESC, ((((((v0.c1)OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((('-1492690139')/(t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON (((IFNULL(v0.c0, v0.c2)))>((t0.c2))) WHERE (((0.9303056139135767 COLLATE RTRIM) NOT BETWEEN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c1))) AND (CAST(t0.c0 AS REAL)))) ORDER BY CASE WHEN COALESCE(DISTINCT t0.c2, t0.c2) THEN (+ (v0.c2)) WHEN 0.1862125549234932 THEN ((('T W%TK', 'FH', t0.c0))<>((t0.c0, t0.c2, v0.c0))) WHEN ((t0.c2)AND(t0.c2)) THEN ((((v0.c1)AND(v0.c1)))AND(v0.c2)) END DESC, ((((((v0.c1)OR(v0.c2)))AND(t0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((('-1492690139')/(t0.c2))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c1))!=((t0.c0))) THEN (~ (v0.c2)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1))<>((t0.c0))) THEN (~ (v0.c2)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c1))!=((t0.c0))) THEN (~ (v0.c2)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((t0.c1))<>((t0.c0))) THEN (~ (v0.c2)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (((t0.c1))!=((t0.c0))) THEN (~ (v0.c2)) ELSE ((v0.c2) BETWEEN (v0.c0) AND (t0.c2)) END);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c1)GLOB(v0.c2)) COLLATE BINARY WHERE ((0.4717970308244568 IN ())) ORDER BY (t0.c1 IN (t0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((0.4717970308244568 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c1)GLOB(v0.c2)) COLLATE BINARY ORDER BY (t0.c1 IN (t0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c1)GLOB(v0.c2)) COLLATE BINARY WHERE ((0.4717970308244568 IN ())) ORDER BY (t0.c1 IN (t0.c2)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((0.4717970308244568 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON ((t0.c1)GLOB(v0.c2)) COLLATE BINARY ORDER BY (t0.c1 IN (t0.c2)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON ((t0.c1)GLOB(v0.c2)) COLLATE BINARY WHERE ((0.4717970308244568 IN ())) ORDER BY (t0.c1 IN (t0.c2)) COLLATE RTRIM ASC;
SELECT ALL * FROM v0 WHERE (((((v0.c1 COLLATE BINARY)AND(v0.c0 COLLATE NOCASE)))AND(0.31269163297744584)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 COLLATE BINARY)AND(v0.c0 COLLATE NOCASE)))AND(0.31269163297744584))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1 COLLATE BINARY)AND(v0.c0 COLLATE NOCASE)))AND(0.31269163297744584)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1 COLLATE BINARY)AND(v0.c0 COLLATE NOCASE)))AND(0.31269163297744584))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1 COLLATE BINARY)AND(v0.c0 COLLATE NOCASE)))AND(0.31269163297744584)));
SELECT * FROM t0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (~ ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((~ (t0.c0)))));
SELECT * FROM t0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (~ ((~ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS REAL)) IS TRUE)  as count FROM t0, v0 ORDER BY (~ ((~ (t0.c0)))));
SELECT * FROM t0, v0 WHERE (CAST(v0.c1 AS REAL)) ORDER BY (~ ((~ (t0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0 IN ()))%((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))%((- (t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0 IN ()))%((- (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ()))%((- (t0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c0 IN ()))%((- (t0.c2)))));
SELECT * FROM v0 WHERE ((- ((NOT (v0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM);
SELECT * FROM v0 WHERE ((- ((NOT (v0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((- ((NOT (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM);
SELECT * FROM v0 WHERE ((- ((NOT (v0.c1))))) ORDER BY CASE WHEN v0.c2 THEN v0.c2 ELSE v0.c1 END COLLATE RTRIM;
SELECT COUNT(*) FROM v0 WHERE (((((((0Xfffffffff77efbe7)OR(v0.c1)))AND(v0.c1)))||((~ (v0.c0))))) ORDER BY (((((x'', v0.c1, v0.c1))>=((v0.c0, v0.c2, v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS FIRST, (- (((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xfffffffff77efbe7)OR(v0.c1)))AND(v0.c1)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((x'', v0.c1, v0.c1))>=((v0.c0, v0.c2, v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS FIRST, (- (((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((0Xfffffffff77efbe7)OR(v0.c1)))AND(v0.c1)))||((~ (v0.c0))))) ORDER BY (((((x'', v0.c1, v0.c1))>=((v0.c0, v0.c2, v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS FIRST, (- (((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((0xfffffffff77efbe7)OR(v0.c1)))AND(v0.c1)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((x'', v0.c1, v0.c1))>=((v0.c0, v0.c2, v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS FIRST, (- (((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((((0Xfffffffff77efbe7)OR(v0.c1)))AND(v0.c1)))||((~ (v0.c0))))) ORDER BY (((((x'', v0.c1, v0.c1))>=((v0.c0, v0.c2, v0.c0))))AND(CAST(v0.c0 AS TEXT)))  NULLS FIRST, (- (((((((((v0.c0)OR(v0.c1)))AND(v0.c2)))OR(v0.c0)))OR(v0.c2))))  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (CASE ((v0.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN ((((((((t0.c2)AND(v0.c2)))AND(v0.c2)))AND(x'ac96eb2f')))OR(t0.c1)) THEN ((t0.c1)*(t0.c1)) WHEN NULL THEN TOTAL_CHANGES() WHEN ((v0.c1) BETWEEN (t0.c2) AND (v0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN ((((((((t0.c2)AND(v0.c2)))AND(v0.c2)))AND(x'ac96eb2f')))OR(t0.c1)) THEN ((t0.c1)*(t0.c1)) WHEN NULL THEN TOTAL_CHANGES() WHEN ((v0.c1) BETWEEN (t0.c2) AND (v0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE ((v0.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN ((((((((t0.c2)AND(v0.c2)))AND(v0.c2)))AND(x'ac96eb2f')))OR(t0.c1)) THEN ((t0.c1)*(t0.c1)) WHEN NULL THEN TOTAL_CHANGES() WHEN ((v0.c1) BETWEEN (t0.c2) AND (v0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN ((((((((t0.c2)AND(v0.c2)))AND(v0.c2)))AND(x'ac96eb2f')))OR(t0.c1)) THEN ((t0.c1)*(t0.c1)) WHEN NULL THEN TOTAL_CHANGES() WHEN ((v0.c1) BETWEEN (t0.c2) AND (v0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE ((v0.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN ((((((((t0.c2)AND(v0.c2)))AND(v0.c2)))AND(x'ac96eb2f')))OR(t0.c1)) THEN ((t0.c1)*(t0.c1)) WHEN NULL THEN TOTAL_CHANGES() WHEN ((v0.c1) BETWEEN (t0.c2) AND (v0.c0)) THEN CAST(t0.c0 AS BLOB) ELSE (((t0.c2)) BETWEEN ((NULL)) AND ((t0.c0))) END);
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c2)))&(CAST(t0.c1 AS BLOB)))) ORDER BY CASE (t0.c1 IN ())  WHEN t0.c2 THEN LIKELIHOOD(DISTINCT t0.c2, 0.48750052487823914) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c2)))&(CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c1 IN ())  WHEN t0.c2 THEN LIKELIHOOD(DISTINCT t0.c2, 0.48750052487823914) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c2)))&(CAST(t0.c1 AS BLOB)))) ORDER BY CASE (t0.c1 IN ())  WHEN t0.c2 THEN LIKELIHOOD(DISTINCT t0.c2, 0.48750052487823914) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)<(t0.c2)))&(CAST(t0.c1 AS BLOB)))) IS TRUE)  as count FROM t0 ORDER BY CASE (t0.c1 IN ())  WHEN t0.c2 THEN LIKELIHOOD(DISTINCT t0.c2, 0.48750052487823914) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0)<(t0.c2)))&(CAST(t0.c1 AS BLOB)))) ORDER BY CASE (t0.c1 IN ())  WHEN t0.c2 THEN LIKELIHOOD(DISTINCT t0.c2, 0.48750052487823914) ELSE ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE ((-7.4943471E8 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-7.4943471E8 IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((-7.4943471E8 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-7.4943471E8 IN ())) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((-7.4943471E8 IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1) IS TRUE) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c1) IS TRUE) IN ()));
SELECT COUNT(*) FROM v0, t0 WHERE (0.9578279930579298);
SELECT SUM(count) FROM (SELECT ((0.9578279930579298) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (0.9578279930579298);
SELECT SUM(count) FROM (SELECT ((0.9578279930579298) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (0.9578279930579298);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c1)))/(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1)))/(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c1)))/(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c1)))/(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((+ (v0.c1)))/(v0.c0)));
SELECT COUNT(*) FROM t0, v0 WHERE (((((((v0.c0))<=((t0.c1)))))!=((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<=((t0.c1)))))<>((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((v0.c0))<=((t0.c1)))))!=((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0))<=((t0.c1)))))<>((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))) IS TRUE)  as count FROM t0, v0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((v0.c0))<=((t0.c1)))))!=((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)))))) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END, (NULL IN ()), ((t0.c0) BETWEEN (0.1584803530825054) AND (t0.c1)), '+R\ê·ä·FSV'));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END, (NULL IN ()), ((t0.c0) BETWEEN (0.1584803530825054) AND (t0.c1)), '+R\ê·ä·FSV')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END, (NULL IN ()), ((t0.c0) BETWEEN (0.1584803530825054) AND (t0.c1)), '+R\ê·ä·FSV'));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END, (NULL IN ()), ((t0.c0) BETWEEN (0.1584803530825054) AND (t0.c1)), '+R\ê·ä·FSV')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (COALESCE(CASE t0.c1  WHEN t0.c0 THEN t0.c0 END, (NULL IN ()), ((t0.c0) BETWEEN (0.1584803530825054) AND (t0.c1)), '+R\ê·ä·FSV'));
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(DISTINCT (NOT (v0.c2)), TOTAL_CHANGES())) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c2)), TOTAL_CHANGES())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(DISTINCT (NOT (v0.c2)), TOTAL_CHANGES())) ORDER BY t0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (NOT (v0.c2)), TOTAL_CHANGES())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0 ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (TRIM(DISTINCT (NOT (v0.c2)), TOTAL_CHANGES())) ORDER BY t0.c0 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(CASE WHEN v0.c2 THEN v0.c0 ELSE -1.403294332E9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)-(CASE WHEN v0.c2 THEN v0.c0 ELSE -1.403294332E9 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(CASE WHEN v0.c2 THEN v0.c0 ELSE -1.403294332E9 END)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)-(CASE WHEN v0.c2 THEN v0.c0 ELSE -1.403294332E9 END))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c2 COLLATE BINARY)-(CASE WHEN v0.c2 THEN v0.c0 ELSE -1.403294332E9 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_VERSION()) ORDER BY ((LIKELIHOOD(DISTINCT 0.5398449130456581, 0.4587947731240952))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 ORDER BY ((LIKELIHOOD(DISTINCT 0.5398449130456581, 0.4587947731240952))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_VERSION()) ORDER BY ((LIKELIHOOD(DISTINCT 0.5398449130456581, 0.4587947731240952))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_VERSION()) IS TRUE)  as count FROM t0 ORDER BY ((LIKELIHOOD(DISTINCT 0.5398449130456581, 0.4587947731240952))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_VERSION()) ORDER BY ((LIKELIHOOD(DISTINCT 0.5398449130456581, 0.4587947731240952))AND(CASE t0.c1  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END)) DESC;
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (- (((x'6896e49361e2') IS FALSE))) WHERE (x'16b5');
SELECT SUM(count) FROM (SELECT ALL ((x'16b5') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (- (((x'6896e49361e2') IS FALSE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (- (((x'6896e49361e2') IS FALSE))) WHERE (x'16b5');
SELECT SUM(count) FROM (SELECT ALL ((x'16b5') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON (- (((x'6896e49361e2') IS FALSE))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN v0 ON (- (((x'6896e49361e2') IS FALSE))) WHERE (x'16b5');
SELECT ALL * FROM v0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((x'83a5', x'', v0.c0)) AND ((v0.c1, t0.c0, t0.c2))))AND(TRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((x'83a5', x'', v0.c0)) AND ((v0.c1, t0.c0, t0.c2))))AND(TRIM(v0.c0))));
SELECT ALL * FROM v0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((x'83a5', x'', v0.c0)) AND ((v0.c1, t0.c0, t0.c2))))AND(TRIM(v0.c0)));
SELECT SUM(count) FROM (SELECT ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, t0 ORDER BY (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((x'83a5', x'', v0.c0)) AND ((v0.c1, t0.c0, t0.c2))))AND(TRIM(v0.c0))));
SELECT ALL * FROM v0, t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY (((((t0.c0, t0.c1, t0.c0)) BETWEEN ((x'83a5', x'', v0.c0)) AND ((v0.c1, t0.c0, t0.c2))))AND(TRIM(v0.c0)));
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT ('')) AS TEXT)) ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c1) NOTNULL)) AND (((NULL)*(0.8493151128227158)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('')) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c1) NOTNULL)) AND (((NULL)*(0.8493151128227158)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT ('')) AS TEXT)) ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c1) NOTNULL)) AND (((NULL)*(0.8493151128227158)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((NOT ('')) AS TEXT)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c1) NOTNULL)) AND (((NULL)*(0.8493151128227158)))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((NOT ('')) AS TEXT)) ORDER BY ((t0.c0 COLLATE NOCASE) NOT BETWEEN (((t0.c1) NOTNULL)) AND (((NULL)*(0.8493151128227158)))) DESC;
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(CAST(v0.c1 AS TEXT))))OR(ABS(v0.c0)))) ORDER BY ((((0.42783999353389335)AND(((NULL)%(v0.c2)))))AND(((v0.c1) NOTNULL))) ASC, CAST(NULL AS TEXT)  NULLS LAST, v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(CAST(v0.c1 AS TEXT))))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((0.42783999353389335)AND(((NULL)%(v0.c2)))))AND(((v0.c1) NOTNULL))) ASC, CAST(NULL AS TEXT)  NULLS LAST, v0.c1);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(CAST(v0.c1 AS TEXT))))OR(ABS(v0.c0)))) ORDER BY ((((0.42783999353389335)AND(((NULL)%(v0.c2)))))AND(((v0.c1) NOTNULL))) ASC, CAST(NULL AS TEXT)  NULLS LAST, v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(CAST(v0.c1 AS TEXT))))OR(ABS(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((((0.42783999353389335)AND(((NULL)%(v0.c2)))))AND(((v0.c1) NOTNULL))) ASC, CAST(NULL AS TEXT)  NULLS LAST, v0.c1);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)AND(CAST(v0.c1 AS TEXT))))OR(ABS(v0.c0)))) ORDER BY ((((0.42783999353389335)AND(((NULL)%(v0.c2)))))AND(((v0.c1) NOTNULL))) ASC, CAST(NULL AS TEXT)  NULLS LAST, v0.c1;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((LIKELIHOOD(DISTINCT NULL, 0.5785015749172778)))<(((v0.c1 IN (v0.c2, v0.c2)))))) ORDER BY ((CAST(NULL AS BLOB))%(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(DISTINCT NULL, 0.5785015749172778)))<(((v0.c1 IN (v0.c2, v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(NULL AS BLOB))%(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((LIKELIHOOD(DISTINCT NULL, 0.5785015749172778)))<(((v0.c1 IN (v0.c2, v0.c2)))))) ORDER BY ((CAST(NULL AS BLOB))%(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((LIKELIHOOD(DISTINCT NULL, 0.5785015749172778)))<(((v0.c1 IN (v0.c2, v0.c2)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CAST(NULL AS BLOB))%(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((LIKELIHOOD(DISTINCT NULL, 0.5785015749172778)))<(((v0.c1 IN (v0.c2, v0.c2)))))) ORDER BY ((CAST(NULL AS BLOB))%(CASE WHEN t0.c2 THEN v0.c0 ELSE t0.c2 END));
SELECT ALL * FROM t0 INNER JOIN v0 ON NULL WHERE ((((- (t0.c2)))>>(v0.c0 COLLATE BINARY))) ORDER BY (+ (((v0.c1)IS NOT(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2)))>>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON NULL ORDER BY (+ (((v0.c1)IS NOT(v0.c1)))));
SELECT ALL * FROM t0 INNER JOIN v0 ON NULL WHERE ((((- (t0.c2)))>>(v0.c0 COLLATE BINARY))) ORDER BY (+ (((v0.c1)IS NOT(v0.c1))));
SELECT SUM(count) FROM (SELECT (((((- (t0.c2)))>>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON NULL ORDER BY (+ (((v0.c1)IS NOT(v0.c1)))));
SELECT ALL * FROM t0 INNER JOIN v0 ON NULL WHERE ((((- (t0.c2)))>>(v0.c0 COLLATE BINARY))) ORDER BY (+ (((v0.c1)IS NOT(v0.c1))));
SELECT ALL * FROM v0, t0 WHERE (LOWER(((((t0.c0)OR(t0.c2)))AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((t0.c0)OR(t0.c2)))AND(v0.c1)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (LOWER(((((t0.c0)OR(t0.c2)))AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((t0.c0)OR(t0.c2)))AND(v0.c1)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (LOWER(((((t0.c0)OR(t0.c2)))AND(v0.c1))));
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN (t0.c0 IN ()) THEN NULL WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN (NOT ('1517428253')) END) ORDER BY ((CASE x'dca5'  WHEN NULL THEN t0.c0 END)=(((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.21702265822108435 ELSE t0.c2 END  WHEN -1.0572503E8 THEN ((t0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN (t0.c0 IN ()) THEN NULL WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN (NOT ('1517428253')) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE x'dca5'  WHEN NULL THEN t0.c0 END)=(((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.21702265822108435 ELSE t0.c2 END  WHEN -1.0572503E8 THEN ((t0.c2) ISNULL) END);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN (t0.c0 IN ()) THEN NULL WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN (NOT ('1517428253')) END) ORDER BY ((CASE x'dca5'  WHEN NULL THEN t0.c0 END)=(((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.21702265822108435 ELSE t0.c2 END  WHEN -1.0572503E8 THEN ((t0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN (t0.c0 IN ()) THEN NULL WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN (NOT ('1517428253')) END) IS TRUE)  as count FROM t0 ORDER BY ((CASE x'dca5'  WHEN NULL THEN t0.c0 END)=(((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.21702265822108435 ELSE t0.c2 END  WHEN -1.0572503E8 THEN ((t0.c2) ISNULL) END);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c1 THEN t0.c0 WHEN (t0.c0 IN ()) THEN NULL WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c1 ELSE t0.c1 END THEN (NOT ('1517428253')) END) ORDER BY ((CASE x'dca5'  WHEN NULL THEN t0.c0 END)=(((t0.c0) IS TRUE))) ASC  NULLS FIRST, CASE CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN t0.c0 WHEN t0.c1 THEN 0.21702265822108435 ELSE t0.c2 END  WHEN -1.0572503E8 THEN ((t0.c2) ISNULL) END;
SELECT ALL COUNT(*) FROM v0 WHERE (0.6635155302809154) ORDER BY (NOT (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6635155302809154) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.6635155302809154) ORDER BY (NOT (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.6635155302809154) IS TRUE)  as count FROM v0 ORDER BY (NOT (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (0.6635155302809154) ORDER BY (NOT (CASE v0.c1  WHEN v0.c1 THEN v0.c1 END))  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c1) IS TRUE)) BETWEEN ((((t0.c0, 'r^{rä­', v0.c1))>((t0.c2, v0.c2, t0.c1)))) AND (((((((((v0.c0)AND(t0.c1)))OR(t0.c2)))AND(v0.c0)))AND(-5.31979892E8)))) WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (NULL)) WHEN ((v0.c1)IS NOT(v0.c0)) THEN CAST(t0.c2 AS BLOB) WHEN v0.c2 THEN (v0.c0 IN ()) WHEN ((t0.c1) IS FALSE) THEN ((0xffffffff8ce2b111) IS TRUE) WHEN SQLITE_SOURCE_ID() THEN json_array(v0.c0, v0.c0) END) ORDER BY (((v0.c2) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (NULL)) WHEN ((v0.c1)IS NOT(v0.c0)) THEN CAST(t0.c2 AS BLOB) WHEN v0.c2 THEN (v0.c0 IN ()) WHEN ((t0.c1) IS FALSE) THEN ((0Xffffffff8ce2b111) IS TRUE) WHEN SQLITE_SOURCE_ID() THEN json_array(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((v0.c1) IS TRUE)) BETWEEN ((((t0.c0, 'r^{rä­', v0.c1))>((t0.c2, v0.c2, t0.c1)))) AND (((((((((v0.c0)AND(t0.c1)))OR(t0.c2)))AND(v0.c0)))AND(-5.31979892E8)))) ORDER BY (((v0.c2) ISNULL) IN ()) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c1) IS TRUE)) BETWEEN ((((t0.c0, 'r^{rä­', v0.c1))>((t0.c2, v0.c2, t0.c1)))) AND (((((((((v0.c0)AND(t0.c1)))OR(t0.c2)))AND(v0.c0)))AND(-5.31979892E8)))) WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (NULL)) WHEN ((v0.c1)IS NOT(v0.c0)) THEN CAST(t0.c2 AS BLOB) WHEN v0.c2 THEN (v0.c0 IN ()) WHEN ((t0.c1) IS FALSE) THEN ((0xffffffff8ce2b111) IS TRUE) WHEN SQLITE_SOURCE_ID() THEN json_array(v0.c0, v0.c0) END) ORDER BY (((v0.c2) ISNULL) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (NULL)) WHEN ((v0.c1)IS NOT(v0.c0)) THEN CAST(t0.c2 AS BLOB) WHEN v0.c2 THEN (v0.c0 IN ()) WHEN ((t0.c1) IS FALSE) THEN ((0Xffffffff8ce2b111) IS TRUE) WHEN SQLITE_SOURCE_ID() THEN json_array(v0.c0, v0.c0) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((((v0.c1) IS TRUE)) BETWEEN ((((t0.c0, 'r^{rä­', v0.c1))>((t0.c2, v0.c2, t0.c1)))) AND (((((((((v0.c0)AND(t0.c1)))OR(t0.c2)))AND(v0.c0)))AND(-5.31979892E8)))) ORDER BY (((v0.c2) ISNULL) IN ()) ASC);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((((v0.c1) IS TRUE)) BETWEEN ((((t0.c0, 'r^{rä­', v0.c1))>((t0.c2, v0.c2, t0.c1)))) AND (((((((((v0.c0)AND(t0.c1)))OR(t0.c2)))AND(v0.c0)))AND(-5.31979892E8)))) WHERE (CASE WHEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN (NOT (NULL)) WHEN ((v0.c1)IS NOT(v0.c0)) THEN CAST(t0.c2 AS BLOB) WHEN v0.c2 THEN (v0.c0 IN ()) WHEN ((t0.c1) IS FALSE) THEN ((0xffffffff8ce2b111) IS TRUE) WHEN SQLITE_SOURCE_ID() THEN json_array(v0.c0, v0.c0) END) ORDER BY (((v0.c2) ISNULL) IN ()) ASC;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((('557082979'))=((v0.c2))), (((v0.c1, v0.c2, v0.c2))<>((v0.c1, v0.c1, v0.c2))), ((v0.c1)*(v0.c2)), (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), v0.c1)) AND ((v0.c2 COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c1) ISNULL), ((v0.c0)IS NOT(v0.c1)), ('-1779114433' IN ()))))) ORDER BY (((v0.c1 IN ())) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((('557082979'))=((v0.c2))), (((v0.c1, v0.c2, v0.c2))!=((v0.c1, v0.c1, v0.c2))), ((v0.c1)*(v0.c2)), (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), v0.c1)) AND ((v0.c2 COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c1) ISNULL), ((v0.c0)IS NOT(v0.c1)), ('-1779114433' IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ())) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((('557082979'))=((v0.c2))), (((v0.c1, v0.c2, v0.c2))<>((v0.c1, v0.c1, v0.c2))), ((v0.c1)*(v0.c2)), (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), v0.c1)) AND ((v0.c2 COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c1) ISNULL), ((v0.c0)IS NOT(v0.c1)), ('-1779114433' IN ()))))) ORDER BY (((v0.c1 IN ())) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((('557082979'))=((v0.c2))), (((v0.c1, v0.c2, v0.c2))!=((v0.c1, v0.c1, v0.c2))), ((v0.c1)*(v0.c2)), (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), v0.c1)) AND ((v0.c2 COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c1) ISNULL), ((v0.c0)IS NOT(v0.c1)), ('-1779114433' IN ()))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1 IN ())) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2, v0.c1, v0.c1, v0.c2, v0.c0)) NOT BETWEEN ((((('557082979'))=((v0.c2))), (((v0.c1, v0.c2, v0.c2))<>((v0.c1, v0.c1, v0.c2))), ((v0.c1)*(v0.c2)), (((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))), v0.c1)) AND ((v0.c2 COLLATE BINARY, CASE v0.c0  WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END, ((v0.c1) ISNULL), ((v0.c0)IS NOT(v0.c1)), ('-1779114433' IN ()))))) ORDER BY (((v0.c1 IN ())) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) IS FALSE)) NOTNULL)) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS INTEGER)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) IS FALSE)) NOTNULL)) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((((((t0.c1) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c1 AS INTEGER)) NOTNULL));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1) IS FALSE)) NOTNULL)) ORDER BY ((CAST(t0.c1 AS INTEGER)) NOTNULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((((((t0.c1, '1890102178', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, 0.017267500428576943)) AND ((t0.c1, t0.c2, t0.c2))), ((t0.c2)&(t0.c2)), (~ (t0.c1))))==((((((t0.c0)AND(t0.c1)))OR(t0.c0)), ((NULL)>=(t0.c1)), ((-2.84579532E8) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1, '1890102178', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, 0.017267500428576943)) AND ((t0.c1, t0.c2, t0.c2))), ((t0.c2)&(t0.c2)), (~ (t0.c1))))==((((((t0.c0)AND(t0.c1)))OR(t0.c0)), ((NULL)>=(t0.c1)), ((-2.84579532E8) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((((((t0.c1, '1890102178', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, 0.017267500428576943)) AND ((t0.c1, t0.c2, t0.c2))), ((t0.c2)&(t0.c2)), (~ (t0.c1))))==((((((t0.c0)AND(t0.c1)))OR(t0.c0)), ((NULL)>=(t0.c1)), ((-2.84579532E8) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1, '1890102178', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, 0.017267500428576943)) AND ((t0.c1, t0.c2, t0.c2))), ((t0.c2)&(t0.c2)), (~ (t0.c1))))==((((((t0.c0)AND(t0.c1)))OR(t0.c0)), ((NULL)>=(t0.c1)), ((-2.84579532E8) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c0 IN ()) IN ())) ORDER BY ((((((t0.c1, '1890102178', t0.c2)) NOT BETWEEN ((t0.c2, t0.c2, 0.017267500428576943)) AND ((t0.c1, t0.c2, t0.c2))), ((t0.c2)&(t0.c2)), (~ (t0.c1))))==((((((t0.c0)AND(t0.c1)))OR(t0.c0)), ((NULL)>=(t0.c1)), ((-2.84579532E8) NOT BETWEEN (t0.c2) AND (t0.c2))))) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)==(SQLITE_SOURCE_ID()))) ORDER BY (('ê²å¬¥Rì¢)|P')<=(((v0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)==(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0 ORDER BY (('ê²å¬¥Rì¢)|P')<=(((v0.c2) NOTNULL))));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)==(SQLITE_SOURCE_ID()))) ORDER BY (('ê²å¬¥Rì¢)|P')<=(((v0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2 COLLATE BINARY)==(SQLITE_SOURCE_ID()))) IS TRUE)  as count FROM v0, t0 ORDER BY (('ê²å¬¥Rì¢)|P')<=(((v0.c2) NOTNULL))));
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c2 COLLATE BINARY)==(SQLITE_SOURCE_ID()))) ORDER BY (('ê²å¬¥Rì¢)|P')<=(((v0.c2) NOTNULL)));
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((t0.c0)OR(t0.c1)) COLLATE BINARY WHERE ((t0.c2 IN ())) ORDER BY UPPER(t0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((t0.c0)OR(t0.c1)) COLLATE BINARY ORDER BY UPPER(t0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((t0.c0)OR(t0.c1)) COLLATE BINARY WHERE ((t0.c2 IN ())) ORDER BY UPPER(t0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c2 IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((t0.c0)OR(t0.c1)) COLLATE BINARY ORDER BY UPPER(t0.c0 COLLATE BINARY) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN t0 ON ((t0.c0)OR(t0.c1)) COLLATE BINARY WHERE ((t0.c2 IN ())) ORDER BY UPPER(t0.c0 COLLATE BINARY) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((t0.c2) ISNULL) COLLATE BINARY) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((t0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c2);
SELECT * FROM v0, t0 WHERE (((t0.c2) ISNULL) COLLATE BINARY) ORDER BY v0.c2;
SELECT SUM(count) FROM (SELECT ((((t0.c2) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY v0.c2);
SELECT * FROM v0, t0 WHERE (((t0.c2) ISNULL) COLLATE BINARY) ORDER BY v0.c2;
SELECT * FROM t0 INNER JOIN v0 ON CAST(504441906 AS INTEGER) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOTNULL))<>(((t0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(504441906 AS INTEGER) ORDER BY ((((v0.c0) NOTNULL))<>(((t0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN v0 ON CAST(504441906 AS INTEGER) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOTNULL))<>(((t0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c2 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(504441906 AS INTEGER) ORDER BY ((((v0.c0) NOTNULL))<>(((t0.c2) NOT NULL))) ASC  NULLS FIRST);
SELECT * FROM t0 INNER JOIN v0 ON CAST(504441906 AS INTEGER) WHERE ((v0.c2 IN ()) COLLATE NOCASE) ORDER BY ((((v0.c0) NOTNULL))<>(((t0.c2) NOT NULL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY LIKELY(DISTINCT (t0.c2 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT (t0.c2 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY LIKELY(DISTINCT (t0.c2 IN ())) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY LIKELY(DISTINCT (t0.c2 IN ())) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY LIKELY(DISTINCT (t0.c2 IN ())) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN LIKELY(v0.c0) WHEN ((v0.c0)AND(v0.c1)) THEN ((((NULL)OR(v0.c1)))AND(v0.c1)) WHEN (((v0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c1)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)AND(v0.c2)))OR(v0.c2)) ELSE CAST(v0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN LIKELY(v0.c0) WHEN ((v0.c0)AND(v0.c1)) THEN ((((NULL)OR(v0.c1)))AND(v0.c1)) WHEN (((v0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c1)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)AND(v0.c2)))OR(v0.c2)) ELSE CAST(v0.c2 AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN LIKELY(v0.c0) WHEN ((v0.c0)AND(v0.c1)) THEN ((((NULL)OR(v0.c1)))AND(v0.c1)) WHEN (((v0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c1)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)AND(v0.c2)))OR(v0.c2)) ELSE CAST(v0.c2 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN LIKELY(v0.c0) WHEN ((v0.c0)AND(v0.c1)) THEN ((((NULL)OR(v0.c1)))AND(v0.c1)) WHEN (((v0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c1)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)AND(v0.c2)))OR(v0.c2)) ELSE CAST(v0.c2 AS BLOB) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c1)) THEN LIKELY(v0.c0) WHEN ((v0.c0)AND(v0.c1)) THEN ((((NULL)OR(v0.c1)))AND(v0.c1)) WHEN (((v0.c1, v0.c2, v0.c0)) BETWEEN ((v0.c0, NULL, v0.c1)) AND ((v0.c0, v0.c0, v0.c0))) THEN ((((v0.c0)AND(v0.c2)))OR(v0.c2)) ELSE CAST(v0.c2 AS BLOB) END);
SELECT ALL * FROM t0 INDEXED BY i5 WHERE ((((t0.c2 IN ())) BETWEEN (0.7478524586021711) AND (t0.c0))) ORDER BY (t0.c2 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN (0.7478524586021711) AND (t0.c0))) IS TRUE)  as count FROM t0 INDEXED BY i5 ORDER BY (t0.c2 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0 INDEXED BY i5 WHERE ((((t0.c2 IN ())) BETWEEN (0.7478524586021711) AND (t0.c0))) ORDER BY (t0.c2 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((t0.c2 IN ())) BETWEEN (0.7478524586021711) AND (t0.c0))) IS TRUE)  as count FROM t0 INDEXED BY i5 ORDER BY (t0.c2 COLLATE NOCASE IN ()) ASC);
SELECT ALL * FROM t0 INDEXED BY i5 WHERE ((((t0.c2 IN ())) BETWEEN (0.7478524586021711) AND (t0.c0))) ORDER BY (t0.c2 COLLATE NOCASE IN ()) ASC;
SELECT * FROM v0 WHERE (CAST(CAST(v0.c2 AS REAL) AS BLOB)) ORDER BY (- (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c2 AS REAL))));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c2 AS REAL) AS BLOB)) ORDER BY (- (CAST(v0.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(v0.c2 AS REAL) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(v0.c2 AS REAL))));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c2 AS REAL) AS BLOB)) ORDER BY (- (CAST(v0.c2 AS REAL)));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND (((((v0.c1))<=((v0.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND (((((v0.c1))<=((v0.c1)))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND (((((v0.c1))<=((v0.c1)))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c1 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND (((((v0.c1))<=((v0.c1)))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c1 AS NUMERIC) COLLATE NOCASE) ORDER BY (((v0.c1)) NOT BETWEEN (((v0.c2 IN ()))) AND (((((v0.c1))<=((v0.c1)))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c1, v0.c0))OR((- (v0.c0)))))OR(CAST(v0.c2 AS REAL)))) ORDER BY (((+ (v0.c2)))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c1, v0.c0))OR((- (v0.c0)))))OR(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2)))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2)))) ASC);
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c1, v0.c0))OR((- (v0.c0)))))OR(CAST(v0.c2 AS REAL)))) ORDER BY (((+ (v0.c2)))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(v0.c1, v0.c0))OR((- (v0.c0)))))OR(CAST(v0.c2 AS REAL)))) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c2)))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2)))) ASC);
SELECT ALL * FROM v0 WHERE (((((IFNULL(v0.c1, v0.c0))OR((- (v0.c0)))))OR(CAST(v0.c2 AS REAL)))) ORDER BY (((+ (v0.c2)))AND(((((v0.c1)AND(v0.c0)))AND(v0.c2)))) ASC;
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON '' WHERE (((((t0.c2) IS TRUE))<>((((t0.c0))==((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))<>((((t0.c0))=((t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON '');
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON '' WHERE (((((t0.c2) IS TRUE))<>((((t0.c0))==((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS TRUE))<>((((t0.c0))=((t0.c2)))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN v0 ON '');
SELECT ALL * FROM t0 RIGHT OUTER JOIN v0 ON '' WHERE (((((t0.c2) IS TRUE))<>((((t0.c0))==((t0.c2))))));
SELECT * FROM v0 WHERE ((NOT (((v0.c1)>(v0.c1))))) ORDER BY (((((1891906050)==(v0.c2))))!=(((((0.4970014720685957))<>((v0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c1)>(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((1891906050)=(v0.c2))))!=(((((0.4970014720685957))!=((v0.c2)))))) DESC);
SELECT * FROM v0 WHERE ((NOT (((v0.c1)>(v0.c1))))) ORDER BY (((((1891906050)==(v0.c2))))!=(((((0.4970014720685957))<>((v0.c2)))))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c1)>(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((1891906050)=(v0.c2))))!=(((((0.4970014720685957))!=((v0.c2)))))) DESC);
SELECT * FROM v0 WHERE ((NOT (((v0.c1)>(v0.c1))))) ORDER BY (((((1891906050)==(v0.c2))))!=(((((0.4970014720685957))<>((v0.c2)))))) DESC;
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c2)IS NOT(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)IS NOT(t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c2)IS NOT(t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)IS NOT(t0.c2)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 NOT INDEXED WHERE ((((t0.c2)IS NOT(t0.c2)) IN ()));
SELECT * FROM t0 WHERE (LOWER((((t0.c0))>(('ræ²9ã§6'))))) ORDER BY ((0.9586551158754083) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((((t0.c0))>(('ræ²9ã§6'))))) IS TRUE)  as count FROM t0 ORDER BY ((0.9586551158754083) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0 WHERE (LOWER((((t0.c0))>(('ræ²9ã§6'))))) ORDER BY ((0.9586551158754083) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER((((t0.c0))>(('ræ²9ã§6'))))) IS TRUE)  as count FROM t0 ORDER BY ((0.9586551158754083) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM t0 WHERE (LOWER((((t0.c0))>(('ræ²9ã§6'))))) ORDER BY ((0.9586551158754083) NOT BETWEEN (t0.c2) AND (t0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2)<>(0.945886650005927)) THEN v0.c2 ELSE (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)!=(0.945886650005927)) THEN v0.c2 ELSE (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2)<>(0.945886650005927)) THEN v0.c2 ELSE (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c2)!=(0.945886650005927)) THEN v0.c2 ELSE (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN ((v0.c2)<>(0.945886650005927)) THEN v0.c2 ELSE (((v0.c1)) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT * FROM v0 WHERE (LIKELY(DISTINCT LIKELIHOOD(v0.c1, 0.06908898849156497)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT LIKELIHOOD(v0.c1, 0.06908898849156497))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY(DISTINCT LIKELIHOOD(v0.c1, 0.06908898849156497)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT LIKELIHOOD(v0.c1, 0.06908898849156497))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY(DISTINCT LIKELIHOOD(v0.c1, 0.06908898849156497)));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c2 WHEN v0.c2 THEN v0.c1 END))) ORDER BY v0.c0  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE((NOT (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c2 WHEN v0.c2 THEN v0.c1 END))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE((NOT (v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c2 WHEN v0.c2 THEN v0.c1 END))) ORDER BY v0.c0  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE((NOT (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1) IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c2 WHEN v0.c2 THEN v0.c1 END))) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE((NOT (v0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) IS TRUE))+(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN t0.c2 WHEN v0.c2 THEN v0.c1 END))) ORDER BY v0.c0  NULLS FIRST, (((v0.c0 IN (t0.c0)))LIKE((NOT (v0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((x'22a0') NOT BETWEEN (v0.c2) AND (CAST(v0.c0 AS BLOB))) WHERE ((((v0.c1)) NOT BETWEEN ((-9.58962991E8)) AND ((0.6075181339202336))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((-9.58962991E8)) AND ((0.6075181339202336)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((x'22a0') NOT BETWEEN (v0.c2) AND (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((x'22a0') NOT BETWEEN (v0.c2) AND (CAST(v0.c0 AS BLOB))) WHERE ((((v0.c1)) NOT BETWEEN ((-9.58962991E8)) AND ((0.6075181339202336))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((-9.58962991E8)) AND ((0.6075181339202336)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((x'22a0') NOT BETWEEN (v0.c2) AND (CAST(v0.c0 AS BLOB))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((x'22a0') NOT BETWEEN (v0.c2) AND (CAST(v0.c0 AS BLOB))) WHERE ((((v0.c1)) NOT BETWEEN ((-9.58962991E8)) AND ((0.6075181339202336))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((~ (v0.c1)))AND(((v0.c2)||(t0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c2))))) ORDER BY (~ (v0.c0 COLLATE NOCASE))  NULLS FIRST, (((((v0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0)))) NOT NULL), CASE NULL  WHEN ((t0.c1) IS TRUE) THEN LENGTH(v0.c2) ELSE ((((((((((((t0.c1)AND(t0.c1)))OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(t0.c1)))OR('')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c1)))AND(((v0.c2)||(t0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ (v0.c0 COLLATE NOCASE))  NULLS FIRST, (((((v0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0)))) NOT NULL), CASE NULL  WHEN ((t0.c1) IS TRUE) THEN LENGTH(v0.c2) ELSE ((((((((((((t0.c1)AND(t0.c1)))OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(t0.c1)))OR('')) END DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((~ (v0.c1)))AND(((v0.c2)||(t0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c2))))) ORDER BY (~ (v0.c0 COLLATE NOCASE))  NULLS FIRST, (((((v0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0)))) NOT NULL), CASE NULL  WHEN ((t0.c1) IS TRUE) THEN LENGTH(v0.c2) ELSE ((((((((((((t0.c1)AND(t0.c1)))OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(t0.c1)))OR('')) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c1)))AND(((v0.c2)||(t0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY (~ (v0.c0 COLLATE NOCASE))  NULLS FIRST, (((((v0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0)))) NOT NULL), CASE NULL  WHEN ((t0.c1) IS TRUE) THEN LENGTH(v0.c2) ELSE ((((((((((((t0.c1)AND(t0.c1)))OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(t0.c1)))OR('')) END DESC);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((((((~ (v0.c1)))AND(((v0.c2)||(t0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c2) AND (t0.c2))))) ORDER BY (~ (v0.c0 COLLATE NOCASE))  NULLS FIRST, (((((v0.c0)) BETWEEN ((t0.c2)) AND ((v0.c0)))) NOT NULL), CASE NULL  WHEN ((t0.c1) IS TRUE) THEN LENGTH(v0.c2) ELSE ((((((((((((t0.c1)AND(t0.c1)))OR(v0.c1)))AND(t0.c0)))AND(v0.c1)))AND(t0.c1)))OR('')) END DESC;
SELECT * FROM t0 WHERE ((((+ (t0.c1))) NOT BETWEEN (((t0.c2)<(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c1))) NOT BETWEEN (((t0.c2)<(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((+ (t0.c1))) NOT BETWEEN (((t0.c2)<(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c1))) NOT BETWEEN (((t0.c2)<(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((+ (t0.c1))) NOT BETWEEN (((t0.c2)<(t0.c2))) AND (((((t0.c0)OR(t0.c0)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 COLLATE RTRIM IN ())) ORDER BY v0.c0 DESC, ((v0.c2)>=(((v0.c2) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC, ((v0.c2)>=(((v0.c2) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 COLLATE RTRIM IN ())) ORDER BY v0.c0 DESC, ((v0.c2)>=(((v0.c2) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 DESC, ((v0.c2)>=(((v0.c2) NOTNULL))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((v0.c1 COLLATE RTRIM IN ())) ORDER BY v0.c0 DESC, ((v0.c2)>=(((v0.c2) NOTNULL))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c0 ELSE t0.c2 END) NOT BETWEEN (CAST(t0.c0 AS REAL)) AND ((~ (t0.c0)))));
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END COLLATE BINARY COLLATE NOCASE WHERE (((v0.c1 IN (t0.c1)) IN ())) ORDER BY (((((t0.c2)<(t0.c0)), CASE WHEN v0.c2 THEN 'gk' WHEN t0.c1 THEN t0.c2 WHEN v0.c2 THEN v0.c0 ELSE 0xffffffffee4e8caa END, CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, CAST(v0.c0 AS TEXT), NULLIF(v0.c2, t0.c2))))  NULLS LAST, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (t0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END COLLATE BINARY COLLATE NOCASE ORDER BY (((((t0.c2)<(t0.c0)), CASE WHEN v0.c2 THEN 'gk' WHEN t0.c1 THEN t0.c2 WHEN v0.c2 THEN v0.c0 ELSE 0Xffffffffee4e8caa END, CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, CAST(v0.c0 AS TEXT), NULLIF(v0.c2, t0.c2))))  NULLS LAST, (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END COLLATE BINARY COLLATE NOCASE WHERE (((v0.c1 IN (t0.c1)) IN ())) ORDER BY (((((t0.c2)<(t0.c0)), CASE WHEN v0.c2 THEN 'gk' WHEN t0.c1 THEN t0.c2 WHEN v0.c2 THEN v0.c0 ELSE 0xffffffffee4e8caa END, CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, CAST(v0.c0 AS TEXT), NULLIF(v0.c2, t0.c2))))  NULLS LAST, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1 IN (t0.c1)) IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END COLLATE BINARY COLLATE NOCASE ORDER BY (((((t0.c2)<(t0.c0)), CASE WHEN v0.c2 THEN 'gk' WHEN t0.c1 THEN t0.c2 WHEN v0.c2 THEN v0.c0 ELSE 0Xffffffffee4e8caa END, CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, CAST(v0.c0 AS TEXT), NULLIF(v0.c2, t0.c2))))  NULLS LAST, (t0.c0 IN ()) ASC  NULLS FIRST);
SELECT * FROM v0 FULL OUTER JOIN t0 ON CASE WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END COLLATE BINARY COLLATE NOCASE WHERE (((v0.c1 IN (t0.c1)) IN ())) ORDER BY (((((t0.c2)<(t0.c0)), CASE WHEN v0.c2 THEN 'gk' WHEN t0.c1 THEN t0.c2 WHEN v0.c2 THEN v0.c0 ELSE 0xffffffffee4e8caa END, CAST(t0.c0 AS TEXT)))<((t0.c1 COLLATE BINARY, CAST(v0.c0 AS TEXT), NULLIF(v0.c2, t0.c2))))  NULLS LAST, (t0.c0 IN ()) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('-1448464695'))))>((v0.c2)))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c2)))LIKE((0.9147727269120483 IN ()))), (~ ((('[|')*(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT BETWEEN (v0.c0) AND ('-1448464695'))))>((v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c2)))LIKE((0.9147727269120483 IN ()))), (~ ((('[|')*(v0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('-1448464695'))))>((v0.c2)))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c2)))LIKE((0.9147727269120483 IN ()))), (~ ((('[|')*(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((v0.c2) NOT BETWEEN (v0.c0) AND ('-1448464695'))))>((v0.c2)))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c2)))LIKE((0.9147727269120483 IN ()))), (~ ((('[|')*(v0.c0)))));
SELECT * FROM v0 WHERE ((((((v0.c2) NOT BETWEEN (v0.c0) AND ('-1448464695'))))>((v0.c2)))) ORDER BY ((((((v0.c1)OR(v0.c1)))AND(v0.c2)))LIKE((0.9147727269120483 IN ()))), (~ ((('[|')*(v0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST('925986092' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('925986092' AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST('925986092' AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST('925986092' AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST('925986092' AS REAL));
SELECT * FROM v0, t0 WHERE (((((v0.c2 COLLATE NOCASE)AND((((v0.c1, v0.c2, v0.c0))<>((v0.c2, v0.c0, v0.c2))))))AND((((x''))>((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE NOCASE)AND((((v0.c1, v0.c2, v0.c0))<>((v0.c2, v0.c0, v0.c2))))))AND((((x''))>((t0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c2 COLLATE NOCASE)AND((((v0.c1, v0.c2, v0.c0))<>((v0.c2, v0.c0, v0.c2))))))AND((((x''))>((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2 COLLATE NOCASE)AND((((v0.c1, v0.c2, v0.c0))<>((v0.c2, v0.c0, v0.c2))))))AND((((x''))>((t0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((((v0.c2 COLLATE NOCASE)AND((((v0.c1, v0.c2, v0.c0))<>((v0.c2, v0.c0, v0.c2))))))AND((((x''))>((t0.c2))))));
SELECT ALL * FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (NULL);
SELECT COUNT(*) FROM t0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ('');
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULLIF(t0.c2, (~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c2, (~ (v0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULLIF(t0.c2, (~ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(t0.c2, (~ (v0.c0)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (NULLIF(t0.c2, (~ (v0.c0))));
SELECT * FROM t0, v0 WHERE ((((LIKELY(-1302982673)))>((((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c0)))))) ORDER BY (NOT ('FALSE')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(-1302982673)))>((((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ('FALSE')) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((LIKELY(-1302982673)))>((((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c0)))))) ORDER BY (NOT ('FALSE')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((LIKELY(-1302982673)))>((((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ('FALSE')) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0, v0 WHERE ((((LIKELY(-1302982673)))>((((v0.c2) NOT BETWEEN (t0.c2) AND (v0.c0)))))) ORDER BY (NOT ('FALSE')) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c2 COLLATE RTRIM)<((((t0.c0))<((v0.c0))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c2 COLLATE RTRIM)<((((t0.c0))<((v0.c0))))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c2 COLLATE RTRIM)<((((t0.c0))<((v0.c0))))) WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c2 COLLATE RTRIM)<((((t0.c0))<((v0.c0))))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c2 COLLATE RTRIM)<((((t0.c0))<((v0.c0))))) WHERE (t0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((('D9/~m/4F')*(v0.c1))) BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c1) ISNULL)))) ORDER BY (((((v0.c2))<=((v0.c1)))) BETWEEN (v0.c1) AND ((v0.c1 IN ()))) ASC, ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)  NULLS FIRST, CAST((+ (v0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('D9/~m/4F')*(v0.c1))) BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))<=((v0.c1)))) BETWEEN (v0.c1) AND ((v0.c1 IN ()))) ASC, ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)  NULLS FIRST, CAST((+ (v0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((('D9/~m/4F')*(v0.c1))) BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c1) ISNULL)))) ORDER BY (((((v0.c2))<=((v0.c1)))) BETWEEN (v0.c1) AND ((v0.c1 IN ()))) ASC, ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)  NULLS FIRST, CAST((+ (v0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('D9/~m/4F')*(v0.c1))) BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c1) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))<=((v0.c1)))) BETWEEN (v0.c1) AND ((v0.c1 IN ()))) ASC, ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)  NULLS FIRST, CAST((+ (v0.c2)) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((('D9/~m/4F')*(v0.c1))) BETWEEN (v0.c2 COLLATE RTRIM) AND (((v0.c1) ISNULL)))) ORDER BY (((((v0.c2))<=((v0.c1)))) BETWEEN (v0.c1) AND ((v0.c1 IN ()))) ASC, ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2))) IS FALSE)  NULLS FIRST, CAST((+ (v0.c2)) AS BLOB) ASC  NULLS LAST;
SELECT * FROM t0, v0 WHERE ((((x'c77f8bc0')) BETWEEN ((0Xffffffffd30d37b6)) AND ((((t0.c1)IS NOT(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'c77f8bc0')) BETWEEN ((0xffffffffd30d37b6)) AND ((((t0.c1)IS NOT(v0.c1)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((x'c77f8bc0')) BETWEEN ((0Xffffffffd30d37b6)) AND ((((t0.c1)IS NOT(v0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'c77f8bc0')) BETWEEN ((0xffffffffd30d37b6)) AND ((((t0.c1)IS NOT(v0.c1)))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((x'c77f8bc0')) BETWEEN ((0Xffffffffd30d37b6)) AND ((((t0.c1)IS NOT(v0.c1))))));
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON t0.c2 WHERE ((((('Lfe[#o') BETWEEN ('-1104062683') AND (v0.c0))) BETWEEN (((((x'')OR(x'5f9c')))OR(t0.c0))) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c1 ELSE v0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('Lfe[#o') BETWEEN ('-1104062683') AND (v0.c0))) BETWEEN (((((x'')OR(x'5f9c')))OR(t0.c0))) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON t0.c2 ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c1 ELSE v0.c2 END)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON t0.c2 WHERE ((((('Lfe[#o') BETWEEN ('-1104062683') AND (v0.c0))) BETWEEN (((((x'')OR(x'5f9c')))OR(t0.c0))) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c1 ELSE v0.c2 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((('Lfe[#o') BETWEEN ('-1104062683') AND (v0.c0))) BETWEEN (((((x'')OR(x'5f9c')))OR(t0.c0))) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON t0.c2 ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c1 ELSE v0.c2 END)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON t0.c2 WHERE ((((('Lfe[#o') BETWEEN ('-1104062683') AND (v0.c0))) BETWEEN (((((x'')OR(x'5f9c')))OR(t0.c0))) AND (((((v0.c0)AND(v0.c1)))AND(v0.c1))))) ORDER BY (((t0.c1)) BETWEEN ((CAST(t0.c1 AS NUMERIC))) AND ((CASE t0.c2  WHEN t0.c1 THEN v0.c1 ELSE v0.c2 END)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) ISNULL))<=('cw3ã¯'))) ORDER BY (json_quote(v0.c1) IN ()), COALESCE(DISTINCT (('') NOT NULL), (v0.c0 IN ())) ASC, v0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL))<=('cw3ã¯'))) IS TRUE)  as count FROM t0, v0 ORDER BY (json_quote(v0.c1) IN ()), COALESCE(DISTINCT (('') NOT NULL), (v0.c0 IN ())) ASC, v0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) ISNULL))<=('cw3ã¯'))) ORDER BY (json_quote(v0.c1) IN ()), COALESCE(DISTINCT (('') NOT NULL), (v0.c0 IN ())) ASC, v0.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) ISNULL))<=('cw3ã¯'))) IS TRUE)  as count FROM t0, v0 ORDER BY (json_quote(v0.c1) IN ()), COALESCE(DISTINCT (('') NOT NULL), (v0.c0 IN ())) ASC, v0.c2 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1) ISNULL))<=('cw3ã¯'))) ORDER BY (json_quote(v0.c1) IN ()), COALESCE(DISTINCT (('') NOT NULL), (v0.c0 IN ())) ASC, v0.c2 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0)LIKE(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((v0.c0)LIKE(v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) NOTNULL)) ORDER BY (NOT ((((v0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))))), (((t0.c2 IN ()))-((- (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT ((((v0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))))), (((t0.c2 IN ()))-((- (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) NOTNULL)) ORDER BY (NOT ((((v0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))))), (((t0.c2 IN ()))-((- (t0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c2 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0, t0 ORDER BY (NOT ((((v0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))))), (((t0.c2 IN ()))-((- (t0.c2))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c2 AS BLOB)) NOTNULL)) ORDER BY (NOT ((((v0.c2)) BETWEEN ((t0.c2)) AND ((t0.c0))))), (((t0.c2 IN ()))-((- (t0.c2))))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) NOTNULL) AS INTEGER)) ORDER BY v0.c2 COLLATE NOCASE ASC  NULLS FIRST, (((v0.c1) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 COLLATE NOCASE ASC  NULLS FIRST, (((v0.c1) NOTNULL) IN ()));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) NOTNULL) AS INTEGER)) ORDER BY v0.c2 COLLATE NOCASE ASC  NULLS FIRST, (((v0.c1) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c2) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY v0.c2 COLLATE NOCASE ASC  NULLS FIRST, (((v0.c1) NOTNULL) IN ()));
SELECT ALL * FROM v0 WHERE (CAST(((v0.c2) NOTNULL) AS INTEGER)) ORDER BY v0.c2 COLLATE NOCASE ASC  NULLS FIRST, (((v0.c1) NOTNULL) IN ());
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (((t0.c1) BETWEEN (v0.c0) AND (t0.c2)) COLLATE RTRIM) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (v0.c0) AND (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) NOT NULL)) NOT NULL) ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (((t0.c1) BETWEEN (v0.c0) AND (t0.c2)) COLLATE RTRIM) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (v0.c0) AND (t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) NOT NULL)) NOT NULL) ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((((v0.c1) NOT NULL)) NOT NULL) WHERE (((t0.c1) BETWEEN (v0.c0) AND (t0.c2)) COLLATE RTRIM) ORDER BY t0.c2 DESC;
SELECT ALL * FROM t0, v0 WHERE ((CASE WHEN t0.c2 THEN v0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN v0.c1 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((CASE WHEN t0.c2 THEN v0.c1 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c2 THEN v0.c1 END IN ())) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE ((CASE WHEN t0.c2 THEN v0.c1 END IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT v0.c1 COLLATE RTRIM, 0.3801457936295408) WHERE (0.8743349392085995) ORDER BY ((CASE v0.c1  WHEN t0.c0 THEN 0.07234841364866096 ELSE t0.c0 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8743349392085995) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT v0.c1 COLLATE RTRIM, 0.3801457936295408) ORDER BY ((CASE v0.c1  WHEN t0.c0 THEN 0.07234841364866096 ELSE t0.c0 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT v0.c1 COLLATE RTRIM, 0.3801457936295408) WHERE (0.8743349392085995) ORDER BY ((CASE v0.c1  WHEN t0.c0 THEN 0.07234841364866096 ELSE t0.c0 END) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.8743349392085995) IS TRUE)  as count FROM t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT v0.c1 COLLATE RTRIM, 0.3801457936295408) ORDER BY ((CASE v0.c1  WHEN t0.c0 THEN 0.07234841364866096 ELSE t0.c0 END) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN v0 ON LIKELIHOOD(DISTINCT v0.c1 COLLATE RTRIM, 0.3801457936295408) WHERE (0.8743349392085995) ORDER BY ((CASE v0.c1  WHEN t0.c0 THEN 0.07234841364866096 ELSE t0.c0 END) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) AND (((v0.c2 IN (v0.c2, t0.c1)))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) AND (((v0.c2 IN (v0.c2, t0.c1)))))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) AND (((v0.c2 IN (v0.c2, t0.c1)))))) ORDER BY t0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) AND (((v0.c2 IN (v0.c2, t0.c1)))))) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c0  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((t0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) AND (((v0.c2 IN (v0.c2, t0.c1)))))) ORDER BY t0.c0  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY CAST(t0.c2 COLLATE RTRIM AS TEXT) DESC, (- (ABS(DISTINCT t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c2 COLLATE RTRIM AS TEXT) DESC, (- (ABS(DISTINCT t0.c2)))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY CAST(t0.c2 COLLATE RTRIM AS TEXT) DESC, (- (ABS(DISTINCT t0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1 COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c2 COLLATE RTRIM AS TEXT) DESC, (- (ABS(DISTINCT t0.c2)))  NULLS FIRST);
SELECT ALL * FROM v0, t0 WHERE (t0.c1 COLLATE BINARY) ORDER BY CAST(t0.c2 COLLATE RTRIM AS TEXT) DESC, (- (ABS(DISTINCT t0.c2)))  NULLS FIRST;
SELECT * FROM v0 CROSS JOIN t0 ON (CASE v0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c2 END IN (((v0.c0) ISNULL))) WHERE (((CAST(t0.c2 AS BLOB))GLOB(((((t0.c1)AND(t0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB))GLOB(((((t0.c1)AND(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (CASE v0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c2 END IN (((v0.c0) ISNULL))));
SELECT * FROM v0 CROSS JOIN t0 ON (CASE v0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c2 END IN (((v0.c0) ISNULL))) WHERE (((CAST(t0.c2 AS BLOB))GLOB(((((t0.c1)AND(t0.c1)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB))GLOB(((((t0.c1)AND(t0.c1)))AND(t0.c2))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (CASE v0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c2 END IN (((v0.c0) ISNULL))));
SELECT * FROM v0 CROSS JOIN t0 ON (CASE v0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN v0.c2 END IN (((v0.c0) ISNULL))) WHERE (((CAST(t0.c2 AS BLOB))GLOB(((((t0.c1)AND(t0.c1)))AND(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(((t0.c2)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(((t0.c2)|(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(((t0.c2)|(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(((t0.c2)|(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))LIKE(((t0.c2)|(t0.c1)))));
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)LIKE(-813616739)) IN ())) ORDER BY (((CASE v0.c2  WHEN t0.c0 THEN t0.c2 END))<>((v0.c0))) ASC  NULLS LAST, CASE WHEN v0.c0 THEN ((((((((t0.c1)OR('å{')))OR(t0.c0)))AND(NULL)))OR(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)LIKE(-813616739)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((CASE v0.c2  WHEN t0.c0 THEN t0.c2 END))<>((v0.c0))) ASC  NULLS LAST, CASE WHEN v0.c0 THEN ((((((((t0.c1)OR('å{')))OR(t0.c0)))AND(NULL)))OR(v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)LIKE(-813616739)) IN ())) ORDER BY (((CASE v0.c2  WHEN t0.c0 THEN t0.c2 END))<>((v0.c0))) ASC  NULLS LAST, CASE WHEN v0.c0 THEN ((((((((t0.c1)OR('å{')))OR(t0.c0)))AND(NULL)))OR(v0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)LIKE(-813616739)) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY (((CASE v0.c2  WHEN t0.c0 THEN t0.c2 END))<>((v0.c0))) ASC  NULLS LAST, CASE WHEN v0.c0 THEN ((((((((t0.c1)OR('å{')))OR(t0.c0)))AND(NULL)))OR(v0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE ((((t0.c0)LIKE(-813616739)) IN ())) ORDER BY (((CASE v0.c2  WHEN t0.c0 THEN t0.c2 END))<>((v0.c0))) ASC  NULLS LAST, CASE WHEN v0.c0 THEN ((((((((t0.c1)OR('å{')))OR(t0.c0)))AND(NULL)))OR(v0.c0)) END DESC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (CAST(-7.29654762E8 AS BLOB)) ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('ï¤4wi+''xE')) IN ()), (((v0.c2)IS NOT(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-7.29654762E8 AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('ï¤4wi+''xE')) IN ()), (((v0.c2)IS NOT(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(-7.29654762E8 AS BLOB)) ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('ï¤4wi+''xE')) IN ()), (((v0.c2)IS NOT(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(-7.29654762E8 AS BLOB)) IS TRUE)  as count FROM t0, v0 ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('ï¤4wi+''xE')) IN ()), (((v0.c2)IS NOT(v0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(-7.29654762E8 AS BLOB)) ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('ï¤4wi+''xE')) IN ()), (((v0.c2)IS NOT(v0.c0)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((t0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((v0.c1) IS FALSE) END) ORDER BY LIKELY(((t0.c1)OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((t0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((v0.c1) IS FALSE) END) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY(((t0.c1)OR(t0.c2))));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((t0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((v0.c1) IS FALSE) END) ORDER BY LIKELY(((t0.c1)OR(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((t0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((v0.c1) IS FALSE) END) IS TRUE)  as count FROM v0, t0 ORDER BY LIKELY(((t0.c1)OR(t0.c2))));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((t0.c1)OR(v0.c0)))AND(v0.c1)) ELSE ((v0.c1) IS FALSE) END) ORDER BY LIKELY(((t0.c1)OR(t0.c2)));
SELECT COUNT(*) FROM v0, t0 INDEXED BY i76 WHERE (((((v0.c2) BETWEEN (v0.c1) AND (t0.c0)))>(((((v0.c2)AND(v0.c2)))OR(v0.c1))))) ORDER BY ((((((v0.c2)>(v0.c2)))AND(((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c2)))))OR(((x'b950')-('206654289'))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c1) AND (t0.c0)))>(((((v0.c2)AND(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0, t0 INDEXED BY i76 ORDER BY ((((((v0.c2)>(v0.c2)))AND(((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c2)))))OR(((x'b950')-('206654289')))));
SELECT COUNT(*) FROM v0, t0 INDEXED BY i76 WHERE (((((v0.c2) BETWEEN (v0.c1) AND (t0.c0)))>(((((v0.c2)AND(v0.c2)))OR(v0.c1))))) ORDER BY ((((((v0.c2)>(v0.c2)))AND(((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c2)))))OR(((x'b950')-('206654289'))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c1) AND (t0.c0)))>(((((v0.c2)AND(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0, t0 INDEXED BY i76 ORDER BY ((((((v0.c2)>(v0.c2)))AND(((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c2)))))OR(((x'b950')-('206654289')))));
SELECT COUNT(*) FROM v0, t0 INDEXED BY i76 WHERE (((((v0.c2) BETWEEN (v0.c1) AND (t0.c0)))>(((((v0.c2)AND(v0.c2)))OR(v0.c1))))) ORDER BY ((((((v0.c2)>(v0.c2)))AND(((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c2)))))OR(((x'b950')-('206654289'))));
SELECT COUNT(*) FROM v0, t0 WHERE (((LIKELIHOOD(v0.c0, 0.21318952834806526))LIKE(((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(v0.c0, 0.21318952834806526))LIKE(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((LIKELIHOOD(v0.c0, 0.21318952834806526))LIKE(((t0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(v0.c0, 0.21318952834806526))LIKE(((t0.c2) IS FALSE)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (((LIKELIHOOD(v0.c0, 0.21318952834806526))LIKE(((t0.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN json_array(t0.c2, v0.c0) END) ORDER BY ((NOT (v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c0)) THEN json_array(t0.c2, v0.c0) END) IS TRUE)  as count FROM v0, t0 ORDER BY ((NOT (v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN json_array(t0.c2, v0.c0) END) ORDER BY ((NOT (v0.c1)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c0)) THEN json_array(t0.c2, v0.c0) END) IS TRUE)  as count FROM v0, t0 ORDER BY ((NOT (v0.c1)) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (CASE WHEN (NOT (t0.c0)) THEN json_array(t0.c2, v0.c0) END) ORDER BY ((NOT (v0.c1)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY NULL  NULLS LAST, ((0.35574809167204013 COLLATE NOCASE)LIKE(((t0.c0)=(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST, ((0.35574809167204013 COLLATE NOCASE)LIKE(((t0.c0)=(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY NULL  NULLS LAST, ((0.35574809167204013 COLLATE NOCASE)LIKE(((t0.c0)=(t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST, ((0.35574809167204013 COLLATE NOCASE)LIKE(((t0.c0)=(t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (NULL) ORDER BY NULL  NULLS LAST, ((0.35574809167204013 COLLATE NOCASE)LIKE(((t0.c0)=(t0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(DISTINCT ((t0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((t0.c2) NOT NULL))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(DISTINCT ((t0.c2) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT ((t0.c2) NOT NULL))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (UNLIKELY(DISTINCT ((t0.c2) NOT NULL)));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c1) NOTNULL)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((v0.c1) NOTNULL))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c1 THEN v0.c2 ELSE v0.c2 END AS TEXT) WHERE (CAST((~ (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c1 THEN v0.c2 ELSE v0.c2 END AS TEXT));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c1 THEN v0.c2 ELSE v0.c2 END AS TEXT) WHERE (CAST((~ (v0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (v0.c0)) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c1 THEN v0.c2 ELSE v0.c2 END AS TEXT));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t0 ON CAST(CASE v0.c0  WHEN t0.c1 THEN v0.c2 ELSE v0.c2 END AS TEXT) WHERE (CAST((~ (v0.c0)) AS BLOB));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<(t0.c2)) IN ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<(t0.c2)) IN ((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<(t0.c2)) IN ((+ (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)<(t0.c2)) IN ((+ (t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2)<(t0.c2)) IN ((+ (t0.c1)))));
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1)IS(v0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN ((v0.c2)OR(v0.c0)) THEN (((t0.c2))>((0.9565147772778525))) ELSE CAST(v0.c1 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)IS(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN ((v0.c2)OR(v0.c0)) THEN (((t0.c2))>((0.9565147772778525))) ELSE CAST(v0.c1 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1)IS(v0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN ((v0.c2)OR(v0.c0)) THEN (((t0.c2))>((0.9565147772778525))) ELSE CAST(v0.c1 AS INTEGER) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)IS(v0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN ((v0.c2)OR(v0.c0)) THEN (((t0.c2))>((0.9565147772778525))) ELSE CAST(v0.c1 AS INTEGER) END  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (((t0.c1)IS(v0.c2)) COLLATE RTRIM) ORDER BY CASE WHEN ((v0.c2)OR(v0.c0)) THEN (((t0.c2))>((0.9565147772778525))) ELSE CAST(v0.c1 AS INTEGER) END  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (v0.c0) ORDER BY t0.c1  NULLS FIRST;
SELECT * FROM t0, v0 WHERE ((((v0.c1))>=((v0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c1))>=((v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((v0.c1))>=((v0.c1))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c1))>=((v0.c1))) COLLATE NOCASE) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((v0.c1))>=((v0.c1))) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c2)||(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c1))>((v0.c1))) END DESC, ((((((((v0.c0)AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) IS FALSE))))AND(NULL)))OR(CAST(v0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c2)||(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c1))>((v0.c1))) END DESC, ((((((((v0.c0)AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) IS FALSE))))AND(NULL)))OR(CAST(v0.c1 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c2)||(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c1))>((v0.c1))) END DESC, ((((((((v0.c0)AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) IS FALSE))))AND(NULL)))OR(CAST(v0.c1 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((v0.c2)||(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) IS TRUE)  as count FROM v0 ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c1))>((v0.c1))) END DESC, ((((((((v0.c0)AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) IS FALSE))))AND(NULL)))OR(CAST(v0.c1 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT ((v0.c2)||(v0.c0)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) ORDER BY CASE CAST(NULL AS TEXT)  WHEN ((v0.c0)|(v0.c0)) THEN (((v0.c1))>((v0.c1))) END DESC, ((((((((v0.c0)AND(((v0.c0)IS NOT(v0.c0)))))OR(((v0.c0) IS FALSE))))AND(NULL)))OR(CAST(v0.c1 AS REAL))) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY CASE (((t0.c0)) BETWEEN ((t0.c2)) AND ((NULL)))  WHEN COALESCE(DISTINCT t0.c2, NULL) THEN t0.c1 COLLATE RTRIM WHEN x'7e57' THEN '1e500' WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) ELSE CASE WHEN t0.c1 THEN t0.c0 WHEN 0X3116203a THEN '-1759969784' WHEN NULL THEN t0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0)) BETWEEN ((t0.c2)) AND ((NULL)))  WHEN COALESCE(DISTINCT t0.c2, NULL) THEN t0.c1 COLLATE RTRIM WHEN x'7e57' THEN '1e500' WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) ELSE CASE WHEN t0.c1 THEN t0.c0 WHEN 0X3116203a THEN '-1759969784' WHEN NULL THEN t0.c0 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY CASE (((t0.c0)) BETWEEN ((t0.c2)) AND ((NULL)))  WHEN COALESCE(DISTINCT t0.c2, NULL) THEN t0.c1 COLLATE RTRIM WHEN x'7e57' THEN '1e500' WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) ELSE CASE WHEN t0.c1 THEN t0.c0 WHEN 0X3116203a THEN '-1759969784' WHEN NULL THEN t0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY CASE (((t0.c0)) BETWEEN ((t0.c2)) AND ((NULL)))  WHEN COALESCE(DISTINCT t0.c2, NULL) THEN t0.c1 COLLATE RTRIM WHEN x'7e57' THEN '1e500' WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) ELSE CASE WHEN t0.c1 THEN t0.c0 WHEN 0X3116203a THEN '-1759969784' WHEN NULL THEN t0.c0 END END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY CASE (((t0.c0)) BETWEEN ((t0.c2)) AND ((NULL)))  WHEN COALESCE(DISTINCT t0.c2, NULL) THEN t0.c1 COLLATE RTRIM WHEN x'7e57' THEN '1e500' WHEN (t0.c0 IN ()) THEN (+ (t0.c0)) ELSE CASE WHEN t0.c1 THEN t0.c0 WHEN 0X3116203a THEN '-1759969784' WHEN NULL THEN t0.c0 END END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (rtreenode(CAST(v0.c2 AS TEXT), v0.c2));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(CAST(v0.c2 AS TEXT), v0.c2)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (rtreenode(CAST(v0.c2 AS TEXT), v0.c2));
SELECT SUM(count) FROM (SELECT ALL ((rtreenode(CAST(v0.c2 AS TEXT), v0.c2)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (rtreenode(CAST(v0.c2 AS TEXT), v0.c2));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)<=(t0.c0)), ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)), t0.c0))<((CASE t0.c2  WHEN x'' THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c0 AS TEXT), rtreenode(-9.69551627E8, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<=(t0.c0)), ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)), t0.c0))<((CASE t0.c2  WHEN x'' THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c0 AS TEXT), rtreenode(-9.69551627E8, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)<=(t0.c0)), ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)), t0.c0))<((CASE t0.c2  WHEN x'' THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c0 AS TEXT), rtreenode(-9.69551627E8, t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)<=(t0.c0)), ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)), t0.c0))<((CASE t0.c2  WHEN x'' THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c0 AS TEXT), rtreenode(-9.69551627E8, t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)<=(t0.c0)), ((((((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))AND(t0.c0)))AND(t0.c2)))AND(t0.c2)))OR(t0.c0)), t0.c0))<((CASE t0.c2  WHEN x'' THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c0 ELSE t0.c1 END, CAST(t0.c0 AS TEXT), rtreenode(-9.69551627E8, t0.c2)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))/(LOWER(v0.c1))) WHERE ((((((~ (v0.c2)))AND(((v0.c2)>=(v0.c2)))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE '5}' END)));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c2)))AND(((v0.c2)>=(v0.c2)))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE '5}' END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))/(LOWER(v0.c1))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))/(LOWER(v0.c1))) WHERE ((((((~ (v0.c2)))AND(((v0.c2)>=(v0.c2)))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE '5}' END)));
SELECT SUM(count) FROM (SELECT (((((((~ (v0.c2)))AND(((v0.c2)>=(v0.c2)))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE '5}' END))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))/(LOWER(v0.c1))));
SELECT ALL * FROM v0 LEFT OUTER JOIN t0 ON (((- (t0.c0)))/(LOWER(v0.c1))) WHERE ((((((~ (v0.c2)))AND(((v0.c2)>=(v0.c2)))))AND(CASE t0.c0  WHEN v0.c0 THEN t0.c1 ELSE '5}' END)));
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS NUMERIC)) ORDER BY (((0.8023814820089198, v0.c0, v0.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)), (('1187545350') NOT BETWEEN (v0.c1) AND (v0.c2)), CAST(v0.c1 AS REAL))) AND ((((v0.c0)>=(v0.c2)), (NOT (v0.c2)), ((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((0.8023814820089198, v0.c0, v0.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)), (('1187545350') NOT BETWEEN (v0.c1) AND (v0.c2)), CAST(v0.c1 AS REAL))) AND ((((v0.c0)>=(v0.c2)), (NOT (v0.c2)), ((v0.c1) ISNULL)))));
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS NUMERIC)) ORDER BY (((0.8023814820089198, v0.c0, v0.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)), (('1187545350') NOT BETWEEN (v0.c1) AND (v0.c2)), CAST(v0.c1 AS REAL))) AND ((((v0.c0)>=(v0.c2)), (NOT (v0.c2)), ((v0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY (((0.8023814820089198, v0.c0, v0.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)), (('1187545350') NOT BETWEEN (v0.c1) AND (v0.c2)), CAST(v0.c1 AS REAL))) AND ((((v0.c0)>=(v0.c2)), (NOT (v0.c2)), ((v0.c1) ISNULL)))));
SELECT ALL * FROM v0 WHERE (CAST(((((v0.c2)OR(v0.c2)))AND(v0.c0)) AS NUMERIC)) ORDER BY (((0.8023814820089198, v0.c0, v0.c1)) NOT BETWEEN ((((v0.c1) BETWEEN (v0.c2) AND (v0.c1)), (('1187545350') NOT BETWEEN (v0.c1) AND (v0.c2)), CAST(v0.c1 AS REAL))) AND ((((v0.c0)>=(v0.c2)), (NOT (v0.c2)), ((v0.c1) ISNULL))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END, (('')<=(v0.c2)), ((NULL) ISNULL))) AND ((v0.c2, ((((2124193174)OR('-1656294903')))AND('')), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))) ORDER BY (((~ (v0.c2))) NOT NULL), CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)>(v0.c1)) ELSE ((v0.c1)>>(v0.c0)) END DESC, ((((((((x'')OR(v0.c0)))OR(LIKELY(v0.c0))))AND(((v0.c2) NOTNULL))))AND(((v0.c0)IS(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END, (('')<=(v0.c2)), ((NULL) ISNULL))) AND ((v0.c2, ((((2124193174)OR('-1656294903')))AND('')), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c2))) NOT NULL), CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)>(v0.c1)) ELSE ((v0.c1)>>(v0.c0)) END DESC, ((((((((x'')OR(v0.c0)))OR(LIKELY(v0.c0))))AND(((v0.c2) NOTNULL))))AND(((v0.c0)IS(v0.c1)))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END, (('')<=(v0.c2)), ((NULL) ISNULL))) AND ((v0.c2, ((((2124193174)OR('-1656294903')))AND('')), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))) ORDER BY (((~ (v0.c2))) NOT NULL), CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)>(v0.c1)) ELSE ((v0.c1)>>(v0.c0)) END DESC, ((((((((x'')OR(v0.c0)))OR(LIKELY(v0.c0))))AND(((v0.c2) NOTNULL))))AND(((v0.c0)IS(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END, (('')<=(v0.c2)), ((NULL) ISNULL))) AND ((v0.c2, ((((2124193174)OR('-1656294903')))AND('')), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c2))) NOT NULL), CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)>(v0.c1)) ELSE ((v0.c1)>>(v0.c0)) END DESC, ((((((((x'')OR(v0.c0)))OR(LIKELY(v0.c0))))AND(((v0.c2) NOTNULL))))AND(((v0.c0)IS(v0.c1)))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c2)) NOT BETWEEN ((CASE v0.c1  WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END, (('')<=(v0.c2)), ((NULL) ISNULL))) AND ((v0.c2, ((((2124193174)OR('-1656294903')))AND('')), ((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))))) ORDER BY (((~ (v0.c2))) NOT NULL), CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c1)>(v0.c1)) ELSE ((v0.c1)>>(v0.c0)) END DESC, ((((((((x'')OR(v0.c0)))OR(LIKELY(v0.c0))))AND(((v0.c2) NOTNULL))))AND(((v0.c0)IS(v0.c1))));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE NOCASE IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE NOCASE IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE NOCASE IN ((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((v0.c1 COLLATE NOCASE IN ((v0.c0 IN ())))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c1 COLLATE NOCASE IN ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((v0.c1)LIKE(v0.c1)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c0 ELSE 0.9255188686529403 END)))OR(v0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1 COLLATE NOCASE)OR(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)LIKE(v0.c1)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c0 ELSE 0.9255188686529403 END)))OR(v0.c2))  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((v0.c1)LIKE(v0.c1)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c0 ELSE 0.9255188686529403 END)))OR(v0.c2))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c1 COLLATE NOCASE)OR(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c1)LIKE(v0.c1)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c0 ELSE 0.9255188686529403 END)))OR(v0.c2))  NULLS LAST);
SELECT COUNT(*) FROM v0 NOT INDEXED WHERE (((((((((v0.c1 COLLATE NOCASE)OR(((((v0.c2)OR(v0.c1)))AND(v0.c1)))))OR(((v0.c0) NOT NULL))))AND(CASE WHEN v0.c0 THEN v0.c1 END)))AND(((v0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((((v0.c1)LIKE(v0.c1)))AND(CASE v0.c2  WHEN v0.c2 THEN v0.c0 ELSE 0.9255188686529403 END)))OR(v0.c2))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((((+ (NULL)))AND((v0.c2 IN ('#)')))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c2)+(((v0.c0)<=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (NULL)))AND((v0.c2 IN ('#)')))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)+(((v0.c0)<=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((+ (NULL)))AND((v0.c2 IN ('#)')))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c2)+(((v0.c0)<=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (NULL)))AND((v0.c2 IN ('#)')))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2)+(((v0.c0)<=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((+ (NULL)))AND((v0.c2 IN ('#)')))))AND(((((v0.c1)AND(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c2)+(((v0.c0)<=(v0.c0))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c1) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1) NOTNULL));
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c2)) THEN LIKELY(DISTINCT t0.c0) WHEN ((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) THEN ((((t0.c2)OR(t0.c1)))OR(t0.c1)) WHEN TRIM(t0.c0) THEN (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c2)) THEN LIKELY(DISTINCT t0.c0) WHEN ((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) THEN ((((t0.c2)OR(t0.c1)))OR(t0.c1)) WHEN TRIM(t0.c0) THEN (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c2))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c2)) THEN LIKELY(DISTINCT t0.c0) WHEN ((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) THEN ((((t0.c2)OR(t0.c1)))OR(t0.c1)) WHEN TRIM(t0.c0) THEN (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c2)) THEN LIKELY(DISTINCT t0.c0) WHEN ((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) THEN ((((t0.c2)OR(t0.c1)))OR(t0.c1)) WHEN TRIM(t0.c0) THEN (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c2))) END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE WHEN ((((((((t0.c1)OR(t0.c0)))AND(t0.c1)))OR(t0.c2)))AND(t0.c2)) THEN LIKELY(DISTINCT t0.c0) WHEN ((((((((t0.c0)AND(t0.c1)))OR(t0.c2)))OR(t0.c2)))AND(t0.c2)) THEN ((((t0.c2)OR(t0.c1)))OR(t0.c1)) WHEN TRIM(t0.c0) THEN (((t0.c2, t0.c0, t0.c1)) BETWEEN ((t0.c1, t0.c0, t0.c0)) AND ((NULL, t0.c0, t0.c2))) END);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN ((-1761867270 IN (v0.c0, v0.c2))) AND (NULL))) ORDER BY ((('uA{QPwCEì')) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND (((NOT (v0.c0)))))  NULLS LAST, (- (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) BETWEEN ((-1761867270 IN (v0.c0, v0.c2))) AND (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((('uA{QPwCEì')) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND (((NOT (v0.c0)))))  NULLS LAST, (- (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN ((-1761867270 IN (v0.c0, v0.c2))) AND (NULL))) ORDER BY ((('uA{QPwCEì')) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND (((NOT (v0.c0)))))  NULLS LAST, (- (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c2 AS REAL)) BETWEEN ((-1761867270 IN (v0.c0, v0.c2))) AND (NULL))) IS TRUE)  as count FROM v0 ORDER BY ((('uA{QPwCEì')) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND (((NOT (v0.c0)))))  NULLS LAST, (- (NULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c2 AS REAL)) BETWEEN ((-1761867270 IN (v0.c0, v0.c2))) AND (NULL))) ORDER BY ((('uA{QPwCEì')) NOT BETWEEN ((CAST(v0.c1 AS BLOB))) AND (((NOT (v0.c0)))))  NULLS LAST, (- (NULL))  NULLS LAST;
SELECT * FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2, v0.c2, v0.c1)) NOT BETWEEN ((((v0.c0)==(v0.c0)), ((v0.c1) IS FALSE), ('' IN ()), LIKELY(v0.c1), ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END, CAST(v0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, v0.c2, v0.c2, v0.c1)) NOT BETWEEN ((((v0.c0)=(v0.c0)), ((v0.c1) IS FALSE), ('' IN ()), LIKELY(v0.c1), ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END, CAST(v0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2, v0.c2, v0.c1)) NOT BETWEEN ((((v0.c0)==(v0.c0)), ((v0.c1) IS FALSE), ('' IN ()), LIKELY(v0.c1), ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END, CAST(v0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((v0.c1, v0.c0, v0.c2, v0.c2, v0.c1)) NOT BETWEEN ((((v0.c0)=(v0.c0)), ((v0.c1) IS FALSE), ('' IN ()), LIKELY(v0.c1), ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END, CAST(v0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c1, v0.c0, v0.c2, v0.c2, v0.c1)) NOT BETWEEN ((((v0.c0)==(v0.c0)), ((v0.c1) IS FALSE), ('' IN ()), LIKELY(v0.c1), ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))) AND ((((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE v0.c1  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c1 END, CAST(v0.c2 AS REAL), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)), v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)LIKE(CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c1 END)) DESC;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN (+ (t0.c0)) THEN (NULL IN ()) WHEN (((v0.c2))>((0.8118261004958572))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(v0.c0)) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN (t0.c0 IN (v0.c0, t0.c2)) THEN (((v0.c2)) BETWEEN (('xjRaïxbf')) AND ((t0.c0))) WHEN ((v0.c2) NOT BETWEEN ('o/n+JG\rpb') AND (t0.c1)) THEN ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY v0.c0 ASC  NULLS LAST, ((((v0.c1) NOTNULL))=(((t0.c1)%(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN (NULL IN ()) WHEN (((v0.c2))>((0.8118261004958572))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(v0.c0)) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN (t0.c0 IN (v0.c0, t0.c2)) THEN (((v0.c2)) BETWEEN (('xjRaïxbf')) AND ((t0.c0))) WHEN ((v0.c2) NOT BETWEEN ('o/n+JG\rpb') AND (t0.c1)) THEN ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST, ((((v0.c1) NOTNULL))=(((t0.c1)%(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN (+ (t0.c0)) THEN (NULL IN ()) WHEN (((v0.c2))>((0.8118261004958572))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(v0.c0)) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN (t0.c0 IN (v0.c0, t0.c2)) THEN (((v0.c2)) BETWEEN (('xjRaïxbf')) AND ((t0.c0))) WHEN ((v0.c2) NOT BETWEEN ('o/n+JG\rpb') AND (t0.c1)) THEN ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY v0.c0 ASC  NULLS LAST, ((((v0.c1) NOTNULL))=(((t0.c1)%(v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (t0.c0)) THEN (NULL IN ()) WHEN (((v0.c2))>((0.8118261004958572))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(v0.c0)) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN (t0.c0 IN (v0.c0, t0.c2)) THEN (((v0.c2)) BETWEEN (('xjRaïxbf')) AND ((t0.c0))) WHEN ((v0.c2) NOT BETWEEN ('o/n+JG\rpb') AND (t0.c1)) THEN ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE t0.c1 COLLATE BINARY END) IS TRUE)  as count FROM t0, v0 ORDER BY v0.c0 ASC  NULLS LAST, ((((v0.c1) NOTNULL))=(((t0.c1)%(v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE WHEN (+ (t0.c0)) THEN (NULL IN ()) WHEN (((v0.c2))>((0.8118261004958572))) THEN CAST(t0.c0 AS NUMERIC) WHEN ((t0.c0)/(v0.c0)) THEN CASE WHEN t0.c0 THEN t0.c1 ELSE t0.c2 END WHEN (t0.c0 IN (v0.c0, t0.c2)) THEN (((v0.c2)) BETWEEN (('xjRaïxbf')) AND ((t0.c0))) WHEN ((v0.c2) NOT BETWEEN ('o/n+JG\rpb') AND (t0.c1)) THEN ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c1)) ELSE t0.c1 COLLATE BINARY END) ORDER BY v0.c0 ASC  NULLS LAST, ((((v0.c1) NOTNULL))=(((t0.c1)%(v0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c2, v0.c1)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (UNLIKELY(DISTINCT v0.c1)))) ORDER BY (v0.c2 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c2, v0.c1)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (UNLIKELY(DISTINCT v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c2 COLLATE NOCASE IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c2, v0.c1)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (UNLIKELY(DISTINCT v0.c1)))) ORDER BY (v0.c2 COLLATE NOCASE IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c2, v0.c1)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (UNLIKELY(DISTINCT v0.c1)))) IS TRUE)  as count FROM v0 ORDER BY (v0.c2 COLLATE NOCASE IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((LTRIM(v0.c2, v0.c1)) BETWEEN ((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))) AND (UNLIKELY(DISTINCT v0.c1)))) ORDER BY (v0.c2 COLLATE NOCASE IN ()) ASC;
SELECT * FROM v0 WHERE (CAST(((('-105725030')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-105725030')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((('-105725030')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('-105725030')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS BLOB)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(((('-105725030')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) AS BLOB));
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((v0.c2)>=(v0.c0)))) AND (((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((v0.c2)>=(v0.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((v0.c2)>=(v0.c0)))) AND (((NOT (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c2)) BETWEEN ((((v0.c2)>=(v0.c0)))) AND (((NOT (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((v0.c2)) BETWEEN ((((v0.c2)>=(v0.c0)))) AND (((NOT (t0.c0))))));
SELECT COUNT(*) FROM v0, t0 WHERE (LIKELY(((v0.c0)*(t0.c2)))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))>((CAST(t0.c1 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0)*(t0.c2)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 NOT INDEXED ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))>((CAST(t0.c1 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (LIKELY(((v0.c0)*(t0.c2)))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))>((CAST(t0.c1 AS INTEGER))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELY(((v0.c0)*(t0.c2)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0 NOT INDEXED ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))>((CAST(t0.c1 AS INTEGER))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (LIKELY(((v0.c0)*(t0.c2)))) ORDER BY (((CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c2 END))>((CAST(t0.c1 AS INTEGER))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((((((v0.c1)AND(t0.c0)))OR('&/.)Omc')))) AND ((0x447d95a3))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((((v0.c1)AND(t0.c0)))OR('&/.)Omc')))) AND ((0x447d95a3)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((((((v0.c1)AND(t0.c0)))OR('&/.)Omc')))) AND ((0x447d95a3))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((((((v0.c1)AND(t0.c0)))OR('&/.)Omc')))) AND ((0x447d95a3)))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((v0.c1)) NOT BETWEEN ((((((v0.c1)AND(t0.c0)))OR('&/.)Omc')))) AND ((0x447d95a3))));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)||((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)||((+ (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)||((+ (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE NOCASE)||((+ (v0.c2)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (0.1418617086705748 IN ()) WHERE (ABS((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((t0.c0 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (0.1418617086705748 IN ()));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (0.1418617086705748 IN ()) WHERE (ABS((t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((ABS((t0.c0 IN ()))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (0.1418617086705748 IN ()));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (0.1418617086705748 IN ()) WHERE (ABS((t0.c0 IN ())));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((t0.c0 IN ()), DATE(t0.c2, t0.c2, t0.c2), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, t0.c1)) BETWEEN (((t0.c0 IN ()), DATE(t0.c2, t0.c2, t0.c2), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((t0.c0 IN ()), DATE(t0.c2, t0.c2, t0.c2), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, NULL))));
SELECT SUM(count) FROM (SELECT (((((t0.c2, t0.c0, t0.c1)) BETWEEN (((t0.c0 IN ()), DATE(t0.c2, t0.c2, t0.c2), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, NULL)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c2, t0.c0, t0.c1)) BETWEEN (((t0.c0 IN ()), DATE(t0.c2, t0.c2, t0.c2), (t0.c0 IN ()))) AND ((((((t0.c0)OR(t0.c2)))OR(t0.c2)), CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c2 ELSE t0.c1 END, NULL))));
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2) ISNULL) WHEN x'4512' THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2) ISNULL) WHEN x'4512' THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2) ISNULL) WHEN x'4512' THEN v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2) ISNULL) WHEN x'4512' THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE ((v0.c2) BETWEEN (v0.c0) AND (v0.c1))  WHEN ((v0.c1) IS TRUE) THEN v0.c0 COLLATE RTRIM WHEN ((((v0.c0)AND(v0.c2)))OR(v0.c0)) THEN ((v0.c2) ISNULL) WHEN x'4512' THEN v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC)) ISNULL) WHERE (((((v0.c2)*(t0.c1))) IS FALSE)) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))AND((- (v0.c1)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))))OR(COALESCE(v0.c2, v0.c0, v0.c0, v0.c2, 1.389138532E9, v0.c2))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(t0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC)) ISNULL) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))AND((- (v0.c1)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))))OR(COALESCE(v0.c2, v0.c0, v0.c0, v0.c2, 1.389138532E9, v0.c2))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC)) ISNULL) WHERE (((((v0.c2)*(t0.c1))) IS FALSE)) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))AND((- (v0.c1)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))))OR(COALESCE(v0.c2, v0.c0, v0.c0, v0.c2, 1.389138532E9, v0.c2))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)*(t0.c1))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC)) ISNULL) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))AND((- (v0.c1)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))))OR(COALESCE(v0.c2, v0.c0, v0.c0, v0.c2, 1.389138532E9, v0.c2))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM v0 FULL OUTER JOIN t0 ON ((CAST(v0.c1 AS NUMERIC)) ISNULL) WHERE (((((v0.c2)*(t0.c1))) IS FALSE)) ORDER BY ((((((((((t0.c0) BETWEEN (t0.c1) AND (t0.c0)))AND((- (v0.c1)))))AND((((v0.c0)) BETWEEN ((t0.c0)) AND ((t0.c2))))))OR(COALESCE(v0.c2, v0.c0, v0.c0, v0.c2, 1.389138532E9, v0.c2))))OR(((v0.c0) NOT BETWEEN (t0.c2) AND (v0.c0)))) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((CAST(v0.c1 AS TEXT) IN ())) ORDER BY ((((((((v0.c2)AND('f|.eP%\n5A')))AND(v0.c0)))OR(t0.c2)))OR(t0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((v0.c2)AND('f|.eP%\n5A')))AND(v0.c0)))OR(t0.c2)))OR(t0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c1 AS TEXT) IN ())) ORDER BY ((((((((v0.c2)AND('f|.eP%\n5A')))AND(v0.c0)))OR(t0.c2)))OR(t0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((((((((v0.c2)AND('f|.eP%\n5A')))AND(v0.c0)))OR(t0.c2)))OR(t0.c1)) COLLATE BINARY ASC  NULLS LAST);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c1 AS TEXT) IN ())) ORDER BY ((((((((v0.c2)AND('f|.eP%\n5A')))AND(v0.c0)))OR(t0.c2)))OR(t0.c1)) COLLATE BINARY ASC  NULLS LAST;
SELECT * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c0)<(t0.c1)))))OR(((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (t0.c0)))OR(((t0.c0)<(t0.c1)))))OR(((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c0)<(t0.c1)))))OR(((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NOT (t0.c0)))OR(((t0.c0)<(t0.c1)))))OR(((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY t0.c0 ASC  NULLS LAST);
SELECT * FROM t0 WHERE ((((((NOT (t0.c0)))OR(((t0.c0)<(t0.c1)))))OR(((((((((t0.c1)OR(t0.c2)))AND(t0.c2)))AND(t0.c0)))OR(t0.c0))))) ORDER BY t0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((x'')) AND ((((t0.c2)LIKE(t0.c1)))))) ORDER BY ((t0.c0)>(t0.c0)) COLLATE BINARY ASC, (- (t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((x'')) AND ((((t0.c2)LIKE(t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)>(t0.c0)) COLLATE BINARY ASC, (- (t0.c0)) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((x'')) AND ((((t0.c2)LIKE(t0.c1)))))) ORDER BY ((t0.c0)>(t0.c0)) COLLATE BINARY ASC, (- (t0.c0)) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN ((x'')) AND ((((t0.c2)LIKE(t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0)>(t0.c0)) COLLATE BINARY ASC, (- (t0.c0)) DESC);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0)) BETWEEN ((x'')) AND ((((t0.c2)LIKE(t0.c1)))))) ORDER BY ((t0.c0)>(t0.c0)) COLLATE BINARY ASC, (- (t0.c0)) DESC;
SELECT * FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))<=(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))<=(t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))<=(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))<=(t0.c1))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c2) BETWEEN (t0.c2) AND (t0.c1)))<=(t0.c1)));
SELECT * FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)&(((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)&(((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)&(((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)&(((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)&(((t0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))));
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), 7.5370392E8, (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), ((v0.c2)<>(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), 7.5370392E8, (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), ((v0.c2)!=(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), 7.5370392E8, (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), ((v0.c2)<>(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TIME(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), 7.5370392E8, (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), ((v0.c2)!=(v0.c1)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (TIME(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)), (((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))), 7.5370392E8, (((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))), ((v0.c2)<>(v0.c1))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE 'Lw8D'  WHEN '' THEN v0.c0 END THEN CAST(v0.c2 AS BLOB) ELSE (NOT ('-2114334479')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 'Lw8D'  WHEN '' THEN v0.c0 END THEN CAST(v0.c2 AS BLOB) ELSE (NOT ('-2114334479')) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE 'Lw8D'  WHEN '' THEN v0.c0 END THEN CAST(v0.c2 AS BLOB) ELSE (NOT ('-2114334479')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE 'Lw8D'  WHEN '' THEN v0.c0 END THEN CAST(v0.c2 AS BLOB) ELSE (NOT ('-2114334479')) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN CASE 'Lw8D'  WHEN '' THEN v0.c0 END THEN CAST(v0.c2 AS BLOB) ELSE (NOT ('-2114334479')) END);
SELECT * FROM t0 CROSS JOIN v0 ON ((((((((((((((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(((v0.c1) BETWEEN (v0.c1) AND (t0.c1)))))AND(CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END)))OR(((t0.c1) NOTNULL))))OR((v0.c2 IN (t0.c1)))))AND(TRIM(v0.c0))))AND((((t0.c2, '886531323', v0.c2))=((x'', t0.c2, t0.c0))))) WHERE (((v0.c0 COLLATE RTRIM)<=((NOT (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END)==(CASE t0.c1  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)<=((NOT (v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((((((((((((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(((v0.c1) BETWEEN (v0.c1) AND (t0.c1)))))AND(CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END)))OR(((t0.c1) NOTNULL))))OR((v0.c2 IN (t0.c1)))))AND(TRIM(v0.c0))))AND((((t0.c2, '886531323', v0.c2))=((x'', t0.c2, t0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END)=(CASE t0.c1  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN v0 ON ((((((((((((((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(((v0.c1) BETWEEN (v0.c1) AND (t0.c1)))))AND(CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END)))OR(((t0.c1) NOTNULL))))OR((v0.c2 IN (t0.c1)))))AND(TRIM(v0.c0))))AND((((t0.c2, '886531323', v0.c2))=((x'', t0.c2, t0.c0))))) WHERE (((v0.c0 COLLATE RTRIM)<=((NOT (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END)==(CASE t0.c1  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)<=((NOT (v0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((((((((((((((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(((v0.c1) BETWEEN (v0.c1) AND (t0.c1)))))AND(CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END)))OR(((t0.c1) NOTNULL))))OR((v0.c2 IN (t0.c1)))))AND(TRIM(v0.c0))))AND((((t0.c2, '886531323', v0.c2))=((x'', t0.c2, t0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END)=(CASE t0.c1  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST);
SELECT * FROM t0 CROSS JOIN v0 ON ((((((((((((((v0.c1) NOT BETWEEN (t0.c0) AND (t0.c1)))AND(((v0.c1) BETWEEN (v0.c1) AND (t0.c1)))))AND(CASE WHEN v0.c2 THEN t0.c0 ELSE v0.c1 END)))OR(((t0.c1) NOTNULL))))OR((v0.c2 IN (t0.c1)))))AND(TRIM(v0.c0))))AND((((t0.c2, '886531323', v0.c2))=((x'', t0.c2, t0.c0))))) WHERE (((v0.c0 COLLATE RTRIM)<=((NOT (v0.c0))))) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 END)==(CASE t0.c1  WHEN t0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c0 WHEN v0.c0 THEN t0.c2 ELSE t0.c2 END))  NULLS FIRST;
SELECT * FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ('');
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c1)>=(v0.c0))))) ORDER BY (('Le') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, (((((v0.c1))>((v0.c0))))/(CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (('Le') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, (((((v0.c1))>((v0.c0))))/(CAST(v0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c1)>=(v0.c0))))) ORDER BY (('Le') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, (((((v0.c1))>((v0.c0))))/(CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c1)>=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (('Le') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, (((((v0.c1))>((v0.c0))))/(CAST(v0.c1 AS REAL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (((v0.c1)>=(v0.c0))))) ORDER BY (('Le') NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM, (((((v0.c1))>((v0.c0))))/(CAST(v0.c1 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (t0.c2))) AND (((NULL)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (t0.c2))) AND (((NULL)&(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (t0.c2))) AND (((NULL)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (t0.c2))) AND (((NULL)&(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN ((~ (t0.c2))) AND (((NULL)&(t0.c2)))));
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c2 END)OR(((v0.c1) ISNULL))))OR(((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0))))) ORDER BY (((((v0.c2 IN ()))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN '1197913860' WHEN v0.c2 THEN NULL ELSE v0.c2 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c2 END)OR(((v0.c1) ISNULL))))OR(((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2 IN ()))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN '1197913860' WHEN v0.c2 THEN NULL ELSE v0.c2 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c2 END)OR(((v0.c1) ISNULL))))OR(((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0))))) ORDER BY (((((v0.c2 IN ()))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN '1197913860' WHEN v0.c2 THEN NULL ELSE v0.c2 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c2 END)OR(((v0.c1) ISNULL))))OR(((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2 IN ()))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN '1197913860' WHEN v0.c2 THEN NULL ELSE v0.c2 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c2))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c2 END)OR(((v0.c1) ISNULL))))OR(((((((((v0.c2)OR(v0.c0)))OR(v0.c1)))AND(v0.c2)))OR(v0.c0))))) ORDER BY (((((v0.c2 IN ()))OR(CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN '1197913860' WHEN v0.c2 THEN NULL ELSE v0.c2 END)))AND(((((v0.c0)AND(v0.c0)))AND(v0.c2))))  NULLS LAST;
SELECT ALL * FROM v0 INDEXED BY i76 NATURAL JOIN t0 WHERE (((v0.c1) NOT NULL)) ORDER BY ((CAST(t0.c2 AS NUMERIC))|(CASE v0.c1  WHEN v0.c1 THEN t0.c2 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM v0 INDEXED BY i76 NATURAL JOIN t0 ORDER BY ((CAST(t0.c2 AS NUMERIC))|(CASE v0.c1  WHEN v0.c1 THEN t0.c2 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT ALL * FROM v0 INDEXED BY i76 NATURAL JOIN t0 WHERE (((v0.c1) NOT NULL)) ORDER BY ((CAST(t0.c2 AS NUMERIC))|(CASE v0.c1  WHEN v0.c1 THEN t0.c2 ELSE v0.c1 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1) NOT NULL)) IS TRUE)  as count FROM v0 INDEXED BY i76 NATURAL JOIN t0 ORDER BY ((CAST(t0.c2 AS NUMERIC))|(CASE v0.c1  WHEN v0.c1 THEN t0.c2 ELSE v0.c1 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((''))))AND((((t0.c1))>((t0.c1))))))AND(((((t0.c2)OR('683544133')))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((''))))AND((((t0.c1))>((t0.c1))))))AND(((((t0.c2)OR('683544133')))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((''))))AND((((t0.c1))>((t0.c1))))))AND(((((t0.c2)OR('683544133')))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((''))))AND((((t0.c1))>((t0.c1))))))AND(((((t0.c2)OR('683544133')))AND(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((''))))AND((((t0.c1))>((t0.c1))))))AND(((((t0.c2)OR('683544133')))AND(t0.c1)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c2 IN (v0.c2)))<(((((((((t0.c2)OR(0.29097679378971963)))OR(v0.c1)))OR(v0.c2)))OR(-4.83441177E8))))) ORDER BY ((CASE WHEN t0.c1 THEN v0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN t0.c2 ELSE v0.c2 END)<(((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) DESC  NULLS FIRST, ((((t0.c2 COLLATE RTRIM)OR((v0.c1 IN (v0.c2)))))OR(UNLIKELY(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c2)))<(((((((((t0.c2)OR(0.29097679378971963)))OR(v0.c1)))OR(v0.c2)))OR(-4.83441177E8))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE WHEN t0.c1 THEN v0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN t0.c2 ELSE v0.c2 END)<(((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) DESC  NULLS FIRST, ((((t0.c2 COLLATE RTRIM)OR((v0.c1 IN (v0.c2)))))OR(UNLIKELY(t0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c2 IN (v0.c2)))<(((((((((t0.c2)OR(0.29097679378971963)))OR(v0.c1)))OR(v0.c2)))OR(-4.83441177E8))))) ORDER BY ((CASE WHEN t0.c1 THEN v0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN t0.c2 ELSE v0.c2 END)<(((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) DESC  NULLS FIRST, ((((t0.c2 COLLATE RTRIM)OR((v0.c1 IN (v0.c2)))))OR(UNLIKELY(t0.c2))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN (v0.c2)))<(((((((((t0.c2)OR(0.29097679378971963)))OR(v0.c1)))OR(v0.c2)))OR(-4.83441177E8))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE WHEN t0.c1 THEN v0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN t0.c2 ELSE v0.c2 END)<(((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) DESC  NULLS FIRST, ((((t0.c2 COLLATE RTRIM)OR((v0.c1 IN (v0.c2)))))OR(UNLIKELY(t0.c2))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((v0.c2 IN (v0.c2)))<(((((((((t0.c2)OR(0.29097679378971963)))OR(v0.c1)))OR(v0.c2)))OR(-4.83441177E8))))) ORDER BY ((CASE WHEN t0.c1 THEN v0.c0 WHEN v0.c2 THEN t0.c0 WHEN v0.c1 THEN t0.c2 ELSE v0.c2 END)<(((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c0)))), (~ ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))) DESC  NULLS FIRST, ((((t0.c2 COLLATE RTRIM)OR((v0.c1 IN (v0.c2)))))OR(UNLIKELY(t0.c2))) DESC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((v0.c2)>(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c2)>(t0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((v0.c2)>(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c1 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY ((v0.c2)>(t0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (CAST(t0.c1 COLLATE NOCASE AS INTEGER)) ORDER BY ((v0.c2)>(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL * FROM v0, t0 WHERE ((((- (x'')))>(CASE v0.c1  WHEN v0.c0 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))>(CASE v0.c1  WHEN v0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((- (x'')))>(CASE v0.c1  WHEN v0.c0 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (x'')))>(CASE v0.c1  WHEN v0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((- (x'')))>(CASE v0.c1  WHEN v0.c0 THEN t0.c2 END)));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((x'', v0.c1, 0.20757159974058603)) NOT BETWEEN ((((v0.c1)||(v0.c1)), ((v0.c0) IS TRUE), ((0.1075471425382496)<=(v0.c2)))) AND (((v0.c2 IN ()), CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (0.7047390143956146))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', v0.c1, 0.20757159974058603)) NOT BETWEEN ((((v0.c1)||(v0.c1)), ((v0.c0) IS TRUE), ((0.1075471425382496)<=(v0.c2)))) AND (((v0.c2 IN ()), CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (0.7047390143956146)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((x'', v0.c1, 0.20757159974058603)) NOT BETWEEN ((((v0.c1)||(v0.c1)), ((v0.c0) IS TRUE), ((0.1075471425382496)<=(v0.c2)))) AND (((v0.c2 IN ()), CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (0.7047390143956146))))));
SELECT SUM(count) FROM (SELECT ALL (((((x'', v0.c1, 0.20757159974058603)) NOT BETWEEN ((((v0.c1)||(v0.c1)), ((v0.c0) IS TRUE), ((0.1075471425382496)<=(v0.c2)))) AND (((v0.c2 IN ()), CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (0.7047390143956146)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((x'', v0.c1, 0.20757159974058603)) NOT BETWEEN ((((v0.c1)||(v0.c1)), ((v0.c0) IS TRUE), ((0.1075471425382496)<=(v0.c2)))) AND (((v0.c2 IN ()), CAST(v0.c0 AS BLOB), ((v0.c0) BETWEEN (v0.c1) AND (0.7047390143956146))))));
SELECT ALL * FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2)))|(((t0.c1)|(t0.c2))))) ORDER BY (((((((((t0.c2 IN ()))OR(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))AND(LTRIM(t0.c1, t0.c0))))AND(((t0.c1)<=(0Xffffffffda3627d6)))))OR(t0.c2))  NULLS FIRST, (- (((t0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))|(((t0.c1)|(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c2 IN ()))OR(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))AND(LTRIM(t0.c1, t0.c0))))AND(((t0.c1)<=(0Xffffffffda3627d6)))))OR(t0.c2))  NULLS FIRST, (- (((t0.c0) IS FALSE))) ASC);
SELECT ALL * FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2)))|(((t0.c1)|(t0.c2))))) ORDER BY (((((((((t0.c2 IN ()))OR(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))AND(LTRIM(t0.c1, t0.c0))))AND(((t0.c1)<=(0Xffffffffda3627d6)))))OR(t0.c2))  NULLS FIRST, (- (((t0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c0)))AND(t0.c2)))|(((t0.c1)|(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY (((((((((t0.c2 IN ()))OR(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))AND(LTRIM(t0.c1, t0.c0))))AND(((t0.c1)<=(0Xffffffffda3627d6)))))OR(t0.c2))  NULLS FIRST, (- (((t0.c0) IS FALSE))) ASC);
SELECT ALL * FROM t0 WHERE (((((((t0.c1)AND(t0.c0)))AND(t0.c2)))|(((t0.c1)|(t0.c2))))) ORDER BY (((((((((t0.c2 IN ()))OR(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))))AND(LTRIM(t0.c1, t0.c0))))AND(((t0.c1)<=(0Xffffffffda3627d6)))))OR(t0.c2))  NULLS FIRST, (- (((t0.c0) IS FALSE))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((- (v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((- (v0.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, t0.c0, t0.c2)) BETWEEN ((((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))AND(v0.c1)))OR(t0.c1)), TRIM(t0.c0), (((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c0))))) AND (((+ (v0.c2)), CAST(t0.c1 AS TEXT), (((v0.c2))<((t0.c0)))))) WHERE ((((~ (t0.c2))) BETWEEN (((t0.c1)<<(t0.c0))) AND ((((v0.c0, NULL, v0.c1)) BETWEEN ((-0.0, x'c179', t0.c2)) AND ((v0.c1, v0.c2, t0.c0)))))) ORDER BY (((v0.c0 IN ()))IS NOT((t0.c1 IN (t0.c2, v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) BETWEEN (((t0.c1)<<(t0.c0))) AND ((((v0.c0, NULL, v0.c1)) BETWEEN ((-0.0, x'c179', t0.c2)) AND ((v0.c1, v0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, t0.c0, t0.c2)) BETWEEN ((((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))AND(v0.c1)))OR(t0.c1)), TRIM(t0.c0), (((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c0))))) AND (((+ (v0.c2)), CAST(t0.c1 AS TEXT), (((v0.c2))<((t0.c0)))))) ORDER BY (((v0.c0 IN ()))IS NOT((t0.c1 IN (t0.c2, v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, t0.c0, t0.c2)) BETWEEN ((((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))AND(v0.c1)))OR(t0.c1)), TRIM(t0.c0), (((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c0))))) AND (((+ (v0.c2)), CAST(t0.c1 AS TEXT), (((v0.c2))<((t0.c0)))))) WHERE ((((~ (t0.c2))) BETWEEN (((t0.c1)<<(t0.c0))) AND ((((v0.c0, NULL, v0.c1)) BETWEEN ((-0.0, x'c179', t0.c2)) AND ((v0.c1, v0.c2, t0.c0)))))) ORDER BY (((v0.c0 IN ()))IS NOT((t0.c1 IN (t0.c2, v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c2))) BETWEEN (((t0.c1)<<(t0.c0))) AND ((((v0.c0, NULL, v0.c1)) BETWEEN ((-0.0, x'c179', t0.c2)) AND ((v0.c1, v0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, t0.c0, t0.c2)) BETWEEN ((((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))AND(v0.c1)))OR(t0.c1)), TRIM(t0.c0), (((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c0))))) AND (((+ (v0.c2)), CAST(t0.c1 AS TEXT), (((v0.c2))<((t0.c0)))))) ORDER BY (((v0.c0 IN ()))IS NOT((t0.c1 IN (t0.c2, v0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON (((v0.c0, t0.c0, t0.c2)) BETWEEN ((((((((((v0.c1)AND(v0.c0)))OR(v0.c1)))AND(v0.c1)))OR(t0.c1)), TRIM(t0.c0), (((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c0))))) AND (((+ (v0.c2)), CAST(t0.c1 AS TEXT), (((v0.c2))<((t0.c0)))))) WHERE ((((~ (t0.c2))) BETWEEN (((t0.c1)<<(t0.c0))) AND ((((v0.c0, NULL, v0.c1)) BETWEEN ((-0.0, x'c179', t0.c2)) AND ((v0.c1, v0.c2, t0.c0)))))) ORDER BY (((v0.c0 IN ()))IS NOT((t0.c1 IN (t0.c2, v0.c2))))  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (CAST('685497459' AS NUMERIC)) ORDER BY UNLIKELY(t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((CAST('685497459' AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY UNLIKELY(t0.c2));
SELECT ALL * FROM t0, v0 WHERE (CAST('685497459' AS NUMERIC)) ORDER BY UNLIKELY(t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((CAST('685497459' AS NUMERIC)) IS TRUE)  as count FROM t0, v0 ORDER BY UNLIKELY(t0.c2));
SELECT ALL * FROM t0, v0 WHERE (CAST('685497459' AS NUMERIC)) ORDER BY UNLIKELY(t0.c2);
SELECT * FROM t0 WHERE ((- (0.40326682891013566))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('{â§') AND (0X761cb8fe))  NULLS FIRST, (((t0.c1 IN ()))LIKE((t0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.40326682891013566))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('{â§') AND (0x761cb8fe))  NULLS FIRST, (((t0.c1 IN ()))LIKE((t0.c1 IN ())))  NULLS LAST);
SELECT * FROM t0 WHERE ((- (0.40326682891013566))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('{â§') AND (0X761cb8fe))  NULLS FIRST, (((t0.c1 IN ()))LIKE((t0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (0.40326682891013566))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('{â§') AND (0x761cb8fe))  NULLS FIRST, (((t0.c1 IN ()))LIKE((t0.c1 IN ())))  NULLS LAST);
SELECT * FROM t0 WHERE ((- (0.40326682891013566))) ORDER BY ((((((t0.c1)AND(t0.c0)))AND(t0.c2))) NOT BETWEEN ('{â§') AND (0X761cb8fe))  NULLS FIRST, (((t0.c1 IN ()))LIKE((t0.c1 IN ())))  NULLS LAST;
SELECT * FROM v0, t0 WHERE ((CAST(0Xffffffffc95cbec0 AS REAL) IN (CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, v0.c1, v0.c2)) AND ((v0.c2, '-593053264', t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0xffffffffc95cbec0 AS REAL) IN (CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, v0.c1, v0.c2)) AND ((v0.c2, '-593053264', t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((CAST(0Xffffffffc95cbec0 AS REAL) IN (CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, v0.c1, v0.c2)) AND ((v0.c2, '-593053264', t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0xffffffffc95cbec0 AS REAL) IN (CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, v0.c1, v0.c2)) AND ((v0.c2, '-593053264', t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE ((CAST(0Xffffffffc95cbec0 AS REAL) IN (CAST(v0.c0 AS INTEGER), (((t0.c0, t0.c0, t0.c1)) NOT BETWEEN ((t0.c1, v0.c1, v0.c2)) AND ((v0.c2, '-593053264', t0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY t0.c2 DESC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c2 DESC;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN ('m') AND (t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1) BETWEEN (t0.c2) AND (0xffffffffa0281605))  WHEN '-388890212' THEN COALESCE('850582306', t0.c0) WHEN ((t0.c2) IS TRUE) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END ASC, (~ ((t0.c0 IN (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) NOT BETWEEN ('m') AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c1) BETWEEN (t0.c2) AND (0Xffffffffa0281605))  WHEN '-388890212' THEN COALESCE('850582306', t0.c0) WHEN ((t0.c2) IS TRUE) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END ASC, (~ ((t0.c0 IN (t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN ('m') AND (t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1) BETWEEN (t0.c2) AND (0xffffffffa0281605))  WHEN '-388890212' THEN COALESCE('850582306', t0.c0) WHEN ((t0.c2) IS TRUE) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END ASC, (~ ((t0.c0 IN (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)>(t0.c0))) NOT BETWEEN ('m') AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c1) BETWEEN (t0.c2) AND (0Xffffffffa0281605))  WHEN '-388890212' THEN COALESCE('850582306', t0.c0) WHEN ((t0.c2) IS TRUE) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END ASC, (~ ((t0.c0 IN (t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>(t0.c0))) NOT BETWEEN ('m') AND (t0.c0 COLLATE BINARY))) ORDER BY CASE ((t0.c1) BETWEEN (t0.c2) AND (0xffffffffa0281605))  WHEN '-388890212' THEN COALESCE('850582306', t0.c0) WHEN ((t0.c2) IS TRUE) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))) WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c1)) END ASC, (~ ((t0.c0 IN (t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((+ (v0.c2))))<=((t0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c2))))<=((t0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((+ (v0.c2))))<=((t0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((+ (v0.c2))))<=((t0.c0)))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1)))));
SELECT ALL * FROM t0 NATURAL JOIN v0 WHERE (((((+ (v0.c2))))<=((t0.c0)))) ORDER BY (~ (((((v0.c0)AND(v0.c0)))AND(v0.c1))));
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1, v0.c1, v0.c0, v0.c2, v0.c2)) AND ((v0.c0, v0.c1, NULL, v0.c2, v0.c0, '469445268', v0.c2))) THEN ((v0.c1)<=(v0.c1)) ELSE MAX(x'', v0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1, v0.c1, v0.c0, v0.c2, v0.c2)) AND ((v0.c0, v0.c1, NULL, v0.c2, v0.c0, '469445268', v0.c2))) THEN ((v0.c1)<=(v0.c1)) ELSE MAX(x'', v0.c1) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1, v0.c1, v0.c0, v0.c2, v0.c2)) AND ((v0.c0, v0.c1, NULL, v0.c2, v0.c0, '469445268', v0.c2))) THEN ((v0.c1)<=(v0.c1)) ELSE MAX(x'', v0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1, v0.c1, v0.c0, v0.c2, v0.c2)) AND ((v0.c0, v0.c1, NULL, v0.c2, v0.c0, '469445268', v0.c2))) THEN ((v0.c1)<=(v0.c1)) ELSE MAX(x'', v0.c1) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE WHEN (((v0.c1, v0.c2, v0.c1, v0.c2, v0.c0, v0.c0, v0.c1)) BETWEEN ((v0.c2, v0.c2, v0.c1, v0.c1, v0.c0, v0.c2, v0.c2)) AND ((v0.c0, v0.c1, NULL, v0.c2, v0.c0, '469445268', v0.c2))) THEN ((v0.c1)<=(v0.c1)) ELSE MAX(x'', v0.c1) END);
SELECT * FROM t0, v0 WHERE (x'') ORDER BY ((((t0.c1) NOT NULL)) BETWEEN (x'0f8e') AND (((t0.c2)||(x'1787'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1) NOT NULL)) BETWEEN (x'0f8e') AND (((t0.c2)||(x'1787')))));
SELECT * FROM t0, v0 WHERE (x'') ORDER BY ((((t0.c1) NOT NULL)) BETWEEN (x'0f8e') AND (((t0.c2)||(x'1787'))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, v0 ORDER BY ((((t0.c1) NOT NULL)) BETWEEN (x'0f8e') AND (((t0.c2)||(x'1787')))));
SELECT * FROM t0, v0 WHERE (x'') ORDER BY ((((t0.c1) NOT NULL)) BETWEEN (x'0f8e') AND (((t0.c2)||(x'1787'))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((t0.c1) NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((- (((t0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS FALSE)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS FALSE)) ORDER BY v0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY v0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) IS FALSE)) ORDER BY v0.c1;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((NULL)AND(NULL)) WHERE (t0.c1) ORDER BY TRIM(((v0.c1) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULL)AND(NULL)) ORDER BY TRIM(((v0.c1) ISNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((NULL)AND(NULL)) WHERE (t0.c1) ORDER BY TRIM(((v0.c1) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON ((NULL)AND(NULL)) ORDER BY TRIM(((v0.c1) ISNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 CROSS JOIN v0 ON ((NULL)AND(NULL)) WHERE (t0.c1) ORDER BY TRIM(((v0.c1) ISNULL))  NULLS LAST;
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c2) BETWEEN ('7') AND ('382504797')))>=((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN ('7') AND ('382504797')))>=((NOT (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c2) BETWEEN ('7') AND ('382504797')))>=((NOT (v0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2) BETWEEN ('7') AND ('382504797')))>=((NOT (v0.c1))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 NOT INDEXED WHERE (((((v0.c2) BETWEEN ('7') AND ('382504797')))>=((NOT (v0.c1)))));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c1)AND(v0.c1)), (v0.c0 IN ()), v0.c1)) AND (((((v0.c1, v0.c1, v0.c0, v0.c2, v0.c0, v0.c1, v0.c1))=((v0.c1, v0.c2, '1113331597', v0.c0, v0.c1, v0.c0, v0.c2))), (((v0.c1))<((v0.c1))), v0.c0)))) ORDER BY ((+ (v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c1)AND(v0.c1)), (v0.c0 IN ()), v0.c1)) AND (((((v0.c1, v0.c1, v0.c0, v0.c2, v0.c0, v0.c1, v0.c1))=((v0.c1, v0.c2, '1113331597', v0.c0, v0.c1, v0.c0, v0.c2))), (((v0.c1))<((v0.c1))), v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c1)AND(v0.c1)), (v0.c0 IN ()), v0.c1)) AND (((((v0.c1, v0.c1, v0.c0, v0.c2, v0.c0, v0.c1, v0.c1))=((v0.c1, v0.c2, '1113331597', v0.c0, v0.c1, v0.c0, v0.c2))), (((v0.c1))<((v0.c1))), v0.c0)))) ORDER BY ((+ (v0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c1)AND(v0.c1)), (v0.c0 IN ()), v0.c1)) AND (((((v0.c1, v0.c1, v0.c0, v0.c2, v0.c0, v0.c1, v0.c1))=((v0.c1, v0.c2, '1113331597', v0.c0, v0.c1, v0.c0, v0.c2))), (((v0.c1))<((v0.c1))), v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((+ (v0.c0)) IN ())  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c1, v0.c1)) BETWEEN ((((v0.c1)AND(v0.c1)), (v0.c0 IN ()), v0.c1)) AND (((((v0.c1, v0.c1, v0.c0, v0.c2, v0.c0, v0.c1, v0.c1))=((v0.c1, v0.c2, '1113331597', v0.c0, v0.c1, v0.c0, v0.c2))), (((v0.c1))<((v0.c1))), v0.c0)))) ORDER BY ((+ (v0.c0)) IN ())  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN '>uEn' THEN t0.c1 WHEN v0.c0 THEN 'F&E&, ä' END AS INTEGER)) ORDER BY (('0.6837279635612196')GLOB(((((v0.c1)AND(t0.c0)))OR(t0.c1)))) DESC, CAST(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN '>uEn' THEN t0.c1 WHEN v0.c0 THEN 'F&E&, ä' END AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY (('0.6837279635612196')GLOB(((((v0.c1)AND(t0.c0)))OR(t0.c1)))) DESC, CAST(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN '>uEn' THEN t0.c1 WHEN v0.c0 THEN 'F&E&, ä' END AS INTEGER)) ORDER BY (('0.6837279635612196')GLOB(((((v0.c1)AND(t0.c0)))OR(t0.c1)))) DESC, CAST(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN '>uEn' THEN t0.c1 WHEN v0.c0 THEN 'F&E&, ä' END AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY (('0.6837279635612196')GLOB(((((v0.c1)AND(t0.c0)))OR(t0.c1)))) DESC, CAST(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (CAST(CASE WHEN v0.c1 THEN v0.c2 WHEN '>uEn' THEN t0.c1 WHEN v0.c0 THEN 'F&E&, ä' END AS INTEGER)) ORDER BY (('0.6837279635612196')GLOB(((((v0.c1)AND(t0.c0)))OR(t0.c1)))) DESC, CAST(((t0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS TEXT)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((NULL))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((NULL))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((NULL))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)) BETWEEN ((v0.c2)) AND ((NULL))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c1)) BETWEEN ((v0.c2)) AND ((NULL))) IN ()));
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c1)<>(v0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((v0.c1)<>(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c1)<>(v0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((v0.c1)<>(v0.c2)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (TYPEOF(DISTINCT ((v0.c1)<>(v0.c2))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c2))))) ORDER BY NULLIF(DISTINCT ((v0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), CAST(t0.c0 AS BLOB))  NULLS FIRST, CASE COALESCE(1597185388, t0.c2)  WHEN (NOT (v0.c2)) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE CASE WHEN 0.47961123248894566 THEN t0.c2 ELSE v0.c0 END END, ((((v0.c2) ISNULL)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY NULLIF(DISTINCT ((v0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), CAST(t0.c0 AS BLOB))  NULLS FIRST, CASE COALESCE(1597185388, t0.c2)  WHEN (NOT (v0.c2)) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE CASE WHEN 0.47961123248894566 THEN t0.c2 ELSE v0.c0 END END, ((((v0.c2) ISNULL)) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c2))))) ORDER BY NULLIF(DISTINCT ((v0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), CAST(t0.c0 AS BLOB))  NULLS FIRST, CASE COALESCE(1597185388, t0.c2)  WHEN (NOT (v0.c2)) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE CASE WHEN 0.47961123248894566 THEN t0.c2 ELSE v0.c0 END END, ((((v0.c2) ISNULL)) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY NULLIF(DISTINCT ((v0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), CAST(t0.c0 AS BLOB))  NULLS FIRST, CASE COALESCE(1597185388, t0.c2)  WHEN (NOT (v0.c2)) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE CASE WHEN 0.47961123248894566 THEN t0.c2 ELSE v0.c0 END END, ((((v0.c2) ISNULL)) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c2) BETWEEN (t0.c1) AND (t0.c0)))<=(((v0.c0) NOT BETWEEN (v0.c1) AND (t0.c2))))) ORDER BY NULLIF(DISTINCT ((v0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)), CAST(t0.c0 AS BLOB))  NULLS FIRST, CASE COALESCE(1597185388, t0.c2)  WHEN (NOT (v0.c2)) THEN ((((t0.c1)AND(t0.c2)))AND(t0.c1)) ELSE CASE WHEN 0.47961123248894566 THEN t0.c2 ELSE v0.c0 END END, ((((v0.c2) ISNULL)) ISNULL) ASC  NULLS LAST;
SELECT * FROM v0, t0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c2  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c2  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c1))) IN ())) ORDER BY t0.c2  NULLS LAST;
SELECT ALL * FROM t0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((x'' IN ()) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST((x'' IN ()) AS INTEGER));
SELECT COUNT(*) FROM v0 WHERE ((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND(v0.c2)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (HEX('-908244815'));
SELECT SUM(count) FROM (SELECT ((HEX('-908244815')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (HEX('-908244815'));
SELECT SUM(count) FROM (SELECT ((HEX('-908244815')) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (HEX('-908244815'));
SELECT ALL COUNT(*) FROM t0 WHERE (LENGTH((t0.c0 IN ()))) ORDER BY (((((t0.c0, t0.c0, t0.c2))<>((-596936413, t0.c0, t0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c2))!=((-596936413, t0.c0, t0.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (LENGTH((t0.c0 IN ()))) ORDER BY (((((t0.c0, t0.c0, t0.c2))<>((-596936413, t0.c0, t0.c0)))) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((t0.c0 IN ()))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0, t0.c0, t0.c2))!=((-596936413, t0.c0, t0.c0)))) NOT NULL) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (LENGTH((t0.c0 IN ()))) ORDER BY (((((t0.c0, t0.c0, t0.c2))<>((-596936413, t0.c0, t0.c0)))) NOT NULL) DESC;
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)/(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)/(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)/(t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)/(t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0)/(t0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (CAST(IFNULL(t0.c0, t0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c0, t0.c1) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(IFNULL(t0.c0, t0.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(t0.c0, t0.c1) AS REAL)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(IFNULL(t0.c0, t0.c1) AS REAL));
SELECT COUNT(*) FROM v0 WHERE ((((0.4276457287676957)) NOT BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((0.7313878938115619 COLLATE NOCASE)))) ORDER BY ((LIKELY(DISTINCT v0.c1))>>(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.4276457287676957)) NOT BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((0.7313878938115619 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(DISTINCT v0.c1))>>(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((0.4276457287676957)) NOT BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((0.7313878938115619 COLLATE NOCASE)))) ORDER BY ((LIKELY(DISTINCT v0.c1))>>(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.4276457287676957)) NOT BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((0.7313878938115619 COLLATE NOCASE)))) IS TRUE)  as count FROM v0 ORDER BY ((LIKELY(DISTINCT v0.c1))>>(v0.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((((0.4276457287676957)) NOT BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((0.7313878938115619 COLLATE NOCASE)))) ORDER BY ((LIKELY(DISTINCT v0.c1))>>(v0.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c2 ASC, json_quote((- (v0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC, json_quote((- (v0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c2 ASC, json_quote((- (v0.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC, json_quote((- (v0.c2)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY v0.c2 ASC, json_quote((- (v0.c2)))  NULLS LAST;
SELECT * FROM t0, v0 WHERE (((ABS(v0.c1)) BETWEEN ((0.8310399716590495 IN (t0.c1))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c1)) BETWEEN ((0.8310399716590495 IN (t0.c1))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((ABS(v0.c1)) BETWEEN ((0.8310399716590495 IN (t0.c1))) AND (((x'') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c1)) BETWEEN ((0.8310399716590495 IN (t0.c1))) AND (((x'') NOT NULL)))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((ABS(v0.c1)) BETWEEN ((0.8310399716590495 IN (t0.c1))) AND (((x'') NOT NULL))));
SELECT * FROM t0, v0 WHERE ('-1636067711');
SELECT SUM(count) FROM (SELECT ALL (('-1636067711') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('-1636067711');
SELECT SUM(count) FROM (SELECT ALL (('-1636067711') IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ('-1636067711');
SELECT ALL * FROM v0 WHERE (((v0.c2) NOT BETWEEN (0.6088173725768691) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c2))=((v0.c0)))) IS TRUE), v0.c0 ASC  NULLS FIRST, (((-775138183 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (0.6088173725768691) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))=((v0.c0)))) IS TRUE), v0.c0 ASC  NULLS FIRST, (((-775138183 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c2) NOT BETWEEN (0.6088173725768691) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c2))=((v0.c0)))) IS TRUE), v0.c0 ASC  NULLS FIRST, (((-775138183 IN ())) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c2) NOT BETWEEN (0.6088173725768691) AND (((v0.c0)%(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c2))=((v0.c0)))) IS TRUE), v0.c0 ASC  NULLS FIRST, (((-775138183 IN ())) NOT NULL)  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((v0.c2) NOT BETWEEN (0.6088173725768691) AND (((v0.c0)%(v0.c0))))) ORDER BY (((((v0.c2))=((v0.c0)))) IS TRUE), v0.c0 ASC  NULLS FIRST, (((-775138183 IN ())) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c1 IN ())  WHEN ((t0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c0)) WHEN (t0.c1 IN (t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)&(t0.c0)) THEN (t0.c2 IN (t0.c0)) WHEN (t0.c2 IN ()) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c1 IN ())  WHEN ((t0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c0)) WHEN (t0.c1 IN (t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)&(t0.c0)) THEN (t0.c2 IN (t0.c0)) WHEN (t0.c2 IN ()) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c1 IN ())  WHEN ((t0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c0)) WHEN (t0.c1 IN (t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)&(t0.c0)) THEN (t0.c2 IN (t0.c0)) WHEN (t0.c2 IN ()) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((CASE (t0.c1 IN ())  WHEN ((t0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c0)) WHEN (t0.c1 IN (t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)&(t0.c0)) THEN (t0.c2 IN (t0.c0)) WHEN (t0.c2 IN ()) THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE (t0.c1 IN ())  WHEN ((t0.c0) BETWEEN (t0.c1) AND (NULL)) THEN (~ (t0.c0)) WHEN CAST(t0.c0 AS NUMERIC) THEN ((((t0.c0)OR(t0.c1)))AND(t0.c0)) WHEN (t0.c1 IN (t0.c1)) THEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE t0.c2 END WHEN ((t0.c1)&(t0.c0)) THEN (t0.c2 IN (t0.c0)) WHEN (t0.c2 IN ()) THEN (t0.c0 IN ()) END) ORDER BY ((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))) ISNULL) DESC;
SELECT COUNT(*) FROM t0, v0 WHERE ((- (((v0.c2) IS TRUE)))) ORDER BY (NOT (((v0.c2) BETWEEN (t0.c2) AND (v0.c2)))), (((x'')) BETWEEN ((((v0.c0)<<(v0.c1)))) AND ((json_array(v0.c2, v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((v0.c2) BETWEEN (t0.c2) AND (v0.c2)))), (((x'')) BETWEEN ((((v0.c0)<<(v0.c1)))) AND ((json_array(v0.c2, v0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((- (((v0.c2) IS TRUE)))) ORDER BY (NOT (((v0.c2) BETWEEN (t0.c2) AND (v0.c2)))), (((x'')) BETWEEN ((((v0.c0)<<(v0.c1)))) AND ((json_array(v0.c2, v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c2) IS TRUE)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT (((v0.c2) BETWEEN (t0.c2) AND (v0.c2)))), (((x'')) BETWEEN ((((v0.c0)<<(v0.c1)))) AND ((json_array(v0.c2, v0.c0)))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((- (((v0.c2) IS TRUE)))) ORDER BY (NOT (((v0.c2) BETWEEN (t0.c2) AND (v0.c2)))), (((x'')) BETWEEN ((((v0.c0)<<(v0.c1)))) AND ((json_array(v0.c2, v0.c0)))) ASC;
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (((((v0.c1) ISNULL), UNLIKELY(DISTINCT v0.c1), NULLIF(v0.c2, v0.c0)))==((((v0.c0)!=(v0.c1)), v0.c0, TYPEOF(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1) ISNULL), UNLIKELY(DISTINCT v0.c1), NULLIF(v0.c2, v0.c0)))=((((v0.c0)<>(v0.c1)), v0.c0, TYPEOF(v0.c1)))));
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (((((v0.c1) ISNULL), UNLIKELY(DISTINCT v0.c1), NULLIF(v0.c2, v0.c0)))==((((v0.c0)!=(v0.c1)), v0.c0, TYPEOF(v0.c1))));
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c1) ISNULL), UNLIKELY(DISTINCT v0.c1), NULLIF(v0.c2, v0.c0)))=((((v0.c0)<>(v0.c1)), v0.c0, TYPEOF(v0.c1)))));
SELECT * FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c2))) NOT BETWEEN (CAST(v0.c1 AS TEXT)) AND (((NULL) BETWEEN (v0.c1) AND (v0.c1))))) ORDER BY (((((v0.c1) ISNULL), UNLIKELY(DISTINCT v0.c1), NULLIF(v0.c2, v0.c0)))==((((v0.c0)!=(v0.c1)), v0.c0, TYPEOF(v0.c1))));
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2, t0.c2, t0.c2))<((t0.c1, t0.c0, t0.c2))))AND(((t0.c0)GLOB(t0.c2)))))AND(((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)))))AND(t0.c1)))AND(((-6.62367219E8)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c2, t0.c2, t0.c2))<((t0.c1, t0.c0, t0.c2))))AND(((t0.c0)GLOB(t0.c2)))))AND(((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)))))AND(t0.c1)))AND(((-6.62367219E8)<=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2, t0.c2, t0.c2))<((t0.c1, t0.c0, t0.c2))))AND(((t0.c0)GLOB(t0.c2)))))AND(((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)))))AND(t0.c1)))AND(((-6.62367219E8)<=(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((t0.c2, t0.c2, t0.c2))<((t0.c1, t0.c0, t0.c2))))AND(((t0.c0)GLOB(t0.c2)))))AND(((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)))))AND(t0.c1)))AND(((-6.62367219E8)<=(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c2, t0.c2, t0.c2))<((t0.c1, t0.c0, t0.c2))))AND(((t0.c0)GLOB(t0.c2)))))AND(((t0.c2) NOT BETWEEN (NULL) AND (t0.c1)))))AND(t0.c1)))AND(((-6.62367219E8)<=(t0.c0)))));
SELECT * FROM v0 INNER JOIN t0 ON (((CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), ((t0.c0) BETWEEN (t0.c0) AND (v0.c0))))>=((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)), ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((x'', v0.c0, v0.c1)) AND ((v0.c2, t0.c0, v0.c0)))))) WHERE ((CAST(t0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), ((t0.c0) BETWEEN (t0.c0) AND (v0.c0))))>=((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)), ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((x'', v0.c0, v0.c1)) AND ((v0.c2, t0.c0, v0.c0)))))));
SELECT * FROM v0 INNER JOIN t0 ON (((CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), ((t0.c0) BETWEEN (t0.c0) AND (v0.c0))))>=((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)), ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((x'', v0.c0, v0.c1)) AND ((v0.c2, t0.c0, v0.c0)))))) WHERE ((CAST(t0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM v0 INNER JOIN t0 ON (((CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), ((t0.c0) BETWEEN (t0.c0) AND (v0.c0))))>=((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)), ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((x'', v0.c0, v0.c1)) AND ((v0.c2, t0.c0, v0.c0)))))));
SELECT * FROM v0 INNER JOIN t0 ON (((CAST(t0.c1 AS INTEGER), ((t0.c1) NOT BETWEEN (v0.c2) AND (v0.c2)), ((t0.c0) BETWEEN (t0.c0) AND (v0.c0))))>=((((((((((((((t0.c0)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0)), ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c0)), (((t0.c1, t0.c2, t0.c2)) NOT BETWEEN ((x'', v0.c0, v0.c1)) AND ((v0.c2, t0.c0, v0.c0)))))) WHERE ((CAST(t0.c0 AS BLOB) IN ()));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c1) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((t0.c1) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c1) IS TRUE));
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)<=(t0.c0))) ORDER BY LIKELIHOOD(DISTINCT x'ce21', 0.07475851652033716);
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)<=(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(DISTINCT x'ce21', 0.07475851652033716));
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)<=(t0.c0))) ORDER BY LIKELIHOOD(DISTINCT x'ce21', 0.07475851652033716);
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)<=(t0.c0))) IS TRUE)  as count FROM t0 ORDER BY LIKELIHOOD(DISTINCT x'ce21', 0.07475851652033716));
SELECT ALL * FROM t0 WHERE (((t0.c1 COLLATE BINARY)<=(t0.c0))) ORDER BY LIKELIHOOD(DISTINCT x'ce21', 0.07475851652033716);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c1);
SELECT * FROM v0 WHERE (((CASE x'bae2'  WHEN v0.c0 THEN v0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE x'bae2'  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE x'bae2'  WHEN v0.c0 THEN v0.c2 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE x'bae2'  WHEN v0.c0 THEN v0.c2 END) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE x'bae2'  WHEN v0.c0 THEN v0.c2 END) NOTNULL));
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((NOT (v0.c2)) IN ())) IS TRUE)  as count FROM v0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NOT (v0.c2)) IN ())) ORDER BY NULL DESC;
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((t0.c1) BETWEEN (t0.c0) AND (v0.c0)) IN ()), CASE WHEN ((((v0.c2)AND(t0.c2)))OR(t0.c2)) THEN ((v0.c1)GLOB(v0.c1)) ELSE ((v0.c1) BETWEEN (t0.c1) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c1) BETWEEN (t0.c0) AND (v0.c0)) IN ()), CASE WHEN ((((v0.c2)AND(t0.c2)))OR(t0.c2)) THEN ((v0.c1)GLOB(v0.c1)) ELSE ((v0.c1) BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((t0.c1) BETWEEN (t0.c0) AND (v0.c0)) IN ()), CASE WHEN ((((v0.c2)AND(t0.c2)))OR(t0.c2)) THEN ((v0.c1)GLOB(v0.c1)) ELSE ((v0.c1) BETWEEN (t0.c1) AND (t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM v0, t0 ORDER BY (((t0.c1) BETWEEN (t0.c0) AND (v0.c0)) IN ()), CASE WHEN ((((v0.c2)AND(t0.c2)))OR(t0.c2)) THEN ((v0.c1)GLOB(v0.c1)) ELSE ((v0.c1) BETWEEN (t0.c1) AND (t0.c0)) END);
SELECT COUNT(*) FROM v0, t0 WHERE (((CAST(v0.c1 AS INTEGER)) IS TRUE)) ORDER BY (((t0.c1) BETWEEN (t0.c0) AND (v0.c0)) IN ()), CASE WHEN ((((v0.c2)AND(t0.c2)))OR(t0.c2)) THEN ((v0.c1)GLOB(v0.c1)) ELSE ((v0.c1) BETWEEN (t0.c1) AND (t0.c0)) END;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c1)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1)))GLOB(NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c1)))GLOB(NULL)));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)>(t0.c1)))GLOB(NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2)>(t0.c1)))GLOB(NULL)));
SELECT COUNT(*) FROM v0 WHERE (((((ABS(DISTINCT v0.c2))OR(((((v0.c1)AND(v0.c1)))OR(v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT v0.c2))OR(((((v0.c1)AND(v0.c1)))OR(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((ABS(DISTINCT v0.c2))OR(((((v0.c1)AND(v0.c1)))OR(v0.c0)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(DISTINCT v0.c2))OR(((((v0.c1)AND(v0.c1)))OR(v0.c0)))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((ABS(DISTINCT v0.c2))OR(((((v0.c1)AND(v0.c1)))OR(v0.c0)))))AND(v0.c0)));
SELECT ALL * FROM t0 WHERE (((~ (t0.c2)) IN ((((t0.c1))<=((t0.c2))), (t0.c0 IN ())))) ORDER BY (((CAST(t0.c1 AS INTEGER)))>=((CASE NULL  WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c2)) IN ((((t0.c1))<=((t0.c2))), (t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c1 AS INTEGER)))>=((CASE NULL  WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c2)) IN ((((t0.c1))<=((t0.c2))), (t0.c0 IN ())))) ORDER BY (((CAST(t0.c1 AS INTEGER)))>=((CASE NULL  WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((~ (t0.c2)) IN ((((t0.c1))<=((t0.c2))), (t0.c0 IN ())))) IS TRUE)  as count FROM t0 ORDER BY (((CAST(t0.c1 AS INTEGER)))>=((CASE NULL  WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (((~ (t0.c2)) IN ((((t0.c1))<=((t0.c2))), (t0.c0 IN ())))) ORDER BY (((CAST(t0.c1 AS INTEGER)))>=((CASE NULL  WHEN t0.c0 THEN t0.c0 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c0, v0.c1, v0.c1)) NOT BETWEEN (('-1578297916', t0.c2, t0.c2)) AND ((t0.c1, t0.c1, t0.c1))), 0.8099558784957414));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((t0.c0, v0.c1, v0.c1)) NOT BETWEEN (('-1578297916', t0.c2, t0.c2)) AND ((t0.c1, t0.c1, t0.c1))), 0.8099558784957414)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c0, v0.c1, v0.c1)) NOT BETWEEN (('-1578297916', t0.c2, t0.c2)) AND ((t0.c1, t0.c1, t0.c1))), 0.8099558784957414));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(DISTINCT (((t0.c0, v0.c1, v0.c1)) NOT BETWEEN (('-1578297916', t0.c2, t0.c2)) AND ((t0.c1, t0.c1, t0.c1))), 0.8099558784957414)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (LIKELIHOOD(DISTINCT (((t0.c0, v0.c1, v0.c1)) NOT BETWEEN (('-1578297916', t0.c2, t0.c2)) AND ((t0.c1, t0.c1, t0.c1))), 0.8099558784957414));
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN UPPER(DISTINCT t0.c0) THEN QUOTE(v0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT t0.c0) THEN QUOTE(v0.c2) END) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN UPPER(DISTINCT t0.c0) THEN QUOTE(v0.c2) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN UPPER(DISTINCT t0.c0) THEN QUOTE(v0.c2) END) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE WHEN UPPER(DISTINCT t0.c0) THEN QUOTE(v0.c2) END);
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL)))>(((+ (t0.c0)))))) ORDER BY (((t0.c2 IN ()))>>((('')<(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) NOTNULL)))>(((+ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ()))>>((('')<(t0.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL)))>(((+ (t0.c0)))))) ORDER BY (((t0.c2 IN ()))>>((('')<(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2) NOTNULL)))>(((+ (t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ()))>>((('')<(t0.c2)))) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((t0.c2) NOTNULL)))>(((+ (t0.c0)))))) ORDER BY (((t0.c2 IN ()))>>((('')<(t0.c2)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffff9beddcfc) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c2)));
SELECT SUM(count) FROM (SELECT ((((0xffffffff9beddcfc) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c2))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffff9beddcfc) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c2)));
SELECT SUM(count) FROM (SELECT ((((0xffffffff9beddcfc) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c2))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffff9beddcfc) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c2)));
SELECT ALL * FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY v0.c0 ASC, IFNULL(DISTINCT (v0.c0 IN (v0.c2)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, IFNULL(DISTINCT (v0.c0 IN (v0.c2)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY v0.c0 ASC, IFNULL(DISTINCT (v0.c0 IN (v0.c2)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC, IFNULL(DISTINCT (v0.c0 IN (v0.c2)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2))) COLLATE RTRIM COLLATE BINARY) ORDER BY v0.c0 ASC, IFNULL(DISTINCT (v0.c0 IN (v0.c2)), ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, v0 WHERE (((LIKE(t0.c2, t0.c0))-(((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c2, t0.c0))-(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((LIKE(t0.c2, t0.c0))-(((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKE(t0.c2, t0.c0))-(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((LIKE(t0.c2, t0.c0))-(((t0.c1) IS TRUE))));
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (t0.c1) AND (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST, ((t0.c2) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (t0.c1) AND (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST, ((t0.c2) ISNULL) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (t0.c1) AND (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST, ((t0.c2) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (t0.c1) AND (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS FIRST, ((t0.c2) ISNULL) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((t0.c1)))) BETWEEN (t0.c1) AND (((((((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(t0.c0)))AND(t0.c2)))AND(t0.c2))))) ORDER BY t0.c2 ASC  NULLS FIRST, ((t0.c2) ISNULL) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((LOWER(v0.c1))OR(((v0.c2)<<(v0.c0)))))OR('1å²¥x)}Y')));
SELECT SUM(count) FROM (SELECT ((((((LOWER(v0.c1))OR(((v0.c2)<<(v0.c0)))))OR('1å²¥x)}Y'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((LOWER(v0.c1))OR(((v0.c2)<<(v0.c0)))))OR('1å²¥x)}Y')));
SELECT SUM(count) FROM (SELECT ((((((LOWER(v0.c1))OR(((v0.c2)<<(v0.c0)))))OR('1å²¥x)}Y'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((LOWER(v0.c1))OR(((v0.c2)<<(v0.c0)))))OR('1å²¥x)}Y')));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, NULL)))) IS FALSE)) ORDER BY ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))AND(((((t0.c2)OR(t0.c0)))OR(t0.c1)))))AND(((t0.c0)+(t0.c0)))))AND(((('-1687403757')) BETWEEN ((t0.c1)) AND ((t0.c0))))))AND((t0.c1 IN (t0.c1)))), ((t0.c2)GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, NULL)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))AND(((((t0.c2)OR(t0.c0)))OR(t0.c1)))))AND(((t0.c0)+(t0.c0)))))AND(((('-1687403757')) BETWEEN ((t0.c1)) AND ((t0.c0))))))AND((t0.c1 IN (t0.c1)))), ((t0.c2)GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, NULL)))) IS FALSE)) ORDER BY ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))AND(((((t0.c2)OR(t0.c0)))OR(t0.c1)))))AND(((t0.c0)+(t0.c0)))))AND(((('-1687403757')) BETWEEN ((t0.c1)) AND ((t0.c0))))))AND((t0.c1 IN (t0.c1)))), ((t0.c2)GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, NULL)))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))AND(((((t0.c2)OR(t0.c0)))OR(t0.c1)))))AND(((t0.c0)+(t0.c0)))))AND(((('-1687403757')) BETWEEN ((t0.c1)) AND ((t0.c0))))))AND((t0.c1 IN (t0.c1)))), ((t0.c2)GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c1, t0.c0, NULL)))) IS FALSE)) ORDER BY ((((((((((((t0.c2)OR(t0.c1)))AND(t0.c1)))AND(((((t0.c2)OR(t0.c0)))OR(t0.c1)))))AND(((t0.c0)+(t0.c0)))))AND(((('-1687403757')) BETWEEN ((t0.c1)) AND ((t0.c0))))))AND((t0.c1 IN (t0.c1)))), ((t0.c2)GLOB(CAST(t0.c0 AS NUMERIC)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN (((t0.c2))=((t0.c2))) THEN COALESCE(DISTINCT t0.c1, t0.c1, t0.c1, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c2))  WHEN (((t0.c2))==((t0.c2))) THEN COALESCE(DISTINCT t0.c1, t0.c1, t0.c1, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN (((t0.c2))=((t0.c2))) THEN COALESCE(DISTINCT t0.c1, t0.c1, t0.c1, t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (t0.c2))  WHEN (((t0.c2))==((t0.c2))) THEN COALESCE(DISTINCT t0.c1, t0.c1, t0.c1, t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (NOT (t0.c2))  WHEN (((t0.c2))=((t0.c2))) THEN COALESCE(DISTINCT t0.c1, t0.c1, t0.c1, t0.c0) END);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY LOWER(DISTINCT (((v0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c1, NULL)) AND ((v0.c0, v0.c1, v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT (((v0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c1, NULL)) AND ((v0.c0, v0.c1, v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY LOWER(DISTINCT (((v0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c1, NULL)) AND ((v0.c0, v0.c1, v0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY LOWER(DISTINCT (((v0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c1, NULL)) AND ((v0.c0, v0.c1, v0.c2))))  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (CAST(v0.c1 AS REAL) COLLATE BINARY) ORDER BY LOWER(DISTINCT (((v0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c0, v0.c1, NULL)) AND ((v0.c0, v0.c1, v0.c2))))  NULLS FIRST;
SELECT * FROM t0 WHERE ((((((' *C')AND(x'')))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((' *C')AND(x'')))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((' *C')AND(x'')))AND(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((' *C')AND(x'')))AND(t0.c0)) IN ())) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((' *C')AND(x'')))AND(t0.c0)) IN ()));
SELECT ALL * FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (t0.c2);
SELECT * FROM v0 WHERE (TRIM(DISTINCT 0.02626485574842241));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.02626485574842241)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT 0.02626485574842241));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT 0.02626485574842241)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TRIM(DISTINCT 0.02626485574842241));
SELECT * FROM v0, t0 WHERE (UPPER(COALESCE(v0.c1, v0.c1, v0.c2, t0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(COALESCE(v0.c1, v0.c1, v0.c2, t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (UPPER(COALESCE(v0.c1, v0.c1, v0.c2, t0.c0)));
SELECT SUM(count) FROM (SELECT ((UPPER(COALESCE(v0.c1, v0.c1, v0.c2, t0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (UPPER(COALESCE(v0.c1, v0.c1, v0.c2, t0.c0)));
SELECT * FROM v0 CROSS JOIN t0 ON (('1504475154' COLLATE NOCASE)OR(CASE WHEN '1.' THEN v0.c2 WHEN '1e500' THEN v0.c0 WHEN t0.c2 THEN t0.c1 END)) WHERE (UNLIKELY(DISTINCT CAST(2040267972 AS NUMERIC))) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(2040267972 AS NUMERIC))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (('1504475154' COLLATE NOCASE)OR(CASE WHEN '1.' THEN v0.c2 WHEN '1e500' THEN v0.c0 WHEN t0.c2 THEN t0.c1 END)) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON (('1504475154' COLLATE NOCASE)OR(CASE WHEN '1.' THEN v0.c2 WHEN '1e500' THEN v0.c0 WHEN t0.c2 THEN t0.c1 END)) WHERE (UNLIKELY(DISTINCT CAST(2040267972 AS NUMERIC))) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT CAST(2040267972 AS NUMERIC))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (('1504475154' COLLATE NOCASE)OR(CASE WHEN '1.' THEN v0.c2 WHEN '1e500' THEN v0.c0 WHEN t0.c2 THEN t0.c1 END)) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC);
SELECT * FROM v0 CROSS JOIN t0 ON (('1504475154' COLLATE NOCASE)OR(CASE WHEN '1.' THEN v0.c2 WHEN '1e500' THEN v0.c0 WHEN t0.c2 THEN t0.c1 END)) WHERE (UNLIKELY(DISTINCT CAST(2040267972 AS NUMERIC))) ORDER BY ((v0.c0 COLLATE RTRIM) ISNULL) DESC;
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY LIKELY(v0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c2) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY LIKELY(v0.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM v0 ORDER BY LIKELY(v0.c2) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (CAST((v0.c0 IN ()) AS BLOB)) ORDER BY LIKELY(v0.c2) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((((NULL)AND(0.7224628232795957)))AND(((((v0.c1)OR(v0.c0)))AND(v0.c2)))))OR((v0.c2 IN ()))))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(0.7224628232795957)))AND(((((v0.c1)OR(v0.c0)))AND(v0.c2)))))OR((v0.c2 IN ()))))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((NULL)AND(0.7224628232795957)))AND(((((v0.c1)OR(v0.c0)))AND(v0.c2)))))OR((v0.c2 IN ()))))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)))AND(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)AND(0.7224628232795957)))AND(((((v0.c1)OR(v0.c0)))AND(v0.c2)))))OR((v0.c2 IN ()))))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)))AND(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((NULL)AND(0.7224628232795957)))AND(((((v0.c1)OR(v0.c0)))AND(v0.c2)))))OR((v0.c2 IN ()))))AND(CASE v0.c1  WHEN v0.c2 THEN v0.c1 END)))AND(v0.c2 COLLATE NOCASE)));
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS INTEGER) IN (((v0.c2)IS(v0.c2)), ((((t0.c1)OR(v0.c0)))AND(t0.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(NULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS INTEGER) IN (((v0.c2)IS(v0.c2)), ((((t0.c1)OR(v0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY SQLITE_COMPILEOPTION_USED(NULL) COLLATE NOCASE DESC);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS INTEGER) IN (((v0.c2)IS(v0.c2)), ((((t0.c1)OR(v0.c0)))AND(t0.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(NULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c2 AS INTEGER) IN (((v0.c2)IS(v0.c2)), ((((t0.c1)OR(v0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM v0, t0 ORDER BY SQLITE_COMPILEOPTION_USED(NULL) COLLATE NOCASE DESC);
SELECT * FROM v0, t0 WHERE ((CAST(v0.c2 AS INTEGER) IN (((v0.c2)IS(v0.c2)), ((((t0.c1)OR(v0.c0)))AND(t0.c2))))) ORDER BY SQLITE_COMPILEOPTION_USED(NULL) COLLATE NOCASE DESC;
SELECT * FROM v0, t0 INDEXED BY i5 WHERE ((RTRIM(0.8265776547618352) IN ()));
SELECT SUM(count) FROM (SELECT (((RTRIM(0.8265776547618352) IN ())) IS TRUE)  as count FROM v0, t0 INDEXED BY i5);
SELECT * FROM v0, t0 INDEXED BY i5 WHERE ((RTRIM(0.8265776547618352) IN ()));
SELECT SUM(count) FROM (SELECT (((RTRIM(0.8265776547618352) IN ())) IS TRUE)  as count FROM v0, t0 INDEXED BY i5);
SELECT * FROM v0, t0 INDEXED BY i5 WHERE ((RTRIM(0.8265776547618352) IN ()));
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)+(v0.c2))))) ORDER BY (- (CAST(NULL AS BLOB))), (- (((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2)+(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(NULL AS BLOB))), (- (((v0.c0)|(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)+(v0.c2))))) ORDER BY (- (CAST(NULL AS BLOB))), (- (((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c2)+(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (- (CAST(NULL AS BLOB))), (- (((v0.c0)|(v0.c0))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((~ (((v0.c2)+(v0.c2))))) ORDER BY (- (CAST(NULL AS BLOB))), (- (((v0.c0)|(v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((v0.c2 IN ())))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((- ((v0.c2 IN ()))));
SELECT ALL * FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN (((((t0.c2)AND(v0.c2)))AND(0.5018247414412889)), CAST(t0.c1 AS NUMERIC)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c1 COLLATE BINARY IN (((((t0.c2)AND(v0.c2)))AND(0.5018247414412889)), CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL) DESC);
SELECT ALL * FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN (((((t0.c2)AND(v0.c2)))AND(0.5018247414412889)), CAST(t0.c1 AS NUMERIC)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((t0.c1 COLLATE BINARY IN (((((t0.c2)AND(v0.c2)))AND(0.5018247414412889)), CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL) DESC);
SELECT ALL * FROM v0, t0 WHERE ((t0.c1 COLLATE BINARY IN (((((t0.c2)AND(v0.c2)))AND(0.5018247414412889)), CAST(t0.c1 AS NUMERIC)))) ORDER BY ((t0.c0 COLLATE RTRIM) NOTNULL) DESC;
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS REAL)) ORDER BY CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS REAL)) ORDER BY CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS REAL)) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS TEXT) COLLATE BINARY);
SELECT ALL * FROM v0 WHERE (CAST(((v0.c0) NOTNULL) AS REAL)) ORDER BY CAST(v0.c0 AS TEXT) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))) NOT NULL)) ORDER BY (~ (TYPEOF(DISTINCT v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (TYPEOF(DISTINCT v0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))) NOT NULL)) ORDER BY (~ (TYPEOF(DISTINCT v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY (~ (TYPEOF(DISTINCT v0.c2)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c1) NOT BETWEEN (v0.c2) AND (v0.c0))) NOT NULL)) ORDER BY (~ (TYPEOF(DISTINCT v0.c2)))  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((v0.c1)/(v0.c2)))AND(CASE WHEN v0.c1 THEN v0.c1 END)))OR((NOT (462910673))))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)/(v0.c2)))AND(CASE WHEN v0.c1 THEN v0.c1 END)))OR((NOT (462910673))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM v0 WHERE (((((((v0.c1)/(v0.c2)))AND(CASE WHEN v0.c1 THEN v0.c1 END)))OR((NOT (462910673))))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c1)/(v0.c2)))AND(CASE WHEN v0.c1 THEN v0.c1 END)))OR((NOT (462910673))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL));
SELECT * FROM v0 WHERE (((((((v0.c1)/(v0.c2)))AND(CASE WHEN v0.c1 THEN v0.c1 END)))OR((NOT (462910673))))) ORDER BY ((v0.c0 COLLATE RTRIM) NOTNULL);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST, (~ (((t0.c2)IS NOT(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST, (~ (((t0.c2)IS NOT(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST, (~ (((t0.c2)IS NOT(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, t0 ORDER BY CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST, (~ (((t0.c2)IS NOT(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((t0.c1 IN ()) COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS REAL) DESC  NULLS LAST, (~ (((t0.c2)IS NOT(v0.c0)))) DESC;
SELECT COUNT(*) FROM v0 WHERE (0.6918870091105663) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END) NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((0.6918870091105663) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END) NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (0.6918870091105663) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END) NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((0.6918870091105663) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END) NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((+ (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (0.6918870091105663) ORDER BY ((CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END) NOT BETWEEN (((((v0.c0)AND(v0.c2)))AND(v0.c2))) AND ((+ (v0.c0))));
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT COUNT(*) FROM v0 INDEXED BY i76 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)IS(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)IS(v0.c2))))) IS TRUE)  as count FROM v0 INDEXED BY i76);
SELECT COUNT(*) FROM v0 INDEXED BY i76 WHERE (((v0.c0) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)IS(v0.c2)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)IS(v0.c2))))) IS TRUE)  as count FROM v0 INDEXED BY i76);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER(t0.c0) THEN (~ (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(t0.c0) THEN (~ (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER(t0.c0) THEN (~ (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN UPPER(t0.c0) THEN (~ (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN UPPER(t0.c0) THEN (~ (t0.c1)) ELSE CAST(t0.c1 AS INTEGER) END);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT x'8766') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT x'8766') COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT x'8766') COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT x'8766') COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TYPEOF(DISTINCT x'8766') COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)GLOB(v0.c0))) NOT BETWEEN ((v0.c1 IN ())) AND ((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2 COLLATE RTRIM, t0.c2, t0.c1)) AND ((((t0.c0) NOT NULL), ((t0.c0)%(t0.c1)), ((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2 COLLATE RTRIM, t0.c2, t0.c1)) AND ((((t0.c0) NOT NULL), ((t0.c0)%(t0.c1)), ((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2 COLLATE RTRIM, t0.c2, t0.c1)) AND ((((t0.c0) NOT NULL), ((t0.c0)%(t0.c1)), ((t0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2 COLLATE RTRIM, t0.c2, t0.c1)) AND ((((t0.c0) NOT NULL), ((t0.c0)%(t0.c1)), ((t0.c0) ISNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2 COLLATE RTRIM, t0.c2, t0.c1)) AND ((((t0.c0) NOT NULL), ((t0.c0)%(t0.c1)), ((t0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((COALESCE(DISTINCT v0.c0, v0.c2, v0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT v0.c0, v0.c2, v0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((COALESCE(DISTINCT v0.c0, v0.c2, v0.c0, v0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((COALESCE(DISTINCT v0.c0, v0.c2, v0.c0, v0.c0) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((COALESCE(DISTINCT v0.c0, v0.c2, v0.c0, v0.c0) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((v0.c1))<((t0.c2))))*((('5||U') ISNULL)))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((NULL))) IN ()) DESC  NULLS FIRST, QUOTE(CAST(v0.c1 AS INTEGER)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))<((t0.c2))))*((('5||U') ISNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((NULL))) IN ()) DESC  NULLS FIRST, QUOTE(CAST(v0.c1 AS INTEGER)) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((v0.c1))<((t0.c2))))*((('5||U') ISNULL)))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((NULL))) IN ()) DESC  NULLS FIRST, QUOTE(CAST(v0.c1 AS INTEGER)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c1))<((t0.c2))))*((('5||U') ISNULL)))) IS TRUE)  as count FROM v0, t0 ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((NULL))) IN ()) DESC  NULLS FIRST, QUOTE(CAST(v0.c1 AS INTEGER)) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((((v0.c1))<((t0.c2))))*((('5||U') ISNULL)))) ORDER BY ((((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((NULL))) IN ()) DESC  NULLS FIRST, QUOTE(CAST(v0.c1 AS INTEGER)) ASC;
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN ()))IS(MIN(v0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))IS(MIN(v0.c0, NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN ()))IS(MIN(v0.c0, NULL))));
SELECT SUM(count) FROM (SELECT (((((v0.c2 IN ()))IS(MIN(v0.c0, NULL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c2 IN ()))IS(MIN(v0.c0, NULL))));
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c2)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c2)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((TRIM(t0.c2)) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((TRIM(t0.c2)) IS FALSE));
SELECT * FROM v0 WHERE (MIN(CAST(v0.c0 AS NUMERIC), (+ (x'')))) ORDER BY ((((v0.c1) IS FALSE))>(((((v0.c2)AND(v0.c1)))AND(v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c0 AS NUMERIC), (+ (x'')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS FALSE))>(((((v0.c2)AND(v0.c1)))AND(v0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (MIN(CAST(v0.c0 AS NUMERIC), (+ (x'')))) ORDER BY ((((v0.c1) IS FALSE))>(((((v0.c2)AND(v0.c1)))AND(v0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((MIN(CAST(v0.c0 AS NUMERIC), (+ (x'')))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1) IS FALSE))>(((((v0.c2)AND(v0.c1)))AND(v0.c1)))) DESC  NULLS LAST);
SELECT * FROM v0 WHERE (MIN(CAST(v0.c0 AS NUMERIC), (+ (x'')))) ORDER BY ((((v0.c1) IS FALSE))>(((((v0.c2)AND(v0.c1)))AND(v0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((((t0.c1)OR(t0.c2)))OR(v0.c1)))))OR((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)AND(((((t0.c1)OR(t0.c2)))OR(v0.c1)))))OR((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((((t0.c1)OR(t0.c2)))OR(v0.c1)))))OR((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))) ORDER BY t0.c2 DESC;
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE RTRIM)AND(((((t0.c1)OR(t0.c2)))OR(v0.c1)))))OR((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 NATURAL JOIN v0 ORDER BY t0.c2 DESC);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN v0 WHERE (((((t0.c0 COLLATE RTRIM)AND(((((t0.c1)OR(t0.c2)))OR(v0.c1)))))OR((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))) ORDER BY t0.c2 DESC;
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT COALESCE(v0.c2, v0.c1, v0.c1, 0.8265776547618352))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT COALESCE(v0.c2, v0.c1, v0.c1, 0.8265776547618352))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT COALESCE(v0.c2, v0.c1, v0.c1, 0.8265776547618352))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT COALESCE(v0.c2, v0.c1, v0.c1, 0.8265776547618352))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM v0 WHERE (TYPEOF(DISTINCT COALESCE(v0.c2, v0.c1, v0.c1, 0.8265776547618352))) ORDER BY ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2 COLLATE BINARY)) DESC;
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON CASE WHEN v0.c1 THEN ((v0.c0)GLOB(t0.c1)) END WHERE (TRIM(DISTINCT (((t0.c1))<=((t0.c1))), ((((v0.c1)AND(v0.c0)))OR(NULL)))) ORDER BY ((((0.3318769841620737) IS TRUE)) NOTNULL), t0.c0, CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((t0.c1))<=((t0.c1))), ((((v0.c1)AND(v0.c0)))OR(NULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE WHEN v0.c1 THEN ((v0.c0)GLOB(t0.c1)) END ORDER BY ((((0.3318769841620737) IS TRUE)) NOTNULL), t0.c0, CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON CASE WHEN v0.c1 THEN ((v0.c0)GLOB(t0.c1)) END WHERE (TRIM(DISTINCT (((t0.c1))<=((t0.c1))), ((((v0.c1)AND(v0.c0)))OR(NULL)))) ORDER BY ((((0.3318769841620737) IS TRUE)) NOTNULL), t0.c0, CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (((t0.c1))<=((t0.c1))), ((((v0.c1)AND(v0.c0)))OR(NULL)))) IS TRUE)  as count FROM v0 INNER JOIN t0 ON CASE WHEN v0.c1 THEN ((v0.c0)GLOB(t0.c1)) END ORDER BY ((((0.3318769841620737) IS TRUE)) NOTNULL), t0.c0, CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM DESC);
SELECT COUNT(*) FROM v0 INNER JOIN t0 ON CASE WHEN v0.c1 THEN ((v0.c0)GLOB(t0.c1)) END WHERE (TRIM(DISTINCT (((t0.c1))<=((t0.c1))), ((((v0.c1)AND(v0.c0)))OR(NULL)))) ORDER BY ((((0.3318769841620737) IS TRUE)) NOTNULL), t0.c0, CASE v0.c1  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE RTRIM DESC;
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))||(CASE WHEN v0.c2 THEN -868504325 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))||(CASE WHEN v0.c2 THEN -868504325 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))||(CASE WHEN v0.c2 THEN -868504325 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))||(CASE WHEN v0.c2 THEN -868504325 END))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c1) AND (v0.c2)))||(CASE WHEN v0.c2 THEN -868504325 END)));
SELECT ALL COUNT(*) FROM t0 WHERE (((load_extension(t0.c1, t0.c0))GLOB(JULIANDAY(t0.c0, t0.c2, '187683656')))) ORDER BY (NOT (t0.c1)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t0.c0 IN (t0.c1, t0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((load_extension(t0.c1, t0.c0))GLOB(JULIANDAY(t0.c0, t0.c2, '187683656')))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c1)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t0.c0 IN (t0.c1, t0.c1)) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((load_extension(t0.c1, t0.c0))GLOB(JULIANDAY(t0.c0, t0.c2, '187683656')))) ORDER BY (NOT (t0.c1)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t0.c0 IN (t0.c1, t0.c1)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((load_extension(t0.c1, t0.c0))GLOB(JULIANDAY(t0.c0, t0.c2, '187683656')))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c1)) COLLATE BINARY COLLATE NOCASE ASC, CAST((t0.c0 IN (t0.c1, t0.c1)) AS TEXT) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS BLOB)) ORDER BY (((NOT (v0.c1))) IS FALSE) DESC  NULLS LAST, (+ (((t0.c1)OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((NOT (v0.c1))) IS FALSE) DESC  NULLS LAST, (+ (((t0.c1)OR(t0.c1)))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS BLOB)) ORDER BY (((NOT (v0.c1))) IS FALSE) DESC  NULLS LAST, (+ (((t0.c1)OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY (((NOT (v0.c1))) IS FALSE) DESC  NULLS LAST, (+ (((t0.c1)OR(t0.c1)))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(v0.c2 COLLATE NOCASE AS BLOB)) ORDER BY (((NOT (v0.c1))) IS FALSE) DESC  NULLS LAST, (+ (((t0.c1)OR(t0.c1))));
SELECT * FROM t0 WHERE (((((((-1.974463292E9)OR(t0.c2)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((-1.974463292E9)OR(t0.c2)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((-1.974463292E9)OR(t0.c2)))AND(t0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((-1.974463292E9)OR(t0.c2)))AND(t0.c0))) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((-1.974463292E9)OR(t0.c2)))AND(t0.c0))) NOTNULL));
SELECT * FROM v0, t0 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((UPPER(t0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((UPPER(t0.c0)) IS FALSE) ASC);
SELECT * FROM v0, t0 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((UPPER(t0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) NOTNULL) IN ())) IS TRUE)  as count FROM v0, t0 ORDER BY ((UPPER(t0.c0)) IS FALSE) ASC);
SELECT * FROM v0, t0 WHERE ((((t0.c2) NOTNULL) IN ())) ORDER BY ((UPPER(t0.c0)) IS FALSE) ASC;
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN v0.c2 THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN ABS(t0.c0) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN v0.c2 THEN ABS(t0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c2 THEN ABS(t0.c0) END) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN v0.c2 THEN ABS(t0.c0) END);
SELECT * FROM v0 WHERE (((((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (x'')))))AND(x'')))OR(x'')))AND((((v0.c2))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (x'')))))AND(x'')))OR(x'')))AND((((v0.c2))>=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (x'')))))AND(x'')))OR(x'')))AND((((v0.c2))>=((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (x'')))))AND(x'')))OR(x'')))AND((((v0.c2))>=((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(((v0.c1) NOT BETWEEN (v0.c1) AND (x'')))))AND(x'')))OR(x'')))AND((((v0.c2))>=((v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ ((v0.c0 IN (v0.c2))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ ((v0.c0 IN (v0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (CASE ((((((((t0.c1)OR(t0.c0)))OR(x'c3c6')))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)) END) ORDER BY (((t0.c0 IN ()))IS(((t0.c0)+(t0.c2)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS NUMERIC) WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)>=(t0.c0)) WHEN 0.6781689670286591 THEN ((((t0.c2)AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c1)OR(t0.c0)))OR(x'c3c6')))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))IS(((t0.c0)+(t0.c2)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS NUMERIC) WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)>=(t0.c0)) WHEN 0.6781689670286591 THEN ((((t0.c2)AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((((((((t0.c1)OR(t0.c0)))OR(x'c3c6')))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)) END) ORDER BY (((t0.c0 IN ()))IS(((t0.c0)+(t0.c2)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS NUMERIC) WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)>=(t0.c0)) WHEN 0.6781689670286591 THEN ((((t0.c2)AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c1)OR(t0.c0)))OR(x'c3c6')))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)) END) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ()))IS(((t0.c0)+(t0.c2)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS NUMERIC) WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)>=(t0.c0)) WHEN 0.6781689670286591 THEN ((((t0.c2)AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((((((((t0.c1)OR(t0.c0)))OR(x'c3c6')))OR(t0.c1)))OR(t0.c1))  WHEN (t0.c0 IN ()) THEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))OR(t0.c1)) END) ORDER BY (((t0.c0 IN ()))IS(((t0.c0)+(t0.c2)))) DESC, CASE WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c2)) THEN CAST(t0.c1 AS NUMERIC) WHEN ((t0.c2) NOT NULL) THEN ((t0.c0)>=(t0.c0)) WHEN 0.6781689670286591 THEN ((((t0.c2)AND(t0.c1)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)-(v0.c2)))OR(v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)-(v0.c2)))OR(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)-(v0.c2)))OR(v0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c1)-(v0.c2)))OR(v0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c1)-(v0.c2)))OR(v0.c1 COLLATE NOCASE)));
SELECT ALL * FROM v0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c1 END AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN t0.c2 THEN t0.c1 END AS REAL)) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (CAST(CASE WHEN t0.c2 THEN t0.c1 END AS REAL));
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c1)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN (((t0.c1)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c1)<=(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN (((t0.c1)<=(t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((t0.c0 COLLATE NOCASE IN (((t0.c1)<=(t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) IS FALSE)) ORDER BY ((((((((((((((((((t0.c1) ISNULL))AND(t0.c0 COLLATE NOCASE)))OR((t0.c0 IN ()))))AND(UNLIKELY(t0.c1))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c0)))))OR((NOT (t0.c1)))))OR((- (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c0)))AND(0.36110801285744343)))OR(t0.c0)))OR(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((((((((t0.c1) ISNULL))AND(t0.c0 COLLATE NOCASE)))OR((t0.c0 IN ()))))AND(UNLIKELY(t0.c1))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c0)))))OR((NOT (t0.c1)))))OR((- (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c0)))AND(0.36110801285744343)))OR(t0.c0)))OR(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) IS FALSE)) ORDER BY ((((((((((((((((((t0.c1) ISNULL))AND(t0.c0 COLLATE NOCASE)))OR((t0.c0 IN ()))))AND(UNLIKELY(t0.c1))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c0)))))OR((NOT (t0.c1)))))OR((- (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c0)))AND(0.36110801285744343)))OR(t0.c0)))OR(t0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (t0.c0))) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY ((((((((((((((((((t0.c1) ISNULL))AND(t0.c0 COLLATE NOCASE)))OR((t0.c0 IN ()))))AND(UNLIKELY(t0.c1))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c0)))))OR((NOT (t0.c1)))))OR((- (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c0)))AND(0.36110801285744343)))OR(t0.c0)))OR(t0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (t0.c0))) IS FALSE)) ORDER BY ((((((((((((((((((t0.c1) ISNULL))AND(t0.c0 COLLATE NOCASE)))OR((t0.c0 IN ()))))AND(UNLIKELY(t0.c1))))OR(((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))OR(t0.c1)))AND(t0.c0)))))OR((NOT (t0.c1)))))OR((- (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(((((((((t0.c1)OR(t0.c0)))AND(0.36110801285744343)))OR(t0.c0)))OR(t0.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS NOT((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((v0.c1)IS NOT((v0.c2 IN (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c1) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((v0.c1)IS NOT((v0.c2 IN (v0.c0))))) ORDER BY ((v0.c1) ISNULL) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))*(CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))*(CAST(v0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(CAST(v0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))*(CAST(v0.c1 AS NUMERIC))));
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)AND(x'')))AND(0.48226689833366365))) ORDER BY CAST(t0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, (+ ((t0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(x'')))AND(0.48226689833366365))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, (+ ((t0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)AND(x'')))AND(0.48226689833366365))) ORDER BY CAST(t0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, (+ ((t0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)AND(x'')))AND(0.48226689833366365))) IS TRUE)  as count FROM t0, v0 ORDER BY CAST(t0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, (+ ((t0.c1 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((((v0.c0)AND(x'')))AND(0.48226689833366365))) ORDER BY CAST(t0.c1 COLLATE BINARY AS REAL)  NULLS FIRST, (+ ((t0.c1 IN ())))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c1)>>(t0.c2))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))==((t0.c2, t0.c2, t0.c2)))) AND (SQLITE_COMPILEOPTION_USED(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>>(t0.c2))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))==((t0.c2, t0.c2, t0.c2)))) AND (SQLITE_COMPILEOPTION_USED(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)>>(t0.c2))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))==((t0.c2, t0.c2, t0.c2)))) AND (SQLITE_COMPILEOPTION_USED(t0.c1))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)>>(t0.c2))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))==((t0.c2, t0.c2, t0.c2)))) AND (SQLITE_COMPILEOPTION_USED(t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1)>>(t0.c2))) NOT BETWEEN ((((t0.c0, t0.c0, t0.c0))==((t0.c2, t0.c2, t0.c2)))) AND (SQLITE_COMPILEOPTION_USED(t0.c1))));
SELECT * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c2)))<=(json_valid(t0.c2)))) ORDER BY (NOT ((((t0.c0))>((v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS(v0.c2)))<=(json_valid(t0.c2)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c0))>((v0.c1))))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c2)))<=(json_valid(t0.c2)))) ORDER BY (NOT ((((t0.c0))>((v0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)IS(v0.c2)))<=(json_valid(t0.c2)))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((((t0.c0))>((v0.c1))))) DESC  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((((t0.c2)IS(v0.c2)))<=(json_valid(t0.c2)))) ORDER BY (NOT ((((t0.c0))>((v0.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c2)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c2)))*(v0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c2)))*(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (v0.c2)))*(v0.c0))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((+ (v0.c2)))*(v0.c0)));
SELECT * FROM t0, v0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN v0.c2 END) NOT BETWEEN (((-596667963) NOT BETWEEN (t0.c0) AND (v0.c1))) AND (NULLIF(v0.c0, t0.c0)))) ORDER BY ((((0.8918540791412163) NOT BETWEEN (v0.c1) AND (x'')))<<(CASE WHEN t0.c2 THEN v0.c1 END)) ASC, (((((('-1087990250', t0.c0, v0.c2))!=((t0.c2, t0.c0, v0.c0))), x'' COLLATE BINARY, ((v0.c1)-(v0.c0))))>(((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))), ((((t0.c0)AND('1725834248')))AND(v0.c2)), TRIM(v0.c1, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c0 THEN v0.c2 END) NOT BETWEEN (((-596667963) NOT BETWEEN (t0.c0) AND (v0.c1))) AND (NULLIF(v0.c0, t0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((0.8918540791412163) NOT BETWEEN (v0.c1) AND (x'')))<<(CASE WHEN t0.c2 THEN v0.c1 END)) ASC, (((((('-1087990250', t0.c0, v0.c2))!=((t0.c2, t0.c0, v0.c0))), x'' COLLATE BINARY, ((v0.c1)-(v0.c0))))>(((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))), ((((t0.c0)AND('1725834248')))AND(v0.c2)), TRIM(v0.c1, t0.c0)))) ASC);
SELECT * FROM t0, v0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN v0.c2 END) NOT BETWEEN (((-596667963) NOT BETWEEN (t0.c0) AND (v0.c1))) AND (NULLIF(v0.c0, t0.c0)))) ORDER BY ((((0.8918540791412163) NOT BETWEEN (v0.c1) AND (x'')))<<(CASE WHEN t0.c2 THEN v0.c1 END)) ASC, (((((('-1087990250', t0.c0, v0.c2))!=((t0.c2, t0.c0, v0.c0))), x'' COLLATE BINARY, ((v0.c1)-(v0.c0))))>(((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))), ((((t0.c0)AND('1725834248')))AND(v0.c2)), TRIM(v0.c1, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c1  WHEN t0.c0 THEN v0.c2 END) NOT BETWEEN (((-596667963) NOT BETWEEN (t0.c0) AND (v0.c1))) AND (NULLIF(v0.c0, t0.c0)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((0.8918540791412163) NOT BETWEEN (v0.c1) AND (x'')))<<(CASE WHEN t0.c2 THEN v0.c1 END)) ASC, (((((('-1087990250', t0.c0, v0.c2))!=((t0.c2, t0.c0, v0.c0))), x'' COLLATE BINARY, ((v0.c1)-(v0.c0))))>(((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))), ((((t0.c0)AND('1725834248')))AND(v0.c2)), TRIM(v0.c1, t0.c0)))) ASC);
SELECT * FROM t0, v0 WHERE (((CASE t0.c1  WHEN t0.c0 THEN v0.c2 END) NOT BETWEEN (((-596667963) NOT BETWEEN (t0.c0) AND (v0.c1))) AND (NULLIF(v0.c0, t0.c0)))) ORDER BY ((((0.8918540791412163) NOT BETWEEN (v0.c1) AND (x'')))<<(CASE WHEN t0.c2 THEN v0.c1 END)) ASC, (((((('-1087990250', t0.c0, v0.c2))!=((t0.c2, t0.c0, v0.c0))), x'' COLLATE BINARY, ((v0.c1)-(v0.c0))))>(((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c1))), ((((t0.c0)AND('1725834248')))AND(v0.c2)), TRIM(v0.c1, t0.c0)))) ASC;
SELECT COUNT(*) FROM t0, v0 WHERE ('-587028335') ORDER BY (((v0.c1 IN ())) NOTNULL) ASC  NULLS FIRST, ((((x'')AND(LOWER(DISTINCT v0.c2))))AND(((t0.c1)&(v0.c0))))  NULLS FIRST, t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-587028335') IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c1 IN ())) NOTNULL) ASC  NULLS FIRST, ((((x'')AND(LOWER(DISTINCT v0.c2))))AND(((t0.c1)&(v0.c0))))  NULLS FIRST, t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ('-587028335') ORDER BY (((v0.c1 IN ())) NOTNULL) ASC  NULLS FIRST, ((((x'')AND(LOWER(DISTINCT v0.c2))))AND(((t0.c1)&(v0.c0))))  NULLS FIRST, t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-587028335') IS TRUE)  as count FROM t0, v0 ORDER BY (((v0.c1 IN ())) NOTNULL) ASC  NULLS FIRST, ((((x'')AND(LOWER(DISTINCT v0.c2))))AND(((t0.c1)&(v0.c0))))  NULLS FIRST, t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE ('-587028335') ORDER BY (((v0.c1 IN ())) NOTNULL) ASC  NULLS FIRST, ((((x'')AND(LOWER(DISTINCT v0.c2))))AND(((t0.c1)&(v0.c0))))  NULLS FIRST, t0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1)IS NOT(t0.c2)))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE RTRIM)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)<=((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)IS NOT(t0.c2)))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE RTRIM)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)<=((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1)IS NOT(t0.c2)))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE RTRIM)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)<=((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)IS NOT(t0.c2)))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE RTRIM)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0 ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)<=((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((((((((t0.c1)IS NOT(t0.c2)))AND(CAST(t0.c2 AS NUMERIC))))AND(t0.c1 COLLATE RTRIM)))AND(t0.c0)))AND(t0.c0 COLLATE RTRIM))) ORDER BY ((CASE t0.c1  WHEN t0.c1 THEN t0.c1 END)<=((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))) DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((('RLOV\rELr3') ISNULL)) AND (CAST(t0.c0 AS REAL)))) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((('RLOV\rELr3') ISNULL)) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((('RLOV\rELr3') ISNULL)) AND (CAST(t0.c0 AS REAL)))) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((('RLOV\rELr3') ISNULL)) AND (CAST(t0.c0 AS REAL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC  NULLS LAST);
SELECT * FROM t0 WHERE (((t0.c0) BETWEEN ((('RLOV\rELr3') ISNULL)) AND (CAST(t0.c0 AS REAL)))) ORDER BY t0.c2 ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, v0 WHERE (((((((0.8398401171957871)AND(v0.c1)))AND(t0.c0)))<(((x'') NOT NULL)))) ORDER BY ((((v0.c2)GLOB(t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.8398401171957871)AND(v0.c1)))AND(t0.c0)))<(((x'') NOT NULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c2)GLOB(t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((0.8398401171957871)AND(v0.c1)))AND(t0.c0)))<(((x'') NOT NULL)))) ORDER BY ((((v0.c2)GLOB(t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND ((NOT (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((0.8398401171957871)AND(v0.c1)))AND(t0.c0)))<(((x'') NOT NULL)))) IS TRUE)  as count FROM t0, v0 ORDER BY ((((v0.c2)GLOB(t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND ((NOT (t0.c0)))) DESC);
SELECT COUNT(*) FROM t0, v0 WHERE (((((((0.8398401171957871)AND(v0.c1)))AND(t0.c0)))<(((x'') NOT NULL)))) ORDER BY ((((v0.c2)GLOB(t0.c2))) NOT BETWEEN ((~ (t0.c0))) AND ((NOT (t0.c0)))) DESC;
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c2) IS TRUE)  WHEN ((t0.c1)+(t0.c2)) THEN ((t0.c1)==(x'')) WHEN CAST('0.007391837423234238' AS REAL) THEN CASE WHEN t0.c0 THEN -9.16207265E8 END WHEN ((v0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN v0.c1 END) ORDER BY ((LTRIM(v0.c2))>=(((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(v0.c2)))OR(t0.c1)))) ASC  NULLS LAST, ((t0.c0)=(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c2) IS TRUE)  WHEN ((t0.c1)+(t0.c2)) THEN ((t0.c1)=(x'')) WHEN CAST('0.007391837423234238' AS REAL) THEN CASE WHEN t0.c0 THEN -9.16207265E8 END WHEN ((v0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN v0.c1 END) IS TRUE)  as count FROM v0, t0 ORDER BY ((LTRIM(v0.c2))>=(((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(v0.c2)))OR(t0.c1)))) ASC  NULLS LAST, ((t0.c0)=(t0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c2) IS TRUE)  WHEN ((t0.c1)+(t0.c2)) THEN ((t0.c1)==(x'')) WHEN CAST('0.007391837423234238' AS REAL) THEN CASE WHEN t0.c0 THEN -9.16207265E8 END WHEN ((v0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN v0.c1 END) ORDER BY ((LTRIM(v0.c2))>=(((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(v0.c2)))OR(t0.c1)))) ASC  NULLS LAST, ((t0.c0)=(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c2) IS TRUE)  WHEN ((t0.c1)+(t0.c2)) THEN ((t0.c1)=(x'')) WHEN CAST('0.007391837423234238' AS REAL) THEN CASE WHEN t0.c0 THEN -9.16207265E8 END WHEN ((v0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN v0.c1 END) IS TRUE)  as count FROM v0, t0 ORDER BY ((LTRIM(v0.c2))>=(((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(v0.c2)))OR(t0.c1)))) ASC  NULLS LAST, ((t0.c0)=(t0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, t0 WHERE (CASE ((v0.c2) IS TRUE)  WHEN ((t0.c1)+(t0.c2)) THEN ((t0.c1)==(x'')) WHEN CAST('0.007391837423234238' AS REAL) THEN CASE WHEN t0.c0 THEN -9.16207265E8 END WHEN ((v0.c2) BETWEEN (t0.c2) AND (t0.c0)) THEN v0.c1 END) ORDER BY ((LTRIM(v0.c2))>=(((((((((v0.c0)OR(t0.c0)))AND(t0.c0)))OR(v0.c2)))OR(t0.c1)))) ASC  NULLS LAST, ((t0.c0)=(t0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE (- (t0.c0))  WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)) END);
SELECT * FROM v0 WHERE ((NOT (0xfffffffffc4a5d25 COLLATE NOCASE))) ORDER BY (((v0.c0 IN (v0.c1)))-((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, v0.c2 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xfffffffffc4a5d25 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c1)))-((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, v0.c2 COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (0xfffffffffc4a5d25 COLLATE NOCASE))) ORDER BY (((v0.c0 IN (v0.c1)))-((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, v0.c2 COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (0xfffffffffc4a5d25 COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN (v0.c1)))-((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, v0.c2 COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM v0 WHERE ((NOT (0xfffffffffc4a5d25 COLLATE NOCASE))) ORDER BY (((v0.c0 IN (v0.c1)))-((((v0.c0))>=((v0.c0))))) ASC  NULLS LAST, v0.c2 COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (json(x'')))) ORDER BY (v0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (json(x'')))) IS TRUE)  as count FROM t0, v0 ORDER BY (v0.c2 IN ()));
SELECT ALL COUNT(*) FROM t0, v0 WHERE ((~ (json(x'')))) ORDER BY (v0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (json(x'')))) IS TRUE)  as count FROM t0, v0 ORDER BY (v0.c2 IN ()));
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) AND ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) AND ((v0.c2 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) AND ((v0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ())) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) AND ((v0.c2 IN ())))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c1 IN ())) BETWEEN (((v0.c1) BETWEEN (v0.c0) AND (v0.c1))) AND ((v0.c2 IN ()))));
SELECT * FROM t0, v0 WHERE ((((~ (t0.c2)))<(((((v0.c0)AND(t0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))<(((((v0.c0)AND(t0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((~ (t0.c2)))<(((((v0.c0)AND(t0.c0)))AND(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c2)))<(((((v0.c0)AND(t0.c0)))AND(v0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((((~ (t0.c2)))<(((((v0.c0)AND(t0.c0)))AND(v0.c2)))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (t0.c2);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c2, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c2, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c2, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c2) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(t0.c2, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c2) NOT NULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((IFNULL(t0.c2, t0.c1)) BETWEEN (((t0.c0) NOT NULL)) AND (((t0.c2) NOT NULL))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c2 END)-(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c2 END)-(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c2 END)-(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c2 END)-(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((CASE WHEN v0.c0 THEN t0.c1 ELSE v0.c2 END)-(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON '850582306' WHERE ((NOT (UPPER(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT t0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '850582306');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON '850582306' WHERE ((NOT (UPPER(DISTINCT t0.c2))));
SELECT SUM(count) FROM (SELECT (((NOT (UPPER(DISTINCT t0.c2)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN t0 ON '850582306');
SELECT COUNT(*) FROM v0 FULL OUTER JOIN t0 ON '850582306' WHERE ((NOT (UPPER(DISTINCT t0.c2))));
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(0.6702504675462508 AS INTEGER)) IS FALSE)) ORDER BY (((((t0.c0))<=((t0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6702504675462508 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c0))<=((t0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(0.6702504675462508 AS INTEGER)) IS FALSE)) ORDER BY (((((t0.c0))<=((t0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.6702504675462508 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM t0, v0 ORDER BY (((((t0.c0))<=((t0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(0.6702504675462508 AS INTEGER)) IS FALSE)) ORDER BY (((((t0.c0))<=((t0.c0))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((('{Q+GBRí¶'))<>((t0.c0))))AND(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((('{Q+GBRí¶'))!=((t0.c0))))AND(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((('{Q+GBRí¶'))<>((t0.c0))))AND(t0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((('{Q+GBRí¶'))!=((t0.c0))))AND(t0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((('{Q+GBRí¶'))<>((t0.c0))))AND(t0.c2 COLLATE NOCASE)));
SELECT * FROM t0, v0 WHERE (((CASE t0.c2  WHEN 602300219 THEN v0.c0 END)||(((v0.c2)>=(v0.c0))))) ORDER BY ((CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END)AND((((v0.c1, x'', v0.c2, v0.c0, t0.c1))=((t0.c0, v0.c0, v0.c0, t0.c2, 0.48877048177924765)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN 602300219 THEN v0.c0 END)||(((v0.c2)>=(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END)AND((((v0.c1, x'', v0.c2, v0.c0, t0.c1))=((t0.c0, v0.c0, v0.c0, t0.c2, 0.48877048177924765)))))  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CASE t0.c2  WHEN 602300219 THEN v0.c0 END)||(((v0.c2)>=(v0.c0))))) ORDER BY ((CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END)AND((((v0.c1, x'', v0.c2, v0.c0, t0.c1))=((t0.c0, v0.c0, v0.c0, t0.c2, 0.48877048177924765)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c2  WHEN 602300219 THEN v0.c0 END)||(((v0.c2)>=(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY ((CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END)AND((((v0.c1, x'', v0.c2, v0.c0, t0.c1))=((t0.c0, v0.c0, v0.c0, t0.c2, 0.48877048177924765)))))  NULLS LAST);
SELECT * FROM t0, v0 WHERE (((CASE t0.c2  WHEN 602300219 THEN v0.c0 END)||(((v0.c2)>=(v0.c0))))) ORDER BY ((CASE WHEN t0.c2 THEN v0.c2 ELSE v0.c2 END)AND((((v0.c1, x'', v0.c2, v0.c0, t0.c1))=((t0.c0, v0.c0, v0.c0, t0.c2, 0.48877048177924765)))))  NULLS LAST;
SELECT * FROM t0 WHERE (CASE '-1339243291'  WHEN ((0.35723730776470985)*(t0.c2)) THEN t0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE '-1339243291'  WHEN ((0.35723730776470985)*(t0.c2)) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE '-1339243291'  WHEN ((0.35723730776470985)*(t0.c2)) THEN t0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE '-1339243291'  WHEN ((0.35723730776470985)*(t0.c2)) THEN t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE '-1339243291'  WHEN ((0.35723730776470985)*(t0.c2)) THEN t0.c0 COLLATE BINARY END);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE NULL  WHEN ((v0.c1)<=(x'')) THEN ((-2.127355184E9)|(t0.c2)) WHEN '\r\0Z' THEN (NULL IN ()) WHEN ((v0.c2)>=(v0.c2)) THEN ((t0.c2)|(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((v0.c1)<=(x'')) THEN ((-2.127355184E9)|(t0.c2)) WHEN '\r\0Z' THEN (NULL IN ()) WHEN ((v0.c2)>=(v0.c2)) THEN ((t0.c2)|(t0.c2)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE NULL  WHEN ((v0.c1)<=(x'')) THEN ((-2.127355184E9)|(t0.c2)) WHEN '\r\0Z' THEN (NULL IN ()) WHEN ((v0.c2)>=(v0.c2)) THEN ((t0.c2)|(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN ((v0.c1)<=(x'')) THEN ((-2.127355184E9)|(t0.c2)) WHEN '\r\0Z' THEN (NULL IN ()) WHEN ((v0.c2)>=(v0.c2)) THEN ((t0.c2)|(t0.c2)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CASE NULL  WHEN ((v0.c1)<=(x'')) THEN ((-2.127355184E9)|(t0.c2)) WHEN '\r\0Z' THEN (NULL IN ()) WHEN ((v0.c2)>=(v0.c2)) THEN ((t0.c2)|(t0.c2)) END);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c1)<=(UNLIKELY(v0.c0))) WHERE ((CASE WHEN t0.c1 THEN v0.c0 END IN ())) ORDER BY ((((t0.c2 COLLATE BINARY)AND(((v0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN v0.c0 END IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c1)<=(UNLIKELY(v0.c0))) ORDER BY ((((t0.c2 COLLATE BINARY)AND(((v0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c1)<=(UNLIKELY(v0.c0))) WHERE ((CASE WHEN t0.c1 THEN v0.c0 END IN ())) ORDER BY ((((t0.c2 COLLATE BINARY)AND(((v0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t0.c1 THEN v0.c0 END IN ())) IS TRUE)  as count FROM t0 INNER JOIN v0 ON ((t0.c1)<=(UNLIKELY(v0.c0))) ORDER BY ((((t0.c2 COLLATE BINARY)AND(((v0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON ((t0.c1)<=(UNLIKELY(v0.c0))) WHERE ((CASE WHEN t0.c1 THEN v0.c0 END IN ())) ORDER BY ((((t0.c2 COLLATE BINARY)AND(((v0.c1) NOT BETWEEN (t0.c1) AND (t0.c0)))))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (- ((~ (v0.c2)))) WHERE (CASE ((((t0.c0)OR(t0.c1)))AND(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN MIN(v0.c2, NULL) END) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)OR(t0.c1)))AND(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN MIN(v0.c2, NULL) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (- ((~ (v0.c2)))) ORDER BY v0.c1 ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (- ((~ (v0.c2)))) WHERE (CASE ((((t0.c0)OR(t0.c1)))AND(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN MIN(v0.c2, NULL) END) ORDER BY v0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t0.c0)OR(t0.c1)))AND(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN MIN(v0.c2, NULL) END) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (- ((~ (v0.c2)))) ORDER BY v0.c1 ASC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN v0 ON (- ((~ (v0.c2)))) WHERE (CASE ((((t0.c0)OR(t0.c1)))AND(v0.c0))  WHEN CAST(t0.c0 AS TEXT) THEN MIN(v0.c2, NULL) END) ORDER BY v0.c1 ASC;
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON json_type((((t0.c1))<=((t0.c0)))) WHERE (t0.c0) ORDER BY ((((t0.c0)*(t0.c1)))>>(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON json_type((((t0.c1))<=((t0.c0)))) ORDER BY ((((t0.c0)*(t0.c1)))>>(t0.c2 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON json_type((((t0.c1))<=((t0.c0)))) WHERE (t0.c0) ORDER BY ((((t0.c0)*(t0.c1)))>>(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON json_type((((t0.c1))<=((t0.c0)))) ORDER BY ((((t0.c0)*(t0.c1)))>>(t0.c2 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN v0 ON json_type((((t0.c1))<=((t0.c0)))) WHERE (t0.c0) ORDER BY ((((t0.c0)*(t0.c1)))>>(t0.c2 COLLATE NOCASE)) ASC;
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(x'' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(x'' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(x'' AS NUMERIC)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1 IN ())) BETWEEN (((t0.c0) IS TRUE)) AND (CAST(x'' AS NUMERIC))));
SELECT * FROM t0 WHERE (COALESCE((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c2, t0.c1))), ((t0.c1) NOT BETWEEN (-1.444400238E9) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c2, t0.c1))), ((t0.c1) NOT BETWEEN (-1.444400238E9) AND (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c2, t0.c1))), ((t0.c1) NOT BETWEEN (-1.444400238E9) AND (t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c2, t0.c1))), ((t0.c1) NOT BETWEEN (-1.444400238E9) AND (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (COALESCE((((t0.c0, t0.c2, t0.c2)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c1, t0.c2, t0.c1))), ((t0.c1) NOT BETWEEN (-1.444400238E9) AND (t0.c2))));
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CAST(v0.c2 AS NUMERIC))) ORDER BY CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN (t0.c2 IN (t0.c1, v0.c1)) WHEN CASE t0.c1  WHEN t0.c0 THEN -1974463292 END THEN ((((v0.c1)OR(t0.c2)))OR(v0.c2)) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (0.5883093336699156)) THEN ((t0.c0)<<(t0.c2)) WHEN ((t0.c0)/(v0.c0)) THEN 0.5028320350978945 WHEN (((v0.c2))<=((v0.c2))) THEN ((t0.c1) NOTNULL) END, ((v0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN (t0.c2 IN (t0.c1, v0.c1)) WHEN CASE t0.c1  WHEN t0.c0 THEN -1974463292 END THEN ((((v0.c1)OR(t0.c2)))OR(v0.c2)) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (0.5883093336699156)) THEN ((t0.c0)<<(t0.c2)) WHEN ((t0.c0)/(v0.c0)) THEN 0.5028320350978945 WHEN (((v0.c2))<=((v0.c2))) THEN ((t0.c1) NOTNULL) END, ((v0.c0) ISNULL) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CAST(v0.c2 AS NUMERIC))) ORDER BY CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN (t0.c2 IN (t0.c1, v0.c1)) WHEN CASE t0.c1  WHEN t0.c0 THEN -1974463292 END THEN ((((v0.c1)OR(t0.c2)))OR(v0.c2)) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (0.5883093336699156)) THEN ((t0.c0)<<(t0.c2)) WHEN ((t0.c0)/(v0.c0)) THEN 0.5028320350978945 WHEN (((v0.c2))<=((v0.c2))) THEN ((t0.c1) NOTNULL) END, ((v0.c0) ISNULL) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(v0.c2 AS NUMERIC))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN (t0.c2 IN (t0.c1, v0.c1)) WHEN CASE t0.c1  WHEN t0.c0 THEN -1974463292 END THEN ((((v0.c1)OR(t0.c2)))OR(v0.c2)) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (0.5883093336699156)) THEN ((t0.c0)<<(t0.c2)) WHEN ((t0.c0)/(v0.c0)) THEN 0.5028320350978945 WHEN (((v0.c2))<=((v0.c2))) THEN ((t0.c1) NOTNULL) END, ((v0.c0) ISNULL) COLLATE BINARY ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (TYPEOF(CAST(v0.c2 AS NUMERIC))) ORDER BY CASE (t0.c1 IN ())  WHEN CAST(t0.c2 AS BLOB) THEN (t0.c2 IN (t0.c1, v0.c1)) WHEN CASE t0.c1  WHEN t0.c0 THEN -1974463292 END THEN ((((v0.c1)OR(t0.c2)))OR(v0.c2)) WHEN ((t0.c0) NOT BETWEEN (t0.c2) AND (0.5883093336699156)) THEN ((t0.c0)<<(t0.c2)) WHEN ((t0.c0)/(v0.c0)) THEN 0.5028320350978945 WHEN (((v0.c2))<=((v0.c2))) THEN ((t0.c1) NOTNULL) END, ((v0.c0) ISNULL) COLLATE BINARY ASC;
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(t0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(t0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(t0.c1 AS REAL)))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE ((NOT (CAST(t0.c1 AS REAL))));
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c1 AS NUMERIC) AS INTEGER) WHERE ((((v0.c0)AND(t0.c0)) IN (((v0.c1) NOT NULL)))) ORDER BY ((t0.c0)GLOB(TRIM(v0.c1, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)AND(t0.c0)) IN (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c1 AS NUMERIC) AS INTEGER) ORDER BY ((t0.c0)GLOB(TRIM(v0.c1, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c1 AS NUMERIC) AS INTEGER) WHERE ((((v0.c0)AND(t0.c0)) IN (((v0.c1) NOT NULL)))) ORDER BY ((t0.c0)GLOB(TRIM(v0.c1, t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT (((((v0.c0)AND(t0.c0)) IN (((v0.c1) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c1 AS NUMERIC) AS INTEGER) ORDER BY ((t0.c0)GLOB(TRIM(v0.c1, t0.c0))) ASC);
SELECT COUNT(*) FROM t0 CROSS JOIN v0 ON CAST(CAST(v0.c1 AS NUMERIC) AS INTEGER) WHERE ((((v0.c0)AND(t0.c0)) IN (((v0.c1) NOT NULL)))) ORDER BY ((t0.c0)GLOB(TRIM(v0.c1, t0.c0))) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c1)))IS(t0.c1))) ORDER BY (((- (v0.c1)))>=(t0.c0)) DESC  NULLS LAST, ((((((((((t0.c0)AND(v0.c1)))AND(t0.c0)))AND(t0.c1)))AND(v0.c1)))<(((t0.c1) NOT BETWEEN (t0.c0) AND (-54918717)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(x'')))OR(v0.c1)))IS(t0.c1))) IS TRUE)  as count FROM v0, t0 ORDER BY (((- (v0.c1)))>=(t0.c0)) DESC  NULLS LAST, ((((((((((t0.c0)AND(v0.c1)))AND(t0.c0)))AND(t0.c1)))AND(v0.c1)))<(((t0.c1) NOT BETWEEN (t0.c0) AND (-54918717)))) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c1)))IS(t0.c1))) ORDER BY (((- (v0.c1)))>=(t0.c0)) DESC  NULLS LAST, ((((((((((t0.c0)AND(v0.c1)))AND(t0.c0)))AND(t0.c1)))AND(v0.c1)))<(((t0.c1) NOT BETWEEN (t0.c0) AND (-54918717)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)OR(x'')))OR(v0.c1)))IS(t0.c1))) IS TRUE)  as count FROM v0, t0 ORDER BY (((- (v0.c1)))>=(t0.c0)) DESC  NULLS LAST, ((((((((((t0.c0)AND(v0.c1)))AND(t0.c0)))AND(t0.c1)))AND(v0.c1)))<(((t0.c1) NOT BETWEEN (t0.c0) AND (-54918717)))) ASC);
SELECT COUNT(*) FROM v0, t0 WHERE (((((((v0.c0)OR(x'')))OR(v0.c1)))IS(t0.c1))) ORDER BY (((- (v0.c1)))>=(t0.c0)) DESC  NULLS LAST, ((((((((((t0.c0)AND(v0.c1)))AND(t0.c0)))AND(t0.c1)))AND(v0.c1)))<(((t0.c1) NOT BETWEEN (t0.c0) AND (-54918717)))) ASC;
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(1.043199173E9 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.043199173E9 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(1.043199173E9 AS BLOB) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(1.043199173E9 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(1.043199173E9 AS BLOB) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2)GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2)GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c2)GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2)GLOB(((t0.c0) BETWEEN (v0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (PRINTF(t0.c2));
SELECT SUM(count) FROM (SELECT ((PRINTF(t0.c2)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (PRINTF(t0.c2));
SELECT SUM(count) FROM (SELECT ((PRINTF(t0.c2)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (PRINTF(t0.c2));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)GLOB(CAST(-496532279 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)GLOB(CAST(-496532279 AS INTEGER)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)GLOB(CAST(-496532279 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((t0.c1)GLOB(CAST(-496532279 AS INTEGER)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((t0.c1)GLOB(CAST(-496532279 AS INTEGER))));
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))%(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%(CAST(v0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))%(CAST(v0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0 IN ()))%(CAST(v0.c0 AS INTEGER))));
SELECT * FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ())) ORDER BY '' ASC, '4áµ¬'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM v0 ORDER BY '' ASC, '4áµ¬'  NULLS FIRST);
SELECT * FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ())) ORDER BY '' ASC, '4áµ¬'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c1 AS INTEGER) IN ())) IS TRUE)  as count FROM v0 ORDER BY '' ASC, '4áµ¬'  NULLS FIRST);
SELECT * FROM v0 WHERE ((CAST(v0.c1 AS INTEGER) IN ())) ORDER BY '' ASC, '4áµ¬'  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS INTEGER))IS((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))IS((~ (t0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS INTEGER))IS((~ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS INTEGER))IS((~ (t0.c2))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((CAST(t0.c2 AS INTEGER))IS((~ (t0.c2)))));
SELECT COUNT(*) FROM v0 WHERE ((~ ((v0.c2 IN ())))) ORDER BY ((((v0.c1)AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))OR((- (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))OR((- (v0.c1)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((~ ((v0.c2 IN ())))) ORDER BY ((((v0.c1)AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))OR((- (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((v0.c2 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c1)AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))OR((- (v0.c1)))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((~ ((v0.c2 IN ())))) ORDER BY ((((v0.c1)AND(((v0.c2) BETWEEN (v0.c1) AND (v0.c1)))))OR((- (v0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(((t0.c1) IS FALSE)))) ORDER BY ((TYPEOF(t0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c2)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(((t0.c1) IS FALSE)))) ORDER BY ((TYPEOF(t0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY ((TYPEOF(t0.c2)) IS TRUE) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((((t0.c1)AND(t0.c1)))AND(t0.c2)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(((t0.c1) IS FALSE)))) ORDER BY ((TYPEOF(t0.c2)) IS TRUE) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((~ (v0.c2)))) AND (((v0.c0 IN (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((~ (v0.c2)))) AND (((v0.c0 IN (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((~ (v0.c2)))) AND (((v0.c0 IN (v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c2)) NOT BETWEEN (((~ (v0.c2)))) AND (((v0.c0 IN (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c2)) NOT BETWEEN (((~ (v0.c2)))) AND (((v0.c0 IN (v0.c2))))));
SELECT * FROM t0 WHERE ((((((t0.c2))>=((t0.c1)))) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((t0.c1 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c1)))) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((t0.c1 IN (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c2))>=((t0.c1)))) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((t0.c1 IN (t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2))>=((t0.c1)))) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((t0.c1 IN (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((((t0.c2))>=((t0.c1)))) NOT BETWEEN (((t0.c1) IS TRUE)) AND ((t0.c1 IN (t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (x'a639');
SELECT SUM(count) FROM (SELECT ALL ((x'a639') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'a639');
SELECT SUM(count) FROM (SELECT ALL ((x'a639') IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'a639');
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS REAL)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS REAL));
SELECT ALL * FROM v0, t0 WHERE ((+ ((((v0.c0))<=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0))<=((v0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ ((((v0.c0))<=((v0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((v0.c0))<=((v0.c2)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((+ ((((v0.c0))<=((v0.c2))))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((NOT (((v0.c0) ISNULL))));
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c1)||(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1)||(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c1)||(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((~ (((v0.c1)||(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((~ (((v0.c1)||(v0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((v0.c0)AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((v0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (LTRIM(((v0.c0)AND(v0.c0))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(t0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(t0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((((t0.c0) NOT BETWEEN (t0.c1) AND (v0.c2))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM t0, v0 WHERE (((NULL)AND(t0.c0)) COLLATE BINARY) ORDER BY (((('''nh6')>=(t0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY (((('''nh6')>=(t0.c1))) NOTNULL) DESC);
SELECT ALL * FROM t0, v0 WHERE (((NULL)AND(t0.c0)) COLLATE BINARY) ORDER BY (((('''nh6')>=(t0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)AND(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0, v0 ORDER BY (((('''nh6')>=(t0.c1))) NOTNULL) DESC);
SELECT ALL * FROM t0, v0 WHERE (((NULL)AND(t0.c0)) COLLATE BINARY) ORDER BY (((('''nh6')>=(t0.c1))) NOTNULL) DESC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)OR(((((((((-2.84579532E8)AND(v0.c1)))OR(t0.c1)))AND(0.9388323640347783)))AND(t0.c0))))) ORDER BY CASE (((v0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, v0.c0)) AND ((t0.c0, t0.c1, t0.c0)))  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c2 AS BLOB) ELSE 0.4311107303886439 COLLATE NOCASE END ASC, ((((v0.c0)+(t0.c2)))AND(TRIM(DISTINCT t0.c1, v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)OR(((((((((-2.84579532E8)AND(v0.c1)))OR(t0.c1)))AND(0.9388323640347783)))AND(t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (((v0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, v0.c0)) AND ((t0.c0, t0.c1, t0.c0)))  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c2 AS BLOB) ELSE 0.4311107303886439 COLLATE NOCASE END ASC, ((((v0.c0)+(t0.c2)))AND(TRIM(DISTINCT t0.c1, v0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)OR(((((((((-2.84579532E8)AND(v0.c1)))OR(t0.c1)))AND(0.9388323640347783)))AND(t0.c0))))) ORDER BY CASE (((v0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, v0.c0)) AND ((t0.c0, t0.c1, t0.c0)))  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c2 AS BLOB) ELSE 0.4311107303886439 COLLATE NOCASE END ASC, ((((v0.c0)+(t0.c2)))AND(TRIM(DISTINCT t0.c1, v0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE BINARY)OR(((((((((-2.84579532E8)AND(v0.c1)))OR(t0.c1)))AND(0.9388323640347783)))AND(t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY CASE (((v0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, v0.c0)) AND ((t0.c0, t0.c1, t0.c0)))  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c2 AS BLOB) ELSE 0.4311107303886439 COLLATE NOCASE END ASC, ((((v0.c0)+(t0.c2)))AND(TRIM(DISTINCT t0.c1, v0.c1))) ASC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((t0.c2 COLLATE BINARY)OR(((((((((-2.84579532E8)AND(v0.c1)))OR(t0.c1)))AND(0.9388323640347783)))AND(t0.c0))))) ORDER BY CASE (((v0.c1, t0.c2, t0.c1)) BETWEEN ((t0.c2, t0.c1, v0.c0)) AND ((t0.c0, t0.c1, t0.c0)))  WHEN CAST(t0.c2 AS INTEGER) THEN CAST(t0.c2 AS BLOB) ELSE 0.4311107303886439 COLLATE NOCASE END ASC, ((((v0.c0)+(t0.c2)))AND(TRIM(DISTINCT t0.c1, v0.c1))) ASC;
SELECT COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY ((((((v0.c2)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(CAST(v0.c0 AS REAL))) DESC, v0.c0 COLLATE BINARY DESC, ((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((((v0.c0)AND(v0.c2)))OR(NULL)))))OR(LIKELY(DISTINCT v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(CAST(v0.c0 AS REAL))) DESC, v0.c0 COLLATE BINARY DESC, ((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((((v0.c0)AND(v0.c2)))OR(NULL)))))OR(LIKELY(DISTINCT v0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY ((((((v0.c2)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(CAST(v0.c0 AS REAL))) DESC, v0.c0 COLLATE BINARY DESC, ((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((((v0.c0)AND(v0.c2)))OR(NULL)))))OR(LIKELY(DISTINCT v0.c2)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c2)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(CAST(v0.c0 AS REAL))) DESC, v0.c0 COLLATE BINARY DESC, ((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((((v0.c0)AND(v0.c2)))OR(NULL)))))OR(LIKELY(DISTINCT v0.c2)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((+ ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c2)))))) ORDER BY ((((((v0.c2)IS(v0.c0)))AND(CAST(v0.c2 AS NUMERIC))))AND(CAST(v0.c0 AS REAL))) DESC, v0.c0 COLLATE BINARY DESC, ((((((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)))AND(((((v0.c0)AND(v0.c2)))OR(NULL)))))OR(LIKELY(DISTINCT v0.c2)))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2)GLOB(''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c2)GLOB('')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2)GLOB(''))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((t0.c2)GLOB('')))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(((t0.c2)GLOB(''))));
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (((t0.c2 COLLATE NOCASE))>=((((((t0.c1)OR(t0.c1)))OR(t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 COLLATE NOCASE))>=((((((t0.c1)OR(t0.c1)))OR(t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (((t0.c2 COLLATE NOCASE))>=((((((t0.c1)OR(t0.c1)))OR(t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 COLLATE NOCASE))>=((((((t0.c1)OR(t0.c1)))OR(t0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((+ (CASE WHEN t0.c1 THEN t0.c0 END))) ORDER BY (((t0.c2 COLLATE NOCASE))>=((((((t0.c1)OR(t0.c1)))OR(t0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c1 AS INTEGER))OR('qn')))OR(ABS(DISTINCT v0.c0))))OR(((v0.c1)||(v0.c0)))))OR(CAST(0.3843938333285314 AS NUMERIC)))) ORDER BY ((((((((((((v0.c0)OR(0.1418617086705748)))OR(v0.c1)))AND((((v0.c0, v0.c2, v0.c1))<>((v0.c0, v0.c1, v0.c2))))))OR(((('0.26836894762753594')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c2 COLLATE BINARY)))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c1 AS INTEGER))OR('qn')))OR(ABS(DISTINCT v0.c0))))OR(((v0.c1)||(v0.c0)))))OR(CAST(0.3843938333285314 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)OR(0.1418617086705748)))OR(v0.c1)))AND((((v0.c0, v0.c2, v0.c1))<>((v0.c0, v0.c1, v0.c2))))))OR(((('0.26836894762753594')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c2 COLLATE BINARY)))OR((NOT (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c1 AS INTEGER))OR('qn')))OR(ABS(DISTINCT v0.c0))))OR(((v0.c1)||(v0.c0)))))OR(CAST(0.3843938333285314 AS NUMERIC)))) ORDER BY ((((((((((((v0.c0)OR(0.1418617086705748)))OR(v0.c1)))AND((((v0.c0, v0.c2, v0.c1))<>((v0.c0, v0.c1, v0.c2))))))OR(((('0.26836894762753594')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c2 COLLATE BINARY)))OR((NOT (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(v0.c1 AS INTEGER))OR('qn')))OR(ABS(DISTINCT v0.c0))))OR(((v0.c1)||(v0.c0)))))OR(CAST(0.3843938333285314 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)OR(0.1418617086705748)))OR(v0.c1)))AND((((v0.c0, v0.c2, v0.c1))<>((v0.c0, v0.c1, v0.c2))))))OR(((('0.26836894762753594')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c2 COLLATE BINARY)))OR((NOT (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c1 AS INTEGER))OR('qn')))OR(ABS(DISTINCT v0.c0))))OR(((v0.c1)||(v0.c0)))))OR(CAST(0.3843938333285314 AS NUMERIC)))) ORDER BY ((((((((((((v0.c0)OR(0.1418617086705748)))OR(v0.c1)))AND((((v0.c0, v0.c2, v0.c1))<>((v0.c0, v0.c1, v0.c2))))))OR(((('0.26836894762753594')) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))OR(v0.c2 COLLATE BINARY)))OR((NOT (v0.c0))));
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1)IS NOT(t0.c0)) AS REAL)) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)IS NOT(t0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c0 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1)IS NOT(t0.c0)) AS REAL)) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1)IS NOT(t0.c0)) AS REAL)) IS TRUE)  as count FROM v0, t0 ORDER BY CAST(t0.c0 AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0, t0 WHERE (CAST(((t0.c1)IS NOT(t0.c0)) AS REAL)) ORDER BY CAST(t0.c0 AS INTEGER)  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (CAST(((v0.c2) NOT NULL) AS BLOB)) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c1);
SELECT * FROM v0, t0 WHERE (CAST(((v0.c2) NOT NULL) AS BLOB)) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c2) NOT NULL) AS BLOB)) IS TRUE)  as count FROM v0, t0 ORDER BY t0.c1);
SELECT * FROM v0, t0 WHERE (CAST(((v0.c2) NOT NULL) AS BLOB)) ORDER BY t0.c1;
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c2))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(v0.c2))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c2))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c2)IS(v0.c2))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c2)IS(v0.c2))) BETWEEN (((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0))) AND (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c0)) IN (((t0.c0) IS FALSE), ((t0.c1) ISNULL)))) ORDER BY (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))AND((+ (t0.c1)))))AND((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))))) DESC, -1688983149 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (((t0.c0) IS FALSE), ((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))AND((+ (t0.c1)))))AND((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))))) DESC, -1688983149 DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((- (t0.c0)) IN (((t0.c0) IS FALSE), ((t0.c1) ISNULL)))) ORDER BY (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))AND((+ (t0.c1)))))AND((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))))) DESC, -1688983149 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c0)) IN (((t0.c0) IS FALSE), ((t0.c1) ISNULL)))) IS TRUE)  as count FROM t0 ORDER BY (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c0))))AND((+ (t0.c1)))))AND((((t0.c1)) BETWEEN ((t0.c2)) AND ((t0.c1))))) DESC, -1688983149 DESC);
SELECT COUNT(*) FROM t0, v0 WHERE ((~ (((t0.c2)>=(v0.c2))))) ORDER BY t0.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)>=(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((~ (((t0.c2)>=(v0.c2))))) ORDER BY t0.c1 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((~ (((t0.c2)>=(v0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY t0.c1 COLLATE NOCASE ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((~ (((t0.c2)>=(v0.c2))))) ORDER BY t0.c1 COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((t0.c0)AND('/')))OR(t0.c0))) AND (t0.c2))) ORDER BY ((((((((t0.c1 COLLATE NOCASE)AND('1491677163')))OR((t0.c1 IN ()))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((t0.c0)AND('/')))OR(t0.c0))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c1 COLLATE NOCASE)AND('1491677163')))OR((t0.c1 IN ()))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((t0.c0)AND('/')))OR(t0.c0))) AND (t0.c2))) ORDER BY ((((((((t0.c1 COLLATE NOCASE)AND('1491677163')))OR((t0.c1 IN ()))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((t0.c0)AND('/')))OR(t0.c0))) AND (t0.c2))) IS TRUE)  as count FROM t0 ORDER BY ((((((((t0.c1 COLLATE NOCASE)AND('1491677163')))OR((t0.c1 IN ()))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c1 THEN t0.c1 END) NOT BETWEEN (((((t0.c0)AND('/')))OR(t0.c0))) AND (t0.c2))) ORDER BY ((((((((t0.c1 COLLATE NOCASE)AND('1491677163')))OR((t0.c1 IN ()))))OR(((t0.c1) BETWEEN (t0.c0) AND (t0.c0)))))OR(((t0.c0) NOT NULL)))  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))IS((((v0.c0, v0.c1, v0.c0))<>((v0.c0, v0.c0, v0.c2)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))IS((((v0.c0, v0.c1, v0.c0))<>((v0.c0, v0.c0, v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))IS((((v0.c0, v0.c1, v0.c0))<>((v0.c0, v0.c0, v0.c2)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))IS((((v0.c0, v0.c1, v0.c0))<>((v0.c0, v0.c0, v0.c2)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT ALL * FROM v0 WHERE (((((v0.c2) BETWEEN (v0.c0) AND (v0.c0)))IS((((v0.c0, v0.c1, v0.c0))<>((v0.c0, v0.c0, v0.c2)))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(((t0.c2) NOT NULL))) ORDER BY x'' DESC  NULLS LAST, ((((((((((t0.c1)AND(t0.c2)))AND(v0.c1)))AND(v0.c2)))AND(NULL)))IS(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((t0.c2) NOT NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY x'' DESC  NULLS LAST, ((((((((((t0.c1)AND(t0.c2)))AND(v0.c1)))AND(v0.c2)))AND(NULL)))IS(x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(((t0.c2) NOT NULL))) ORDER BY x'' DESC  NULLS LAST, ((((((((((t0.c1)AND(t0.c2)))AND(v0.c1)))AND(v0.c2)))AND(NULL)))IS(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(((t0.c2) NOT NULL))) IS TRUE)  as count FROM t0, v0 ORDER BY x'' DESC  NULLS LAST, ((((((((((t0.c1)AND(t0.c2)))AND(v0.c1)))AND(v0.c2)))AND(NULL)))IS(x'')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (PRINTF(((t0.c2) NOT NULL))) ORDER BY x'' DESC  NULLS LAST, ((((((((((t0.c1)AND(t0.c2)))AND(v0.c1)))AND(v0.c2)))AND(NULL)))IS(x'')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2 COLLATE NOCASE)<=(v0.c2))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)<=(v0.c2))) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2 COLLATE NOCASE)<=(v0.c2))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c2 COLLATE NOCASE)<=(v0.c2))) IS TRUE)  as count FROM t0, v0 ORDER BY NULL  NULLS LAST);
SELECT COUNT(*) FROM t0, v0 WHERE (((v0.c2 COLLATE NOCASE)<=(v0.c2))) ORDER BY NULL  NULLS LAST;
SELECT * FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), CASE t0.c2  WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT NULL))) AND ((t0.c1, t0.c0 COLLATE NOCASE, (~ ('/'))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), CASE t0.c2  WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT NULL))) AND ((t0.c1, t0.c0 COLLATE NOCASE, (~ ('/')))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), CASE t0.c2  WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT NULL))) AND ((t0.c1, t0.c0 COLLATE NOCASE, (~ ('/'))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), CASE t0.c2  WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT NULL))) AND ((t0.c1, t0.c0 COLLATE NOCASE, (~ ('/')))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c0, t0.c1, t0.c0)) NOT BETWEEN ((CAST(t0.c2 AS TEXT), CASE t0.c2  WHEN t0.c1 THEN t0.c2 END, ((t0.c2) NOT NULL))) AND ((t0.c1, t0.c0 COLLATE NOCASE, (~ ('/'))))));
SELECT ALL * FROM v0 CROSS JOIN t0 ON 0.2646504725237543 COLLATE RTRIM WHERE (COALESCE(((t0.c2) NOT NULL), (((NULL)) BETWEEN ((v0.c1)) AND ((t0.c0))))) ORDER BY ((TIME(t0.c2, t0.c0, '5NaNu')) NOT BETWEEN ((((t0.c1))<>((t0.c0)))) AND (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c2) NOT NULL), (((NULL)) BETWEEN ((v0.c1)) AND ((t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON 0.2646504725237543 COLLATE RTRIM ORDER BY ((TIME(t0.c2, t0.c0, '5NaNu')) NOT BETWEEN ((((t0.c1))<>((t0.c0)))) AND (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON 0.2646504725237543 COLLATE RTRIM WHERE (COALESCE(((t0.c2) NOT NULL), (((NULL)) BETWEEN ((v0.c1)) AND ((t0.c0))))) ORDER BY ((TIME(t0.c2, t0.c0, '5NaNu')) NOT BETWEEN ((((t0.c1))<>((t0.c0)))) AND (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((t0.c2) NOT NULL), (((NULL)) BETWEEN ((v0.c1)) AND ((t0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON 0.2646504725237543 COLLATE RTRIM ORDER BY ((TIME(t0.c2, t0.c0, '5NaNu')) NOT BETWEEN ((((t0.c1))<>((t0.c0)))) AND (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM v0 CROSS JOIN t0 ON 0.2646504725237543 COLLATE RTRIM WHERE (COALESCE(((t0.c2) NOT NULL), (((NULL)) BETWEEN ((v0.c1)) AND ((t0.c0))))) ORDER BY ((TIME(t0.c2, t0.c0, '5NaNu')) NOT BETWEEN ((((t0.c1))<>((t0.c0)))) AND (v0.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT * FROM t0, v0 WHERE (((((((((x'')OR(((((((((t0.c1)OR(t0.c1)))AND(x'')))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c2)OR(v0.c1)))OR(t0.c2)))OR(v0.c0)))OR(v0.c0)))))OR(CASE v0.c0  WHEN t0.c1 THEN v0.c1 END)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((((((((t0.c1)OR(t0.c1)))AND(x'')))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c2)OR(v0.c1)))OR(t0.c2)))OR(v0.c0)))OR(v0.c0)))))OR(CASE v0.c0  WHEN t0.c1 THEN v0.c1 END)))AND(x''))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((((x'')OR(((((((((t0.c1)OR(t0.c1)))AND(x'')))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c2)OR(v0.c1)))OR(t0.c2)))OR(v0.c0)))OR(v0.c0)))))OR(CASE v0.c0  WHEN t0.c1 THEN v0.c1 END)))AND(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((x'')OR(((((((((t0.c1)OR(t0.c1)))AND(x'')))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c2)OR(v0.c1)))OR(t0.c2)))OR(v0.c0)))OR(v0.c0)))))OR(CASE v0.c0  WHEN t0.c1 THEN v0.c1 END)))AND(x''))) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (((((((((x'')OR(((((((((t0.c1)OR(t0.c1)))AND(x'')))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c2)OR(v0.c1)))OR(t0.c2)))OR(v0.c0)))OR(v0.c0)))))OR(CASE v0.c0  WHEN t0.c1 THEN v0.c1 END)))AND(x'')));
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))OR(v0.c2)))AND(NULL)) THEN ((t0.c1) BETWEEN (v0.c2) AND (t0.c2)) WHEN ((t0.c1)!=(t0.c2)) THEN CASE t0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t0.c1 END WHEN CASE WHEN t0.c2 THEN 'tk,s1rå¥Q' ELSE t0.c0 END THEN ((v0.c2)==(NULL)) ELSE '-823477607' COLLATE BINARY END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))OR(v0.c2)))AND(NULL)) THEN ((t0.c1) BETWEEN (v0.c2) AND (t0.c2)) WHEN ((t0.c1)<>(t0.c2)) THEN CASE t0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t0.c1 END WHEN CASE WHEN t0.c2 THEN 'tk,s1rå¥Q' ELSE t0.c0 END THEN ((v0.c2)=(NULL)) ELSE '-823477607' COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 ORDER BY '');
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))OR(v0.c2)))AND(NULL)) THEN ((t0.c1) BETWEEN (v0.c2) AND (t0.c2)) WHEN ((t0.c1)!=(t0.c2)) THEN CASE t0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t0.c1 END WHEN CASE WHEN t0.c2 THEN 'tk,s1rå¥Q' ELSE t0.c0 END THEN ((v0.c2)==(NULL)) ELSE '-823477607' COLLATE BINARY END) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))OR(v0.c2)))AND(NULL)) THEN ((t0.c1) BETWEEN (v0.c2) AND (t0.c2)) WHEN ((t0.c1)<>(t0.c2)) THEN CASE t0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t0.c1 END WHEN CASE WHEN t0.c2 THEN 'tk,s1rå¥Q' ELSE t0.c0 END THEN ((v0.c2)=(NULL)) ELSE '-823477607' COLLATE BINARY END) IS TRUE)  as count FROM v0, t0 ORDER BY '');
SELECT ALL * FROM v0, t0 WHERE (CASE WHEN ((((((((t0.c1)AND(t0.c2)))AND(t0.c2)))OR(v0.c2)))AND(NULL)) THEN ((t0.c1) BETWEEN (v0.c2) AND (t0.c2)) WHEN ((t0.c1)!=(t0.c2)) THEN CASE t0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 ELSE t0.c1 END WHEN CASE WHEN t0.c2 THEN 'tk,s1rå¥Q' ELSE t0.c0 END THEN ((v0.c2)==(NULL)) ELSE '-823477607' COLLATE BINARY END) ORDER BY '';
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM v0, t0);
SELECT * FROM v0, t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((((v0.c1)OR(v0.c2)))OR(v0.c1))))) ORDER BY v0.c2 ASC, ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))>=((v0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c1)OR(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC, ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))>=((v0.c2 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((((v0.c1)OR(v0.c2)))OR(v0.c1))))) ORDER BY v0.c2 ASC, ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))>=((v0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((((v0.c1)OR(v0.c2)))OR(v0.c1))))) IS TRUE)  as count FROM v0 ORDER BY v0.c2 ASC, ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))>=((v0.c2 IN ()))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((+ (((((v0.c1)OR(v0.c2)))OR(v0.c1))))) ORDER BY v0.c2 ASC, ((((((v0.c2)AND(v0.c2)))OR(v0.c1)))>=((v0.c2 IN ()))) DESC;
SELECT * FROM v0 WHERE (CASE WHEN '?,î¨¼' THEN v0.c2 END COLLATE NOCASE) ORDER BY ((((((((v0.c1)AND(v0.c0)))AND(v0.c0)))OR(CAST(v0.c2 AS TEXT))))OR((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '?,î¨¼' THEN v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c1)AND(v0.c0)))AND(v0.c0)))OR(CAST(v0.c2 AS TEXT))))OR((v0.c1 IN ()))));
SELECT * FROM v0 WHERE (CASE WHEN '?,î¨¼' THEN v0.c2 END COLLATE NOCASE) ORDER BY ((((((((v0.c1)AND(v0.c0)))AND(v0.c0)))OR(CAST(v0.c2 AS TEXT))))OR((v0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE WHEN '?,î¨¼' THEN v0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((v0.c1)AND(v0.c0)))AND(v0.c0)))OR(CAST(v0.c2 AS TEXT))))OR((v0.c1 IN ()))));
SELECT * FROM v0 WHERE (CASE WHEN '?,î¨¼' THEN v0.c2 END COLLATE NOCASE) ORDER BY ((((((((v0.c1)AND(v0.c0)))AND(v0.c0)))OR(CAST(v0.c2 AS TEXT))))OR((v0.c1 IN ())));
SELECT * FROM t0 WHERE (CASE (((t0.c2))>=((t0.c2)))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c2))>=((t0.c2)))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c2))>=((t0.c2)))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c2))>=((t0.c2)))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (((t0.c2))>=((t0.c2)))  WHEN ((t0.c2) IS TRUE) THEN ((((t0.c1)OR(t0.c0)))OR(t0.c0)) END);
SELECT * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))OR(t0.c0)))&(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))&(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))OR(t0.c0)))&(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))&(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c1)OR(t0.c1)))OR(t0.c0)))&(CASE t0.c0  WHEN t0.c0 THEN t0.c2 END)));
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (v0.c0))) ORDER BY UPPER((+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (v0.c0))) IS TRUE)  as count FROM t0, v0 ORDER BY UPPER((+ (t0.c1))) ASC);
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (v0.c0))) ORDER BY UPPER((+ (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE NOCASE) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (v0.c0))) IS TRUE)  as count FROM t0, v0 ORDER BY UPPER((+ (t0.c1))) ASC);
SELECT ALL * FROM t0, v0 WHERE (((t0.c1 COLLATE NOCASE) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (v0.c0))) ORDER BY UPPER((+ (t0.c1))) ASC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((HEX(t0.c0))*(((v0.c1) BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((v0.c2)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((t0.c1)IS(v0.c1))))) ASC, CASE WHEN ((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN NULL WHEN CAST(t0.c2 AS BLOB) THEN (~ (t0.c0)) WHEN ((v0.c1) NOT BETWEEN (x'0ded') AND (v0.c1)) THEN v0.c1 COLLATE BINARY END ASC, ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) IN (CAST(t0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c0))*(((v0.c1) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((t0.c1)IS(v0.c1))))) ASC, CASE WHEN ((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN NULL WHEN CAST(t0.c2 AS BLOB) THEN (~ (t0.c0)) WHEN ((v0.c1) NOT BETWEEN (x'0ded') AND (v0.c1)) THEN v0.c1 COLLATE BINARY END ASC, ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) IN (CAST(t0.c1 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((HEX(t0.c0))*(((v0.c1) BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((v0.c2)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((t0.c1)IS(v0.c1))))) ASC, CASE WHEN ((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN NULL WHEN CAST(t0.c2 AS BLOB) THEN (~ (t0.c0)) WHEN ((v0.c1) NOT BETWEEN (x'0ded') AND (v0.c1)) THEN v0.c1 COLLATE BINARY END ASC, ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) IN (CAST(t0.c1 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(t0.c0))*(((v0.c1) BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM v0, t0 ORDER BY (((v0.c2)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((t0.c1)IS(v0.c1))))) ASC, CASE WHEN ((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN NULL WHEN CAST(t0.c2 AS BLOB) THEN (~ (t0.c0)) WHEN ((v0.c1) NOT BETWEEN (x'0ded') AND (v0.c1)) THEN v0.c1 COLLATE BINARY END ASC, ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) IN (CAST(t0.c1 AS TEXT))) DESC);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (((HEX(t0.c0))*(((v0.c1) BETWEEN (t0.c1) AND (t0.c0))))) ORDER BY (((v0.c2)) NOT BETWEEN ((v0.c0 COLLATE RTRIM)) AND ((((t0.c1)IS(v0.c1))))) ASC, CASE WHEN ((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN NULL WHEN CAST(t0.c2 AS BLOB) THEN (~ (t0.c0)) WHEN ((v0.c1) NOT BETWEEN (x'0ded') AND (v0.c1)) THEN v0.c1 COLLATE BINARY END ASC, ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c1))) IN (CAST(t0.c1 AS TEXT))) DESC;
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (((0X4449d2b7) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c2 THEN 0.9967516792078748 WHEN t0.c2 THEN t0.c0 END)/(((t0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (((0x4449d2b7) IS FALSE))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c2 THEN 0.9967516792078748 WHEN t0.c2 THEN t0.c0 END)/(((t0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (((0X4449d2b7) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c2 THEN 0.9967516792078748 WHEN t0.c2 THEN t0.c0 END)/(((t0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 INNER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (((0x4449d2b7) IS FALSE))) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c2 THEN 0.9967516792078748 WHEN t0.c2 THEN t0.c0 END)/(((t0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN v0 ON (((NOT (v0.c1))) NOT BETWEEN ((NULL IN ())) AND (((0X4449d2b7) IS FALSE))) WHERE (v0.c1) ORDER BY ((CASE WHEN t0.c2 THEN t0.c1 WHEN v0.c2 THEN 0.9967516792078748 WHEN t0.c2 THEN t0.c0 END)/(((t0.c0) BETWEEN (v0.c0) AND (v0.c1))))  NULLS FIRST;
SELECT * FROM v0, t0 WHERE (((ROUND(NULL, t0.c0))-(ABS(t0.c2)))) ORDER BY (((NOT (t0.c1)))&((+ (v0.c0)))) ASC, CASE WHEN ((t0.c0)>>(v0.c0)) THEN ((v0.c0)!=(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(NULL, t0.c0))-(ABS(t0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((NOT (t0.c1)))&((+ (v0.c0)))) ASC, CASE WHEN ((t0.c0)>>(v0.c0)) THEN ((v0.c0)!=(v0.c1)) END);
SELECT * FROM v0, t0 WHERE (((ROUND(NULL, t0.c0))-(ABS(t0.c2)))) ORDER BY (((NOT (t0.c1)))&((+ (v0.c0)))) ASC, CASE WHEN ((t0.c0)>>(v0.c0)) THEN ((v0.c0)!=(v0.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((((ROUND(NULL, t0.c0))-(ABS(t0.c2)))) IS TRUE)  as count FROM v0, t0 ORDER BY (((NOT (t0.c1)))&((+ (v0.c0)))) ASC, CASE WHEN ((t0.c0)>>(v0.c0)) THEN ((v0.c0)!=(v0.c1)) END);
SELECT * FROM v0, t0 WHERE (((ROUND(NULL, t0.c0))-(ABS(t0.c2)))) ORDER BY (((NOT (t0.c1)))&((+ (v0.c0)))) ASC, CASE WHEN ((t0.c0)>>(v0.c0)) THEN ((v0.c0)!=(v0.c1)) END;
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT * FROM t0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((NULL) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((NULL) ISNULL) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((NULL) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c1) IS TRUE)  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((NULL) ISNULL) END) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE (CASE ((v0.c1) IS TRUE)  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((NULL) ISNULL) END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c2)=(t0.c1)) COLLATE BINARY WHERE (((0.9132852582950275)%(UPPER(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9132852582950275)%(UPPER(v0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c2)=(t0.c1)) COLLATE BINARY);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c2)=(t0.c1)) COLLATE BINARY WHERE (((0.9132852582950275)%(UPPER(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((0.9132852582950275)%(UPPER(v0.c1)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c2)=(t0.c1)) COLLATE BINARY);
SELECT ALL * FROM v0 RIGHT OUTER JOIN t0 ON ((v0.c2)=(t0.c1)) COLLATE BINARY WHERE (((0.9132852582950275)%(UPPER(v0.c1))));
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c2 AS NUMERIC) COLLATE NOCASE WHERE (((((((t0.c2)AND(t0.c2)))AND(t0.c1)))|(((v0.c2) IS FALSE)))) ORDER BY (((((t0.c2)AND(t0.c1)))OR(v0.c2)) IN ((('1255084577')>>(t0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))|(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(v0.c2 AS NUMERIC) COLLATE NOCASE ORDER BY (((((t0.c2)AND(t0.c1)))OR(v0.c2)) IN ((('1255084577')>>(t0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c2 AS NUMERIC) COLLATE NOCASE WHERE (((((((t0.c2)AND(t0.c2)))AND(t0.c1)))|(((v0.c2) IS FALSE)))) ORDER BY (((((t0.c2)AND(t0.c1)))OR(v0.c2)) IN ((('1255084577')>>(t0.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c2)))AND(t0.c1)))|(((v0.c2) IS FALSE)))) IS TRUE)  as count FROM t0 INNER JOIN v0 ON CAST(v0.c2 AS NUMERIC) COLLATE NOCASE ORDER BY (((((t0.c2)AND(t0.c1)))OR(v0.c2)) IN ((('1255084577')>>(t0.c2)))) DESC  NULLS LAST);
SELECT * FROM t0 INNER JOIN v0 ON CAST(v0.c2 AS NUMERIC) COLLATE NOCASE WHERE (((((((t0.c2)AND(t0.c2)))AND(t0.c1)))|(((v0.c2) IS FALSE)))) ORDER BY (((((t0.c2)AND(t0.c1)))OR(v0.c2)) IN ((('1255084577')>>(t0.c2)))) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))==(((~ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))=(((~ (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))==(((~ (v0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))=(((~ (v0.c2)))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c0)))))==(((~ (v0.c2))))));
SELECT * FROM t0, v0 WHERE ((CAST(v0.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((CAST(v0.c2 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(v0.c2 AS NUMERIC) IN ())) IS TRUE)  as count FROM t0, v0);
SELECT * FROM t0, v0 WHERE ((CAST(v0.c2 AS NUMERIC) IN ()));
SELECT ALL * FROM t0 WHERE (QUOTE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (QUOTE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (QUOTE((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))));
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN v0.c0 THEN (v0.c1 IN ()) WHEN (+ (-1.656294903E9)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN t0.c1 WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c1)>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN (v0.c1 IN ()) WHEN (+ (-1.656294903E9)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN t0.c1 WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c1)>(t0.c2)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN v0.c0 THEN (v0.c1 IN ()) WHEN (+ (-1.656294903E9)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN t0.c1 WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c1)>(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN (v0.c1 IN ()) WHEN (+ (-1.656294903E9)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN t0.c1 WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c1)>(t0.c2)) END) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (CASE WHEN v0.c0 THEN (v0.c1 IN ()) WHEN (+ (-1.656294903E9)) THEN CASE WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN t0.c1 WHEN v0.c0 THEN t0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((t0.c1)>(t0.c2)) END);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM v0 WHERE (MIN(v0.c0, v0.c2) COLLATE NOCASE) ORDER BY (((x'24b4'))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))  NULLS LAST, (((((v0.c0, v0.c2, v0.c2))<>((v0.c0, v0.c1, v0.c0))))<=(((v0.c0)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(v0.c0, v0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((x'24b4'))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))  NULLS LAST, (((((v0.c0, v0.c2, v0.c2))!=((v0.c0, v0.c1, v0.c0))))<=(((v0.c0)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (MIN(v0.c0, v0.c2) COLLATE NOCASE) ORDER BY (((x'24b4'))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))  NULLS LAST, (((((v0.c0, v0.c2, v0.c2))<>((v0.c0, v0.c1, v0.c0))))<=(((v0.c0)>(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((MIN(v0.c0, v0.c2) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY (((x'24b4'))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))  NULLS LAST, (((((v0.c0, v0.c2, v0.c2))!=((v0.c0, v0.c1, v0.c0))))<=(((v0.c0)>(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (MIN(v0.c0, v0.c2) COLLATE NOCASE) ORDER BY (((x'24b4'))>=(((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))))))  NULLS LAST, (((((v0.c0, v0.c2, v0.c2))<>((v0.c0, v0.c1, v0.c0))))<=(((v0.c0)>(v0.c0)))) DESC;
SELECT * FROM v0 WHERE ((- (((v0.c1)>>(v0.c2))))) ORDER BY (((((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)), (v0.c2 IN ()), ((v0.c0) IS FALSE)))<((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)), UPPER(DISTINCT v0.c2), ((v0.c1) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, ((x'')|(((v0.c0) BETWEEN (x'') AND (v0.c2)))), ((((v0.c2)IS NOT(v0.c2)))GLOB(((v0.c2)%(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c1)>>(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)), (v0.c2 IN ()), ((v0.c0) IS FALSE)))<((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)), UPPER(DISTINCT v0.c2), ((v0.c1) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, ((x'')|(((v0.c0) BETWEEN (x'') AND (v0.c2)))), ((((v0.c2)IS NOT(v0.c2)))GLOB(((v0.c2)%(v0.c1)))));
SELECT * FROM v0 WHERE ((- (((v0.c1)>>(v0.c2))))) ORDER BY (((((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)), (v0.c2 IN ()), ((v0.c0) IS FALSE)))<((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)), UPPER(DISTINCT v0.c2), ((v0.c1) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, ((x'')|(((v0.c0) BETWEEN (x'') AND (v0.c2)))), ((((v0.c2)IS NOT(v0.c2)))GLOB(((v0.c2)%(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c1)>>(v0.c2))))) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)), (v0.c2 IN ()), ((v0.c0) IS FALSE)))<((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)), UPPER(DISTINCT v0.c2), ((v0.c1) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, ((x'')|(((v0.c0) BETWEEN (x'') AND (v0.c2)))), ((((v0.c2)IS NOT(v0.c2)))GLOB(((v0.c2)%(v0.c1)))));
SELECT * FROM v0 WHERE ((- (((v0.c1)>>(v0.c2))))) ORDER BY (((((((((((v0.c2)AND(v0.c2)))AND(v0.c1)))AND(v0.c0)))AND(v0.c0)), (v0.c2 IN ()), ((v0.c0) IS FALSE)))<((((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)), UPPER(DISTINCT v0.c2), ((v0.c1) BETWEEN (v0.c1) AND (v0.c0))))) DESC  NULLS FIRST, ((x'')|(((v0.c0) BETWEEN (x'') AND (v0.c2)))), ((((v0.c2)IS NOT(v0.c2)))GLOB(((v0.c2)%(v0.c1))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(t0.c1))) BETWEEN (v0.c2) AND (CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(t0.c1))) BETWEEN (v0.c2) AND (CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(t0.c1))) BETWEEN (v0.c2) AND (CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c1)AND(t0.c1))) BETWEEN (v0.c2) AND (CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((((v0.c1)AND(t0.c1))) BETWEEN (v0.c2) AND (CASE WHEN v0.c1 THEN t0.c0 ELSE v0.c0 END)));
SELECT * FROM t0 WHERE (((((t0.c2 IN ())))>((CAST(t0.c1 AS INTEGER))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))>((CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS TEXT)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2 IN ())))>((CAST(t0.c1 AS INTEGER))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2 IN ())))>((CAST(t0.c1 AS INTEGER))))) IS TRUE)  as count FROM t0 ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS TEXT)  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2 IN ())))>((CAST(t0.c1 AS INTEGER))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END AS TEXT)  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) ORDER BY INSTR(((v0.c0)%(v0.c1)), ((v0.c2)*(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY INSTR(((v0.c0)%(v0.c1)), ((v0.c2)*(v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) ORDER BY INSTR(((v0.c0)%(v0.c1)), ((v0.c2)*(v0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) IS TRUE)  as count FROM t0, v0 ORDER BY INSTR(((v0.c0)%(v0.c1)), ((v0.c2)*(v0.c0))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (CAST(CAST(t0.c0 AS BLOB) AS INTEGER)) ORDER BY INSTR(((v0.c0)%(v0.c1)), ((v0.c2)*(v0.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (CASE GLOB(NULL, v0.c1)  WHEN ((((v0.c2)OR(v0.c0)))AND(v0.c0)) THEN x'' END) ORDER BY ']4on!';
SELECT SUM(count) FROM (SELECT ((CASE GLOB(NULL, v0.c1)  WHEN ((((v0.c2)OR(v0.c0)))AND(v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY ']4on!');
SELECT COUNT(*) FROM v0 WHERE (CASE GLOB(NULL, v0.c1)  WHEN ((((v0.c2)OR(v0.c0)))AND(v0.c0)) THEN x'' END) ORDER BY ']4on!';
SELECT SUM(count) FROM (SELECT ((CASE GLOB(NULL, v0.c1)  WHEN ((((v0.c2)OR(v0.c0)))AND(v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY ']4on!');
SELECT COUNT(*) FROM v0 WHERE (CASE GLOB(NULL, v0.c1)  WHEN ((((v0.c2)OR(v0.c0)))AND(v0.c0)) THEN x'' END) ORDER BY ']4on!';
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (NULL) AND ('-1160572711')) DESC, (((((t0.c2))==((t0.c0))))IS NOT(((((t0.c1)OR(x'')))AND(t0.c1)))) ASC, CASE WHEN (((t0.c1))=((t0.c2))) THEN (t0.c2 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) NOT BETWEEN (NULL) AND ('-1160572711')) DESC, (((((t0.c2))==((t0.c0))))IS NOT(((((t0.c1)OR(x'')))AND(t0.c1)))) ASC, CASE WHEN (((t0.c1))==((t0.c2))) THEN (t0.c2 IN ()) END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (NULL) AND ('-1160572711')) DESC, (((((t0.c2))==((t0.c0))))IS NOT(((((t0.c1)OR(x'')))AND(t0.c1)))) ASC, CASE WHEN (((t0.c1))=((t0.c2))) THEN (t0.c2 IN ()) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((t0.c2 IN ())) NOT BETWEEN (NULL) AND ('-1160572711')) DESC, (((((t0.c2))==((t0.c0))))IS NOT(((((t0.c1)OR(x'')))AND(t0.c1)))) ASC, CASE WHEN (((t0.c1))==((t0.c2))) THEN (t0.c2 IN ()) END ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (t0.c0) ORDER BY (((t0.c2 IN ())) NOT BETWEEN (NULL) AND ('-1160572711')) DESC, (((((t0.c2))==((t0.c0))))IS NOT(((((t0.c1)OR(x'')))AND(t0.c1)))) ASC, CASE WHEN (((t0.c1))=((t0.c2))) THEN (t0.c2 IN ()) END ASC  NULLS FIRST;
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (t0.c1 IN ()) WHERE (v0.c1) ORDER BY (((((t0.c1)|(v0.c0)), 0.3303226578079965, ((('-804663257', v0.c0, v0.c0))>((v0.c2, t0.c2, v0.c0)))))<>((((v0.c2)GLOB(v0.c0)), ((t0.c1)+(v0.c1)), (~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (t0.c1 IN ()) ORDER BY (((((t0.c1)|(v0.c0)), 0.3303226578079965, ((('-804663257', v0.c0, v0.c0))>((v0.c2, t0.c2, v0.c0)))))<>((((v0.c2)GLOB(v0.c0)), ((t0.c1)+(v0.c1)), (~ (t0.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (t0.c1 IN ()) WHERE (v0.c1) ORDER BY (((((t0.c1)|(v0.c0)), 0.3303226578079965, ((('-804663257', v0.c0, v0.c0))>((v0.c2, t0.c2, v0.c0)))))<>((((v0.c2)GLOB(v0.c0)), ((t0.c1)+(v0.c1)), (~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c1) IS TRUE)  as count FROM t0 LEFT OUTER JOIN v0 ON (t0.c1 IN ()) ORDER BY (((((t0.c1)|(v0.c0)), 0.3303226578079965, ((('-804663257', v0.c0, v0.c0))>((v0.c2, t0.c2, v0.c0)))))<>((((v0.c2)GLOB(v0.c0)), ((t0.c1)+(v0.c1)), (~ (t0.c0))))));
SELECT * FROM t0 LEFT OUTER JOIN v0 ON (t0.c1 IN ()) WHERE (v0.c1) ORDER BY (((((t0.c1)|(v0.c0)), 0.3303226578079965, ((('-804663257', v0.c0, v0.c0))>((v0.c2, t0.c2, v0.c0)))))<>((((v0.c2)GLOB(v0.c0)), ((t0.c1)+(v0.c1)), (~ (t0.c0)))));
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ()))!=(((v0.c1)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))<>(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ()))!=(((v0.c1)LIKE(v0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c1 IN ()))<>(((v0.c1)LIKE(v0.c2))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c1 IN ()))!=(((v0.c1)LIKE(v0.c2)))));
SELECT * FROM v0, t0 WHERE (((((((t0.c2, t0.c0, t0.c2)) BETWEEN ((v0.c0, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, '-2060141921')))))=((((t0.c0) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((CASE t0.c0  WHEN x'' THEN v0.c1 WHEN v0.c1 THEN t0.c1 WHEN v0.c1 THEN t0.c1 END)IS((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2, t0.c0, t0.c2)) BETWEEN ((v0.c0, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, '-2060141921')))))=((((t0.c0) BETWEEN (v0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE t0.c0  WHEN x'' THEN v0.c1 WHEN v0.c1 THEN t0.c1 WHEN v0.c1 THEN t0.c1 END)IS((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c2)))))  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((((t0.c2, t0.c0, t0.c2)) BETWEEN ((v0.c0, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, '-2060141921')))))=((((t0.c0) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((CASE t0.c0  WHEN x'' THEN v0.c1 WHEN v0.c1 THEN t0.c1 WHEN v0.c1 THEN t0.c1 END)IS((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2, t0.c0, t0.c2)) BETWEEN ((v0.c0, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, '-2060141921')))))=((((t0.c0) BETWEEN (v0.c2) AND (v0.c0)))))) IS TRUE)  as count FROM v0, t0 ORDER BY ((CASE t0.c0  WHEN x'' THEN v0.c1 WHEN v0.c1 THEN t0.c1 WHEN v0.c1 THEN t0.c1 END)IS((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c2)))))  NULLS LAST);
SELECT * FROM v0, t0 WHERE (((((((t0.c2, t0.c0, t0.c2)) BETWEEN ((v0.c0, v0.c0, t0.c2)) AND ((t0.c2, t0.c1, '-2060141921')))))=((((t0.c0) BETWEEN (v0.c2) AND (v0.c0)))))) ORDER BY ((CASE t0.c0  WHEN x'' THEN v0.c1 WHEN v0.c1 THEN t0.c1 WHEN v0.c1 THEN t0.c1 END)IS((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c2)))))  NULLS LAST;
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c1)))GLOB(((v0.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))GLOB(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c1)))GLOB(((v0.c0)!=(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (v0.c1)))GLOB(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0, t0);
SELECT COUNT(*) FROM v0, t0 WHERE ((((- (v0.c1)))GLOB(((v0.c0)!=(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c1);
SELECT COUNT(*) FROM t0, v0 WHERE (((- (t0.c2)) IN (((t0.c2) BETWEEN ('0.02306521536847239') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c2)) IN (((t0.c2) BETWEEN ('0.02306521536847239') AND (v0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((- (t0.c2)) IN (((t0.c2) BETWEEN ('0.02306521536847239') AND (v0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((- (t0.c2)) IN (((t0.c2) BETWEEN ('0.02306521536847239') AND (v0.c1))))) IS TRUE)  as count FROM t0, v0);
SELECT COUNT(*) FROM t0, v0 WHERE (((- (t0.c2)) IN (((t0.c2) BETWEEN ('0.02306521536847239') AND (v0.c1)))));
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (PRINTF(CASE v0.c2  WHEN t0.c2 THEN v0.c1 END)) ORDER BY (((t0.c0, v0.c2, v0.c0, v0.c1, v0.c2)) BETWEEN (((0.2598523387090037 IN (v0.c0)), NULL, ('2017110461' IN ()), ((-708855207) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c2))))) AND (((t0.c0 IN ()), (((v0.c2))!=((v0.c1))), UPPER(NULL), v0.c1, ((((v0.c0)AND('0.3327474249086285')))AND(t0.c1))))) ASC  NULLS FIRST, 0.47848407974918084 DESC, ((t0.c0)*(MIN(t0.c2, v0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CASE v0.c2  WHEN t0.c2 THEN v0.c1 END)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((t0.c0, v0.c2, v0.c0, v0.c1, v0.c2)) BETWEEN (((0.2598523387090037 IN (v0.c0)), NULL, ('2017110461' IN ()), ((-708855207) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c2))))) AND (((t0.c0 IN ()), (((v0.c2))<>((v0.c1))), UPPER(NULL), v0.c1, ((((v0.c0)AND('0.3327474249086285')))AND(t0.c1))))) ASC  NULLS FIRST, 0.47848407974918084 DESC, ((t0.c0)*(MIN(t0.c2, v0.c1)))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (PRINTF(CASE v0.c2  WHEN t0.c2 THEN v0.c1 END)) ORDER BY (((t0.c0, v0.c2, v0.c0, v0.c1, v0.c2)) BETWEEN (((0.2598523387090037 IN (v0.c0)), NULL, ('2017110461' IN ()), ((-708855207) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c2))))) AND (((t0.c0 IN ()), (((v0.c2))!=((v0.c1))), UPPER(NULL), v0.c1, ((((v0.c0)AND('0.3327474249086285')))AND(t0.c1))))) ASC  NULLS FIRST, 0.47848407974918084 DESC, ((t0.c0)*(MIN(t0.c2, v0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((PRINTF(CASE v0.c2  WHEN t0.c2 THEN v0.c1 END)) IS TRUE)  as count FROM v0 NATURAL JOIN t0 ORDER BY (((t0.c0, v0.c2, v0.c0, v0.c1, v0.c2)) BETWEEN (((0.2598523387090037 IN (v0.c0)), NULL, ('2017110461' IN ()), ((-708855207) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c2))))) AND (((t0.c0 IN ()), (((v0.c2))<>((v0.c1))), UPPER(NULL), v0.c1, ((((v0.c0)AND('0.3327474249086285')))AND(t0.c1))))) ASC  NULLS FIRST, 0.47848407974918084 DESC, ((t0.c0)*(MIN(t0.c2, v0.c1)))  NULLS FIRST);
SELECT ALL * FROM v0 NATURAL JOIN t0 WHERE (PRINTF(CASE v0.c2  WHEN t0.c2 THEN v0.c1 END)) ORDER BY (((t0.c0, v0.c2, v0.c0, v0.c1, v0.c2)) BETWEEN (((0.2598523387090037 IN (v0.c0)), NULL, ('2017110461' IN ()), ((-708855207) NOTNULL), (((v0.c0)) NOT BETWEEN ((v0.c2)) AND ((t0.c2))))) AND (((t0.c0 IN ()), (((v0.c2))!=((v0.c1))), UPPER(NULL), v0.c1, ((((v0.c0)AND('0.3327474249086285')))AND(t0.c1))))) ASC  NULLS FIRST, 0.47848407974918084 DESC, ((t0.c0)*(MIN(t0.c2, v0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (0X6844b9d6 IN ()) THEN (NOT (t0.c0)) ELSE (t0.c1 IN (t0.c0, t0.c0)) END) ORDER BY '0.4318239406803136' COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (0x6844b9d6 IN ()) THEN (NOT (t0.c0)) ELSE (t0.c1 IN (t0.c0, t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY '0.4318239406803136' COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (0X6844b9d6 IN ()) THEN (NOT (t0.c0)) ELSE (t0.c1 IN (t0.c0, t0.c0)) END) ORDER BY '0.4318239406803136' COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (0x6844b9d6 IN ()) THEN (NOT (t0.c0)) ELSE (t0.c1 IN (t0.c0, t0.c0)) END) IS TRUE)  as count FROM t0 ORDER BY '0.4318239406803136' COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE ((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))  WHEN (0X6844b9d6 IN ()) THEN (NOT (t0.c0)) ELSE (t0.c1 IN (t0.c0, t0.c0)) END) ORDER BY '0.4318239406803136' COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (x'8445');
SELECT SUM(count) FROM (SELECT ALL ((x'8445') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'8445');
SELECT SUM(count) FROM (SELECT ALL ((x'8445') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'8445');
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULLIF(v0.c2 COLLATE NOCASE, ((t0.c1)=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c2 COLLATE NOCASE, ((t0.c1)=(t0.c1)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULLIF(v0.c2 COLLATE NOCASE, ((t0.c1)=(t0.c1))));
SELECT SUM(count) FROM (SELECT ((NULLIF(v0.c2 COLLATE NOCASE, ((t0.c1)=(t0.c1)))) IS TRUE)  as count FROM t0, v0);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (NULLIF(v0.c2 COLLATE NOCASE, ((t0.c1)=(t0.c1))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (v0.c2 COLLATE RTRIM)) WHERE ((json(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json(t0.c0) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (v0.c2 COLLATE RTRIM)) WHERE ((json(t0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((json(t0.c0) IN ())) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (v0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON (((v0.c0) ISNULL) IN (v0.c2 COLLATE RTRIM)) WHERE ((json(t0.c0) IN ()));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (HEX(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(v0.c0)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (HEX(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((HEX(v0.c0)) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (HEX(v0.c0));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c0)))) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))AND((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE BINARY)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))AND((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))AND((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((t0.c0 COLLATE BINARY)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))AND((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0 COLLATE BINARY)AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))))AND((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))))));
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (((((((((((((t0.c0)AND(t0.c1)))OR(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (NOT ((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c0)AND(t0.c1)))OR(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((v0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (((((((((((((t0.c0)AND(t0.c1)))OR(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (NOT ((v0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (((((((((((((t0.c0)AND(t0.c1)))OR(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(v0.c2)))OR(v0.c0))))) IS TRUE)  as count FROM t0, v0 ORDER BY (NOT ((v0.c2 IN ()))) ASC);
SELECT COUNT(*) FROM t0, v0 WHERE ((+ (((((((((((((t0.c0)AND(t0.c1)))OR(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(v0.c2)))OR(v0.c0))))) ORDER BY (NOT ((v0.c2 IN ()))) ASC;
SELECT ALL * FROM v0 CROSS JOIN t0 ON CASE WHEN CASE t0.c2  WHEN v0.c2 THEN t0.c1 ELSE v0.c0 END THEN t0.c1 ELSE (~ (t0.c0)) END WHERE (((CAST(v0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CASE WHEN CASE t0.c2  WHEN v0.c2 THEN t0.c1 ELSE v0.c0 END THEN t0.c1 ELSE (~ (t0.c0)) END);
SELECT ALL * FROM v0 CROSS JOIN t0 ON CASE WHEN CASE t0.c2  WHEN v0.c2 THEN t0.c1 ELSE v0.c0 END THEN t0.c1 ELSE (~ (t0.c0)) END WHERE (((CAST(v0.c1 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c1 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON CASE WHEN CASE t0.c2  WHEN v0.c2 THEN t0.c1 ELSE v0.c0 END THEN t0.c1 ELSE (~ (t0.c0)) END);
SELECT ALL * FROM v0 CROSS JOIN t0 ON CASE WHEN CASE t0.c2  WHEN v0.c2 THEN t0.c1 ELSE v0.c0 END THEN t0.c1 ELSE (~ (t0.c0)) END WHERE (((CAST(v0.c1 AS TEXT)) NOTNULL));
SELECT ALL * FROM v0 WHERE (GLOB((((v0.c2))>((v0.c2))), CAST(v0.c1 AS BLOB))) ORDER BY (NOT (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((v0.c2))>((v0.c2))), CAST(v0.c1 AS BLOB))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT ALL * FROM v0 WHERE (GLOB((((v0.c2))>((v0.c2))), CAST(v0.c1 AS BLOB))) ORDER BY (NOT (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((v0.c2))>((v0.c2))), CAST(v0.c1 AS BLOB))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC);
SELECT ALL * FROM v0 WHERE (GLOB((((v0.c2))>((v0.c2))), CAST(v0.c1 AS BLOB))) ORDER BY (NOT (((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c1)))) ASC;
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c1)IS NOT(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)IS NOT(t0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c1)IS NOT(t0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)IS NOT(t0.c0)) IN ())) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE ((((t0.c1)IS NOT(t0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY 0.834402694037329 DESC, CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c0)GLOB(v0.c1)) ELSE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS LAST, ((((v0.c2)%(v0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY 0.834402694037329 DESC, CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c0)GLOB(v0.c1)) ELSE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS LAST, ((((v0.c2)%(v0.c2))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY 0.834402694037329 DESC, CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c0)GLOB(v0.c1)) ELSE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS LAST, ((((v0.c2)%(v0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY 0.834402694037329 DESC, CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c0)GLOB(v0.c1)) ELSE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS LAST, ((((v0.c2)%(v0.c2))) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY 0.834402694037329 DESC, CASE WHEN CAST(v0.c2 AS NUMERIC) THEN ((v0.c0)GLOB(v0.c1)) ELSE ((v0.c0) BETWEEN (v0.c1) AND (v0.c0)) END  NULLS LAST, ((((v0.c2)%(v0.c2))) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((+ (v0.c1)))IS NOT(((((v0.c1)OR(v0.c1)))AND(v0.c1)))), (((NULL)) NOT BETWEEN ((((NULL)*(v0.c0)))) AND ((CAST('tp\n4Za' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c1)))IS NOT(((((v0.c1)OR(v0.c1)))AND(v0.c1)))), (((NULL)) NOT BETWEEN ((((NULL)*(v0.c0)))) AND ((CAST('tp\n4Za' AS BLOB)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((+ (v0.c1)))IS NOT(((((v0.c1)OR(v0.c1)))AND(v0.c1)))), (((NULL)) NOT BETWEEN ((((NULL)*(v0.c0)))) AND ((CAST('tp\n4Za' AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((v0.c2) IS TRUE)  as count FROM v0 ORDER BY (((+ (v0.c1)))IS NOT(((((v0.c1)OR(v0.c1)))AND(v0.c1)))), (((NULL)) NOT BETWEEN ((((NULL)*(v0.c0)))) AND ((CAST('tp\n4Za' AS BLOB)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c2) ORDER BY (((+ (v0.c1)))IS NOT(((((v0.c1)OR(v0.c1)))AND(v0.c1)))), (((NULL)) NOT BETWEEN ((((NULL)*(v0.c0)))) AND ((CAST('tp\n4Za' AS BLOB))));
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.18916866807854282);
SELECT SUM(count) FROM (SELECT ((0.18916866807854282) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.18916866807854282);
SELECT SUM(count) FROM (SELECT ((0.18916866807854282) IS TRUE)  as count FROM v0, t0);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (0.18916866807854282);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c2)AND(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY 1497644795 COLLATE NOCASE  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)<(v0.c0)))))OR(CAST(v0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY 1497644795 COLLATE NOCASE  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)<(v0.c0)))))OR(CAST(v0.c2 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((v0.c2)AND(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) ORDER BY 1497644795 COLLATE NOCASE  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)<(v0.c0)))))OR(CAST(v0.c2 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c2)AND(v0.c1)))OR(v0.c1)))OR(v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END))) IS TRUE)  as count FROM v0 ORDER BY 1497644795 COLLATE NOCASE  NULLS FIRST, ((((((v0.c0) BETWEEN (v0.c2) AND (v0.c1)))AND(((v0.c0)<(v0.c0)))))OR(CAST(v0.c2 AS TEXT)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))=(((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))==(((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))=(((v0.c1)>>(v0.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (v0.c0)))==(((v0.c1)>>(v0.c1))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((NOT (v0.c0)))=(((v0.c1)>>(v0.c1)))));
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('ê2QQD */z')LIKE(v0.c0)) IN ())) ORDER BY ((CAST(t0.c1 AS NUMERIC))*(((v0.c0)OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('ê2QQD */z')LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c1 AS NUMERIC))*(((v0.c0)OR(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('ê2QQD */z')LIKE(v0.c0)) IN ())) ORDER BY ((CAST(t0.c1 AS NUMERIC))*(((v0.c0)OR(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('ê2QQD */z')LIKE(v0.c0)) IN ())) IS TRUE)  as count FROM t0, v0 ORDER BY ((CAST(t0.c1 AS NUMERIC))*(((v0.c0)OR(v0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, v0 WHERE (((('ê2QQD */z')LIKE(v0.c0)) IN ())) ORDER BY ((CAST(t0.c1 AS NUMERIC))*(((v0.c0)OR(v0.c0))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND('T3la')))OR((((((((('sé ³/q')AND(t0.c1)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1))))) ORDER BY LIKE(((t0.c1)*(t0.c0)), (((0X3ef96fae, t0.c1, t0.c0))<=((t0.c1, t0.c2, t0.c0))), 'A');
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c0)))AND('T3la')))OR((((((((('sé ³/q')AND(t0.c1)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY LIKE(((t0.c1)*(t0.c0)), (((0X3ef96fae, t0.c1, t0.c0))<=((t0.c1, t0.c2, t0.c0))), 'A'));
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND('T3la')))OR((((((((('sé ³/q')AND(t0.c1)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1))))) ORDER BY LIKE(((t0.c1)*(t0.c0)), (((0X3ef96fae, t0.c1, t0.c0))<=((t0.c1, t0.c2, t0.c0))), 'A');
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(t0.c0)))AND('T3la')))OR((((((((('sé ³/q')AND(t0.c1)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0 ORDER BY LIKE(((t0.c1)*(t0.c0)), (((0X3ef96fae, t0.c1, t0.c0))<=((t0.c1, t0.c2, t0.c0))), 'A'));
SELECT * FROM t0 WHERE (((((((t0.c2)AND(t0.c0)))AND('T3la')))OR((((((((('sé ³/q')AND(t0.c1)))OR(t0.c0)))OR(t0.c0)))OR(t0.c1))))) ORDER BY LIKE(((t0.c1)*(t0.c0)), (((0X3ef96fae, t0.c1, t0.c0))<=((t0.c1, t0.c2, t0.c0))), 'A');
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((NULL)/(((v0.c0)-(t0.c1)))) WHERE (((((((t0.c1)OR(v0.c0)))AND(t0.c1)))GLOB(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(v0.c0)))AND(t0.c1)))GLOB(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((NULL)/(((v0.c0)-(t0.c1)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((NULL)/(((v0.c0)-(t0.c1)))) WHERE (((((((t0.c1)OR(v0.c0)))AND(t0.c1)))GLOB(v0.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)OR(v0.c0)))AND(t0.c1)))GLOB(v0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t0 ON ((NULL)/(((v0.c0)-(t0.c1)))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t0 ON ((NULL)/(((v0.c0)-(t0.c1)))) WHERE (((((((t0.c1)OR(v0.c0)))AND(t0.c1)))GLOB(v0.c2 COLLATE NOCASE)));
SELECT ALL * FROM t0, v0 WHERE (((CAST(v0.c0 AS BLOB))>>(((v0.c2)OR(t0.c2))))) ORDER BY (+ (((t0.c1)LIKE(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))>>(((v0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY (+ (((t0.c1)LIKE(v0.c1)))));
SELECT ALL * FROM t0, v0 WHERE (((CAST(v0.c0 AS BLOB))>>(((v0.c2)OR(t0.c2))))) ORDER BY (+ (((t0.c1)LIKE(v0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))>>(((v0.c2)OR(t0.c2))))) IS TRUE)  as count FROM t0, v0 ORDER BY (+ (((t0.c1)LIKE(v0.c1)))));
SELECT ALL * FROM t0, v0 WHERE (((CAST(v0.c0 AS BLOB))>>(((v0.c2)OR(t0.c2))))) ORDER BY (+ (((t0.c1)LIKE(v0.c1))));
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1) ORDER BY CASE WHEN UPPER(DISTINCT v0.c1) THEN CAST(t0.c2 AS REAL) WHEN (NOT (t0.c0)) THEN ((v0.c2)-(v0.c2)) WHEN CAST('à²¤Dv' AS TEXT) THEN (((v0.c0))==((v0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN UPPER(DISTINCT v0.c1) THEN CAST(t0.c2 AS REAL) WHEN (NOT (t0.c0)) THEN ((v0.c2)-(v0.c2)) WHEN CAST('à²¤Dv' AS TEXT) THEN (((v0.c0))=((v0.c1))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1) ORDER BY CASE WHEN UPPER(DISTINCT v0.c1) THEN CAST(t0.c2 AS REAL) WHEN (NOT (t0.c0)) THEN ((v0.c2)-(v0.c2)) WHEN CAST('à²¤Dv' AS TEXT) THEN (((v0.c0))==((v0.c1))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c1) IS TRUE)  as count FROM v0, t0 ORDER BY CASE WHEN UPPER(DISTINCT v0.c1) THEN CAST(t0.c2 AS REAL) WHEN (NOT (t0.c0)) THEN ((v0.c2)-(v0.c2)) WHEN CAST('à²¤Dv' AS TEXT) THEN (((v0.c0))=((v0.c1))) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t0 WHERE (v0.c1) ORDER BY CASE WHEN UPPER(DISTINCT v0.c1) THEN CAST(t0.c2 AS REAL) WHEN (NOT (t0.c0)) THEN ((v0.c2)-(v0.c2)) WHEN CAST('à²¤Dv' AS TEXT) THEN (((v0.c0))==((v0.c1))) END ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c2 COLLATE BINARY WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 END THEN ((v0.c2)!=(v0.c1)) WHEN v0.c1 COLLATE RTRIM THEN v0.c1 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS TRUE) WHEN x'' THEN 0.45034013707717724 END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0))) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c2 COLLATE BINARY WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 END THEN ((v0.c2)!=(v0.c1)) WHEN v0.c1 COLLATE RTRIM THEN v0.c1 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS TRUE) WHEN x'' THEN 0.45034013707717724 END);
SELECT * FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c2 COLLATE BINARY WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 END THEN ((v0.c2)!=(v0.c1)) WHEN v0.c1 COLLATE RTRIM THEN v0.c1 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS TRUE) WHEN x'' THEN 0.45034013707717724 END;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c2)LIKE(v0.c0))) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c2 COLLATE BINARY WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 END THEN ((v0.c2)!=(v0.c1)) WHEN v0.c1 COLLATE RTRIM THEN v0.c1 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS TRUE) WHEN x'' THEN 0.45034013707717724 END);
SELECT * FROM v0 WHERE (((((v0.c2)LIKE(v0.c0))) BETWEEN (((v0.c2) IS TRUE)) AND (v0.c0))) ORDER BY CASE WHEN v0.c0 COLLATE NOCASE THEN v0.c2 COLLATE BINARY WHEN CASE v0.c2  WHEN v0.c0 THEN v0.c1 END THEN ((v0.c2)!=(v0.c1)) WHEN v0.c1 COLLATE RTRIM THEN v0.c1 WHEN v0.c0 COLLATE BINARY THEN ((v0.c0) IS TRUE) WHEN x'' THEN 0.45034013707717724 END;
SELECT ALL * FROM v0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((x'ff8c')<(t0.c2)))) AND (((v0.c1 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((x'ff8c')<(t0.c2)))) AND (((v0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((x'ff8c')<(t0.c2)))) AND (((v0.c1 IN (t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN ((((x'ff8c')<(t0.c2)))) AND (((v0.c1 IN (t0.c0)))))) IS TRUE)  as count FROM v0, t0);
SELECT ALL * FROM v0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((x'ff8c')<(t0.c2)))) AND (((v0.c1 IN (t0.c0))))));
SELECT ALL * FROM t0, v0 WHERE (((ROUND(t0.c1, v0.c0)) BETWEEN ((v0.c2 IN ())) AND ('-1687403757')));
SELECT SUM(count) FROM (SELECT ((((ROUND(t0.c1, v0.c0)) BETWEEN ((v0.c2 IN ())) AND ('-1687403757'))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((ROUND(t0.c1, v0.c0)) BETWEEN ((v0.c2 IN ())) AND ('-1687403757')));
SELECT SUM(count) FROM (SELECT ((((ROUND(t0.c1, v0.c0)) BETWEEN ((v0.c2 IN ())) AND ('-1687403757'))) IS TRUE)  as count FROM t0, v0);
SELECT ALL * FROM t0, v0 WHERE (((ROUND(t0.c1, v0.c0)) BETWEEN ((v0.c2 IN ())) AND ('-1687403757')));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (~ (CASE v0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c1 ELSE t0.c2 END)) WHERE (CAST(((t0.c2)IS(t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)IS(t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (~ (CASE v0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c1 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (~ (CASE v0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c1 ELSE t0.c2 END)) WHERE (CAST(((t0.c2)IS(t0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c2)IS(t0.c1)) AS TEXT)) IS TRUE)  as count FROM v0 CROSS JOIN t0 ON (~ (CASE v0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c1 ELSE t0.c2 END)));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN t0 ON (~ (CASE v0.c2  WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN t0.c1 ELSE t0.c2 END)) WHERE (CAST(((t0.c2)IS(t0.c1)) AS TEXT));
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((v0.c0)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE ((((v0.c0)) NOT BETWEEN ((v0.c1 COLLATE BINARY)) AND ((v0.c0))));
